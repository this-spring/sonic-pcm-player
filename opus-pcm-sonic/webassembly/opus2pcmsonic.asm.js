Module["asm"] =  (/** @suppress {uselessCode} */ function(global, env, buffer) {
'almost asm';


  var Int8View = global.Int8Array;
  var HEAP8 = new Int8View(buffer);
  var Int16View = global.Int16Array;
  var HEAP16 = new Int16View(buffer);
  var Int32View = global.Int32Array;
  var HEAP32 = new Int32View(buffer);
  var Uint8View = global.Uint8Array;
  var HEAPU8 = new Uint8View(buffer);
  var Uint16View = global.Uint16Array;
  var HEAPU16 = new Uint16View(buffer);
  var Uint32View = global.Uint32Array;
  var HEAPU32 = new Uint32View(buffer);
  var Float32View = global.Float32Array;
  var HEAPF32 = new Float32View(buffer);
  var Float64View = global.Float64Array;
  var HEAPF64 = new Float64View(buffer);
  var byteLength = global.byteLength;

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var Math_fround=global.Math.fround;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var abortStackOverflow=env.abortStackOverflow;
  var nullFunc_X=env.nullFunc_X;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiiiii=env.nullFunc_viiiiiii;
  var invoke_X=env.invoke_X;
  var invoke_ii=env.invoke_ii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var ___lock=env.___lock;
  var ___setErrNo=env.___setErrNo;
  var ___syscall140=env.___syscall140;
  var ___syscall146=env.___syscall146;
  var ___syscall54=env.___syscall54;
  var ___syscall6=env.___syscall6;
  var ___unlock=env.___unlock;
  var __exit=env.__exit;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _exit=env._exit;
  var _llvm_cttz_i32=env._llvm_cttz_i32;
  var _llvm_exp2_f32=env._llvm_exp2_f32;
  var _llvm_exp2_f64=env._llvm_exp2_f64;
  var _llvm_fabs_f32=env._llvm_fabs_f32;
  var _llvm_floor_f32=env._llvm_floor_f32;
  var _llvm_floor_f64=env._llvm_floor_f64;
  var _llvm_log10_f32=env._llvm_log10_f32;
  var _llvm_log10_f64=env._llvm_log10_f64;
  var _llvm_stackrestore=env._llvm_stackrestore;
  var _llvm_stacksave=env._llvm_stacksave;
  var flush_NO_FILESYSTEM=env.flush_NO_FILESYSTEM;
  var tempFloat = Math_fround(0);
  const f0 = Math_fround(0);

function _emscripten_replace_memory(newBuffer) {
  if ((byteLength(newBuffer) & 0xffffff || byteLength(newBuffer) <= 0xffffff) || byteLength(newBuffer) > 0x80000000) return false;
  HEAP8 = new Int8View(newBuffer);
  HEAP16 = new Int16View(newBuffer);
  HEAP32 = new Int32View(newBuffer);
  HEAPU8 = new Uint8View(newBuffer);
  HEAPU16 = new Uint16View(newBuffer);
  HEAPU32 = new Uint32View(newBuffer);
  HEAPF32 = new Float32View(newBuffer);
  HEAPF64 = new Float64View(newBuffer);
  buffer = newBuffer;
  return true;
}

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _init($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $7 = sp + 8|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 HEAP32[$7>>2] = 0;
 $9 = (_malloc(20)|0);
 $8 = $9;
 $10 = $4;
 $11 = $6;
 $12 = (_opus_decoder_create($10,$11,$7)|0);
 $13 = $8;
 HEAP32[$13>>2] = $12;
 $14 = HEAP32[$7>>2]|0;
 $15 = ($14|0)!=(0);
 if ($15) {
  $16 = HEAP32[$7>>2]|0;
  HEAP32[$vararg_buffer>>2] = $16;
  (_printf(37394,$vararg_buffer)|0);
  $3 = (-1);
  $37 = $3;
  STACKTOP = sp;return ($37|0);
 } else {
  $17 = $4;
  $18 = $5;
  $19 = (_InitRsData($17,$18)|0);
  $20 = $8;
  $21 = ((($20)) + 4|0);
  HEAP32[$21>>2] = $19;
  $22 = $5;
  $23 = $6;
  $24 = (_sonicCreateStream($22,$23)|0);
  $25 = $8;
  $26 = ((($25)) + 8|0);
  HEAP32[$26>>2] = $24;
  $27 = $8;
  $28 = ((($27)) + 8|0);
  $29 = HEAP32[$28>>2]|0;
  _sonicSetSpeed($29,Math_fround(1.0));
  $30 = (_malloc(48000)|0);
  $31 = $8;
  $32 = ((($31)) + 12|0);
  HEAP32[$32>>2] = $30;
  $33 = (_malloc(48000)|0);
  $34 = $8;
  $35 = ((($34)) + 16|0);
  HEAP32[$35>>2] = $33;
  $36 = $8;
  $3 = $36;
  $37 = $3;
  STACKTOP = sp;return ($37|0);
 }
 return (0)|0;
}
function _setSpeed($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = Math_fround(0), $11 = Math_fround(0), $12 = 0.0, $13 = 0, $14 = 0, $15 = 0, $16 = Math_fround(0), $2 = 0, $3 = 0, $4 = 0, $5 = Math_fround(0), $6 = 0, $7 = 0, $8 = 0, $9 = Math_fround(0), $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $4 = $6;
 $7 = $3;
 HEAP32[$vararg_buffer>>2] = $7;
 (_printf(37434,$vararg_buffer)|0);
 $8 = $3;
 $9 = (Math_fround(($8|0)));
 $10 = Math_fround($9 / Math_fround(100.0));
 $5 = $10;
 $11 = $5;
 $12 = +$11;
 HEAPF64[$vararg_buffer1>>3] = $12;
 (_printf(37454,$vararg_buffer1)|0);
 $13 = $4;
 $14 = ((($13)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $5;
 _sonicSetSpeed($15,$16);
 STACKTOP = sp;return;
}
function _MakePcmStream($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$alloca_mul = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2397584|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2397584|0);
 $13 = sp + 2349504|0;
 $14 = sp + 2341216|0;
 $16 = sp + 136208|0;
 $21 = sp + 88208|0;
 $24 = sp;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $26 = $5;
 $9 = $26;
 $27 = $9;
 $28 = ((($27)) + 12|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = $6;
 $31 = $7;
 _memcpy(($29|0),($30|0),($31|0))|0;
 $10 = 0;
 $11 = 0;
 $12 = 0;
 $15 = 0;
 $17 = 0;
 while(1) {
  $32 = $10;
  $33 = $7;
  $34 = ($32|0)<($33|0);
  $35 = $17;
  $36 = ($35|0)<=(500);
  $37 = $34 ? $36 : 0;
  if (!($37)) {
   break;
  }
  $38 = $17;
  $39 = (($38) + 1)|0;
  $17 = $39;
  $40 = $9;
  $41 = ((($40)) + 12|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = $10;
  $44 = (($42) + ($43)|0);
  $45 = HEAP8[$44>>0]|0;
  $46 = $45&255;
  $11 = $46;
  $47 = $9;
  $48 = ((($47)) + 12|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = $10;
  $51 = (($49) + ($50)|0);
  $52 = ((($51)) + 1|0);
  $53 = $11;
  _memcpy(($13|0),($52|0),($53|0))|0;
  $54 = $9;
  $55 = HEAP32[$54>>2]|0;
  $56 = $11;
  $57 = (_opus_decode($55,$13,$56,$14,48000,0)|0);
  $12 = $57;
  $58 = $12;
  $59 = $58;
  $60 = $59<<1;
  $61 = (_llvm_stacksave()|0);
  $18 = $61;
  $$alloca_mul = $60;
  $62 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
  $63 = $12;
  $64 = ($63|0)<(0);
  do {
   if ($64) {
    $4 = -1;
    $19 = 1;
   } else {
    $20 = 0;
    while(1) {
     $65 = $20;
     $66 = $12;
     $67 = $66;
     $68 = ($65|0)<($67|0);
     if (!($68)) {
      break;
     }
     $69 = $20;
     $70 = (($14) + ($69<<1)|0);
     $71 = HEAP16[$70>>1]|0;
     $72 = $71 << 16 >> 16;
     $73 = $72 & 255;
     $74 = $73&255;
     $75 = $20;
     $76 = $75<<1;
     $77 = (($62) + ($76)|0);
     HEAP8[$77>>0] = $74;
     $78 = $20;
     $79 = (($14) + ($78<<1)|0);
     $80 = HEAP16[$79>>1]|0;
     $81 = $80 << 16 >> 16;
     $82 = $81 >> 8;
     $83 = $82 & 255;
     $84 = $83&255;
     $85 = $20;
     $86 = $85<<1;
     $87 = (($86) + 1)|0;
     $88 = (($62) + ($87)|0);
     HEAP8[$88>>0] = $84;
     $89 = $20;
     $90 = (($89) + 1)|0;
     $20 = $90;
    }
    $91 = $20;
    $92 = $9;
    $93 = ((($92)) + 4|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = (_SrcLinear3($62,$21,$91,2,$94)|0);
    $22 = $95;
    $96 = $9;
    $97 = ((($96)) + 8|0);
    $98 = HEAP32[$97>>2]|0;
    $99 = $22;
    $100 = (_sonicWriteShortToStream($98,$21,$99)|0);
    $23 = $100;
    $101 = $23;
    $102 = ($101|0)!=(1);
    if ($102) {
     $4 = -1;
     $19 = 1;
     break;
    }
    $103 = $9;
    $104 = ((($103)) + 8|0);
    $105 = HEAP32[$104>>2]|0;
    $106 = $22;
    $107 = (_sonicReadShortFromStream($105,$24,$106)|0);
    $25 = $107;
    $108 = $25;
    $109 = ($108|0)!=(0);
    if ($109) {
     $110 = $15;
     $111 = (($16) + ($110)|0);
     $112 = $25;
     $113 = $112<<1;
     _memcpy(($111|0),($24|0),($113|0))|0;
     $114 = $25;
     $115 = $114<<1;
     $116 = $15;
     $117 = (($116) + ($115))|0;
     $15 = $117;
    }
    $118 = $11;
    $119 = (1 + ($118))|0;
    $120 = $10;
    $121 = (($120) + ($119))|0;
    $10 = $121;
    $19 = 0;
   }
  } while(0);
  $122 = $18;
  _llvm_stackrestore(($122|0));
  $123 = $19;
  $switch = ($123>>>0)<(1);
  if (!($switch)) {
   label = 16;
   break;
  }
 }
 if ((label|0) == 16) {
  $127 = $4;
  STACKTOP = sp;return ($127|0);
 }
 $124 = $8;
 $125 = $15;
 _memcpy(($124|0),($16|0),($125|0))|0;
 $126 = $15;
 $4 = $126;
 $127 = $4;
 STACKTOP = sp;return ($127|0);
}
function _OpusInitEncoder($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer17 = 0, $vararg_buffer2 = 0, $vararg_buffer20 = 0, $vararg_buffer23 = 0, $vararg_buffer5 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $vararg_buffer23 = sp + 64|0;
 $vararg_buffer20 = sp + 56|0;
 $vararg_buffer17 = sp + 48|0;
 $vararg_buffer14 = sp + 40|0;
 $vararg_buffer11 = sp + 32|0;
 $vararg_buffer8 = sp + 24|0;
 $vararg_buffer5 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $10 = sp + 84|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $15 = $5;
 $7 = $15;
 $16 = $6;
 $8 = $16;
 $17 = (_malloc(96004)|0);
 $9 = $17;
 $18 = $7;
 $19 = $8;
 $20 = (_InitRsData($18,$19)|0);
 $21 = $9;
 HEAP32[$21>>2] = $20;
 HEAP32[$10>>2] = 0;
 $11 = 1;
 $12 = 64000;
 $22 = (_malloc(20)|0);
 $13 = $22;
 $23 = (_opus_encoder_create(48000,1,2048,$10)|0);
 $24 = $13;
 HEAP32[$24>>2] = $23;
 $25 = $4;
 $26 = $25 << 1;
 $27 = $13;
 $28 = ((($27)) + 4|0);
 HEAP32[$28>>2] = $26;
 $29 = $4;
 $30 = $13;
 $31 = ((($30)) + 8|0);
 HEAP32[$31>>2] = $29;
 $32 = $4;
 $33 = ($32*10)|0;
 $34 = (4 + ($33))|0;
 $35 = (_malloc($34)|0);
 $36 = $13;
 $37 = ((($36)) + 12|0);
 HEAP32[$37>>2] = $35;
 $38 = (_malloc(2097156)|0);
 $39 = $13;
 $40 = ((($39)) + 16|0);
 HEAP32[$40>>2] = $38;
 $41 = HEAP32[$10>>2]|0;
 $42 = ($41|0)!=(0);
 if ($42) {
  $43 = HEAP32[$10>>2]|0;
  $44 = HEAP32[$10>>2]|0;
  $45 = (_opus_strerror($44)|0);
  HEAP32[$vararg_buffer>>2] = $43;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $45;
  (_printf(37475,$vararg_buffer)|0);
  $3 = 0;
  $71 = $3;
  STACKTOP = sp;return ($71|0);
 } else {
  $46 = $13;
  $47 = HEAP32[$46>>2]|0;
  HEAP32[$vararg_buffer2>>2] = 1103;
  (_opus_encoder_ctl($47,4008,$vararg_buffer2)|0);
  $48 = $13;
  $49 = HEAP32[$48>>2]|0;
  $50 = $12;
  HEAP32[$vararg_buffer5>>2] = $50;
  (_opus_encoder_ctl($49,4002,$vararg_buffer5)|0);
  $51 = $13;
  $52 = HEAP32[$51>>2]|0;
  HEAP32[$vararg_buffer8>>2] = 1;
  (_opus_encoder_ctl($52,4006,$vararg_buffer8)|0);
  $53 = $13;
  $54 = HEAP32[$53>>2]|0;
  $55 = $11;
  HEAP32[$vararg_buffer11>>2] = $55;
  (_opus_encoder_ctl($54,4010,$vararg_buffer11)|0);
  $56 = $13;
  $57 = HEAP32[$56>>2]|0;
  HEAP32[$vararg_buffer14>>2] = 0;
  (_opus_encoder_ctl($57,4012,$vararg_buffer14)|0);
  $58 = $13;
  $59 = HEAP32[$58>>2]|0;
  HEAP32[$vararg_buffer17>>2] = -1000;
  (_opus_encoder_ctl($59,4022,$vararg_buffer17)|0);
  $60 = $13;
  $61 = HEAP32[$60>>2]|0;
  HEAP32[$vararg_buffer20>>2] = 0;
  (_opus_encoder_ctl($61,4016,$vararg_buffer20)|0);
  $62 = $13;
  $63 = HEAP32[$62>>2]|0;
  HEAP32[$vararg_buffer23>>2] = 16;
  (_opus_encoder_ctl($63,4036,$vararg_buffer23)|0);
  $64 = (_malloc(8)|0);
  $14 = $64;
  $65 = $13;
  $66 = $14;
  HEAP32[$66>>2] = $65;
  $67 = $9;
  $68 = $14;
  $69 = ((($68)) + 4|0);
  HEAP32[$69>>2] = $67;
  $70 = $14;
  $3 = $70;
  $71 = $3;
  STACKTOP = sp;return ($71|0);
 }
 return (0)|0;
}
function _PCMEncoderData($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $vararg_buffer = sp;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $16 = $5;
 $9 = $16;
 $17 = $9;
 $18 = HEAP32[$17>>2]|0;
 $10 = $18;
 $19 = $9;
 $20 = ((($19)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $11 = $21;
 $22 = $11;
 $23 = ((($22)) + 4|0);
 $24 = $6;
 $25 = $7;
 $26 = $25<<1;
 _memcpy(($23|0),($24|0),($26|0))|0;
 $27 = $11;
 $28 = ((($27)) + 4|0);
 $29 = $11;
 $30 = ((($29)) + 48004|0);
 $31 = $7;
 $32 = $11;
 $33 = HEAP32[$32>>2]|0;
 $34 = (_SrcLinear3($28,$30,$31,2,$33)|0);
 $12 = $34;
 $35 = HEAP32[12336]|0;
 $36 = (38064 + ($35)|0);
 $37 = $11;
 $38 = ((($37)) + 48004|0);
 $39 = $12;
 $40 = $39<<1;
 _memcpy(($36|0),($38|0),($40|0))|0;
 $41 = $12;
 $42 = $41<<1;
 $43 = HEAP32[12336]|0;
 $44 = (($43) + ($42))|0;
 HEAP32[12336] = $44;
 $13 = -1;
 $14 = 0;
 while(1) {
  $45 = HEAP32[12336]|0;
  $46 = (2*480)|0;
  $47 = ($45|0)<($46|0);
  if ($47) {
   break;
  }
  $48 = $10;
  $49 = HEAP32[$48>>2]|0;
  $50 = $10;
  $51 = ((($50)) + 16|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ((($52)) + 4|0);
  $54 = $10;
  $55 = ((($54)) + 4|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = (_opus_encode($49,38064,480,$53,$56)|0);
  $15 = $57;
  $58 = (2*480)|0;
  $59 = (38064 + ($58)|0);
  $60 = HEAP32[12336]|0;
  $61 = (2*480)|0;
  $62 = (($60) - ($61))|0;
  _memcpy((38064|0),($59|0),($62|0))|0;
  $63 = (2*480)|0;
  $64 = HEAP32[12336]|0;
  $65 = (($64) - ($63))|0;
  HEAP32[12336] = $65;
  $66 = $15;
  $67 = ($66|0)<(0);
  if ($67) {
   $68 = $15;
   $69 = (_opus_strerror($68)|0);
   HEAP32[$vararg_buffer>>2] = $69;
   (_printf(37530,$vararg_buffer)|0);
  } else {
   $70 = HEAP32[12337]|0;
   $71 = (($70) + 1)|0;
   HEAP32[12337] = $71;
   $72 = $15;
   $73 = $72&255;
   $74 = $8;
   $75 = HEAP32[12338]|0;
   $76 = (($74) + ($75)|0);
   HEAP8[$76>>0] = $73;
   $77 = $8;
   $78 = HEAP32[12338]|0;
   $79 = (($77) + ($78)|0);
   $80 = ((($79)) + 1|0);
   $81 = $10;
   $82 = ((($81)) + 16|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = ((($83)) + 4|0);
   $85 = $15;
   _memcpy(($80|0),($84|0),($85|0))|0;
   $86 = $15;
   $87 = (($86) + 1)|0;
   $88 = HEAP32[12338]|0;
   $89 = (($88) + ($87))|0;
   HEAP32[12338] = $89;
  }
  $90 = HEAP32[12337]|0;
  $91 = (($90|0) % 10)&-1;
  $92 = ($91|0)==(0);
  if ($92) {
   label = 7;
   break;
  }
 }
 if ((label|0) == 7) {
  $13 = 1;
  $93 = HEAP32[12338]|0;
  $14 = $93;
  HEAP32[12338] = 0;
 }
 $94 = $13;
 $95 = ($94|0)==(1);
 if ($95) {
  $13 = -1;
  $96 = $14;
  $4 = $96;
  $97 = $4;
  STACKTOP = sp;return ($97|0);
 } else {
  $4 = -1;
  $97 = $4;
  STACKTOP = sp;return ($97|0);
 }
 return (0)|0;
}
function _SrcLinear3($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0.0, $144 = 0.0, $145 = 0, $146 = 0, $147 = 0, $148 = 0.0, $149 = 0.0, $15 = 0.0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0, $184 = 0, $185 = Math_fround(0), $186 = 0.0, $187 = 0.0, $188 = Math_fround(0), $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $20 = 0, $21 = 0, $22 = Math_fround(0), $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = Math_fround(0), $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = Math_fround(0), $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = Math_fround(0), $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $21 = $9;
 $22 = Math_fround(HEAPF32[$21>>2]);
 $23 = +$22;
 $24 = 1.0 / $23;
 $15 = $24;
 $25 = $9;
 $26 = ((($25)) + 16|0);
 $27 = HEAP32[$26>>2]|0;
 $16 = $27;
 $28 = $9;
 $29 = ((($28)) + 8|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = $9;
 $32 = ((($31)) + 12|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = (($30) + ($33<<1)|0);
 $35 = $5;
 $36 = $7;
 $37 = $36 << 1;
 _memcpy(($34|0),($35|0),($37|0))|0;
 $38 = $7;
 $39 = $9;
 $40 = ((($39)) + 12|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = (($41) + ($38))|0;
 HEAP32[$40>>2] = $42;
 while(1) {
  $43 = $9;
  $44 = ((($43)) + 4|0);
  $45 = Math_fround(HEAPF32[$44>>2]);
  $46 = (~~(($45)));
  $17 = $46;
  $47 = $17;
  $48 = $16;
  $49 = (($47) - ($48))|0;
  $50 = $9;
  $51 = ((($50)) + 12|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = (($52) - 1)|0;
  $54 = ($49>>>0)>=($53>>>0);
  if ($54) {
   break;
  }
  $131 = $17;
  $132 = $9;
  $133 = ((($132)) + 16|0);
  HEAP32[$133>>2] = $131;
  $134 = $9;
  $135 = ((($134)) + 8|0);
  $136 = HEAP32[$135>>2]|0;
  $137 = $9;
  $138 = ((($137)) + 16|0);
  $139 = HEAP32[$138>>2]|0;
  $140 = $16;
  $141 = (($139) - ($140))|0;
  $142 = (($136) + ($141<<1)|0);
  $11 = $142;
  $143 = $15;
  $144 = 32768.0 * $143;
  $145 = $9;
  $146 = ((($145)) + 28|0);
  $147 = HEAP32[$146>>2]|0;
  $148 = (+($147|0));
  $149 = $144 * $148;
  $150 = (~~(($149)));
  $151 = $150 & 32767;
  $152 = $151&65535;
  $10 = $152;
  $153 = $11;
  $154 = ((($153)) + 2|0);
  $11 = $154;
  $155 = HEAP16[$153>>1]|0;
  $156 = $155 << 16 >> 16;
  $13 = $156;
  $157 = $11;
  $158 = HEAP16[$157>>1]|0;
  $159 = $158 << 16 >> 16;
  $14 = $159;
  $160 = $10;
  $161 = $160 << 16 >> 16;
  $162 = (32768 - ($161))|0;
  $163 = $13;
  $164 = Math_imul($163, $162)|0;
  $13 = $164;
  $165 = $10;
  $166 = $165 << 16 >> 16;
  $167 = $14;
  $168 = Math_imul($167, $166)|0;
  $14 = $168;
  $169 = $13;
  $170 = $14;
  $171 = (($169) + ($170))|0;
  $12 = $171;
  $172 = $12;
  $173 = (_WordToHword($172,15)|0);
  $174 = $9;
  $175 = ((($174)) + 20|0);
  $176 = HEAP32[$175>>2]|0;
  $177 = $9;
  $178 = ((($177)) + 24|0);
  $179 = HEAP32[$178>>2]|0;
  $180 = (($179) + 1)|0;
  HEAP32[$178>>2] = $180;
  $181 = (($176) + ($179<<1)|0);
  HEAP16[$181>>1] = $173;
  $182 = $15;
  $183 = $9;
  $184 = ((($183)) + 4|0);
  $185 = Math_fround(HEAPF32[$184>>2]);
  $186 = +$185;
  $187 = $186 + $182;
  $188 = Math_fround($187);
  HEAPF32[$184>>2] = $188;
  $189 = $9;
  $190 = ((($189)) + 28|0);
  $191 = HEAP32[$190>>2]|0;
  $192 = (($191) + 1)|0;
  HEAP32[$190>>2] = $192;
 }
 $55 = $9;
 $56 = ((($55)) + 16|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = $16;
 $59 = (($57) - ($58))|0;
 $18 = $59;
 $60 = $9;
 $61 = ((($60)) + 8|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = $9;
 $64 = ((($63)) + 8|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = $18;
 $67 = (($65) + ($66<<1)|0);
 $68 = $9;
 $69 = ((($68)) + 12|0);
 $70 = HEAP32[$69>>2]|0;
 $71 = $18;
 $72 = (($70) - ($71))|0;
 $73 = $72 << 1;
 _memcpy(($62|0),($67|0),($73|0))|0;
 $74 = $18;
 $75 = $9;
 $76 = ((($75)) + 12|0);
 $77 = HEAP32[$76>>2]|0;
 $78 = (($77) - ($74))|0;
 HEAP32[$76>>2] = $78;
 $79 = $9;
 $80 = ((($79)) + 12|0);
 $81 = HEAP32[$80>>2]|0;
 $82 = (+($81|0));
 $83 = $15;
 $84 = $82 * $83;
 $85 = Math_fround($84);
 $86 = $9;
 $87 = ((($86)) + 4|0);
 HEAPF32[$87>>2] = $85;
 $88 = $9;
 $89 = ((($88)) + 4|0);
 $90 = Math_fround(HEAPF32[$89>>2]);
 $91 = (~~(($90)));
 $92 = (($91) - 1)|0;
 $93 = $9;
 $94 = ((($93)) + 16|0);
 HEAP32[$94>>2] = $92;
 $95 = $9;
 $96 = ((($95)) + 28|0);
 HEAP32[$96>>2] = 0;
 $97 = $9;
 $98 = ((($97)) + 24|0);
 $99 = HEAP32[$98>>2]|0;
 $100 = $8;
 $101 = (($99|0) / ($100|0))&-1;
 $19 = $101;
 $102 = $19;
 $103 = $8;
 $104 = Math_imul($102, $103)|0;
 $20 = $104;
 $105 = $6;
 $106 = $9;
 $107 = ((($106)) + 20|0);
 $108 = HEAP32[$107>>2]|0;
 $109 = $20;
 $110 = $109 << 1;
 _memcpy(($105|0),($108|0),($110|0))|0;
 $111 = $9;
 $112 = ((($111)) + 20|0);
 $113 = HEAP32[$112>>2]|0;
 $114 = $9;
 $115 = ((($114)) + 20|0);
 $116 = HEAP32[$115>>2]|0;
 $117 = $20;
 $118 = (($116) + ($117<<1)|0);
 $119 = $9;
 $120 = ((($119)) + 24|0);
 $121 = HEAP32[$120>>2]|0;
 $122 = $20;
 $123 = (($121) - ($122))|0;
 $124 = $123 << 1;
 _memcpy(($113|0),($118|0),($124|0))|0;
 $125 = $20;
 $126 = $9;
 $127 = ((($126)) + 24|0);
 $128 = HEAP32[$127>>2]|0;
 $129 = (($128) - ($125))|0;
 HEAP32[$127>>2] = $129;
 $130 = $20;
 STACKTOP = sp;return ($130|0);
}
function _WordToHword($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$store$select = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $3;
 $7 = (($6) - 1)|0;
 $8 = 1 << $7;
 $5 = $8;
 $9 = $5;
 $10 = $2;
 $11 = (($10) + ($9))|0;
 $2 = $11;
 $12 = $3;
 $13 = $2;
 $14 = $13 >> $12;
 $2 = $14;
 $15 = $2;
 $16 = ($15|0)>(32767);
 $spec$store$select = $16 ? -32768 : $14;
 $2 = $spec$store$select;
 $17 = $2;
 $18 = $17&65535;
 $4 = $18;
 $19 = $4;
 STACKTOP = sp;return ($19|0);
}
function _InitRsData($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0.0, $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = (_malloc(32)|0);
 $4 = $5;
 $6 = $3;
 $7 = (+($6|0));
 $8 = $2;
 $9 = (+($8|0));
 $10 = $7 / $9;
 $11 = Math_fround($10);
 $12 = $4;
 HEAPF32[$12>>2] = $11;
 $13 = (_malloc(2097152)|0);
 $14 = $4;
 $15 = ((($14)) + 8|0);
 HEAP32[$15>>2] = $13;
 $16 = $4;
 $17 = ((($16)) + 12|0);
 HEAP32[$17>>2] = 0;
 $18 = $4;
 $19 = ((($18)) + 16|0);
 HEAP32[$19>>2] = 0;
 $20 = (_malloc(2097152)|0);
 $21 = $4;
 $22 = ((($21)) + 20|0);
 HEAP32[$22>>2] = $20;
 $23 = $4;
 $24 = ((($23)) + 24|0);
 HEAP32[$24>>2] = 0;
 $25 = $4;
 $26 = ((($25)) + 28|0);
 HEAP32[$26>>2] = 0;
 $27 = $4;
 $28 = ((($27)) + 4|0);
 HEAPF32[$28>>2] = Math_fround(0.0);
 $29 = $4;
 STACKTOP = sp;return ($29|0);
}
function _resampling_factor($0) {
 $0 = $0|0;
 var $$0 = 0, $switch$split12D = 0, $switch$split2D = 0, $switch$split42D = 0, $switch$split72D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $switch$split2D = ($0|0)<(16000);
 L1: do {
  if ($switch$split2D) {
   $switch$split12D = ($0|0)<(12000);
   if ($switch$split12D) {
    switch ($0|0) {
    case 8000:  {
     break;
    }
    default: {
     label = 6;
     break L1;
    }
    }
    $$0 = 6;
    break;
   } else {
    switch ($0|0) {
    case 12000:  {
     break;
    }
    default: {
     label = 6;
     break L1;
    }
    }
    $$0 = 4;
    break;
   }
  } else {
   $switch$split42D = ($0|0)<(24000);
   if ($switch$split42D) {
    switch ($0|0) {
    case 16000:  {
     break;
    }
    default: {
     label = 6;
     break L1;
    }
    }
    $$0 = 3;
    break;
   }
   $switch$split72D = ($0|0)<(48000);
   if (!($switch$split72D)) {
    switch ($0|0) {
    case 48000:  {
     $$0 = 1;
     break L1;
     break;
    }
    default: {
     label = 6;
     break L1;
    }
    }
   }
   switch ($0|0) {
   case 24000:  {
    break;
   }
   default: {
    label = 6;
    break L1;
   }
   }
   $$0 = 2;
  }
 } while(0);
 if ((label|0) == 6) {
  $$0 = 0;
 }
 return ($$0|0);
}
function _comb_filter($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = Math_fround($5);
 $6 = Math_fround($6);
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 var $$0142152 = Math_fround(0), $$0142152$phi = Math_fround(0), $$0143151 = Math_fround(0), $$0143151$phi = Math_fround(0), $$0144150 = Math_fround(0), $$0145 = 0, $$0146$lcssa = 0, $$0146149 = 0, $$0153 = Math_fround(0), $$0153$phi = Math_fround(0), $$04451$i = Math_fround(0), $$04451$i$phi = Math_fround(0), $$04550$i = Math_fround(0), $$04550$i$phi = Math_fround(0), $$04649$i = Math_fround(0), $$04649$i$phi = Math_fround(0), $$04748$i = Math_fround(0), $$052$i = 0, $100 = Math_fround(0), $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = Math_fround(0), $114 = 0, $115 = Math_fround(0), $116 = 0, $117 = Math_fround(0), $118 = 0, $119 = Math_fround(0), $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = Math_fround(0), $124 = 0, $125 = Math_fround(0), $126 = Math_fround(0), $127 = Math_fround(0), $128 = Math_fround(0), $129 = Math_fround(0), $13 = 0, $130 = Math_fround(0), $131 = Math_fround(0), $132 = Math_fround(0), $133 = Math_fround(0), $134 = 0, $135 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = Math_fround(0), $23 = Math_fround(0), $24 = 0, $25 = Math_fround(0), $26 = Math_fround(0), $27 = 0, $28 = Math_fround(0), $29 = Math_fround(0), $30 = 0, $31 = Math_fround(0), $32 = Math_fround(0), $33 = 0, $34 = Math_fround(0), $35 = Math_fround(0), $36 = 0, $37 = Math_fround(0);
 var $38 = Math_fround(0), $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = 0, $49 = Math_fround(0), $50 = 0, $51 = Math_fround(0), $52 = 0, $53 = Math_fround(0), $54 = 0, $55 = 0, $56 = 0, $57 = Math_fround(0);
 var $58 = 0, $59 = Math_fround(0), $60 = Math_fround(0), $61 = 0, $62 = Math_fround(0), $63 = Math_fround(0), $64 = Math_fround(0), $65 = 0, $66 = 0, $67 = Math_fround(0), $68 = Math_fround(0), $69 = Math_fround(0), $70 = Math_fround(0), $71 = 0, $72 = 0, $73 = Math_fround(0), $74 = 0, $75 = 0, $76 = Math_fround(0), $77 = Math_fround(0);
 var $78 = Math_fround(0), $79 = Math_fround(0), $80 = Math_fround(0), $81 = 0, $82 = 0, $83 = Math_fround(0), $84 = 0, $85 = 0, $86 = Math_fround(0), $87 = Math_fround(0), $88 = Math_fround(0), $89 = Math_fround(0), $90 = Math_fround(0), $91 = Math_fround(0), $92 = Math_fround(0), $93 = Math_fround(0), $94 = Math_fround(0), $95 = Math_fround(0), $96 = Math_fround(0), $97 = Math_fround(0);
 var $98 = Math_fround(0), $99 = Math_fround(0), $exitcond = 0, $exitcond$i = 0, $or$cond = 0, $or$cond147 = 0, $or$cond148 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $12 = $5 == Math_fround(0.0);
 $13 = $6 == Math_fround(0.0);
 $or$cond = $12 & $13;
 if ($or$cond) {
  $14 = ($1|0)==($0|0);
  if ($14) {
   return;
  }
  $15 = $4 << 2;
  _memmove(($0|0),($1|0),($15|0))|0;
  return;
 }
 $16 = ($2|0)>(15);
 $17 = $16 ? $2 : 15;
 $18 = ($3|0)>(15);
 $19 = $18 ? $3 : 15;
 $20 = (0 - ($19))|0;
 $21 = (1056 + (($7*12)|0)|0);
 $22 = Math_fround(HEAPF32[$21>>2]);
 $23 = Math_fround($22 * $5);
 $24 = (((1056 + (($7*12)|0)|0)) + 4|0);
 $25 = Math_fround(HEAPF32[$24>>2]);
 $26 = Math_fround($25 * $5);
 $27 = (((1056 + (($7*12)|0)|0)) + 8|0);
 $28 = Math_fround(HEAPF32[$27>>2]);
 $29 = Math_fround($28 * $5);
 $30 = (1056 + (($8*12)|0)|0);
 $31 = Math_fround(HEAPF32[$30>>2]);
 $32 = Math_fround($31 * $6);
 $33 = (((1056 + (($8*12)|0)|0)) + 4|0);
 $34 = Math_fround(HEAPF32[$33>>2]);
 $35 = Math_fround($34 * $6);
 $36 = (((1056 + (($8*12)|0)|0)) + 8|0);
 $37 = Math_fround(HEAPF32[$36>>2]);
 $38 = Math_fround($37 * $6);
 $39 = (1 - ($19))|0;
 $40 = $19 ^ -1;
 $41 = (-2 - ($19))|0;
 $42 = $5 == $6;
 $43 = ($17|0)==($19|0);
 $or$cond147 = $43 & $42;
 $44 = ($7|0)==($8|0);
 $or$cond148 = $or$cond147 & $44;
 $$0145 = $or$cond148 ? 0 : $10;
 $45 = ($$0145|0)>(0);
 if ($45) {
  $46 = (($1) + ($41<<2)|0);
  $47 = Math_fround(HEAPF32[$46>>2]);
  $48 = (($1) + ($40<<2)|0);
  $49 = Math_fround(HEAPF32[$48>>2]);
  $50 = (($1) + ($20<<2)|0);
  $51 = Math_fround(HEAPF32[$50>>2]);
  $52 = (($1) + ($39<<2)|0);
  $53 = Math_fround(HEAPF32[$52>>2]);
  $54 = (2 - ($19))|0;
  $$0142152 = $49;$$0143151 = $51;$$0144150 = $53;$$0146149 = 0;$$0153 = $47;
  while(1) {
   $55 = (($54) + ($$0146149))|0;
   $56 = (($1) + ($55<<2)|0);
   $57 = Math_fround(HEAPF32[$56>>2]);
   $58 = (($9) + ($$0146149<<2)|0);
   $59 = Math_fround(HEAPF32[$58>>2]);
   $60 = Math_fround($59 * $59);
   $61 = (($1) + ($$0146149<<2)|0);
   $62 = Math_fround(HEAPF32[$61>>2]);
   $63 = Math_fround(Math_fround(1.0) - $60);
   $64 = Math_fround($23 * $63);
   $65 = (($$0146149) - ($17))|0;
   $66 = (($1) + ($65<<2)|0);
   $67 = Math_fround(HEAPF32[$66>>2]);
   $68 = Math_fround($67 * $64);
   $69 = Math_fround($62 + $68);
   $70 = Math_fround($26 * $63);
   $71 = (($65) + 1)|0;
   $72 = (($1) + ($71<<2)|0);
   $73 = Math_fround(HEAPF32[$72>>2]);
   $74 = (($65) + -1)|0;
   $75 = (($1) + ($74<<2)|0);
   $76 = Math_fround(HEAPF32[$75>>2]);
   $77 = Math_fround($73 + $76);
   $78 = Math_fround($70 * $77);
   $79 = Math_fround($69 + $78);
   $80 = Math_fround($29 * $63);
   $81 = (($65) + 2)|0;
   $82 = (($1) + ($81<<2)|0);
   $83 = Math_fround(HEAPF32[$82>>2]);
   $84 = (($65) + -2)|0;
   $85 = (($1) + ($84<<2)|0);
   $86 = Math_fround(HEAPF32[$85>>2]);
   $87 = Math_fround($83 + $86);
   $88 = Math_fround($80 * $87);
   $89 = Math_fround($79 + $88);
   $90 = Math_fround($32 * $60);
   $91 = Math_fround($$0143151 * $90);
   $92 = Math_fround($91 + $89);
   $93 = Math_fround($35 * $60);
   $94 = Math_fround($$0144150 + $$0142152);
   $95 = Math_fround($94 * $93);
   $96 = Math_fround($95 + $92);
   $97 = Math_fround($38 * $60);
   $98 = Math_fround($$0153 + $57);
   $99 = Math_fround($98 * $97);
   $100 = Math_fround($99 + $96);
   $101 = (($0) + ($$0146149<<2)|0);
   HEAPF32[$101>>2] = $100;
   $102 = (($$0146149) + 1)|0;
   $exitcond = ($102|0)==($$0145|0);
   if ($exitcond) {
    $$0146$lcssa = $$0145;
    break;
   } else {
    $$0153$phi = $$0142152;$$0143151$phi = $$0144150;$$0142152$phi = $$0143151;$$0144150 = $57;$$0146149 = $102;$$0153 = $$0153$phi;$$0143151 = $$0143151$phi;$$0142152 = $$0142152$phi;
   }
  }
 } else {
  $$0146$lcssa = 0;
 }
 if ($13) {
  $103 = ($1|0)==($0|0);
  if ($103) {
   return;
  }
  $104 = (($4) - ($$0145))|0;
  $105 = $104 << 2;
  $106 = (($1) + ($$0145<<2)|0);
  $107 = (($0) + ($$0145<<2)|0);
  _memmove(($107|0),($106|0),($105|0))|0;
  return;
 }
 $108 = (($0) + ($$0146$lcssa<<2)|0);
 $109 = (($1) + ($$0146$lcssa<<2)|0);
 $110 = (($4) - ($$0146$lcssa))|0;
 $111 = ($110|0)>(0);
 if (!($111)) {
  return;
 }
 $112 = (($109) + ($39<<2)|0);
 $113 = Math_fround(HEAPF32[$112>>2]);
 $114 = (($109) + ($20<<2)|0);
 $115 = Math_fround(HEAPF32[$114>>2]);
 $116 = (($109) + ($40<<2)|0);
 $117 = Math_fround(HEAPF32[$116>>2]);
 $118 = (($109) + ($41<<2)|0);
 $119 = Math_fround(HEAPF32[$118>>2]);
 $120 = (2 - ($19))|0;
 $$04451$i = $119;$$04550$i = $117;$$04649$i = $115;$$04748$i = $113;$$052$i = 0;
 while(1) {
  $121 = (($120) + ($$052$i))|0;
  $122 = (($109) + ($121<<2)|0);
  $123 = Math_fround(HEAPF32[$122>>2]);
  $124 = (($109) + ($$052$i<<2)|0);
  $125 = Math_fround(HEAPF32[$124>>2]);
  $126 = Math_fround($32 * $$04649$i);
  $127 = Math_fround($126 + $125);
  $128 = Math_fround($$04550$i + $$04748$i);
  $129 = Math_fround($35 * $128);
  $130 = Math_fround($129 + $127);
  $131 = Math_fround($$04451$i + $123);
  $132 = Math_fround($38 * $131);
  $133 = Math_fround($132 + $130);
  $134 = (($108) + ($$052$i<<2)|0);
  HEAPF32[$134>>2] = $133;
  $135 = (($$052$i) + 1)|0;
  $exitcond$i = ($135|0)==($110|0);
  if ($exitcond$i) {
   break;
  } else {
   $$04649$i$phi = $$04748$i;$$04550$i$phi = $$04649$i;$$04451$i$phi = $$04550$i;$$04748$i = $123;$$052$i = $135;$$04649$i = $$04649$i$phi;$$04550$i = $$04550$i$phi;$$04451$i = $$04451$i$phi;
  }
 }
 return;
}
function _init_caps($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$019 = 0, $$pre = 0, $$pre20 = 0, $$pre21 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)>(0);
 if (!($6)) {
  return;
 }
 $7 = ((($0)) + 32|0);
 $8 = ((($0)) + 104|0);
 $9 = $2 << 1;
 $10 = (($3) + -1)|0;
 $11 = (($10) + ($9))|0;
 $$pre = HEAP32[$7>>2]|0;
 $$pre20 = HEAP16[$$pre>>1]|0;
 $$pre21 = HEAP32[$8>>2]|0;
 $$019 = 0;$17 = $$pre20;$21 = $5;
 while(1) {
  $12 = (($$019) + 1)|0;
  $13 = (($$pre) + ($12<<1)|0);
  $14 = HEAP16[$13>>1]|0;
  $15 = $14 << 16 >> 16;
  $16 = $17 << 16 >> 16;
  $18 = (($15) - ($16))|0;
  $19 = $18 << $2;
  $20 = Math_imul($21, $11)|0;
  $22 = (($20) + ($$019))|0;
  $23 = (($$pre21) + ($22)|0);
  $24 = HEAP8[$23>>0]|0;
  $25 = $24&255;
  $26 = (($25) + 64)|0;
  $27 = Math_imul($19, $3)|0;
  $28 = Math_imul($27, $26)|0;
  $29 = $28 >> 2;
  $30 = (($1) + ($$019<<2)|0);
  HEAP32[$30>>2] = $29;
  $31 = HEAP32[$4>>2]|0;
  $32 = ($12|0)<($31|0);
  if ($32) {
   $$019 = $12;$17 = $14;$21 = $31;
  } else {
   break;
  }
 }
 return;
}
function _opus_strerror($0) {
 $0 = $0|0;
 var $$0 = 0, $$off = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$off = (($0) + 7)|0;
 $1 = ($$off>>>0)>(7);
 if ($1) {
  $$0 = 37580;
  return ($$0|0);
 }
 $2 = (0 - ($0))|0;
 $3 = (1104 + ($2<<2)|0);
 $4 = HEAP32[$3>>2]|0;
 $$0 = $4;
 return ($$0|0);
}
function _opus_decoder_init($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $switch$split22D = 0, $switch$split2D = 0, $switch$split52D = 0;
 var $switch$split82D = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 $switch$split2D = ($1|0)<(16000);
 L1: do {
  if ($switch$split2D) {
   $switch$split22D = ($1|0)<(12000);
   if ($switch$split22D) {
    switch ($1|0) {
    case 8000:  {
     break L1;
     break;
    }
    default: {
     $$0 = -1;
    }
    }
    STACKTOP = sp;return ($$0|0);
   } else {
    switch ($1|0) {
    case 12000:  {
     break L1;
     break;
    }
    default: {
     $$0 = -1;
    }
    }
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $switch$split52D = ($1|0)<(24000);
   if ($switch$split52D) {
    switch ($1|0) {
    case 16000:  {
     break L1;
     break;
    }
    default: {
     $$0 = -1;
    }
    }
    STACKTOP = sp;return ($$0|0);
   }
   $switch$split82D = ($1|0)<(48000);
   if ($switch$split82D) {
    switch ($1|0) {
    case 24000:  {
     break L1;
     break;
    }
    default: {
     $$0 = -1;
    }
    }
    STACKTOP = sp;return ($$0|0);
   } else {
    switch ($1|0) {
    case 48000:  {
     break L1;
     break;
    }
    default: {
     $$0 = -1;
    }
    }
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 $5 = (($2) + -1)|0;
 $6 = ($5>>>0)>(1);
 if ($6) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $7 = (_silk_Get_Decoder_Size($3)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = HEAP32[$3>>2]|0;
  $10 = (($9) + 3)|0;
  $11 = $10 & -4;
  HEAP32[$3>>2] = $11;
  $12 = (_celt_decoder_get_size($2)|0);
  $13 = HEAP32[$3>>2]|0;
  $14 = (($12) + 88)|0;
  $15 = (($14) + ($13))|0;
  $$0$i = $15;
 } else {
  $$0$i = 0;
 }
 _memset(($0|0),0,($$0$i|0))|0;
 $16 = (_silk_Get_Decoder_Size($4)|0);
 $17 = ($16|0)==(0);
 if (!($17)) {
  $$0 = -3;
  STACKTOP = sp;return ($$0|0);
 }
 $18 = HEAP32[$4>>2]|0;
 $19 = (($18) + 3)|0;
 $20 = $19 & -4;
 HEAP32[$4>>2] = $20;
 $21 = ((($0)) + 4|0);
 HEAP32[$21>>2] = 88;
 $22 = (($20) + 88)|0;
 HEAP32[$0>>2] = $22;
 $23 = ((($0)) + 88|0);
 $24 = (($0) + ($22)|0);
 $25 = ((($0)) + 8|0);
 HEAP32[$25>>2] = $2;
 $26 = ((($0)) + 48|0);
 HEAP32[$26>>2] = $2;
 $27 = ((($0)) + 12|0);
 HEAP32[$27>>2] = $1;
 $28 = ((($0)) + 24|0);
 HEAP32[$28>>2] = $1;
 $29 = ((($0)) + 16|0);
 HEAP32[$29>>2] = $2;
 $30 = (_silk_InitDecoder($23)|0);
 $31 = ($30|0)==(0);
 if (!($31)) {
  $$0 = -3;
  STACKTOP = sp;return ($$0|0);
 }
 $32 = (_celt_decoder_init($24,$1,$2)|0);
 $33 = ($32|0)==(0);
 if (!($33)) {
  $$0 = -3;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$vararg_buffer>>2] = 0;
 (_opus_custom_decoder_ctl($24,10016,$vararg_buffer)|0);
 $34 = ((($0)) + 60|0);
 HEAP32[$34>>2] = 0;
 $35 = (($1>>>0) / 400)&-1;
 $36 = ((($0)) + 64|0);
 HEAP32[$36>>2] = $35;
 $37 = ((($0)) + 44|0);
 HEAP32[$37>>2] = 0;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _opus_decoder_create($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$034 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $switch$split12D = 0, $switch$split2D = 0, $switch$split42D = 0, $switch$split72D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $switch$split2D = ($0|0)<(16000);
 L1: do {
  if ($switch$split2D) {
   $switch$split12D = ($0|0)<(12000);
   if ($switch$split12D) {
    switch ($0|0) {
    case 8000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     label = 3;
     break L1;
    }
    }
   } else {
    switch ($0|0) {
    case 12000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     label = 3;
     break L1;
    }
    }
   }
  } else {
   $switch$split42D = ($0|0)<(24000);
   if ($switch$split42D) {
    switch ($0|0) {
    case 16000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     label = 3;
     break L1;
    }
    }
   }
   $switch$split72D = ($0|0)<(48000);
   if ($switch$split72D) {
    switch ($0|0) {
    case 24000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     label = 3;
     break L1;
    }
    }
   } else {
    switch ($0|0) {
    case 48000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     label = 3;
     break L1;
    }
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 2) {
   $4 = (($1) + -1)|0;
   $5 = ($4>>>0)>(1);
   if ($5) {
    label = 3;
   } else {
    $7 = (_silk_Get_Decoder_Size($3)|0);
    $8 = ($7|0)==(0);
    if ($8) {
     $9 = HEAP32[$3>>2]|0;
     $10 = (($9) + 3)|0;
     $11 = $10 & -4;
     HEAP32[$3>>2] = $11;
     $12 = (_celt_decoder_get_size($1)|0);
     $13 = HEAP32[$3>>2]|0;
     $14 = (($12) + 88)|0;
     $15 = (($14) + ($13))|0;
     $$0$i = $15;
    } else {
     $$0$i = 0;
    }
    $16 = (_malloc($$0$i)|0);
    $17 = ($16|0)==(0|0);
    if ($17) {
     $18 = ($2|0)==(0|0);
     if ($18) {
      $$034 = 0;
      break;
     }
     HEAP32[$2>>2] = -7;
     $$034 = 0;
     break;
    }
    $19 = (_opus_decoder_init($16,$0,$1)|0);
    $20 = ($2|0)==(0|0);
    if (!($20)) {
     HEAP32[$2>>2] = $19;
    }
    $21 = ($19|0)==(0);
    if ($21) {
     $$034 = $16;
    } else {
     _free($16);
     $$034 = 0;
    }
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $6 = ($2|0)==(0|0);
  if ($6) {
   $$034 = 0;
  } else {
   HEAP32[$2>>2] = -1;
   $$034 = 0;
  }
 }
 STACKTOP = sp;return ($$034|0);
}
function _opus_decode_native($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$$i = 0, $$0$i166 = 0, $$0150191 = 0, $$0152190 = 0, $$0153 = 0, $$0153$i = 0, $$0153$i159 = 0, $$0157$lcssa = 0, $$0157189 = 0, $$1154 = 0, $$1154$i = 0, $$1154$i162 = 0, $$6 = 0, $$6$i164174 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$val = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $addconv$i = 0, $or$cond10 = 0, $or$cond4 = 0, $or$cond6 = 0, $or$cond8 = 0, $spec$select$i = 0, $spec$store$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $9 = sp + 96|0;
 $10 = sp + 100|0;
 $11 = sp;
 $12 = ($5>>>0)>(1);
 if ($12) {
  $$6 = -1;
  STACKTOP = sp;return ($$6|0);
 }
 $13 = ($5|0)!=(0);
 $14 = ($2|0)==(0);
 $or$cond4 = $14 | $13;
 $15 = ($1|0)==(0|0);
 $or$cond6 = $15 | $or$cond4;
 if ($or$cond6) {
  $16 = ((($0)) + 12|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = (($17|0) / 400)&-1;
  $19 = (($4|0) % ($18|0))&-1;
  $20 = ($19|0)==(0);
  if (!($20)) {
   $$6 = -1;
   STACKTOP = sp;return ($$6|0);
  }
 }
 $or$cond8 = $15 | $14;
 if ($or$cond8) {
  $21 = ((($0)) + 8|0);
  $$0153 = 0;
  while(1) {
   $22 = HEAP32[$21>>2]|0;
   $23 = Math_imul($22, $$0153)|0;
   $24 = (($3) + ($23<<2)|0);
   $25 = (($4) - ($$0153))|0;
   $26 = (_opus_decode_frame($0,0,0,$24,$25,0)|0);
   $27 = ($26|0)<(0);
   $28 = $27 ? 0 : $26;
   $$1154 = (($28) + ($$0153))|0;
   if ($27) {
    $$6 = $26;
    label = 42;
    break;
   }
   $29 = ($$1154|0)<($4|0);
   if ($29) {
    $$0153 = $$1154;
   } else {
    break;
   }
  }
  if ((label|0) == 42) {
   STACKTOP = sp;return ($$6|0);
  }
  $30 = ((($0)) + 72|0);
  HEAP32[$30>>2] = $$1154;
  $$6 = $$1154;
  STACKTOP = sp;return ($$6|0);
 }
 $31 = ($2|0)<(0);
 if ($31) {
  $$6 = -1;
  STACKTOP = sp;return ($$6|0);
 }
 $$val = HEAP8[$1>>0]|0;
 $32 = $$val&255;
 $33 = $32 & 128;
 $34 = ($33|0)==(0);
 $35 = $32 & 96;
 $36 = ($35|0)==(96);
 $$$i = $36 ? 1001 : 1000;
 $spec$select$i = $34 ? $$$i : 1002;
 do {
  if ($34) {
   if ($36) {
    $41 = $32 >>> 4;
    $42 = $41 & 1;
    $43 = $42 | 1104;
    $$0$i166 = $43;
    break;
   } else {
    $44 = $32 >>> 5;
    $45 = $44 & 3;
    $46 = (($45) + 1101)|0;
    $$0$i166 = $46;
    break;
   }
  } else {
   $37 = $32 >>> 5;
   $38 = $37 & 3;
   $39 = (($38) + 1102)|0;
   $40 = ($38|0)==(0);
   $spec$store$select$i = $40 ? 1101 : $39;
   $$0$i166 = $spec$store$select$i;
  }
 } while(0);
 $47 = ((($0)) + 12|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = (_opus_packet_get_samples_per_frame($1,$48)|0);
 $50 = HEAP8[$1>>0]|0;
 $51 = ($50&255) >>> 2;
 $52 = $51 & 1;
 $addconv$i = (($52) + 1)<<24>>24;
 $53 = $addconv$i&255;
 $54 = (_opus_packet_parse_impl($1,$2,$6,$10,0,$11,$9,$7)|0);
 $55 = ($54|0)<(0);
 if ($55) {
  $$6 = $54;
  STACKTOP = sp;return ($$6|0);
 }
 $56 = HEAP32[$9>>2]|0;
 $57 = (($1) + ($56)|0);
 if (!($13)) {
  $104 = Math_imul($54, $49)|0;
  $105 = ($104|0)>($4|0);
  if ($105) {
   $$6 = -2;
   STACKTOP = sp;return ($$6|0);
  }
  $106 = ((($0)) + 56|0);
  HEAP32[$106>>2] = $spec$select$i;
  $107 = ((($0)) + 52|0);
  HEAP32[$107>>2] = $$0$i166;
  $108 = ((($0)) + 64|0);
  HEAP32[$108>>2] = $49;
  $109 = ((($0)) + 48|0);
  HEAP32[$109>>2] = $53;
  $110 = ($54|0)>(0);
  L36: do {
   if ($110) {
    $111 = ((($0)) + 8|0);
    $$0150191 = $57;$$0152190 = 0;$$0157189 = 0;
    while(1) {
     $112 = (($11) + ($$0152190<<1)|0);
     $113 = HEAP16[$112>>1]|0;
     $114 = $113 << 16 >> 16;
     $115 = HEAP32[$111>>2]|0;
     $116 = Math_imul($115, $$0157189)|0;
     $117 = (($3) + ($116<<2)|0);
     $118 = (($4) - ($$0157189))|0;
     $119 = (_opus_decode_frame($0,$$0150191,$114,$117,$118,0)|0);
     $120 = ($119|0)<(0);
     if ($120) {
      $$6 = $119;
      break;
     }
     $121 = (($119) + ($$0157189))|0;
     $122 = HEAP16[$112>>1]|0;
     $123 = $122 << 16 >> 16;
     $124 = (($$0150191) + ($123)|0);
     $125 = (($$0152190) + 1)|0;
     $126 = ($125|0)<($54|0);
     if ($126) {
      $$0150191 = $124;$$0152190 = $125;$$0157189 = $121;
     } else {
      $$0157$lcssa = $121;
      break L36;
     }
    }
    STACKTOP = sp;return ($$6|0);
   } else {
    $$0157$lcssa = 0;
   }
  } while(0);
  $127 = ((($0)) + 72|0);
  HEAP32[$127>>2] = $$0157$lcssa;
  $128 = ($8|0)==(0);
  if ($128) {
   $132 = ((($0)) + 80|0);
   HEAPF32[$132>>2] = Math_fround(0.0);
   $133 = ((($0)) + 76|0);
   HEAPF32[$133>>2] = Math_fround(0.0);
   $$6 = $$0157$lcssa;
   STACKTOP = sp;return ($$6|0);
  } else {
   $129 = ((($0)) + 8|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ((($0)) + 76|0);
   _opus_pcm_soft_clip($3,$$0157$lcssa,$130,$131);
   $$6 = $$0157$lcssa;
   STACKTOP = sp;return ($$6|0);
  }
 }
 $58 = ($49|0)>($4|0);
 $59 = ($spec$select$i|0)==(1002);
 $or$cond10 = $59 | $58;
 if (!($or$cond10)) {
  $60 = ((($0)) + 56|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = ($61|0)==(1002);
  if (!($62)) {
   $77 = ((($0)) + 72|0);
   $78 = HEAP32[$77>>2]|0;
   $79 = (($4) - ($49))|0;
   $80 = ($79|0)==(0);
   L52: do {
    if ($80) {
     $$pre = ((($0)) + 8|0);
     $$pre$phiZ2D = $$pre;
    } else {
     $81 = HEAP32[$47>>2]|0;
     $82 = (($81|0) / 400)&-1;
     $83 = (($79|0) % ($82|0))&-1;
     $84 = ($83|0)==(0);
     L55: do {
      if ($84) {
       $85 = ((($0)) + 8|0);
       $$0153$i159 = 0;
       while(1) {
        $86 = HEAP32[$85>>2]|0;
        $87 = Math_imul($86, $$0153$i159)|0;
        $88 = (($3) + ($87<<2)|0);
        $89 = (($79) - ($$0153$i159))|0;
        $90 = (_opus_decode_frame($0,0,0,$88,$89,0)|0);
        $91 = ($90|0)<(0);
        $92 = $91 ? 0 : $90;
        $$1154$i162 = (($92) + ($$0153$i159))|0;
        if ($91) {
         $$6$i164174 = $90;
         break L55;
        }
        $93 = ($$1154$i162|0)<($79|0);
        if ($93) {
         $$0153$i159 = $$1154$i162;
        } else {
         break;
        }
       }
       HEAP32[$77>>2] = $$1154$i162;
       $$pre$phiZ2D = $85;
       break L52;
      } else {
       $$6$i164174 = -1;
      }
     } while(0);
     HEAP32[$77>>2] = $78;
     $$6 = $$6$i164174;
     STACKTOP = sp;return ($$6|0);
    }
   } while(0);
   HEAP32[$60>>2] = $spec$select$i;
   $94 = ((($0)) + 52|0);
   HEAP32[$94>>2] = $$0$i166;
   $95 = ((($0)) + 64|0);
   HEAP32[$95>>2] = $49;
   $96 = ((($0)) + 48|0);
   HEAP32[$96>>2] = $53;
   $97 = HEAP16[$11>>1]|0;
   $98 = $97 << 16 >> 16;
   $99 = HEAP32[$$pre$phiZ2D>>2]|0;
   $100 = Math_imul($99, $79)|0;
   $101 = (($3) + ($100<<2)|0);
   $102 = (_opus_decode_frame($0,$57,$98,$101,$49,1)|0);
   $103 = ($102|0)<(0);
   if ($103) {
    $$6 = $102;
    STACKTOP = sp;return ($$6|0);
   }
   HEAP32[$77>>2] = $4;
   $$6 = $4;
   STACKTOP = sp;return ($$6|0);
  }
 }
 $63 = HEAP32[$47>>2]|0;
 $64 = (($63|0) / 400)&-1;
 $65 = (($4|0) % ($64|0))&-1;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $$6 = -1;
  STACKTOP = sp;return ($$6|0);
 }
 $67 = ((($0)) + 8|0);
 $$0153$i = 0;
 while(1) {
  $68 = HEAP32[$67>>2]|0;
  $69 = Math_imul($68, $$0153$i)|0;
  $70 = (($3) + ($69<<2)|0);
  $71 = (($4) - ($$0153$i))|0;
  $72 = (_opus_decode_frame($0,0,0,$70,$71,0)|0);
  $73 = ($72|0)<(0);
  $74 = $73 ? 0 : $72;
  $$1154$i = (($74) + ($$0153$i))|0;
  if ($73) {
   $$6 = $72;
   label = 42;
   break;
  }
  $75 = ($$1154$i|0)<($4|0);
  if ($75) {
   $$0153$i = $$1154$i;
  } else {
   break;
  }
 }
 if ((label|0) == 42) {
  STACKTOP = sp;return ($$6|0);
 }
 $76 = ((($0)) + 72|0);
 HEAP32[$76>>2] = $$1154$i;
 $$6 = $$1154$i;
 STACKTOP = sp;return ($$6|0);
}
function _opus_decode_frame($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$$ = 0, $$03335$us$i = 0, $$03335$us$i477 = 0, $$03335$us$i486 = 0, $$03335$us$i495 = 0, $$034$us$i = 0, $$034$us$i479 = 0, $$034$us$i488 = 0, $$034$us$i497 = 0, $$0417504512$ph = 0, $$0417504512606 = 0, $$0420 = 0, $$0421 = 0, $$0423 = 0, $$0423$us = 0, $$0425 = 0, $$0425$us = 0, $$0427502513$ph = 0, $$0427502513605 = 0;
 var $$0427503 = 0, $$0437 = 0, $$0438610 = 0, $$0441 = 0, $$0443 = 0, $$0446514$ph = 0, $$0446514604 = 0, $$0446515530539 = 0, $$0447575$us = 0, $$0448543 = 0, $$0451533535 = 0, $$0455609 = 0, $$1419544 = 0, $$1442 = 0, $$1450542 = 0, $$2445516$ph = 0, $$2445516601 = 0, $$2453541 = 0, $$3431581 = 0, $$4 = 0;
 var $$4432571$us = 0, $$460 = 0, $$461 = 0, $$5 = 0, $$5433568 = 0, $$6566 = 0, $$alloca_mul = 0, $$alloca_mul35 = 0, $$alloca_mul37 = 0, $$alloca_mul40 = 0, $$idx$val = 0, $$idx$val$pre = 0, $$idx470$val$pre = 0, $$idx471$val = 0, $$idx472$val = 0, $$idx473 = 0, $$idx473$val = 0, $$idx474 = 0, $$idx474$val = 0, $$not = 0;
 var $$ph = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink616 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = Math_fround(0), $215 = 0, $216 = 0, $217 = 0, $218 = Math_fround(0), $219 = Math_fround(0), $22 = 0, $220 = Math_fround(0), $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = Math_fround(0), $244 = Math_fround(0), $245 = 0, $246 = 0, $247 = 0, $248 = Math_fround(0), $249 = Math_fround(0), $25 = 0, $250 = Math_fround(0), $251 = 0, $252 = Math_fround(0), $253 = Math_fround(0), $254 = Math_fround(0), $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = Math_fround(0), $279 = Math_fround(0), $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = Math_fround(0), $284 = Math_fround(0), $285 = Math_fround(0), $286 = 0, $287 = Math_fround(0), $288 = Math_fround(0), $289 = Math_fround(0), $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = Math_fround(0), $311 = Math_fround(0), $312 = 0;
 var $313 = 0, $314 = 0, $315 = Math_fround(0), $316 = Math_fround(0), $317 = Math_fround(0), $318 = 0, $319 = Math_fround(0), $32 = 0, $320 = Math_fround(0), $321 = Math_fround(0), $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = Math_fround(0);
 var $331 = Math_fround(0), $332 = 0, $333 = 0, $334 = 0, $335 = Math_fround(0), $336 = Math_fround(0), $337 = Math_fround(0), $338 = 0, $339 = Math_fround(0), $34 = 0, $340 = Math_fround(0), $341 = Math_fround(0), $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = Math_fround(0), $348 = Math_fround(0), $349 = 0.0;
 var $35 = 0, $350 = 0.0, $351 = 0.0, $352 = Math_fround(0), $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = Math_fround(0), $359 = Math_fround(0), $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;
 var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i480 = 0, $exitcond$i489 = 0, $exitcond$i498 = 0;
 var $exitcond41$i = 0, $exitcond41$i481 = 0, $exitcond41$i490 = 0, $exitcond41$i499 = 0, $narrow = 0, $not$ = 0, $or$cond$i = 0, $or$cond$i475 = 0, $or$cond$i484 = 0, $or$cond$i493 = 0, $or$cond11 = 0, $or$cond13555 = 0, $or$cond19 = 0, $or$cond457 = 0, $or$cond458 = 0, $or$cond459 = 0, $or$cond468 = 0, $or$cond613 = 0, $or$cond9 = 0, $spec$select = 0;
 var $spec$select462 = 0, $spec$select463 = 0, $spec$select464 = 0, $spec$select467 = 0, $spec$select469 = 0, $spec$select556 = 0, $switch$select = 0, $switch$select619 = 0, $switch$selectcmp = 0, $switch$selectcmp618 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer18 = 0, $vararg_buffer21 = 0, $vararg_buffer23 = 0, $vararg_buffer26 = 0, $vararg_buffer4 = 0;
 var $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $vararg_buffer26 = sp + 80|0;
 $vararg_buffer23 = sp + 72|0;
 $vararg_buffer21 = sp + 64|0;
 $vararg_buffer18 = sp + 56|0;
 $vararg_buffer15 = sp + 48|0;
 $vararg_buffer13 = sp + 40|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $6 = sp + 96|0;
 $7 = sp + 92|0;
 $8 = sp + 88|0;
 $9 = sp + 144|0;
 $10 = sp + 84|0;
 HEAP32[$8>>2] = 0;
 $11 = ((($0)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($0) + ($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = (($0) + ($14)|0);
 $16 = ((($0)) + 12|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (($17|0) / 50)&-1;
 $19 = $18 >> 1;
 $20 = $18 >> 2;
 $21 = $18 >> 3;
 $22 = ($21|0)>($4|0);
 if ($22) {
  $$5 = -2;
  STACKTOP = sp;return ($$5|0);
 }
 $23 = (($17|0) / 25)&-1;
 $24 = ($23*3)|0;
 $25 = ($24|0)>($4|0);
 $$ = $25 ? $4 : $24;
 $26 = ($2|0)<(2);
 do {
  if ($26) {
   $27 = ((($0)) + 64|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($$|0)<($28|0);
   $$$ = $29 ? $$ : $28;
   $$0427503 = $$$;
   label = 5;
  } else {
   $30 = ($1|0)==(0|0);
   if ($30) {
    $$0427503 = $$;
    label = 5;
   } else {
    $55 = ((($0)) + 64|0);
    $56 = HEAP32[$55>>2]|0;
    $57 = ((($0)) + 56|0);
    $58 = HEAP32[$57>>2]|0;
    _ec_dec_init($6,$1,$2);
    $59 = ((($0)) + 60|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = ($60|0)>(0);
    if ($61) {
     $62 = ($58|0)==(1002);
     $$not = $62 ^ 1;
     $63 = ($60|0)==(1002);
     $or$cond459 = $63 | $$not;
     if ($or$cond459) {
      label = 17;
     } else {
      $64 = ((($0)) + 68|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($65|0)==(0);
      if (!($66)) {
       label = 17;
      }
     }
     if ((label|0) == 17) {
      if ($62) {
       $$0417504512$ph = $1;$$0427502513$ph = $$;$$0446514$ph = 1002;$$2445516$ph = $56;$$ph = 1;
       label = 19;
       break;
      }
      if (!($63)) {
       $$0417504512$ph = $1;$$0427502513$ph = $$;$$0446514$ph = $58;$$2445516$ph = $56;$$ph = 1;
       label = 19;
       break;
      }
     }
     $69 = ((($0)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = Math_imul($70, $20)|0;
     $$460 = $62 ? $71 : 1;
     $$461 = $62 ? 1 : $71;
     $72 = (_llvm_stacksave()|0);
     $$alloca_mul = $$460<<2;
     $73 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
     $74 = ($58|0)==(1002);
     if ($74) {
      $75 = ($20|0)<($56|0);
      $76 = $75 ? $20 : $56;
      (_opus_decode_frame($0,0,0,$73,$76,0)|0);
      $$0417504512606 = $1;$$0427502513605 = $$;$$0438610 = $$461;$$0441 = $73;$$0446514604 = 1002;$$0455609 = 1;$$2445516601 = $56;$134 = 1;$374 = $72;$375 = $74;
     } else {
      $$0417504512606 = $1;$$0427502513605 = $$;$$0438610 = $$461;$$0441 = 0;$$0446514604 = $58;$$0455609 = 1;$$2445516601 = $56;$134 = 1;$374 = $72;$375 = $74;
     }
    } else {
     $$0417504512$ph = $1;$$0427502513$ph = $$;$$0446514$ph = $58;$$2445516$ph = $56;$$ph = 1;
     label = 19;
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $31 = ((($0)) + 60|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($32|0)==(0);
   if ($33) {
    $34 = ((($0)) + 8|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = Math_imul($35, $$0427503)|0;
    $37 = ($36|0)>(0);
    if (!($37)) {
     $$5 = $$0427503;
     STACKTOP = sp;return ($$5|0);
    }
    $38 = $36 << 2;
    _memset(($3|0),0,($38|0))|0;
    $$5 = $$0427503;
    STACKTOP = sp;return ($$5|0);
   }
   $39 = ($$0427503|0)>($18|0);
   if (!($39)) {
    $50 = ($$0427503|0)<($18|0);
    if (!($50)) {
     $$0417504512$ph = 0;$$0427502513$ph = $$0427503;$$0446514$ph = $32;$$2445516$ph = $$0427503;$$ph = 0;
     label = 19;
     break;
    }
    $51 = ($$0427503|0)>($19|0);
    $52 = ($32|0)!=(1000);
    $53 = ($$0427503|0)>($20|0);
    $or$cond457 = $53 & $52;
    $54 = ($$0427503|0)<($19|0);
    $or$cond458 = $54 & $or$cond457;
    $spec$select469 = $or$cond458 ? $20 : $$0427503;
    $spec$select556 = $51 ? $19 : $spec$select469;
    $$0417504512$ph = 0;$$0427502513$ph = $$0427503;$$0446514$ph = $32;$$2445516$ph = $spec$select556;$$ph = 0;
    label = 19;
    break;
   }
   $40 = ((($0)) + 8|0);
   $$0421 = $3;$$0443 = $$0427503;
   while(1) {
    $41 = ($$0443|0)<($18|0);
    $42 = $41 ? $$0443 : $18;
    $43 = (_opus_decode_frame($0,0,0,$$0421,$42,0)|0);
    $44 = ($43|0)<(0);
    $45 = (($$0443) - ($43))|0;
    if ($44) {
     $$5 = $43;
     label = 113;
     break;
    }
    $46 = HEAP32[$40>>2]|0;
    $47 = Math_imul($46, $43)|0;
    $48 = (($$0421) + ($47<<2)|0);
    $49 = ($45|0)>(0);
    if ($49) {
     $$0421 = $48;$$0443 = $45;
    } else {
     $$5 = $$0427503;
     label = 113;
     break;
    }
   }
   if ((label|0) == 113) {
    STACKTOP = sp;return ($$5|0);
   }
  }
 } while(0);
 if ((label|0) == 19) {
  $67 = (_llvm_stacksave()|0);
  $68 = ($$0446514$ph|0)==(1002);
  $$0417504512606 = $$0417504512$ph;$$0427502513605 = $$0427502513$ph;$$0438610 = 1;$$0441 = 0;$$0446514604 = $$0446514$ph;$$0455609 = 0;$$2445516601 = $$2445516$ph;$134 = $$ph;$374 = $67;$375 = $68;
 }
 $77 = ($$2445516601|0)>($$0427502513605|0);
 L38: do {
  if ($77) {
   $$4 = -1;
  } else {
   do {
    if ($375) {
     $78 = STACKTOP; STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);;
     $79 = ($5|0)==(0);
     $$0446515530539 = 1002;$$0448543 = 0;$$1419544 = $2;$$1450542 = 0;$$2453541 = 0;$173 = 0;$184 = 0;$196 = $79;$216 = $78;
    } else {
     $80 = ((($0)) + 8|0);
     $81 = ($19|0)>($$2445516601|0);
     $82 = $81 ? $19 : $$2445516601;
     $83 = HEAP32[$80>>2]|0;
     $84 = Math_imul($83, $82)|0;
     $$alloca_mul35 = $84<<1;
     $85 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul35)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul35)|0)+15)&-16)|0);;
     $86 = ((($0)) + 60|0);
     $87 = HEAP32[$86>>2]|0;
     $88 = ($87|0)==(1002);
     if ($88) {
      (_silk_InitDecoder($13)|0);
     }
     $89 = ($$2445516601*1000)|0;
     $90 = HEAP32[$16>>2]|0;
     $91 = (($89|0) / ($90|0))&-1;
     $92 = ($91|0)>(10);
     $spec$select = $92 ? $91 : 10;
     $93 = ((($0)) + 16|0);
     $94 = ((($0)) + 32|0);
     HEAP32[$94>>2] = $spec$select;
     if ($134) {
      $95 = ((($0)) + 48|0);
      $96 = HEAP32[$95>>2]|0;
      $97 = ((($0)) + 20|0);
      HEAP32[$97>>2] = $96;
      $98 = ($$0446514604|0)==(1000);
      if ($98) {
       $99 = ((($0)) + 52|0);
       $100 = HEAP32[$99>>2]|0;
       $switch$selectcmp = ($100|0)==(1102);
       $switch$select = $switch$selectcmp ? 12000 : 16000;
       $switch$selectcmp618 = ($100|0)==(1101);
       $switch$select619 = $switch$selectcmp618 ? 8000 : $switch$select;
       $$sink616 = $switch$select619;
      } else {
       $$sink616 = 16000;
      }
      $101 = ((($0)) + 28|0);
      HEAP32[$101>>2] = $$sink616;
     }
     $102 = ($$0417504512606|0)==(0|0);
     $103 = $5 << 1;
     $104 = $102 ? 1 : $103;
     $105 = ((($0)) + 44|0);
     $106 = ($104|0)==(0);
     if ($106) {
      $$0423$us = $85;$$0425$us = 0;
      while(1) {
       $107 = ($$0425$us|0)==(0);
       $108 = $107&1;
       $109 = HEAP32[$105>>2]|0;
       $110 = (_silk_Decode($13,$93,0,$108,$6,$$0423$us,$7,$109)|0);
       $111 = ($110|0)==(0);
       if (!($111)) {
        $$4 = -3;
        break L38;
       }
       $112 = HEAP32[$7>>2]|0;
       $113 = HEAP32[$80>>2]|0;
       $114 = Math_imul($113, $112)|0;
       $115 = (($$0423$us) + ($114<<1)|0);
       $116 = (($112) + ($$0425$us))|0;
       $117 = ($116|0)<($$2445516601|0);
       if ($117) {
        $$0423$us = $115;$$0425$us = $116;
       } else {
        break;
       }
      }
     } else {
      $$0423 = $85;$$0425 = 0;
      while(1) {
       $118 = ($$0425|0)==(0);
       $119 = $118&1;
       $120 = HEAP32[$105>>2]|0;
       $121 = (_silk_Decode($13,$93,$104,$119,$6,$$0423,$7,$120)|0);
       $122 = ($121|0)==(0);
       if (!($122)) {
        HEAP32[$7>>2] = $$2445516601;
        $123 = HEAP32[$80>>2]|0;
        $124 = Math_imul($123, $$2445516601)|0;
        $125 = ($124|0)>(0);
        if ($125) {
         $126 = $124 << 1;
         _memset(($$0423|0),0,($126|0))|0;
        }
       }
       $127 = HEAP32[$7>>2]|0;
       $128 = HEAP32[$80>>2]|0;
       $129 = Math_imul($128, $127)|0;
       $130 = (($$0423) + ($129<<1)|0);
       $131 = (($127) + ($$0425))|0;
       $132 = ($131|0)<($$2445516601|0);
       if ($132) {
        $$0423 = $130;$$0425 = $131;
       } else {
        break;
       }
      }
     }
     $133 = ($5|0)==(0);
     $or$cond9 = $133 & $134;
     if ($or$cond9) {
      $$idx473 = ((($6)) + 20|0);
      $$idx473$val = HEAP32[$$idx473>>2]|0;
      $$idx474 = ((($6)) + 28|0);
      $$idx474$val = HEAP32[$$idx474>>2]|0;
      $135 = (Math_clz32(($$idx474$val|0))|0);
      $136 = ((($0)) + 56|0);
      $137 = HEAP32[$136>>2]|0;
      $138 = ($137|0)==(1001);
      $139 = $138 ? 20 : 0;
      $140 = (($$idx473$val) + -15)|0;
      $141 = (($140) + ($135))|0;
      $142 = (($141) + ($139))|0;
      $143 = $2 << 3;
      $144 = ($142|0)>($143|0);
      if ($144) {
       $$0446515530539 = $$0446514604;$$0448543 = 0;$$1419544 = $2;$$1450542 = 0;$$2453541 = 0;$173 = 1;$184 = 17;$196 = 1;$216 = $85;
      } else {
       $145 = ($$0446514604|0)==(1001);
       if ($145) {
        $146 = (_ec_dec_bit_logp($6,12)|0);
        $147 = ($146|0)==(0);
        if ($147) {
         $$0446515530539 = 1001;$$0448543 = 0;$$1419544 = $2;$$1450542 = 0;$$2453541 = 0;$173 = 1;$184 = 17;$196 = 1;$216 = $85;
         break;
        }
        $148 = (_ec_dec_bit_logp($6,1)|0);
        $149 = (_ec_dec_uint($6,256)|0);
        $150 = (($149) + 2)|0;
        $$idx$val$pre = HEAP32[$$idx473>>2]|0;
        $$idx470$val$pre = HEAP32[$$idx474>>2]|0;
        $$pre = (Math_clz32(($$idx470$val$pre|0))|0);
        $$0451533535 = $146;$$idx$val = $$idx$val$pre;$$pre$phiZ2D = $$pre;$158 = $150;$376 = $148;
       } else {
        $151 = (_ec_dec_bit_logp($6,1)|0);
        $$idx471$val = HEAP32[$$idx473>>2]|0;
        $$idx472$val = HEAP32[$$idx474>>2]|0;
        $152 = (Math_clz32(($$idx472$val|0))|0);
        $153 = (($$idx471$val) + -25)|0;
        $154 = (($153) + ($152))|0;
        $155 = $154 >> 3;
        $156 = (($2) - ($155))|0;
        $$0451533535 = 1;$$idx$val = $$idx471$val;$$pre$phiZ2D = $152;$158 = $156;$376 = $151;
       }
       $157 = (($2) - ($158))|0;
       $159 = $157 << 3;
       $160 = (($$idx$val) + -32)|0;
       $161 = (($160) + ($$pre$phiZ2D))|0;
       $162 = ($159|0)<($161|0);
       $spec$select462 = $162 ? 0 : $$0451533535;
       $spec$select463 = $162 ? 0 : $158;
       $spec$select464 = $162 ? 0 : $157;
       $163 = ((($6)) + 4|0);
       $164 = HEAP32[$163>>2]|0;
       $165 = (($164) - ($spec$select463))|0;
       HEAP32[$163>>2] = $165;
       $$0446515530539 = $$0446514604;$$0448543 = $376;$$1419544 = $spec$select464;$$1450542 = $spec$select463;$$2453541 = $spec$select462;$173 = 1;$184 = 17;$196 = 1;$216 = $85;
      }
     } else {
      $$0446515530539 = $$0446514604;$$0448543 = 0;$$1419544 = $2;$$1450542 = 0;$$2453541 = 0;$173 = 1;$184 = 17;$196 = $133;$216 = $85;
     }
    }
   } while(0);
   $166 = ((($0)) + 52|0);
   $167 = HEAP32[$166>>2]|0;
   switch ($167|0) {
   case 1101:  {
    $$0420 = 13;
    break;
   }
   case 1103: case 1102:  {
    $$0420 = 17;
    break;
   }
   case 1104:  {
    $$0420 = 19;
    break;
   }
   default: {
    $$0420 = 21;
   }
   }
   HEAP32[$vararg_buffer>>2] = $$0420;
   (_opus_custom_decoder_ctl($15,10012,$vararg_buffer)|0);
   $168 = ((($0)) + 48|0);
   $169 = HEAP32[$168>>2]|0;
   HEAP32[$vararg_buffer1>>2] = $169;
   (_opus_custom_decoder_ctl($15,10008,$vararg_buffer1)|0);
   $170 = ($$2453541|0)!=(0);
   $spec$select467 = $170 ? 1 : $$0438610;
   $$alloca_mul37 = $spec$select467<<2;
   $171 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul37)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul37)|0)+15)&-16)|0);;
   $not$ = $170 ^ 1;
   $172 = $$0455609 & $not$;
   $or$cond11 = $173 & $172;
   if ($or$cond11) {
    $174 = ($20|0)<($$2445516601|0);
    $175 = $174 ? $20 : $$2445516601;
    (_opus_decode_frame($0,0,0,$171,$175,0)|0);
    $$1442 = $171;
   } else {
    $$1442 = $$0441;
   }
   if ($170) {
    $178 = ((($0)) + 8|0);
    $179 = HEAP32[$178>>2]|0;
    $180 = Math_imul($179, $20)|0;
    $$alloca_mul40 = $180<<2;
    $181 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul40)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul40)|0)+15)&-16)|0);;
    $182 = ($$0448543|0)==(0);
    if ($182) {
     $227 = 0;$229 = $181;$or$cond13555 = 0;
    } else {
     HEAP32[$vararg_buffer4>>2] = 0;
     (_opus_custom_decoder_ctl($15,10010,$vararg_buffer4)|0);
     $183 = (($$0417504512606) + ($$1419544)|0);
     (_celt_decode_with_ec($15,$183,$$1450542,$181,$20,0,0)|0);
     HEAP32[$vararg_buffer7>>2] = $8;
     (_opus_custom_decoder_ctl($15,4031,$vararg_buffer7)|0);
     $227 = 1;$229 = $181;$or$cond13555 = 1;
    }
   } else {
    $176 = STACKTOP; STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);;
    $177 = ($$0448543|0)!=(0);
    $227 = $177;$229 = $176;$or$cond13555 = 0;
   }
   HEAP32[$vararg_buffer10>>2] = $184;
   (_opus_custom_decoder_ctl($15,10010,$vararg_buffer10)|0);
   $185 = ($$0446515530539|0)==(1000);
   if ($185) {
    HEAP16[$9>>1] = -1;
    $198 = ((($0)) + 8|0);
    $199 = HEAP32[$198>>2]|0;
    $200 = Math_imul($199, $$2445516601)|0;
    $201 = ($200|0)>(0);
    if ($201) {
     $202 = $200 << 2;
     _memset(($3|0),0,($202|0))|0;
    }
    $203 = ((($0)) + 60|0);
    $204 = HEAP32[$203>>2]|0;
    $205 = ($204|0)==(1001);
    do {
     if ($205) {
      if ($or$cond13555) {
       $206 = ((($0)) + 68|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0);
       if (!($208)) {
        break;
       }
      }
      HEAP32[$vararg_buffer15>>2] = 0;
      (_opus_custom_decoder_ctl($15,10010,$vararg_buffer15)|0);
      (_celt_decode_with_ec($15,$9,2,$3,$21,0,0)|0);
     }
    } while(0);
    $$0437 = 0;
   } else {
    $186 = ($18|0)<($$2445516601|0);
    $187 = $186 ? $18 : $$2445516601;
    $188 = ((($0)) + 60|0);
    $189 = HEAP32[$188>>2]|0;
    $190 = ($$0446515530539|0)!=($189|0);
    $191 = ($189|0)>(0);
    $or$cond468 = $190 & $191;
    if ($or$cond468) {
     $192 = ((($0)) + 68|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($193|0)==(0);
     if ($194) {
      (_opus_custom_decoder_ctl($15,4028,$vararg_buffer13)|0);
     }
    }
    $195 = $196 ? $$0417504512606 : 0;
    $197 = (_celt_decode_with_ec($15,$195,$$1419544,$3,$187,$6,0)|0);
    $$0437 = $197;
   }
   if (!($375)) {
    $209 = ((($0)) + 8|0);
    $210 = HEAP32[$209>>2]|0;
    $211 = Math_imul($210, $$2445516601)|0;
    $212 = ($211|0)>(0);
    if ($212) {
     $$3431581 = 0;
     while(1) {
      $213 = (($3) + ($$3431581<<2)|0);
      $214 = Math_fround(HEAPF32[$213>>2]);
      $215 = (($216) + ($$3431581<<1)|0);
      $217 = HEAP16[$215>>1]|0;
      $218 = (Math_fround(($217<<16>>16)));
      $219 = Math_fround($218 * Math_fround(3.05175781E-5));
      $220 = Math_fround($214 + $219);
      HEAPF32[$213>>2] = $220;
      $221 = (($$3431581) + 1)|0;
      $222 = ($221|0)<($211|0);
      if ($222) {
       $$3431581 = $221;
      } else {
       break;
      }
     }
    }
   }
   HEAP32[$vararg_buffer18>>2] = $10;
   (_opus_custom_decoder_ctl($15,10015,$vararg_buffer18)|0);
   $223 = HEAP32[$10>>2]|0;
   $224 = ((($223)) + 60|0);
   $225 = HEAP32[$224>>2]|0;
   $226 = ($$2453541|0)==(0);
   $or$cond19 = $226 | $227;
   if (!($or$cond19)) {
    (_opus_custom_decoder_ctl($15,4028,$vararg_buffer21)|0);
    HEAP32[$vararg_buffer23>>2] = 0;
    (_opus_custom_decoder_ctl($15,10010,$vararg_buffer23)|0);
    $228 = (($$0417504512606) + ($$1419544)|0);
    (_celt_decode_with_ec($15,$228,$$1450542,$229,$20,0,0)|0);
    HEAP32[$vararg_buffer26>>2] = $8;
    (_opus_custom_decoder_ctl($15,4031,$vararg_buffer26)|0);
    $230 = ((($0)) + 8|0);
    $231 = HEAP32[$230>>2]|0;
    $232 = (($$2445516601) - ($21))|0;
    $233 = Math_imul($231, $232)|0;
    $234 = (($3) + ($233<<2)|0);
    $235 = Math_imul($231, $21)|0;
    $236 = (($229) + ($235<<2)|0);
    $237 = HEAP32[$16>>2]|0;
    $238 = (48000 / ($237|0))&-1;
    $239 = ($231|0)>(0);
    $240 = ($17|0)>(399);
    $or$cond$i484 = $240 & $239;
    if ($or$cond$i484) {
     $$03335$us$i486 = 0;
     while(1) {
      $$034$us$i488 = 0;
      while(1) {
       $241 = Math_imul($$034$us$i488, $238)|0;
       $242 = (($225) + ($241<<2)|0);
       $243 = Math_fround(HEAPF32[$242>>2]);
       $244 = Math_fround($243 * $243);
       $245 = Math_imul($$034$us$i488, $231)|0;
       $246 = (($245) + ($$03335$us$i486))|0;
       $247 = (($236) + ($246<<2)|0);
       $248 = Math_fround(HEAPF32[$247>>2]);
       $249 = Math_fround($244 * $248);
       $250 = Math_fround(Math_fround(1.0) - $244);
       $251 = (($234) + ($246<<2)|0);
       $252 = Math_fround(HEAPF32[$251>>2]);
       $253 = Math_fround($250 * $252);
       $254 = Math_fround($249 + $253);
       HEAPF32[$251>>2] = $254;
       $255 = (($$034$us$i488) + 1)|0;
       $exitcond$i489 = ($255|0)==($21|0);
       if ($exitcond$i489) {
        break;
       } else {
        $$034$us$i488 = $255;
       }
      }
      $256 = (($$03335$us$i486) + 1)|0;
      $exitcond41$i490 = ($256|0)==($231|0);
      if ($exitcond41$i490) {
       break;
      } else {
       $$03335$us$i486 = $256;
      }
     }
    }
   }
   if ($or$cond13555) {
    $257 = ((($0)) + 8|0);
    $258 = HEAP32[$257>>2]|0;
    $259 = ($258|0)>(0);
    $260 = ($17|0)>(399);
    $or$cond613 = $259 & $260;
    if ($or$cond613) {
     $$0447575$us = 0;
     while(1) {
      $$4432571$us = 0;
      while(1) {
       $261 = Math_imul($$4432571$us, $258)|0;
       $262 = (($261) + ($$0447575$us))|0;
       $263 = (($229) + ($262<<2)|0);
       $264 = HEAP32[$263>>2]|0;
       $265 = (($3) + ($262<<2)|0);
       HEAP32[$265>>2] = $264;
       $266 = (($$4432571$us) + 1)|0;
       $267 = ($266|0)<($21|0);
       if ($267) {
        $$4432571$us = $266;
       } else {
        break;
       }
      }
      $268 = (($$0447575$us) + 1)|0;
      $269 = ($268|0)<($258|0);
      if ($269) {
       $$0447575$us = $268;
      } else {
       break;
      }
     }
    }
    $270 = Math_imul($258, $21)|0;
    $271 = (($229) + ($270<<2)|0);
    $272 = (($3) + ($270<<2)|0);
    $273 = HEAP32[$16>>2]|0;
    $274 = (48000 / ($273|0))&-1;
    $275 = ($17|0)>(399);
    $or$cond$i475 = $275 & $259;
    if ($or$cond$i475) {
     $$03335$us$i477 = 0;
     while(1) {
      $$034$us$i479 = 0;
      while(1) {
       $276 = Math_imul($$034$us$i479, $274)|0;
       $277 = (($225) + ($276<<2)|0);
       $278 = Math_fround(HEAPF32[$277>>2]);
       $279 = Math_fround($278 * $278);
       $280 = Math_imul($$034$us$i479, $258)|0;
       $281 = (($280) + ($$03335$us$i477))|0;
       $282 = (($272) + ($281<<2)|0);
       $283 = Math_fround(HEAPF32[$282>>2]);
       $284 = Math_fround($279 * $283);
       $285 = Math_fround(Math_fround(1.0) - $279);
       $286 = (($271) + ($281<<2)|0);
       $287 = Math_fround(HEAPF32[$286>>2]);
       $288 = Math_fround($285 * $287);
       $289 = Math_fround($284 + $288);
       HEAPF32[$282>>2] = $289;
       $290 = (($$034$us$i479) + 1)|0;
       $exitcond$i480 = ($290|0)==($21|0);
       if ($exitcond$i480) {
        break;
       } else {
        $$034$us$i479 = $290;
       }
      }
      $291 = (($$03335$us$i477) + 1)|0;
      $exitcond41$i481 = ($291|0)==($258|0);
      if ($exitcond41$i481) {
       break;
      } else {
       $$03335$us$i477 = $291;
      }
     }
    }
   }
   L135: do {
    if ($172) {
     $292 = ($$2445516601|0)<($20|0);
     $293 = ((($0)) + 8|0);
     $294 = HEAP32[$293>>2]|0;
     if ($292) {
      $324 = HEAP32[$16>>2]|0;
      $325 = (48000 / ($324|0))&-1;
      $326 = ($294|0)>(0);
      $327 = ($17|0)>(399);
      $or$cond$i = $327 & $326;
      if (!($or$cond$i)) {
       break;
      }
      $$03335$us$i = 0;
      while(1) {
       $$034$us$i = 0;
       while(1) {
        $328 = Math_imul($$034$us$i, $325)|0;
        $329 = (($225) + ($328<<2)|0);
        $330 = Math_fround(HEAPF32[$329>>2]);
        $331 = Math_fround($330 * $330);
        $332 = Math_imul($$034$us$i, $294)|0;
        $333 = (($332) + ($$03335$us$i))|0;
        $334 = (($3) + ($333<<2)|0);
        $335 = Math_fround(HEAPF32[$334>>2]);
        $336 = Math_fround($331 * $335);
        $337 = Math_fround(Math_fround(1.0) - $331);
        $338 = (($$1442) + ($333<<2)|0);
        $339 = Math_fround(HEAPF32[$338>>2]);
        $340 = Math_fround($337 * $339);
        $341 = Math_fround($336 + $340);
        HEAPF32[$334>>2] = $341;
        $342 = (($$034$us$i) + 1)|0;
        $exitcond$i = ($342|0)==($21|0);
        if ($exitcond$i) {
         break;
        } else {
         $$034$us$i = $342;
        }
       }
       $343 = (($$03335$us$i) + 1)|0;
       $exitcond41$i = ($343|0)==($294|0);
       if ($exitcond41$i) {
        break L135;
       } else {
        $$03335$us$i = $343;
       }
      }
     }
     $295 = Math_imul($294, $21)|0;
     $296 = ($295|0)>(0);
     if ($296) {
      $$5433568 = 0;
      while(1) {
       $297 = (($$1442) + ($$5433568<<2)|0);
       $298 = HEAP32[$297>>2]|0;
       $299 = (($3) + ($$5433568<<2)|0);
       HEAP32[$299>>2] = $298;
       $300 = (($$5433568) + 1)|0;
       $301 = ($300|0)<($295|0);
       if ($301) {
        $$5433568 = $300;
       } else {
        break;
       }
      }
     }
     $302 = (($$1442) + ($295<<2)|0);
     $303 = (($3) + ($295<<2)|0);
     $304 = HEAP32[$16>>2]|0;
     $305 = (48000 / ($304|0))&-1;
     $306 = ($294|0)>(0);
     $307 = ($17|0)>(399);
     $or$cond$i493 = $307 & $306;
     if ($or$cond$i493) {
      $$03335$us$i495 = 0;
      while(1) {
       $$034$us$i497 = 0;
       while(1) {
        $308 = Math_imul($$034$us$i497, $305)|0;
        $309 = (($225) + ($308<<2)|0);
        $310 = Math_fround(HEAPF32[$309>>2]);
        $311 = Math_fround($310 * $310);
        $312 = Math_imul($$034$us$i497, $294)|0;
        $313 = (($312) + ($$03335$us$i495))|0;
        $314 = (($303) + ($313<<2)|0);
        $315 = Math_fround(HEAPF32[$314>>2]);
        $316 = Math_fround($311 * $315);
        $317 = Math_fround(Math_fround(1.0) - $311);
        $318 = (($302) + ($313<<2)|0);
        $319 = Math_fround(HEAPF32[$318>>2]);
        $320 = Math_fround($317 * $319);
        $321 = Math_fround($316 + $320);
        HEAPF32[$314>>2] = $321;
        $322 = (($$034$us$i497) + 1)|0;
        $exitcond$i498 = ($322|0)==($21|0);
        if ($exitcond$i498) {
         break;
        } else {
         $$034$us$i497 = $322;
        }
       }
       $323 = (($$03335$us$i495) + 1)|0;
       $exitcond41$i499 = ($323|0)==($294|0);
       if ($exitcond41$i499) {
        break;
       } else {
        $$03335$us$i495 = $323;
       }
      }
     }
    }
   } while(0);
   $344 = ((($0)) + 40|0);
   $345 = HEAP32[$344>>2]|0;
   $346 = ($345|0)==(0);
   if (!($346)) {
    $347 = (Math_fround(($345|0)));
    $348 = Math_fround($347 * Math_fround(6.48814079E-4));
    $349 = +$348;
    $350 = $349 * 0.69314718055994529;
    $351 = (+_exp($350));
    $352 = Math_fround($351);
    $353 = ((($0)) + 8|0);
    $354 = HEAP32[$353>>2]|0;
    $355 = Math_imul($354, $$2445516601)|0;
    $356 = ($355|0)>(0);
    if ($356) {
     $$6566 = 0;
     while(1) {
      $357 = (($3) + ($$6566<<2)|0);
      $358 = Math_fround(HEAPF32[$357>>2]);
      $359 = Math_fround($358 * $352);
      HEAPF32[$357>>2] = $359;
      $360 = (($$6566) + 1)|0;
      $361 = ($360|0)<($355|0);
      if ($361) {
       $$6566 = $360;
      } else {
       break;
      }
     }
    }
   }
   $362 = ($$1419544|0)<(2);
   if ($362) {
    $$sink = 0;
   } else {
    $363 = ((($6)) + 28|0);
    $364 = HEAP32[$363>>2]|0;
    $365 = HEAP32[$8>>2]|0;
    $366 = $365 ^ $364;
    $$sink = $366;
   }
   $367 = ((($0)) + 84|0);
   HEAP32[$367>>2] = $$sink;
   $368 = ((($0)) + 60|0);
   HEAP32[$368>>2] = $$0446515530539;
   $369 = $227 ^ 1;
   $narrow = $170 & $369;
   $370 = $narrow&1;
   $371 = ((($0)) + 68|0);
   HEAP32[$371>>2] = $370;
   $372 = ($$0437|0)<(0);
   $373 = $372 ? $$0437 : $$2445516601;
   $$4 = $373;
  }
 } while(0);
 _llvm_stackrestore(($374|0));
 $$5 = $$4;
 STACKTOP = sp;return ($$5|0);
}
function _opus_decode($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$ph$i$i = 0, $$037 = 0, $$03839 = 0, $$alloca_mul = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = Math_fround(0), $37 = Math_fround(0), $38 = 0, $39 = Math_fround(0), $40 = 0, $41 = Math_fround(0), $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond$not = 0, $or$cond3 = 0, $trunc$i$i$i = 0, $trunc$i$i$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ($4|0)<(1);
 if ($6) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $7 = ($1|0)==(0|0);
 $8 = ($2|0)<(1);
 $or$cond$not = $7 | $8;
 $9 = ($5|0)!=(0);
 $or$cond3 = $or$cond$not | $9;
 do {
  if ($or$cond3) {
   $$037 = $4;
  } else {
   $10 = ((($0)) + 12|0);
   $11 = HEAP32[$10>>2]|0;
   $trunc$i$i$i = HEAP8[$1>>0]|0;
   $trunc$i$i$i$clear = $trunc$i$i$i & 3;
   L6: do {
    switch ($trunc$i$i$i$clear<<24>>24) {
    case 0:  {
     $$0$i$ph$i$i = 1;
     break;
    }
    case 3:  {
     $12 = ($2|0)<(2);
     if ($12) {
      $$0 = -4;
      STACKTOP = sp;return ($$0|0);
     } else {
      $13 = ((($1)) + 1|0);
      $14 = HEAP8[$13>>0]|0;
      $15 = $14 & 63;
      $16 = $15&255;
      $$0$i$ph$i$i = $16;
      break L6;
     }
     break;
    }
    default: {
     $$0$i$ph$i$i = 2;
    }
    }
   } while(0);
   $17 = (_opus_packet_get_samples_per_frame($1,$11)|0);
   $18 = Math_imul($17, $$0$i$ph$i$i)|0;
   $19 = ($18*25)|0;
   $20 = ($11*3)|0;
   $21 = ($19|0)<=($20|0);
   $22 = ($18|0)>(0);
   $or$cond = $22 & $21;
   if ($or$cond) {
    $23 = ($18|0)>($4|0);
    $24 = $23 ? $4 : $18;
    $$037 = $24;
    break;
   } else {
    $$0 = -4;
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 $25 = ((($0)) + 8|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = Math_imul($26, $$037)|0;
 $28 = (_llvm_stacksave()|0);
 $$alloca_mul = $27<<2;
 $29 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $30 = (_opus_decode_native($0,$1,$2,$29,$$037,$5,0,0,1)|0);
 $31 = ($30|0)>(0);
 if ($31) {
  $32 = HEAP32[$25>>2]|0;
  $33 = Math_imul($32, $30)|0;
  $34 = ($33|0)>(0);
  if ($34) {
   $$03839 = 0;
   while(1) {
    $35 = (($29) + ($$03839<<2)|0);
    $36 = Math_fround(HEAPF32[$35>>2]);
    $37 = Math_fround($36 * Math_fround(32768.0));
    $38 = $37 > Math_fround(-32768.0);
    $39 = $38 ? $37 : Math_fround(-32768.0);
    $40 = $39 < Math_fround(32767.0);
    $41 = $40 ? $39 : Math_fround(32767.0);
    $42 = (_lrintf($41)|0);
    $43 = $42&65535;
    $44 = (($3) + ($$03839<<1)|0);
    HEAP16[$44>>1] = $43;
    $45 = (($$03839) + 1)|0;
    $46 = ($45|0)<($33|0);
    if ($46) {
     $$03839 = $45;
    } else {
     break;
    }
   }
  }
 }
 _llvm_stackrestore(($28|0));
 $$0 = $30;
 STACKTOP = sp;return ($$0|0);
}
function _opus_packet_get_nb_frames($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)<(1);
 L1: do {
  if ($2) {
   $$0 = -1;
  } else {
   $trunc = HEAP8[$0>>0]|0;
   $trunc$clear = $trunc & 3;
   switch ($trunc$clear<<24>>24) {
   case 0:  {
    $$0 = 1;
    break L1;
    break;
   }
   case 3:  {
    break;
   }
   default: {
    $$0 = 2;
    break L1;
   }
   }
   $3 = ($1|0)<(2);
   if ($3) {
    $$0 = -4;
   } else {
    $4 = ((($0)) + 1|0);
    $5 = HEAP8[$4>>0]|0;
    $6 = $5 & 63;
    $7 = $6&255;
    $$0 = $7;
   }
  }
 } while(0);
 return ($$0|0);
}
function _opus_encoder_init($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $9 = 0, $switch$split112D = 0, $switch$split2D = 0, $switch$split52D = 0, $switch$split82D = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = sp + 16|0;
 $5 = sp + 12|0;
 $switch$split2D = ($1|0)<(16000);
 L1: do {
  if ($switch$split2D) {
   $switch$split52D = ($1|0)<(12000);
   if ($switch$split52D) {
    switch ($1|0) {
    case 8000:  {
     break L1;
     break;
    }
    default: {
     $$0 = -1;
    }
    }
    STACKTOP = sp;return ($$0|0);
   } else {
    switch ($1|0) {
    case 12000:  {
     break L1;
     break;
    }
    default: {
     $$0 = -1;
    }
    }
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $switch$split82D = ($1|0)<(24000);
   if ($switch$split82D) {
    switch ($1|0) {
    case 16000:  {
     break L1;
     break;
    }
    default: {
     $$0 = -1;
    }
    }
    STACKTOP = sp;return ($$0|0);
   }
   $switch$split112D = ($1|0)<(48000);
   if ($switch$split112D) {
    switch ($1|0) {
    case 24000:  {
     break L1;
     break;
    }
    default: {
     $$0 = -1;
    }
    }
    STACKTOP = sp;return ($$0|0);
   } else {
    switch ($1|0) {
    case 48000:  {
     break L1;
     break;
    }
    default: {
     $$0 = -1;
    }
    }
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 $6 = (($2) + -1)|0;
 $7 = ($6>>>0)>(1);
 if ($7) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 switch ($3|0) {
 case 2048: case 2049: case 2051:  {
  break;
 }
 default: {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 }
 $8 = (_silk_Get_Encoder_Size($4)|0);
 $9 = ($8|0)==(0);
 if ($9) {
  $10 = HEAP32[$4>>2]|0;
  $11 = (($10) + 3)|0;
  $12 = $11 & -4;
  HEAP32[$4>>2] = $12;
  $13 = (_celt_encoder_get_size($2)|0);
  $14 = HEAP32[$4>>2]|0;
  $15 = (($13) + 18036)|0;
  $16 = (($15) + ($14))|0;
  $$0$i = $16;
 } else {
  $$0$i = 0;
 }
 _memset(($0|0),0,($$0$i|0))|0;
 $17 = (_silk_Get_Encoder_Size($5)|0);
 $18 = ($17|0)==(0);
 if (!($18)) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $19 = HEAP32[$5>>2]|0;
 $20 = (($19) + 3)|0;
 $21 = $20 & -4;
 HEAP32[$5>>2] = $21;
 $22 = ((($0)) + 4|0);
 HEAP32[$22>>2] = 18036;
 $23 = (($21) + 18036)|0;
 HEAP32[$0>>2] = $23;
 $24 = ((($0)) + 18036|0);
 $25 = (($0) + ($23)|0);
 $26 = ((($0)) + 112|0);
 HEAP32[$26>>2] = $2;
 $27 = ((($0)) + 14088|0);
 HEAP32[$27>>2] = $2;
 $28 = ((($0)) + 144|0);
 HEAP32[$28>>2] = $1;
 $29 = ((($0)) + 180|0);
 HEAP32[$29>>2] = 0;
 $30 = ((($0)) + 8|0);
 $31 = (_silk_InitEncoder($24,0,$30)|0);
 $32 = ($31|0)==(0);
 if (!($32)) {
  $$0 = -3;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$30>>2] = $2;
 $33 = ((($0)) + 12|0);
 HEAP32[$33>>2] = $2;
 $34 = HEAP32[$28>>2]|0;
 $35 = ((($0)) + 16|0);
 HEAP32[$35>>2] = $34;
 $36 = ((($0)) + 20|0);
 HEAP32[$36>>2] = 16000;
 $37 = ((($0)) + 24|0);
 HEAP32[$37>>2] = 8000;
 $38 = ((($0)) + 28|0);
 HEAP32[$38>>2] = 16000;
 $39 = ((($0)) + 32|0);
 HEAP32[$39>>2] = 20;
 $40 = ((($0)) + 36|0);
 HEAP32[$40>>2] = 25000;
 $41 = ((($0)) + 40|0);
 HEAP32[$41>>2] = 0;
 $42 = ((($0)) + 44|0);
 HEAP32[$42>>2] = 9;
 $43 = ((($0)) + 48|0);
 HEAP32[$43>>2] = 0;
 $44 = ((($0)) + 56|0);
 HEAP32[$44>>2] = 0;
 $45 = ((($0)) + 60|0);
 HEAP32[$45>>2] = 0;
 $46 = ((($0)) + 76|0);
 HEAP32[$46>>2] = 0;
 $47 = HEAP32[$29>>2]|0;
 $48 = (_celt_encoder_init($25,$1,$2,$47)|0);
 $49 = ($48|0)==(0);
 if (!($49)) {
  $$0 = -3;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$vararg_buffer>>2] = 0;
 (_opus_custom_encoder_ctl($25,10016,$vararg_buffer)|0);
 $50 = HEAP32[$42>>2]|0;
 HEAP32[$vararg_buffer1>>2] = $50;
 (_opus_custom_encoder_ctl($25,4010,$vararg_buffer1)|0);
 $51 = ((($0)) + 148|0);
 HEAP32[$51>>2] = 1;
 $52 = ((($0)) + 152|0);
 HEAP32[$52>>2] = 1;
 $53 = ((($0)) + 164|0);
 HEAP32[$53>>2] = -1000;
 $54 = Math_imul($2, $1)|0;
 $55 = (($54) + 3000)|0;
 $56 = ((($0)) + 160|0);
 HEAP32[$56>>2] = $55;
 $57 = ((($0)) + 108|0);
 HEAP32[$57>>2] = $3;
 $58 = ((($0)) + 124|0);
 HEAP32[$58>>2] = -1000;
 $59 = ((($0)) + 128|0);
 HEAP32[$59>>2] = -1000;
 $60 = ((($0)) + 132|0);
 HEAP32[$60>>2] = 1105;
 $61 = ((($0)) + 120|0);
 HEAP32[$61>>2] = -1000;
 $62 = ((($0)) + 136|0);
 HEAP32[$62>>2] = -1000;
 $63 = ((($0)) + 140|0);
 HEAP32[$63>>2] = -1;
 $64 = HEAP32[$28>>2]|0;
 $65 = (($64|0) / 100)&-1;
 $66 = ((($0)) + 172|0);
 HEAP32[$66>>2] = $65;
 $67 = ((($0)) + 168|0);
 HEAP32[$67>>2] = 24;
 $68 = ((($0)) + 156|0);
 HEAP32[$68>>2] = 5000;
 $69 = (($64|0) / 250)&-1;
 $70 = ((($0)) + 116|0);
 HEAP32[$70>>2] = $69;
 $71 = ((($0)) + 14092|0);
 HEAP16[$71>>1] = 16384;
 $72 = ((($0)) + 14100|0);
 HEAPF32[$72>>2] = Math_fround(1.0);
 $73 = (_silk_lin2log(60)|0);
 $74 = $73 << 8;
 $75 = ((($0)) + 14096|0);
 HEAP32[$75>>2] = $74;
 $76 = ((($0)) + 14148|0);
 HEAP32[$76>>2] = 1;
 $77 = ((($0)) + 14120|0);
 HEAP32[$77>>2] = 1001;
 $78 = ((($0)) + 14136|0);
 HEAP32[$78>>2] = 1105;
 $79 = ((($0)) + 188|0);
 $80 = HEAP32[$28>>2]|0;
 _tonality_analysis_init($79,$80);
 $81 = HEAP32[$57>>2]|0;
 $82 = ((($0)) + 192|0);
 HEAP32[$82>>2] = $81;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _opus_encoder_create($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i = 0, $$042 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $switch$split12D = 0, $switch$split2D = 0, $switch$split42D = 0, $switch$split72D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $switch$split2D = ($0|0)<(16000);
 L1: do {
  if ($switch$split2D) {
   $switch$split12D = ($0|0)<(12000);
   if ($switch$split12D) {
    switch ($0|0) {
    case 8000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     label = 4;
     break L1;
    }
    }
   } else {
    switch ($0|0) {
    case 12000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     label = 4;
     break L1;
    }
    }
   }
  } else {
   $switch$split42D = ($0|0)<(24000);
   if ($switch$split42D) {
    switch ($0|0) {
    case 16000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     label = 4;
     break L1;
    }
    }
   }
   $switch$split72D = ($0|0)<(48000);
   if ($switch$split72D) {
    switch ($0|0) {
    case 24000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     label = 4;
     break L1;
    }
    }
   } else {
    switch ($0|0) {
    case 48000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     label = 4;
     break L1;
    }
    }
   }
  }
 } while(0);
 L13: do {
  if ((label|0) == 2) {
   $5 = (($1) + -1)|0;
   $6 = ($5>>>0)>(1);
   if ($6) {
    label = 4;
   } else {
    switch ($2|0) {
    case 2048: case 2049: case 2051:  {
     break;
    }
    default: {
     label = 4;
     break L13;
    }
    }
    $8 = (_silk_Get_Encoder_Size($4)|0);
    $9 = ($8|0)==(0);
    if ($9) {
     $10 = HEAP32[$4>>2]|0;
     $11 = (($10) + 3)|0;
     $12 = $11 & -4;
     HEAP32[$4>>2] = $12;
     $13 = (_celt_encoder_get_size($1)|0);
     $14 = HEAP32[$4>>2]|0;
     $15 = (($13) + 18036)|0;
     $16 = (($15) + ($14))|0;
     $$0$i = $16;
    } else {
     $$0$i = 0;
    }
    $17 = (_malloc($$0$i)|0);
    $18 = ($17|0)==(0|0);
    if ($18) {
     $19 = ($3|0)==(0|0);
     if ($19) {
      $$042 = 0;
      break;
     }
     HEAP32[$3>>2] = -7;
     $$042 = 0;
     break;
    }
    $20 = (_opus_encoder_init($17,$0,$1,$2)|0);
    $21 = ($3|0)==(0|0);
    if (!($21)) {
     HEAP32[$3>>2] = $20;
    }
    $22 = ($20|0)==(0);
    if ($22) {
     $$042 = $17;
    } else {
     _free($17);
     $$042 = 0;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $7 = ($3|0)==(0|0);
  if ($7) {
   $$042 = 0;
  } else {
   HEAP32[$3>>2] = -1;
   $$042 = 0;
  }
 }
 STACKTOP = sp;return ($$042|0);
}
function _downmix_int($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$04049 = 0, $$045$us = 0, $$142 = 0, $$243$us = 0, $$not = 0, $10 = 0, $11 = 0, $12 = 0, $13 = Math_fround(0), $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = Math_fround(0), $23 = 0, $24 = Math_fround(0);
 var $25 = Math_fround(0), $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = Math_fround(0), $35 = 0, $36 = Math_fround(0), $37 = Math_fround(0), $38 = 0, $39 = 0, $7 = 0, $8 = 0, $9 = 0, $brmerge = 0, $exitcond = 0;
 var $exitcond55 = 0, $exitcond56 = 0, $exitcond58 = 0, $or$cond$not = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = ($2|0)>(0);
 if ($7) {
  $$04049 = 0;
  while(1) {
   $8 = (($$04049) + ($3))|0;
   $9 = Math_imul($8, $6)|0;
   $10 = (($9) + ($4))|0;
   $11 = (($0) + ($10<<1)|0);
   $12 = HEAP16[$11>>1]|0;
   $13 = (Math_fround(($12<<16>>16)));
   $14 = (($1) + ($$04049<<2)|0);
   HEAPF32[$14>>2] = $13;
   $15 = (($$04049) + 1)|0;
   $exitcond58 = ($15|0)==($2|0);
   if ($exitcond58) {
    break;
   } else {
    $$04049 = $15;
   }
  }
 }
 $16 = ($5|0)>(-1);
 if ($16) {
  if (!($7)) {
   return;
  }
  $$142 = 0;
  while(1) {
   $17 = (($$142) + ($3))|0;
   $18 = Math_imul($17, $6)|0;
   $19 = (($18) + ($5))|0;
   $20 = (($0) + ($19<<1)|0);
   $21 = HEAP16[$20>>1]|0;
   $22 = (Math_fround(($21<<16>>16)));
   $23 = (($1) + ($$142<<2)|0);
   $24 = Math_fround(HEAPF32[$23>>2]);
   $25 = Math_fround($24 + $22);
   HEAPF32[$23>>2] = $25;
   $26 = (($$142) + 1)|0;
   $exitcond = ($26|0)==($2|0);
   if ($exitcond) {
    break;
   } else {
    $$142 = $26;
   }
  }
  return;
 }
 $27 = ($5|0)!=(-2);
 $28 = ($6|0)<(2);
 $or$cond$not = $28 | $27;
 $$not = $7 ^ 1;
 $brmerge = $or$cond$not | $$not;
 if ($brmerge) {
  return;
 }
 $$045$us = 1;
 while(1) {
  $$243$us = 0;
  while(1) {
   $29 = (($$243$us) + ($3))|0;
   $30 = Math_imul($29, $6)|0;
   $31 = (($30) + ($$045$us))|0;
   $32 = (($0) + ($31<<1)|0);
   $33 = HEAP16[$32>>1]|0;
   $34 = (Math_fround(($33<<16>>16)));
   $35 = (($1) + ($$243$us<<2)|0);
   $36 = Math_fround(HEAPF32[$35>>2]);
   $37 = Math_fround($36 + $34);
   HEAPF32[$35>>2] = $37;
   $38 = (($$243$us) + 1)|0;
   $exitcond55 = ($38|0)==($2|0);
   if ($exitcond55) {
    break;
   } else {
    $$243$us = $38;
   }
  }
  $39 = (($$045$us) + 1)|0;
  $exitcond56 = ($39|0)==($6|0);
  if ($exitcond56) {
   break;
  } else {
   $$045$us = $39;
  }
 }
 return;
}
function _compute_stereo_width($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = Math_fround(0), $$0$lcssa = Math_fround(0), $$0153$lcssa = Math_fround(0), $$0153159 = Math_fround(0), $$0154$lcssa = Math_fround(0), $$0154158 = Math_fround(0), $$0155157 = 0, $$0160 = Math_fround(0), $$156 = Math_fround(0), $$phi$trans$insert = 0, $$pre = Math_fround(0), $10 = 0, $100 = Math_fround(0), $101 = 0, $102 = Math_fround(0), $103 = Math_fround(0), $104 = Math_fround(0), $105 = Math_fround(0), $106 = Math_fround(0), $107 = 0;
 var $108 = Math_fround(0), $109 = Math_fround(0), $11 = 0, $110 = Math_fround(0), $111 = 0, $112 = Math_fround(0), $113 = Math_fround(0), $114 = Math_fround(0), $115 = 0, $116 = Math_fround(0), $12 = 0, $13 = 0, $14 = Math_fround(0), $15 = 0, $16 = 0, $17 = Math_fround(0), $18 = Math_fround(0), $19 = Math_fround(0), $20 = Math_fround(0), $21 = 0;
 var $22 = 0, $23 = Math_fround(0), $24 = 0, $25 = 0, $26 = Math_fround(0), $27 = Math_fround(0), $28 = Math_fround(0), $29 = Math_fround(0), $30 = Math_fround(0), $31 = Math_fround(0), $32 = Math_fround(0), $33 = 0, $34 = 0, $35 = Math_fround(0), $36 = 0, $37 = 0, $38 = Math_fround(0), $39 = Math_fround(0), $4 = 0, $40 = Math_fround(0);
 var $41 = Math_fround(0), $42 = Math_fround(0), $43 = Math_fround(0), $44 = Math_fround(0), $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = 0, $49 = 0, $5 = 0, $50 = Math_fround(0), $51 = Math_fround(0), $52 = Math_fround(0), $53 = Math_fround(0), $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = Math_fround(0), $59 = Math_fround(0);
 var $6 = 0, $60 = 0, $61 = 0, $62 = Math_fround(0), $63 = Math_fround(0), $64 = Math_fround(0), $65 = Math_fround(0), $66 = 0, $67 = Math_fround(0), $68 = Math_fround(0), $69 = Math_fround(0), $7 = Math_fround(0), $70 = Math_fround(0), $71 = 0, $72 = Math_fround(0), $73 = Math_fround(0), $74 = Math_fround(0), $75 = Math_fround(0), $76 = 0, $77 = Math_fround(0);
 var $78 = 0, $79 = Math_fround(0), $8 = Math_fround(0), $80 = 0, $81 = Math_fround(0), $82 = 0, $83 = 0, $84 = Math_fround(0), $85 = Math_fround(0), $86 = Math_fround(0), $87 = Math_fround(0), $88 = Math_fround(0), $89 = 0, $9 = Math_fround(0), $90 = Math_fround(0), $91 = Math_fround(0), $92 = Math_fround(0), $93 = Math_fround(0), $94 = Math_fround(0), $95 = Math_fround(0);
 var $96 = Math_fround(0), $97 = Math_fround(0), $98 = Math_fround(0), $99 = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (($2|0) / ($1|0))&-1;
 $5 = ($4|0)>(50);
 $6 = $5 ? $4 : 50;
 $7 = (Math_fround(($6|0)));
 $8 = Math_fround(Math_fround(25.0) / $7);
 $9 = Math_fround(Math_fround(1.0) - $8);
 $10 = (($1) + -3)|0;
 $11 = ($1|0)>(3);
 if ($11) {
  $$0153159 = Math_fround(0.0);$$0154158 = Math_fround(0.0);$$0155157 = 0;$$0160 = Math_fround(0.0);
  while(1) {
   $12 = $$0155157 << 1;
   $13 = (($0) + ($12<<2)|0);
   $14 = Math_fround(HEAPF32[$13>>2]);
   $15 = $12 | 1;
   $16 = (($0) + ($15<<2)|0);
   $17 = Math_fround(HEAPF32[$16>>2]);
   $18 = Math_fround($14 * $14);
   $19 = Math_fround($14 * $17);
   $20 = Math_fround($17 * $17);
   $21 = $12 | 2;
   $22 = (($0) + ($21<<2)|0);
   $23 = Math_fround(HEAPF32[$22>>2]);
   $24 = $12 | 3;
   $25 = (($0) + ($24<<2)|0);
   $26 = Math_fround(HEAPF32[$25>>2]);
   $27 = Math_fround($23 * $23);
   $28 = Math_fround($18 + $27);
   $29 = Math_fround($23 * $26);
   $30 = Math_fround($19 + $29);
   $31 = Math_fround($26 * $26);
   $32 = Math_fround($20 + $31);
   $33 = $12 | 4;
   $34 = (($0) + ($33<<2)|0);
   $35 = Math_fround(HEAPF32[$34>>2]);
   $36 = $12 | 5;
   $37 = (($0) + ($36<<2)|0);
   $38 = Math_fround(HEAPF32[$37>>2]);
   $39 = Math_fround($35 * $35);
   $40 = Math_fround($28 + $39);
   $41 = Math_fround($35 * $38);
   $42 = Math_fround($30 + $41);
   $43 = Math_fround($38 * $38);
   $44 = Math_fround($32 + $43);
   $45 = $12 | 6;
   $46 = (($0) + ($45<<2)|0);
   $47 = Math_fround(HEAPF32[$46>>2]);
   $48 = $12 | 7;
   $49 = (($0) + ($48<<2)|0);
   $50 = Math_fround(HEAPF32[$49>>2]);
   $51 = Math_fround($47 * $47);
   $52 = Math_fround($40 + $51);
   $53 = Math_fround($47 * $50);
   $54 = Math_fround($42 + $53);
   $55 = Math_fround($50 * $50);
   $56 = Math_fround($44 + $55);
   $57 = Math_fround($$0160 + $52);
   $58 = Math_fround($$0153159 + $54);
   $59 = Math_fround($$0154158 + $56);
   $60 = (($$0155157) + 4)|0;
   $61 = ($60|0)<($10|0);
   if ($61) {
    $$0153159 = $58;$$0154158 = $59;$$0155157 = $60;$$0160 = $57;
   } else {
    $$0$lcssa = $57;$$0153$lcssa = $58;$$0154$lcssa = $59;
    break;
   }
  }
 } else {
  $$0$lcssa = Math_fround(0.0);$$0153$lcssa = Math_fround(0.0);$$0154$lcssa = Math_fround(0.0);
 }
 $62 = Math_fround(HEAPF32[$3>>2]);
 $63 = Math_fround($$0$lcssa - $62);
 $64 = Math_fround($9 * $63);
 $65 = Math_fround($62 + $64);
 $66 = ((($3)) + 4|0);
 $67 = Math_fround(HEAPF32[$66>>2]);
 $68 = Math_fround($$0153$lcssa - $67);
 $69 = Math_fround($9 * $68);
 $70 = Math_fround($67 + $69);
 $71 = ((($3)) + 8|0);
 $72 = Math_fround(HEAPF32[$71>>2]);
 $73 = Math_fround($$0154$lcssa - $72);
 $74 = Math_fround($9 * $73);
 $75 = Math_fround($72 + $74);
 $76 = $65 < Math_fround(0.0);
 $77 = $76 ? Math_fround(0.0) : $65;
 HEAPF32[$3>>2] = $77;
 $78 = $70 < Math_fround(0.0);
 $79 = $78 ? Math_fround(0.0) : $70;
 HEAPF32[$66>>2] = $79;
 $80 = $75 < Math_fround(0.0);
 $81 = $80 ? Math_fround(0.0) : $75;
 HEAPF32[$71>>2] = $81;
 $82 = $77 > $81;
 $$ = $82 ? $77 : $81;
 $83 = $$ > Math_fround(7.9999998E-4);
 if ($83) {
  $84 = (Math_fround(Math_sqrt((Math_fround($77)))));
  $85 = (Math_fround(Math_sqrt((Math_fround($81)))));
  $86 = (Math_fround(Math_sqrt((Math_fround($84)))));
  $87 = (Math_fround(Math_sqrt((Math_fround($85)))));
  $88 = Math_fround($84 * $85);
  $89 = $79 < $88;
  $$156 = $89 ? $79 : $88;
  HEAPF32[$66>>2] = $$156;
  $90 = Math_fround($88 + Math_fround(1.0E-15));
  $91 = Math_fround($$156 / $90);
  $92 = Math_fround($86 - $87);
  $93 = (Math_fround(Math_abs((Math_fround($92)))));
  $94 = Math_fround($86 + Math_fround(1.0E-15));
  $95 = Math_fround($94 + $87);
  $96 = Math_fround($93 / $95);
  $97 = Math_fround($91 * $91);
  $98 = Math_fround(Math_fround(1.0) - $97);
  $99 = (Math_fround(Math_sqrt((Math_fround($98)))));
  $100 = Math_fround($96 * $99);
  $101 = ((($3)) + 12|0);
  $102 = Math_fround(HEAPF32[$101>>2]);
  $103 = Math_fround($100 - $102);
  $104 = (Math_fround(($4|0)));
  $105 = Math_fround($103 / $104);
  $106 = Math_fround($102 + $105);
  HEAPF32[$101>>2] = $106;
  $107 = ((($3)) + 16|0);
  $108 = Math_fround(HEAPF32[$107>>2]);
  $109 = Math_fround(Math_fround(0.0199999996) / $104);
  $110 = Math_fround($108 - $109);
  $111 = $110 > $106;
  $112 = $111 ? $110 : $106;
  HEAPF32[$107>>2] = $112;
  $114 = $112;
  $113 = Math_fround($114 * Math_fround(20.0));
  $115 = $113 > Math_fround(1.0);
  $116 = $115 ? Math_fround(1.0) : $113;
  return (Math_fround($116));
 } else {
  $$phi$trans$insert = ((($3)) + 16|0);
  $$pre = Math_fround(HEAPF32[$$phi$trans$insert>>2]);
  $114 = $$pre;
  $113 = Math_fround($114 * Math_fround(20.0));
  $115 = $113 > Math_fround(1.0);
  $116 = $115 ? Math_fround(1.0) : $113;
  return (Math_fround($116));
 }
 return Math_fround((Math_fround(0.0)));
}
function _opus_encode_native($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 var $$ = 0, $$$01152 = 0, $$0 = 0, $$0$i = 0, $$0$i1238 = 0, $$0$i1239 = 0, $$0$i1241 = 0, $$0$i1254 = 0, $$0$i1282 = 0, $$0$lcssa$i = Math_fround(0), $$0$lcssa$i$i = Math_fround(0), $$0$lcssa$i$i1231 = Math_fround(0), $$0$lcssa$i$i1236 = Math_fround(0), $$0$lcssa$i1298 = 0, $$01011$i = 0, $$01011$i$i = 0, $$01011$i$i$i = 0, $$01011$i$i1234 = 0, $$011$i = 0, $$01107 = 0;
 var $$01115 = 0, $$011151547 = 0, $$011151548 = 0, $$01118 = 0, $$01120 = 0, $$01127 = 0, $$01128 = Math_fround(0), $$01129 = Math_fround(0), $$0113$lcssa$i = Math_fround(0), $$01130 = 0, $$011311417 = 0, $$01132 = 0, $$01134$i = Math_fround(0), $$01138$lcssa = Math_fround(0), $$011381416 = Math_fround(0), $$0114$lcssa$i = Math_fround(0), $$01140 = 0, $$01143$i = Math_fround(0), $$01145 = 0, $$01148 = 0;
 var $$01149 = 0, $$0115$lcssa$i = Math_fround(0), $$01150 = 0, $$01151 = 0, $$011510$i = Math_fround(0), $$01152 = 0, $$01153 = 0, $$01154$us = 0, $$01154$us$1 = 0, $$01154$us$2 = 0, $$01154$us$3 = 0, $$01154$us$p = 0, $$01154$us$p$1 = 0, $$01154$us$p$2 = 0, $$01154$us$p$3 = 0, $$0116$lcssa$i = Math_fround(0), $$01161 = 0, $$01163 = 0, $$01167 = 0, $$01168 = 0;
 var $$01169$i = Math_fround(0), $$0117$lcssa$i = Math_fround(0), $$01170 = 0, $$01171 = 0, $$01172$i = Math_fround(0), $$011741552 = Math_fround(0), $$01176 = 0, $$011761322 = 0, $$01177 = Math_fround(0), $$0118$lcssa$i = Math_fround(0), $$01181$i = Math_fround(0), $$012$i = Math_fround(0), $$012$i$i = Math_fround(0), $$012$i$i$i = Math_fround(0), $$012$i$i1233 = Math_fround(0), $$022$$i$i = Math_fround(0), $$022$lcssa$i$i = Math_fround(0), $$02225$i$i = Math_fround(0), $$02324$i$i = 0, $$024$in$i = 0;
 var $$024$in$i1252 = 0, $$024$in$i1280 = 0, $$024$in$i1310 = 0, $$025$lcssa$i = 0, $$025$lcssa$i1249 = 0, $$025$lcssa$i1277 = 0, $$025$lcssa$i1307 = 0, $$02526$i = 0, $$02526$i1246 = 0, $$02526$i1274 = 0, $$02526$i1304 = 0, $$026$i$i = Math_fround(0), $$027$i = 0, $$027$i1245 = 0, $$027$i1273 = 0, $$027$i1303 = 0, $$03$i$i = 0, $$03$i13$i = 0, $$03$in$i = 0, $$048$i = 0;
 var $$048$i1266 = 0, $$05$i = 0, $$051$lcssa$i = 0, $$051$lcssa$i1263 = 0, $$074$us$i1291 = 0, $$077$i = 0, $$077$i1284 = 0, $$078$i = 0, $$1$i = 0, $$1$us39$i = 0, $$1$us39$i$us$le = 0, $$111$i = 0, $$111041415 = 0, $$11116 = 0, $$11121 = 0, $$111391414 = Math_fround(0), $$11141 = 0, $$11146 = 0, $$11156 = 0, $$11156$ph = 0;
 var $$11160 = 0, $$11162 = 0, $$11169 = 0, $$11175 = Math_fround(0), $$1118313201531 = 0, $$11185$ph$ph = 0, $$1118513181533 = 0, $$11187$ph$ph = 0, $$1118713161534 = 0, $$1190 = 0, $$1194 = 0, $$1195 = 0, $$1196 = 0, $$1203 = 0, $$1206 = 0, $$1208 = 0, $$1208$pn = 0, $$1209 = 0, $$1212 = 0, $$177$i = 0;
 var $$180$i = 0, $$180$i1287 = 0, $$2$i1243 = 0, $$2$i1262 = 0, $$2$i1268 = 0, $$2$i13261545 = 0, $$2$i13261546 = 0, $$2$i1328 = 0, $$2$shrunk$i = 0, $$211051411 = 0, $$21110 = 0, $$21134$ph = 0, $$21147 = 0, $$21165 = 0, $$21173 = 0, $$276$us$i1293 = 0, $$311061409 = 0, $$31111 = 0, $$31123 = 0, $$31135 = 0;
 var $$31143$ph = 0, $$411121406 = 0, $$41144 = 0, $$5 = 0, $$51113 = 0, $$51125$ph = 0, $$51137 = 0, $$6 = 0, $$61114 = 0, $$61126 = 0, $$71347 = 0, $$alloca_mul = 0, $$alloca_mul100 = 0, $$alloca_mul102 = 0, $$alloca_mul104 = 0, $$alloca_mul98 = 0, $$idx = 0, $$idx$val = 0, $$idx1221 = 0, $$idx1221$val = 0;
 var $$idx1222 = 0, $$idx1222$val = 0, $$idx1223 = 0, $$idx1223$val = 0, $$idx1224 = 0, $$idx1224$val = 0, $$idx1225$val = 0, $$idx1226$val = 0, $$idx1227 = 0, $$idx1227$val = 0, $$idx1228 = 0, $$idx1228$val = 0, $$mux = Math_fround(0), $$mux1373 = 0, $$neg1376 = 0, $$not1359 = 0, $$not1361 = 0, $$not1363 = 0, $$not1369 = 0, $$ph = 0;
 var $$phi$trans$insert = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert$i1264 = 0, $$phi$trans$insert1516 = 0, $$phi$trans$insert1520 = 0, $$pn = 0, $$pn$i = Math_fround(0), $$pn$in = 0, $$pn$in$v = 0, $$pr = 0, $$pr1336 = 0, $$pr1341 = 0, $$pr1348 = 0, $$pre$i = 0, $$pre$i1265 = 0, $$pre$phi1522Z2D = 0, $$pre$phi1527Z2D = 0, $$pre$phi1539Z2D = 0, $$pre$phiZ2D = 0, $$pre$pr = 0;
 var $$pre1507 = 0, $$pre1509 = 0, $$pre1511 = 0, $$pre1512 = Math_fround(0), $$pre1513 = Math_fround(0), $$pre1514 = Math_fround(0), $$pre1515 = Math_fround(0), $$pre1517 = 0, $$pre1518 = 0, $$pre1521 = 0, $$pre1526 = 0, $$sink = 0, $$sink1605 = 0, $$sink1606 = 0, $$sink1607 = Math_fround(0), $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0;
 var $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = Math_fround(0), $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = Math_fround(0), $1020 = 0, $1021 = 0;
 var $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = Math_fround(0), $1036 = Math_fround(0), $1037 = Math_fround(0), $1038 = Math_fround(0), $1039 = Math_fround(0), $104 = 0;
 var $1040 = 0, $1041 = Math_fround(0), $1042 = Math_fround(0), $1043 = 0, $1044 = 0, $1045 = 0, $1046 = Math_fround(0), $1047 = Math_fround(0), $1048 = Math_fround(0), $1049 = Math_fround(0), $105 = 0, $1050 = Math_fround(0), $1051 = 0, $1052 = 0, $1053 = Math_fround(0), $1054 = Math_fround(0), $1055 = 0, $1056 = 0, $1057 = Math_fround(0), $1058 = Math_fround(0);
 var $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = Math_fround(0), $1065 = Math_fround(0), $1066 = 0, $1067 = Math_fround(0), $1068 = 0, $1069 = Math_fround(0), $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0;
 var $1077 = 0, $1078 = 0, $1079 = Math_fround(0), $108 = 0, $1080 = Math_fround(0), $1081 = 0, $1082 = Math_fround(0), $1083 = 0, $1084 = Math_fround(0), $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = Math_fround(0), $1091 = Math_fround(0), $1092 = 0, $1093 = Math_fround(0), $1094 = 0;
 var $1095 = Math_fround(0), $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $110 = Math_fround(0), $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = Math_fround(0), $1110 = 0, $1111 = 0, $1112 = 0;
 var $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = Math_fround(0), $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0.0, $1130 = 0;
 var $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0.0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0;
 var $115 = 0.0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0;
 var $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0;
 var $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0;
 var $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0;
 var $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = Math_fround(0), $1238 = 0, $1239 = 0, $124 = 0;
 var $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = Math_fround(0), $1254 = Math_fround(0), $1255 = Math_fround(0), $1256 = Math_fround(0), $1257 = Math_fround(0), $1258 = Math_fround(0);
 var $1259 = 0, $126 = 0, $1260 = Math_fround(0), $1261 = Math_fround(0), $1262 = 0, $1263 = 0, $1264 = 0, $1265 = Math_fround(0), $1266 = Math_fround(0), $1267 = Math_fround(0), $1268 = Math_fround(0), $1269 = Math_fround(0), $127 = 0, $1270 = Math_fround(0), $1271 = 0, $1272 = 0, $1273 = Math_fround(0), $1274 = Math_fround(0), $1275 = 0, $1276 = 0;
 var $1277 = Math_fround(0), $1278 = Math_fround(0), $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = Math_fround(0), $1285 = Math_fround(0), $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0;
 var $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = Math_fround(0), $1309 = Math_fround(0), $131 = 0, $1310 = Math_fround(0), $1311 = Math_fround(0);
 var $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = Math_fround(0), $1321 = Math_fround(0), $1322 = 0, $1323 = 0, $1324 = 0, $1325 = Math_fround(0), $1326 = Math_fround(0), $1327 = Math_fround(0), $1328 = Math_fround(0), $1329 = Math_fround(0), $133 = Math_fround(0);
 var $1330 = Math_fround(0), $1331 = 0, $1332 = 0, $1333 = Math_fround(0), $1334 = 0, $1335 = 0, $1336 = Math_fround(0), $1337 = Math_fround(0), $1338 = Math_fround(0), $1339 = Math_fround(0), $134 = 0, $1340 = Math_fround(0), $1341 = Math_fround(0), $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = Math_fround(0), $1347 = 0, $1348 = 0;
 var $1349 = Math_fround(0), $135 = 0, $1350 = Math_fround(0), $1351 = Math_fround(0), $1352 = Math_fround(0), $1353 = Math_fround(0), $1354 = Math_fround(0), $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0;
 var $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0;
 var $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0;
 var $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0;
 var $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0;
 var $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0;
 var $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0;
 var $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0;
 var $1493 = Math_fround(0), $1494 = 0, $1495 = 0, $1496 = Math_fround(0), $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = Math_fround(0), $1502 = Math_fround(0), $1503 = Math_fround(0), $1504 = 0, $1505 = Math_fround(0), $1506 = Math_fround(0), $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0;
 var $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0;
 var $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0;
 var $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0;
 var $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = Math_fround(0), $299 = Math_fround(0), $30 = 0, $300 = Math_fround(0), $301 = Math_fround(0), $302 = 0, $303 = Math_fround(0), $304 = Math_fround(0), $305 = Math_fround(0), $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0;
 var $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0;
 var $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0;
 var $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0;
 var $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0;
 var $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0;
 var $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0;
 var $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = Math_fround(0), $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = Math_fround(0), $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = Math_fround(0), $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = Math_fround(0), $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = Math_fround(0), $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $70 = Math_fround(0), $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0;
 var $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = Math_fround(0), $727 = Math_fround(0), $728 = Math_fround(0), $729 = Math_fround(0), $73 = 0, $730 = Math_fround(0), $731 = Math_fround(0), $732 = Math_fround(0);
 var $733 = Math_fround(0), $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = Math_fround(0), $739 = Math_fround(0), $74 = 0, $740 = Math_fround(0), $741 = Math_fround(0), $742 = Math_fround(0), $743 = Math_fround(0), $744 = Math_fround(0), $745 = Math_fround(0), $746 = Math_fround(0), $747 = Math_fround(0), $748 = Math_fround(0), $749 = Math_fround(0), $75 = 0, $750 = 0;
 var $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = Math_fround(0), $76 = 0, $760 = Math_fround(0), $761 = Math_fround(0), $762 = Math_fround(0), $763 = Math_fround(0), $764 = Math_fround(0), $765 = Math_fround(0), $766 = Math_fround(0), $767 = Math_fround(0), $768 = Math_fround(0), $769 = Math_fround(0);
 var $77 = 0, $770 = Math_fround(0), $771 = 0, $772 = 0, $773 = Math_fround(0), $774 = Math_fround(0), $775 = Math_fround(0), $776 = 0, $777 = Math_fround(0), $778 = 0, $779 = Math_fround(0), $78 = 0, $780 = 0, $781 = Math_fround(0), $782 = 0, $783 = Math_fround(0), $784 = 0, $785 = 0, $786 = 0, $787 = Math_fround(0);
 var $788 = 0, $789 = 0, $79 = 0, $790 = Math_fround(0), $791 = Math_fround(0), $792 = Math_fround(0), $793 = Math_fround(0), $794 = Math_fround(0), $795 = Math_fround(0), $796 = Math_fround(0), $797 = Math_fround(0), $798 = Math_fround(0), $799 = Math_fround(0), $80 = Math_fround(0), $800 = Math_fround(0), $801 = Math_fround(0), $802 = Math_fround(0), $803 = Math_fround(0), $804 = Math_fround(0), $805 = Math_fround(0);
 var $806 = Math_fround(0), $807 = Math_fround(0), $808 = Math_fround(0), $809 = Math_fround(0), $81 = 0, $810 = Math_fround(0), $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = Math_fround(0), $817 = Math_fround(0), $818 = Math_fround(0), $819 = Math_fround(0), $82 = 0, $820 = Math_fround(0), $821 = Math_fround(0), $822 = Math_fround(0), $823 = Math_fround(0);
 var $824 = Math_fround(0), $825 = Math_fround(0), $826 = Math_fround(0), $827 = 0, $828 = 0, $829 = 0, $83 = Math_fround(0), $830 = 0, $831 = 0, $832 = 0, $833 = Math_fround(0), $834 = Math_fround(0), $835 = Math_fround(0), $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = Math_fround(0), $840 = 0, $841 = 0;
 var $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0;
 var $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0;
 var $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = Math_fround(0), $890 = 0, $891 = 0, $892 = 0, $893 = Math_fround(0), $894 = Math_fround(0), $895 = 0.0, $896 = 0.0;
 var $897 = 0.0, $898 = Math_fround(0), $899 = Math_fround(0), $90 = Math_fround(0), $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = Math_fround(0), $910 = 0, $911 = 0, $912 = 0, $913 = Math_fround(0), $914 = 0;
 var $915 = Math_fround(0), $916 = 0, $917 = Math_fround(0), $918 = 0, $919 = Math_fround(0), $92 = 0, $920 = Math_fround(0), $921 = 0, $922 = 0, $923 = 0, $924 = Math_fround(0), $925 = Math_fround(0), $926 = Math_fround(0), $927 = Math_fround(0), $928 = Math_fround(0), $929 = Math_fround(0), $93 = Math_fround(0), $930 = 0, $931 = 0, $932 = 0;
 var $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = Math_fround(0), $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0;
 var $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0;
 var $97 = Math_fround(0), $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = Math_fround(0), $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0;
 var $988 = 0, $989 = 0, $99 = Math_fround(0), $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $brmerge1360 = 0, $brmerge1362 = 0, $brmerge1364 = 0, $brmerge1366 = 0, $brmerge1370 = 0, $brmerge1372 = 0, $brmerge44$i1423 = 0;
 var $exitcond = 0, $exitcond$i = 0, $exitcond$i$i = 0, $exitcond$i$i$i = 0, $exitcond$i$i1230 = 0, $exitcond$i$i1235 = 0, $exitcond$i$i1256 = 0, $exitcond$i1260 = 0, $exitcond$i1294 = 0, $exitcond$i1300 = 0, $exitcond$i14$i = 0, $exitcond1505 = 0, $exitcond22$i = 0, $exitcond82$i = 0, $exitcond85$i = 0, $exitcond85$i1285 = 0, $exitcond86$i = 0, $exitcond86$i1288 = 0, $not$or$cond1371 = 0, $or$cond = 0;
 var $or$cond$i = 0, $or$cond11 = 0, $or$cond1191 = 0, $or$cond1201 = 0, $or$cond1207 = 0, $or$cond1215 = 0, $or$cond1219 = 0, $or$cond13 = 0, $or$cond1357 = 0, $or$cond1358 = 0, $or$cond1371 = 0, $or$cond1474 = 0, $or$cond15 = 0, $or$cond1577 = 0, $or$cond1578 = 0, $or$cond1579 = 0, $or$cond1581 = 0, $or$cond17 = 0, $or$cond19 = 0, $or$cond21 = 0;
 var $or$cond23 = 0, $or$cond25 = 0, $or$cond27 = 0, $or$cond3$i = 0, $or$cond33 = 0, $or$cond37 = 0, $or$cond37$not = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, $phitmp = 0, $phitmp$i = 0, $phitmp$i1247 = 0, $phitmp$i1275 = 0, $phitmp$i1305 = 0, $sext$i = 0, $sext1$i = 0, $sext2$i = 0, $sext3$i = 0, $spec$select = 0;
 var $spec$select$i = 0, $spec$select$us$i = 0, $spec$select$us$i$us$le = 0, $spec$select1192 = 0, $spec$select1193 = 0, $spec$select1197 = 0, $spec$select1198 = 0, $spec$select1202 = 0, $spec$select1205 = 0, $spec$select1210 = 0, $spec$select1214 = 0, $spec$select1216 = 0, $spec$select1217 = 0, $spec$select1218 = 0, $spec$select1354 = 0, $spec$select1355 = 0, $spec$select1367 = 0, $spec$select1580 = 0, $spec$select1582 = 0, $spec$select1583 = 0;
 var $spec$store$select$i = 0, $spec$store$select$i1251 = 0, $spec$store$select$i1279 = 0, $spec$store$select$i1309 = 0, $storemerge = 0, $storemerge1189 = 0, $switch = 0, $switch$split1062D = 0, $switch$split2D = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer16 = 0, $vararg_buffer19 = 0, $vararg_buffer22 = 0, $vararg_buffer25 = 0, $vararg_buffer28 = 0, $vararg_buffer31 = 0, $vararg_buffer34 = 0;
 var $vararg_buffer37 = 0, $vararg_buffer4 = 0, $vararg_buffer40 = 0, $vararg_buffer43 = 0, $vararg_buffer46 = 0, $vararg_buffer49 = 0, $vararg_buffer52 = 0, $vararg_buffer55 = 0, $vararg_buffer57 = 0, $vararg_buffer60 = 0, $vararg_buffer62 = 0, $vararg_buffer65 = 0, $vararg_buffer68 = 0, $vararg_buffer7 = 0, $vararg_buffer71 = 0, $vararg_buffer73 = 0, $vararg_buffer76 = 0, $vararg_buffer79 = 0, $vararg_buffer82 = 0, $vararg_buffer85 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(480|0);
 $vararg_buffer85 = sp + 240|0;
 $vararg_buffer82 = sp + 232|0;
 $vararg_buffer79 = sp + 224|0;
 $vararg_buffer76 = sp + 216|0;
 $vararg_buffer73 = sp + 208|0;
 $vararg_buffer71 = sp + 200|0;
 $vararg_buffer68 = sp + 192|0;
 $vararg_buffer65 = sp + 184|0;
 $vararg_buffer62 = sp + 176|0;
 $vararg_buffer60 = sp + 168|0;
 $vararg_buffer57 = sp + 160|0;
 $vararg_buffer55 = sp + 152|0;
 $vararg_buffer52 = sp + 144|0;
 $vararg_buffer49 = sp + 136|0;
 $vararg_buffer46 = sp + 128|0;
 $vararg_buffer43 = sp + 120|0;
 $vararg_buffer40 = sp + 112|0;
 $vararg_buffer37 = sp + 104|0;
 $vararg_buffer34 = sp + 96|0;
 $vararg_buffer31 = sp + 88|0;
 $vararg_buffer28 = sp + 80|0;
 $vararg_buffer25 = sp + 72|0;
 $vararg_buffer22 = sp + 64|0;
 $vararg_buffer19 = sp + 56|0;
 $vararg_buffer16 = sp + 48|0;
 $vararg_buffer13 = sp + 40|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $13 = sp + 472|0;
 $14 = sp + 424|0;
 $15 = sp + 420|0;
 $16 = sp + 416|0;
 $17 = sp + 360|0;
 $18 = sp + 260|0;
 $19 = sp + 256|0;
 $20 = sp + 248|0;
 $21 = sp + 478|0;
 $22 = sp + 476|0;
 HEAP32[$15>>2] = 0;
 $23 = ($4|0)<(1276);
 $24 = $23 ? $4 : 1276;
 $25 = ((($0)) + 18032|0);
 HEAP32[$25>>2] = 0;
 $26 = ($2|0)<(1);
 $27 = ($24|0)<(1);
 $or$cond = $26 | $27;
 if ($or$cond) {
  $$6 = -1;
  STACKTOP = sp;return ($$6|0);
 }
 $28 = ($24|0)==(1);
 if ($28) {
  $29 = ((($0)) + 144|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($2*10)|0;
  $32 = ($30|0)==($31|0);
  if ($32) {
   $$6 = -2;
   STACKTOP = sp;return ($$6|0);
  }
 }
 $33 = ((($0)) + 4|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (($0) + ($34)|0);
 $36 = HEAP32[$0>>2]|0;
 $37 = (($0) + ($36)|0);
 $38 = ((($0)) + 108|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ($39|0)==(2051);
 if ($40) {
  $$01153 = 0;
 } else {
  $41 = ((($0)) + 116|0);
  $42 = HEAP32[$41>>2]|0;
  $$01153 = $42;
 }
 $43 = ((($0)) + 168|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = ($44|0)>($5|0);
 $$ = $45 ? $5 : $44;
 HEAP32[$vararg_buffer>>2] = $16;
 (_opus_custom_encoder_ctl($37,10015,$vararg_buffer)|0);
 HEAP32[$17>>2] = 0;
 $46 = ((($0)) + 8|0);
 $47 = ((($0)) + 44|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = ($48|0)>(6);
 do {
  if ($49) {
   $52 = ((($0)) + 144|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = ($53|0)>(15999);
   if ($54) {
    $55 = ((($0)) + 112|0);
    $56 = HEAP32[$55>>2]|0;
    $57 = Math_imul($56, $2)|0;
    $58 = ($57|0)>(0);
    if ($58) {
     $$02225$i$i = Math_fround(0.0);$$02324$i$i = 0;$$026$i$i = Math_fround(0.0);
     while(1) {
      $59 = (($1) + ($$02324$i$i<<2)|0);
      $60 = Math_fround(HEAPF32[$59>>2]);
      $61 = $$02225$i$i > $60;
      $$022$$i$i = $61 ? $$02225$i$i : $60;
      $62 = $$026$i$i < $60;
      $63 = $62 ? $$026$i$i : $60;
      $64 = (($$02324$i$i) + 1)|0;
      $exitcond$i$i = ($64|0)==($57|0);
      if ($exitcond$i$i) {
       $$0$lcssa$i$i = $63;$$022$lcssa$i$i = $$022$$i$i;
       break;
      } else {
       $$02225$i$i = $$022$$i$i;$$02324$i$i = $64;$$026$i$i = $63;
      }
     }
    } else {
     $$0$lcssa$i$i = Math_fround(0.0);$$022$lcssa$i$i = Math_fround(0.0);
    }
    $65 = Math_fround(- $$0$lcssa$i$i);
    $66 = $$022$lcssa$i$i > $65;
    $67 = $66 ? $$022$lcssa$i$i : $65;
    $68 = 1 << $$;
    $69 = (Math_fround(($68|0)));
    $70 = Math_fround(Math_fround(1.0) / $69);
    $71 = !($67 <= $70);
    if (!($71)) {
     $72 = ((($0)) + 18016|0);
     HEAP32[$72>>2] = 0;
     $$1118313201531 = 1;$$1118513181533 = -1;$$1118713161534 = -1;$1564 = 0;$454 = $72;
     break;
    }
    $73 = ((($0)) + 188|0);
    $74 = ((($0)) + 8464|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = ((($0)) + 8468|0);
    $77 = HEAP32[$76>>2]|0;
    $78 = HEAP32[$16>>2]|0;
    _run_analysis($73,$78,$6,$7,$2,$8,$9,$10,$53,$$,$11,$17);
    $79 = ((($17)) + 32|0);
    $80 = Math_fround(HEAPF32[$79>>2]);
    $81 = $80 > Math_fround(0.100000001);
    if ($81) {
     $82 = ((($0)) + 18024|0);
     $83 = Math_fround(HEAPF32[$82>>2]);
     $84 = Math_fround($83 * Math_fround(0.999000012));
     $85 = HEAP32[$55>>2]|0;
     $86 = Math_imul($85, $2)|0;
     $87 = ($86|0)>(0);
     if ($87) {
      $$01011$i$i = 0;$$012$i$i = Math_fround(0.0);
      while(1) {
       $88 = (($1) + ($$01011$i$i<<2)|0);
       $89 = Math_fround(HEAPF32[$88>>2]);
       $90 = Math_fround($89 * $89);
       $91 = Math_fround($$012$i$i + $90);
       $92 = (($$01011$i$i) + 1)|0;
       $exitcond$i$i1230 = ($92|0)==($86|0);
       if ($exitcond$i$i1230) {
        $$0$lcssa$i$i1231 = $91;
        break;
       } else {
        $$01011$i$i = $92;$$012$i$i = $91;
       }
      }
     } else {
      $$0$lcssa$i$i1231 = Math_fround(0.0);
     }
     $93 = (Math_fround(($86|0)));
     $94 = Math_fround($$0$lcssa$i$i1231 / $93);
     $95 = $84 > $94;
     if ($95) {
      $102 = $84;
     } else {
      if ($87) {
       $$01011$i$i1234 = 0;$$012$i$i1233 = Math_fround(0.0);
       while(1) {
        $96 = (($1) + ($$01011$i$i1234<<2)|0);
        $97 = Math_fround(HEAPF32[$96>>2]);
        $98 = Math_fround($97 * $97);
        $99 = Math_fround($$012$i$i1233 + $98);
        $100 = (($$01011$i$i1234) + 1)|0;
        $exitcond$i$i1235 = ($100|0)==($86|0);
        if ($exitcond$i$i1235) {
         $$0$lcssa$i$i1236 = $99;
         break;
        } else {
         $$01011$i$i1234 = $100;$$012$i$i1233 = $99;
        }
       }
      } else {
       $$0$lcssa$i$i1236 = Math_fround(0.0);
      }
      $101 = Math_fround($$0$lcssa$i$i1236 / $93);
      $102 = $101;
     }
     HEAPF32[$82>>2] = $102;
     $$11185$ph$ph = $77;$$11187$ph$ph = $75;
    } else {
     $$11185$ph$ph = $77;$$11187$ph$ph = $75;
    }
   } else {
    $$11185$ph$ph = -1;$$11187$ph$ph = -1;
   }
   $$pre$pr = HEAP32[$17>>2]|0;
   $103 = ((($0)) + 140|0);
   HEAP32[$103>>2] = -1;
   $104 = ((($0)) + 18016|0);
   HEAP32[$104>>2] = 0;
   $105 = ($$pre$pr|0)==(0);
   if ($105) {
    $$1118313201531 = 0;$$1118513181533 = $$11185$ph$ph;$$1118713161534 = $$11187$ph$ph;$1564 = 1;$454 = $104;
   } else {
    $106 = ((($0)) + 124|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = ($107|0)==(-1000);
    if ($108) {
     $109 = ((($17)) + 20|0);
     $110 = Math_fround(HEAPF32[$109>>2]);
     $111 = Math_fround(Math_fround(1.0) - $110);
     $112 = Math_fround($111 * Math_fround(100.0));
     $113 = +$112;
     $114 = $113 + 0.5;
     $115 = (+Math_floor((+$114)));
     $116 = (~~(($115)));
     $117 = ((($0)) + 140|0);
     HEAP32[$117>>2] = $116;
    }
    $118 = ((($17)) + 28|0);
    $119 = HEAP32[$118>>2]|0;
    $120 = ($119|0)<(13);
    if ($120) {
     HEAP32[$104>>2] = 1101;
     $$1118313201531 = 0;$$1118513181533 = $$11185$ph$ph;$$1118713161534 = $$11187$ph$ph;$1564 = 1;$454 = $104;
     break;
    }
    $121 = ($119|0)<(15);
    if ($121) {
     HEAP32[$104>>2] = 1102;
     $$1118313201531 = 0;$$1118513181533 = $$11185$ph$ph;$$1118713161534 = $$11187$ph$ph;$1564 = 1;$454 = $104;
     break;
    }
    $122 = ($119|0)<(17);
    if ($122) {
     HEAP32[$104>>2] = 1103;
     $$1118313201531 = 0;$$1118513181533 = $$11185$ph$ph;$$1118713161534 = $$11187$ph$ph;$1564 = 1;$454 = $104;
     break;
    }
    $123 = ($119|0)<(19);
    if ($123) {
     HEAP32[$104>>2] = 1104;
     $$1118313201531 = 0;$$1118513181533 = $$11185$ph$ph;$$1118713161534 = $$11187$ph$ph;$1564 = 1;$454 = $104;
     break;
    } else {
     HEAP32[$104>>2] = 1105;
     $$1118313201531 = 0;$$1118513181533 = $$11185$ph$ph;$$1118713161534 = $$11187$ph$ph;$1564 = 1;$454 = $104;
     break;
    }
   }
  } else {
   $50 = ((($0)) + 140|0);
   HEAP32[$50>>2] = -1;
   $51 = ((($0)) + 18016|0);
   HEAP32[$51>>2] = 0;
   $$1118313201531 = 0;$$1118513181533 = -1;$$1118713161534 = -1;$1564 = 1;$454 = $51;
  }
 } while(0);
 $124 = ((($0)) + 112|0);
 $125 = HEAP32[$124>>2]|0;
 $126 = ($125|0)==(2);
 if ($126) {
  $127 = ((($0)) + 120|0);
  $128 = HEAP32[$127>>2]|0;
  $129 = ($128|0)==(1);
  if ($129) {
   $$01177 = Math_fround(0.0);
  } else {
   $130 = ((($0)) + 144|0);
   $131 = HEAP32[$130>>2]|0;
   $132 = ((($0)) + 14156|0);
   $133 = (Math_fround(_compute_stereo_width($1,$2,$131,$132)));
   $$01177 = $133;
  }
 } else {
  $$01177 = Math_fround(0.0);
 }
 $134 = ($2|0)==(0);
 if ($134) {
  $135 = ((($0)) + 144|0);
  $136 = HEAP32[$135>>2]|0;
  $137 = (($136|0) / 400)&-1;
  $$011$i = $137;
 } else {
  $$011$i = $2;
 }
 $138 = ((($0)) + 164|0);
 $139 = HEAP32[$138>>2]|0;
 switch ($139|0) {
 case -1000:  {
  $140 = ((($0)) + 144|0);
  $141 = HEAP32[$140>>2]|0;
  $142 = ($141*60)|0;
  $143 = (($142|0) / ($$011$i|0))&-1;
  $144 = HEAP32[$124>>2]|0;
  $145 = Math_imul($144, $141)|0;
  $146 = (($145) + ($143))|0;
  $$0$i = $146;$$pre$phi1527Z2D = $140;
  break;
 }
 case -1:  {
  $147 = $24 << 3;
  $148 = ((($0)) + 144|0);
  $149 = HEAP32[$148>>2]|0;
  $150 = Math_imul($147, $149)|0;
  $151 = (($150|0) / ($$011$i|0))&-1;
  $$0$i = $151;$$pre$phi1527Z2D = $148;
  break;
 }
 default: {
  $$pre1526 = ((($0)) + 144|0);
  $$0$i = $139;$$pre$phi1527Z2D = $$pre1526;
 }
 }
 $152 = ((($0)) + 160|0);
 HEAP32[$152>>2] = $$0$i;
 $153 = HEAP32[$$pre$phi1527Z2D>>2]|0;
 $154 = (($153|0) / ($2|0))&-1;
 $155 = ((($0)) + 148|0);
 $156 = HEAP32[$155>>2]|0;
 $157 = ($156|0)==(0);
 if ($157) {
  $158 = ($153*12)|0;
  $159 = (($158|0) / ($2|0))&-1;
  $160 = ($$0$i*12)|0;
  $161 = (($160|0) / 8)&-1;
  $162 = (($159|0) / 2)&-1;
  $163 = (($162) + ($161))|0;
  $164 = (($163|0) / ($159|0))&-1;
  $165 = ($164|0)<($24|0);
  $$1190 = $165 ? $164 : $24;
  $166 = $159 << 3;
  $167 = Math_imul($166, $$1190)|0;
  $168 = (($167|0) / 12)&-1;
  HEAP32[$152>>2] = $168;
  $169 = ($$1190|0)>(1);
  if ($169) {
   $$01176 = $$1190;$173 = $168;
   label = 47;
  } else {
   $$011761322 = 1;
  }
 } else {
  $$01176 = $24;$173 = $$0$i;
  label = 47;
 }
 do {
  if ((label|0) == 47) {
   $170 = ($$01176|0)<(3);
   $171 = ($154*24)|0;
   $172 = ($173|0)<($171|0);
   $or$cond1577 = $170 | $172;
   if ($or$cond1577) {
    $$011761322 = $$01176;
   } else {
    $174 = ($154|0)<(50);
    $175 = Math_imul($$01176, $154)|0;
    if ($174) {
     $176 = ($175|0)<(300);
     $177 = ($173|0)<(2400);
     $or$cond1191 = $176 | $177;
     if ($or$cond1191) {
      $$011761322 = $$01176;
      break;
     }
    }
    $239 = $175 << 3;
    $240 = HEAP32[$124>>2]|0;
    $241 = HEAP32[$47>>2]|0;
    $242 = ((($0)) + 40|0);
    $243 = HEAP32[$242>>2]|0;
    $244 = ($240*40)|0;
    $245 = (($244) + 20)|0;
    $246 = (($154) + -50)|0;
    $247 = Math_imul($245, $246)|0;
    $248 = (($173) - ($247))|0;
    if ($157) {
     $249 = (($248|0) / 12)&-1;
     $250 = (($248) - ($249))|0;
     $$0$i1238 = $250;
    } else {
     $$0$i1238 = $248;
    }
    $251 = (($241) + 90)|0;
    $252 = Math_imul($$0$i1238, $251)|0;
    $253 = (($252|0) / 100)&-1;
    $254 = Math_imul($253, $243)|0;
    $255 = ($243*12)|0;
    $256 = (($255) + 20)|0;
    $257 = (($254|0) / ($256|0))&-1;
    $258 = (($253) - ($257))|0;
    $259 = ((($0)) + 124|0);
    $260 = HEAP32[$259>>2]|0;
    L79: do {
     switch ($260|0) {
     case 3001:  {
      $$01150 = 127;
      break;
     }
     case 3002:  {
      $$01150 = 0;
      break;
     }
     default: {
      $261 = ((($0)) + 140|0);
      $262 = HEAP32[$261>>2]|0;
      $263 = ($262|0)>(-1);
      if ($263) {
       $264 = ($262*327)|0;
       $265 = $264 >> 8;
       $266 = HEAP32[$38>>2]|0;
       $267 = ($266|0)==(2049);
       $268 = ($265|0)<(115);
       $269 = $268 ? $265 : 115;
       $spec$select1355 = $267 ? $269 : $265;
       $$01150 = $spec$select1355;
       break L79;
      } else {
       $270 = HEAP32[$38>>2]|0;
       $271 = ($270|0)==(2048);
       $$1195 = $271 ? 115 : 48;
       $$01150 = $$1195;
       break L79;
      }
     }
     }
    } while(0);
    $272 = ((($0)) + 120|0);
    $273 = HEAP32[$272>>2]|0;
    $274 = ($273|0)==(-1000);
    $275 = ($240|0)==(2);
    $276 = ((($0)) + 14088|0);
    if ($274) {
     if ($275) {
      $277 = HEAP32[$276>>2]|0;
      $278 = ($277|0)==(2);
      $$1196 = $278 ? 23000 : 25000;
      $279 = ($258|0)>($$1196|0);
      $280 = $279 ? 2 : 1;
      $$sink = $280;
     } else {
      label = 80;
     }
    } else {
     if ($275) {
      $$sink = $273;
     } else {
      label = 80;
     }
    }
    if ((label|0) == 80) {
     $$sink = $240;
    }
    HEAP32[$276>>2] = $$sink;
    $281 = ($$sink*40)|0;
    $282 = (($281) + 20)|0;
    $283 = Math_imul($282, $246)|0;
    $284 = (($173) - ($283))|0;
    if ($157) {
     $285 = (($284|0) / 12)&-1;
     $286 = (($284) - ($285))|0;
     $$0$i1239 = $286;
    } else {
     $$0$i1239 = $284;
    }
    $287 = Math_imul($$0$i1239, $251)|0;
    $288 = (($287|0) / 100)&-1;
    $289 = Math_imul($288, $243)|0;
    $290 = (($289|0) / ($256|0))&-1;
    $291 = (($288) - ($290))|0;
    $292 = HEAP32[$38>>2]|0;
    $293 = ($292|0)==(2051);
    do {
     if ($293) {
      $294 = ((($0)) + 14120|0);
      $$sink1605 = $294;
      label = 98;
     } else {
      $295 = ((($0)) + 136|0);
      $296 = HEAP32[$295>>2]|0;
      $297 = ($296|0)==(-1000);
      if ($297) {
       $298 = Math_fround(Math_fround(1.0) - $$01177);
       $299 = Math_fround($298 * Math_fround(64000.0));
       $300 = Math_fround($$01177 * Math_fround(36000.0));
       $301 = Math_fround($300 + $299);
       $302 = (~~(($301)));
       $303 = Math_fround($298 * Math_fround(16000.0));
       $304 = Math_fround($$01177 * Math_fround(16000.0));
       $305 = Math_fround($304 + $303);
       $306 = (~~(($305)));
       $307 = Math_imul($$01150, $$01150)|0;
       $308 = (($302) - ($306))|0;
       $309 = Math_imul($307, $308)|0;
       $310 = $309 >> 14;
       $311 = (($310) + ($306))|0;
       $312 = ($292|0)==(2048);
       $313 = (($311) + 8000)|0;
       $spec$select1197 = $312 ? $313 : $311;
       $314 = ((($0)) + 14124|0);
       $315 = HEAP32[$314>>2]|0;
       $316 = ($315|0)==(1002);
       if ($316) {
        $317 = (($spec$select1197) + -4000)|0;
        $$11160 = $317;
       } else {
        $318 = ($315|0)>(0);
        $319 = (($spec$select1197) + 4000)|0;
        $spec$select1198 = $318 ? $319 : $spec$select1197;
        $$11160 = $spec$select1198;
       }
       $320 = ($291|0)<($$11160|0);
       $321 = $320 ? 1000 : 1002;
       $322 = ((($0)) + 14120|0);
       HEAP32[$322>>2] = $321;
       $323 = ((($0)) + 48|0);
       $324 = HEAP32[$323>>2]|0;
       $325 = ($324|0)==(0);
       do {
        if ($325) {
         $1565 = $321;
        } else {
         $326 = (128 - ($$01150))|0;
         $327 = $326 >> 4;
         $328 = ($243|0)>($327|0);
         if (!($328)) {
          $1565 = $321;
          break;
         }
         HEAP32[$322>>2] = 1000;
         $1565 = 1000;
        }
       } while(0);
       $329 = ((($0)) + 184|0);
       $330 = HEAP32[$329>>2]|0;
       $331 = ($330|0)==(0);
       do {
        if ($331) {
         $332 = ((($0)) + 56|0);
         HEAP32[$332>>2] = 0;
         $1566 = $1565;
        } else {
         $333 = HEAP32[$17>>2]|0;
         $334 = $333 | $$1118313201531;
         $335 = ($334|0)==(0);
         $336 = $335&1;
         $337 = ((($0)) + 56|0);
         HEAP32[$337>>2] = $336;
         $338 = ($$01150|0)>(100);
         $or$cond15 = $338 & $335;
         if (!($or$cond15)) {
          $1566 = $1565;
          break;
         }
         HEAP32[$322>>2] = 1000;
         $1566 = 1000;
        }
       } while(0);
       $339 = ($154|0)>(50);
       $340 = $339 ? 9000 : 6000;
       $341 = Math_imul($340, $2)|0;
       $342 = $153 << 3;
       $343 = (($341|0) / ($342|0))&-1;
       $344 = ($$01176|0)<($343|0);
       if ($344) {
        $$sink1605 = $322;
        label = 98;
        break;
       } else {
        $$pre$phiZ2D = $322;$349 = $1566;
       }
      } else {
       $345 = ((($0)) + 14120|0);
       HEAP32[$345>>2] = $296;
       $$pre$phiZ2D = $345;$349 = $296;
      }
      $348 = ($349|0)!=(1002);
      $350 = (($153|0) / 100)&-1;
      $351 = ($350|0)>($2|0);
      $or$cond1357 = $351 & $348;
      if ($or$cond1357) {
       HEAP32[$$pre$phiZ2D>>2] = 1002;
       $$pre$phi1539Z2D = $$pre$phiZ2D;$1567 = $351;$1568 = 1002;
      } else {
       $$pre$phi1539Z2D = $$pre$phiZ2D;$1567 = $351;$1568 = $349;
      }
     }
    } while(0);
    if ((label|0) == 98) {
     HEAP32[$$sink1605>>2] = 1002;
     $346 = (($153|0) / 100)&-1;
     $347 = ($346|0)>($2|0);
     $$pre$phi1539Z2D = $$sink1605;$1567 = $347;$1568 = 1002;
    }
    $352 = ((($0)) + 176|0);
    $353 = HEAP32[$352>>2]|0;
    $354 = ($353|0)==(0);
    if ($354) {
     $359 = $1568;
    } else {
     HEAP32[$$pre$phi1539Z2D>>2] = 1002;
     $359 = 1002;
    }
    $355 = ((($0)) + 14124|0);
    $356 = HEAP32[$355>>2]|0;
    $357 = ($356|0)>(0);
    if ($357) {
     $358 = ($359|0)!=(1002);
     $360 = ($356|0)==(1002);
     $or$cond1371 = $360 ^ $358;
     $brmerge1372 = $360 | $358;
     $not$or$cond1371 = $or$cond1371 ^ 1;
     $$mux1373 = $not$or$cond1371&1;
     if ($brmerge1372) {
      $$01120 = $$mux1373;$$01140 = $$mux1373;$$01148 = 0;$369 = $359;
     } else {
      if ($1567) {
       $$01120 = 0;$$01140 = 0;$$01148 = 0;$369 = 1002;
      } else {
       HEAP32[$$pre$phi1539Z2D>>2] = $356;
       $$01120 = 1;$$01140 = 0;$$01148 = 1;$369 = $356;
      }
     }
    } else {
     $$01120 = 0;$$01140 = 0;$$01148 = 0;$369 = $359;
    }
    $361 = ($$sink|0)==(1);
    do {
     if ($361) {
      $362 = ((($0)) + 14128|0);
      $363 = HEAP32[$362>>2]|0;
      $364 = ($363|0)==(2);
      if ($364) {
       $365 = ((($0)) + 68|0);
       $366 = HEAP32[$365>>2]|0;
       $367 = ($366|0)==(0);
       if ($367) {
        $368 = ($369|0)==(1002);
        $370 = ($356|0)==(1002);
        $or$cond1358 = $370 | $368;
        if ($or$cond1358) {
         label = 112;
         break;
        }
        HEAP32[$365>>2] = 1;
        HEAP32[$276>>2] = 2;
        $373 = 2;
       } else {
        label = 112;
       }
      } else {
       label = 112;
      }
     } else {
      label = 112;
     }
    } while(0);
    if ((label|0) == 112) {
     $371 = ((($0)) + 68|0);
     HEAP32[$371>>2] = 0;
     $373 = $$sink;
    }
    $372 = ($373*40)|0;
    $374 = (($372) + 20)|0;
    $375 = Math_imul($374, $246)|0;
    $376 = (($173) - ($375))|0;
    if ($157) {
     $377 = (($376|0) / 12)&-1;
     $378 = (($376) - ($377))|0;
     $$0$i1241 = $378;
    } else {
     $$0$i1241 = $376;
    }
    $379 = Math_imul($$0$i1241, $251)|0;
    $380 = (($379|0) / 100)&-1;
    $381 = $369 | 1;
    $382 = ($381|0)==(1001);
    do {
     if ($382) {
      $390 = ($241|0)<(2);
      $391 = $380 << 2;
      $392 = (($391|0) / 5)&-1;
      $$1$i = $390 ? $392 : $380;
      $393 = Math_imul($$1$i, $243)|0;
      $394 = ($243*6)|0;
      $395 = (($394) + 10)|0;
      $396 = (($393|0) / ($395|0))&-1;
      $397 = (($$1$i) - ($396))|0;
      $398 = ($369|0)==(1002);
      if ($398) {
       $$011151548 = 0;$$2$i13261546 = $397;$1569 = 1002;$423 = 1;
       label = 127;
      } else {
       $$2$i1328 = $397;
       label = 121;
      }
     } else {
      $383 = ($369|0)==(1002);
      if (!($383)) {
       $387 = Math_imul($380, $243)|0;
       $388 = (($387|0) / ($256|0))&-1;
       $389 = (($380) - ($388))|0;
       $$2$i1328 = $389;
       label = 121;
       break;
      }
      $384 = ($241|0)<(5);
      if (!($384)) {
       $$011151548 = 0;$$2$i13261546 = $380;$1569 = 1002;$423 = 1;
       label = 127;
       break;
      }
      $385 = ($380*9)|0;
      $386 = (($385|0) / 10)&-1;
      $$011151548 = 0;$$2$i13261546 = $386;$1569 = 1002;$423 = 1;
      label = 127;
     }
    } while(0);
    do {
     if ((label|0) == 121) {
      $399 = ($356|0)==(1002);
      if ($399) {
       $400 = ((($0)) + 180|0);
       $401 = HEAP32[$400>>2]|0;
       (_silk_InitEncoder($35,$401,$18)|0);
       $$pre1507 = HEAP32[$$pre$phi1539Z2D>>2]|0;
       $$01115 = 1;$403 = $$pre1507;
      } else {
       $$01115 = 0;$403 = $369;
      }
      $402 = ($403|0)==(1002);
      if ($402) {
       $$011151548 = $$01115;$$2$i13261546 = $$2$i1328;$1569 = 1002;$423 = 1;
       label = 127;
       break;
      }
      $404 = ((($0)) + 14148|0);
      $405 = HEAP32[$404>>2]|0;
      $406 = ($405|0)==(0);
      if (!($406)) {
       $$011151548 = $$01115;$$2$i13261546 = $$2$i1328;$1569 = $403;$423 = 0;
       label = 127;
       break;
      }
      $407 = ((($0)) + 84|0);
      $408 = HEAP32[$407>>2]|0;
      $409 = ($408|0)==(0);
      if (!($409)) {
       $$011151548 = $$01115;$$2$i13261546 = $$2$i1328;$1569 = $403;$423 = 0;
       label = 127;
       break;
      }
      $$phi$trans$insert = ((($0)) + 14136|0);
      $$pre1509 = HEAP32[$$phi$trans$insert>>2]|0;
      $$011151547 = $$01115;$$2$i13261545 = $$2$i1328;$$pre$phi1522Z2D = $$phi$trans$insert;$431 = $$pre1509;$436 = $403;$459 = 0;
     }
    } while(0);
    do {
     if ((label|0) == 127) {
      $410 = ((($0)) + 14148|0);
      $411 = HEAP32[$410>>2]|0;
      $412 = ($411|0)==(0);
      $413 = ((($0)) + 14140|0);
      if (!($412)) {
       $419 = ($$2$i13261546|0)<(14000);
       do {
        if ($419) {
         $420 = ($$2$i13261546|0)<(13500);
         if (!($420)) {
          $$11156$ph = 1104;
          break;
         }
         $1562 = ($$2$i13261546|0)<(11000);
         if (!($1562)) {
          $$11156$ph = 1103;
          break;
         }
         $1563 = ($$2$i13261546|0)<(10000);
         $spec$select1583 = $1563 ? 1101 : 1102;
         $$11156$ph = $spec$select1583;
        } else {
         $$11156$ph = 1105;
        }
       } while(0);
       HEAP32[$413>>2] = $$11156$ph;
       $421 = ((($0)) + 14136|0);
       HEAP32[$421>>2] = $$11156$ph;
       $$011151547 = $$011151548;$$2$i13261545 = $$2$i13261546;$$pre$phi1522Z2D = $421;$431 = $$11156$ph;$436 = $1569;$459 = $423;
       break;
      }
      $414 = HEAP32[$413>>2]|0;
      $415 = ($414|0)<(1105);
      $$01154$us$p = $415 ? 2000 : -2000;
      $$01154$us = (14000 + ($$01154$us$p))|0;
      $416 = ($$2$i13261546|0)<($$01154$us|0);
      do {
       if ($416) {
        $417 = ($414|0)<(1104);
        $$01154$us$p$1 = $417 ? 1000 : -1000;
        $$01154$us$1 = (13500 + ($$01154$us$p$1))|0;
        $418 = ($$2$i13261546|0)<($$01154$us$1|0);
        if (!($418)) {
         $$11156 = 1104;
         break;
        }
        $1558 = ($414|0)<(1103);
        $$01154$us$p$2 = $1558 ? 1000 : -1000;
        $$01154$us$2 = (11000 + ($$01154$us$p$2))|0;
        $1559 = ($$2$i13261546|0)<($$01154$us$2|0);
        if (!($1559)) {
         $$11156 = 1103;
         break;
        }
        $1560 = ($414|0)<(1102);
        $$01154$us$p$3 = $1560 ? 1000 : -1000;
        $$01154$us$3 = (10000 + ($$01154$us$p$3))|0;
        $1561 = ($$2$i13261546|0)<($$01154$us$3|0);
        $spec$select1582 = $1561 ? 1101 : 1102;
        $$11156 = $spec$select1582;
       } else {
        $$11156 = 1105;
       }
      } while(0);
      HEAP32[$413>>2] = $$11156;
      $422 = ((($0)) + 14136|0);
      HEAP32[$422>>2] = $$11156;
      $$not1359 = $412 ^ 1;
      $brmerge1360 = $423 | $$not1359;
      if ($brmerge1360) {
       $$011151547 = $$011151548;$$2$i13261545 = $$2$i13261546;$$pre$phi1522Z2D = $422;$431 = $$11156;$436 = $1569;$459 = $423;
       break;
      }
      $424 = ((($0)) + 88|0);
      $425 = HEAP32[$424>>2]|0;
      $426 = ($425|0)==(0);
      $427 = ($$11156>>>0)>(1103);
      $or$cond1201 = $427 & $426;
      if (!($or$cond1201)) {
       $$011151547 = $$011151548;$$2$i13261545 = $$2$i13261546;$$pre$phi1522Z2D = $422;$431 = $$11156;$436 = $1569;$459 = $423;
       break;
      }
      HEAP32[$422>>2] = 1103;
      $$011151547 = $$011151548;$$2$i13261545 = $$2$i13261546;$$pre$phi1522Z2D = $422;$431 = 1103;$436 = $1569;$459 = $423;
     }
    } while(0);
    $428 = ((($0)) + 132|0);
    $429 = HEAP32[$428>>2]|0;
    $430 = ($431|0)>($429|0);
    if ($430) {
     HEAP32[$$pre$phi1522Z2D>>2] = $429;
     $1570 = $429;
    } else {
     $1570 = $431;
    }
    $432 = ((($0)) + 128|0);
    $433 = HEAP32[$432>>2]|0;
    $434 = ($433|0)==(-1000);
    if ($434) {
     $439 = $1570;
    } else {
     HEAP32[$$pre$phi1522Z2D>>2] = $433;
     $439 = $433;
    }
    $435 = ($436|0)!=(1002);
    $437 = ($175|0)<(1875);
    $or$cond17 = $437 & $435;
    if ($or$cond17) {
     $438 = ($439|0)<(1103);
     $spec$select1202 = $438 ? $439 : 1103;
     HEAP32[$$pre$phi1522Z2D>>2] = $spec$select1202;
     $443 = $spec$select1202;
    } else {
     $443 = $439;
    }
    $440 = HEAP32[$$pre$phi1527Z2D>>2]|0;
    $441 = ($440|0)<(24001);
    do {
     if ($441) {
      $442 = ($443|0)>(1104);
      if ($442) {
       HEAP32[$$pre$phi1522Z2D>>2] = 1104;
       $446 = 1104;
      } else {
       $446 = $443;
      }
      $444 = ($440|0)<(16001);
      if (!($444)) {
       $468 = $446;
       break;
      }
      $445 = ($446|0)>(1103);
      if ($445) {
       HEAP32[$$pre$phi1522Z2D>>2] = 1103;
       $449 = 1103;
      } else {
       $449 = $446;
      }
      $447 = ($440|0)<(12001);
      if (!($447)) {
       $468 = $449;
       break;
      }
      $448 = ($449|0)>(1102);
      if ($448) {
       HEAP32[$$pre$phi1522Z2D>>2] = 1102;
       $452 = 1102;
      } else {
       $452 = $449;
      }
      $450 = ($440|0)<(8001);
      $451 = ($452|0)>(1101);
      $or$cond1578 = $450 & $451;
      if (!($or$cond1578)) {
       $468 = $452;
       break;
      }
      HEAP32[$$pre$phi1522Z2D>>2] = 1101;
      $468 = 1101;
     } else {
      $468 = $443;
     }
    } while(0);
    $453 = HEAP32[$454>>2]|0;
    $455 = ($453|0)==(0);
    $$not1361 = $434 ^ 1;
    $brmerge1362 = $455 | $$not1361;
    if ($brmerge1362) {
     $482 = $468;
    } else {
     $456 = HEAP32[$276>>2]|0;
     $457 = ($456*18000)|0;
     $458 = ($$2$i13261545|0)>($457|0);
     $$not1363 = $459 ^ 1;
     $brmerge1364 = $458 | $$not1363;
     do {
      if ($brmerge1364) {
       $460 = ($456*24000)|0;
       $461 = ($$2$i13261545|0)>($460|0);
       $brmerge1366 = $461 | $$not1363;
       if (!($brmerge1366)) {
        $$01152 = 1102;
        break;
       }
       $462 = ($456*30000)|0;
       $463 = ($$2$i13261545|0)>($462|0);
       $464 = ($456*44000)|0;
       $465 = ($$2$i13261545|0)>($464|0);
       $$1203 = $465 ? 1105 : 1104;
       $spec$select1367 = $463 ? $$1203 : 1103;
       $$01152 = $spec$select1367;
      } else {
       $$01152 = 1101;
      }
     } while(0);
     $466 = ($453|0)>($$01152|0);
     $$$01152 = $466 ? $453 : $$01152;
     HEAP32[$454>>2] = $$$01152;
     $467 = ($468|0)<($$$01152|0);
     $469 = $467 ? $468 : $$$01152;
     HEAP32[$$pre$phi1522Z2D>>2] = $469;
     $482 = $469;
    }
    $470 = ((($0)) + 48|0);
    $471 = HEAP32[$470>>2]|0;
    $472 = HEAP32[$242>>2]|0;
    $473 = ((($0)) + 52|0);
    $474 = ($471|0)==(0);
    $475 = ($472|0)==(0);
    $or$cond$i = $474 | $475;
    $or$cond3$i = $459 | $or$cond$i;
    L203: do {
     if ($or$cond3$i) {
      $$2$shrunk$i = 0;
     } else {
      $476 = HEAP32[$473>>2]|0;
      $477 = ($472|0)<(25);
      $478 = $477 ? $472 : 25;
      $479 = (125 - ($478))|0;
      $480 = ($472|0)<(6);
      L205: do {
       switch ($476|0) {
       case 1:  {
        if ($480) {
         $481 = $482 << 1;
         $483 = (($481) + -2202)|0;
         $484 = (1136 + ($483<<2)|0);
         $485 = HEAP32[$484>>2]|0;
         $486 = (($481) + -2201)|0;
         $487 = (1136 + ($486<<2)|0);
         $488 = HEAP32[$487>>2]|0;
         $spec$select$us$i$us$le = (($485) - ($488))|0;
         $489 = Math_imul($spec$select$us$i$us$le, $479)|0;
         $490 = $489 >> 16;
         $491 = ($490*655)|0;
         $492 = $489 & 65535;
         $493 = ($492*655)|0;
         $494 = $493 >>> 16;
         $495 = (($494) + ($491))|0;
         $496 = ($495|0)<($$2$i13261545|0);
         $$2$shrunk$i = $496;
         break L203;
        }
        $498 = $482;
        while(1) {
         $497 = $498 << 1;
         $499 = (($497) + -2202)|0;
         $500 = (1136 + ($499<<2)|0);
         $501 = HEAP32[$500>>2]|0;
         $502 = (($497) + -2201)|0;
         $503 = (1136 + ($502<<2)|0);
         $504 = HEAP32[$503>>2]|0;
         $spec$select$us$i = (($501) - ($504))|0;
         $505 = Math_imul($spec$select$us$i, $479)|0;
         $506 = $505 >> 16;
         $507 = ($506*655)|0;
         $508 = $505 & 65535;
         $509 = ($508*655)|0;
         $510 = $509 >>> 16;
         $511 = (($510) + ($507))|0;
         $512 = ($511|0)<($$2$i13261545|0);
         if ($512) {
          $$2$shrunk$i = 1;
          break L203;
         }
         $513 = ($498|0)>(1101);
         if (!($513)) {
          break L205;
         }
         $514 = (($498) + -1)|0;
         HEAP32[$$pre$phi1522Z2D>>2] = $514;
         $498 = $514;
        }
        break;
       }
       case 0:  {
        if ($480) {
         $515 = $482 << 1;
         $516 = (($515) + -2202)|0;
         $517 = (1136 + ($516<<2)|0);
         $518 = HEAP32[$517>>2]|0;
         $519 = (($515) + -2201)|0;
         $520 = (1136 + ($519<<2)|0);
         $521 = HEAP32[$520>>2]|0;
         $$1$us39$i$us$le = (($521) + ($518))|0;
         $522 = Math_imul($$1$us39$i$us$le, $479)|0;
         $523 = $522 >> 16;
         $524 = ($523*655)|0;
         $525 = $522 & 65535;
         $526 = ($525*655)|0;
         $527 = $526 >>> 16;
         $528 = (($527) + ($524))|0;
         $529 = ($528|0)<($$2$i13261545|0);
         $$2$shrunk$i = $529;
         break L203;
        }
        $531 = $482;
        while(1) {
         $530 = $531 << 1;
         $532 = (($530) + -2202)|0;
         $533 = (1136 + ($532<<2)|0);
         $534 = HEAP32[$533>>2]|0;
         $535 = (($530) + -2201)|0;
         $536 = (1136 + ($535<<2)|0);
         $537 = HEAP32[$536>>2]|0;
         $$1$us39$i = (($537) + ($534))|0;
         $538 = Math_imul($$1$us39$i, $479)|0;
         $539 = $538 >> 16;
         $540 = ($539*655)|0;
         $541 = $538 & 65535;
         $542 = ($541*655)|0;
         $543 = $542 >>> 16;
         $544 = (($543) + ($540))|0;
         $545 = ($544|0)<($$2$i13261545|0);
         if ($545) {
          $$2$shrunk$i = 1;
          break L203;
         }
         $546 = ($531|0)>(1101);
         if (!($546)) {
          break L205;
         }
         $547 = (($531) + -1)|0;
         HEAP32[$$pre$phi1522Z2D>>2] = $547;
         $531 = $547;
        }
        break;
       }
       default: {
        $548 = $482 << 1;
        $549 = (($548) + -2202)|0;
        $550 = (1136 + ($549<<2)|0);
        $551 = HEAP32[$550>>2]|0;
        $552 = Math_imul($551, $479)|0;
        $553 = $552 >> 16;
        $554 = ($553*655)|0;
        $555 = $552 & 65535;
        $556 = ($555*655)|0;
        $557 = $556 >>> 16;
        $558 = (($557) + ($554))|0;
        $559 = ($558|0)<($$2$i13261545|0);
        $brmerge44$i1423 = $480 | $559;
        if ($brmerge44$i1423) {
         $$2$shrunk$i = $559;
         break L203;
        }
        $561 = $482;
        while(1) {
         $560 = ($561|0)>(1101);
         if (!($560)) {
          break L205;
         }
         $562 = (($561) + -1)|0;
         HEAP32[$$pre$phi1522Z2D>>2] = $562;
         $563 = $562 << 1;
         $564 = (($563) + -2202)|0;
         $565 = (1136 + ($564<<2)|0);
         $566 = HEAP32[$565>>2]|0;
         $567 = Math_imul($566, $479)|0;
         $568 = $567 >> 16;
         $569 = ($568*655)|0;
         $570 = $567 & 65535;
         $571 = ($570*655)|0;
         $572 = $571 >>> 16;
         $573 = (($572) + ($569))|0;
         $574 = ($573|0)<($$2$i13261545|0);
         if ($574) {
          $$2$shrunk$i = 1;
          break L203;
         } else {
          $561 = $562;
         }
        }
       }
       }
      } while(0);
      HEAP32[$$pre$phi1522Z2D>>2] = $482;
      $$2$shrunk$i = 0;
     }
    } while(0);
    $$2$i1243 = $$2$shrunk$i&1;
    HEAP32[$473>>2] = $$2$i1243;
    HEAP32[$vararg_buffer1>>2] = $$;
    (_opus_custom_encoder_ctl($37,4036,$vararg_buffer1)|0);
    $575 = HEAP32[$$pre$phi1539Z2D>>2]|0;
    $576 = ($575|0)==(1002);
    do {
     if ($576) {
      $577 = HEAP32[$$pre$phi1522Z2D>>2]|0;
      $578 = ($577|0)==(1102);
      if (!($578)) {
       break;
      }
      HEAP32[$$pre$phi1522Z2D>>2] = 1103;
     }
    } while(0);
    $579 = HEAP32[$352>>2]|0;
    $580 = ($579|0)==(0);
    if ($580) {
     $$pr1336 = HEAP32[$$pre$phi1522Z2D>>2]|0;
     $581 = ($575|0)==(1000);
     $582 = ($$pr1336|0)>(1103);
     $or$cond19 = $581 & $582;
     if ($or$cond19) {
      $$ph = $$pr1336;$$sink1606 = 1001;
      label = 184;
     } else {
      $585 = $$pr1336;
      label = 183;
     }
    } else {
     HEAP32[$$pre$phi1522Z2D>>2] = 1101;
     $585 = 1101;
     label = 183;
    }
    if ((label|0) == 183) {
     $583 = ($575|0)==(1001);
     $584 = ($585|0)<(1104);
     $or$cond21 = $584 & $583;
     if ($or$cond21) {
      $$ph = $585;$$sink1606 = 1000;
      label = 184;
     } else {
      $$pr = $575;$886 = $585;
     }
    }
    if ((label|0) == 184) {
     HEAP32[$$pre$phi1539Z2D>>2] = $$sink1606;
     $$pr = $$sink1606;$886 = $$ph;
    }
    $586 = HEAP32[$$pre$phi1527Z2D>>2]|0;
    $587 = (($586|0) / 50)&-1;
    $588 = ($587|0)>=($2|0);
    $589 = ($$pr|0)==(1000);
    $or$cond1579 = $588 | $589;
    do {
     if ($or$cond1579) {
      $590 = ($586*3)|0;
      $591 = (($590|0) / 50)&-1;
      $592 = ($591|0)<($2|0);
      if ($592) {
       $593 = ($$pr|0)==(1000);
       if (!($593)) {
        $$01151 = $587;
        break;
       }
       $594 = $586 << 1;
       $595 = (($594|0) / 25)&-1;
       $596 = ($595|0)==($2|0);
       if ($596) {
        $597 = (($586|0) / 25)&-1;
        $$01151 = $597;
        break;
       } else {
        $598 = (($590|0) / 25)&-1;
        $599 = ($598|0)==($2|0);
        $spec$select1580 = $599 ? $591 : $587;
        $$01151 = $spec$select1580;
        break;
       }
      }
      $605 = ((($0)) + 14144|0);
      $606 = HEAP32[$605>>2]|0;
      $607 = ($606|0)==(0);
      if ($607) {
       $$11116 = $$011151547;$$11121 = $$01120;$$11141 = $$01140;
      } else {
       HEAP32[$605>>2] = 0;
       $$11116 = 1;$$11121 = 1;$$11141 = 1;
      }
      $608 = ($$pr|0)==(1002);
      $609 = ($$11121|0)==(0);
      $610 = $609 | $608;
      $$pre1511 = HEAP32[$152>>2]|0;
      if ($610) {
       $$01132 = 0;$$31123 = 0;
      } else {
       $611 = HEAP32[$276>>2]|0;
       $612 = ($611*40)|0;
       $613 = (($612) + 20)|0;
       $614 = (200 - ($154))|0;
       $615 = Math_imul($613, $614)|0;
       $616 = (($615) + ($$pre1511))|0;
       $617 = ($616*3)|0;
       $618 = (($617|0) / 3200)&-1;
       $619 = $$01176 << 3;
       $620 = $613 << 1;
       $621 = (($619) - ($620))|0;
       $622 = ($621*240)|0;
       $623 = (48000 / ($154|0))&-1;
       $624 = (($623) + 240)|0;
       $625 = (($622|0) / ($624|0))&-1;
       $626 = (($625) + ($613))|0;
       $627 = (($626|0) / 8)&-1;
       $628 = ($618|0)<($627|0);
       $629 = $628 ? $618 : $627;
       $630 = $611 << 3;
       $631 = $630 | 4;
       $632 = ($629|0)>($631|0);
       $633 = ($629|0)<(257);
       $634 = $633 ? $629 : 257;
       $$0$i1254 = $632 ? $634 : 0;
       $635 = ($$0$i1254|0)==(0);
       $spec$select1205 = $635 ? 0 : $$11121;
       $$01132 = $$0$i1254;$$31123 = $spec$select1205;
      }
      $636 = (($$01176) - ($$01132))|0;
      $637 = Math_imul($$pre1511, $2)|0;
      $638 = $586 << 3;
      $639 = (($637|0) / ($638|0))&-1;
      $640 = ($636|0)<($639|0);
      $$1206 = $640 ? $636 : $639;
      $641 = ((($3)) + 1|0);
      $642 = (($$01176) + -1)|0;
      _ec_enc_init($14,$641,$642);
      $643 = (($$01153) + ($2))|0;
      $644 = HEAP32[$124>>2]|0;
      $645 = Math_imul($644, $643)|0;
      $646 = (_llvm_stacksave()|0);
      $$alloca_mul = $645<<2;
      $647 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
      $648 = ((($0)) + 14176|0);
      $649 = ((($0)) + 172|0);
      $650 = HEAP32[$649>>2]|0;
      $651 = (($650) - ($$01153))|0;
      $652 = HEAP32[$124>>2]|0;
      $653 = Math_imul($651, $652)|0;
      $654 = (((($0)) + 14176|0) + ($653<<2)|0);
      $655 = $$01153 << 2;
      $656 = Math_imul($655, $652)|0;
      _memcpy(($647|0),($654|0),($656|0))|0;
      $657 = HEAP32[$$pre$phi1539Z2D>>2]|0;
      $658 = ($657|0)==(1002);
      if ($658) {
       $659 = (_silk_lin2log(60)|0);
       $660 = $659 << 8;
       $$01149 = $660;
      } else {
       $661 = ((($35)) + 8|0);
       $662 = HEAP32[$661>>2]|0;
       $$01149 = $662;
      }
      $663 = ((($0)) + 14096|0);
      $664 = HEAP32[$663>>2]|0;
      $665 = (($$01149) - ($664))|0;
      $666 = $665 >> 16;
      $667 = ($666*983)|0;
      $668 = $665 & 65535;
      $669 = ($668*983)|0;
      $670 = $669 >>> 16;
      $671 = (($667) + ($664))|0;
      $672 = (($671) + ($670))|0;
      HEAP32[$663>>2] = $672;
      $673 = $672 >> 8;
      $674 = (_silk_log2lin($673)|0);
      $675 = HEAP32[$38>>2]|0;
      $676 = ($675|0)==(2048);
      $677 = HEAP32[$124>>2]|0;
      $678 = Math_imul($677, $$01153)|0;
      $679 = (($647) + ($678<<2)|0);
      $680 = ((($0)) + 14104|0);
      $681 = HEAP32[$$pre$phi1527Z2D>>2]|0;
      do {
       if ($676) {
        $sext$i = $674 << 16;
        $682 = $sext$i >> 16;
        $683 = ($682*2471)|0;
        $684 = (($681|0) / 1000)&-1;
        $685 = (($683|0) / ($684|0))&-1;
        $686 = Math_imul($685, -471)|0;
        $687 = (($686) + 268435456)|0;
        $688 = ($685*942)|0;
        $689 = (($688) + -536870912)|0;
        $690 = $687 >> 6;
        $691 = $687 >> 22;
        $692 = $685 >> 16;
        $sext1$i = $685 << 16;
        $693 = $sext1$i >> 16;
        $694 = Math_imul($693, $692)|0;
        $695 = $685 & 65535;
        $696 = Math_imul($693, $695)|0;
        $697 = $696 >> 16;
        $698 = $685 >> 15;
        $699 = (($698) + 1)|0;
        $700 = $699 >> 1;
        $701 = Math_imul($700, $685)|0;
        $702 = (($694) + -8388608)|0;
        $703 = (($702) + ($697))|0;
        $704 = (($703) + ($701))|0;
        $sext2$i = $704 << 16;
        $705 = $sext2$i >> 16;
        $706 = Math_imul($705, $691)|0;
        $707 = $690 & 65535;
        $708 = Math_imul($705, $707)|0;
        $709 = $708 >> 16;
        $710 = (($709) + ($706))|0;
        $711 = $704 >> 15;
        $712 = (($711) + 1)|0;
        $713 = $712 >> 1;
        $714 = Math_imul($713, $690)|0;
        $715 = (($710) + ($714))|0;
        $sext3$i = $690 << 16;
        $716 = $sext3$i >> 16;
        $717 = Math_imul($716, $691)|0;
        $718 = Math_imul($716, $707)|0;
        $719 = $718 >> 16;
        $720 = $687 >> 21;
        $721 = (($720) + 1)|0;
        $722 = $721 >> 1;
        $723 = Math_imul($722, $690)|0;
        $724 = (($723) + ($717))|0;
        $725 = (($724) + ($719))|0;
        $726 = (Math_fround(($715|0)));
        $727 = Math_fround($726 * Math_fround(3.7252903E-9));
        $728 = (Math_fround(($725|0)));
        $729 = Math_fround($728 * Math_fround(3.7252903E-9));
        $730 = (Math_fround(($687|0)));
        $731 = Math_fround($730 * Math_fround(3.7252903E-9));
        $732 = (Math_fround(($689|0)));
        $733 = Math_fround($732 * Math_fround(3.7252903E-9));
        $734 = ($2|0)>(0);
        if ($734) {
         $735 = ((($0)) + 14108|0);
         $$pre1512 = Math_fround(HEAPF32[$680>>2]);
         $$pre1513 = Math_fround(HEAPF32[$735>>2]);
         $$03$i$i = 0;$741 = $$pre1512;$744 = $$pre1513;
         while(1) {
          $736 = Math_imul($$03$i$i, $677)|0;
          $737 = (($1) + ($736<<2)|0);
          $738 = Math_fround(HEAPF32[$737>>2]);
          $739 = Math_fround($731 * $738);
          $740 = Math_fround($741 + $739);
          $742 = Math_fround($727 * $740);
          $743 = Math_fround($744 - $742);
          $745 = Math_fround($733 * $738);
          $746 = Math_fround($745 + $743);
          HEAPF32[$680>>2] = $746;
          $747 = Math_fround($729 * $740);
          $748 = Math_fround($739 - $747);
          $749 = Math_fround($748 + Math_fround(1.0E-30));
          HEAPF32[$735>>2] = $749;
          $750 = (($679) + ($736<<2)|0);
          HEAPF32[$750>>2] = $740;
          $751 = (($$03$i$i) + 1)|0;
          $exitcond$i$i1256 = ($751|0)==($2|0);
          if ($exitcond$i$i1256) {
           break;
          } else {
           $$03$i$i = $751;$741 = $746;$744 = $749;
          }
         }
        }
        $752 = ($677|0)==(2);
        if (!($752)) {
         break;
        }
        $753 = ((($1)) + 4|0);
        $754 = ((($0)) + 14112|0);
        $755 = ((($679)) + 4|0);
        if (!($734)) {
         break;
        }
        $756 = ((($0)) + 14116|0);
        $$pre1514 = Math_fround(HEAPF32[$754>>2]);
        $$pre1515 = Math_fround(HEAPF32[$756>>2]);
        $$03$i13$i = 0;$762 = $$pre1514;$765 = $$pre1515;
        while(1) {
         $757 = $$03$i13$i << 1;
         $758 = (($753) + ($757<<2)|0);
         $759 = Math_fround(HEAPF32[$758>>2]);
         $760 = Math_fround($731 * $759);
         $761 = Math_fround($762 + $760);
         $763 = Math_fround($727 * $761);
         $764 = Math_fround($765 - $763);
         $766 = Math_fround($733 * $759);
         $767 = Math_fround($766 + $764);
         HEAPF32[$754>>2] = $767;
         $768 = Math_fround($729 * $761);
         $769 = Math_fround($760 - $768);
         $770 = Math_fround($769 + Math_fround(1.0E-30));
         HEAPF32[$756>>2] = $770;
         $771 = (($755) + ($757<<2)|0);
         HEAPF32[$771>>2] = $761;
         $772 = (($$03$i13$i) + 1)|0;
         $exitcond$i14$i = ($772|0)==($2|0);
         if ($exitcond$i14$i) {
          break;
         } else {
          $$03$i13$i = $772;$762 = $767;$765 = $770;
         }
        }
       } else {
        $773 = (Math_fround(($681|0)));
        $774 = Math_fround(Math_fround(12.0) / $773);
        $775 = Math_fround(Math_fround(1.0) - $774);
        $776 = ($677|0)==(2);
        $777 = Math_fround(HEAPF32[$680>>2]);
        $778 = ((($0)) + 14108|0);
        $779 = Math_fround(HEAPF32[$778>>2]);
        if ($776) {
         $780 = ((($0)) + 14112|0);
         $781 = Math_fround(HEAPF32[$780>>2]);
         $782 = ((($0)) + 14116|0);
         $783 = Math_fround(HEAPF32[$782>>2]);
         $784 = ($2|0)>(0);
         if ($784) {
          $$01134$i = $777;$$01143$i = $779;$$01172$i = $781;$$01181$i = $783;$$05$i = 0;
          while(1) {
           $785 = $$05$i << 1;
           $786 = (($1) + ($785<<2)|0);
           $787 = Math_fround(HEAPF32[$786>>2]);
           $788 = $785 | 1;
           $789 = (($1) + ($788<<2)|0);
           $790 = Math_fround(HEAPF32[$789>>2]);
           $791 = Math_fround($787 - $$01134$i);
           $792 = Math_fround($790 - $$01172$i);
           $793 = Math_fround($774 * $787);
           $794 = Math_fround($793 + Math_fround(1.0E-30));
           $795 = Math_fround($775 * $$01134$i);
           $796 = Math_fround($795 + $794);
           $797 = Math_fround($774 * $790);
           $798 = Math_fround($797 + Math_fround(1.0E-30));
           $799 = Math_fround($775 * $$01172$i);
           $800 = Math_fround($799 + $798);
           $801 = Math_fround($791 - $$01143$i);
           $802 = Math_fround($792 - $$01181$i);
           $803 = Math_fround($774 * $791);
           $804 = Math_fround($803 + Math_fround(1.0E-30));
           $805 = Math_fround($775 * $$01143$i);
           $806 = Math_fround($805 + $804);
           $807 = Math_fround($774 * $792);
           $808 = Math_fround($807 + Math_fround(1.0E-30));
           $809 = Math_fround($775 * $$01181$i);
           $810 = Math_fround($809 + $808);
           $811 = (($679) + ($785<<2)|0);
           HEAPF32[$811>>2] = $801;
           $812 = (($679) + ($788<<2)|0);
           HEAPF32[$812>>2] = $802;
           $813 = (($$05$i) + 1)|0;
           $exitcond$i = ($813|0)==($2|0);
           if ($exitcond$i) {
            $$0113$lcssa$i = $796;$$0114$lcssa$i = $806;$$0117$lcssa$i = $800;$$0118$lcssa$i = $810;
            break;
           } else {
            $$01134$i = $796;$$01143$i = $806;$$01172$i = $800;$$01181$i = $810;$$05$i = $813;
           }
          }
         } else {
          $$0113$lcssa$i = $777;$$0114$lcssa$i = $779;$$0117$lcssa$i = $781;$$0118$lcssa$i = $783;
         }
         HEAPF32[$680>>2] = $$0113$lcssa$i;
         HEAPF32[$778>>2] = $$0114$lcssa$i;
         HEAPF32[$780>>2] = $$0117$lcssa$i;
         HEAPF32[$782>>2] = $$0118$lcssa$i;
         break;
        } else {
         $814 = ($2|0)>(0);
         if ($814) {
          $$011510$i = $779;$$01169$i = $777;$$111$i = 0;
          while(1) {
           $815 = (($1) + ($$111$i<<2)|0);
           $816 = Math_fround(HEAPF32[$815>>2]);
           $817 = Math_fround($816 - $$01169$i);
           $818 = Math_fround($774 * $816);
           $819 = Math_fround($818 + Math_fround(1.0E-30));
           $820 = Math_fround($775 * $$01169$i);
           $821 = Math_fround($820 + $819);
           $822 = Math_fround($817 - $$011510$i);
           $823 = Math_fround($774 * $817);
           $824 = Math_fround($823 + Math_fround(1.0E-30));
           $825 = Math_fround($775 * $$011510$i);
           $826 = Math_fround($825 + $824);
           $827 = (($679) + ($$111$i<<2)|0);
           HEAPF32[$827>>2] = $822;
           $828 = (($$111$i) + 1)|0;
           $exitcond22$i = ($828|0)==($2|0);
           if ($exitcond22$i) {
            $$0115$lcssa$i = $826;$$0116$lcssa$i = $821;
            break;
           } else {
            $$011510$i = $826;$$01169$i = $821;$$111$i = $828;
           }
          }
         } else {
          $$0115$lcssa$i = $779;$$0116$lcssa$i = $777;
         }
         HEAPF32[$680>>2] = $$0116$lcssa$i;
         HEAPF32[$778>>2] = $$0115$lcssa$i;
         break;
        }
       }
      } while(0);
      $829 = ($12|0)==(0);
      do {
       if (!($829)) {
        $830 = Math_imul($677, $2)|0;
        $831 = ($830|0)>(0);
        if ($831) {
         $$01011$i = 0;$$012$i = Math_fround(0.0);
         while(1) {
          $832 = (($679) + ($$01011$i<<2)|0);
          $833 = Math_fround(HEAPF32[$832>>2]);
          $834 = Math_fround($833 * $833);
          $835 = Math_fround($$012$i + $834);
          $836 = (($$01011$i) + 1)|0;
          $exitcond$i1260 = ($836|0)==($830|0);
          if ($exitcond$i1260) {
           $$0$lcssa$i = $835;
           break;
          } else {
           $$01011$i = $836;$$012$i = $835;
          }
         }
        } else {
         $$0$lcssa$i = Math_fround(0.0);
        }
        $837 = !($$0$lcssa$i < Math_fround(1.0E+9));
        $838 = ($$0$lcssa$i != $$0$lcssa$i) | (Math_fround(0.0) != Math_fround(0.0));
        $or$cond1207 = $837 | $838;
        if (!($or$cond1207)) {
         break;
        }
        $839 = $830 << 2;
        _memset(($679|0),0,($839|0))|0;
        ;HEAP32[$680>>2]=0|0;HEAP32[$680+4>>2]=0|0;HEAP32[$680+8>>2]=0|0;HEAP32[$680+12>>2]=0|0;
       }
      } while(0);
      $840 = HEAP32[$$pre$phi1539Z2D>>2]|0;
      $841 = ($840|0)==(1002);
      do {
       if ($841) {
        $$11175 = Math_fround(1.0);$$21165 = $886;$$31135 = $$01132;$$41144 = $$11141;$$61126 = $$31123;
        label = 313;
       } else {
        $842 = Math_imul($677, $2)|0;
        $843 = (_llvm_stacksave()|0);
        $$alloca_mul98 = $842<<1;
        $844 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul98)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul98)|0)+15)&-16)|0);;
        $845 = $$1206 << 3;
        $846 = (($845) + -8)|0;
        $847 = Math_imul($846, $154)|0;
        $848 = HEAP32[$$pre$phi1539Z2D>>2]|0;
        $849 = ($848|0)==(1001);
        do {
         if ($849) {
          $850 = HEAP32[$$pre$phi1527Z2D>>2]|0;
          $851 = ($2*50)|0;
          $852 = ($850|0)==($851|0);
          $853 = HEAP32[$155>>2]|0;
          $854 = HEAP32[$473>>2]|0;
          $855 = $852 ? 2 : 1;
          $856 = $854 << 1;
          $857 = (($856) + ($855))|0;
          $858 = ($847|0)<(12000);
          do {
           if ($858) {
            $$051$lcssa$i = 1;
            label = 229;
           } else {
            $859 = ($847|0)<(16000);
            if ($859) {
             $$051$lcssa$i = 2;
             label = 229;
             break;
            }
            $879 = ($847|0)<(20000);
            if ($879) {
             $$051$lcssa$i = 3;
             label = 229;
             break;
            }
            $880 = ($847|0)<(24000);
            if ($880) {
             $$051$lcssa$i = 4;
             label = 229;
             break;
            }
            $881 = ($847|0)<(32000);
            if ($881) {
             $$051$lcssa$i = 5;
             label = 229;
             break;
            }
            $882 = ($847|0)<(64000);
            if ($882) {
             $$051$lcssa$i = 6;
             label = 229;
             break;
            }
            $860 = (1304 + ($857<<2)|0);
            $861 = HEAP32[$860>>2]|0;
            $862 = (($847) + -64000)|0;
            $863 = (($862|0) / 2)&-1;
            $864 = (($861) + ($863))|0;
            $$048$i = $864;
           }
          } while(0);
          if ((label|0) == 229) {
           $865 = (($$051$lcssa$i) + -1)|0;
           $866 = ((1184 + (($865*20)|0)|0) + ($857<<2)|0);
           $867 = HEAP32[$866>>2]|0;
           $$phi$trans$insert$i = ((1184 + (($$051$lcssa$i*20)|0)|0) + ($857<<2)|0);
           $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
           $868 = (1184 + (($865*20)|0)|0);
           $869 = HEAP32[$868>>2]|0;
           $870 = (1184 + (($$051$lcssa$i*20)|0)|0);
           $871 = HEAP32[$870>>2]|0;
           $872 = (($871) - ($847))|0;
           $873 = Math_imul($872, $867)|0;
           $874 = (($847) - ($869))|0;
           $875 = Math_imul($874, $$pre$i)|0;
           $876 = (($873) + ($875))|0;
           $877 = (($871) - ($869))|0;
           $878 = (($876|0) / ($877|0))&-1;
           $$048$i = $878;
          }
          $883 = ($853|0)==(0);
          $884 = (($$048$i) + 100)|0;
          $spec$select$i = $883 ? $884 : $$048$i;
          $885 = ($886|0)==(1104);
          $887 = (($spec$select$i) + 300)|0;
          $$2$i1262 = $885 ? $887 : $spec$select$i;
          $888 = ((($0)) + 36|0);
          HEAP32[$888>>2] = $$2$i1262;
          $889 = ((($0)) + 14152|0);
          $890 = HEAP32[$889>>2]|0;
          $891 = ($890|0)==(0|0);
          if (!($891)) {
           $912 = $890;$933 = $$2$i1262;
           label = 237;
           break;
          }
          $892 = (($$2$i1262) - ($847))|0;
          $893 = (Math_fround(($892|0)));
          $894 = Math_fround($893 * Math_fround(9.765625E-4));
          $895 = +$894;
          $896 = $895 * 0.69314718055994529;
          $897 = (+_exp($896));
          $898 = Math_fround($897);
          $899 = Math_fround(Math_fround(1.0) - $898);
          $$011741552 = $899;$974 = $$2$i1262;
         } else {
          $900 = ((($0)) + 36|0);
          HEAP32[$900>>2] = $847;
          $$phi$trans$insert1516 = ((($0)) + 14152|0);
          $$pre1517 = HEAP32[$$phi$trans$insert1516>>2]|0;
          $901 = ($$pre1517|0)==(0|0);
          if ($901) {
           $$011741552 = Math_fround(1.0);$974 = $847;
          } else {
           $912 = $$pre1517;$933 = $847;
           label = 237;
          }
         }
        } while(0);
        do {
         if ((label|0) == 237) {
          $902 = HEAP32[$155>>2]|0;
          $903 = ($902|0)==(0);
          if ($903) {
           $$011741552 = Math_fround(1.0);$974 = $933;
           break;
          }
          $904 = HEAP32[$352>>2]|0;
          $905 = ($904|0)==(0);
          if (!($905)) {
           $$011741552 = Math_fround(1.0);$974 = $933;
           break;
          }
          $906 = HEAP32[$$pre$phi1522Z2D>>2]|0;
          switch ($906|0) {
          case 1101:  {
           $$01129 = Math_fround(8000.0);$$01130 = 13;
           break;
          }
          case 1102:  {
           $$01129 = Math_fround(12000.0);$$01130 = 15;
           break;
          }
          default: {
           $$01129 = Math_fround(16000.0);$$01130 = 17;
          }
          }
          $907 = HEAP32[$124>>2]|0;
          $908 = ($907|0)>(0);
          if ($908) {
           $$011311417 = 0;$$011381416 = Math_fround(0.0);
           while(1) {
            $909 = ($$011311417*21)|0;
            $$111041415 = 0;$$111391414 = $$011381416;
            while(1) {
             $910 = (($$111041415) + ($909))|0;
             $911 = (($912) + ($910<<2)|0);
             $913 = Math_fround(HEAPF32[$911>>2]);
             $914 = $913 < Math_fround(0.5);
             $915 = $914 ? $913 : Math_fround(0.5);
             $916 = !($915 > Math_fround(-2.0));
             $$not1369 = $914 ^ 1;
             $brmerge1370 = $916 | $$not1369;
             $$mux = $916 ? Math_fround(-2.0) : Math_fround(0.5);
             $917 = $brmerge1370 ? $$mux : $913;
             $918 = $917 > Math_fround(0.0);
             $919 = Math_fround($917 * Math_fround(0.5));
             $$01128 = $918 ? $919 : $917;
             $920 = Math_fround($$111391414 + $$01128);
             $921 = (($$111041415) + 1)|0;
             $exitcond1505 = ($921|0)==($$01130|0);
             if ($exitcond1505) {
              break;
             } else {
              $$111041415 = $921;$$111391414 = $920;
             }
            }
            $922 = (($$011311417) + 1)|0;
            $923 = ($922|0)<($907|0);
            if ($923) {
             $$011311417 = $922;$$011381416 = $920;
            } else {
             $$01138$lcssa = $920;
             break;
            }
           }
          } else {
           $$01138$lcssa = Math_fround(0.0);
          }
          $924 = (Math_fround(($$01130|0)));
          $925 = Math_fround($$01138$lcssa / $924);
          $926 = (Math_fround(($907|0)));
          $927 = Math_fround($925 * $926);
          $928 = Math_fround($927 + Math_fround(0.200000003));
          $929 = Math_fround($$01129 * $928);
          $930 = (~~(($929)));
          $931 = ((($0)) + 36|0);
          $932 = Math_imul($933, -2)|0;
          $934 = (($932|0) / 3)&-1;
          $935 = ($934|0)<($930|0);
          $$1208 = $935 ? $930 : $934;
          $936 = $906 & -2;
          $switch = ($936|0)==(1104);
          if ($switch) {
           $937 = ($$1208*3)|0;
           $938 = (($937|0) / 5)&-1;
           $$1208$pn = $938;
          } else {
           $$1208$pn = $$1208;
          }
          $storemerge1189 = (($$1208$pn) + ($933))|0;
          HEAP32[$931>>2] = $storemerge1189;
          $$011741552 = Math_fround(1.0);$974 = $storemerge1189;
         }
        } while(0);
        $939 = ($2*1000)|0;
        $940 = HEAP32[$$pre$phi1527Z2D>>2]|0;
        $941 = (($939|0) / ($940|0))&-1;
        $942 = ((($0)) + 32|0);
        HEAP32[$942>>2] = $941;
        $943 = HEAP32[$124>>2]|0;
        HEAP32[$46>>2] = $943;
        $944 = HEAP32[$276>>2]|0;
        $945 = ((($0)) + 12|0);
        HEAP32[$945>>2] = $944;
        $946 = ($886|0)==(1101);
        do {
         if ($946) {
          $947 = ((($0)) + 28|0);
          HEAP32[$947>>2] = 8000;
          $959 = 8000;
         } else {
          $948 = ($886|0)==(1102);
          $949 = ((($0)) + 28|0);
          if ($948) {
           HEAP32[$949>>2] = 12000;
           $959 = 12000;
           break;
          } else {
           HEAP32[$949>>2] = 16000;
           $959 = 16000;
           break;
          }
         }
        } while(0);
        $950 = ((($0)) + 24|0);
        $$1209 = $849 ? 16000 : 8000;
        HEAP32[$950>>2] = $$1209;
        $951 = ((($0)) + 20|0);
        HEAP32[$951>>2] = 16000;
        $952 = ($848|0)==(1000);
        do {
         if ($952) {
          $953 = ($154|0)>(50);
          $954 = $175 << 4;
          $955 = (($954|0) / 3)&-1;
          $$01127 = $953 ? $955 : $239;
          $956 = ($$01127|0)<(8000);
          if (!($956)) {
           break;
          }
          HEAP32[$951>>2] = 12000;
          $957 = ((($0)) + 28|0);
          $958 = ($959>>>0)<(12000);
          $spec$select1210 = $958 ? $959 : 12000;
          HEAP32[$957>>2] = $spec$select1210;
          $960 = ($$01127|0)<(7000);
          if (!($960)) {
           break;
          }
          HEAP32[$951>>2] = 8000;
          HEAP32[$957>>2] = 8000;
         }
        } while(0);
        $961 = HEAP32[$155>>2]|0;
        $962 = ($961|0)==(0);
        $963 = $962&1;
        $964 = ((($0)) + 60|0);
        HEAP32[$964>>2] = $963;
        $965 = $642 << 3;
        $966 = ((($0)) + 64|0);
        HEAP32[$966>>2] = $965;
        $967 = ($$31123|0)!=(0);
        $968 = ($$01132|0)>(1);
        $or$cond23 = $968 & $967;
        do {
         if ($or$cond23) {
          $969 = $$01132 << 3;
          $970 = $969 | 1;
          $971 = (($965) - ($970))|0;
          HEAP32[$966>>2] = $971;
          if (!($849)) {
           $977 = $971;
           break;
          }
          $972 = (($971) + -20)|0;
          HEAP32[$966>>2] = $972;
          $977 = $972;
         } else {
          $977 = $965;
         }
        } while(0);
        do {
         if ($962) {
          if (!($849)) {
           break;
          }
          $973 = Math_imul($974, $2)|0;
          $975 = (($973|0) / ($940|0))&-1;
          $976 = ($977|0)<($975|0);
          $$1212 = $976 ? $977 : $975;
          HEAP32[$966>>2] = $$1212;
         } else {
          if (!($849)) {
           break;
          }
          $978 = Math_imul($977, $940)|0;
          $979 = (($978|0) / ($2|0))&-1;
          $980 = ($2*50)|0;
          $981 = ($940|0)==($980|0);
          $982 = HEAP32[$473>>2]|0;
          $983 = $981 ? 2 : 1;
          $984 = $982 << 1;
          $985 = (($984) + ($983))|0;
          $986 = ($979|0)<(12000);
          do {
           if ($986) {
            $$051$lcssa$i1263 = 1;
            label = 269;
           } else {
            $987 = ($979|0)<(16000);
            if ($987) {
             $$051$lcssa$i1263 = 2;
             label = 269;
             break;
            }
            $1007 = ($979|0)<(20000);
            if ($1007) {
             $$051$lcssa$i1263 = 3;
             label = 269;
             break;
            }
            $1008 = ($979|0)<(24000);
            if ($1008) {
             $$051$lcssa$i1263 = 4;
             label = 269;
             break;
            }
            $1009 = ($979|0)<(32000);
            if ($1009) {
             $$051$lcssa$i1263 = 5;
             label = 269;
             break;
            }
            $1010 = ($979|0)<(64000);
            if ($1010) {
             $$051$lcssa$i1263 = 6;
             label = 269;
             break;
            }
            $988 = (1304 + ($985<<2)|0);
            $989 = HEAP32[$988>>2]|0;
            $990 = (($979) + -64000)|0;
            $991 = (($990|0) / 2)&-1;
            $992 = (($989) + ($991))|0;
            $$048$i1266 = $992;
           }
          } while(0);
          if ((label|0) == 269) {
           $993 = (($$051$lcssa$i1263) + -1)|0;
           $994 = ((1184 + (($993*20)|0)|0) + ($985<<2)|0);
           $995 = HEAP32[$994>>2]|0;
           $$phi$trans$insert$i1264 = ((1184 + (($$051$lcssa$i1263*20)|0)|0) + ($985<<2)|0);
           $$pre$i1265 = HEAP32[$$phi$trans$insert$i1264>>2]|0;
           $996 = (1184 + (($993*20)|0)|0);
           $997 = HEAP32[$996>>2]|0;
           $998 = (1184 + (($$051$lcssa$i1263*20)|0)|0);
           $999 = HEAP32[$998>>2]|0;
           $1000 = (($999) - ($979))|0;
           $1001 = Math_imul($1000, $995)|0;
           $1002 = (($979) - ($997))|0;
           $1003 = Math_imul($1002, $$pre$i1265)|0;
           $1004 = (($1001) + ($1003))|0;
           $1005 = (($999) - ($997))|0;
           $1006 = (($1004|0) / ($1005|0))&-1;
           $$048$i1266 = $1006;
          }
          $1011 = ($886|0)==(1104);
          $1012 = (($$048$i1266) + 300)|0;
          $$2$i1268 = $1011 ? $1012 : $$048$i1266;
          $1013 = Math_imul($$2$i1268, $2)|0;
          $1014 = (($1013|0) / ($940|0))&-1;
          HEAP32[$966>>2] = $1014;
         }
        } while(0);
        $1015 = ($$11116|0)==(0);
        if ($1015) {
         $1075 = $943;
        } else {
         HEAP32[$19>>2] = 0;
         $1016 = HEAP32[$649>>2]|0;
         $1017 = ((($0)) + 116|0);
         $1018 = HEAP32[$1017>>2]|0;
         $1019 = (($940|0) / 400)&-1;
         $1020 = (($1016) - ($1019))|0;
         $1021 = (($1020) - ($1018))|0;
         $1022 = Math_imul($1021, $943)|0;
         $1023 = (((($0)) + 14176|0) + ($1022<<2)|0);
         $1024 = HEAP32[$16>>2]|0;
         $1025 = ((($1024)) + 4|0);
         $1026 = HEAP32[$1025>>2]|0;
         $1027 = ((($1024)) + 60|0);
         $1028 = HEAP32[$1027>>2]|0;
         $1029 = (48000 / ($940|0))&-1;
         $1030 = (($1026|0) / ($1029|0))&-1;
         $1031 = ($943|0)==(1);
         $1032 = ($1030|0)>(0);
         do {
          if ($1031) {
           if (!($1032)) {
            break;
           }
           $$077$i = 0;
           while(1) {
            $1033 = Math_imul($$077$i, $1029)|0;
            $1034 = (($1028) + ($1033<<2)|0);
            $1035 = Math_fround(HEAPF32[$1034>>2]);
            $1036 = Math_fround($1035 * $1035);
            $1037 = Math_fround(Math_fround(1.0) - $1036);
            $1038 = Math_fround($1037 * Math_fround(0.0));
            $1039 = Math_fround($1036 + $1038);
            $1040 = (($1023) + ($$077$i<<2)|0);
            $1041 = Math_fround(HEAPF32[$1040>>2]);
            $1042 = Math_fround($1041 * $1039);
            HEAPF32[$1040>>2] = $1042;
            $1043 = (($$077$i) + 1)|0;
            $exitcond85$i = ($1043|0)==($1030|0);
            if ($exitcond85$i) {
             break;
            } else {
             $$077$i = $1043;
            }
           }
          } else {
           if (!($1032)) {
            break;
           }
           $$180$i = 0;
           while(1) {
            $1044 = Math_imul($$180$i, $1029)|0;
            $1045 = (($1028) + ($1044<<2)|0);
            $1046 = Math_fround(HEAPF32[$1045>>2]);
            $1047 = Math_fround($1046 * $1046);
            $1048 = Math_fround(Math_fround(1.0) - $1047);
            $1049 = Math_fround($1048 * Math_fround(0.0));
            $1050 = Math_fround($1047 + $1049);
            $1051 = $$180$i << 1;
            $1052 = (($1023) + ($1051<<2)|0);
            $1053 = Math_fround(HEAPF32[$1052>>2]);
            $1054 = Math_fround($1053 * $1050);
            HEAPF32[$1052>>2] = $1054;
            $1055 = $1051 | 1;
            $1056 = (($1023) + ($1055<<2)|0);
            $1057 = Math_fround(HEAPF32[$1056>>2]);
            $1058 = Math_fround($1057 * $1050);
            HEAPF32[$1056>>2] = $1058;
            $1059 = (($$180$i) + 1)|0;
            $exitcond86$i = ($1059|0)==($1030|0);
            if ($exitcond86$i) {
             break;
            } else {
             $$180$i = $1059;
            }
           }
          }
         } while(0);
         $1060 = $1022 << 2;
         _memset(($648|0),0,($1060|0))|0;
         $1061 = Math_imul($1016, $943)|0;
         $1062 = ($1061|0)>(0);
         if ($1062) {
          $$211051411 = 0;
          while(1) {
           $1063 = (((($0)) + 14176|0) + ($$211051411<<2)|0);
           $1064 = Math_fround(HEAPF32[$1063>>2]);
           $1065 = Math_fround($1064 * Math_fround(32768.0));
           $1066 = $1065 > Math_fround(-32768.0);
           $1067 = $1066 ? $1065 : Math_fround(-32768.0);
           $1068 = $1067 < Math_fround(32767.0);
           $1069 = $1068 ? $1067 : Math_fround(32767.0);
           $1070 = (_lrintf($1069)|0);
           $1071 = $1070&65535;
           $1072 = (($844) + ($$211051411<<1)|0);
           HEAP16[$1072>>1] = $1071;
           $1073 = (($$211051411) + 1)|0;
           $exitcond = ($1073|0)==($1061|0);
           if ($exitcond) {
            break;
           } else {
            $$211051411 = $1073;
           }
          }
         }
         (_silk_Encode($35,$46,$844,$1016,0,$19,1)|0);
         $$pre1518 = HEAP32[$124>>2]|0;
         $1075 = $$pre1518;
        }
        $1074 = Math_imul($1075, $2)|0;
        $1076 = ($1074|0)>(0);
        do {
         if ($1076) {
          $1077 = Math_imul($1075, $$01153)|0;
          $1078 = (($647) + ($1077<<2)|0);
          $1079 = Math_fround(HEAPF32[$1078>>2]);
          $1080 = Math_fround($1079 * Math_fround(32768.0));
          $1081 = $1080 > Math_fround(-32768.0);
          $1082 = $1081 ? $1080 : Math_fround(-32768.0);
          $1083 = $1082 < Math_fround(32767.0);
          $1084 = $1083 ? $1082 : Math_fround(32767.0);
          $1085 = (_lrintf($1084)|0);
          $1086 = $1085&65535;
          HEAP16[$844>>1] = $1086;
          $1087 = ($1074|0)==(1);
          if ($1087) {
           break;
          }
          $$311061409 = 1;
          while(1) {
           $1088 = (($1077) + ($$311061409))|0;
           $1089 = (($647) + ($1088<<2)|0);
           $1090 = Math_fround(HEAPF32[$1089>>2]);
           $1091 = Math_fround($1090 * Math_fround(32768.0));
           $1092 = $1091 > Math_fround(-32768.0);
           $1093 = $1092 ? $1091 : Math_fround(-32768.0);
           $1094 = $1093 < Math_fround(32767.0);
           $1095 = $1094 ? $1093 : Math_fround(32767.0);
           $1096 = (_lrintf($1095)|0);
           $1097 = $1096&65535;
           $1098 = (($844) + ($$311061409<<1)|0);
           HEAP16[$1098>>1] = $1097;
           $1099 = (($$311061409) + 1)|0;
           $1100 = ($1099|0)<($1074|0);
           if ($1100) {
            $$311061409 = $1099;
           } else {
            break;
           }
          }
         }
        } while(0);
        $1101 = (_silk_Encode($35,$46,$844,$2,$14,$13,0)|0);
        $1102 = ($1101|0)==(0);
        if ($1102) {
         $1103 = HEAP32[$$pre$phi1539Z2D>>2]|0;
         $1104 = ($1103|0)==(1000);
         L389: do {
          if ($1104) {
           $1105 = ((($0)) + 80|0);
           $1106 = HEAP32[$1105>>2]|0;
           $switch$split2D = ($1106|0)<(12000);
           L391: do {
            if ($switch$split2D) {
             switch ($1106|0) {
             case 8000:  {
              $$01163 = 1101;
              break L389;
              break;
             }
             default: {
             }
             }
            } else {
             $switch$split1062D = ($1106|0)<(16000);
             if ($switch$split1062D) {
              switch ($1106|0) {
              case 12000:  {
               break;
              }
              default: {
               break L391;
              }
              }
              $$01163 = 1102;
              break L389;
             } else {
              switch ($1106|0) {
              case 16000:  {
               break;
              }
              default: {
               break L391;
              }
              }
              $$01163 = 1103;
              break L389;
             }
            }
           } while(0);
           $$01163 = $886;
          } else {
           $$01163 = $886;
          }
         } while(0);
         $1107 = ((($0)) + 96|0);
         $1108 = HEAP32[$1107>>2]|0;
         $1109 = ($1108|0)==(0);
         if ($1109) {
          $1114 = 0;
         } else {
          $1110 = ((($0)) + 18028|0);
          $1111 = HEAP32[$1110>>2]|0;
          $1112 = ($1111|0)==(0);
          $1114 = $1112;
         }
         $1113 = $1114&1;
         $1115 = ((($0)) + 72|0);
         HEAP32[$1115>>2] = $1113;
         $1116 = HEAP32[$13>>2]|0;
         $1117 = ($1116|0)==(0);
         if (!($1117)) {
          if ($1114) {
           $1145 = HEAP32[$152>>2]|0;
           $1146 = HEAP32[$276>>2]|0;
           $1147 = ($1146*40)|0;
           $1148 = (($1147) + 20)|0;
           $1149 = (200 - ($154))|0;
           $1150 = Math_imul($1148, $1149)|0;
           $1151 = (($1150) + ($1145))|0;
           $1152 = ($1151*3)|0;
           $1153 = (($1152|0) / 3200)&-1;
           $1154 = $$01176 << 3;
           $1155 = $1148 << 1;
           $1156 = (($1154) - ($1155))|0;
           $1157 = ($1156*240)|0;
           $1158 = (48000 / ($154|0))&-1;
           $1159 = (($1158) + 240)|0;
           $1160 = (($1157|0) / ($1159|0))&-1;
           $1161 = (($1160) + ($1148))|0;
           $1162 = (($1161|0) / 8)&-1;
           $1163 = ($1153|0)<($1162|0);
           $1164 = $1163 ? $1153 : $1162;
           $1165 = $1146 << 3;
           $1166 = $1165 | 4;
           $1167 = ($1164|0)>($1166|0);
           $1168 = ($1164|0)<(257);
           $1169 = $1168 ? $1164 : 257;
           $$0$i1282 = $1167 ? $1169 : 0;
           $1170 = ($$0$i1282|0)!=(0);
           $1171 = $1170&1;
           HEAP32[$605>>2] = 1;
           $$21134$ph = $$0$i1282;$$31143$ph = 0;$$51125$ph = $1171;
          } else {
           $$21134$ph = $$01132;$$31143$ph = $$11141;$$51125$ph = $$31123;
          }
          _llvm_stackrestore(($843|0));
          $$11175 = $$011741552;$$21165 = $$01163;$$31135 = $$21134$ph;$$41144 = $$31143$ph;$$61126 = $$51125$ph;
          label = 313;
          break;
         }
         HEAP32[$25>>2] = 0;
         $1118 = HEAP32[$$pre$phi1527Z2D>>2]|0;
         $1119 = (($1118|0) / ($2|0))&-1;
         $1120 = HEAP32[$276>>2]|0;
         $1121 = ($1119|0)<(400);
         if ($1121) {
          $$02526$i1274 = 0;$$027$i1273 = $1119;
          while(1) {
           $1122 = $$027$i1273 << 1;
           $1123 = (($$02526$i1274) + 1)|0;
           $1124 = ($1122|0)<(400);
           if ($1124) {
            $$02526$i1274 = $1123;$$027$i1273 = $1122;
           } else {
            break;
           }
          }
          $phitmp$i1275 = $1123 << 3;
          $$025$lcssa$i1277 = $phitmp$i1275;
         } else {
          $$025$lcssa$i1277 = 0;
         }
         switch ($1103|0) {
         case 1000:  {
          $1125 = $$01163 << 5;
          $1126 = (($1125) + 96)|0;
          $1127 = (($$025$lcssa$i1277) + -16)|0;
          $1128 = $1126 & 224;
          $1129 = $1127 | $1128;
          $$024$in$i1280 = $1129;
          break;
         }
         case 1002:  {
          $1130 = (($$01163) + -1102)|0;
          $1131 = ($1130|0)>(0);
          $spec$store$select$i1279 = $1131 ? $1130 : 0;
          $1132 = $spec$store$select$i1279 << 5;
          $1133 = $1132 & 96;
          $1134 = $1133 | $$025$lcssa$i1277;
          $1135 = $1134 | 128;
          $$024$in$i1280 = $1135;
          break;
         }
         default: {
          $1136 = $$01163 << 4;
          $1137 = (($$025$lcssa$i1277) + 240)|0;
          $1138 = $1136 | $1137;
          $1139 = $1138 | 96;
          $$024$in$i1280 = $1139;
         }
         }
         $1140 = ($1120|0)==(2);
         $1141 = $1140&1;
         $1142 = $1141 << 2;
         $1143 = $$024$in$i1280 | $1142;
         $1144 = $1143&255;
         HEAP8[$3>>0] = $1144;
         $$0 = 1;
        } else {
         $$0 = -3;
        }
        _llvm_stackrestore(($843|0));
        $$5 = $$0;
       }
      } while(0);
      L422: do {
       if ((label|0) == 313) {
        switch ($$21165|0) {
        case 1101:  {
         $$01118 = 13;
         break;
        }
        case 1103: case 1102:  {
         $$01118 = 17;
         break;
        }
        case 1104:  {
         $$01118 = 19;
         break;
        }
        default: {
         $$01118 = 21;
        }
        }
        HEAP32[$vararg_buffer4>>2] = $$01118;
        (_opus_custom_encoder_ctl($37,10012,$vararg_buffer4)|0);
        $1172 = HEAP32[$276>>2]|0;
        HEAP32[$vararg_buffer7>>2] = $1172;
        (_opus_custom_encoder_ctl($37,10008,$vararg_buffer7)|0);
        HEAP32[$vararg_buffer10>>2] = -1;
        (_opus_custom_encoder_ctl($37,4002,$vararg_buffer10)|0);
        $1173 = HEAP32[$$pre$phi1539Z2D>>2]|0;
        $1174 = ($1173|0)==(1000);
        do {
         if ($1174) {
          $1175 = HEAP32[$124>>2]|0;
          $1176 = HEAP32[$$pre$phi1527Z2D>>2]|0;
          $1177 = Math_imul($1176, $1175)|0;
          $1178 = (($1177|0) / 400)&-1;
          $$alloca_mul100 = $1178<<2;
          $1179 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul100)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul100)|0)+15)&-16)|0);;
          $1223 = $1175;$1406 = $1179;
         } else {
          HEAP32[$vararg_buffer13>>2] = 0;
          (_opus_custom_encoder_ctl($37,4006,$vararg_buffer13)|0);
          $1180 = ((($0)) + 76|0);
          $1181 = HEAP32[$1180>>2]|0;
          $1182 = ($1181|0)==(0);
          $spec$select1214 = $1182 ? 2 : 0;
          HEAP32[$vararg_buffer16>>2] = $spec$select1214;
          (_opus_custom_encoder_ctl($37,10002,$vararg_buffer16)|0);
          $1183 = HEAP32[$$pre$phi1539Z2D>>2]|0;
          $1184 = ($1183|0)==(1001);
          $1185 = HEAP32[$155>>2]|0;
          $1186 = ($1185|0)!=(0);
          do {
           if ($1184) {
            if ($1186) {
             $1192 = HEAP32[$152>>2]|0;
             $1193 = ((($0)) + 36|0);
             $1194 = HEAP32[$1193>>2]|0;
             $1195 = (($1192) - ($1194))|0;
             HEAP32[$vararg_buffer19>>2] = $1195;
             (_opus_custom_encoder_ctl($37,4002,$vararg_buffer19)|0);
             HEAP32[$vararg_buffer22>>2] = 0;
             (_opus_custom_encoder_ctl($37,4020,$vararg_buffer22)|0);
             label = 325;
             break;
            } else {
             $1187 = HEAP32[$124>>2]|0;
             $1188 = HEAP32[$$pre$phi1527Z2D>>2]|0;
             $1189 = Math_imul($1188, $1187)|0;
             $1190 = (($1189|0) / 400)&-1;
             $$alloca_mul102 = $1190<<2;
             $1191 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul102)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul102)|0)+15)&-16)|0);;
             $1208 = 1001;$1211 = $1188;$1215 = $1187;$1218 = $1190;$1219 = $1191;
             break;
            }
           } else {
            if (!($1186)) {
             $1205 = $1183;
             label = 326;
             break;
            }
            HEAP32[$vararg_buffer25>>2] = 1;
            (_opus_custom_encoder_ctl($37,4006,$vararg_buffer25)|0);
            $1196 = ((($0)) + 152|0);
            $1197 = HEAP32[$1196>>2]|0;
            HEAP32[$vararg_buffer28>>2] = $1197;
            (_opus_custom_encoder_ctl($37,4020,$vararg_buffer28)|0);
            $1198 = HEAP32[$152>>2]|0;
            HEAP32[$vararg_buffer31>>2] = $1198;
            (_opus_custom_encoder_ctl($37,4002,$vararg_buffer31)|0);
            label = 325;
           }
          } while(0);
          if ((label|0) == 325) {
           $$pr1341 = HEAP32[$$pre$phi1539Z2D>>2]|0;
           $1205 = $$pr1341;
           label = 326;
          }
          if ((label|0) == 326) {
           $1199 = HEAP32[$124>>2]|0;
           $1200 = HEAP32[$$pre$phi1527Z2D>>2]|0;
           $1201 = Math_imul($1200, $1199)|0;
           $1202 = (($1201|0) / 400)&-1;
           $$alloca_mul104 = $1202<<2;
           $1203 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul104)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul104)|0)+15)&-16)|0);;
           $1204 = ($1205|0)==(1000);
           if ($1204) {
            $1223 = $1199;$1406 = $1203;
            break;
           } else {
            $1208 = $1205;$1211 = $1200;$1215 = $1199;$1218 = $1202;$1219 = $1203;
           }
          }
          $1206 = HEAP32[$355>>2]|0;
          $1207 = ($1208|0)!=($1206|0);
          $1209 = ($1206|0)>(0);
          $or$cond1215 = $1207 & $1209;
          if (!($or$cond1215)) {
           $1223 = $1215;$1406 = $1219;
           break;
          }
          $1210 = HEAP32[$649>>2]|0;
          $$neg1376 = (($1211|0) / -400)&-1;
          $1212 = (($$neg1376) - ($$01153))|0;
          $1213 = (($1212) + ($1210))|0;
          $1214 = Math_imul($1213, $1215)|0;
          $1216 = (((($0)) + 14176|0) + ($1214<<2)|0);
          $1217 = $1218 << 2;
          _memcpy(($1219|0),($1216|0),($1217|0))|0;
          $1223 = $1215;$1406 = $1219;
         }
        } while(0);
        $1220 = HEAP32[$649>>2]|0;
        $1221 = (($1220) - ($643))|0;
        $1222 = Math_imul($1221, $1223)|0;
        $1224 = ($1222|0)>(0);
        if ($1224) {
         $1225 = Math_imul($1223, $2)|0;
         $1226 = (((($0)) + 14176|0) + ($1225<<2)|0);
         $1227 = $1222 << 2;
         _memmove(($648|0),($1226|0),($1227|0))|0;
         $1228 = (((($0)) + 14176|0) + ($1222<<2)|0);
         $1229 = $643 << 2;
         $1230 = Math_imul($1229, $1223)|0;
         _memcpy(($1228|0),($647|0),($1230|0))|0;
        } else {
         $1231 = (($643) - ($1220))|0;
         $1232 = Math_imul($1231, $1223)|0;
         $1233 = (($647) + ($1232<<2)|0);
         $1234 = $1223 << 2;
         $1235 = Math_imul($1234, $1220)|0;
         _memcpy(($648|0),($1233|0),($1235|0))|0;
        }
        $1236 = ((($0)) + 14100|0);
        $1237 = Math_fround(HEAPF32[$1236>>2]);
        $1238 = $1237 < Math_fround(1.0);
        $1239 = $$11175 < Math_fround(1.0);
        $or$cond25 = $1239 | $1238;
        do {
         if ($or$cond25) {
          $1240 = HEAP32[$16>>2]|0;
          $1241 = ((($1240)) + 4|0);
          $1242 = HEAP32[$1241>>2]|0;
          $1243 = HEAP32[$124>>2]|0;
          $1244 = ((($1240)) + 60|0);
          $1245 = HEAP32[$1244>>2]|0;
          $1246 = HEAP32[$$pre$phi1527Z2D>>2]|0;
          $1247 = (48000 / ($1246|0))&-1;
          $1248 = (($1242|0) / ($1247|0))&-1;
          $1249 = ($1243|0)==(1);
          $1250 = ($1248|0)>(0);
          do {
           if ($1249) {
            if (!($1250)) {
             break;
            }
            $$077$i1284 = 0;
            while(1) {
             $1251 = Math_imul($$077$i1284, $1247)|0;
             $1252 = (($1245) + ($1251<<2)|0);
             $1253 = Math_fround(HEAPF32[$1252>>2]);
             $1254 = Math_fround($1253 * $1253);
             $1255 = Math_fround($$11175 * $1254);
             $1256 = Math_fround(Math_fround(1.0) - $1254);
             $1257 = Math_fround($1237 * $1256);
             $1258 = Math_fround($1255 + $1257);
             $1259 = (($647) + ($$077$i1284<<2)|0);
             $1260 = Math_fround(HEAPF32[$1259>>2]);
             $1261 = Math_fround($1260 * $1258);
             HEAPF32[$1259>>2] = $1261;
             $1262 = (($$077$i1284) + 1)|0;
             $exitcond85$i1285 = ($1262|0)==($1248|0);
             if ($exitcond85$i1285) {
              break;
             } else {
              $$077$i1284 = $1262;
             }
            }
           } else {
            if (!($1250)) {
             break;
            }
            $$180$i1287 = 0;
            while(1) {
             $1263 = Math_imul($$180$i1287, $1247)|0;
             $1264 = (($1245) + ($1263<<2)|0);
             $1265 = Math_fround(HEAPF32[$1264>>2]);
             $1266 = Math_fround($1265 * $1265);
             $1267 = Math_fround($$11175 * $1266);
             $1268 = Math_fround(Math_fround(1.0) - $1266);
             $1269 = Math_fround($1237 * $1268);
             $1270 = Math_fround($1267 + $1269);
             $1271 = $$180$i1287 << 1;
             $1272 = (($647) + ($1271<<2)|0);
             $1273 = Math_fround(HEAPF32[$1272>>2]);
             $1274 = Math_fround($1273 * $1270);
             HEAPF32[$1272>>2] = $1274;
             $1275 = $1271 | 1;
             $1276 = (($647) + ($1275<<2)|0);
             $1277 = Math_fround(HEAPF32[$1276>>2]);
             $1278 = Math_fround($1277 * $1270);
             HEAPF32[$1276>>2] = $1278;
             $1279 = (($$180$i1287) + 1)|0;
             $exitcond86$i1288 = ($1279|0)==($1248|0);
             if ($exitcond86$i1288) {
              break;
             } else {
              $$180$i1287 = $1279;
             }
            }
           }
          } while(0);
          $1280 = ($1248|0)<($2|0);
          if (!($1280)) {
           break;
          }
          $$074$us$i1291 = 0;
          while(1) {
           $$276$us$i1293 = $1248;
           while(1) {
            $1281 = Math_imul($$276$us$i1293, $1243)|0;
            $1282 = (($1281) + ($$074$us$i1291))|0;
            $1283 = (($647) + ($1282<<2)|0);
            $1284 = Math_fround(HEAPF32[$1283>>2]);
            $1285 = Math_fround($$11175 * $1284);
            HEAPF32[$1283>>2] = $1285;
            $1286 = (($$276$us$i1293) + 1)|0;
            $exitcond$i1294 = ($1286|0)==($2|0);
            if ($exitcond$i1294) {
             break;
            } else {
             $$276$us$i1293 = $1286;
            }
           }
           $1287 = (($$074$us$i1291) + 1)|0;
           $1288 = ($1287|0)<($1243|0);
           if ($1288) {
            $$074$us$i1291 = $1287;
           } else {
            break;
           }
          }
         }
        } while(0);
        HEAPF32[$1236>>2] = $$11175;
        $1289 = HEAP32[$$pre$phi1539Z2D>>2]|0;
        $1290 = ($1289|0)==(1001);
        if ($1290) {
         $1291 = HEAP32[$276>>2]|0;
         $1292 = ($1291|0)==(1);
         if ($1292) {
          label = 347;
         }
        } else {
         label = 347;
        }
        if ((label|0) == 347) {
         $1293 = (($$2$i13261545) + -24000)|0;
         $1294 = ($1293|0)>(0);
         $1295 = $1294 ? $1293 : 0;
         $1296 = ($1295|0)>(8192);
         $1297 = $1295 << 1;
         $spec$select1216 = $1296 ? 16384 : $1297;
         $1298 = ((($0)) + 92|0);
         HEAP32[$1298>>2] = $spec$select1216;
        }
        $1299 = ((($0)) + 14152|0);
        $1300 = HEAP32[$1299>>2]|0;
        $1301 = ($1300|0)==(0|0);
        do {
         if ($1301) {
          $1302 = HEAP32[$124>>2]|0;
          $1303 = ($1302|0)==(2);
          if (!($1303)) {
           break;
          }
          $1304 = ((($0)) + 14092|0);
          $1305 = HEAP16[$1304>>1]|0;
          $1306 = ($1305<<16>>16)<(16384);
          $$phi$trans$insert1520 = ((($0)) + 92|0);
          $$pre1521 = HEAP32[$$phi$trans$insert1520>>2]|0;
          $1307 = ($$pre1521|0)<(16384);
          $or$cond1581 = $1306 | $1307;
          if (!($or$cond1581)) {
           break;
          }
          $1308 = (Math_fround(($1305<<16>>16)));
          $1309 = (Math_fround(($$pre1521|0)));
          $1310 = Math_fround($1308 * Math_fround(6.10351563E-5));
          $1311 = Math_fround($1309 * Math_fround(6.10351563E-5));
          $1312 = HEAP32[$16>>2]|0;
          $1313 = ((($1312)) + 4|0);
          $1314 = HEAP32[$1313>>2]|0;
          $1315 = ((($1312)) + 60|0);
          $1316 = HEAP32[$1315>>2]|0;
          $1317 = HEAP32[$$pre$phi1527Z2D>>2]|0;
          $1318 = (48000 / ($1317|0))&-1;
          $1319 = (($1314|0) / ($1318|0))&-1;
          $1320 = Math_fround(Math_fround(1.0) - $1310);
          $1321 = Math_fround(Math_fround(1.0) - $1311);
          $1322 = ($1319|0)>(0);
          if ($1322) {
           $$078$i = 0;
           while(1) {
            $1323 = Math_imul($$078$i, $1318)|0;
            $1324 = (($1316) + ($1323<<2)|0);
            $1325 = Math_fround(HEAPF32[$1324>>2]);
            $1326 = Math_fround($1325 * $1325);
            $1327 = Math_fround($1321 * $1326);
            $1328 = Math_fround(Math_fround(1.0) - $1326);
            $1329 = Math_fround($1320 * $1328);
            $1330 = Math_fround($1327 + $1329);
            $1331 = $$078$i << 1;
            $1332 = (($647) + ($1331<<2)|0);
            $1333 = Math_fround(HEAPF32[$1332>>2]);
            $1334 = $1331 | 1;
            $1335 = (($647) + ($1334<<2)|0);
            $1336 = Math_fround(HEAPF32[$1335>>2]);
            $1337 = Math_fround($1333 - $1336);
            $1338 = Math_fround($1337 * Math_fround(0.5));
            $1339 = Math_fround($1330 * $1338);
            $1340 = Math_fround($1333 - $1339);
            HEAPF32[$1332>>2] = $1340;
            $1341 = Math_fround($1336 + $1339);
            HEAPF32[$1335>>2] = $1341;
            $1342 = (($$078$i) + 1)|0;
            $exitcond82$i = ($1342|0)==($1319|0);
            if ($exitcond82$i) {
             $$0$lcssa$i1298 = $1319;
             break;
            } else {
             $$078$i = $1342;
            }
           }
          } else {
           $$0$lcssa$i1298 = 0;
          }
          $1343 = ($$0$lcssa$i1298|0)<($2|0);
          if ($1343) {
           $$177$i = $$0$lcssa$i1298;
           while(1) {
            $1344 = $$177$i << 1;
            $1345 = (($647) + ($1344<<2)|0);
            $1346 = Math_fround(HEAPF32[$1345>>2]);
            $1347 = $1344 | 1;
            $1348 = (($647) + ($1347<<2)|0);
            $1349 = Math_fround(HEAPF32[$1348>>2]);
            $1350 = Math_fround($1346 - $1349);
            $1351 = Math_fround($1350 * Math_fround(0.5));
            $1352 = Math_fround($1321 * $1351);
            $1353 = Math_fround($1346 - $1352);
            HEAPF32[$1345>>2] = $1353;
            $1354 = Math_fround($1349 + $1352);
            HEAPF32[$1348>>2] = $1354;
            $1355 = (($$177$i) + 1)|0;
            $exitcond$i1300 = ($1355|0)==($2|0);
            if ($exitcond$i1300) {
             break;
            } else {
             $$177$i = $1355;
            }
           }
          }
          $1356 = $$pre1521&65535;
          HEAP16[$1304>>1] = $1356;
         }
        } while(0);
        $1357 = ($1289|0)==(1002);
        do {
         if ($1357) {
          label = 365;
         } else {
          $$idx1227 = ((($14)) + 20|0);
          $$idx1227$val = HEAP32[$$idx1227>>2]|0;
          $$idx1228 = ((($14)) + 28|0);
          $$idx1228$val = HEAP32[$$idx1228>>2]|0;
          $1358 = (Math_clz32(($$idx1228$val|0))|0);
          $1359 = $1290 ? 5 : -15;
          $1360 = (($1359) + ($$idx1227$val))|0;
          $1361 = (($1360) + ($1358))|0;
          $1362 = $642 << 3;
          $1363 = ($1361|0)>($1362|0);
          if ($1363) {
           label = 365;
           break;
          }
          if ($1290) {
           _ec_enc_bit_logp($14,$$61126,12);
          }
          $1364 = ($$61126|0)==(0);
          if ($1364) {
           label = 365;
           break;
          }
          _ec_enc_bit_logp($14,$$41144,1);
          $1365 = HEAP32[$$pre$phi1539Z2D>>2]|0;
          $1366 = ($1365|0)==(1001);
          $$idx1225$val = HEAP32[$$idx1227>>2]|0;
          $$idx1226$val = HEAP32[$$idx1228>>2]|0;
          $1367 = (Math_clz32(($$idx1226$val|0))|0);
          $1368 = (($$idx1225$val) + -32)|0;
          $$pn$in$v = $1366 ? 18 : 7;
          $1369 = (($1368) + ($$pn$in$v))|0;
          $$pn$in = (($1369) + ($1367))|0;
          $$pn = $$pn$in >> 3;
          $$01107 = (($642) - ($$pn))|0;
          $1370 = ($$01107|0)<($$31135|0);
          $1371 = $1370 ? $$01107 : $$31135;
          $1372 = ($1371|0)>(2);
          $1373 = $1372 ? $1371 : 2;
          $1374 = ($1373|0)<(257);
          $spec$select1217 = $1374 ? $1373 : 257;
          if (!($1366)) {
           $$51137 = $spec$select1217;$$71347 = $$61126;$1393 = 1;
           break;
          }
          $1375 = (($spec$select1217) + -2)|0;
          _ec_enc_uint($14,$1375,256);
          $$51137 = $spec$select1217;$$71347 = $$61126;$1393 = 1;
         }
        } while(0);
        if ((label|0) == 365) {
         HEAP32[$605>>2] = 0;
         $$51137 = 0;$$71347 = 0;$1393 = 0;
        }
        $1376 = HEAP32[$$pre$phi1539Z2D>>2]|0;
        $1377 = ($1376|0)==(1002);
        $spec$select1218 = $1377 ? 0 : 17;
        $1378 = ($1376|0)==(1000);
        if ($1378) {
         $$idx1223 = ((($14)) + 20|0);
         $$idx1223$val = HEAP32[$$idx1223>>2]|0;
         $$idx1224 = ((($14)) + 28|0);
         $$idx1224$val = HEAP32[$$idx1224>>2]|0;
         $1379 = (Math_clz32(($$idx1224$val|0))|0);
         $1380 = (($$idx1223$val) + -25)|0;
         $1381 = (($1380) + ($1379))|0;
         $1382 = $1381 >> 3;
         _ec_enc_done($14);
         $$01145 = $1382;$$21110 = $1382;
        } else {
         $1383 = (($642) - ($$51137))|0;
         _ec_enc_shrink($14,$1383);
         $$01145 = $1383;$$21110 = 0;
        }
        if ($1393) {
         label = 371;
        } else {
         $1384 = HEAP32[$$pre$phi1539Z2D>>2]|0;
         $1385 = ($1384|0)==(1000);
         if ($1385) {
          label = 373;
         } else {
          label = 371;
         }
        }
        do {
         if ((label|0) == 371) {
          HEAP32[$vararg_buffer34>>2] = $17;
          (_opus_custom_encoder_ctl($37,10022,$vararg_buffer34)|0);
          $$pr1348 = HEAP32[$$pre$phi1539Z2D>>2]|0;
          $1386 = ($$pr1348|0)==(1001);
          if (!($1386)) {
           label = 373;
           break;
          }
          $1387 = ((($0)) + 100|0);
          $1388 = HEAP32[$1387>>2]|0;
          HEAP32[$20>>2] = $1388;
          $1389 = ((($0)) + 104|0);
          $1390 = HEAP32[$1389>>2]|0;
          $1391 = ((($20)) + 4|0);
          HEAP32[$1391>>2] = $1390;
          HEAP32[$vararg_buffer37>>2] = $20;
          (_opus_custom_encoder_ctl($37,10028,$vararg_buffer37)|0);
         }
        } while(0);
        if ((label|0) == 373) {
         HEAP32[$vararg_buffer40>>2] = 0;
         (_opus_custom_encoder_ctl($37,10028,$vararg_buffer40)|0);
        }
        $1392 = ($$41144|0)!=(0);
        $or$cond27 = $1392 & $1393;
        if ($or$cond27) {
         HEAP32[$vararg_buffer43>>2] = 0;
         (_opus_custom_encoder_ctl($37,10010,$vararg_buffer43)|0);
         HEAP32[$vararg_buffer46>>2] = 0;
         (_opus_custom_encoder_ctl($37,4006,$vararg_buffer46)|0);
         HEAP32[$vararg_buffer49>>2] = -1;
         (_opus_custom_encoder_ctl($37,4002,$vararg_buffer49)|0);
         $1394 = HEAP32[$$pre$phi1527Z2D>>2]|0;
         $1395 = (($1394|0) / 200)&-1;
         $1396 = (($641) + ($$01145)|0);
         $1397 = (_celt_encode_with_ec($37,$647,$1395,$1396,$$51137,0)|0);
         $1398 = ($1397|0)<(0);
         if ($1398) {
          $$5 = -3;
          break;
         }
         HEAP32[$vararg_buffer52>>2] = $15;
         (_opus_custom_encoder_ctl($37,4031,$vararg_buffer52)|0);
         (_opus_custom_encoder_ctl($37,4028,$vararg_buffer55)|0);
        }
        HEAP32[$vararg_buffer57>>2] = $spec$select1218;
        (_opus_custom_encoder_ctl($37,10010,$vararg_buffer57)|0);
        $1399 = HEAP32[$$pre$phi1539Z2D>>2]|0;
        $1400 = ($1399|0)==(1000);
        do {
         if ($1400) {
          $$11146 = $$01145;$$31111 = $$21110;
         } else {
          $1401 = HEAP32[$355>>2]|0;
          $1402 = ($1399|0)!=($1401|0);
          $1403 = ($1401|0)>(0);
          $or$cond1219 = $1402 & $1403;
          if ($or$cond1219) {
           (_opus_custom_encoder_ctl($37,4028,$vararg_buffer60)|0);
           $1404 = HEAP32[$$pre$phi1527Z2D>>2]|0;
           $1405 = (($1404|0) / 400)&-1;
           (_celt_encode_with_ec($37,$1406,$1405,$21,2,0)|0);
           HEAP32[$vararg_buffer62>>2] = 0;
           (_opus_custom_encoder_ctl($37,10002,$vararg_buffer62)|0);
          }
          $$idx1221 = ((($14)) + 20|0);
          $$idx1221$val = HEAP32[$$idx1221>>2]|0;
          $$idx1222 = ((($14)) + 28|0);
          $$idx1222$val = HEAP32[$$idx1222>>2]|0;
          $1407 = (Math_clz32(($$idx1222$val|0))|0);
          $1408 = (($$idx1221$val) + -32)|0;
          $1409 = (($1408) + ($1407))|0;
          $1410 = $$01145 << 3;
          $1411 = ($1409|0)>($1410|0);
          if ($1411) {
           $$11146 = $$01145;$$31111 = $$21110;
           break;
          }
          do {
           if ($or$cond27) {
            $1412 = HEAP32[$$pre$phi1539Z2D>>2]|0;
            $1413 = ($1412|0)==(1001);
            if (!($1413)) {
             break;
            }
            $1414 = HEAP32[$155>>2]|0;
            $1415 = ($1414|0)==(0);
            if ($1415) {
             break;
            }
            $1416 = HEAP32[$152>>2]|0;
            $1417 = ((($0)) + 36|0);
            $1418 = HEAP32[$1417>>2]|0;
            $1419 = (($1416) - ($1418))|0;
            HEAP32[$vararg_buffer65>>2] = $1419;
            (_opus_custom_encoder_ctl($37,4002,$vararg_buffer65)|0);
           }
          } while(0);
          $1420 = HEAP32[$155>>2]|0;
          HEAP32[$vararg_buffer68>>2] = $1420;
          (_opus_custom_encoder_ctl($37,4006,$vararg_buffer68)|0);
          $1421 = (_celt_encode_with_ec($37,$647,$2,0,$$01145,$14)|0);
          $1422 = ($1421|0)<(0);
          if ($1422) {
           $$5 = -3;
           break L422;
          }
          if (!($or$cond27)) {
           $$11146 = $$01145;$$31111 = $1421;
           break;
          }
          $1423 = HEAP32[$$pre$phi1539Z2D>>2]|0;
          $1424 = ($1423|0)==(1001);
          if (!($1424)) {
           $$11146 = $$01145;$$31111 = $1421;
           break;
          }
          $1425 = HEAP32[$155>>2]|0;
          $1426 = ($1425|0)==(0);
          if ($1426) {
           $$11146 = $$01145;$$31111 = $1421;
           break;
          }
          $1427 = (($$01145) + ($$51137))|0;
          $1428 = (($641) + ($$01145)|0);
          $1429 = (($641) + ($1421)|0);
          _memmove(($1429|0),($1428|0),($$51137|0))|0;
          $$11146 = $1427;$$31111 = $1421;
         }
        } while(0);
        $1430 = ($$71347|0)==(0);
        $or$cond33 = $1392 | $1430;
        do {
         if (!($or$cond33)) {
          $1431 = HEAP32[$$pre$phi1527Z2D>>2]|0;
          $1432 = (($1431|0) / 200)&-1;
          $1433 = (($1431|0) / 400)&-1;
          (_opus_custom_encoder_ctl($37,4028,$vararg_buffer71)|0);
          HEAP32[$vararg_buffer73>>2] = 0;
          (_opus_custom_encoder_ctl($37,10010,$vararg_buffer73)|0);
          HEAP32[$vararg_buffer76>>2] = 0;
          (_opus_custom_encoder_ctl($37,10002,$vararg_buffer76)|0);
          HEAP32[$vararg_buffer79>>2] = 0;
          (_opus_custom_encoder_ctl($37,4006,$vararg_buffer79)|0);
          HEAP32[$vararg_buffer82>>2] = -1;
          (_opus_custom_encoder_ctl($37,4002,$vararg_buffer82)|0);
          $1434 = HEAP32[$$pre$phi1539Z2D>>2]|0;
          $1435 = ($1434|0)==(1001);
          if ($1435) {
           _ec_enc_shrink($14,$$31111);
           $$21147 = $$31111;
          } else {
           $$21147 = $$11146;
          }
          $1436 = HEAP32[$124>>2]|0;
          $1437 = (($2) - ($1432))|0;
          $1438 = (($1437) - ($1433))|0;
          $1439 = Math_imul($1436, $1438)|0;
          $1440 = (($647) + ($1439<<2)|0);
          (_celt_encode_with_ec($37,$1440,$1433,$22,2,0)|0);
          $1441 = HEAP32[$124>>2]|0;
          $1442 = Math_imul($1441, $1437)|0;
          $1443 = (($647) + ($1442<<2)|0);
          $1444 = (($641) + ($$21147)|0);
          $1445 = (_celt_encode_with_ec($37,$1443,$1432,$1444,$$51137,0)|0);
          $1446 = ($1445|0)<(0);
          if ($1446) {
           $$5 = -3;
           break L422;
          } else {
           HEAP32[$vararg_buffer85>>2] = $15;
           (_opus_custom_encoder_ctl($37,4031,$vararg_buffer85)|0);
           break;
          }
         }
        } while(0);
        $1447 = HEAP32[$$pre$phi1539Z2D>>2]|0;
        $1448 = HEAP32[$$pre$phi1527Z2D>>2]|0;
        $1449 = (($1448|0) / ($2|0))&-1;
        $1450 = HEAP32[$276>>2]|0;
        $1451 = ($1449|0)<(400);
        if ($1451) {
         $$02526$i1304 = 0;$$027$i1303 = $1449;
         while(1) {
          $1452 = $$027$i1303 << 1;
          $1453 = (($$02526$i1304) + 1)|0;
          $1454 = ($1452|0)<(400);
          if ($1454) {
           $$02526$i1304 = $1453;$$027$i1303 = $1452;
          } else {
           break;
          }
         }
         $phitmp$i1305 = $1453 << 3;
         $$025$lcssa$i1307 = $phitmp$i1305;
        } else {
         $$025$lcssa$i1307 = 0;
        }
        switch ($1447|0) {
        case 1000:  {
         $1455 = $$21165 << 5;
         $1456 = (($1455) + 96)|0;
         $1457 = (($$025$lcssa$i1307) + -16)|0;
         $1458 = $1456 & 224;
         $1459 = $1457 | $1458;
         $$024$in$i1310 = $1459;
         break;
        }
        case 1002:  {
         $1460 = (($$21165) + -1102)|0;
         $1461 = ($1460|0)>(0);
         $spec$store$select$i1309 = $1461 ? $1460 : 0;
         $1462 = $spec$store$select$i1309 << 5;
         $1463 = $1462 & 96;
         $1464 = $1463 | $$025$lcssa$i1307;
         $1465 = $1464 | 128;
         $$024$in$i1310 = $1465;
         break;
        }
        default: {
         $1466 = $$21165 << 4;
         $1467 = (($$025$lcssa$i1307) + 240)|0;
         $1468 = $1466 | $1467;
         $1469 = $1468 | 96;
         $$024$in$i1310 = $1469;
        }
        }
        $1470 = ($1450|0)==(2);
        $1471 = $1470&1;
        $1472 = $1471 << 2;
        $1473 = $$024$in$i1310 | $1472;
        $1474 = $1473&255;
        HEAP8[$3>>0] = $1474;
        $1475 = ((($14)) + 28|0);
        $1476 = HEAP32[$1475>>2]|0;
        $1477 = HEAP32[$15>>2]|0;
        $1478 = $1477 ^ $1476;
        HEAP32[$25>>2] = $1478;
        $1479 = ($$01148|0)==(0);
        if ($1479) {
         $1480 = HEAP32[$$pre$phi1539Z2D>>2]|0;
         $storemerge = $1480;
        } else {
         $storemerge = 1002;
        }
        HEAP32[$355>>2] = $storemerge;
        $1481 = HEAP32[$276>>2]|0;
        $1482 = ((($0)) + 14128|0);
        HEAP32[$1482>>2] = $1481;
        $1483 = ((($0)) + 14132|0);
        HEAP32[$1483>>2] = $2;
        $1484 = ((($0)) + 14148|0);
        HEAP32[$1484>>2] = 0;
        $1485 = ((($0)) + 184|0);
        $1486 = HEAP32[$1485>>2]|0;
        $1487 = ($1486|0)==(0);
        L555: do {
         if (!($1487)) {
          $1488 = HEAP32[$17>>2]|0;
          $1489 = $1488 | $$1118313201531;
          $1490 = ($1489|0)==(0);
          if ($1490) {
           break;
          }
          $1491 = ((($0)) + 18020|0);
          $1492 = ((($0)) + 18024|0);
          $1493 = Math_fround(HEAPF32[$1492>>2]);
          $1494 = HEAP32[$124>>2]|0;
          do {
           if ($1564) {
            $1495 = ((($17)) + 32|0);
            $1496 = Math_fround(HEAPF32[$1495>>2]);
            $1497 = $1496 < Math_fround(0.100000001);
            if ($1497) {
             $1498 = Math_imul($1494, $2)|0;
             $1499 = ($1498|0)>(0);
             if ($1499) {
              $$01011$i$i$i = 0;$$012$i$i$i = Math_fround(0.0);
              while(1) {
               $1500 = (($1) + ($$01011$i$i$i<<2)|0);
               $1501 = Math_fround(HEAPF32[$1500>>2]);
               $1502 = Math_fround($1501 * $1501);
               $1503 = Math_fround($$012$i$i$i + $1502);
               $1504 = (($$01011$i$i$i) + 1)|0;
               $exitcond$i$i$i = ($1504|0)==($1498|0);
               if ($exitcond$i$i$i) {
                $$sink1607 = $1503;
                break;
               } else {
                $$01011$i$i$i = $1504;$$012$i$i$i = $1503;
               }
              }
             } else {
              $$sink1607 = Math_fround(0.0);
             }
             $1505 = (Math_fround(($1498|0)));
             $1506 = Math_fround($$sink1607 / $1505);
             $$pn$i = Math_fround($1506 * Math_fround(316.230011));
             $$03$in$i = !($$pn$i <= $1493);
             if (!($$03$in$i)) {
              break;
             }
            }
            HEAP32[$1491>>2] = 0;
            break L555;
           }
          } while(0);
          $1507 = HEAP32[$1491>>2]|0;
          $1508 = (($1507) + 1)|0;
          HEAP32[$1491>>2] = $1508;
          $1509 = ($1507|0)>(9);
          if (!($1509)) {
           break;
          }
          $1510 = ($1507|0)<(30);
          if (!($1510)) {
           HEAP32[$1491>>2] = 10;
           break;
          }
          HEAP32[$25>>2] = 0;
          $1511 = HEAP32[$$pre$phi1539Z2D>>2]|0;
          $1512 = HEAP32[$$pre$phi1527Z2D>>2]|0;
          $1513 = (($1512|0) / ($2|0))&-1;
          $1514 = ($1513|0)<(400);
          if ($1514) {
           $$02526$i1246 = 0;$$027$i1245 = $1513;
           while(1) {
            $1515 = $$027$i1245 << 1;
            $1516 = (($$02526$i1246) + 1)|0;
            $1517 = ($1515|0)<(400);
            if ($1517) {
             $$02526$i1246 = $1516;$$027$i1245 = $1515;
            } else {
             break;
            }
           }
           $phitmp$i1247 = $1516 << 3;
           $$025$lcssa$i1249 = $phitmp$i1247;
          } else {
           $$025$lcssa$i1249 = 0;
          }
          switch ($1511|0) {
          case 1000:  {
           $1518 = $$21165 << 5;
           $1519 = (($1518) + 96)|0;
           $1520 = (($$025$lcssa$i1249) + -16)|0;
           $1521 = $1519 & 224;
           $1522 = $1520 | $1521;
           $$024$in$i1252 = $1522;
           break;
          }
          case 1002:  {
           $1523 = (($$21165) + -1102)|0;
           $1524 = ($1523|0)>(0);
           $spec$store$select$i1251 = $1524 ? $1523 : 0;
           $1525 = $spec$store$select$i1251 << 5;
           $1526 = $1525 & 96;
           $1527 = $1526 | $$025$lcssa$i1249;
           $1528 = $1527 | 128;
           $$024$in$i1252 = $1528;
           break;
          }
          default: {
           $1529 = $$21165 << 4;
           $1530 = (($$025$lcssa$i1249) + 240)|0;
           $1531 = $1529 | $1530;
           $1532 = $1531 | 96;
           $$024$in$i1252 = $1532;
          }
          }
          $1533 = ($1481|0)==(2);
          $1534 = $1533&1;
          $1535 = $1534 << 2;
          $1536 = $$024$in$i1252 | $1535;
          $1537 = $1536&255;
          HEAP8[$3>>0] = $1537;
          $$5 = 1;
          break L422;
         }
        } while(0);
        $$idx = ((($14)) + 20|0);
        $$idx$val = HEAP32[$$idx>>2]|0;
        $1538 = (Math_clz32(($1476|0))|0);
        $1539 = (($$idx$val) + -32)|0;
        $1540 = (($1539) + ($1538))|0;
        $1541 = $642 << 3;
        $1542 = ($1540|0)>($1541|0);
        L585: do {
         if ($1542) {
          $1543 = ($$01176|0)<(2);
          if ($1543) {
           $$5 = -2;
           break L422;
          }
          HEAP8[$641>>0] = 0;
          HEAP32[$25>>2] = 0;
          $$51113 = 1;
         } else {
          $1544 = HEAP32[$$pre$phi1539Z2D>>2]|0;
          $1545 = ($1544|0)!=(1000);
          $or$cond37 = $1393 | $1545;
          $or$cond37$not = $or$cond37 ^ 1;
          $1546 = ($$31111|0)>(2);
          $or$cond1474 = $1546 & $or$cond37$not;
          if (!($or$cond1474)) {
           $$51113 = $$31111;
           break;
          }
          $$411121406 = $$31111;
          while(1) {
           $1547 = (($3) + ($$411121406)|0);
           $1548 = HEAP8[$1547>>0]|0;
           $1549 = ($1548<<24>>24)==(0);
           if (!($1549)) {
            $$51113 = $$411121406;
            break L585;
           }
           $1550 = (($$411121406) + -1)|0;
           $1551 = ($$411121406|0)>(3);
           if ($1551) {
            $$411121406 = $1550;
           } else {
            $$51113 = $1550;
            break;
           }
          }
         }
        } while(0);
        $1552 = (($$51137) + 1)|0;
        $1553 = (($1552) + ($$51113))|0;
        $1554 = HEAP32[$155>>2]|0;
        $1555 = ($1554|0)==(0);
        if ($1555) {
         $1556 = (_opus_packet_pad($3,$1553,$$01176)|0);
         $1557 = ($1556|0)==(0);
         if ($1557) {
          $$61114 = $$01176;
         } else {
          $$5 = -3;
          break;
         }
        } else {
         $$61114 = $1553;
        }
        $$5 = $$61114;
       }
      } while(0);
      _llvm_stackrestore(($646|0));
      $$6 = $$5;
      STACKTOP = sp;return ($$6|0);
     } else {
      $$01151 = $587;
     }
    } while(0);
    $600 = (($2|0) / ($$01151|0))&-1;
    $601 = ($$1118713161534|0)==(-1);
    if (!($601)) {
     $602 = ((($0)) + 8464|0);
     HEAP32[$602>>2] = $$1118713161534;
     $603 = ((($0)) + 8468|0);
     HEAP32[$603>>2] = $$1118513181533;
    }
    $604 = (_encode_multiframe_packet($0,$1,$600,$$01151,$3,$4,$$01148,$$,$12)|0);
    $$6 = $604;
    STACKTOP = sp;return ($$6|0);
   }
  }
 } while(0);
 $178 = ((($0)) + 14120|0);
 $179 = HEAP32[$178>>2]|0;
 $180 = ((($0)) + 14136|0);
 $181 = HEAP32[$180>>2]|0;
 $182 = ($181|0)==(0);
 $spec$select = $182 ? 1101 : $181;
 $183 = ($179|0)==(0);
 $$01171 = $183 ? 1000 : $179;
 $184 = ($154|0)>(100);
 $spec$select1192 = $184 ? 1002 : $$01171;
 $185 = ($154|0)==(25);
 $186 = ($spec$select1192|0)!=(1000);
 $or$cond5 = $185 & $186;
 $$01168 = $or$cond5&1;
 $$01161 = $or$cond5 ? 50 : $154;
 $187 = ($$01161|0)<(17);
 do {
  if ($187) {
   $188 = ($4|0)==(1);
   if (!($188)) {
    $189 = ($spec$select1192|0)==(1000);
    $190 = ($$01161|0)!=(10);
    $or$cond7 = $189 & $190;
    if (!($or$cond7)) {
     $195 = (50 / ($$01161|0))&-1;
     $phitmp = $195&255;
     $$01167 = $phitmp;$$11162 = 50;$$11169 = 3;$$21173 = $spec$select1192;
     break;
    }
   }
   $191 = ($$01161|0)<(13);
   $192 = $191&1;
   $193 = ($$01161|0)==(12);
   $194 = $193 ? 25 : 16;
   $$01167 = 0;$$11162 = $194;$$11169 = $192;$$21173 = 1000;
  } else {
   $$01167 = 0;$$11162 = $$01161;$$11169 = $$01168;$$21173 = $spec$select1192;
  }
 } while(0);
 $196 = ($$21173|0)==(1000);
 $197 = ($spec$select|0)>(1103);
 $or$cond9 = $197 & $196;
 if ($or$cond9) {
  $$01170 = 1103;
 } else {
  $198 = ($$21173|0)==(1002);
  $199 = ($spec$select|0)==(1102);
  $or$cond11 = $199 & $198;
  $200 = ($$21173|0)==(1001);
  $201 = ($spec$select|0)<(1105);
  $or$cond13 = $201 & $200;
  $spec$select1193 = $or$cond13 ? 1104 : $spec$select;
  $spec$select1354 = $or$cond11 ? 1101 : $spec$select1193;
  $$01170 = $spec$select1354;
 }
 $202 = ((($0)) + 14088|0);
 $203 = HEAP32[$202>>2]|0;
 $204 = ($$11162|0)<(400);
 if ($204) {
  $$02526$i = 0;$$027$i = $$11162;
  while(1) {
   $205 = $$027$i << 1;
   $206 = (($$02526$i) + 1)|0;
   $207 = ($205|0)<(400);
   if ($207) {
    $$02526$i = $206;$$027$i = $205;
   } else {
    break;
   }
  }
  $phitmp$i = $206 << 3;
  $$025$lcssa$i = $phitmp$i;
 } else {
  $$025$lcssa$i = 0;
 }
 switch ($$21173|0) {
 case 1000:  {
  $208 = $$01170 << 5;
  $209 = (($208) + 96)|0;
  $210 = (($$025$lcssa$i) + -16)|0;
  $211 = $209 & 224;
  $212 = $210 | $211;
  $$024$in$i = $212;
  break;
 }
 case 1002:  {
  $213 = (($$01170) + -1102)|0;
  $214 = ($213|0)>(0);
  $spec$store$select$i = $214 ? $213 : 0;
  $215 = $spec$store$select$i << 5;
  $216 = $215 & 96;
  $217 = $216 | $$025$lcssa$i;
  $218 = $217 | 128;
  $$024$in$i = $218;
  break;
 }
 default: {
  $219 = $$01170 << 4;
  $220 = (($$025$lcssa$i) + 240)|0;
  $221 = $219 | $220;
  $222 = $221 | 96;
  $$024$in$i = $222;
 }
 }
 $223 = ($203|0)==(2);
 $224 = $223&1;
 $225 = $224 << 2;
 $226 = $225 | $$11169;
 $227 = $226 | $$024$in$i;
 $228 = $227&255;
 HEAP8[$3>>0] = $228;
 $229 = ($$11169>>>0)<(2);
 $230 = $229 ? 1 : 2;
 $231 = ($$011761322|0)>($230|0);
 $232 = $231 ? $$011761322 : $230;
 $233 = ($$11169|0)==(3);
 if ($233) {
  $234 = ((($3)) + 1|0);
  HEAP8[$234>>0] = $$01167;
 }
 $235 = HEAP32[$155>>2]|0;
 $236 = ($235|0)==(0);
 if (!($236)) {
  $$6 = $230;
  STACKTOP = sp;return ($$6|0);
 }
 $237 = (_opus_packet_pad($3,$230,$232)|0);
 $238 = ($237|0)==(0);
 $$1194 = $238 ? $232 : -3;
 $$6 = $$1194;
 STACKTOP = sp;return ($$6|0);
}
function _encode_multiframe_packet($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$0 = 0, $$097100 = 0, $$097100$us = 0, $$098 = 0, $$alloca_mul = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $spec$select = 0, $spec$select99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $9 = sp;
 $10 = ($2|0)==(2);
 $11 = $2 << 1;
 $spec$select = $10 ? 3 : $11;
 $12 = ((($0)) + 148|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0);
 if ($14) {
  $15 = ((($0)) + 164|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(-1);
  if ($17) {
   $$098 = $5;
  } else {
   $18 = ((($0)) + 160|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($19*3)|0;
   $21 = ((($0)) + 144|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($22*24)|0;
   $24 = Math_imul($3, $2)|0;
   $25 = (($23|0) / ($24|0))&-1;
   $26 = (($20|0) / ($25|0))&-1;
   $27 = ($26|0)<($5|0);
   $28 = $27 ? $26 : $5;
   $$098 = $28;
  }
 } else {
  $$098 = $5;
 }
 $29 = (($$098) - ($spec$select))|0;
 $30 = (($29|0) / ($2|0))&-1;
 $31 = ($30|0)>(1275);
 $32 = (($30) + 1)|0;
 $spec$select99 = $31 ? 1276 : $32;
 $33 = Math_imul($spec$select99, $2)|0;
 $$alloca_mul = $33;
 $34 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 (_opus_repacketizer_init($9)|0);
 $35 = ((($0)) + 136|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ((($0)) + 128|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ((($0)) + 120|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ((($0)) + 14120|0);
 $42 = HEAP32[$41>>2]|0;
 HEAP32[$35>>2] = $42;
 $43 = ((($0)) + 14136|0);
 $44 = HEAP32[$43>>2]|0;
 HEAP32[$37>>2] = $44;
 $45 = ((($0)) + 14088|0);
 $46 = HEAP32[$45>>2]|0;
 HEAP32[$39>>2] = $46;
 $47 = ((($0)) + 68|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = ($48|0)==(0);
 if ($49) {
  $50 = ((($0)) + 14128|0);
  HEAP32[$50>>2] = $46;
 } else {
  HEAP32[$39>>2] = 1;
 }
 $51 = ($2|0)>(0);
 L9: do {
  if ($51) {
   $52 = (($2) + -1)|0;
   $53 = ((($0)) + 18028|0);
   $54 = ($6|0)==(0);
   $55 = ((($0)) + 112|0);
   if ($54) {
    $$097100 = 0;
    while(1) {
     HEAP32[$47>>2] = 0;
     $73 = ($$097100|0)<($52|0);
     $74 = $73&1;
     HEAP32[$53>>2] = $74;
     $75 = HEAP32[$55>>2]|0;
     $76 = Math_imul($$097100, $3)|0;
     $77 = Math_imul($76, $75)|0;
     $78 = (($1) + ($77<<2)|0);
     $79 = Math_imul($$097100, $spec$select99)|0;
     $80 = (($34) + ($79)|0);
     $81 = (_opus_encode_native($0,$78,$3,$80,$spec$select99,$7,0,0,0,0,0,0,$8)|0);
     $82 = ($81|0)<(0);
     if ($82) {
      $$0 = -3;
      label = 21;
      break;
     }
     $83 = (_opus_repacketizer_cat($9,$80,$81)|0);
     $84 = ($83|0)<(0);
     $72 = (($$097100) + 1)|0;
     if ($84) {
      $$0 = -3;
      label = 21;
      break;
     }
     $71 = ($72|0)<($2|0);
     if ($71) {
      $$097100 = $72;
     } else {
      break L9;
     }
    }
    if ((label|0) == 21) {
     STACKTOP = sp;return ($$0|0);
    }
   }
   $$097100$us = 0;
   while(1) {
    HEAP32[$47>>2] = 0;
    $56 = ($$097100$us|0)<($52|0);
    $57 = $56&1;
    HEAP32[$53>>2] = $57;
    $58 = ($$097100$us|0)==($52|0);
    if ($58) {
     HEAP32[$35>>2] = 1002;
    }
    $61 = HEAP32[$55>>2]|0;
    $62 = Math_imul($$097100$us, $3)|0;
    $63 = Math_imul($62, $61)|0;
    $64 = (($1) + ($63<<2)|0);
    $65 = Math_imul($$097100$us, $spec$select99)|0;
    $66 = (($34) + ($65)|0);
    $67 = (_opus_encode_native($0,$64,$3,$66,$spec$select99,$7,0,0,0,0,0,0,$8)|0);
    $68 = ($67|0)<(0);
    if ($68) {
     $$0 = -3;
     label = 21;
     break;
    }
    $69 = (_opus_repacketizer_cat($9,$66,$67)|0);
    $70 = ($69|0)<(0);
    $60 = (($$097100$us) + 1)|0;
    if ($70) {
     $$0 = -3;
     label = 21;
     break;
    }
    $59 = ($60|0)<($2|0);
    if ($59) {
     $$097100$us = $60;
    } else {
     break L9;
    }
   }
   if ((label|0) == 21) {
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 $85 = HEAP32[$12>>2]|0;
 $86 = ($85|0)==(0);
 $87 = $86&1;
 $88 = (_opus_repacketizer_out_range_impl($9,0,$2,$4,$$098,0,$87)|0);
 $89 = ($88|0)<(0);
 if ($89) {
  $$0 = -3;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$35>>2] = $36;
 HEAP32[$37>>2] = $38;
 HEAP32[$39>>2] = $40;
 HEAP32[$47>>2] = $48;
 $$0 = $88;
 STACKTOP = sp;return ($$0|0);
}
function _opus_encode($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$i = 0, $$02728 = 0, $$049$i = 0, $$alloca_mul = 0, $$off$i = 0, $$old = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = Math_fround(0), $49 = Math_fround(0), $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond38$i = 0, $or$cond40$i = 0;
 var $or$cond42$i = 0, $or$cond44$i = 0, $or$cond46$i = 0, $or$cond48$i = 0, $or$cond48$i$not = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 156|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 144|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8|0) / 400)&-1;
 $10 = ($9|0)>($2|0);
 if ($10) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $11 = ($6|0)==(5000);
 if ($11) {
  $$049$i = $2;
 } else {
  $$off$i = (($6) + -5001)|0;
  $12 = ($$off$i>>>0)<(9);
  if (!($12)) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
  $13 = ($6|0)<(5006);
  if ($13) {
   $14 = $9 << $$off$i;
   $$0$i = $14;
  } else {
   $15 = (($6) + -5003)|0;
   $16 = Math_imul($15, $8)|0;
   $17 = (($16|0) / 50)&-1;
   $$0$i = $17;
  }
  $18 = ($$0$i|0)>($2|0);
  if ($18) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$049$i = $$0$i;
  }
 }
 $19 = ($$049$i*400)|0;
 $20 = ($19|0)==($8|0);
 $21 = ($$049$i*200)|0;
 $22 = ($21|0)==($8|0);
 $or$cond$i = $20 | $22;
 $23 = ($$049$i*100)|0;
 $24 = ($23|0)==($8|0);
 $or$cond38$i = $24 | $or$cond$i;
 if ($or$cond38$i) {
  $$old = ($$049$i|0)<(1);
  if ($$old) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $25 = ($$049$i*50)|0;
  $26 = ($25|0)==($8|0);
  $27 = ($$049$i*25)|0;
  $28 = ($27|0)==($8|0);
  $or$cond40$i = $26 | $28;
  $29 = ($8*3)|0;
  $30 = ($25|0)==($29|0);
  $or$cond42$i = $30 | $or$cond40$i;
  $31 = $8 << 2;
  $32 = ($25|0)==($31|0);
  $or$cond44$i = $32 | $or$cond42$i;
  $33 = ($8*5)|0;
  $34 = ($25|0)==($33|0);
  $or$cond46$i = $34 | $or$cond44$i;
  $35 = ($8*6)|0;
  $36 = ($25|0)==($35|0);
  $or$cond48$i = $36 | $or$cond46$i;
  $or$cond48$i$not = $or$cond48$i ^ 1;
  $37 = ($$049$i|0)<(1);
  $or$cond = $37 | $or$cond48$i$not;
  if ($or$cond) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $38 = ((($0)) + 112|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = Math_imul($39, $$049$i)|0;
 $41 = (_llvm_stacksave()|0);
 $$alloca_mul = $40<<2;
 $42 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $43 = HEAP32[$38>>2]|0;
 $44 = Math_imul($43, $$049$i)|0;
 $45 = ($44|0)>(0);
 if ($45) {
  $$02728 = 0;
  while(1) {
   $46 = (($1) + ($$02728<<1)|0);
   $47 = HEAP16[$46>>1]|0;
   $48 = (Math_fround(($47<<16>>16)));
   $49 = Math_fround($48 * Math_fround(3.05175781E-5));
   $50 = (($42) + ($$02728<<2)|0);
   HEAPF32[$50>>2] = $49;
   $51 = (($$02728) + 1)|0;
   $52 = ($51|0)<($44|0);
   if ($52) {
    $$02728 = $51;
   } else {
    break;
   }
  }
 }
 $53 = (_opus_encode_native($0,$42,$$049$i,$3,$4,16,$1,$2,0,-2,$43,5,0)|0);
 _llvm_stackrestore(($41|0));
 $$0 = $53;
 STACKTOP = sp;return ($$0|0);
}
function _opus_encoder_ctl($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $$0 = 0, $$0$i = 0, $$011$i = 0, $$0475 = 0, $$2 = 0, $$off = 0, $$off476 = 0, $$off477 = 0, $$off479 = 0, $$old6 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0;
 var $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0;
 var $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0;
 var $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0;
 var $451 = 0, $452 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $arglist_current = 0, $arglist_current101 = 0, $arglist_current104 = 0, $arglist_current107 = 0, $arglist_current11 = 0, $arglist_current110 = 0, $arglist_current116 = 0, $arglist_current124 = 0, $arglist_current127 = 0, $arglist_current133 = 0, $arglist_current139 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0;
 var $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0, $arglist_current53 = 0, $arglist_current56 = 0, $arglist_current59 = 0, $arglist_current62 = 0, $arglist_current65 = 0, $arglist_current68 = 0, $arglist_current71 = 0, $arglist_current74 = 0, $arglist_current77 = 0, $arglist_current8 = 0, $arglist_current80 = 0, $arglist_current83 = 0, $arglist_current86 = 0, $arglist_current89 = 0;
 var $arglist_current92 = 0, $arglist_current95 = 0, $arglist_next = 0, $arglist_next102 = 0, $arglist_next105 = 0, $arglist_next108 = 0, $arglist_next111 = 0, $arglist_next117 = 0, $arglist_next12 = 0, $arglist_next125 = 0, $arglist_next128 = 0, $arglist_next134 = 0, $arglist_next140 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0;
 var $arglist_next33 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0, $arglist_next45 = 0, $arglist_next48 = 0, $arglist_next54 = 0, $arglist_next57 = 0, $arglist_next6 = 0, $arglist_next60 = 0, $arglist_next63 = 0, $arglist_next66 = 0, $arglist_next69 = 0, $arglist_next72 = 0, $arglist_next75 = 0, $arglist_next78 = 0, $arglist_next81 = 0, $arglist_next84 = 0, $arglist_next87 = 0, $arglist_next9 = 0;
 var $arglist_next90 = 0, $arglist_next93 = 0, $arglist_next96 = 0, $expanded = 0, $expanded10 = 0, $expanded100 = 0, $expanded101 = 0, $expanded103 = 0, $expanded104 = 0, $expanded105 = 0, $expanded107 = 0, $expanded108 = 0, $expanded110 = 0, $expanded111 = 0, $expanded112 = 0, $expanded114 = 0, $expanded115 = 0, $expanded117 = 0, $expanded118 = 0, $expanded119 = 0;
 var $expanded12 = 0, $expanded121 = 0, $expanded122 = 0, $expanded124 = 0, $expanded125 = 0, $expanded126 = 0, $expanded128 = 0, $expanded129 = 0, $expanded13 = 0, $expanded131 = 0, $expanded132 = 0, $expanded133 = 0, $expanded135 = 0, $expanded136 = 0, $expanded138 = 0, $expanded139 = 0, $expanded14 = 0, $expanded140 = 0, $expanded142 = 0, $expanded143 = 0;
 var $expanded145 = 0, $expanded146 = 0, $expanded147 = 0, $expanded149 = 0, $expanded150 = 0, $expanded152 = 0, $expanded153 = 0, $expanded154 = 0, $expanded156 = 0, $expanded157 = 0, $expanded159 = 0, $expanded16 = 0, $expanded160 = 0, $expanded161 = 0, $expanded163 = 0, $expanded164 = 0, $expanded166 = 0, $expanded167 = 0, $expanded168 = 0, $expanded17 = 0;
 var $expanded170 = 0, $expanded171 = 0, $expanded173 = 0, $expanded174 = 0, $expanded175 = 0, $expanded177 = 0, $expanded178 = 0, $expanded180 = 0, $expanded181 = 0, $expanded182 = 0, $expanded184 = 0, $expanded185 = 0, $expanded187 = 0, $expanded188 = 0, $expanded189 = 0, $expanded19 = 0, $expanded191 = 0, $expanded192 = 0, $expanded194 = 0, $expanded195 = 0;
 var $expanded196 = 0, $expanded198 = 0, $expanded199 = 0, $expanded20 = 0, $expanded201 = 0, $expanded202 = 0, $expanded203 = 0, $expanded205 = 0, $expanded206 = 0, $expanded208 = 0, $expanded209 = 0, $expanded21 = 0, $expanded210 = 0, $expanded212 = 0, $expanded213 = 0, $expanded215 = 0, $expanded216 = 0, $expanded217 = 0, $expanded219 = 0, $expanded220 = 0;
 var $expanded222 = 0, $expanded223 = 0, $expanded224 = 0, $expanded226 = 0, $expanded227 = 0, $expanded229 = 0, $expanded23 = 0, $expanded230 = 0, $expanded231 = 0, $expanded233 = 0, $expanded234 = 0, $expanded236 = 0, $expanded237 = 0, $expanded238 = 0, $expanded24 = 0, $expanded240 = 0, $expanded241 = 0, $expanded243 = 0, $expanded244 = 0, $expanded245 = 0;
 var $expanded247 = 0, $expanded248 = 0, $expanded250 = 0, $expanded251 = 0, $expanded252 = 0, $expanded254 = 0, $expanded255 = 0, $expanded257 = 0, $expanded258 = 0, $expanded259 = 0, $expanded26 = 0, $expanded261 = 0, $expanded262 = 0, $expanded264 = 0, $expanded265 = 0, $expanded266 = 0, $expanded268 = 0, $expanded269 = 0, $expanded27 = 0, $expanded271 = 0;
 var $expanded272 = 0, $expanded273 = 0, $expanded275 = 0, $expanded276 = 0, $expanded278 = 0, $expanded279 = 0, $expanded28 = 0, $expanded280 = 0, $expanded282 = 0, $expanded283 = 0, $expanded285 = 0, $expanded286 = 0, $expanded287 = 0, $expanded3 = 0, $expanded30 = 0, $expanded31 = 0, $expanded33 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0;
 var $expanded38 = 0, $expanded40 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded47 = 0, $expanded48 = 0, $expanded49 = 0, $expanded5 = 0, $expanded51 = 0, $expanded52 = 0, $expanded54 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0, $expanded6 = 0, $expanded61 = 0, $expanded62 = 0;
 var $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded68 = 0, $expanded69 = 0, $expanded7 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded75 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded82 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0, $expanded89 = 0;
 var $expanded9 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded96 = 0, $expanded97 = 0, $expanded98 = 0, $spec$select = 0, $switch = 0, $switch$split2D = 0, $vararg_buffer = 0, $vararg_buffer112 = 0, $vararg_buffer118 = 0, $vararg_buffer121 = 0, $vararg_buffer129 = 0, $vararg_buffer135 = 0, $vararg_buffer141 = 0, $vararg_buffer49 = 0, $vararg_buffer97 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $vararg_buffer141 = sp + 80|0;
 $vararg_buffer135 = sp + 72|0;
 $vararg_buffer129 = sp + 64|0;
 $vararg_buffer121 = sp + 56|0;
 $vararg_buffer118 = sp + 48|0;
 $vararg_buffer112 = sp + 40|0;
 $vararg_buffer97 = sp + 32|0;
 $vararg_buffer49 = sp + 24|0;
 $vararg_buffer = sp + 16|0;
 $2 = sp;
 $3 = sp + 84|0;
 HEAP32[$2>>2] = $varargs;
 $4 = HEAP32[$0>>2]|0;
 $5 = (($0) + ($4)|0);
 L1: do {
  switch ($1|0) {
  case 4000:  {
   $arglist_current = HEAP32[$2>>2]|0;
   $6 = $arglist_current;
   $7 = ((0) + 4|0);
   $expanded3 = $7;
   $expanded = (($expanded3) - 1)|0;
   $8 = (($6) + ($expanded))|0;
   $9 = ((0) + 4|0);
   $expanded7 = $9;
   $expanded6 = (($expanded7) - 1)|0;
   $expanded5 = $expanded6 ^ -1;
   $10 = $8 & $expanded5;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $arglist_next = ((($11)) + 4|0);
   HEAP32[$2>>2] = $arglist_next;
   switch ($12|0) {
   case 2048: case 2049: case 2051:  {
    break;
   }
   default: {
    $$2 = -1;
    label = 104;
    break L1;
   }
   }
   $13 = ((($0)) + 14148|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($14|0)==(0);
   $16 = ((($0)) + 108|0);
   if ($15) {
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==($12|0);
    if (!($18)) {
     $$2 = -1;
     label = 104;
     break L1;
    }
   }
   HEAP32[$16>>2] = $12;
   $19 = ((($0)) + 192|0);
   HEAP32[$19>>2] = $12;
   $$2 = 0;
   label = 104;
   break;
  }
  case 4001:  {
   $arglist_current2 = HEAP32[$2>>2]|0;
   $20 = $arglist_current2;
   $21 = ((0) + 4|0);
   $expanded10 = $21;
   $expanded9 = (($expanded10) - 1)|0;
   $22 = (($20) + ($expanded9))|0;
   $23 = ((0) + 4|0);
   $expanded14 = $23;
   $expanded13 = (($expanded14) - 1)|0;
   $expanded12 = $expanded13 ^ -1;
   $24 = $22 & $expanded12;
   $25 = $24;
   $26 = HEAP32[$25>>2]|0;
   $arglist_next3 = ((($25)) + 4|0);
   HEAP32[$2>>2] = $arglist_next3;
   $27 = ($26|0)==(0|0);
   if ($27) {
    label = 105;
   } else {
    $28 = ((($0)) + 108|0);
    $29 = HEAP32[$28>>2]|0;
    HEAP32[$26>>2] = $29;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4002:  {
   $arglist_current5 = HEAP32[$2>>2]|0;
   $30 = $arglist_current5;
   $31 = ((0) + 4|0);
   $expanded17 = $31;
   $expanded16 = (($expanded17) - 1)|0;
   $32 = (($30) + ($expanded16))|0;
   $33 = ((0) + 4|0);
   $expanded21 = $33;
   $expanded20 = (($expanded21) - 1)|0;
   $expanded19 = $expanded20 ^ -1;
   $34 = $32 & $expanded19;
   $35 = $34;
   $36 = HEAP32[$35>>2]|0;
   $arglist_next6 = ((($35)) + 4|0);
   HEAP32[$2>>2] = $arglist_next6;
   switch ($36|0) {
   case -1000: case -1:  {
    $$0475 = $36;
    break;
   }
   default: {
    $37 = ($36|0)<(1);
    if ($37) {
     label = 105;
     break L1;
    }
    $38 = ($36|0)<(501);
    if ($38) {
     $$0475 = 500;
    } else {
     $39 = ((($0)) + 112|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40*300000)|0;
     $42 = ($36|0)>($41|0);
     $spec$select = $42 ? $41 : $36;
     $$0475 = $spec$select;
    }
   }
   }
   $43 = ((($0)) + 164|0);
   HEAP32[$43>>2] = $$0475;
   $$2 = 0;
   label = 104;
   break;
  }
  case 4003:  {
   $arglist_current8 = HEAP32[$2>>2]|0;
   $44 = $arglist_current8;
   $45 = ((0) + 4|0);
   $expanded24 = $45;
   $expanded23 = (($expanded24) - 1)|0;
   $46 = (($44) + ($expanded23))|0;
   $47 = ((0) + 4|0);
   $expanded28 = $47;
   $expanded27 = (($expanded28) - 1)|0;
   $expanded26 = $expanded27 ^ -1;
   $48 = $46 & $expanded26;
   $49 = $48;
   $50 = HEAP32[$49>>2]|0;
   $arglist_next9 = ((($49)) + 4|0);
   HEAP32[$2>>2] = $arglist_next9;
   $51 = ($50|0)==(0|0);
   if ($51) {
    label = 105;
   } else {
    $52 = ((($0)) + 14132|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($53|0)==(0);
    if ($54) {
     $55 = ((($0)) + 144|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = (($56|0) / 400)&-1;
     $$011$i = $57;
    } else {
     $$011$i = $53;
    }
    $58 = ((($0)) + 164|0);
    $59 = HEAP32[$58>>2]|0;
    switch ($59|0) {
    case -1000:  {
     $60 = ((($0)) + 144|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($61*60)|0;
     $63 = (($62|0) / ($$011$i|0))&-1;
     $64 = ((($0)) + 112|0);
     $65 = HEAP32[$64>>2]|0;
     $66 = Math_imul($65, $61)|0;
     $67 = (($66) + ($63))|0;
     $$0$i = $67;
     break;
    }
    case -1:  {
     $68 = ((($0)) + 144|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($69*10208)|0;
     $71 = (($70|0) / ($$011$i|0))&-1;
     $$0$i = $71;
     break;
    }
    default: {
     $$0$i = $59;
    }
    }
    HEAP32[$50>>2] = $$0$i;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4022:  {
   $arglist_current11 = HEAP32[$2>>2]|0;
   $72 = $arglist_current11;
   $73 = ((0) + 4|0);
   $expanded31 = $73;
   $expanded30 = (($expanded31) - 1)|0;
   $74 = (($72) + ($expanded30))|0;
   $75 = ((0) + 4|0);
   $expanded35 = $75;
   $expanded34 = (($expanded35) - 1)|0;
   $expanded33 = $expanded34 ^ -1;
   $76 = $74 & $expanded33;
   $77 = $76;
   $78 = HEAP32[$77>>2]|0;
   $arglist_next12 = ((($77)) + 4|0);
   HEAP32[$2>>2] = $arglist_next12;
   $79 = ($78|0)<(1);
   if ($79) {
    $$old6 = ($78|0)==(-1000);
    if (!($$old6)) {
     label = 105;
     break L1;
    }
   } else {
    $80 = ((($0)) + 112|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ($78|0)>($81|0);
    if ($82) {
     label = 105;
     break L1;
    }
   }
   $83 = ((($0)) + 120|0);
   HEAP32[$83>>2] = $78;
   $$2 = 0;
   label = 104;
   break;
  }
  case 4023:  {
   $arglist_current14 = HEAP32[$2>>2]|0;
   $84 = $arglist_current14;
   $85 = ((0) + 4|0);
   $expanded38 = $85;
   $expanded37 = (($expanded38) - 1)|0;
   $86 = (($84) + ($expanded37))|0;
   $87 = ((0) + 4|0);
   $expanded42 = $87;
   $expanded41 = (($expanded42) - 1)|0;
   $expanded40 = $expanded41 ^ -1;
   $88 = $86 & $expanded40;
   $89 = $88;
   $90 = HEAP32[$89>>2]|0;
   $arglist_next15 = ((($89)) + 4|0);
   HEAP32[$2>>2] = $arglist_next15;
   $91 = ($90|0)==(0|0);
   if ($91) {
    label = 105;
   } else {
    $92 = ((($0)) + 120|0);
    $93 = HEAP32[$92>>2]|0;
    HEAP32[$90>>2] = $93;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4004:  {
   $arglist_current17 = HEAP32[$2>>2]|0;
   $94 = $arglist_current17;
   $95 = ((0) + 4|0);
   $expanded45 = $95;
   $expanded44 = (($expanded45) - 1)|0;
   $96 = (($94) + ($expanded44))|0;
   $97 = ((0) + 4|0);
   $expanded49 = $97;
   $expanded48 = (($expanded49) - 1)|0;
   $expanded47 = $expanded48 ^ -1;
   $98 = $96 & $expanded47;
   $99 = $98;
   $100 = HEAP32[$99>>2]|0;
   $arglist_next18 = ((($99)) + 4|0);
   HEAP32[$2>>2] = $arglist_next18;
   $$off479 = (($100) + -1101)|0;
   $101 = ($$off479>>>0)>(4);
   if ($101) {
    label = 105;
   } else {
    $102 = ((($0)) + 132|0);
    HEAP32[$102>>2] = $100;
    $103 = ($100|0)==(1101);
    if ($103) {
     $104 = ((($0)) + 20|0);
     HEAP32[$104>>2] = 8000;
     $$2 = 0;
     label = 104;
     break L1;
    }
    $105 = ($100|0)==(1102);
    $106 = ((($0)) + 20|0);
    if ($105) {
     HEAP32[$106>>2] = 12000;
     $$2 = 0;
     label = 104;
     break L1;
    } else {
     HEAP32[$106>>2] = 16000;
     $$2 = 0;
     label = 104;
     break L1;
    }
   }
   break;
  }
  case 4005:  {
   $arglist_current20 = HEAP32[$2>>2]|0;
   $107 = $arglist_current20;
   $108 = ((0) + 4|0);
   $expanded52 = $108;
   $expanded51 = (($expanded52) - 1)|0;
   $109 = (($107) + ($expanded51))|0;
   $110 = ((0) + 4|0);
   $expanded56 = $110;
   $expanded55 = (($expanded56) - 1)|0;
   $expanded54 = $expanded55 ^ -1;
   $111 = $109 & $expanded54;
   $112 = $111;
   $113 = HEAP32[$112>>2]|0;
   $arglist_next21 = ((($112)) + 4|0);
   HEAP32[$2>>2] = $arglist_next21;
   $114 = ($113|0)==(0|0);
   if ($114) {
    label = 105;
   } else {
    $115 = ((($0)) + 132|0);
    $116 = HEAP32[$115>>2]|0;
    HEAP32[$113>>2] = $116;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4008:  {
   $arglist_current23 = HEAP32[$2>>2]|0;
   $117 = $arglist_current23;
   $118 = ((0) + 4|0);
   $expanded59 = $118;
   $expanded58 = (($expanded59) - 1)|0;
   $119 = (($117) + ($expanded58))|0;
   $120 = ((0) + 4|0);
   $expanded63 = $120;
   $expanded62 = (($expanded63) - 1)|0;
   $expanded61 = $expanded62 ^ -1;
   $121 = $119 & $expanded61;
   $122 = $121;
   $123 = HEAP32[$122>>2]|0;
   $arglist_next24 = ((($122)) + 4|0);
   HEAP32[$2>>2] = $arglist_next24;
   switch ($123|0) {
   case 1101: case 1102: case 1103: case 1104: case 1105: case -1000:  {
    break;
   }
   default: {
    label = 105;
    break L1;
   }
   }
   $124 = ((($0)) + 128|0);
   HEAP32[$124>>2] = $123;
   $125 = ($123|0)==(1101);
   if ($125) {
    $126 = ((($0)) + 20|0);
    HEAP32[$126>>2] = 8000;
    $$2 = 0;
    label = 104;
    break L1;
   }
   $127 = ($123|0)==(1102);
   $128 = ((($0)) + 20|0);
   if ($127) {
    HEAP32[$128>>2] = 12000;
    $$2 = 0;
    label = 104;
    break L1;
   } else {
    HEAP32[$128>>2] = 16000;
    $$2 = 0;
    label = 104;
    break L1;
   }
   break;
  }
  case 4009:  {
   $arglist_current26 = HEAP32[$2>>2]|0;
   $129 = $arglist_current26;
   $130 = ((0) + 4|0);
   $expanded66 = $130;
   $expanded65 = (($expanded66) - 1)|0;
   $131 = (($129) + ($expanded65))|0;
   $132 = ((0) + 4|0);
   $expanded70 = $132;
   $expanded69 = (($expanded70) - 1)|0;
   $expanded68 = $expanded69 ^ -1;
   $133 = $131 & $expanded68;
   $134 = $133;
   $135 = HEAP32[$134>>2]|0;
   $arglist_next27 = ((($134)) + 4|0);
   HEAP32[$2>>2] = $arglist_next27;
   $136 = ($135|0)==(0|0);
   if ($136) {
    label = 105;
   } else {
    $137 = ((($0)) + 14136|0);
    $138 = HEAP32[$137>>2]|0;
    HEAP32[$135>>2] = $138;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4016:  {
   $arglist_current29 = HEAP32[$2>>2]|0;
   $139 = $arglist_current29;
   $140 = ((0) + 4|0);
   $expanded73 = $140;
   $expanded72 = (($expanded73) - 1)|0;
   $141 = (($139) + ($expanded72))|0;
   $142 = ((0) + 4|0);
   $expanded77 = $142;
   $expanded76 = (($expanded77) - 1)|0;
   $expanded75 = $expanded76 ^ -1;
   $143 = $141 & $expanded75;
   $144 = $143;
   $145 = HEAP32[$144>>2]|0;
   $arglist_next30 = ((($144)) + 4|0);
   HEAP32[$2>>2] = $arglist_next30;
   $146 = ($145>>>0)>(1);
   if ($146) {
    label = 105;
   } else {
    $147 = ((($0)) + 184|0);
    HEAP32[$147>>2] = $145;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4017:  {
   $arglist_current32 = HEAP32[$2>>2]|0;
   $148 = $arglist_current32;
   $149 = ((0) + 4|0);
   $expanded80 = $149;
   $expanded79 = (($expanded80) - 1)|0;
   $150 = (($148) + ($expanded79))|0;
   $151 = ((0) + 4|0);
   $expanded84 = $151;
   $expanded83 = (($expanded84) - 1)|0;
   $expanded82 = $expanded83 ^ -1;
   $152 = $150 & $expanded82;
   $153 = $152;
   $154 = HEAP32[$153>>2]|0;
   $arglist_next33 = ((($153)) + 4|0);
   HEAP32[$2>>2] = $arglist_next33;
   $155 = ($154|0)==(0|0);
   if ($155) {
    label = 105;
   } else {
    $156 = ((($0)) + 184|0);
    $157 = HEAP32[$156>>2]|0;
    HEAP32[$154>>2] = $157;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4010:  {
   $arglist_current35 = HEAP32[$2>>2]|0;
   $158 = $arglist_current35;
   $159 = ((0) + 4|0);
   $expanded87 = $159;
   $expanded86 = (($expanded87) - 1)|0;
   $160 = (($158) + ($expanded86))|0;
   $161 = ((0) + 4|0);
   $expanded91 = $161;
   $expanded90 = (($expanded91) - 1)|0;
   $expanded89 = $expanded90 ^ -1;
   $162 = $160 & $expanded89;
   $163 = $162;
   $164 = HEAP32[$163>>2]|0;
   $arglist_next36 = ((($163)) + 4|0);
   HEAP32[$2>>2] = $arglist_next36;
   $165 = ($164>>>0)>(10);
   if ($165) {
    label = 105;
   } else {
    $166 = ((($0)) + 44|0);
    HEAP32[$166>>2] = $164;
    HEAP32[$vararg_buffer>>2] = $164;
    (_opus_custom_encoder_ctl($5,4010,$vararg_buffer)|0);
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4011:  {
   $arglist_current38 = HEAP32[$2>>2]|0;
   $167 = $arglist_current38;
   $168 = ((0) + 4|0);
   $expanded94 = $168;
   $expanded93 = (($expanded94) - 1)|0;
   $169 = (($167) + ($expanded93))|0;
   $170 = ((0) + 4|0);
   $expanded98 = $170;
   $expanded97 = (($expanded98) - 1)|0;
   $expanded96 = $expanded97 ^ -1;
   $171 = $169 & $expanded96;
   $172 = $171;
   $173 = HEAP32[$172>>2]|0;
   $arglist_next39 = ((($172)) + 4|0);
   HEAP32[$2>>2] = $arglist_next39;
   $174 = ($173|0)==(0|0);
   if ($174) {
    label = 105;
   } else {
    $175 = ((($0)) + 44|0);
    $176 = HEAP32[$175>>2]|0;
    HEAP32[$173>>2] = $176;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4012:  {
   $arglist_current41 = HEAP32[$2>>2]|0;
   $177 = $arglist_current41;
   $178 = ((0) + 4|0);
   $expanded101 = $178;
   $expanded100 = (($expanded101) - 1)|0;
   $179 = (($177) + ($expanded100))|0;
   $180 = ((0) + 4|0);
   $expanded105 = $180;
   $expanded104 = (($expanded105) - 1)|0;
   $expanded103 = $expanded104 ^ -1;
   $181 = $179 & $expanded103;
   $182 = $181;
   $183 = HEAP32[$182>>2]|0;
   $arglist_next42 = ((($182)) + 4|0);
   HEAP32[$2>>2] = $arglist_next42;
   $184 = ($183>>>0)>(1);
   if ($184) {
    label = 105;
   } else {
    $185 = ((($0)) + 48|0);
    HEAP32[$185>>2] = $183;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4013:  {
   $arglist_current44 = HEAP32[$2>>2]|0;
   $186 = $arglist_current44;
   $187 = ((0) + 4|0);
   $expanded108 = $187;
   $expanded107 = (($expanded108) - 1)|0;
   $188 = (($186) + ($expanded107))|0;
   $189 = ((0) + 4|0);
   $expanded112 = $189;
   $expanded111 = (($expanded112) - 1)|0;
   $expanded110 = $expanded111 ^ -1;
   $190 = $188 & $expanded110;
   $191 = $190;
   $192 = HEAP32[$191>>2]|0;
   $arglist_next45 = ((($191)) + 4|0);
   HEAP32[$2>>2] = $arglist_next45;
   $193 = ($192|0)==(0|0);
   if ($193) {
    label = 105;
   } else {
    $194 = ((($0)) + 48|0);
    $195 = HEAP32[$194>>2]|0;
    HEAP32[$192>>2] = $195;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4014:  {
   $arglist_current47 = HEAP32[$2>>2]|0;
   $196 = $arglist_current47;
   $197 = ((0) + 4|0);
   $expanded115 = $197;
   $expanded114 = (($expanded115) - 1)|0;
   $198 = (($196) + ($expanded114))|0;
   $199 = ((0) + 4|0);
   $expanded119 = $199;
   $expanded118 = (($expanded119) - 1)|0;
   $expanded117 = $expanded118 ^ -1;
   $200 = $198 & $expanded117;
   $201 = $200;
   $202 = HEAP32[$201>>2]|0;
   $arglist_next48 = ((($201)) + 4|0);
   HEAP32[$2>>2] = $arglist_next48;
   $203 = ($202>>>0)>(100);
   if ($203) {
    label = 105;
   } else {
    $204 = ((($0)) + 40|0);
    HEAP32[$204>>2] = $202;
    HEAP32[$vararg_buffer49>>2] = $202;
    (_opus_custom_encoder_ctl($5,4014,$vararg_buffer49)|0);
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4015:  {
   $arglist_current53 = HEAP32[$2>>2]|0;
   $205 = $arglist_current53;
   $206 = ((0) + 4|0);
   $expanded122 = $206;
   $expanded121 = (($expanded122) - 1)|0;
   $207 = (($205) + ($expanded121))|0;
   $208 = ((0) + 4|0);
   $expanded126 = $208;
   $expanded125 = (($expanded126) - 1)|0;
   $expanded124 = $expanded125 ^ -1;
   $209 = $207 & $expanded124;
   $210 = $209;
   $211 = HEAP32[$210>>2]|0;
   $arglist_next54 = ((($210)) + 4|0);
   HEAP32[$2>>2] = $arglist_next54;
   $212 = ($211|0)==(0|0);
   if ($212) {
    label = 105;
   } else {
    $213 = ((($0)) + 40|0);
    $214 = HEAP32[$213>>2]|0;
    HEAP32[$211>>2] = $214;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4006:  {
   $arglist_current56 = HEAP32[$2>>2]|0;
   $215 = $arglist_current56;
   $216 = ((0) + 4|0);
   $expanded129 = $216;
   $expanded128 = (($expanded129) - 1)|0;
   $217 = (($215) + ($expanded128))|0;
   $218 = ((0) + 4|0);
   $expanded133 = $218;
   $expanded132 = (($expanded133) - 1)|0;
   $expanded131 = $expanded132 ^ -1;
   $219 = $217 & $expanded131;
   $220 = $219;
   $221 = HEAP32[$220>>2]|0;
   $arglist_next57 = ((($220)) + 4|0);
   HEAP32[$2>>2] = $arglist_next57;
   $222 = ($221>>>0)>(1);
   if ($222) {
    label = 105;
   } else {
    $223 = ((($0)) + 60|0);
    $224 = (1 - ($221))|0;
    $225 = ((($0)) + 148|0);
    HEAP32[$225>>2] = $221;
    HEAP32[$223>>2] = $224;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4007:  {
   $arglist_current59 = HEAP32[$2>>2]|0;
   $226 = $arglist_current59;
   $227 = ((0) + 4|0);
   $expanded136 = $227;
   $expanded135 = (($expanded136) - 1)|0;
   $228 = (($226) + ($expanded135))|0;
   $229 = ((0) + 4|0);
   $expanded140 = $229;
   $expanded139 = (($expanded140) - 1)|0;
   $expanded138 = $expanded139 ^ -1;
   $230 = $228 & $expanded138;
   $231 = $230;
   $232 = HEAP32[$231>>2]|0;
   $arglist_next60 = ((($231)) + 4|0);
   HEAP32[$2>>2] = $arglist_next60;
   $233 = ($232|0)==(0|0);
   if ($233) {
    label = 105;
   } else {
    $234 = ((($0)) + 148|0);
    $235 = HEAP32[$234>>2]|0;
    HEAP32[$232>>2] = $235;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 11018:  {
   $arglist_current62 = HEAP32[$2>>2]|0;
   $236 = $arglist_current62;
   $237 = ((0) + 4|0);
   $expanded143 = $237;
   $expanded142 = (($expanded143) - 1)|0;
   $238 = (($236) + ($expanded142))|0;
   $239 = ((0) + 4|0);
   $expanded147 = $239;
   $expanded146 = (($expanded147) - 1)|0;
   $expanded145 = $expanded146 ^ -1;
   $240 = $238 & $expanded145;
   $241 = $240;
   $242 = HEAP32[$241>>2]|0;
   $arglist_next63 = ((($241)) + 4|0);
   HEAP32[$2>>2] = $arglist_next63;
   $$off477 = (($242) + 1)|0;
   $243 = ($$off477>>>0)>(101);
   if ($243) {
    label = 105;
   } else {
    $244 = ((($0)) + 140|0);
    HEAP32[$244>>2] = $242;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 11019:  {
   $arglist_current65 = HEAP32[$2>>2]|0;
   $245 = $arglist_current65;
   $246 = ((0) + 4|0);
   $expanded150 = $246;
   $expanded149 = (($expanded150) - 1)|0;
   $247 = (($245) + ($expanded149))|0;
   $248 = ((0) + 4|0);
   $expanded154 = $248;
   $expanded153 = (($expanded154) - 1)|0;
   $expanded152 = $expanded153 ^ -1;
   $249 = $247 & $expanded152;
   $250 = $249;
   $251 = HEAP32[$250>>2]|0;
   $arglist_next66 = ((($250)) + 4|0);
   HEAP32[$2>>2] = $arglist_next66;
   $252 = ($251|0)==(0|0);
   if ($252) {
    label = 105;
   } else {
    $253 = ((($0)) + 140|0);
    $254 = HEAP32[$253>>2]|0;
    HEAP32[$251>>2] = $254;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4020:  {
   $arglist_current68 = HEAP32[$2>>2]|0;
   $255 = $arglist_current68;
   $256 = ((0) + 4|0);
   $expanded157 = $256;
   $expanded156 = (($expanded157) - 1)|0;
   $257 = (($255) + ($expanded156))|0;
   $258 = ((0) + 4|0);
   $expanded161 = $258;
   $expanded160 = (($expanded161) - 1)|0;
   $expanded159 = $expanded160 ^ -1;
   $259 = $257 & $expanded159;
   $260 = $259;
   $261 = HEAP32[$260>>2]|0;
   $arglist_next69 = ((($260)) + 4|0);
   HEAP32[$2>>2] = $arglist_next69;
   $262 = ($261>>>0)>(1);
   if ($262) {
    label = 105;
   } else {
    $263 = ((($0)) + 152|0);
    HEAP32[$263>>2] = $261;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4021:  {
   $arglist_current71 = HEAP32[$2>>2]|0;
   $264 = $arglist_current71;
   $265 = ((0) + 4|0);
   $expanded164 = $265;
   $expanded163 = (($expanded164) - 1)|0;
   $266 = (($264) + ($expanded163))|0;
   $267 = ((0) + 4|0);
   $expanded168 = $267;
   $expanded167 = (($expanded168) - 1)|0;
   $expanded166 = $expanded167 ^ -1;
   $268 = $266 & $expanded166;
   $269 = $268;
   $270 = HEAP32[$269>>2]|0;
   $arglist_next72 = ((($269)) + 4|0);
   HEAP32[$2>>2] = $arglist_next72;
   $271 = ($270|0)==(0|0);
   if ($271) {
    label = 105;
   } else {
    $272 = ((($0)) + 152|0);
    $273 = HEAP32[$272>>2]|0;
    HEAP32[$270>>2] = $273;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4024:  {
   $arglist_current74 = HEAP32[$2>>2]|0;
   $274 = $arglist_current74;
   $275 = ((0) + 4|0);
   $expanded171 = $275;
   $expanded170 = (($expanded171) - 1)|0;
   $276 = (($274) + ($expanded170))|0;
   $277 = ((0) + 4|0);
   $expanded175 = $277;
   $expanded174 = (($expanded175) - 1)|0;
   $expanded173 = $expanded174 ^ -1;
   $278 = $276 & $expanded173;
   $279 = $278;
   $280 = HEAP32[$279>>2]|0;
   $arglist_next75 = ((($279)) + 4|0);
   HEAP32[$2>>2] = $arglist_next75;
   $switch$split2D = ($280|0)<(3001);
   if ($switch$split2D) {
    switch ($280|0) {
    case -1000:  {
     break;
    }
    default: {
     label = 105;
     break L1;
    }
    }
   } else {
    switch ($280|0) {
    case 3001: case 3002:  {
     break;
    }
    default: {
     label = 105;
     break L1;
    }
    }
   }
   $281 = ((($0)) + 124|0);
   HEAP32[$281>>2] = $280;
   $$2 = 0;
   label = 104;
   break;
  }
  case 4025:  {
   $arglist_current77 = HEAP32[$2>>2]|0;
   $282 = $arglist_current77;
   $283 = ((0) + 4|0);
   $expanded178 = $283;
   $expanded177 = (($expanded178) - 1)|0;
   $284 = (($282) + ($expanded177))|0;
   $285 = ((0) + 4|0);
   $expanded182 = $285;
   $expanded181 = (($expanded182) - 1)|0;
   $expanded180 = $expanded181 ^ -1;
   $286 = $284 & $expanded180;
   $287 = $286;
   $288 = HEAP32[$287>>2]|0;
   $arglist_next78 = ((($287)) + 4|0);
   HEAP32[$2>>2] = $arglist_next78;
   $289 = ($288|0)==(0|0);
   if ($289) {
    label = 105;
   } else {
    $290 = ((($0)) + 124|0);
    $291 = HEAP32[$290>>2]|0;
    HEAP32[$288>>2] = $291;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4027:  {
   $arglist_current80 = HEAP32[$2>>2]|0;
   $292 = $arglist_current80;
   $293 = ((0) + 4|0);
   $expanded185 = $293;
   $expanded184 = (($expanded185) - 1)|0;
   $294 = (($292) + ($expanded184))|0;
   $295 = ((0) + 4|0);
   $expanded189 = $295;
   $expanded188 = (($expanded189) - 1)|0;
   $expanded187 = $expanded188 ^ -1;
   $296 = $294 & $expanded187;
   $297 = $296;
   $298 = HEAP32[$297>>2]|0;
   $arglist_next81 = ((($297)) + 4|0);
   HEAP32[$2>>2] = $arglist_next81;
   $299 = ($298|0)==(0|0);
   if ($299) {
    label = 105;
   } else {
    $300 = ((($0)) + 144|0);
    $301 = HEAP32[$300>>2]|0;
    $302 = (($301|0) / 400)&-1;
    HEAP32[$298>>2] = $302;
    $303 = ((($0)) + 108|0);
    $304 = HEAP32[$303>>2]|0;
    $305 = ($304|0)==(2051);
    if ($305) {
     $$2 = 0;
     label = 104;
    } else {
     $306 = ((($0)) + 116|0);
     $307 = HEAP32[$306>>2]|0;
     $308 = (($307) + ($302))|0;
     HEAP32[$298>>2] = $308;
     $$2 = 0;
     label = 104;
    }
   }
   break;
  }
  case 4029:  {
   $arglist_current83 = HEAP32[$2>>2]|0;
   $309 = $arglist_current83;
   $310 = ((0) + 4|0);
   $expanded192 = $310;
   $expanded191 = (($expanded192) - 1)|0;
   $311 = (($309) + ($expanded191))|0;
   $312 = ((0) + 4|0);
   $expanded196 = $312;
   $expanded195 = (($expanded196) - 1)|0;
   $expanded194 = $expanded195 ^ -1;
   $313 = $311 & $expanded194;
   $314 = $313;
   $315 = HEAP32[$314>>2]|0;
   $arglist_next84 = ((($314)) + 4|0);
   HEAP32[$2>>2] = $arglist_next84;
   $316 = ($315|0)==(0|0);
   if ($316) {
    label = 105;
   } else {
    $317 = ((($0)) + 144|0);
    $318 = HEAP32[$317>>2]|0;
    HEAP32[$315>>2] = $318;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4031:  {
   $arglist_current86 = HEAP32[$2>>2]|0;
   $319 = $arglist_current86;
   $320 = ((0) + 4|0);
   $expanded199 = $320;
   $expanded198 = (($expanded199) - 1)|0;
   $321 = (($319) + ($expanded198))|0;
   $322 = ((0) + 4|0);
   $expanded203 = $322;
   $expanded202 = (($expanded203) - 1)|0;
   $expanded201 = $expanded202 ^ -1;
   $323 = $321 & $expanded201;
   $324 = $323;
   $325 = HEAP32[$324>>2]|0;
   $arglist_next87 = ((($324)) + 4|0);
   HEAP32[$2>>2] = $arglist_next87;
   $326 = ($325|0)==(0|0);
   if ($326) {
    label = 105;
   } else {
    $327 = ((($0)) + 18032|0);
    $328 = HEAP32[$327>>2]|0;
    HEAP32[$325>>2] = $328;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4036:  {
   $arglist_current89 = HEAP32[$2>>2]|0;
   $329 = $arglist_current89;
   $330 = ((0) + 4|0);
   $expanded206 = $330;
   $expanded205 = (($expanded206) - 1)|0;
   $331 = (($329) + ($expanded205))|0;
   $332 = ((0) + 4|0);
   $expanded210 = $332;
   $expanded209 = (($expanded210) - 1)|0;
   $expanded208 = $expanded209 ^ -1;
   $333 = $331 & $expanded208;
   $334 = $333;
   $335 = HEAP32[$334>>2]|0;
   $arglist_next90 = ((($334)) + 4|0);
   HEAP32[$2>>2] = $arglist_next90;
   $$off476 = (($335) + -8)|0;
   $336 = ($$off476>>>0)>(16);
   if ($336) {
    label = 105;
   } else {
    $337 = ((($0)) + 168|0);
    HEAP32[$337>>2] = $335;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4037:  {
   $arglist_current92 = HEAP32[$2>>2]|0;
   $338 = $arglist_current92;
   $339 = ((0) + 4|0);
   $expanded213 = $339;
   $expanded212 = (($expanded213) - 1)|0;
   $340 = (($338) + ($expanded212))|0;
   $341 = ((0) + 4|0);
   $expanded217 = $341;
   $expanded216 = (($expanded217) - 1)|0;
   $expanded215 = $expanded216 ^ -1;
   $342 = $340 & $expanded215;
   $343 = $342;
   $344 = HEAP32[$343>>2]|0;
   $arglist_next93 = ((($343)) + 4|0);
   HEAP32[$2>>2] = $arglist_next93;
   $345 = ($344|0)==(0|0);
   if ($345) {
    label = 105;
   } else {
    $346 = ((($0)) + 168|0);
    $347 = HEAP32[$346>>2]|0;
    HEAP32[$344>>2] = $347;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4040:  {
   $arglist_current95 = HEAP32[$2>>2]|0;
   $348 = $arglist_current95;
   $349 = ((0) + 4|0);
   $expanded220 = $349;
   $expanded219 = (($expanded220) - 1)|0;
   $350 = (($348) + ($expanded219))|0;
   $351 = ((0) + 4|0);
   $expanded224 = $351;
   $expanded223 = (($expanded224) - 1)|0;
   $expanded222 = $expanded223 ^ -1;
   $352 = $350 & $expanded222;
   $353 = $352;
   $354 = HEAP32[$353>>2]|0;
   $arglist_next96 = ((($353)) + 4|0);
   HEAP32[$2>>2] = $arglist_next96;
   $$off = (($354) + -5000)|0;
   $switch = ($$off>>>0)<(10);
   if ($switch) {
    $355 = ((($0)) + 156|0);
    HEAP32[$355>>2] = $354;
    HEAP32[$vararg_buffer97>>2] = $354;
    (_opus_custom_encoder_ctl($5,4040,$vararg_buffer97)|0);
    $$2 = 0;
    label = 104;
   } else {
    label = 105;
   }
   break;
  }
  case 4041:  {
   $arglist_current101 = HEAP32[$2>>2]|0;
   $356 = $arglist_current101;
   $357 = ((0) + 4|0);
   $expanded227 = $357;
   $expanded226 = (($expanded227) - 1)|0;
   $358 = (($356) + ($expanded226))|0;
   $359 = ((0) + 4|0);
   $expanded231 = $359;
   $expanded230 = (($expanded231) - 1)|0;
   $expanded229 = $expanded230 ^ -1;
   $360 = $358 & $expanded229;
   $361 = $360;
   $362 = HEAP32[$361>>2]|0;
   $arglist_next102 = ((($361)) + 4|0);
   HEAP32[$2>>2] = $arglist_next102;
   $363 = ($362|0)==(0|0);
   if ($363) {
    label = 105;
   } else {
    $364 = ((($0)) + 156|0);
    $365 = HEAP32[$364>>2]|0;
    HEAP32[$362>>2] = $365;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4042:  {
   $arglist_current104 = HEAP32[$2>>2]|0;
   $366 = $arglist_current104;
   $367 = ((0) + 4|0);
   $expanded234 = $367;
   $expanded233 = (($expanded234) - 1)|0;
   $368 = (($366) + ($expanded233))|0;
   $369 = ((0) + 4|0);
   $expanded238 = $369;
   $expanded237 = (($expanded238) - 1)|0;
   $expanded236 = $expanded237 ^ -1;
   $370 = $368 & $expanded236;
   $371 = $370;
   $372 = HEAP32[$371>>2]|0;
   $arglist_next105 = ((($371)) + 4|0);
   HEAP32[$2>>2] = $arglist_next105;
   $373 = ($372>>>0)>(1);
   if ($373) {
    label = 105;
   } else {
    $374 = ((($0)) + 76|0);
    HEAP32[$374>>2] = $372;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4043:  {
   $arglist_current107 = HEAP32[$2>>2]|0;
   $375 = $arglist_current107;
   $376 = ((0) + 4|0);
   $expanded241 = $376;
   $expanded240 = (($expanded241) - 1)|0;
   $377 = (($375) + ($expanded240))|0;
   $378 = ((0) + 4|0);
   $expanded245 = $378;
   $expanded244 = (($expanded245) - 1)|0;
   $expanded243 = $expanded244 ^ -1;
   $379 = $377 & $expanded243;
   $380 = $379;
   $381 = HEAP32[$380>>2]|0;
   $arglist_next108 = ((($380)) + 4|0);
   HEAP32[$2>>2] = $arglist_next108;
   $382 = ($381|0)==(0|0);
   if ($382) {
    label = 105;
   } else {
    $383 = ((($0)) + 76|0);
    $384 = HEAP32[$383>>2]|0;
    HEAP32[$381>>2] = $384;
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4046:  {
   $arglist_current110 = HEAP32[$2>>2]|0;
   $385 = $arglist_current110;
   $386 = ((0) + 4|0);
   $expanded248 = $386;
   $expanded247 = (($expanded248) - 1)|0;
   $387 = (($385) + ($expanded247))|0;
   $388 = ((0) + 4|0);
   $expanded252 = $388;
   $expanded251 = (($expanded252) - 1)|0;
   $expanded250 = $expanded251 ^ -1;
   $389 = $387 & $expanded250;
   $390 = $389;
   $391 = HEAP32[$390>>2]|0;
   $arglist_next111 = ((($390)) + 4|0);
   HEAP32[$2>>2] = $arglist_next111;
   $392 = ($391>>>0)>(1);
   if ($392) {
    label = 105;
   } else {
    HEAP32[$vararg_buffer112>>2] = $391;
    (_opus_custom_encoder_ctl($5,4046,$vararg_buffer112)|0);
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4047:  {
   $arglist_current116 = HEAP32[$2>>2]|0;
   $393 = $arglist_current116;
   $394 = ((0) + 4|0);
   $expanded255 = $394;
   $expanded254 = (($expanded255) - 1)|0;
   $395 = (($393) + ($expanded254))|0;
   $396 = ((0) + 4|0);
   $expanded259 = $396;
   $expanded258 = (($expanded259) - 1)|0;
   $expanded257 = $expanded258 ^ -1;
   $397 = $395 & $expanded257;
   $398 = $397;
   $399 = HEAP32[$398>>2]|0;
   $arglist_next117 = ((($398)) + 4|0);
   HEAP32[$2>>2] = $arglist_next117;
   $400 = ($399|0)==(0|0);
   if ($400) {
    label = 105;
   } else {
    HEAP32[$vararg_buffer118>>2] = $399;
    (_opus_custom_encoder_ctl($5,4047,$vararg_buffer118)|0);
    $$2 = 0;
    label = 104;
   }
   break;
  }
  case 4028:  {
   $401 = ((($0)) + 4|0);
   $402 = HEAP32[$401>>2]|0;
   $403 = (($0) + ($402)|0);
   $404 = ((($0)) + 188|0);
   _tonality_analysis_reset($404);
   $405 = ((($0)) + 14088|0);
   _memset(($405|0),0,3948)|0;
   (_opus_custom_encoder_ctl($5,4028,$vararg_buffer121)|0);
   $406 = ((($0)) + 180|0);
   $407 = HEAP32[$406>>2]|0;
   (_silk_InitEncoder($403,$407,$3)|0);
   $408 = ((($0)) + 112|0);
   $409 = HEAP32[$408>>2]|0;
   HEAP32[$405>>2] = $409;
   $410 = ((($0)) + 14092|0);
   HEAP16[$410>>1] = 16384;
   $411 = ((($0)) + 14100|0);
   HEAPF32[$411>>2] = Math_fround(1.0);
   $412 = ((($0)) + 14148|0);
   HEAP32[$412>>2] = 1;
   $413 = ((($0)) + 14120|0);
   HEAP32[$413>>2] = 1001;
   $414 = ((($0)) + 14136|0);
   HEAP32[$414>>2] = 1105;
   $415 = (_silk_lin2log(60)|0);
   $416 = $415 << 8;
   $417 = ((($0)) + 14096|0);
   HEAP32[$417>>2] = $416;
   $$2 = 0;
   label = 104;
   break;
  }
  case 11002:  {
   $arglist_current124 = HEAP32[$2>>2]|0;
   $418 = $arglist_current124;
   $419 = ((0) + 4|0);
   $expanded262 = $419;
   $expanded261 = (($expanded262) - 1)|0;
   $420 = (($418) + ($expanded261))|0;
   $421 = ((0) + 4|0);
   $expanded266 = $421;
   $expanded265 = (($expanded266) - 1)|0;
   $expanded264 = $expanded265 ^ -1;
   $422 = $420 & $expanded264;
   $423 = $422;
   $424 = HEAP32[$423>>2]|0;
   $arglist_next125 = ((($423)) + 4|0);
   HEAP32[$2>>2] = $arglist_next125;
   switch ($424|0) {
   case 1000: case 1001: case 1002: case -1000:  {
    break;
   }
   default: {
    label = 105;
    break L1;
   }
   }
   $425 = ((($0)) + 136|0);
   HEAP32[$425>>2] = $424;
   $$2 = 0;
   label = 104;
   break;
  }
  case 10024:  {
   $arglist_current127 = HEAP32[$2>>2]|0;
   $426 = $arglist_current127;
   $427 = ((0) + 4|0);
   $expanded269 = $427;
   $expanded268 = (($expanded269) - 1)|0;
   $428 = (($426) + ($expanded268))|0;
   $429 = ((0) + 4|0);
   $expanded273 = $429;
   $expanded272 = (($expanded273) - 1)|0;
   $expanded271 = $expanded272 ^ -1;
   $430 = $428 & $expanded271;
   $431 = $430;
   $432 = HEAP32[$431>>2]|0;
   $arglist_next128 = ((($431)) + 4|0);
   HEAP32[$2>>2] = $arglist_next128;
   $433 = ((($0)) + 176|0);
   HEAP32[$433>>2] = $432;
   HEAP32[$vararg_buffer129>>2] = $432;
   $434 = (_opus_custom_encoder_ctl($5,10024,$vararg_buffer129)|0);
   $$2 = $434;
   label = 104;
   break;
  }
  case 10026:  {
   $arglist_current133 = HEAP32[$2>>2]|0;
   $435 = $arglist_current133;
   $436 = ((0) + 4|0);
   $expanded276 = $436;
   $expanded275 = (($expanded276) - 1)|0;
   $437 = (($435) + ($expanded275))|0;
   $438 = ((0) + 4|0);
   $expanded280 = $438;
   $expanded279 = (($expanded280) - 1)|0;
   $expanded278 = $expanded279 ^ -1;
   $439 = $437 & $expanded278;
   $440 = $439;
   $441 = HEAP32[$440>>2]|0;
   $arglist_next134 = ((($440)) + 4|0);
   HEAP32[$2>>2] = $arglist_next134;
   $442 = ((($0)) + 14152|0);
   HEAP32[$442>>2] = $441;
   HEAP32[$vararg_buffer135>>2] = $441;
   $443 = (_opus_custom_encoder_ctl($5,10026,$vararg_buffer135)|0);
   $$2 = $443;
   label = 104;
   break;
  }
  case 10015:  {
   $arglist_current139 = HEAP32[$2>>2]|0;
   $444 = $arglist_current139;
   $445 = ((0) + 4|0);
   $expanded283 = $445;
   $expanded282 = (($expanded283) - 1)|0;
   $446 = (($444) + ($expanded282))|0;
   $447 = ((0) + 4|0);
   $expanded287 = $447;
   $expanded286 = (($expanded287) - 1)|0;
   $expanded285 = $expanded286 ^ -1;
   $448 = $446 & $expanded285;
   $449 = $448;
   $450 = HEAP32[$449>>2]|0;
   $arglist_next140 = ((($449)) + 4|0);
   HEAP32[$2>>2] = $arglist_next140;
   $451 = ($450|0)==(0|0);
   if ($451) {
    label = 105;
   } else {
    HEAP32[$vararg_buffer141>>2] = $450;
    $452 = (_opus_custom_encoder_ctl($5,10015,$vararg_buffer141)|0);
    $$2 = $452;
    label = 104;
   }
   break;
  }
  default: {
   $$2 = -5;
   label = 104;
  }
  }
 } while(0);
 if ((label|0) == 104) {
  $$0 = $$2;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 105) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _opus_repacketizer_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 return ($0|0);
}
function _opus_repacketizer_cat($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($2|0)<(1);
 do {
  if ($4) {
   $$0$i = -4;
  } else {
   $5 = ((($0)) + 4|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    $8 = HEAP8[$1>>0]|0;
    HEAP8[$0>>0] = $8;
    $9 = (_opus_packet_get_samples_per_frame($1,8000)|0);
    $10 = ((($0)) + 296|0);
    HEAP32[$10>>2] = $9;
   } else {
    $11 = HEAP8[$0>>0]|0;
    $12 = HEAP8[$1>>0]|0;
    $13 = $12 ^ $11;
    $14 = ($13&255)>(3);
    if ($14) {
     $$0$i = -4;
     break;
    }
   }
   $15 = (_opus_packet_get_nb_frames($1,$2)|0);
   $16 = ($15|0)<(1);
   if ($16) {
    $$0$i = -4;
   } else {
    $17 = HEAP32[$5>>2]|0;
    $18 = (($17) + ($15))|0;
    $19 = ((($0)) + 296|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = Math_imul($18, $20)|0;
    $22 = ($21|0)>(960);
    if ($22) {
     $$0$i = -4;
    } else {
     $23 = (((($0)) + 8|0) + ($17<<2)|0);
     $24 = (((($0)) + 200|0) + ($17<<1)|0);
     $25 = (_opus_packet_parse_impl($1,$2,0,$3,$23,$24,0,0)|0);
     $26 = ($25|0)<(1);
     if ($26) {
      $$0$i = $25;
     } else {
      $27 = HEAP32[$5>>2]|0;
      $28 = (($27) + ($15))|0;
      HEAP32[$5>>2] = $28;
      $$0$i = 0;
     }
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0$i|0);
}
function _opus_repacketizer_out_range_impl($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0151198 = 0, $$0153172 = 0, $$0155170 = 0, $$0160 = 0, $$1 = 0, $$1156 = 0, $$1161169 = 0, $$2157$lcssa = 0, $$2157185 = 0, $$2162 = 0, $$2186 = 0, $$3158 = 0, $$3181 = 0, $$4159180 = 0, $$4164 = 0, $$4178 = 0, $$5165 = 0, $$7 = 0, $$7167 = 0, $$8 = 0;
 var $$9$lcssa = 0, $$9$lcssa205 = 0, $$9177 = 0, $$lcssa217 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $or$cond = 0, $or$cond168 = 0, $or$cond214 = 0, $phitmp = 0, $scevgep = 0, $scevgep206 = 0, $smax = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $7 = ($1|0)>(-1);
 $8 = ($2|0)>($1|0);
 $or$cond = $7 & $8;
 if (!($or$cond)) {
  $$1 = -1;
  return ($$1|0);
 }
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)<($2|0);
 if ($11) {
  $$1 = -1;
  return ($$1|0);
 }
 $12 = (($2) - ($1))|0;
 $13 = (((($0)) + 200|0) + ($1<<1)|0);
 $14 = (((($0)) + 8|0) + ($1<<2)|0);
 $15 = ($5|0)!=(0);
 if ($15) {
  $16 = (($12) + -1)|0;
  $17 = (($13) + ($16<<1)|0);
  $18 = HEAP16[$17>>1]|0;
  $19 = ($18<<16>>16)>(251);
  $20 = $19 ? 2 : 1;
  $$0160 = $20;
 } else {
  $$0160 = 0;
 }
 L10: do {
  switch ($12|0) {
  case 1:  {
   $21 = HEAP16[$13>>1]|0;
   $22 = $21 << 16 >> 16;
   $23 = (($$0160) + 1)|0;
   $24 = (($23) + ($22))|0;
   $25 = ($24|0)>($4|0);
   if ($25) {
    $$1 = -2;
    return ($$1|0);
   } else {
    $26 = HEAP8[$0>>0]|0;
    $27 = $26 & -4;
    $28 = ((($3)) + 1|0);
    HEAP8[$3>>0] = $27;
    $$0155170 = $28;$$1161169 = $24;
    label = 14;
    break L10;
   }
   break;
  }
  case 2:  {
   $29 = ((($13)) + 2|0);
   $30 = HEAP16[$29>>1]|0;
   $31 = HEAP16[$13>>1]|0;
   $32 = $31 << 16 >> 16;
   $33 = ($30<<16>>16)==($31<<16>>16);
   if ($33) {
    $34 = $32 << 1;
    $35 = $34 | 1;
    $36 = (($35) + ($$0160))|0;
    $37 = ($36|0)>($4|0);
    if ($37) {
     $$1 = -2;
     return ($$1|0);
    } else {
     $38 = HEAP8[$0>>0]|0;
     $39 = $38 & -4;
     $40 = $39 | 1;
     $41 = ((($3)) + 1|0);
     HEAP8[$3>>0] = $40;
     $$0155170 = $41;$$1161169 = $36;
     label = 14;
     break L10;
    }
   } else {
    $42 = $30 << 16 >> 16;
    $43 = ($31<<16>>16)>(251);
    $44 = $43&1;
    $45 = (($$0160) + 2)|0;
    $46 = (($45) + ($42))|0;
    $47 = (($46) + ($32))|0;
    $48 = (($47) + ($44))|0;
    $49 = ($48|0)>($4|0);
    if ($49) {
     $$1 = -2;
     return ($$1|0);
    } else {
     $50 = HEAP8[$0>>0]|0;
     $51 = $50 & -4;
     $52 = $51 | 2;
     $53 = ((($3)) + 1|0);
     HEAP8[$3>>0] = $52;
     $54 = HEAP16[$13>>1]|0;
     $55 = $54 << 16 >> 16;
     $56 = (_encode_size($55,$53)|0);
     $57 = (($53) + ($56)|0);
     $$0155170 = $57;$$1161169 = $48;
     label = 14;
     break L10;
    }
   }
   break;
  }
  default: {
   $58 = ($12|0)>(2);
   if ($58) {
    label = 15;
   } else {
    $$0155170 = $3;$$1161169 = $$0160;
    label = 14;
   }
  }
  }
 } while(0);
 if ((label|0) == 14) {
  $59 = ($6|0)!=(0);
  $60 = ($$1161169|0)<($4|0);
  $or$cond168 = $59 & $60;
  if ($or$cond168) {
   label = 15;
  } else {
   $$7 = $$0155170;$$7167 = $$1161169;
  }
 }
 if ((label|0) == 15) {
  if ($15) {
   $61 = (($12) + -1)|0;
   $62 = (($13) + ($61<<1)|0);
   $63 = HEAP16[$62>>1]|0;
   $64 = ($63<<16>>16)>(251);
   $phitmp = $64 ? 4 : 3;
   $$2162 = $phitmp;
  } else {
   $$2162 = 2;
  }
  $65 = ($12|0)>(1);
  $66 = HEAP16[$13>>1]|0;
  L33: do {
   if ($65) {
    $$0151198 = 1;
    while(1) {
     $69 = (($13) + ($$0151198<<1)|0);
     $70 = HEAP16[$69>>1]|0;
     $71 = ($70<<16>>16)==($66<<16>>16);
     $68 = (($$0151198) + 1)|0;
     if (!($71)) {
      break;
     }
     $67 = ($68|0)<($12|0);
     if ($67) {
      $$0151198 = $68;
     } else {
      label = 26;
      break L33;
     }
    }
    $72 = (($12) + -1)|0;
    $73 = $66 << 16 >> 16;
    $74 = ($66<<16>>16)>(251);
    $75 = $74 ? 2 : 1;
    $76 = (($$2162) + ($73))|0;
    $77 = (($76) + ($75))|0;
    $78 = ($12|0)>(2);
    if ($78) {
     $79 = 1;$84 = $77;
     while(1) {
      $$phi$trans$insert = (($13) + ($79<<1)|0);
      $$pre = HEAP16[$$phi$trans$insert>>1]|0;
      $80 = $$pre << 16 >> 16;
      $81 = ($$pre<<16>>16)>(251);
      $82 = $81 ? 2 : 1;
      $83 = (($84) + ($80))|0;
      $85 = (($83) + ($82))|0;
      $86 = (($79) + 1)|0;
      $87 = ($86|0)<($72|0);
      if ($87) {
       $79 = $86;$84 = $85;
      } else {
       $$lcssa217 = $85;
       break;
      }
     }
    } else {
     $$lcssa217 = $77;
    }
    $88 = (($13) + ($72<<1)|0);
    $89 = HEAP16[$88>>1]|0;
    $90 = $89 << 16 >> 16;
    $91 = (($$lcssa217) + ($90))|0;
    $92 = ($91|0)>($4|0);
    if ($92) {
     $$1 = -2;
     return ($$1|0);
    } else {
     $93 = HEAP8[$0>>0]|0;
     $94 = $93 | 3;
     $95 = ((($3)) + 1|0);
     HEAP8[$3>>0] = $94;
     $96 = $12 | 128;
     $97 = $96&255;
     HEAP8[$95>>0] = $97;
     $$0153172 = 1;$$4164 = $91;$112 = $97;
     break;
    }
   } else {
    label = 26;
   }
  } while(0);
  do {
   if ((label|0) == 26) {
    $98 = $66 << 16 >> 16;
    $99 = Math_imul($12, $98)|0;
    $100 = (($$2162) + ($99))|0;
    $101 = ($100|0)>($4|0);
    if ($101) {
     $$1 = -2;
     return ($$1|0);
    } else {
     $102 = HEAP8[$0>>0]|0;
     $103 = $102 | 3;
     $104 = ((($3)) + 1|0);
     HEAP8[$3>>0] = $103;
     $105 = $12&255;
     HEAP8[$104>>0] = $105;
     $$0153172 = 0;$$4164 = $100;$112 = $105;
     break;
    }
   }
  } while(0);
  $$1156 = ((($3)) + 2|0);
  $106 = ($6|0)==(0);
  $107 = (($4) - ($$4164))|0;
  $108 = ($107|0)==(0);
  $109 = $106 | $108;
  if ($109) {
   $$3158 = $$1156;$$5165 = $$4164;
  } else {
   $110 = ((($3)) + 1|0);
   $111 = $112 | 64;
   HEAP8[$110>>0] = $111;
   $113 = (($107) + -1)|0;
   $114 = (($113|0) / 255)&-1;
   $115 = ($107|0)>(255);
   if ($115) {
    $116 = ($114|0)>(1);
    $smax = $116 ? $114 : 1;
    _memset(($$1156|0),-1,($smax|0))|0;
    $$2157185 = $$1156;$$2186 = 0;
    while(1) {
     $117 = ((($$2157185)) + 1|0);
     $118 = (($$2186) + 1)|0;
     $119 = ($118|0)<($114|0);
     if ($119) {
      $$2157185 = $117;$$2186 = $118;
     } else {
      $$2157$lcssa = $117;
      break;
     }
    }
   } else {
    $$2157$lcssa = $$1156;
   }
   $120 = Math_imul($114, -255)|0;
   $121 = (($107) + 255)|0;
   $122 = (($121) + ($120))|0;
   $123 = $122&255;
   $124 = ((($$2157$lcssa)) + 1|0);
   HEAP8[$$2157$lcssa>>0] = $123;
   $$3158 = $124;$$5165 = $4;
  }
  if ($$0153172) {
   $125 = (($12) + -1)|0;
   if ($65) {
    $$3181 = 0;$$4159180 = $$3158;
    while(1) {
     $126 = (($13) + ($$3181<<1)|0);
     $127 = HEAP16[$126>>1]|0;
     $128 = $127 << 16 >> 16;
     $129 = (_encode_size($128,$$4159180)|0);
     $130 = (($$4159180) + ($129)|0);
     $131 = (($$3181) + 1)|0;
     $132 = ($131|0)<($125|0);
     if ($132) {
      $$3181 = $131;$$4159180 = $130;
     } else {
      $$7 = $130;$$7167 = $$5165;
      break;
     }
    }
   } else {
    $$7 = $$3158;$$7167 = $$5165;
   }
  } else {
   $$7 = $$3158;$$7167 = $$5165;
  }
 }
 if ($15) {
  $133 = (($12) + -1)|0;
  $134 = (($13) + ($133<<1)|0);
  $135 = HEAP16[$134>>1]|0;
  $136 = $135 << 16 >> 16;
  $137 = (_encode_size($136,$$7)|0);
  $138 = (($$7) + ($137)|0);
  $$8 = $138;
 } else {
  $$8 = $$7;
 }
 $139 = ($12|0)>(0);
 if ($139) {
  $$4178 = 0;$$9177 = $$8;
  while(1) {
   $140 = (($14) + ($$4178<<2)|0);
   $141 = HEAP32[$140>>2]|0;
   $142 = (($13) + ($$4178<<1)|0);
   $143 = HEAP16[$142>>1]|0;
   $144 = $143 << 16 >> 16;
   _memmove(($$9177|0),($141|0),($144|0))|0;
   $145 = HEAP16[$142>>1]|0;
   $146 = $145 << 16 >> 16;
   $147 = (($$9177) + ($146)|0);
   $148 = (($$4178) + 1)|0;
   $exitcond = ($148|0)==($12|0);
   if ($exitcond) {
    $$9$lcssa = $147;
    break;
   } else {
    $$4178 = $148;$$9177 = $147;
   }
  }
 } else {
  $$9$lcssa = $$8;
 }
 $149 = ($6|0)!=(0);
 $150 = (($3) + ($4)|0);
 $151 = ($$9$lcssa>>>0)<($150>>>0);
 $or$cond214 = $149 & $151;
 if (!($or$cond214)) {
  $$1 = $$7167;
  return ($$1|0);
 }
 $$9$lcssa205 = $$9$lcssa;
 $152 = (($4) - ($$9$lcssa205))|0;
 $scevgep = (($3) + ($152)|0);
 $scevgep206 = $scevgep;
 _memset(($$9$lcssa|0),0,($scevgep206|0))|0;
 $$1 = $$7167;
 return ($$1|0);
}
function _opus_packet_pad($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $3 = sp;
 $4 = ($1|0)<(1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = ($1|0)==($2|0);
  if ($5) {
   $$0 = 0;
  } else {
   $6 = ($1|0)>($2|0);
   if ($6) {
    $$0 = -1;
   } else {
    $7 = ((($3)) + 4|0);
    HEAP32[$7>>2] = 0;
    $8 = (($0) + ($2)|0);
    $9 = (0 - ($1))|0;
    $10 = (($8) + ($9)|0);
    _memmove(($10|0),($0|0),($1|0))|0;
    $11 = (_opus_repacketizer_cat($3,$10,$1)|0);
    $12 = ($11|0)==(0);
    if ($12) {
     $13 = HEAP32[$7>>2]|0;
     $14 = (_opus_repacketizer_out_range_impl($3,0,$13,$0,$2,0,1)|0);
     $15 = ($14|0)<(0);
     $$ = $15 ? $14 : 0;
     $$0 = $$;
    } else {
     $$0 = $11;
    }
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _tonality_analysis_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($0)) + 12|0);
 _memset(($3|0),0,13888)|0;
 $4 = ((($0)) + 8260|0);
 HEAPF32[$4>>2] = Math_fround(0.899999976);
 $5 = ((($0)) + 8256|0);
 HEAPF32[$5>>2] = Math_fround(0.100000001);
 return;
}
function _tonality_analysis_reset($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 _memset(($1|0),0,13888)|0;
 $2 = ((($0)) + 8260|0);
 HEAPF32[$2>>2] = Math_fround(0.899999976);
 $3 = ((($0)) + 8256|0);
 HEAPF32[$3>>2] = Math_fround(0.100000001);
 return;
}
function _tonality_get_info($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = Math_fround(0), $$084$lcssa = Math_fround(0), $$085$lcssa = Math_fround(0), $$086$ = Math_fround(0), $$086$$1 = Math_fround(0), $$086$$2 = Math_fround(0), $$086$lcssa = Math_fround(0), $$08797 = Math_fround(0), $$090 = 0, $$188$lcssa = Math_fround(0), $$18895 = Math_fround(0), $$18895$ph = Math_fround(0), $$198 = 0, $$292 = 0, $$296 = 0, $$296$ph = 0, $$promoted = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = Math_fround(0), $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = Math_fround(0), $29 = 0, $3 = 0, $30 = Math_fround(0), $31 = 0;
 var $32 = 0, $33 = 0, $34 = Math_fround(0), $35 = Math_fround(0), $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = Math_fround(0), $64 = Math_fround(0), $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = Math_fround(0), $7 = 0, $70 = Math_fround(0), $71 = 0, $72 = 0, $73 = Math_fround(0), $74 = Math_fround(0), $75 = Math_fround(0), $76 = 0, $77 = Math_fround(0), $78 = Math_fround(0), $79 = Math_fround(0), $8 = 0, $80 = 0, $81 = 0, $82 = Math_fround(0), $83 = 0, $84 = Math_fround(0), $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = Math_fround(0), $9 = 0, $90 = 0, $91 = Math_fround(0), $exitcond = 0, $smax = 0, $spec$select = 0, $spec$select93 = 0, $spec$select94 = 0, $spec$store$select = 0, $spec$store$select1 = 0, $spec$store$select1$1 = 0, $spec$store$select1$2 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 8276|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 8272|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) - ($4))|0;
 $8 = ($7|0)<(0);
 $9 = (($7) + 100)|0;
 $spec$select = $8 ? $9 : $7;
 $10 = ((($0)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11|0) / 50)&-1;
 $13 = ($12|0)<($2|0);
 if ($13) {
  $14 = ($6|0)==($4|0);
  $15 = (($4) + 1)|0;
  $16 = ($15|0)==(100);
  $spec$store$select = $16 ? 0 : $15;
  $spec$select94 = $14 ? $4 : $spec$store$select;
  $$090 = $spec$select94;
 } else {
  $$090 = $4;
 }
 $17 = ($$090|0)==($6|0);
 $18 = $17 << 31 >> 31;
 $spec$select93 = (($$090) + ($18))|0;
 $19 = ($spec$select93|0)<(0);
 $$292 = $19 ? 99 : $spec$select93;
 $20 = (((($0)) + 8300|0) + (($$292*56)|0)|0);
 dest=$1; src=$20; stop=dest+56|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $21 = ((($1)) + 4|0);
 $22 = Math_fround(HEAPF32[$21>>2]);
 $23 = HEAP32[$5>>2]|0;
 $24 = (($$292) + 1)|0;
 $25 = ($24|0)==(100);
 $spec$store$select1 = $25 ? 0 : $24;
 $26 = ($spec$store$select1|0)==($23|0);
 if ($26) {
  $$084$lcssa = Math_fround(1.0);$$085$lcssa = $22;$$086$lcssa = $22;
 } else {
  $27 = (((((($0)) + 8300|0) + (($spec$store$select1*56)|0)|0)) + 4|0);
  $28 = Math_fround(HEAPF32[$27>>2]);
  $29 = $22 > $28;
  $$086$ = $29 ? $22 : $28;
  $30 = Math_fround($22 + $28);
  $31 = (($spec$store$select1) + 1)|0;
  $32 = ($31|0)==(100);
  $spec$store$select1$1 = $32 ? 0 : $31;
  $33 = ($spec$store$select1$1|0)==($23|0);
  if ($33) {
   $$084$lcssa = Math_fround(2.0);$$085$lcssa = $30;$$086$lcssa = $$086$;
  } else {
   $81 = (((((($0)) + 8300|0) + (($spec$store$select1$1*56)|0)|0)) + 4|0);
   $82 = Math_fround(HEAPF32[$81>>2]);
   $83 = $$086$ > $82;
   $$086$$1 = $83 ? $$086$ : $82;
   $84 = Math_fround($30 + $82);
   $85 = (($spec$store$select1$1) + 1)|0;
   $86 = ($85|0)==(100);
   $spec$store$select1$2 = $86 ? 0 : $85;
   $87 = ($spec$store$select1$2|0)==($23|0);
   if ($87) {
    $$084$lcssa = Math_fround(3.0);$$085$lcssa = $84;$$086$lcssa = $$086$$1;
   } else {
    $88 = (((((($0)) + 8300|0) + (($spec$store$select1$2*56)|0)|0)) + 4|0);
    $89 = Math_fround(HEAPF32[$88>>2]);
    $90 = $$086$$1 > $89;
    $$086$$2 = $90 ? $$086$$1 : $89;
    $91 = Math_fround($84 + $89);
    $$084$lcssa = Math_fround(4.0);$$085$lcssa = $91;$$086$lcssa = $$086$$2;
   }
  }
 }
 $34 = Math_fround($$085$lcssa / $$084$lcssa);
 $35 = Math_fround($$086$lcssa + Math_fround(-0.200000003));
 $36 = $34 > $35;
 $$ = $36 ? $34 : $35;
 HEAPF32[$21>>2] = $$;
 $37 = HEAP32[$10>>2]|0;
 $38 = (($37|0) / 400)&-1;
 $39 = (($2|0) / ($38|0))&-1;
 $40 = ((($0)) + 8280|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = (($41) + ($39))|0;
 HEAP32[$40>>2] = $42;
 $43 = ($42|0)>(7);
 $$promoted = HEAP32[$3>>2]|0;
 if ($43) {
  $44 = $42 ^ -1;
  $45 = ($44|0)>(-16);
  $smax = $45 ? $44 : -16;
  $46 = (($42) + ($smax))|0;
  $47 = (($46) + 8)|0;
  $48 = $47 >>> 3;
  $49 = $47 & -8;
  $50 = (($$promoted) + ($48))|0;
  $51 = (($42) + -8)|0;
  $52 = (($51) - ($49))|0;
  $53 = (($50) + 1)|0;
  HEAP32[$40>>2] = $52;
  HEAP32[$3>>2] = $53;
  $55 = $53;
 } else {
  $55 = $$promoted;
 }
 $54 = ($55|0)>(99);
 if ($54) {
  $56 = (($55) + -100)|0;
  HEAP32[$3>>2] = $56;
 }
 $57 = (($spec$select) + -1)|0;
 $58 = ($57|0)>(0);
 $59 = $58 ? $57 : 0;
 $60 = (100 - ($59))|0;
 $61 = ($60|0)>(0);
 if ($61) {
  $$08797 = Math_fround(0.0);$$198 = 0;
  while(1) {
   $62 = (((($0)) + 7856|0) + ($$198<<2)|0);
   $63 = Math_fround(HEAPF32[$62>>2]);
   $64 = Math_fround($$08797 + $63);
   $65 = (($$198) + 1)|0;
   $66 = ($65|0)<($60|0);
   if ($66) {
    $$08797 = $64;$$198 = $65;
   } else {
    break;
   }
  }
  $67 = ($60>>>0)<(100);
  if ($67) {
   $$18895$ph = $64;$$296$ph = $60;
  } else {
   $$188$lcssa = $64;
   $72 = ((($0)) + 8260|0);
   $73 = Math_fround(HEAPF32[$72>>2]);
   $74 = Math_fround($$188$lcssa * $73);
   $75 = Math_fround(Math_fround(1.0) - $$188$lcssa);
   $76 = ((($0)) + 8256|0);
   $77 = Math_fround(HEAPF32[$76>>2]);
   $78 = Math_fround($75 * $77);
   $79 = Math_fround($74 + $78);
   $80 = ((($1)) + 20|0);
   HEAPF32[$80>>2] = $79;
   return;
  }
 } else {
  $$18895$ph = Math_fround(0.0);$$296$ph = 0;
 }
 $$18895 = $$18895$ph;$$296 = $$296$ph;
 while(1) {
  $68 = (((($0)) + 7456|0) + ($$296<<2)|0);
  $69 = Math_fround(HEAPF32[$68>>2]);
  $70 = Math_fround($$18895 + $69);
  $71 = (($$296) + 1)|0;
  $exitcond = ($71|0)==(100);
  if ($exitcond) {
   $$188$lcssa = $70;
   break;
  } else {
   $$18895 = $70;$$296 = $71;
  }
 }
 $72 = ((($0)) + 8260|0);
 $73 = Math_fround(HEAPF32[$72>>2]);
 $74 = Math_fround($$188$lcssa * $73);
 $75 = Math_fround(Math_fround(1.0) - $$188$lcssa);
 $76 = ((($0)) + 8256|0);
 $77 = Math_fround(HEAPF32[$76>>2]);
 $78 = Math_fround($75 * $77);
 $79 = Math_fround($74 + $78);
 $80 = ((($1)) + 20|0);
 HEAPF32[$80>>2] = $79;
 return;
}
function _run_analysis($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 var $$ = 0, $$$0 = 0, $$$01013$i = Math_fround(0), $$$i = Math_fround(0), $$0$$i = 0, $$0$i = 0, $$0$i$i = Math_fround(0), $$0$i1063$i = Math_fround(0), $$01001$$i = Math_fround(0), $$010011141$i = Math_fround(0), $$010051140$i = Math_fround(0), $$010071139$i = Math_fround(0), $$010091138$i = Math_fround(0), $$010111137$i = Math_fround(0), $$01013$lcssa$i = Math_fround(0), $$010131103$i = Math_fround(0), $$010141136$i = Math_fround(0), $$010181112$i = Math_fround(0), $$010201111$i = 0, $$010211107$i = Math_fround(0);
 var $$010221106$i = 0, $$010281105$i = Math_fround(0), $$01031$lcssa$i = Math_fround(0), $$010311124$i = Math_fround(0), $$01032$lcssa$i = Math_fround(0), $$010321123$i = Math_fround(0), $$01033$lcssa$i = Math_fround(0), $$010331122$i = Math_fround(0), $$010341113$i = Math_fround(0), $$03851 = 0, $$052 = 0, $$0985$i = 0, $$09861149$i = 0, $$09961086$i = Math_fround(0), $$09981142$i = Math_fround(0), $$1043$i = Math_fround(0), $$1044$i = Math_fround(0), $$1045$i = Math_fround(0), $$1046$i = Math_fround(0), $$1047$i = Math_fround(0);
 var $$1048$i = Math_fround(0), $$1052$i = Math_fround(0), $$1059$i = Math_fround(0), $$1060$i = Math_fround(0), $$1077$i = Math_fround(0), $$11019$i = Math_fround(0), $$11023$i = 0, $$11148$i = 0, $$181088$i = 0, $$191087$i = 0, $$19881143$i = 0, $$1999$i = Math_fround(0), $$201085$i = 0, $$21024$i = 0, $$21147$i = 0, $$29891121$i = 0, $$39901120$i = 0, $$41026$i = 0, $$41125$i = 0, $$49911119$i = 0;
 var $$61114$i = 0, $$69931108$i = 0, $$71104$i = 0, $$mux$i = Math_fround(0), $$mux1074$i = Math_fround(0), $$op$i = Math_fround(0), $$op$op$i = Math_fround(0), $$phi$trans$insert$i = 0, $$phi$trans$insert1206$i = 0, $$phi$trans$insert1211$i = 0, $$phi$trans$insert1213$i = 0, $$phi$trans$insert1216$i = 0, $$phi$trans$insert1218$i = 0, $$phi$trans$insert1220$i = 0, $$phi$trans$insert1222$i = 0, $$phi$trans$insert1224$i = 0, $$phi$trans$insert1226$i = 0, $$phi$trans$insert1228$i = 0, $$phi$trans$insert1230$i = 0, $$phi$trans$insert1232$i = 0;
 var $$phi$trans$insert1234$i = 0, $$phi$trans$insert1237$i = 0, $$phi$trans$insert1239$i = 0, $$phi$trans$insert1241$i = 0, $$phi$trans$insert1243$i = 0, $$phi$trans$insert1245$i = 0, $$phi$trans$insert1247$i = 0, $$phi$trans$insert1249$i = 0, $$phi$trans$insert1251$i = 0, $$phi$trans$insert1253$i = 0, $$phi$trans$insert1255$i = 0, $$phi$trans$insert1257$i = 0, $$phi$trans$insert1259$i = 0, $$pre$i = Math_fround(0), $$pre$phi1273$iZ2D = 0, $$pre1205$i = Math_fround(0), $$pre1207$i = Math_fround(0), $$pre1212$i = Math_fround(0), $$pre1214$i = Math_fround(0), $$pre1217$i = Math_fround(0);
 var $$pre1219$i = Math_fround(0), $$pre1221$i = Math_fround(0), $$pre1223$i = Math_fround(0), $$pre1225$i = Math_fround(0), $$pre1227$i = Math_fround(0), $$pre1229$i = Math_fround(0), $$pre1231$i = Math_fround(0), $$pre1233$i = Math_fround(0), $$pre1235$i = Math_fround(0), $$pre1238$i = Math_fround(0), $$pre1240$i = Math_fround(0), $$pre1242$i = Math_fround(0), $$pre1244$i = Math_fround(0), $$pre1246$i = Math_fround(0), $$pre1248$i = Math_fround(0), $$pre1250$i = Math_fround(0), $$pre1252$i = Math_fround(0), $$pre1254$i = Math_fround(0), $$pre1256$i = Math_fround(0), $$pre1258$i = Math_fround(0);
 var $$pre1260$i = Math_fround(0), $$pre1262$i = Math_fround(0), $$pre1264$i = Math_fround(0), $$pre1266$i = Math_fround(0), $$pre1268$i = Math_fround(0), $$pre1270$i = Math_fround(0), $$pre1272$i = Math_fround(0), $$pre65 = Math_fround(0), $$pre66 = Math_fround(0), $$pre67 = Math_fround(0), $$pre68 = Math_fround(0), $$pre69 = Math_fround(0), $$pre70 = Math_fround(0), $$pre71 = Math_fround(0), $$sink = 0, $100 = 0, $1000 = Math_fround(0), $1001 = Math_fround(0), $1002 = Math_fround(0), $1003 = Math_fround(0);
 var $1004 = Math_fround(0), $1005 = Math_fround(0), $1006 = Math_fround(0), $1007 = Math_fround(0), $1008 = Math_fround(0), $1009 = Math_fround(0), $101 = 0, $1010 = Math_fround(0), $1011 = Math_fround(0), $1012 = Math_fround(0), $1013 = Math_fround(0), $1014 = Math_fround(0), $1015 = Math_fround(0), $1016 = Math_fround(0), $1017 = Math_fround(0), $1018 = Math_fround(0), $1019 = Math_fround(0), $102 = Math_fround(0), $1020 = Math_fround(0), $1021 = Math_fround(0);
 var $1022 = Math_fround(0), $1023 = Math_fround(0), $1024 = Math_fround(0), $1025 = Math_fround(0), $1026 = Math_fround(0), $1027 = Math_fround(0), $1028 = Math_fround(0), $1029 = Math_fround(0), $103 = Math_fround(0), $1030 = Math_fround(0), $1031 = Math_fround(0), $1032 = Math_fround(0), $1033 = Math_fround(0), $1034 = Math_fround(0), $1035 = Math_fround(0), $1036 = Math_fround(0), $1037 = Math_fround(0), $1038 = Math_fround(0), $1039 = Math_fround(0), $104 = Math_fround(0);
 var $1040 = Math_fround(0), $1041 = Math_fround(0), $1042 = Math_fround(0), $1043 = Math_fround(0), $1044 = Math_fround(0), $1045 = Math_fround(0), $1046 = Math_fround(0), $1047 = Math_fround(0), $1048 = Math_fround(0), $1049 = Math_fround(0), $105 = 0, $1050 = Math_fround(0), $1051 = Math_fround(0), $1052 = Math_fround(0), $1053 = Math_fround(0), $1054 = Math_fround(0), $1055 = Math_fround(0), $1056 = Math_fround(0), $1057 = Math_fround(0), $1058 = Math_fround(0);
 var $1059 = Math_fround(0), $106 = 0, $1060 = Math_fround(0), $1061 = Math_fround(0), $1062 = Math_fround(0), $1063 = Math_fround(0), $1064 = Math_fround(0), $1065 = Math_fround(0), $1066 = Math_fround(0), $1067 = Math_fround(0), $1068 = Math_fround(0), $1069 = Math_fround(0), $107 = Math_fround(0), $1070 = Math_fround(0), $1071 = Math_fround(0), $1072 = Math_fround(0), $1073 = Math_fround(0), $1074 = Math_fround(0), $1075 = Math_fround(0), $1076 = Math_fround(0);
 var $1077 = Math_fround(0), $1078 = Math_fround(0), $1079 = Math_fround(0), $108 = 0, $1080 = Math_fround(0), $1081 = Math_fround(0), $1082 = Math_fround(0), $1083 = Math_fround(0), $1084 = Math_fround(0), $1085 = Math_fround(0), $1086 = Math_fround(0), $1087 = Math_fround(0), $1088 = Math_fround(0), $1089 = Math_fround(0), $109 = 0, $1090 = Math_fround(0), $1091 = Math_fround(0), $1092 = Math_fround(0), $1093 = Math_fround(0), $1094 = Math_fround(0);
 var $1095 = Math_fround(0), $1096 = Math_fround(0), $1097 = Math_fround(0), $1098 = Math_fround(0), $1099 = Math_fround(0), $110 = 0, $1100 = Math_fround(0), $1101 = Math_fround(0), $1102 = Math_fround(0), $1103 = Math_fround(0), $1104 = Math_fround(0), $1105 = Math_fround(0), $1106 = Math_fround(0), $1107 = Math_fround(0), $1108 = Math_fround(0), $1109 = Math_fround(0), $111 = 0, $1110 = Math_fround(0), $1111 = Math_fround(0), $1112 = Math_fround(0);
 var $1113 = Math_fround(0), $1114 = Math_fround(0), $1115 = Math_fround(0), $1116 = Math_fround(0), $1117 = Math_fround(0), $1118 = Math_fround(0), $1119 = Math_fround(0), $112 = 0, $1120 = Math_fround(0), $1121 = Math_fround(0), $1122 = Math_fround(0), $1123 = Math_fround(0), $1124 = Math_fround(0), $1125 = Math_fround(0), $1126 = Math_fround(0), $1127 = Math_fround(0), $1128 = Math_fround(0), $1129 = Math_fround(0), $113 = 0, $1130 = Math_fround(0);
 var $1131 = Math_fround(0), $1132 = Math_fround(0), $1133 = Math_fround(0), $1134 = Math_fround(0), $1135 = Math_fround(0), $1136 = Math_fround(0), $1137 = Math_fround(0), $1138 = Math_fround(0), $1139 = Math_fround(0), $114 = 0, $1140 = Math_fround(0), $1141 = Math_fround(0), $1142 = 0, $1143 = Math_fround(0), $1144 = Math_fround(0), $1145 = Math_fround(0), $1146 = Math_fround(0), $1147 = Math_fround(0), $1148 = Math_fround(0), $1149 = Math_fround(0);
 var $115 = 0, $1150 = Math_fround(0), $1151 = Math_fround(0), $1152 = Math_fround(0), $1153 = Math_fround(0), $1154 = Math_fround(0), $1155 = Math_fround(0), $1156 = Math_fround(0), $1157 = Math_fround(0), $1158 = Math_fround(0), $1159 = Math_fround(0), $116 = 0, $1160 = Math_fround(0), $1161 = Math_fround(0), $1162 = Math_fround(0), $1163 = Math_fround(0), $1164 = Math_fround(0), $1165 = Math_fround(0), $1166 = Math_fround(0), $1167 = Math_fround(0);
 var $1168 = Math_fround(0), $1169 = Math_fround(0), $117 = 0, $1170 = Math_fround(0), $1171 = Math_fround(0), $1172 = Math_fround(0), $1173 = Math_fround(0), $1174 = Math_fround(0), $1175 = Math_fround(0), $1176 = Math_fround(0), $1177 = Math_fround(0), $1178 = Math_fround(0), $1179 = Math_fround(0), $118 = 0, $1180 = Math_fround(0), $1181 = Math_fround(0), $1182 = Math_fround(0), $1183 = Math_fround(0), $1184 = Math_fround(0), $1185 = Math_fround(0);
 var $1186 = Math_fround(0), $1187 = Math_fround(0), $1188 = Math_fround(0), $1189 = Math_fround(0), $119 = 0, $1190 = Math_fround(0), $1191 = Math_fround(0), $1192 = Math_fround(0), $1193 = Math_fround(0), $1194 = Math_fround(0), $1195 = Math_fround(0), $1196 = Math_fround(0), $1197 = Math_fround(0), $1198 = Math_fround(0), $1199 = Math_fround(0), $12 = 0, $120 = 0, $1200 = Math_fround(0), $1201 = Math_fround(0), $1202 = Math_fround(0);
 var $1203 = Math_fround(0), $1204 = Math_fround(0), $1205 = Math_fround(0), $1206 = Math_fround(0), $1207 = Math_fround(0), $1208 = Math_fround(0), $1209 = Math_fround(0), $121 = 0, $1210 = Math_fround(0), $1211 = Math_fround(0), $1212 = Math_fround(0), $1213 = Math_fround(0), $1214 = Math_fround(0), $1215 = Math_fround(0), $1216 = Math_fround(0), $1217 = Math_fround(0), $1218 = Math_fround(0), $1219 = Math_fround(0), $122 = 0, $1220 = Math_fround(0);
 var $1221 = Math_fround(0), $1222 = Math_fround(0), $1223 = Math_fround(0), $1224 = Math_fround(0), $1225 = Math_fround(0), $1226 = Math_fround(0), $1227 = Math_fround(0), $1228 = Math_fround(0), $1229 = Math_fround(0), $123 = 0, $1230 = Math_fround(0), $1231 = Math_fround(0), $1232 = Math_fround(0), $1233 = Math_fround(0), $1234 = Math_fround(0), $1235 = Math_fround(0), $1236 = Math_fround(0), $1237 = Math_fround(0), $1238 = Math_fround(0), $1239 = Math_fround(0);
 var $124 = 0, $1240 = Math_fround(0), $1241 = Math_fround(0), $1242 = Math_fround(0), $1243 = Math_fround(0), $1244 = Math_fround(0), $1245 = Math_fround(0), $1246 = Math_fround(0), $1247 = Math_fround(0), $1248 = Math_fround(0), $1249 = Math_fround(0), $125 = 0, $1250 = Math_fround(0), $1251 = Math_fround(0), $1252 = Math_fround(0), $1253 = Math_fround(0), $1254 = Math_fround(0), $1255 = Math_fround(0), $1256 = Math_fround(0), $1257 = Math_fround(0);
 var $1258 = Math_fround(0), $1259 = Math_fround(0), $126 = 0, $1260 = Math_fround(0), $1261 = Math_fround(0), $1262 = Math_fround(0), $1263 = Math_fround(0), $1264 = Math_fround(0), $1265 = Math_fround(0), $1266 = Math_fround(0), $1267 = Math_fround(0), $1268 = Math_fround(0), $1269 = Math_fround(0), $127 = 0, $1270 = Math_fround(0), $1271 = Math_fround(0), $1272 = Math_fround(0), $1273 = Math_fround(0), $1274 = Math_fround(0), $1275 = Math_fround(0);
 var $1276 = Math_fround(0), $1277 = Math_fround(0), $1278 = Math_fround(0), $1279 = Math_fround(0), $128 = 0, $1280 = Math_fround(0), $1281 = Math_fround(0), $1282 = Math_fround(0), $1283 = Math_fround(0), $1284 = Math_fround(0), $1285 = Math_fround(0), $1286 = Math_fround(0), $1287 = Math_fround(0), $1288 = Math_fround(0), $1289 = Math_fround(0), $129 = 0, $1290 = Math_fround(0), $1291 = Math_fround(0), $1292 = Math_fround(0), $1293 = Math_fround(0);
 var $1294 = Math_fround(0), $1295 = Math_fround(0), $1296 = Math_fround(0), $1297 = Math_fround(0), $1298 = Math_fround(0), $1299 = Math_fround(0), $13 = 0, $130 = 0, $1300 = Math_fround(0), $1301 = Math_fround(0), $1302 = Math_fround(0), $1303 = Math_fround(0), $1304 = Math_fround(0), $1305 = Math_fround(0), $1306 = Math_fround(0), $1307 = Math_fround(0), $1308 = Math_fround(0), $1309 = Math_fround(0), $131 = 0, $1310 = Math_fround(0);
 var $1311 = Math_fround(0), $1312 = Math_fround(0), $1313 = Math_fround(0), $1314 = Math_fround(0), $1315 = Math_fround(0), $1316 = Math_fround(0), $1317 = Math_fround(0), $1318 = Math_fround(0), $1319 = Math_fround(0), $132 = 0, $1320 = Math_fround(0), $1321 = Math_fround(0), $1322 = Math_fround(0), $1323 = Math_fround(0), $1324 = Math_fround(0), $1325 = Math_fround(0), $1326 = Math_fround(0), $1327 = Math_fround(0), $1328 = Math_fround(0), $1329 = Math_fround(0);
 var $133 = 0, $1330 = Math_fround(0), $1331 = Math_fround(0), $1332 = Math_fround(0), $1333 = Math_fround(0), $1334 = Math_fround(0), $1335 = Math_fround(0), $1336 = Math_fround(0), $1337 = Math_fround(0), $1338 = Math_fround(0), $1339 = Math_fround(0), $134 = 0, $1340 = Math_fround(0), $1341 = Math_fround(0), $1342 = Math_fround(0), $1343 = Math_fround(0), $1344 = Math_fround(0), $1345 = Math_fround(0), $1346 = Math_fround(0), $1347 = Math_fround(0);
 var $1348 = Math_fround(0), $1349 = Math_fround(0), $135 = 0, $1350 = Math_fround(0), $1351 = Math_fround(0), $1352 = Math_fround(0), $1353 = Math_fround(0), $1354 = Math_fround(0), $1355 = Math_fround(0), $1356 = Math_fround(0), $1357 = Math_fround(0), $1358 = Math_fround(0), $1359 = Math_fround(0), $136 = 0, $1360 = Math_fround(0), $1361 = Math_fround(0), $1362 = Math_fround(0), $1363 = Math_fround(0), $1364 = Math_fround(0), $1365 = Math_fround(0);
 var $1366 = Math_fround(0), $1367 = Math_fround(0), $1368 = Math_fround(0), $1369 = Math_fround(0), $137 = 0, $1370 = Math_fround(0), $1371 = Math_fround(0), $1372 = Math_fround(0), $1373 = Math_fround(0), $1374 = Math_fround(0), $1375 = Math_fround(0), $1376 = Math_fround(0), $1377 = Math_fround(0), $1378 = Math_fround(0), $1379 = Math_fround(0), $138 = 0, $1380 = Math_fround(0), $1381 = Math_fround(0), $1382 = Math_fround(0), $1383 = Math_fround(0);
 var $1384 = Math_fround(0), $1385 = Math_fround(0), $1386 = Math_fround(0), $1387 = Math_fround(0), $1388 = Math_fround(0), $1389 = Math_fround(0), $139 = 0, $1390 = Math_fround(0), $1391 = Math_fround(0), $1392 = Math_fround(0), $1393 = Math_fround(0), $1394 = Math_fround(0), $1395 = Math_fround(0), $1396 = Math_fround(0), $1397 = Math_fround(0), $1398 = Math_fround(0), $1399 = Math_fround(0), $14 = 0, $140 = 0, $1400 = Math_fround(0);
 var $1401 = Math_fround(0), $1402 = Math_fround(0), $1403 = Math_fround(0), $1404 = Math_fround(0), $1405 = Math_fround(0), $1406 = Math_fround(0), $1407 = Math_fround(0), $1408 = Math_fround(0), $1409 = Math_fround(0), $141 = 0, $1410 = Math_fround(0), $1411 = Math_fround(0), $1412 = Math_fround(0), $1413 = Math_fround(0), $1414 = Math_fround(0), $1415 = Math_fround(0), $1416 = Math_fround(0), $1417 = Math_fround(0), $1418 = Math_fround(0), $1419 = Math_fround(0);
 var $142 = 0, $1420 = Math_fround(0), $1421 = Math_fround(0), $1422 = Math_fround(0), $1423 = Math_fround(0), $1424 = Math_fround(0), $1425 = Math_fround(0), $1426 = Math_fround(0), $1427 = Math_fround(0), $1428 = Math_fround(0), $1429 = Math_fround(0), $143 = 0, $1430 = Math_fround(0), $1431 = Math_fround(0), $1432 = Math_fround(0), $1433 = Math_fround(0), $1434 = Math_fround(0), $1435 = Math_fround(0), $1436 = Math_fround(0), $1437 = Math_fround(0);
 var $1438 = Math_fround(0), $1439 = Math_fround(0), $144 = 0, $1440 = Math_fround(0), $1441 = Math_fround(0), $1442 = Math_fround(0), $1443 = Math_fround(0), $1444 = 0, $1445 = Math_fround(0), $1446 = Math_fround(0), $1447 = Math_fround(0), $1448 = Math_fround(0), $1449 = Math_fround(0), $145 = 0, $1450 = Math_fround(0), $1451 = Math_fround(0), $1452 = 0, $1453 = Math_fround(0), $1454 = 0, $1455 = 0;
 var $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = Math_fround(0), $1463 = Math_fround(0), $1464 = Math_fround(0), $1465 = Math_fround(0), $1466 = Math_fround(0), $1467 = Math_fround(0), $1468 = Math_fround(0), $1469 = Math_fround(0), $147 = 0, $1470 = Math_fround(0), $1471 = Math_fround(0), $1472 = Math_fround(0), $1473 = Math_fround(0);
 var $1474 = Math_fround(0), $1475 = Math_fround(0), $1476 = Math_fround(0), $1477 = Math_fround(0), $1478 = Math_fround(0), $1479 = Math_fround(0), $148 = 0, $1480 = Math_fround(0), $1481 = Math_fround(0), $1482 = Math_fround(0), $1483 = Math_fround(0), $1484 = Math_fround(0), $1485 = Math_fround(0), $1486 = Math_fround(0), $1487 = Math_fround(0), $1488 = Math_fround(0), $1489 = Math_fround(0), $149 = 0, $1490 = Math_fround(0), $1491 = Math_fround(0);
 var $1492 = Math_fround(0), $1493 = Math_fround(0), $1494 = Math_fround(0), $1495 = Math_fround(0), $1496 = Math_fround(0), $1497 = Math_fround(0), $1498 = Math_fround(0), $1499 = Math_fround(0), $15 = 0, $150 = 0, $1500 = Math_fround(0), $1501 = Math_fround(0), $1502 = Math_fround(0), $1503 = Math_fround(0), $1504 = Math_fround(0), $1505 = Math_fround(0), $1506 = Math_fround(0), $1507 = Math_fround(0), $1508 = Math_fround(0), $1509 = Math_fround(0);
 var $151 = 0, $1510 = Math_fround(0), $1511 = Math_fround(0), $1512 = Math_fround(0), $1513 = Math_fround(0), $1514 = Math_fround(0), $1515 = Math_fround(0), $1516 = Math_fround(0), $1517 = Math_fround(0), $1518 = Math_fround(0), $1519 = Math_fround(0), $152 = 0, $1520 = Math_fround(0), $1521 = Math_fround(0), $1522 = Math_fround(0), $1523 = Math_fround(0), $1524 = Math_fround(0), $1525 = Math_fround(0), $1526 = Math_fround(0), $1527 = Math_fround(0);
 var $1528 = Math_fround(0), $1529 = Math_fround(0), $153 = 0, $1530 = Math_fround(0), $1531 = Math_fround(0), $1532 = Math_fround(0), $1533 = Math_fround(0), $1534 = Math_fround(0), $1535 = Math_fround(0), $1536 = Math_fround(0), $1537 = Math_fround(0), $1538 = Math_fround(0), $1539 = Math_fround(0), $154 = 0, $1540 = Math_fround(0), $1541 = Math_fround(0), $1542 = Math_fround(0), $1543 = Math_fround(0), $1544 = Math_fround(0), $1545 = Math_fround(0);
 var $1546 = Math_fround(0), $1547 = Math_fround(0), $1548 = Math_fround(0), $1549 = Math_fround(0), $155 = 0, $1550 = Math_fround(0), $1551 = Math_fround(0), $1552 = Math_fround(0), $1553 = Math_fround(0), $1554 = Math_fround(0), $1555 = Math_fround(0), $1556 = Math_fround(0), $1557 = Math_fround(0), $1558 = Math_fround(0), $1559 = Math_fround(0), $156 = 0, $1560 = Math_fround(0), $1561 = Math_fround(0), $1562 = Math_fround(0), $1563 = Math_fround(0);
 var $1564 = Math_fround(0), $1565 = Math_fround(0), $1566 = Math_fround(0), $1567 = Math_fround(0), $1568 = Math_fround(0), $1569 = Math_fround(0), $157 = 0, $1570 = Math_fround(0), $1571 = 0, $1572 = Math_fround(0), $1573 = Math_fround(0), $1574 = Math_fround(0), $1575 = Math_fround(0), $1576 = Math_fround(0), $1577 = Math_fround(0), $1578 = Math_fround(0), $1579 = Math_fround(0), $158 = 0, $1580 = Math_fround(0), $1581 = Math_fround(0);
 var $1582 = Math_fround(0), $1583 = Math_fround(0), $1584 = Math_fround(0), $1585 = Math_fround(0), $1586 = Math_fround(0), $1587 = Math_fround(0), $1588 = Math_fround(0), $1589 = Math_fround(0), $159 = 0, $1590 = Math_fround(0), $1591 = Math_fround(0), $1592 = Math_fround(0), $1593 = Math_fround(0), $1594 = Math_fround(0), $1595 = Math_fround(0), $1596 = Math_fround(0), $1597 = Math_fround(0), $1598 = Math_fround(0), $1599 = Math_fround(0), $16 = 0;
 var $160 = 0, $1600 = Math_fround(0), $1601 = Math_fround(0), $1602 = Math_fround(0), $1603 = Math_fround(0), $1604 = Math_fround(0), $1605 = Math_fround(0), $1606 = Math_fround(0), $1607 = Math_fround(0), $1608 = Math_fround(0), $1609 = Math_fround(0), $161 = 0, $1610 = Math_fround(0), $1611 = Math_fround(0), $1612 = Math_fround(0), $1613 = Math_fround(0), $1614 = Math_fround(0), $1615 = Math_fround(0), $1616 = Math_fround(0), $1617 = Math_fround(0);
 var $1618 = Math_fround(0), $1619 = Math_fround(0), $162 = 0, $1620 = Math_fround(0), $1621 = Math_fround(0), $1622 = Math_fround(0), $1623 = Math_fround(0), $1624 = Math_fround(0), $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0;
 var $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = Math_fround(0), $1642 = Math_fround(0), $1643 = Math_fround(0), $1644 = Math_fround(0), $1645 = Math_fround(0), $1646 = Math_fround(0), $1647 = Math_fround(0), $1648 = Math_fround(0), $1649 = Math_fround(0), $165 = 0, $1650 = Math_fround(0), $1651 = Math_fround(0), $1652 = Math_fround(0), $1653 = Math_fround(0);
 var $1654 = Math_fround(0), $1655 = Math_fround(0), $1656 = Math_fround(0), $1657 = Math_fround(0), $1658 = Math_fround(0), $1659 = Math_fround(0), $166 = 0, $1660 = Math_fround(0), $1661 = Math_fround(0), $1662 = Math_fround(0), $1663 = Math_fround(0), $1664 = Math_fround(0), $1665 = Math_fround(0), $1666 = Math_fround(0), $1667 = Math_fround(0), $1668 = Math_fround(0), $1669 = Math_fround(0), $167 = 0, $1670 = Math_fround(0), $1671 = Math_fround(0);
 var $1672 = Math_fround(0), $1673 = Math_fround(0), $1674 = Math_fround(0), $1675 = Math_fround(0), $1676 = Math_fround(0), $1677 = Math_fround(0), $1678 = Math_fround(0), $1679 = Math_fround(0), $168 = 0, $1680 = Math_fround(0), $1681 = 0, $1682 = Math_fround(0), $1683 = Math_fround(0), $1684 = Math_fround(0), $1685 = Math_fround(0), $1686 = Math_fround(0), $1687 = 0, $1688 = Math_fround(0), $1689 = 0, $169 = 0;
 var $1690 = Math_fround(0), $1691 = Math_fround(0), $1692 = 0, $1693 = Math_fround(0), $1694 = 0, $1695 = Math_fround(0), $1696 = Math_fround(0), $1697 = Math_fround(0), $1698 = Math_fround(0), $1699 = Math_fround(0), $17 = 0, $170 = 0, $1700 = Math_fround(0), $1701 = Math_fround(0), $1702 = Math_fround(0), $1703 = Math_fround(0), $1704 = Math_fround(0), $1705 = Math_fround(0), $1706 = Math_fround(0), $1707 = Math_fround(0);
 var $1708 = Math_fround(0), $1709 = Math_fround(0), $171 = 0, $1710 = Math_fround(0), $1711 = Math_fround(0), $1712 = Math_fround(0), $1713 = Math_fround(0), $1714 = Math_fround(0), $1715 = 0.0, $1716 = 0.0, $1717 = 0.0, $1718 = Math_fround(0), $1719 = Math_fround(0), $172 = 0, $1720 = 0.0, $1721 = 0.0, $1722 = Math_fround(0), $1723 = Math_fround(0), $1724 = Math_fround(0), $1725 = Math_fround(0);
 var $1726 = 0, $1727 = Math_fround(0), $1728 = Math_fround(0), $1729 = Math_fround(0), $173 = 0, $1730 = Math_fround(0), $1731 = 0, $1732 = Math_fround(0), $1733 = 0, $1734 = Math_fround(0), $1735 = 0, $1736 = Math_fround(0), $1737 = 0, $1738 = Math_fround(0), $1739 = Math_fround(0), $174 = 0, $1740 = Math_fround(0), $1741 = Math_fround(0), $1742 = Math_fround(0), $1743 = Math_fround(0);
 var $1744 = Math_fround(0), $1745 = Math_fround(0), $1746 = Math_fround(0), $1747 = Math_fround(0), $1748 = Math_fround(0), $1749 = Math_fround(0), $175 = 0, $1750 = Math_fround(0), $1751 = Math_fround(0), $1752 = Math_fround(0), $1753 = Math_fround(0), $1754 = Math_fround(0), $1755 = Math_fround(0), $1756 = 0.0, $1757 = 0.0, $1758 = 0.0, $1759 = Math_fround(0), $176 = 0, $1760 = Math_fround(0), $1761 = 0.0;
 var $1762 = 0.0, $1763 = Math_fround(0), $1764 = Math_fround(0), $1765 = Math_fround(0), $1766 = Math_fround(0), $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = Math_fround(0), $1773 = Math_fround(0), $1774 = Math_fround(0), $1775 = Math_fround(0), $1776 = Math_fround(0), $1777 = Math_fround(0), $1778 = Math_fround(0), $1779 = Math_fround(0), $178 = 0;
 var $1780 = Math_fround(0), $1781 = Math_fround(0), $1782 = Math_fround(0), $1783 = 0, $1784 = 0, $1785 = Math_fround(0), $1786 = Math_fround(0), $1787 = 0, $1788 = 0, $1789 = Math_fround(0), $179 = 0, $1790 = Math_fround(0), $1791 = 0, $1792 = Math_fround(0), $1793 = Math_fround(0), $1794 = Math_fround(0), $1795 = Math_fround(0), $1796 = 0, $1797 = Math_fround(0), $1798 = 0;
 var $1799 = Math_fround(0), $18 = 0, $180 = 0, $1800 = Math_fround(0), $1801 = Math_fround(0), $1802 = 0, $1803 = Math_fround(0), $1804 = 0, $1805 = Math_fround(0), $1806 = Math_fround(0), $1807 = 0, $1808 = Math_fround(0), $1809 = Math_fround(0), $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0.0, $1813 = 0, $1814 = 0, $1815 = 0;
 var $1816 = Math_fround(0), $1817 = Math_fround(0), $1818 = 0, $1819 = Math_fround(0), $182 = 0, $1820 = Math_fround(0), $1821 = 0, $1822 = Math_fround(0), $1823 = Math_fround(0), $1824 = Math_fround(0), $1825 = 0, $1826 = 0, $1827 = 0, $1828 = Math_fround(0), $1829 = Math_fround(0), $183 = 0, $1830 = 0, $1831 = Math_fround(0), $1832 = Math_fround(0), $1833 = 0;
 var $1834 = Math_fround(0), $1835 = Math_fround(0), $1836 = Math_fround(0), $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = Math_fround(0), $215 = Math_fround(0), $216 = 0, $217 = Math_fround(0), $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = Math_fround(0), $237 = Math_fround(0), $238 = Math_fround(0), $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = Math_fround(0);
 var $246 = 0, $247 = Math_fround(0), $248 = Math_fround(0), $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = Math_fround(0), $253 = Math_fround(0), $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = Math_fround(0), $259 = Math_fround(0), $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = Math_fround(0);
 var $264 = Math_fround(0), $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = Math_fround(0), $272 = 0, $273 = 0, $274 = Math_fround(0), $275 = 0, $276 = 0, $277 = Math_fround(0), $278 = 0, $279 = 0, $28 = 0, $280 = Math_fround(0), $281 = Math_fround(0);
 var $282 = 0, $283 = Math_fround(0), $284 = 0, $285 = Math_fround(0), $286 = Math_fround(0), $287 = Math_fround(0), $288 = Math_fround(0), $289 = Math_fround(0), $29 = 0, $290 = Math_fround(0), $291 = Math_fround(0), $292 = 0, $293 = 0, $294 = Math_fround(0), $295 = Math_fround(0), $296 = Math_fround(0), $297 = Math_fround(0), $298 = Math_fround(0), $299 = Math_fround(0), $30 = 0;
 var $300 = Math_fround(0), $301 = Math_fround(0), $302 = Math_fround(0), $303 = Math_fround(0), $304 = Math_fround(0), $305 = 0, $306 = Math_fround(0), $307 = Math_fround(0), $308 = Math_fround(0), $309 = Math_fround(0), $31 = 0, $310 = Math_fround(0), $311 = Math_fround(0), $312 = Math_fround(0), $313 = Math_fround(0), $314 = Math_fround(0), $315 = Math_fround(0), $316 = Math_fround(0), $317 = Math_fround(0), $318 = 0;
 var $319 = Math_fround(0), $32 = 0, $320 = Math_fround(0), $321 = 0, $322 = Math_fround(0), $323 = Math_fround(0), $324 = Math_fround(0), $325 = 0, $326 = Math_fround(0), $327 = Math_fround(0), $328 = 0, $329 = Math_fround(0), $33 = 0, $330 = Math_fround(0), $331 = Math_fround(0), $332 = Math_fround(0), $333 = Math_fround(0), $334 = 0, $335 = 0, $336 = Math_fround(0);
 var $337 = Math_fround(0), $338 = Math_fround(0), $339 = Math_fround(0), $34 = 0, $340 = Math_fround(0), $341 = Math_fround(0), $342 = Math_fround(0), $343 = Math_fround(0), $344 = Math_fround(0), $345 = Math_fround(0), $346 = Math_fround(0), $347 = 0, $348 = Math_fround(0), $349 = Math_fround(0), $35 = 0, $350 = Math_fround(0), $351 = Math_fround(0), $352 = Math_fround(0), $353 = Math_fround(0), $354 = Math_fround(0);
 var $355 = Math_fround(0), $356 = Math_fround(0), $357 = Math_fround(0), $358 = Math_fround(0), $359 = Math_fround(0), $36 = 0, $360 = 0, $361 = Math_fround(0), $362 = Math_fround(0), $363 = 0, $364 = Math_fround(0), $365 = Math_fround(0), $366 = Math_fround(0), $367 = Math_fround(0), $368 = Math_fround(0), $369 = 0, $37 = 0, $370 = Math_fround(0), $371 = Math_fround(0), $372 = Math_fround(0);
 var $373 = 0, $374 = Math_fround(0), $375 = Math_fround(0), $376 = 0, $377 = Math_fround(0), $378 = Math_fround(0), $379 = Math_fround(0), $38 = 0, $380 = Math_fround(0), $381 = Math_fround(0), $382 = Math_fround(0), $383 = 0, $384 = Math_fround(0), $385 = Math_fround(0), $386 = Math_fround(0), $387 = Math_fround(0), $388 = Math_fround(0), $389 = Math_fround(0), $39 = 0, $390 = Math_fround(0);
 var $391 = Math_fround(0), $392 = Math_fround(0), $393 = 0, $394 = Math_fround(0), $395 = Math_fround(0), $396 = Math_fround(0), $397 = Math_fround(0), $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = Math_fround(0), $403 = 0, $404 = 0, $405 = Math_fround(0), $406 = 0, $407 = 0, $408 = Math_fround(0), $409 = Math_fround(0);
 var $41 = 0, $410 = 0, $411 = Math_fround(0), $412 = Math_fround(0), $413 = 0, $414 = Math_fround(0), $415 = 0, $416 = 0, $417 = 0, $418 = Math_fround(0), $419 = Math_fround(0), $42 = 0, $420 = Math_fround(0), $421 = Math_fround(0), $422 = Math_fround(0), $423 = Math_fround(0), $424 = Math_fround(0), $425 = Math_fround(0), $426 = Math_fround(0), $427 = Math_fround(0);
 var $428 = Math_fround(0), $429 = Math_fround(0), $43 = 0, $430 = Math_fround(0), $431 = Math_fround(0), $432 = Math_fround(0), $433 = Math_fround(0), $434 = Math_fround(0), $435 = Math_fround(0), $436 = Math_fround(0), $437 = Math_fround(0), $438 = Math_fround(0), $439 = Math_fround(0), $44 = 0, $440 = Math_fround(0), $441 = Math_fround(0), $442 = Math_fround(0), $443 = Math_fround(0), $444 = Math_fround(0), $445 = Math_fround(0);
 var $446 = Math_fround(0), $447 = Math_fround(0), $448 = Math_fround(0), $449 = Math_fround(0), $45 = 0, $450 = Math_fround(0), $451 = Math_fround(0), $452 = Math_fround(0), $453 = Math_fround(0), $454 = Math_fround(0), $455 = Math_fround(0), $456 = Math_fround(0), $457 = Math_fround(0), $458 = Math_fround(0), $459 = Math_fround(0), $46 = 0, $460 = Math_fround(0), $461 = 0.0, $462 = 0.0, $463 = Math_fround(0);
 var $464 = Math_fround(0), $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = Math_fround(0), $472 = Math_fround(0), $473 = 0, $474 = 0, $475 = Math_fround(0), $476 = Math_fround(0), $477 = Math_fround(0), $478 = 0, $479 = Math_fround(0), $48 = 0, $480 = Math_fround(0), $481 = Math_fround(0);
 var $482 = 0, $483 = Math_fround(0), $484 = Math_fround(0), $485 = Math_fround(0), $486 = Math_fround(0), $487 = 0, $488 = Math_fround(0), $489 = 0, $49 = 0, $490 = Math_fround(0), $491 = Math_fround(0), $492 = Math_fround(0), $493 = Math_fround(0), $494 = 0, $495 = Math_fround(0), $496 = Math_fround(0), $497 = Math_fround(0), $498 = Math_fround(0), $499 = 0, $50 = 0;
 var $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = Math_fround(0), $505 = Math_fround(0), $506 = Math_fround(0), $507 = Math_fround(0), $508 = 0.0, $509 = Math_fround(0), $51 = 0, $510 = Math_fround(0), $511 = 0.0, $512 = Math_fround(0), $513 = 0, $514 = Math_fround(0), $515 = 0, $516 = 0, $517 = 0, $518 = 0;
 var $519 = 0.0, $52 = 0, $520 = Math_fround(0), $521 = 0.0, $522 = Math_fround(0), $523 = 0.0, $524 = 0, $525 = Math_fround(0), $526 = Math_fround(0), $527 = 0, $528 = Math_fround(0), $529 = Math_fround(0), $53 = 0, $530 = 0, $531 = Math_fround(0), $532 = Math_fround(0), $533 = Math_fround(0), $534 = 0, $535 = Math_fround(0), $536 = 0;
 var $537 = Math_fround(0), $538 = 0, $539 = Math_fround(0), $54 = 0, $540 = Math_fround(0), $541 = Math_fround(0), $542 = Math_fround(0), $543 = Math_fround(0), $544 = Math_fround(0), $545 = 0, $546 = Math_fround(0), $547 = Math_fround(0), $548 = Math_fround(0), $549 = Math_fround(0), $55 = 0, $550 = 0, $551 = Math_fround(0), $552 = Math_fround(0), $553 = Math_fround(0), $554 = Math_fround(0);
 var $555 = 0, $556 = Math_fround(0), $557 = Math_fround(0), $558 = Math_fround(0), $559 = Math_fround(0), $56 = 0, $560 = 0, $561 = Math_fround(0), $562 = Math_fround(0), $563 = Math_fround(0), $564 = Math_fround(0), $565 = 0, $566 = Math_fround(0), $567 = Math_fround(0), $568 = Math_fround(0), $569 = Math_fround(0), $57 = 0, $570 = 0, $571 = Math_fround(0), $572 = Math_fround(0);
 var $573 = Math_fround(0), $574 = Math_fround(0), $575 = 0, $576 = Math_fround(0), $577 = Math_fround(0), $578 = Math_fround(0), $579 = Math_fround(0), $58 = 0, $580 = 0, $581 = Math_fround(0), $582 = Math_fround(0), $583 = Math_fround(0), $584 = Math_fround(0), $585 = Math_fround(0), $586 = Math_fround(0), $587 = 0.0, $588 = 0.0, $589 = 0.0, $59 = 0, $590 = Math_fround(0);
 var $591 = Math_fround(0), $592 = 0, $593 = Math_fround(0), $594 = Math_fround(0), $595 = Math_fround(0), $596 = Math_fround(0), $597 = Math_fround(0), $598 = 0, $599 = Math_fround(0), $60 = 0, $600 = Math_fround(0), $601 = 0, $602 = 0, $603 = Math_fround(0), $604 = 0, $605 = 0, $606 = 0, $607 = Math_fround(0), $608 = Math_fround(0), $609 = 0;
 var $61 = 0, $610 = Math_fround(0), $611 = Math_fround(0), $612 = Math_fround(0), $613 = Math_fround(0), $614 = 0, $615 = 0, $616 = Math_fround(0), $617 = Math_fround(0), $618 = Math_fround(0), $619 = 0, $62 = 0, $620 = Math_fround(0), $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = Math_fround(0), $626 = Math_fround(0), $627 = Math_fround(0);
 var $628 = Math_fround(0), $629 = Math_fround(0), $63 = 0, $630 = 0, $631 = Math_fround(0), $632 = 0, $633 = 0, $634 = Math_fround(0), $635 = Math_fround(0), $636 = Math_fround(0), $637 = 0, $638 = Math_fround(0), $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = Math_fround(0);
 var $646 = Math_fround(0), $647 = Math_fround(0), $648 = Math_fround(0), $649 = Math_fround(0), $65 = 0, $650 = 0, $651 = Math_fround(0), $652 = 0, $653 = Math_fround(0), $654 = Math_fround(0), $655 = 0, $656 = Math_fround(0), $657 = 0, $658 = Math_fround(0), $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = Math_fround(0), $663 = Math_fround(0);
 var $664 = Math_fround(0), $665 = 0, $666 = Math_fround(0), $667 = 0, $668 = Math_fround(0), $669 = Math_fround(0), $67 = 0, $670 = Math_fround(0), $671 = 0, $672 = Math_fround(0), $673 = Math_fround(0), $674 = Math_fround(0), $675 = 0.0, $676 = 0.0, $677 = 0.0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = Math_fround(0), $685 = 0, $686 = Math_fround(0), $687 = 0, $688 = Math_fround(0), $689 = 0, $69 = 0, $690 = Math_fround(0), $691 = 0, $692 = Math_fround(0), $693 = 0, $694 = Math_fround(0), $695 = 0, $696 = Math_fround(0), $697 = 0, $698 = Math_fround(0), $699 = 0, $70 = 0;
 var $700 = Math_fround(0), $701 = 0, $702 = Math_fround(0), $703 = Math_fround(0), $704 = Math_fround(0), $705 = Math_fround(0), $706 = 0, $707 = Math_fround(0), $708 = Math_fround(0), $709 = Math_fround(0), $71 = 0, $710 = Math_fround(0), $711 = 0, $712 = Math_fround(0), $713 = Math_fround(0), $714 = Math_fround(0), $715 = Math_fround(0), $716 = 0, $717 = Math_fround(0), $718 = Math_fround(0);
 var $719 = Math_fround(0), $72 = 0, $720 = Math_fround(0), $721 = 0, $722 = Math_fround(0), $723 = Math_fround(0), $724 = Math_fround(0), $725 = Math_fround(0), $726 = 0, $727 = Math_fround(0), $728 = Math_fround(0), $729 = Math_fround(0), $73 = 0, $730 = Math_fround(0), $731 = 0, $732 = Math_fround(0), $733 = Math_fround(0), $734 = Math_fround(0), $735 = Math_fround(0), $736 = 0;
 var $737 = Math_fround(0), $738 = Math_fround(0), $739 = Math_fround(0), $74 = 0, $740 = Math_fround(0), $741 = 0, $742 = Math_fround(0), $743 = Math_fround(0), $744 = Math_fround(0), $745 = Math_fround(0), $746 = 0, $747 = Math_fround(0), $748 = Math_fround(0), $749 = Math_fround(0), $75 = 0, $750 = Math_fround(0), $751 = 0, $752 = Math_fround(0), $753 = Math_fround(0), $754 = Math_fround(0);
 var $755 = Math_fround(0), $756 = 0, $757 = Math_fround(0), $758 = Math_fround(0), $759 = Math_fround(0), $76 = 0, $760 = Math_fround(0), $761 = 0, $762 = Math_fround(0), $763 = Math_fround(0), $764 = Math_fround(0), $765 = Math_fround(0), $766 = 0, $767 = Math_fround(0), $768 = Math_fround(0), $769 = Math_fround(0), $77 = 0, $770 = Math_fround(0), $771 = 0, $772 = Math_fround(0);
 var $773 = Math_fround(0), $774 = Math_fround(0), $775 = Math_fround(0), $776 = 0, $777 = Math_fround(0), $778 = Math_fround(0), $779 = Math_fround(0), $78 = 0, $780 = Math_fround(0), $781 = 0, $782 = Math_fround(0), $783 = Math_fround(0), $784 = Math_fround(0), $785 = Math_fround(0), $786 = 0, $787 = Math_fround(0), $788 = Math_fround(0), $789 = Math_fround(0), $79 = 0, $790 = Math_fround(0);
 var $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = Math_fround(0), $796 = 0, $797 = Math_fround(0), $798 = Math_fround(0), $799 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = Math_fround(0), $806 = Math_fround(0), $807 = 0, $808 = 0, $809 = Math_fround(0);
 var $81 = 0, $810 = Math_fround(0), $811 = Math_fround(0), $812 = 0, $813 = Math_fround(0), $814 = Math_fround(0), $815 = Math_fround(0), $816 = 0, $817 = Math_fround(0), $818 = Math_fround(0), $819 = Math_fround(0), $82 = 0, $820 = Math_fround(0), $821 = 0, $822 = 0, $823 = Math_fround(0), $824 = 0, $825 = Math_fround(0), $826 = Math_fround(0), $827 = 0;
 var $828 = 0, $829 = Math_fround(0), $83 = 0, $830 = Math_fround(0), $831 = 0, $832 = Math_fround(0), $833 = 0.0, $834 = 0.0, $835 = 0.0, $836 = 0, $837 = Math_fround(0), $838 = 0, $839 = 0, $84 = 0, $840 = Math_fround(0), $841 = Math_fround(0), $842 = 0, $843 = Math_fround(0), $844 = Math_fround(0), $845 = 0;
 var $846 = 0, $847 = Math_fround(0), $848 = 0, $849 = 0, $85 = 0, $850 = Math_fround(0), $851 = 0, $852 = Math_fround(0), $853 = Math_fround(0), $854 = Math_fround(0), $855 = 0, $856 = 0, $857 = Math_fround(0), $858 = Math_fround(0), $859 = 0, $86 = 0, $860 = Math_fround(0), $861 = Math_fround(0), $862 = 0, $863 = Math_fround(0);
 var $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0.0, $869 = 0.0, $87 = 0, $870 = Math_fround(0), $871 = Math_fround(0), $872 = Math_fround(0), $873 = Math_fround(0), $874 = 0, $875 = Math_fround(0), $876 = Math_fround(0), $877 = Math_fround(0), $878 = Math_fround(0), $879 = Math_fround(0), $88 = 0, $880 = 0, $881 = Math_fround(0);
 var $882 = Math_fround(0), $883 = Math_fround(0), $884 = Math_fround(0), $885 = Math_fround(0), $886 = Math_fround(0), $887 = Math_fround(0), $888 = Math_fround(0), $889 = Math_fround(0), $89 = 0, $890 = Math_fround(0), $891 = Math_fround(0), $892 = Math_fround(0), $893 = Math_fround(0), $894 = Math_fround(0), $895 = Math_fround(0), $896 = Math_fround(0), $897 = Math_fround(0), $898 = Math_fround(0), $899 = Math_fround(0), $90 = 0;
 var $900 = Math_fround(0), $901 = Math_fround(0), $902 = Math_fround(0), $903 = Math_fround(0), $904 = Math_fround(0), $905 = Math_fround(0), $906 = Math_fround(0), $907 = Math_fround(0), $908 = Math_fround(0), $909 = Math_fround(0), $91 = 0, $910 = Math_fround(0), $911 = Math_fround(0), $912 = Math_fround(0), $913 = Math_fround(0), $914 = Math_fround(0), $915 = Math_fround(0), $916 = Math_fround(0), $917 = Math_fround(0), $918 = Math_fround(0);
 var $919 = Math_fround(0), $92 = 0, $920 = Math_fround(0), $921 = Math_fround(0), $922 = Math_fround(0), $923 = Math_fround(0), $924 = Math_fround(0), $925 = Math_fround(0), $926 = Math_fround(0), $927 = Math_fround(0), $928 = Math_fround(0), $929 = Math_fround(0), $93 = 0, $930 = Math_fround(0), $931 = Math_fround(0), $932 = Math_fround(0), $933 = Math_fround(0), $934 = Math_fround(0), $935 = Math_fround(0), $936 = Math_fround(0);
 var $937 = Math_fround(0), $938 = Math_fround(0), $939 = Math_fround(0), $94 = 0, $940 = Math_fround(0), $941 = Math_fround(0), $942 = Math_fround(0), $943 = Math_fround(0), $944 = Math_fround(0), $945 = Math_fround(0), $946 = Math_fround(0), $947 = Math_fround(0), $948 = Math_fround(0), $949 = Math_fround(0), $95 = 0, $950 = Math_fround(0), $951 = Math_fround(0), $952 = Math_fround(0), $953 = Math_fround(0), $954 = Math_fround(0);
 var $955 = Math_fround(0), $956 = Math_fround(0), $957 = Math_fround(0), $958 = Math_fround(0), $959 = Math_fround(0), $96 = 0, $960 = Math_fround(0), $961 = Math_fround(0), $962 = Math_fround(0), $963 = Math_fround(0), $964 = Math_fround(0), $965 = Math_fround(0), $966 = Math_fround(0), $967 = Math_fround(0), $968 = Math_fround(0), $969 = Math_fround(0), $97 = 0, $970 = Math_fround(0), $971 = Math_fround(0), $972 = Math_fround(0);
 var $973 = Math_fround(0), $974 = Math_fround(0), $975 = Math_fround(0), $976 = Math_fround(0), $977 = Math_fround(0), $978 = Math_fround(0), $979 = Math_fround(0), $98 = 0, $980 = Math_fround(0), $981 = Math_fround(0), $982 = Math_fround(0), $983 = Math_fround(0), $984 = Math_fround(0), $985 = Math_fround(0), $986 = Math_fround(0), $987 = Math_fround(0), $988 = Math_fround(0), $989 = Math_fround(0), $99 = 0, $990 = Math_fround(0);
 var $991 = Math_fround(0), $992 = Math_fround(0), $993 = Math_fround(0), $994 = Math_fround(0), $995 = Math_fround(0), $996 = Math_fround(0), $997 = Math_fround(0), $998 = Math_fround(0), $999 = Math_fround(0), $brmerge$i = 0, $brmerge1073$i = 0, $exitcond = 0, $exitcond$i = 0, $exitcond1169$i = 0, $exitcond1170$i = 0, $exitcond1188$i = 0, $exitcond1189$i = 0, $exitcond1191$i = 0, $exitcond1192$i = 0, $exitcond1193$i = 0;
 var $exitcond1194$i = 0, $exitcond1199$i = 0, $exitcond1200$i = 0, $exitcond1201$i = 0, $or$cond$i = 0, $or$cond1051$i = 0, $or$cond1054$i = 0, $or$cond1056$i = 0, $spec$select1041$i = 0, $spec$select1041$v$i = 0, $spec$select1049$i = 0, $spec$select1057$i = 0, $spec$select1058$i = 0, $spec$select1061$i = 0, $spec$select1062$i = 0, $spec$store$select$i = Math_fround(0), $storemerge1037$i = Math_fround(0), $switch$split2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 11136|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(11136|0);
 $12 = sp + 11056|0;
 $13 = sp + 10976|0;
 $14 = sp + 10944|0;
 $15 = sp + 10832|0;
 $16 = sp + 11128|0;
 $17 = sp + 9872|0;
 $18 = sp + 9840|0;
 $19 = sp + 9760|0;
 $20 = sp + 9680|0;
 $21 = sp + 9600|0;
 $22 = sp + 5760|0;
 $23 = sp + 1920|0;
 $24 = sp + 960|0;
 $25 = sp;
 $26 = $3 & -2;
 $27 = ($2|0)==(0|0);
 if ($27) {
  HEAP32[$11>>2] = 0;
  _tonality_get_info($0,$11,$4);
  STACKTOP = sp;return;
 }
 $28 = ($8*95)|0;
 $29 = (($28|0) / 50)&-1;
 $30 = ($29|0)<($26|0);
 $$ = $30 ? $29 : $26;
 $31 = ((($0)) + 7452|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (($$) - ($32))|0;
 $34 = ($33|0)>(0);
 if ($34) {
  $35 = (($8|0) / 50)&-1;
  $36 = ((($0)) + 7448|0);
  $37 = ((($0)) + 8|0);
  $38 = ((($0)) + 4|0);
  $39 = ((($0)) + 7424|0);
  $40 = ((($1)) + 72|0);
  $41 = ((($0)) + 2892|0);
  $42 = ((($0)) + 5772|0);
  $43 = ((($0)) + 8288|0);
  $44 = ((($0)) + 8284|0);
  $45 = ((($0)) + 8272|0);
  $46 = ((($0)) + 4812|0);
  $47 = ((($0)) + 3852|0);
  $$phi$trans$insert$i = ((($17)) + 8|0);
  $48 = ((($0)) + 7008|0);
  $49 = ((($0)) + 7080|0);
  $50 = ((($0)) + 7012|0);
  $51 = ((($0)) + 7084|0);
  $52 = ((($0)) + 7016|0);
  $53 = ((($0)) + 7088|0);
  $54 = ((($0)) + 7020|0);
  $55 = ((($0)) + 7092|0);
  $56 = ((($0)) + 7024|0);
  $57 = ((($0)) + 7096|0);
  $58 = ((($0)) + 7028|0);
  $59 = ((($0)) + 7100|0);
  $60 = ((($0)) + 7032|0);
  $61 = ((($0)) + 7104|0);
  $62 = ((($0)) + 7036|0);
  $63 = ((($0)) + 7108|0);
  $64 = ((($0)) + 7040|0);
  $65 = ((($0)) + 7112|0);
  $66 = ((($0)) + 7044|0);
  $67 = ((($0)) + 7116|0);
  $68 = ((($0)) + 7048|0);
  $69 = ((($0)) + 7120|0);
  $70 = ((($0)) + 7052|0);
  $71 = ((($0)) + 7124|0);
  $72 = ((($0)) + 7056|0);
  $73 = ((($0)) + 7128|0);
  $74 = ((($0)) + 7060|0);
  $75 = ((($0)) + 7132|0);
  $76 = ((($0)) + 7064|0);
  $77 = ((($0)) + 7136|0);
  $78 = ((($0)) + 7068|0);
  $79 = ((($0)) + 7140|0);
  $80 = ((($0)) + 7072|0);
  $81 = ((($0)) + 7144|0);
  $82 = ((($0)) + 7076|0);
  $83 = ((($0)) + 7148|0);
  $84 = ((($23)) + 4|0);
  $85 = ((($23)) + 8|0);
  $86 = ((($23)) + 3832|0);
  $87 = ((($23)) + 12|0);
  $88 = ((($23)) + 3836|0);
  $89 = ((($23)) + 16|0);
  $90 = ((($23)) + 3824|0);
  $91 = ((($23)) + 20|0);
  $92 = ((($23)) + 3828|0);
  $93 = ((($23)) + 24|0);
  $94 = ((($23)) + 3816|0);
  $95 = ((($23)) + 28|0);
  $96 = ((($23)) + 3820|0);
  $97 = ((($0)) + 7440|0);
  $$phi$trans$insert1211$i = ((($20)) + 68|0);
  $$phi$trans$insert1213$i = ((($21)) + 68|0);
  $98 = (($9) + -8)|0;
  $99 = ($98|0)>(0);
  $100 = $99 ? $98 : 0;
  $101 = 1 << $100;
  $102 = (Math_fround(($101|0)));
  $103 = Math_fround(Math_fround(5.69999975E-4) / $102);
  $104 = Math_fround($103 * $103);
  $105 = ((($0)) + 5852|0);
  $106 = ((($0)) + 7224|0);
  $107 = Math_fround($104 * Math_fround(160.0));
  $108 = ((($0)) + 7432|0);
  $109 = ((($0)) + 7436|0);
  $$phi$trans$insert1237$i = ((($13)) + 8|0);
  $$phi$trans$insert1239$i = ((($13)) + 12|0);
  $$phi$trans$insert1241$i = ((($13)) + 16|0);
  $$phi$trans$insert1243$i = ((($13)) + 20|0);
  $$phi$trans$insert1245$i = ((($13)) + 24|0);
  $$phi$trans$insert1247$i = ((($13)) + 28|0);
  $$phi$trans$insert1249$i = ((($13)) + 32|0);
  $$phi$trans$insert1251$i = ((($13)) + 36|0);
  $$phi$trans$insert1253$i = ((($13)) + 40|0);
  $$phi$trans$insert1255$i = ((($13)) + 44|0);
  $$phi$trans$insert1257$i = ((($13)) + 48|0);
  $$phi$trans$insert1259$i = ((($13)) + 52|0);
  $110 = ((($13)) + 4|0);
  $111 = ((($13)) + 56|0);
  $112 = ((($13)) + 60|0);
  $113 = ((($0)) + 5848|0);
  $114 = ((($0)) + 7324|0);
  $115 = ((($0)) + 7228|0);
  $116 = ((($0)) + 7292|0);
  $117 = ((($0)) + 7260|0);
  $118 = ((($0)) + 7356|0);
  $119 = ((($14)) + 4|0);
  $120 = ((($0)) + 7328|0);
  $121 = ((($0)) + 7232|0);
  $122 = ((($0)) + 7296|0);
  $123 = ((($0)) + 7264|0);
  $124 = ((($0)) + 7360|0);
  $125 = ((($15)) + 4|0);
  $126 = ((($14)) + 8|0);
  $127 = ((($0)) + 7332|0);
  $128 = ((($0)) + 7236|0);
  $129 = ((($0)) + 7300|0);
  $130 = ((($0)) + 7268|0);
  $131 = ((($0)) + 7364|0);
  $132 = ((($15)) + 8|0);
  $133 = ((($14)) + 12|0);
  $134 = ((($0)) + 7336|0);
  $135 = ((($0)) + 7240|0);
  $136 = ((($0)) + 7304|0);
  $137 = ((($0)) + 7272|0);
  $138 = ((($0)) + 7368|0);
  $139 = ((($15)) + 12|0);
  $140 = ((($15)) + 16|0);
  $141 = ((($15)) + 20|0);
  $142 = ((($15)) + 24|0);
  $143 = ((($15)) + 28|0);
  $144 = ((($15)) + 32|0);
  $145 = ((($15)) + 36|0);
  $146 = ((($15)) + 40|0);
  $147 = ((($0)) + 7388|0);
  $148 = ((($0)) + 7392|0);
  $149 = ((($0)) + 7396|0);
  $150 = ((($0)) + 7400|0);
  $151 = ((($0)) + 7404|0);
  $152 = ((($0)) + 7408|0);
  $153 = ((($0)) + 7412|0);
  $154 = ((($0)) + 7416|0);
  $155 = ((($0)) + 7420|0);
  $156 = ((($18)) + 4|0);
  $157 = ((($18)) + 8|0);
  $158 = ((($18)) + 12|0);
  $159 = ((($0)) + 7308|0);
  $160 = ((($0)) + 7340|0);
  $161 = ((($0)) + 7276|0);
  $162 = ((($0)) + 7244|0);
  $163 = ((($14)) + 16|0);
  $164 = ((($0)) + 7312|0);
  $165 = ((($0)) + 7344|0);
  $166 = ((($0)) + 7280|0);
  $167 = ((($0)) + 7248|0);
  $168 = ((($14)) + 20|0);
  $169 = ((($0)) + 7316|0);
  $170 = ((($0)) + 7348|0);
  $171 = ((($0)) + 7284|0);
  $172 = ((($0)) + 7252|0);
  $173 = ((($14)) + 24|0);
  $174 = ((($0)) + 7320|0);
  $175 = ((($0)) + 7352|0);
  $176 = ((($0)) + 7288|0);
  $177 = ((($0)) + 7256|0);
  $178 = ((($14)) + 28|0);
  $179 = ((($15)) + 44|0);
  $180 = ((($15)) + 48|0);
  $181 = ((($15)) + 52|0);
  $182 = ((($15)) + 56|0);
  $183 = ((($15)) + 60|0);
  $184 = ((($15)) + 64|0);
  $185 = ((($15)) + 68|0);
  $186 = ((($15)) + 72|0);
  $187 = ((($15)) + 76|0);
  $188 = ((($15)) + 80|0);
  $189 = ((($15)) + 84|0);
  $190 = ((($15)) + 88|0);
  $191 = ((($15)) + 92|0);
  $192 = ((($15)) + 96|0);
  $193 = ((($16)) + 4|0);
  $194 = ((($0)) + 7428|0);
  $195 = ((($0)) + 7856|0);
  $196 = ((($0)) + 7456|0);
  $197 = ((($0)) + 7460|0);
  $198 = ((($0)) + 7860|0);
  $199 = ((($0)) + 7852|0);
  $200 = ((($0)) + 8252|0);
  $201 = ((($0)) + 7444|0);
  $202 = ((($0)) + 8268|0);
  $203 = ((($0)) + 8260|0);
  $204 = ((($0)) + 8264|0);
  $205 = ((($0)) + 8256|0);
  $206 = ((($18)) + 16|0);
  $207 = ((($18)) + 20|0);
  $208 = ((($18)) + 24|0);
  $209 = ((($18)) + 28|0);
  $$03851 = $32;$$052 = $33;
  while(1) {
   $210 = ($$052|0)>($35|0);
   $$$0 = $210 ? $35 : $$052;
   $211 = HEAP32[$36>>2]|0;
   $212 = ($211|0)>(9);
   $213 = (($211) + 1)|0;
   $214 = (Math_fround(($213|0)));
   $$op$i = Math_fround(Math_fround(1.0) / $214);
   $215 = $212 ? Math_fround(0.100000001) : $$op$i;
   $216 = ($211|0)>(24);
   $217 = $216 ? Math_fround(0.0399999991) : $$op$i;
   $218 = ($211|0)>(499);
   $219 = HEAP32[$37>>2]|0;
   $switch$split2D = ($219|0)<(48000);
   L8: do {
    if ($switch$split2D) {
     switch ($219|0) {
     case 16000:  {
      break;
     }
     default: {
      $$0$i = $$$0;$$0985$i = $$03851;
      break L8;
     }
     }
     $222 = ($$$0*3)|0;
     $223 = (($222|0) / 2)&-1;
     $224 = ($$03851*3)|0;
     $225 = (($224|0) / 2)&-1;
     $$0$i = $223;$$0985$i = $225;
    } else {
     switch ($219|0) {
     case 48000:  {
      break;
     }
     default: {
      $$0$i = $$$0;$$0985$i = $$03851;
      break L8;
     }
     }
     $220 = (($$$0|0) / 2)&-1;
     $221 = (($$03851|0) / 2)&-1;
     $$0$i = $220;$$0985$i = $221;
    }
   } while(0);
   $226 = ($211|0)<(4);
   if ($226) {
    $228 = HEAP32[$38>>2]|0;
    $229 = ($228|0)==(2048);
    $$1077$i = $229 ? Math_fround(0.100000001) : Math_fround(0.625);
    HEAPF32[$39>>2] = $$1077$i;
    $230 = HEAP32[$40>>2]|0;
    $231 = ($211|0)==(0);
    if ($231) {
     HEAP32[$42>>2] = 240;
     $273 = $230;
    } else {
     $273 = $230;
    }
   } else {
    $227 = HEAP32[$40>>2]|0;
    $273 = $227;
   }
   $232 = HEAP32[$42>>2]|0;
   $233 = (((($0)) + 2892|0) + ($232<<2)|0);
   $234 = (720 - ($232))|0;
   $235 = ($$0$i|0)<($234|0);
   $$0$$i = $235 ? $$0$i : $234;
   $236 = (Math_fround(_downmix_and_resample($10,$2,$233,$43,$$0$$i,$$0985$i,$5,$6,$7,$219)));
   $237 = Math_fround(HEAPF32[$44>>2]);
   $238 = Math_fround($236 + $237);
   HEAPF32[$44>>2] = $238;
   $239 = HEAP32[$42>>2]|0;
   $240 = (($239) + ($$0$i))|0;
   $241 = ($240|0)<(720);
   if ($241) {
    HEAP32[$42>>2] = $240;
   } else {
    $242 = HEAP32[$45>>2]|0;
    $243 = ($242|0)>(98);
    $spec$select1041$v$i = $243 ? -99 : 1;
    $spec$select1041$i = (($spec$select1041$v$i) + ($242))|0;
    HEAP32[$45>>2] = $spec$select1041$i;
    $$09861149$i = 0;
    while(1) {
     $244 = (1328 + ($$09861149$i<<2)|0);
     $245 = Math_fround(HEAPF32[$244>>2]);
     $246 = (((($0)) + 2892|0) + ($$09861149$i<<2)|0);
     $247 = Math_fround(HEAPF32[$246>>2]);
     $248 = Math_fround($245 * $247);
     $249 = (($22) + ($$09861149$i<<3)|0);
     HEAPF32[$249>>2] = $248;
     $250 = (($$09861149$i) + 240)|0;
     $251 = (((($0)) + 2892|0) + ($250<<2)|0);
     $252 = Math_fround(HEAPF32[$251>>2]);
     $253 = Math_fround($245 * $252);
     $254 = (((($22) + ($$09861149$i<<3)|0)) + 4|0);
     HEAPF32[$254>>2] = $253;
     $255 = (480 - ($$09861149$i))|0;
     $256 = (($255) + -1)|0;
     $257 = (((($0)) + 2892|0) + ($256<<2)|0);
     $258 = Math_fround(HEAPF32[$257>>2]);
     $259 = Math_fround($245 * $258);
     $260 = (($22) + ($256<<3)|0);
     HEAPF32[$260>>2] = $259;
     $261 = (719 - ($$09861149$i))|0;
     $262 = (((($0)) + 2892|0) + ($261<<2)|0);
     $263 = Math_fround(HEAPF32[$262>>2]);
     $264 = Math_fround($245 * $263);
     $265 = (((($22) + ($256<<3)|0)) + 4|0);
     HEAPF32[$265>>2] = $264;
     $266 = (($$09861149$i) + 1)|0;
     $exitcond1201$i = ($266|0)==(240);
     if ($exitcond1201$i) {
      break;
     } else {
      $$09861149$i = $266;
     }
    }
    _memcpy(($41|0),($46|0),960)|0;
    $267 = (($240) + -720)|0;
    $268 = (($$0985$i) + 720)|0;
    $269 = (($268) - ($239))|0;
    $270 = HEAP32[$37>>2]|0;
    $271 = (Math_fround(_downmix_and_resample($10,$2,$47,$43,$267,$269,$5,$6,$7,$270)));
    HEAPF32[$44>>2] = $271;
    $272 = (($240) + -480)|0;
    HEAP32[$42>>2] = $272;
    _opus_fft_c($273,$22,$23);
    $274 = Math_fround(HEAPF32[$23>>2]);
    $275 = ($274 != $274) | (Math_fround(0.0) != Math_fround(0.0));
    L25: do {
     if ($275) {
      $$sink = 0;
     } else {
      $$11148$i = 1;
      while(1) {
       $276 = (($23) + ($$11148$i<<3)|0);
       $277 = Math_fround(HEAPF32[$276>>2]);
       $278 = (480 - ($$11148$i))|0;
       $279 = (($23) + ($278<<3)|0);
       $280 = Math_fround(HEAPF32[$279>>2]);
       $281 = Math_fround($277 + $280);
       $282 = (((($23) + ($$11148$i<<3)|0)) + 4|0);
       $283 = Math_fround(HEAPF32[$282>>2]);
       $284 = (((($23) + ($278<<3)|0)) + 4|0);
       $285 = Math_fround(HEAPF32[$284>>2]);
       $286 = Math_fround($283 - $285);
       $287 = Math_fround($283 + $285);
       $288 = Math_fround($280 - $277);
       $289 = Math_fround($281 * $281);
       $290 = Math_fround($286 * $286);
       $291 = Math_fround($289 + $290);
       $292 = $291 < Math_fround(1.00000005E-18);
       do {
        if ($292) {
         $$0$i$i = Math_fround(0.0);
        } else {
         $293 = $289 < $290;
         if ($293) {
          $294 = Math_fround($289 * Math_fround(0.678484022));
          $295 = Math_fround($294 + $290);
          $296 = Math_fround($289 * Math_fround(0.0859554186));
          $297 = Math_fround($296 + $290);
          $298 = Math_fround($295 * $297);
          $299 = Math_fround($281 * $286);
          $300 = Math_fround($289 * Math_fround(0.431579739));
          $301 = Math_fround($300 + $290);
          $302 = Math_fround($299 * $301);
          $303 = Math_fround(- $302);
          $304 = Math_fround($303 / $298);
          $305 = $286 < Math_fround(0.0);
          $306 = $305 ? Math_fround(-1.57079637) : Math_fround(1.57079637);
          $307 = Math_fround($306 + $304);
          $$0$i$i = $307;
          break;
         } else {
          $308 = Math_fround($290 * Math_fround(0.678484022));
          $309 = Math_fround($289 + $308);
          $310 = Math_fround($290 * Math_fround(0.0859554186));
          $311 = Math_fround($289 + $310);
          $312 = Math_fround($309 * $311);
          $313 = Math_fround($281 * $286);
          $314 = Math_fround($290 * Math_fround(0.431579739));
          $315 = Math_fround($289 + $314);
          $316 = Math_fround($313 * $315);
          $317 = Math_fround($316 / $312);
          $318 = $286 < Math_fround(0.0);
          $319 = $318 ? Math_fround(-1.57079637) : Math_fround(1.57079637);
          $320 = Math_fround($319 + $317);
          $321 = $313 < Math_fround(0.0);
          $322 = $321 ? Math_fround(-1.57079637) : Math_fround(1.57079637);
          $323 = Math_fround($320 - $322);
          $$0$i$i = $323;
          break;
         }
        }
       } while(0);
       $324 = Math_fround($$0$i$i * Math_fround(0.159154937));
       $325 = (((($0)) + 12|0) + ($$11148$i<<2)|0);
       $326 = Math_fround(HEAPF32[$325>>2]);
       $327 = Math_fround($324 - $326);
       $328 = (((($0)) + 972|0) + ($$11148$i<<2)|0);
       $329 = Math_fround(HEAPF32[$328>>2]);
       $330 = Math_fround($327 - $329);
       $331 = Math_fround($287 * $287);
       $332 = Math_fround($288 * $288);
       $333 = Math_fround($332 + $331);
       $334 = $333 < Math_fround(1.00000005E-18);
       do {
        if ($334) {
         $$0$i1063$i = Math_fround(0.0);
        } else {
         $335 = $331 < $332;
         if ($335) {
          $336 = Math_fround($331 * Math_fround(0.678484022));
          $337 = Math_fround($332 + $336);
          $338 = Math_fround($331 * Math_fround(0.0859554186));
          $339 = Math_fround($332 + $338);
          $340 = Math_fround($337 * $339);
          $341 = Math_fround($288 * $287);
          $342 = Math_fround($331 * Math_fround(0.431579739));
          $343 = Math_fround($332 + $342);
          $344 = Math_fround($341 * $343);
          $345 = Math_fround(- $344);
          $346 = Math_fround($345 / $340);
          $347 = $288 < Math_fround(0.0);
          $348 = $347 ? Math_fround(-1.57079637) : Math_fround(1.57079637);
          $349 = Math_fround($348 + $346);
          $$0$i1063$i = $349;
          break;
         } else {
          $350 = Math_fround($332 * Math_fround(0.678484022));
          $351 = Math_fround($350 + $331);
          $352 = Math_fround($332 * Math_fround(0.0859554186));
          $353 = Math_fround($352 + $331);
          $354 = Math_fround($351 * $353);
          $355 = Math_fround($288 * $287);
          $356 = Math_fround($332 * Math_fround(0.431579739));
          $357 = Math_fround($356 + $331);
          $358 = Math_fround($355 * $357);
          $359 = Math_fround($358 / $354);
          $360 = $288 < Math_fround(0.0);
          $361 = $360 ? Math_fround(-1.57079637) : Math_fround(1.57079637);
          $362 = Math_fround($361 + $359);
          $363 = $355 < Math_fround(0.0);
          $364 = $363 ? Math_fround(-1.57079637) : Math_fround(1.57079637);
          $365 = Math_fround($362 - $364);
          $$0$i1063$i = $365;
          break;
         }
        }
       } while(0);
       $366 = Math_fround($$0$i1063$i * Math_fround(0.159154937));
       $367 = Math_fround($366 - $324);
       $368 = Math_fround($367 - $327);
       $369 = (_lrintf($330)|0);
       $370 = (Math_fround(($369|0)));
       $371 = Math_fround($330 - $370);
       $372 = (Math_fround(Math_abs((Math_fround($371)))));
       $373 = (($25) + ($$11148$i<<2)|0);
       $374 = Math_fround($371 * $371);
       $375 = Math_fround($374 * $374);
       $376 = (_lrintf($368)|0);
       $377 = (Math_fround(($376|0)));
       $378 = Math_fround($368 - $377);
       $379 = (Math_fround(Math_abs((Math_fround($378)))));
       $380 = Math_fround($372 + $379);
       HEAPF32[$373>>2] = $380;
       $381 = Math_fround($378 * $378);
       $382 = Math_fround($381 * $381);
       $383 = (((($0)) + 1932|0) + ($$11148$i<<2)|0);
       $384 = Math_fround(HEAPF32[$383>>2]);
       $385 = Math_fround($384 + $375);
       $386 = Math_fround($382 * Math_fround(2.0));
       $387 = Math_fround($385 + $386);
       $388 = Math_fround($387 * Math_fround(0.25));
       $389 = Math_fround($388 * Math_fround(62341.8164));
       $390 = Math_fround($389 + Math_fround(1.0));
       $391 = Math_fround(Math_fround(1.0) / $390);
       $392 = Math_fround($391 + Math_fround(-0.0149999997));
       $393 = (($24) + ($$11148$i<<2)|0);
       HEAPF32[$393>>2] = $392;
       $394 = Math_fround($382 * Math_fround(62341.8164));
       $395 = Math_fround($394 + Math_fround(1.0));
       $396 = Math_fround(Math_fround(1.0) / $395);
       $397 = Math_fround($396 + Math_fround(-0.0149999997));
       $398 = (($17) + ($$11148$i<<2)|0);
       HEAPF32[$398>>2] = $397;
       HEAPF32[$325>>2] = $366;
       HEAPF32[$328>>2] = $367;
       HEAPF32[$383>>2] = $382;
       $399 = (($$11148$i) + 1)|0;
       $exitcond1200$i = ($399|0)==(240);
       if ($exitcond1200$i) {
        break;
       } else {
        $$11148$i = $399;
       }
      }
      $$pre$i = Math_fround(HEAPF32[$$phi$trans$insert$i>>2]);
      $$21147$i = 2;$408 = $$pre$i;
      while(1) {
       $400 = (($$21147$i) + -1)|0;
       $401 = (($17) + ($400<<2)|0);
       $402 = Math_fround(HEAPF32[$401>>2]);
       $403 = (($$21147$i) + 1)|0;
       $404 = (($17) + ($403<<2)|0);
       $405 = Math_fround(HEAPF32[$404>>2]);
       $406 = $402 > $405;
       $$$i = $406 ? $402 : $405;
       $407 = $408 < $$$i;
       $409 = $407 ? $408 : $$$i;
       $410 = (($24) + ($$21147$i<<2)|0);
       $411 = Math_fround(HEAPF32[$410>>2]);
       $412 = Math_fround($409 + Math_fround(-0.100000001));
       $413 = $411 > $412;
       $$1043$i = $413 ? $411 : $412;
       $414 = Math_fround($$1043$i * Math_fround(0.899999976));
       HEAPF32[$410>>2] = $414;
       $exitcond1199$i = ($403|0)==(239);
       if ($exitcond1199$i) {
        break;
       } else {
        $$21147$i = $403;$408 = $405;
       }
      }
      $415 = (((((($0)) + 8300|0) + (($242*56)|0)|0)) + 16|0);
      HEAPF32[$415>>2] = Math_fround(0.0);
      $416 = HEAP32[$36>>2]|0;
      $417 = ($416|0)==(0);
      if ($417) {
       HEAPF32[$48>>2] = Math_fround(1.0E+10);
       HEAPF32[$49>>2] = Math_fround(-1.0E+10);
       HEAPF32[$50>>2] = Math_fround(1.0E+10);
       HEAPF32[$51>>2] = Math_fround(-1.0E+10);
       HEAPF32[$52>>2] = Math_fround(1.0E+10);
       HEAPF32[$53>>2] = Math_fround(-1.0E+10);
       HEAPF32[$54>>2] = Math_fround(1.0E+10);
       HEAPF32[$55>>2] = Math_fround(-1.0E+10);
       HEAPF32[$56>>2] = Math_fround(1.0E+10);
       HEAPF32[$57>>2] = Math_fround(-1.0E+10);
       HEAPF32[$58>>2] = Math_fround(1.0E+10);
       HEAPF32[$59>>2] = Math_fround(-1.0E+10);
       HEAPF32[$60>>2] = Math_fround(1.0E+10);
       HEAPF32[$61>>2] = Math_fround(-1.0E+10);
       HEAPF32[$62>>2] = Math_fround(1.0E+10);
       HEAPF32[$63>>2] = Math_fround(-1.0E+10);
       HEAPF32[$64>>2] = Math_fround(1.0E+10);
       HEAPF32[$65>>2] = Math_fround(-1.0E+10);
       HEAPF32[$66>>2] = Math_fround(1.0E+10);
       HEAPF32[$67>>2] = Math_fround(-1.0E+10);
       HEAPF32[$68>>2] = Math_fround(1.0E+10);
       HEAPF32[$69>>2] = Math_fround(-1.0E+10);
       HEAPF32[$70>>2] = Math_fround(1.0E+10);
       HEAPF32[$71>>2] = Math_fround(-1.0E+10);
       HEAPF32[$72>>2] = Math_fround(1.0E+10);
       HEAPF32[$73>>2] = Math_fround(-1.0E+10);
       HEAPF32[$74>>2] = Math_fround(1.0E+10);
       HEAPF32[$75>>2] = Math_fround(-1.0E+10);
       HEAPF32[$76>>2] = Math_fround(1.0E+10);
       HEAPF32[$77>>2] = Math_fround(-1.0E+10);
       HEAPF32[$78>>2] = Math_fround(1.0E+10);
       HEAPF32[$79>>2] = Math_fround(-1.0E+10);
       HEAPF32[$80>>2] = Math_fround(1.0E+10);
       HEAPF32[$81>>2] = Math_fround(-1.0E+10);
       HEAPF32[$82>>2] = Math_fround(1.0E+10);
       HEAPF32[$83>>2] = Math_fround(-1.0E+10);
      }
      $418 = Math_fround($274 * Math_fround(2.0));
      $419 = Math_fround(HEAPF32[$84>>2]);
      $420 = Math_fround($419 * Math_fround(2.0));
      $421 = Math_fround($418 * $418);
      $422 = Math_fround($420 * $420);
      $423 = Math_fround($421 + $422);
      $424 = Math_fround(HEAPF32[$85>>2]);
      $425 = Math_fround($424 * $424);
      $426 = Math_fround(HEAPF32[$86>>2]);
      $427 = Math_fround($426 * $426);
      $428 = Math_fround($425 + $427);
      $429 = Math_fround(HEAPF32[$87>>2]);
      $430 = Math_fround($429 * $429);
      $431 = Math_fround($428 + $430);
      $432 = Math_fround(HEAPF32[$88>>2]);
      $433 = Math_fround($432 * $432);
      $434 = Math_fround($431 + $433);
      $435 = Math_fround($423 + $434);
      $436 = Math_fround(HEAPF32[$89>>2]);
      $437 = Math_fround($436 * $436);
      $438 = Math_fround(HEAPF32[$90>>2]);
      $439 = Math_fround($438 * $438);
      $440 = Math_fround($437 + $439);
      $441 = Math_fround(HEAPF32[$91>>2]);
      $442 = Math_fround($441 * $441);
      $443 = Math_fround($440 + $442);
      $444 = Math_fround(HEAPF32[$92>>2]);
      $445 = Math_fround($444 * $444);
      $446 = Math_fround($443 + $445);
      $447 = Math_fround($435 + $446);
      $448 = Math_fround(HEAPF32[$93>>2]);
      $449 = Math_fround($448 * $448);
      $450 = Math_fround(HEAPF32[$94>>2]);
      $451 = Math_fround($450 * $450);
      $452 = Math_fround($449 + $451);
      $453 = Math_fround(HEAPF32[$95>>2]);
      $454 = Math_fround($453 * $453);
      $455 = Math_fround($452 + $454);
      $456 = Math_fround(HEAPF32[$96>>2]);
      $457 = Math_fround($456 * $456);
      $458 = Math_fround($455 + $457);
      $459 = Math_fround($447 + $458);
      $460 = Math_fround($459 + Math_fround(1.00000001E-10));
      $461 = +$460;
      $462 = (+_log($461));
      $463 = Math_fround($462);
      $464 = Math_fround($463 * Math_fround(0.72134751));
      HEAPF32[$19>>2] = $464;
      $$010011141$i = Math_fround(0.0);$$010051140$i = Math_fround(0.0);$$010071139$i = Math_fround(0.0);$$010091138$i = Math_fround(0.0);$$010111137$i = Math_fround(0.0);$$010141136$i = Math_fround(0.0);$$09981142$i = Math_fround(0.0);$$19881143$i = 0;$469 = 4;
      while(1) {
       $465 = (($$19881143$i) + 1)|0;
       $466 = (2288 + ($465<<2)|0);
       $467 = HEAP32[$466>>2]|0;
       $468 = ($469|0)<($467|0);
       if ($468) {
        $$010311124$i = Math_fround(0.0);$$010321123$i = Math_fround(0.0);$$010331122$i = Math_fround(0.0);$$41125$i = $469;
        while(1) {
         $470 = (($23) + ($$41125$i<<3)|0);
         $471 = Math_fround(HEAPF32[$470>>2]);
         $472 = Math_fround($471 * $471);
         $473 = (480 - ($$41125$i))|0;
         $474 = (($23) + ($473<<3)|0);
         $475 = Math_fround(HEAPF32[$474>>2]);
         $476 = Math_fround($475 * $475);
         $477 = Math_fround($472 + $476);
         $478 = (((($23) + ($$41125$i<<3)|0)) + 4|0);
         $479 = Math_fround(HEAPF32[$478>>2]);
         $480 = Math_fround($479 * $479);
         $481 = Math_fround($477 + $480);
         $482 = (((($23) + ($473<<3)|0)) + 4|0);
         $483 = Math_fround(HEAPF32[$482>>2]);
         $484 = Math_fround($483 * $483);
         $485 = Math_fround($481 + $484);
         $486 = Math_fround($$010331122$i + $485);
         $487 = (($24) + ($$41125$i<<2)|0);
         $488 = Math_fround(HEAPF32[$487>>2]);
         $489 = $488 < Math_fround(0.0);
         $490 = $489 ? Math_fround(0.0) : $488;
         $491 = Math_fround($485 * $490);
         $492 = Math_fround($$010321123$i + $491);
         $493 = Math_fround($485 * Math_fround(2.0));
         $494 = (($25) + ($$41125$i<<2)|0);
         $495 = Math_fround(HEAPF32[$494>>2]);
         $496 = Math_fround(Math_fround(0.5) - $495);
         $497 = Math_fround($493 * $496);
         $498 = Math_fround($$010311124$i + $497);
         $499 = (($$41125$i) + 1)|0;
         $exitcond = ($499|0)==($467|0);
         if ($exitcond) {
          $$01031$lcssa$i = $498;$$01032$lcssa$i = $492;$$01033$lcssa$i = $486;
          break;
         } else {
          $$010311124$i = $498;$$010321123$i = $492;$$010331122$i = $486;$$41125$i = $499;
         }
        }
       } else {
        $$01031$lcssa$i = Math_fround(0.0);$$01032$lcssa$i = Math_fround(0.0);$$01033$lcssa$i = Math_fround(0.0);
       }
       $500 = !($$01033$lcssa$i < Math_fround(1.0E+9));
       $501 = ($$01033$lcssa$i != $$01033$lcssa$i) | (Math_fround(0.0) != Math_fround(0.0));
       $or$cond$i = $500 | $501;
       if ($or$cond$i) {
        $$sink = 0;
        break L25;
       }
       $502 = HEAP32[$97>>2]|0;
       $503 = ((((($0)) + 5856|0) + (($502*72)|0)|0) + ($$19881143$i<<2)|0);
       HEAPF32[$503>>2] = $$01033$lcssa$i;
       $504 = Math_fround($$01033$lcssa$i + Math_fround(1.0E-15));
       $505 = Math_fround($$01031$lcssa$i / $504);
       $506 = Math_fround($$010051140$i + $505);
       $507 = Math_fround($$01033$lcssa$i + Math_fround(1.00000001E-10));
       $508 = +$507;
       $509 = (Math_fround(Math_sqrt((Math_fround($507)))));
       $510 = Math_fround($$010141136$i + $509);
       $511 = (+_log($508));
       $512 = Math_fround($511);
       $513 = (($13) + ($$19881143$i<<2)|0);
       HEAPF32[$513>>2] = $512;
       $514 = Math_fround($512 * Math_fround(0.72134751));
       $515 = (($19) + ($465<<2)|0);
       HEAPF32[$515>>2] = $514;
       $516 = ((((($0)) + 6432|0) + (($502*72)|0)|0) + ($$19881143$i<<2)|0);
       HEAPF32[$516>>2] = $512;
       $517 = (((($0)) + 7080|0) + ($$19881143$i<<2)|0);
       if ($417) {
        $518 = (((($0)) + 7008|0) + ($$19881143$i<<2)|0);
        HEAPF32[$518>>2] = $512;
        HEAPF32[$517>>2] = $512;
        $$pre$phi1273$iZ2D = $518;$520 = $512;$522 = $512;
       } else {
        $$pre1205$i = Math_fround(HEAPF32[$517>>2]);
        $$phi$trans$insert1206$i = (((($0)) + 7008|0) + ($$19881143$i<<2)|0);
        $$pre1207$i = Math_fround(HEAPF32[$$phi$trans$insert1206$i>>2]);
        $$pre$phi1273$iZ2D = $$phi$trans$insert1206$i;$520 = $$pre1205$i;$522 = $$pre1207$i;
       }
       $519 = +$520;
       $521 = +$522;
       $523 = $521 + 7.5;
       $524 = $523 < $519;
       do {
        if ($524) {
         $525 = Math_fround($520 - $512);
         $526 = Math_fround($512 - $522);
         $527 = $525 > $526;
         if ($527) {
          $528 = Math_fround($520 + Math_fround(-0.00999999977));
          HEAPF32[$517>>2] = $528;
          $531 = $528;
          break;
         } else {
          $529 = Math_fround($522 + Math_fround(0.00999999977));
          HEAPF32[$$pre$phi1273$iZ2D>>2] = $529;
          $531 = $520;
          break;
         }
        } else {
         $531 = $520;
        }
       } while(0);
       $530 = $531 < $512;
       if ($530) {
        HEAPF32[$517>>2] = $512;
        $532 = Math_fround($512 + Math_fround(-15.0));
        $533 = Math_fround(HEAPF32[$$pre$phi1273$iZ2D>>2]);
        $534 = $532 > $533;
        $$1044$i = $534 ? $532 : $533;
        HEAPF32[$$pre$phi1273$iZ2D>>2] = $$1044$i;
        $540 = $$1044$i;$542 = $512;
       } else {
        $535 = Math_fround(HEAPF32[$$pre$phi1273$iZ2D>>2]);
        $536 = $535 > $512;
        $537 = Math_fround($512 + Math_fround(15.0));
        $538 = $537 < $531;
        $$1045$i = $538 ? $537 : $531;
        if ($536) {
         HEAPF32[$$pre$phi1273$iZ2D>>2] = $512;
         HEAPF32[$517>>2] = $$1045$i;
         $540 = $512;$542 = $$1045$i;
        } else {
         $540 = $535;$542 = $531;
        }
       }
       $539 = Math_fround($512 - $540);
       $541 = Math_fround($542 - $540);
       $543 = Math_fround($541 + Math_fround(1.0E-15));
       $544 = Math_fround($539 / $543);
       $545 = (((($0)) + 5856|0) + ($$19881143$i<<2)|0);
       $546 = Math_fround(HEAPF32[$545>>2]);
       $547 = (Math_fround(Math_sqrt((Math_fround($546)))));
       $548 = Math_fround($547 + Math_fround(0.0));
       $549 = Math_fround($546 + Math_fround(0.0));
       $550 = (((($0)) + 5928|0) + ($$19881143$i<<2)|0);
       $551 = Math_fround(HEAPF32[$550>>2]);
       $552 = (Math_fround(Math_sqrt((Math_fround($551)))));
       $553 = Math_fround($548 + $552);
       $554 = Math_fround($549 + $551);
       $555 = (((($0)) + 6000|0) + ($$19881143$i<<2)|0);
       $556 = Math_fround(HEAPF32[$555>>2]);
       $557 = (Math_fround(Math_sqrt((Math_fround($556)))));
       $558 = Math_fround($553 + $557);
       $559 = Math_fround($554 + $556);
       $560 = (((($0)) + 6072|0) + ($$19881143$i<<2)|0);
       $561 = Math_fround(HEAPF32[$560>>2]);
       $562 = (Math_fround(Math_sqrt((Math_fround($561)))));
       $563 = Math_fround($558 + $562);
       $564 = Math_fround($559 + $561);
       $565 = (((($0)) + 6144|0) + ($$19881143$i<<2)|0);
       $566 = Math_fround(HEAPF32[$565>>2]);
       $567 = (Math_fround(Math_sqrt((Math_fround($566)))));
       $568 = Math_fround($563 + $567);
       $569 = Math_fround($564 + $566);
       $570 = (((($0)) + 6216|0) + ($$19881143$i<<2)|0);
       $571 = Math_fround(HEAPF32[$570>>2]);
       $572 = (Math_fround(Math_sqrt((Math_fround($571)))));
       $573 = Math_fround($568 + $572);
       $574 = Math_fround($569 + $571);
       $575 = (((($0)) + 6288|0) + ($$19881143$i<<2)|0);
       $576 = Math_fround(HEAPF32[$575>>2]);
       $577 = (Math_fround(Math_sqrt((Math_fround($576)))));
       $578 = Math_fround($573 + $577);
       $579 = Math_fround($574 + $576);
       $580 = (((($0)) + 6360|0) + ($$19881143$i<<2)|0);
       $581 = Math_fround(HEAPF32[$580>>2]);
       $582 = (Math_fround(Math_sqrt((Math_fround($581)))));
       $583 = Math_fround($578 + $582);
       $584 = Math_fround($579 + $581);
       $585 = Math_fround($$010111137$i + $544);
       $586 = Math_fround($584 * Math_fround(8.0));
       $587 = +$586;
       $588 = $587 + 1.0000000000000001E-15;
       $589 = (+Math_sqrt((+$588)));
       $590 = Math_fround($589);
       $591 = Math_fround($583 / $590);
       $592 = $591 > Math_fround(0.990000009);
       $593 = $592 ? Math_fround(0.990000009) : $591;
       $594 = Math_fround($593 * $593);
       $595 = Math_fround($594 * $594);
       $596 = Math_fround($$010091138$i + $595);
       $597 = Math_fround($$01032$lcssa$i / $504);
       $598 = (((($0)) + 5776|0) + ($$19881143$i<<2)|0);
       $599 = Math_fround(HEAPF32[$598>>2]);
       $600 = Math_fround($599 * $595);
       $601 = $597 > $600;
       $$1046$i = $601 ? $597 : $600;
       $602 = (($12) + ($$19881143$i<<2)|0);
       HEAPF32[$602>>2] = $$1046$i;
       $603 = Math_fround($$09981142$i + $$1046$i);
       $604 = ($$19881143$i>>>0)>(8);
       if ($604) {
        $605 = (($$19881143$i) + -9)|0;
        $606 = (($12) + ($605<<2)|0);
        $607 = Math_fround(HEAPF32[$606>>2]);
        $608 = Math_fround($603 - $607);
        $$1999$i = $608;
       } else {
        $$1999$i = $603;
       }
       $609 = (($$19881143$i) + -18)|0;
       $610 = (Math_fround(($609|0)));
       $611 = Math_fround($610 * Math_fround(0.0299999993));
       $612 = Math_fround($611 + Math_fround(1.0));
       $613 = Math_fround($612 * $$1999$i);
       $614 = $$010011141$i > $613;
       $$01001$$i = $614 ? $$010011141$i : $613;
       $615 = (($$19881143$i) + -8)|0;
       $616 = (Math_fround(($615|0)));
       $617 = Math_fround($$1046$i * $616);
       $618 = Math_fround($$010071139$i + $617);
       HEAPF32[$598>>2] = $$1046$i;
       $619 = ($465>>>0)<(18);
       if ($619) {
        $$010011141$i = $$01001$$i;$$010051140$i = $506;$$010071139$i = $618;$$010091138$i = $596;$$010111137$i = $585;$$010141136$i = $510;$$09981142$i = $$1999$i;$$19881143$i = $465;$469 = $467;
       } else {
        break;
       }
      }
      HEAPF32[$20>>2] = $464;
      $620 = Math_fround($464 + Math_fround(-2.5));
      HEAPF32[$21>>2] = $620;
      $$29891121$i = 1;$624 = 4;$629 = $464;$635 = $620;
      while(1) {
       $621 = (2288 + ($$29891121$i<<2)|0);
       $622 = HEAP32[$621>>2]|0;
       $623 = (($622) - ($624))|0;
       $625 = (Math_fround(($623|0)));
       $626 = Math_fround($625 * Math_fround(2.0));
       $627 = Math_fround($626 * Math_fround(0.25));
       $628 = Math_fround($629 + $627);
       $630 = (($19) + ($$29891121$i<<2)|0);
       $631 = Math_fround(HEAPF32[$630>>2]);
       $632 = $628 < $631;
       $$1047$i = $632 ? $628 : $631;
       $633 = (($20) + ($$29891121$i<<2)|0);
       HEAPF32[$633>>2] = $$1047$i;
       $634 = Math_fround($635 - $627);
       $636 = Math_fround($631 + Math_fround(-2.5));
       $637 = $634 > $636;
       $638 = $637 ? $634 : $636;
       $639 = (($21) + ($$29891121$i<<2)|0);
       HEAPF32[$639>>2] = $638;
       $640 = (($$29891121$i) + 1)|0;
       $exitcond1194$i = ($640|0)==(19);
       if ($exitcond1194$i) {
        break;
       } else {
        $$29891121$i = $640;$624 = $622;$629 = $$1047$i;$635 = $638;
       }
      }
      $$pre1212$i = Math_fround(HEAPF32[$$phi$trans$insert1211$i>>2]);
      $$pre1214$i = Math_fround(HEAPF32[$$phi$trans$insert1213$i>>2]);
      $$39901120$i = 16;$644 = 192;$649 = $$pre1212$i;$654 = $$pre1214$i;
      while(1) {
       $641 = (2288 + ($$39901120$i<<2)|0);
       $642 = HEAP32[$641>>2]|0;
       $643 = (($644) - ($642))|0;
       $645 = (Math_fround(($643|0)));
       $646 = Math_fround($645 * Math_fround(2.0));
       $647 = Math_fround($646 * Math_fround(0.25));
       $648 = Math_fround($649 + $647);
       $650 = (($20) + ($$39901120$i<<2)|0);
       $651 = Math_fround(HEAPF32[$650>>2]);
       $652 = $648 < $651;
       $$1048$i = $652 ? $648 : $651;
       HEAPF32[$650>>2] = $$1048$i;
       $653 = Math_fround($654 - $647);
       $655 = (($21) + ($$39901120$i<<2)|0);
       $656 = Math_fround(HEAPF32[$655>>2]);
       $657 = $653 > $656;
       $658 = $657 ? $653 : $656;
       HEAPF32[$655>>2] = $658;
       $659 = (($$39901120$i) + -1)|0;
       $660 = ($$39901120$i|0)==(0);
       if ($660) {
        break;
       } else {
        $$39901120$i = $659;$644 = $642;$649 = $$1048$i;$654 = $658;
       }
      }
      $$49911119$i = 0;$664 = $464;
      while(1) {
       $661 = (($21) + ($$49911119$i<<2)|0);
       $662 = Math_fround(HEAPF32[$661>>2]);
       $663 = Math_fround($662 - $664);
       $665 = $663 < Math_fround(0.0);
       $666 = $665 ? Math_fround(0.0) : $663;
       $667 = (($20) + ($$49911119$i<<2)|0);
       $668 = Math_fround(HEAPF32[$667>>2]);
       $669 = Math_fround($668 + Math_fround(2.5));
       $670 = Math_fround($664 - $669);
       $671 = $670 < Math_fround(0.0);
       $672 = $671 ? Math_fround(0.0) : $670;
       $673 = Math_fround($666 + $672);
       $674 = Math_fround($673 * Math_fround(64.0));
       $675 = +$674;
       $676 = $675 + 0.5;
       $677 = (+Math_floor((+$676)));
       $678 = (~~(($677)));
       $679 = ($678|0)<(255);
       $spec$select1049$i = $679 ? $678 : 255;
       $680 = $spec$select1049$i&255;
       $681 = ((((((($0)) + 8300|0) + (($242*56)|0)|0)) + 36|0) + ($$49911119$i)|0);
       HEAP8[$681>>0] = $680;
       $682 = (($$49911119$i) + 1)|0;
       $exitcond1193$i = ($682|0)==(19);
       if ($exitcond1193$i) {
        break;
       }
       $$phi$trans$insert1216$i = (($19) + ($682<<2)|0);
       $$pre1217$i = Math_fround(HEAPF32[$$phi$trans$insert1216$i>>2]);
       $$49911119$i = $682;$664 = $$pre1217$i;
      }
      $$010341113$i = Math_fround(0.0);$$61114$i = 0;
      while(1) {
       $683 = (((($0)) + 6432|0) + (($$61114$i*72)|0)|0);
       $$phi$trans$insert1218$i = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 20|0);
       $$pre1219$i = Math_fround(HEAPF32[$$phi$trans$insert1218$i>>2]);
       $$phi$trans$insert1220$i = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 24|0);
       $$pre1221$i = Math_fround(HEAPF32[$$phi$trans$insert1220$i>>2]);
       $$phi$trans$insert1222$i = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 28|0);
       $$pre1223$i = Math_fround(HEAPF32[$$phi$trans$insert1222$i>>2]);
       $$phi$trans$insert1224$i = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 32|0);
       $$pre1225$i = Math_fround(HEAPF32[$$phi$trans$insert1224$i>>2]);
       $$phi$trans$insert1226$i = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 36|0);
       $$pre1227$i = Math_fround(HEAPF32[$$phi$trans$insert1226$i>>2]);
       $$phi$trans$insert1228$i = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 40|0);
       $$pre1229$i = Math_fround(HEAPF32[$$phi$trans$insert1228$i>>2]);
       $$phi$trans$insert1230$i = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 44|0);
       $$pre1231$i = Math_fround(HEAPF32[$$phi$trans$insert1230$i>>2]);
       $$phi$trans$insert1232$i = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 48|0);
       $$pre1233$i = Math_fround(HEAPF32[$$phi$trans$insert1232$i>>2]);
       $$phi$trans$insert1234$i = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 52|0);
       $$pre1235$i = Math_fround(HEAPF32[$$phi$trans$insert1234$i>>2]);
       $684 = Math_fround(HEAPF32[$683>>2]);
       $685 = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 4|0);
       $686 = Math_fround(HEAPF32[$685>>2]);
       $687 = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 8|0);
       $688 = Math_fround(HEAPF32[$687>>2]);
       $689 = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 12|0);
       $690 = Math_fround(HEAPF32[$689>>2]);
       $691 = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 16|0);
       $692 = Math_fround(HEAPF32[$691>>2]);
       $693 = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 56|0);
       $694 = Math_fround(HEAPF32[$693>>2]);
       $695 = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 60|0);
       $696 = Math_fround(HEAPF32[$695>>2]);
       $697 = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 64|0);
       $698 = Math_fround(HEAPF32[$697>>2]);
       $699 = (((((($0)) + 6432|0) + (($$61114$i*72)|0)|0)) + 68|0);
       $700 = Math_fround(HEAPF32[$699>>2]);
       $$010181112$i = Math_fround(9.99999986E+14);$$010201111$i = 0;
       while(1) {
        $701 = (((($0)) + 6432|0) + (($$010201111$i*72)|0)|0);
        $702 = Math_fround(HEAPF32[$701>>2]);
        $703 = Math_fround($684 - $702);
        $704 = Math_fround($703 * $703);
        $705 = Math_fround($704 + Math_fround(0.0));
        $706 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 4|0);
        $707 = Math_fround(HEAPF32[$706>>2]);
        $708 = Math_fround($686 - $707);
        $709 = Math_fround($708 * $708);
        $710 = Math_fround($705 + $709);
        $711 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 8|0);
        $712 = Math_fround(HEAPF32[$711>>2]);
        $713 = Math_fround($688 - $712);
        $714 = Math_fround($713 * $713);
        $715 = Math_fround($710 + $714);
        $716 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 12|0);
        $717 = Math_fround(HEAPF32[$716>>2]);
        $718 = Math_fround($690 - $717);
        $719 = Math_fround($718 * $718);
        $720 = Math_fround($715 + $719);
        $721 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 16|0);
        $722 = Math_fround(HEAPF32[$721>>2]);
        $723 = Math_fround($692 - $722);
        $724 = Math_fround($723 * $723);
        $725 = Math_fround($720 + $724);
        $726 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 20|0);
        $727 = Math_fround(HEAPF32[$726>>2]);
        $728 = Math_fround($$pre1219$i - $727);
        $729 = Math_fround($728 * $728);
        $730 = Math_fround($725 + $729);
        $731 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 24|0);
        $732 = Math_fround(HEAPF32[$731>>2]);
        $733 = Math_fround($$pre1221$i - $732);
        $734 = Math_fround($733 * $733);
        $735 = Math_fround($730 + $734);
        $736 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 28|0);
        $737 = Math_fround(HEAPF32[$736>>2]);
        $738 = Math_fround($$pre1223$i - $737);
        $739 = Math_fround($738 * $738);
        $740 = Math_fround($735 + $739);
        $741 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 32|0);
        $742 = Math_fround(HEAPF32[$741>>2]);
        $743 = Math_fround($$pre1225$i - $742);
        $744 = Math_fround($743 * $743);
        $745 = Math_fround($740 + $744);
        $746 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 36|0);
        $747 = Math_fround(HEAPF32[$746>>2]);
        $748 = Math_fround($$pre1227$i - $747);
        $749 = Math_fround($748 * $748);
        $750 = Math_fround($745 + $749);
        $751 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 40|0);
        $752 = Math_fround(HEAPF32[$751>>2]);
        $753 = Math_fround($$pre1229$i - $752);
        $754 = Math_fround($753 * $753);
        $755 = Math_fround($750 + $754);
        $756 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 44|0);
        $757 = Math_fround(HEAPF32[$756>>2]);
        $758 = Math_fround($$pre1231$i - $757);
        $759 = Math_fround($758 * $758);
        $760 = Math_fround($755 + $759);
        $761 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 48|0);
        $762 = Math_fround(HEAPF32[$761>>2]);
        $763 = Math_fround($$pre1233$i - $762);
        $764 = Math_fround($763 * $763);
        $765 = Math_fround($760 + $764);
        $766 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 52|0);
        $767 = Math_fround(HEAPF32[$766>>2]);
        $768 = Math_fround($$pre1235$i - $767);
        $769 = Math_fround($768 * $768);
        $770 = Math_fround($765 + $769);
        $771 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 56|0);
        $772 = Math_fround(HEAPF32[$771>>2]);
        $773 = Math_fround($694 - $772);
        $774 = Math_fround($773 * $773);
        $775 = Math_fround($770 + $774);
        $776 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 60|0);
        $777 = Math_fround(HEAPF32[$776>>2]);
        $778 = Math_fround($696 - $777);
        $779 = Math_fround($778 * $778);
        $780 = Math_fround($775 + $779);
        $781 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 64|0);
        $782 = Math_fround(HEAPF32[$781>>2]);
        $783 = Math_fround($698 - $782);
        $784 = Math_fround($783 * $783);
        $785 = Math_fround($780 + $784);
        $786 = (((((($0)) + 6432|0) + (($$010201111$i*72)|0)|0)) + 68|0);
        $787 = Math_fround(HEAPF32[$786>>2]);
        $788 = Math_fround($700 - $787);
        $789 = Math_fround($788 * $788);
        $790 = Math_fround($785 + $789);
        $791 = ($$010201111$i|0)==($$61114$i|0);
        $792 = $$010181112$i < $790;
        $793 = $791 | $792;
        $$11019$i = $793 ? $$010181112$i : $790;
        $794 = (($$010201111$i) + 1)|0;
        $exitcond1191$i = ($794|0)==(8);
        if ($exitcond1191$i) {
         break;
        } else {
         $$010181112$i = $$11019$i;$$010201111$i = $794;
        }
       }
       $795 = Math_fround($$010341113$i + $$11019$i);
       $796 = (($$61114$i) + 1)|0;
       $exitcond1192$i = ($796|0)==(8);
       if ($exitcond1192$i) {
        break;
       } else {
        $$010341113$i = $795;$$61114$i = $796;
       }
      }
      $797 = Math_fround($795 * Math_fround(0.125));
      $$op$op$i = Math_fround(Math_fround(1.0) - $$op$i);
      $798 = $218 ? Math_fround(0.998000025) : $$op$op$i;
      $$010211107$i = Math_fround(0.0);$$010221106$i = 0;$$010281105$i = Math_fround(0.0);$$69931108$i = 0;$803 = 4;
      while(1) {
       $799 = (($$69931108$i) + 1)|0;
       $800 = (2288 + ($799<<2)|0);
       $801 = HEAP32[$800>>2]|0;
       $802 = ($801|0)>($803|0);
       if ($802) {
        $$010131103$i = Math_fround(0.0);$$71104$i = $803;
        while(1) {
         $804 = (($23) + ($$71104$i<<3)|0);
         $805 = Math_fround(HEAPF32[$804>>2]);
         $806 = Math_fround($805 * $805);
         $807 = (480 - ($$71104$i))|0;
         $808 = (($23) + ($807<<3)|0);
         $809 = Math_fround(HEAPF32[$808>>2]);
         $810 = Math_fround($809 * $809);
         $811 = Math_fround($806 + $810);
         $812 = (((($23) + ($$71104$i<<3)|0)) + 4|0);
         $813 = Math_fround(HEAPF32[$812>>2]);
         $814 = Math_fround($813 * $813);
         $815 = Math_fround($811 + $814);
         $816 = (((($23) + ($807<<3)|0)) + 4|0);
         $817 = Math_fround(HEAPF32[$816>>2]);
         $818 = Math_fround($817 * $817);
         $819 = Math_fround($815 + $818);
         $820 = Math_fround($$010131103$i + $819);
         $821 = (($$71104$i) + 1)|0;
         $exitcond1188$i = ($821|0)==($801|0);
         if ($exitcond1188$i) {
          $$01013$lcssa$i = $820;
          break;
         } else {
          $$010131103$i = $820;$$71104$i = $821;
         }
        }
       } else {
        $$01013$lcssa$i = Math_fround(0.0);
       }
       $822 = $$010281105$i > $$01013$lcssa$i;
       $823 = $822 ? $$010281105$i : $$01013$lcssa$i;
       $824 = (((($0)) + 7152|0) + ($$69931108$i<<2)|0);
       $825 = Math_fround(HEAPF32[$824>>2]);
       $826 = Math_fround($798 * $825);
       $827 = $826 > $$01013$lcssa$i;
       $$$01013$i = $827 ? $826 : $$01013$lcssa$i;
       HEAPF32[$824>>2] = $$$01013$i;
       $828 = $$01013$lcssa$i > $$$01013$i;
       $829 = $828 ? $$01013$lcssa$i : $$$01013$i;
       $830 = Math_fround($$010211107$i * Math_fround(0.0500000007));
       $831 = $830 > $829;
       $832 = $831 ? $830 : $829;
       $833 = +$829;
       $834 = +$832;
       $835 = $834 * 0.10000000000000001;
       $836 = $835 < $833;
       $837 = Math_fround($829 * Math_fround(1.0E+9));
       $838 = $837 > $823;
       $or$cond1051$i = $838 & $836;
       if ($or$cond1051$i) {
        $839 = (($801) - ($803))|0;
        $840 = (Math_fround(($839|0)));
        $841 = Math_fround($104 * $840);
        $842 = $829 > $841;
        if ($842) {
         $$11023$i = $799;
        } else {
         $$11023$i = $$010221106$i;
        }
       } else {
        $$11023$i = $$010221106$i;
       }
       $exitcond1189$i = ($799|0)==(18);
       if ($exitcond1189$i) {
        break;
       } else {
        $$010211107$i = $832;$$010221106$i = $$11023$i;$$010281105$i = $823;$$69931108$i = $799;$803 = $801;
       }
      }
      $843 = Math_fround($797 / Math_fround(18.0));
      $844 = (Math_fround(Math_sqrt((Math_fround($843)))));
      $845 = HEAP32[$37>>2]|0;
      $846 = ($845|0)==(48000);
      if ($846) {
       $847 = Math_fround($238 * Math_fround(1.73611115E-5));
       $848 = HEAP32[$105>>2]|0;
       $849 = ($848|0)==(20);
       $850 = $849 ? Math_fround(0.0299999993) : Math_fround(0.0700000003);
       $851 = $823 > $847;
       $852 = $851 ? $823 : $847;
       $853 = Math_fround(HEAPF32[$106>>2]);
       $854 = Math_fround($798 * $853);
       $855 = $854 > $847;
       $$1052$i = $855 ? $854 : $847;
       HEAPF32[$106>>2] = $$1052$i;
       $856 = $847 > $$1052$i;
       $857 = $856 ? $847 : $$1052$i;
       $858 = Math_fround($832 * Math_fround(0.0500000007));
       $859 = $858 > $857;
       $860 = $859 ? $858 : $857;
       $861 = Math_fround($850 * $860);
       $862 = $857 > $861;
       $863 = Math_fround($857 * Math_fround(1.0E+9));
       $864 = $863 > $852;
       $or$cond1054$i = $864 & $862;
       $865 = $857 > $107;
       $or$cond1056$i = $865 & $or$cond1054$i;
       $$21024$i = $or$cond1056$i ? 20 : $$11023$i;
       $866 = ($$21024$i|0)>(16);
       $spec$select1057$i = $866 ? 20 : $$21024$i;
       $$41026$i = $spec$select1057$i;
      } else {
       $$41026$i = $$11023$i;
      }
      $867 = HEAP32[$36>>2]|0;
      $868 = +$510;
      $869 = (+_llvm_log10_f64((+$868)));
      $870 = Math_fround($869);
      $871 = Math_fround($870 * Math_fround(20.0));
      $872 = Math_fround(HEAPF32[$108>>2]);
      $873 = Math_fround($872 + Math_fround(-0.00300000003));
      $874 = $873 > $871;
      $875 = $874 ? $873 : $871;
      HEAPF32[$108>>2] = $875;
      $876 = Math_fround(Math_fround(1.0) - $217);
      $877 = Math_fround(HEAPF32[$109>>2]);
      $878 = Math_fround($876 * $877);
      $879 = Math_fround($875 + Math_fround(-30.0));
      $880 = $871 < $879;
      $881 = Math_fround($217 + $878);
      $storemerge1037$i = $880 ? $881 : $878;
      HEAPF32[$109>>2] = $storemerge1037$i;
      $$pre1238$i = Math_fround(HEAPF32[$$phi$trans$insert1237$i>>2]);
      $$pre1240$i = Math_fround(HEAPF32[$$phi$trans$insert1239$i>>2]);
      $$pre1242$i = Math_fround(HEAPF32[$$phi$trans$insert1241$i>>2]);
      $$pre1244$i = Math_fround(HEAPF32[$$phi$trans$insert1243$i>>2]);
      $$pre1246$i = Math_fround(HEAPF32[$$phi$trans$insert1245$i>>2]);
      $$pre1248$i = Math_fround(HEAPF32[$$phi$trans$insert1247$i>>2]);
      $$pre1250$i = Math_fround(HEAPF32[$$phi$trans$insert1249$i>>2]);
      $$pre1252$i = Math_fround(HEAPF32[$$phi$trans$insert1251$i>>2]);
      $$pre1254$i = Math_fround(HEAPF32[$$phi$trans$insert1253$i>>2]);
      $$pre1256$i = Math_fround(HEAPF32[$$phi$trans$insert1255$i>>2]);
      $$pre1258$i = Math_fround(HEAPF32[$$phi$trans$insert1257$i>>2]);
      $$pre1260$i = Math_fround(HEAPF32[$$phi$trans$insert1259$i>>2]);
      $882 = Math_fround(HEAPF32[$13>>2]);
      $883 = Math_fround(HEAPF32[$110>>2]);
      $884 = Math_fround(HEAPF32[$111>>2]);
      $885 = Math_fround(HEAPF32[$112>>2]);
      $886 = Math_fround($882 * Math_fround(0.25));
      $887 = Math_fround($886 + Math_fround(0.0));
      $888 = Math_fround($883 * Math_fround(0.25));
      $889 = Math_fround($887 + $888);
      $890 = Math_fround($$pre1238$i * Math_fround(0.25));
      $891 = Math_fround($889 + $890);
      $892 = Math_fround($$pre1240$i * Math_fround(0.25));
      $893 = Math_fround($891 + $892);
      $894 = Math_fround($$pre1242$i * Math_fround(0.25));
      $895 = Math_fround($893 + $894);
      $896 = Math_fround($$pre1244$i * Math_fround(0.25));
      $897 = Math_fround($895 + $896);
      $898 = Math_fround($$pre1246$i * Math_fround(0.25));
      $899 = Math_fround($897 + $898);
      $900 = Math_fround($$pre1248$i * Math_fround(0.25));
      $901 = Math_fround($899 + $900);
      $902 = Math_fround($$pre1250$i * Math_fround(0.25));
      $903 = Math_fround($901 + $902);
      $904 = Math_fround($$pre1252$i * Math_fround(0.25));
      $905 = Math_fround($903 + $904);
      $906 = Math_fround($$pre1254$i * Math_fround(0.25));
      $907 = Math_fround($905 + $906);
      $908 = Math_fround($$pre1256$i * Math_fround(0.25));
      $909 = Math_fround($907 + $908);
      $910 = Math_fround($$pre1258$i * Math_fround(0.25));
      $911 = Math_fround($909 + $910);
      $912 = Math_fround($$pre1260$i * Math_fround(0.25));
      $913 = Math_fround($911 + $912);
      $914 = Math_fround($884 * Math_fround(0.25));
      $915 = Math_fround($913 + $914);
      $916 = Math_fround($885 * Math_fround(0.25));
      $917 = Math_fround($915 + $916);
      HEAPF32[$14>>2] = $917;
      $918 = Math_fround($882 * Math_fround(0.351850986));
      $919 = Math_fround($918 + Math_fround(0.0));
      $920 = Math_fround($883 * Math_fround(0.338330001));
      $921 = Math_fround($919 + $920);
      $922 = Math_fround($$pre1238$i * Math_fround(0.311805993));
      $923 = Math_fround($921 + $922);
      $924 = Math_fround($$pre1240$i * Math_fround(0.273299992));
      $925 = Math_fround($923 + $924);
      $926 = Math_fround($$pre1242$i * Math_fround(0.224291995));
      $927 = Math_fround($925 + $926);
      $928 = Math_fround($$pre1244$i * Math_fround(0.166664004));
      $929 = Math_fround($927 + $928);
      $930 = Math_fround($$pre1246$i * Math_fround(0.102631003));
      $931 = Math_fround($929 + $930);
      $932 = Math_fround($$pre1248$i * Math_fround(0.0346539989));
      $933 = Math_fround($931 + $932);
      $934 = Math_fround($$pre1250$i * Math_fround(-0.0346539989));
      $935 = Math_fround($933 + $934);
      $936 = Math_fround($$pre1252$i * Math_fround(-0.102631003));
      $937 = Math_fround($935 + $936);
      $938 = Math_fround($$pre1254$i * Math_fround(-0.166664004));
      $939 = Math_fround($937 + $938);
      $940 = Math_fround($$pre1256$i * Math_fround(-0.224291995));
      $941 = Math_fround($939 + $940);
      $942 = Math_fround($$pre1258$i * Math_fround(-0.273299992));
      $943 = Math_fround($941 + $942);
      $944 = Math_fround($$pre1260$i * Math_fround(-0.311805993));
      $945 = Math_fround($943 + $944);
      $946 = Math_fround($884 * Math_fround(-0.338330001));
      $947 = Math_fround($945 + $946);
      $948 = Math_fround($885 * Math_fround(-0.351850986));
      $949 = Math_fround($947 + $948);
      HEAPF32[$119>>2] = $949;
      $950 = Math_fround($882 * Math_fround(0.346760005));
      $951 = Math_fround($950 + Math_fround(0.0));
      $952 = Math_fround($883 * Math_fround(0.293969005));
      $953 = Math_fround($951 + $952);
      $954 = Math_fround($$pre1238$i * Math_fround(0.196424007));
      $955 = Math_fround($953 + $954);
      $956 = Math_fround($$pre1240$i * Math_fround(0.0689750015));
      $957 = Math_fround($955 + $956);
      $958 = Math_fround($$pre1242$i * Math_fround(-0.0689750015));
      $959 = Math_fround($957 + $958);
      $960 = Math_fround($$pre1244$i * Math_fround(-0.196424007));
      $961 = Math_fround($959 + $960);
      $962 = Math_fround($$pre1246$i * Math_fround(-0.293969005));
      $963 = Math_fround($961 + $962);
      $964 = Math_fround($$pre1248$i * Math_fround(-0.346760005));
      $965 = Math_fround($963 + $964);
      $966 = Math_fround($$pre1250$i * Math_fround(-0.346760005));
      $967 = Math_fround($965 + $966);
      $968 = Math_fround($$pre1252$i * Math_fround(-0.293969005));
      $969 = Math_fround($967 + $968);
      $970 = Math_fround($$pre1254$i * Math_fround(-0.196424007));
      $971 = Math_fround($969 + $970);
      $972 = Math_fround($$pre1256$i * Math_fround(-0.0689750015));
      $973 = Math_fround($971 + $972);
      $974 = Math_fround($$pre1258$i * Math_fround(0.0689750015));
      $975 = Math_fround($973 + $974);
      $976 = Math_fround($$pre1260$i * Math_fround(0.196424007));
      $977 = Math_fround($975 + $976);
      $978 = Math_fround($884 * Math_fround(0.293969005));
      $979 = Math_fround($977 + $978);
      $980 = Math_fround($885 * Math_fround(0.346760005));
      $981 = Math_fround($979 + $980);
      HEAPF32[$126>>2] = $981;
      $982 = Math_fround($882 * Math_fround(0.338330001));
      $983 = Math_fround($982 + Math_fround(0.0));
      $984 = Math_fround($883 * Math_fround(0.224291995));
      $985 = Math_fround($983 + $984);
      $986 = Math_fround($$pre1238$i * Math_fround(0.0346539989));
      $987 = Math_fround($985 + $986);
      $988 = Math_fround($$pre1240$i * Math_fround(-0.166664004));
      $989 = Math_fround($987 + $988);
      $990 = Math_fround($$pre1242$i * Math_fround(-0.311805993));
      $991 = Math_fround($989 + $990);
      $992 = Math_fround($$pre1244$i * Math_fround(-0.351850986));
      $993 = Math_fround($991 + $992);
      $994 = Math_fround($$pre1246$i * Math_fround(-0.273299992));
      $995 = Math_fround($993 + $994);
      $996 = Math_fround($$pre1248$i * Math_fround(-0.102631003));
      $997 = Math_fround($995 + $996);
      $998 = Math_fround($$pre1250$i * Math_fround(0.102631003));
      $999 = Math_fround($997 + $998);
      $1000 = Math_fround($$pre1252$i * Math_fround(0.273299992));
      $1001 = Math_fround($999 + $1000);
      $1002 = Math_fround($$pre1254$i * Math_fround(0.351850986));
      $1003 = Math_fround($1001 + $1002);
      $1004 = Math_fround($$pre1256$i * Math_fround(0.311805993));
      $1005 = Math_fround($1003 + $1004);
      $1006 = Math_fround($$pre1258$i * Math_fround(0.166664004));
      $1007 = Math_fround($1005 + $1006);
      $1008 = Math_fround($$pre1260$i * Math_fround(-0.0346539989));
      $1009 = Math_fround($1007 + $1008);
      $1010 = Math_fround($884 * Math_fround(-0.224291995));
      $1011 = Math_fround($1009 + $1010);
      $1012 = Math_fround($885 * Math_fround(-0.338330001));
      $1013 = Math_fround($1011 + $1012);
      HEAPF32[$133>>2] = $1013;
      $1014 = Math_fround($882 * Math_fround(0.326640993));
      $1015 = Math_fround($1014 + Math_fround(0.0));
      $1016 = Math_fround($883 * Math_fround(0.135298997));
      $1017 = Math_fround($1015 + $1016);
      $1018 = Math_fround($$pre1238$i * Math_fround(-0.135298997));
      $1019 = Math_fround($1017 + $1018);
      $1020 = Math_fround($$pre1240$i * Math_fround(-0.326640993));
      $1021 = Math_fround($1019 + $1020);
      $1022 = Math_fround($$pre1242$i * Math_fround(-0.326640993));
      $1023 = Math_fround($1021 + $1022);
      $1024 = Math_fround($$pre1244$i * Math_fround(-0.135298997));
      $1025 = Math_fround($1023 + $1024);
      $1026 = Math_fround($$pre1246$i * Math_fround(0.135298997));
      $1027 = Math_fround($1025 + $1026);
      $1028 = Math_fround($$pre1248$i * Math_fround(0.326640993));
      $1029 = Math_fround($1027 + $1028);
      $1030 = Math_fround($$pre1250$i * Math_fround(0.326640993));
      $1031 = Math_fround($1029 + $1030);
      $1032 = Math_fround($$pre1252$i * Math_fround(0.135298997));
      $1033 = Math_fround($1031 + $1032);
      $1034 = Math_fround($$pre1254$i * Math_fround(-0.135298997));
      $1035 = Math_fround($1033 + $1034);
      $1036 = Math_fround($$pre1256$i * Math_fround(-0.326640993));
      $1037 = Math_fround($1035 + $1036);
      $1038 = Math_fround($$pre1258$i * Math_fround(-0.326640993));
      $1039 = Math_fround($1037 + $1038);
      $1040 = Math_fround($$pre1260$i * Math_fround(-0.135298997));
      $1041 = Math_fround($1039 + $1040);
      $1042 = Math_fround($884 * Math_fround(0.135298997));
      $1043 = Math_fround($1041 + $1042);
      $1044 = Math_fround($885 * Math_fround(0.326640993));
      $1045 = Math_fround($1043 + $1044);
      HEAPF32[$163>>2] = $1045;
      $1046 = Math_fround($882 * Math_fround(0.311805993));
      $1047 = Math_fround($1046 + Math_fround(0.0));
      $1048 = Math_fround($883 * Math_fround(0.0346539989));
      $1049 = Math_fround($1047 + $1048);
      $1050 = Math_fround($$pre1238$i * Math_fround(-0.273299992));
      $1051 = Math_fround($1049 + $1050);
      $1052 = Math_fround($$pre1240$i * Math_fround(-0.338330001));
      $1053 = Math_fround($1051 + $1052);
      $1054 = Math_fround($$pre1242$i * Math_fround(-0.102631003));
      $1055 = Math_fround($1053 + $1054);
      $1056 = Math_fround($$pre1244$i * Math_fround(0.224291995));
      $1057 = Math_fround($1055 + $1056);
      $1058 = Math_fround($$pre1246$i * Math_fround(0.351850986));
      $1059 = Math_fround($1057 + $1058);
      $1060 = Math_fround($$pre1248$i * Math_fround(0.166664004));
      $1061 = Math_fround($1059 + $1060);
      $1062 = Math_fround($$pre1250$i * Math_fround(-0.166664004));
      $1063 = Math_fround($1061 + $1062);
      $1064 = Math_fround($$pre1252$i * Math_fround(-0.351850986));
      $1065 = Math_fround($1063 + $1064);
      $1066 = Math_fround($$pre1254$i * Math_fround(-0.224291995));
      $1067 = Math_fround($1065 + $1066);
      $1068 = Math_fround($$pre1256$i * Math_fround(0.102631003));
      $1069 = Math_fround($1067 + $1068);
      $1070 = Math_fround($$pre1258$i * Math_fround(0.338330001));
      $1071 = Math_fround($1069 + $1070);
      $1072 = Math_fround($$pre1260$i * Math_fround(0.273299992));
      $1073 = Math_fround($1071 + $1072);
      $1074 = Math_fround($884 * Math_fround(-0.0346539989));
      $1075 = Math_fround($1073 + $1074);
      $1076 = Math_fround($885 * Math_fround(-0.311805993));
      $1077 = Math_fround($1075 + $1076);
      HEAPF32[$168>>2] = $1077;
      $1078 = Math_fround($882 * Math_fround(0.293969005));
      $1079 = Math_fround($1078 + Math_fround(0.0));
      $1080 = Math_fround($883 * Math_fround(-0.0689750015));
      $1081 = Math_fround($1079 + $1080);
      $1082 = Math_fround($$pre1238$i * Math_fround(-0.346760005));
      $1083 = Math_fround($1081 + $1082);
      $1084 = Math_fround($$pre1240$i * Math_fround(-0.196424007));
      $1085 = Math_fround($1083 + $1084);
      $1086 = Math_fround($$pre1242$i * Math_fround(0.196424007));
      $1087 = Math_fround($1085 + $1086);
      $1088 = Math_fround($$pre1244$i * Math_fround(0.346760005));
      $1089 = Math_fround($1087 + $1088);
      $1090 = Math_fround($$pre1246$i * Math_fround(0.0689750015));
      $1091 = Math_fround($1089 + $1090);
      $1092 = Math_fround($$pre1248$i * Math_fround(-0.293969005));
      $1093 = Math_fround($1091 + $1092);
      $1094 = Math_fround($$pre1250$i * Math_fround(-0.293969005));
      $1095 = Math_fround($1093 + $1094);
      $1096 = Math_fround($$pre1252$i * Math_fround(0.0689750015));
      $1097 = Math_fround($1095 + $1096);
      $1098 = Math_fround($$pre1254$i * Math_fround(0.346760005));
      $1099 = Math_fround($1097 + $1098);
      $1100 = Math_fround($$pre1256$i * Math_fround(0.196424007));
      $1101 = Math_fround($1099 + $1100);
      $1102 = Math_fround($$pre1258$i * Math_fround(-0.196424007));
      $1103 = Math_fround($1101 + $1102);
      $1104 = Math_fround($$pre1260$i * Math_fround(-0.346760005));
      $1105 = Math_fround($1103 + $1104);
      $1106 = Math_fround($884 * Math_fround(-0.0689750015));
      $1107 = Math_fround($1105 + $1106);
      $1108 = Math_fround($885 * Math_fround(0.293969005));
      $1109 = Math_fround($1107 + $1108);
      HEAPF32[$173>>2] = $1109;
      $1110 = Math_fround($882 * Math_fround(0.273299992));
      $1111 = Math_fround($1110 + Math_fround(0.0));
      $1112 = Math_fround($883 * Math_fround(-0.166664004));
      $1113 = Math_fround($1111 + $1112);
      $1114 = Math_fround($$pre1238$i * Math_fround(-0.338330001));
      $1115 = Math_fround($1113 + $1114);
      $1116 = Math_fround($$pre1240$i * Math_fround(0.0346539989));
      $1117 = Math_fround($1115 + $1116);
      $1118 = Math_fround($$pre1242$i * Math_fround(0.351850986));
      $1119 = Math_fround($1117 + $1118);
      $1120 = Math_fround($$pre1244$i * Math_fround(0.102631003));
      $1121 = Math_fround($1119 + $1120);
      $1122 = Math_fround($$pre1246$i * Math_fround(-0.311805993));
      $1123 = Math_fround($1121 + $1122);
      $1124 = Math_fround($$pre1248$i * Math_fround(-0.224291995));
      $1125 = Math_fround($1123 + $1124);
      $1126 = Math_fround($$pre1250$i * Math_fround(0.224291995));
      $1127 = Math_fround($1125 + $1126);
      $1128 = Math_fround($$pre1252$i * Math_fround(0.311805993));
      $1129 = Math_fround($1127 + $1128);
      $1130 = Math_fround($$pre1254$i * Math_fround(-0.102631003));
      $1131 = Math_fround($1129 + $1130);
      $1132 = Math_fround($$pre1256$i * Math_fround(-0.351850986));
      $1133 = Math_fround($1131 + $1132);
      $1134 = Math_fround($$pre1258$i * Math_fround(-0.0346539989));
      $1135 = Math_fround($1133 + $1134);
      $1136 = Math_fround($$pre1260$i * Math_fround(0.338330001));
      $1137 = Math_fround($1135 + $1136);
      $1138 = Math_fround($884 * Math_fround(0.166664004));
      $1139 = Math_fround($1137 + $1138);
      $1140 = Math_fround($885 * Math_fround(-0.273299992));
      $1141 = Math_fround($1139 + $1140);
      HEAPF32[$178>>2] = $1141;
      $1142 = ($867|0)<(3);
      $$pre1262$i = Math_fround(HEAPF32[$63>>2]);
      $$pre1264$i = Math_fround(HEAPF32[$62>>2]);
      $$pre1266$i = Math_fround(HEAPF32[$65>>2]);
      $$pre1268$i = Math_fround(HEAPF32[$64>>2]);
      $1143 = Math_fround(HEAPF32[$49>>2]);
      $1144 = Math_fround(HEAPF32[$48>>2]);
      $1145 = Math_fround($1143 + $1144);
      $1146 = Math_fround(HEAPF32[$51>>2]);
      $1147 = Math_fround(HEAPF32[$50>>2]);
      $1148 = Math_fround($1146 + $1147);
      $1149 = Math_fround(HEAPF32[$53>>2]);
      $1150 = Math_fround(HEAPF32[$52>>2]);
      $1151 = Math_fround($1149 + $1150);
      $1152 = Math_fround(HEAPF32[$55>>2]);
      $1153 = Math_fround(HEAPF32[$54>>2]);
      $1154 = Math_fround($1152 + $1153);
      $1155 = Math_fround(HEAPF32[$57>>2]);
      $1156 = Math_fround(HEAPF32[$56>>2]);
      $1157 = Math_fround($1155 + $1156);
      $1158 = Math_fround(HEAPF32[$59>>2]);
      $1159 = Math_fround(HEAPF32[$58>>2]);
      $1160 = Math_fround($1158 + $1159);
      $1161 = Math_fround(HEAPF32[$61>>2]);
      $1162 = Math_fround(HEAPF32[$60>>2]);
      $1163 = Math_fround($1161 + $1162);
      $1164 = Math_fround($$pre1262$i + $$pre1264$i);
      $1165 = Math_fround($$pre1266$i + $$pre1268$i);
      $1166 = Math_fround(HEAPF32[$67>>2]);
      $1167 = Math_fround(HEAPF32[$66>>2]);
      $1168 = Math_fround($1166 + $1167);
      $1169 = Math_fround(HEAPF32[$69>>2]);
      $1170 = Math_fround(HEAPF32[$68>>2]);
      $1171 = Math_fround($1169 + $1170);
      $1172 = Math_fround(HEAPF32[$71>>2]);
      $1173 = Math_fround(HEAPF32[$70>>2]);
      $1174 = Math_fround($1172 + $1173);
      $1175 = Math_fround(HEAPF32[$73>>2]);
      $1176 = Math_fround(HEAPF32[$72>>2]);
      $1177 = Math_fround($1175 + $1176);
      $1178 = Math_fround(HEAPF32[$75>>2]);
      $1179 = Math_fround(HEAPF32[$74>>2]);
      $1180 = Math_fround($1178 + $1179);
      $1181 = Math_fround(HEAPF32[$77>>2]);
      $1182 = Math_fround(HEAPF32[$76>>2]);
      $1183 = Math_fround($1181 + $1182);
      $1184 = Math_fround(HEAPF32[$79>>2]);
      $1185 = Math_fround(HEAPF32[$78>>2]);
      $1186 = Math_fround($1184 + $1185);
      $1187 = Math_fround($1145 * Math_fround(0.125));
      $1188 = Math_fround($1187 + Math_fround(0.0));
      $1189 = Math_fround($1148 * Math_fround(0.125));
      $1190 = Math_fround($1188 + $1189);
      $1191 = Math_fround($1151 * Math_fround(0.125));
      $1192 = Math_fround($1190 + $1191);
      $1193 = Math_fround($1154 * Math_fround(0.125));
      $1194 = Math_fround($1192 + $1193);
      $1195 = Math_fround($1157 * Math_fround(0.125));
      $1196 = Math_fround($1194 + $1195);
      $1197 = Math_fround($1160 * Math_fround(0.125));
      $1198 = Math_fround($1196 + $1197);
      $1199 = Math_fround($1163 * Math_fround(0.125));
      $1200 = Math_fround($1198 + $1199);
      $1201 = Math_fround($1164 * Math_fround(0.125));
      $1202 = Math_fround($1200 + $1201);
      $1203 = Math_fround($1165 * Math_fround(0.125));
      $1204 = Math_fround($1202 + $1203);
      $1205 = Math_fround($1168 * Math_fround(0.125));
      $1206 = Math_fround($1204 + $1205);
      $1207 = Math_fround($1171 * Math_fround(0.125));
      $1208 = Math_fround($1206 + $1207);
      $1209 = Math_fround($1174 * Math_fround(0.125));
      $1210 = Math_fround($1208 + $1209);
      $1211 = Math_fround($1177 * Math_fround(0.125));
      $1212 = Math_fround($1210 + $1211);
      $1213 = Math_fround($1180 * Math_fround(0.125));
      $1214 = Math_fround($1212 + $1213);
      $1215 = Math_fround($1183 * Math_fround(0.125));
      $1216 = Math_fround($1214 + $1215);
      $1217 = Math_fround($1186 * Math_fround(0.125));
      $1218 = Math_fround($1216 + $1217);
      HEAPF32[$18>>2] = $1218;
      $1219 = Math_fround($1145 * Math_fround(0.175925493));
      $1220 = Math_fround($1219 + Math_fround(0.0));
      $1221 = Math_fround($1148 * Math_fround(0.169165));
      $1222 = Math_fround($1220 + $1221);
      $1223 = Math_fround($1151 * Math_fround(0.155902997));
      $1224 = Math_fround($1222 + $1223);
      $1225 = Math_fround($1154 * Math_fround(0.136649996));
      $1226 = Math_fround($1224 + $1225);
      $1227 = Math_fround($1157 * Math_fround(0.112145998));
      $1228 = Math_fround($1226 + $1227);
      $1229 = Math_fround($1160 * Math_fround(0.0833320021));
      $1230 = Math_fround($1228 + $1229);
      $1231 = Math_fround($1163 * Math_fround(0.0513155013));
      $1232 = Math_fround($1230 + $1231);
      $1233 = Math_fround($1164 * Math_fround(0.0173269995));
      $1234 = Math_fround($1232 + $1233);
      $1235 = Math_fround($1165 * Math_fround(-0.0173269995));
      $1236 = Math_fround($1234 + $1235);
      $1237 = Math_fround($1168 * Math_fround(-0.0513155013));
      $1238 = Math_fround($1236 + $1237);
      $1239 = Math_fround($1171 * Math_fround(-0.0833320021));
      $1240 = Math_fround($1238 + $1239);
      $1241 = Math_fround($1174 * Math_fround(-0.112145998));
      $1242 = Math_fround($1240 + $1241);
      $1243 = Math_fround($1177 * Math_fround(-0.136649996));
      $1244 = Math_fround($1242 + $1243);
      $1245 = Math_fround($1180 * Math_fround(-0.155902997));
      $1246 = Math_fround($1244 + $1245);
      $1247 = Math_fround($1183 * Math_fround(-0.169165));
      $1248 = Math_fround($1246 + $1247);
      $1249 = Math_fround($1186 * Math_fround(-0.175925493));
      $1250 = Math_fround($1248 + $1249);
      HEAPF32[$156>>2] = $1250;
      $1251 = Math_fround($1145 * Math_fround(0.173380002));
      $1252 = Math_fround($1251 + Math_fround(0.0));
      $1253 = Math_fround($1148 * Math_fround(0.146984503));
      $1254 = Math_fround($1252 + $1253);
      $1255 = Math_fround($1151 * Math_fround(0.0982120037));
      $1256 = Math_fround($1254 + $1255);
      $1257 = Math_fround($1154 * Math_fround(0.0344875008));
      $1258 = Math_fround($1256 + $1257);
      $1259 = Math_fround($1157 * Math_fround(-0.0344875008));
      $1260 = Math_fround($1258 + $1259);
      $1261 = Math_fround($1160 * Math_fround(-0.0982120037));
      $1262 = Math_fround($1260 + $1261);
      $1263 = Math_fround($1163 * Math_fround(-0.146984503));
      $1264 = Math_fround($1262 + $1263);
      $1265 = Math_fround($1164 * Math_fround(-0.173380002));
      $1266 = Math_fround($1264 + $1265);
      $1267 = Math_fround($1165 * Math_fround(-0.173380002));
      $1268 = Math_fround($1266 + $1267);
      $1269 = Math_fround($1168 * Math_fround(-0.146984503));
      $1270 = Math_fround($1268 + $1269);
      $1271 = Math_fround($1171 * Math_fround(-0.0982120037));
      $1272 = Math_fround($1270 + $1271);
      $1273 = Math_fround($1174 * Math_fround(-0.0344875008));
      $1274 = Math_fround($1272 + $1273);
      $1275 = Math_fround($1177 * Math_fround(0.0344875008));
      $1276 = Math_fround($1274 + $1275);
      $1277 = Math_fround($1180 * Math_fround(0.0982120037));
      $1278 = Math_fround($1276 + $1277);
      $1279 = Math_fround($1183 * Math_fround(0.146984503));
      $1280 = Math_fround($1278 + $1279);
      $1281 = Math_fround($1186 * Math_fround(0.173380002));
      $1282 = Math_fround($1280 + $1281);
      HEAPF32[$157>>2] = $1282;
      $1283 = Math_fround($1145 * Math_fround(0.169165));
      $1284 = Math_fround($1283 + Math_fround(0.0));
      $1285 = Math_fround($1148 * Math_fround(0.112145998));
      $1286 = Math_fround($1284 + $1285);
      $1287 = Math_fround($1151 * Math_fround(0.0173269995));
      $1288 = Math_fround($1286 + $1287);
      $1289 = Math_fround($1154 * Math_fround(-0.0833320021));
      $1290 = Math_fround($1288 + $1289);
      $1291 = Math_fround($1157 * Math_fround(-0.155902997));
      $1292 = Math_fround($1290 + $1291);
      $1293 = Math_fround($1160 * Math_fround(-0.175925493));
      $1294 = Math_fround($1292 + $1293);
      $1295 = Math_fround($1163 * Math_fround(-0.136649996));
      $1296 = Math_fround($1294 + $1295);
      $1297 = Math_fround($1164 * Math_fround(-0.0513155013));
      $1298 = Math_fround($1296 + $1297);
      $1299 = Math_fround($1165 * Math_fround(0.0513155013));
      $1300 = Math_fround($1298 + $1299);
      $1301 = Math_fround($1168 * Math_fround(0.136649996));
      $1302 = Math_fround($1300 + $1301);
      $1303 = Math_fround($1171 * Math_fround(0.175925493));
      $1304 = Math_fround($1302 + $1303);
      $1305 = Math_fround($1174 * Math_fround(0.155902997));
      $1306 = Math_fround($1304 + $1305);
      $1307 = Math_fround($1177 * Math_fround(0.0833320021));
      $1308 = Math_fround($1306 + $1307);
      $1309 = Math_fround($1180 * Math_fround(-0.0173269995));
      $1310 = Math_fround($1308 + $1309);
      $1311 = Math_fround($1183 * Math_fround(-0.112145998));
      $1312 = Math_fround($1310 + $1311);
      $1313 = Math_fround($1186 * Math_fround(-0.169165));
      $1314 = Math_fround($1312 + $1313);
      HEAPF32[$158>>2] = $1314;
      $1315 = Math_fround($1145 * Math_fround(0.163320497));
      $1316 = Math_fround($1315 + Math_fround(0.0));
      $1317 = Math_fround($1148 * Math_fround(0.0676494986));
      $1318 = Math_fround($1316 + $1317);
      $1319 = Math_fround($1151 * Math_fround(-0.0676494986));
      $1320 = Math_fround($1318 + $1319);
      $1321 = Math_fround($1154 * Math_fround(-0.163320497));
      $1322 = Math_fround($1320 + $1321);
      $1323 = Math_fround($1157 * Math_fround(-0.163320497));
      $1324 = Math_fround($1322 + $1323);
      $1325 = Math_fround($1160 * Math_fround(-0.0676494986));
      $1326 = Math_fround($1324 + $1325);
      $1327 = Math_fround($1163 * Math_fround(0.0676494986));
      $1328 = Math_fround($1326 + $1327);
      $1329 = Math_fround($1164 * Math_fround(0.163320497));
      $1330 = Math_fround($1328 + $1329);
      $1331 = Math_fround($1165 * Math_fround(0.163320497));
      $1332 = Math_fround($1330 + $1331);
      $1333 = Math_fround($1168 * Math_fround(0.0676494986));
      $1334 = Math_fround($1332 + $1333);
      $1335 = Math_fround($1171 * Math_fround(-0.0676494986));
      $1336 = Math_fround($1334 + $1335);
      $1337 = Math_fround($1174 * Math_fround(-0.163320497));
      $1338 = Math_fround($1336 + $1337);
      $1339 = Math_fround($1177 * Math_fround(-0.163320497));
      $1340 = Math_fround($1338 + $1339);
      $1341 = Math_fround($1180 * Math_fround(-0.0676494986));
      $1342 = Math_fround($1340 + $1341);
      $1343 = Math_fround($1183 * Math_fround(0.0676494986));
      $1344 = Math_fround($1342 + $1343);
      $1345 = Math_fround($1186 * Math_fround(0.163320497));
      $1346 = Math_fround($1344 + $1345);
      HEAPF32[$206>>2] = $1346;
      $1347 = Math_fround($1145 * Math_fround(0.155902997));
      $1348 = Math_fround($1347 + Math_fround(0.0));
      $1349 = Math_fround($1148 * Math_fround(0.0173269995));
      $1350 = Math_fround($1348 + $1349);
      $1351 = Math_fround($1151 * Math_fround(-0.136649996));
      $1352 = Math_fround($1350 + $1351);
      $1353 = Math_fround($1154 * Math_fround(-0.169165));
      $1354 = Math_fround($1352 + $1353);
      $1355 = Math_fround($1157 * Math_fround(-0.0513155013));
      $1356 = Math_fround($1354 + $1355);
      $1357 = Math_fround($1160 * Math_fround(0.112145998));
      $1358 = Math_fround($1356 + $1357);
      $1359 = Math_fround($1163 * Math_fround(0.175925493));
      $1360 = Math_fround($1358 + $1359);
      $1361 = Math_fround($1164 * Math_fround(0.0833320021));
      $1362 = Math_fround($1360 + $1361);
      $1363 = Math_fround($1165 * Math_fround(-0.0833320021));
      $1364 = Math_fround($1362 + $1363);
      $1365 = Math_fround($1168 * Math_fround(-0.175925493));
      $1366 = Math_fround($1364 + $1365);
      $1367 = Math_fround($1171 * Math_fround(-0.112145998));
      $1368 = Math_fround($1366 + $1367);
      $1369 = Math_fround($1174 * Math_fround(0.0513155013));
      $1370 = Math_fround($1368 + $1369);
      $1371 = Math_fround($1177 * Math_fround(0.169165));
      $1372 = Math_fround($1370 + $1371);
      $1373 = Math_fround($1180 * Math_fround(0.136649996));
      $1374 = Math_fround($1372 + $1373);
      $1375 = Math_fround($1183 * Math_fround(-0.0173269995));
      $1376 = Math_fround($1374 + $1375);
      $1377 = Math_fround($1186 * Math_fround(-0.155902997));
      $1378 = Math_fround($1376 + $1377);
      HEAPF32[$207>>2] = $1378;
      $1379 = Math_fround($1145 * Math_fround(0.146984503));
      $1380 = Math_fround($1379 + Math_fround(0.0));
      $1381 = Math_fround($1148 * Math_fround(-0.0344875008));
      $1382 = Math_fround($1380 + $1381);
      $1383 = Math_fround($1151 * Math_fround(-0.173380002));
      $1384 = Math_fround($1382 + $1383);
      $1385 = Math_fround($1154 * Math_fround(-0.0982120037));
      $1386 = Math_fround($1384 + $1385);
      $1387 = Math_fround($1157 * Math_fround(0.0982120037));
      $1388 = Math_fround($1386 + $1387);
      $1389 = Math_fround($1160 * Math_fround(0.173380002));
      $1390 = Math_fround($1388 + $1389);
      $1391 = Math_fround($1163 * Math_fround(0.0344875008));
      $1392 = Math_fround($1390 + $1391);
      $1393 = Math_fround($1164 * Math_fround(-0.146984503));
      $1394 = Math_fround($1392 + $1393);
      $1395 = Math_fround($1165 * Math_fround(-0.146984503));
      $1396 = Math_fround($1394 + $1395);
      $1397 = Math_fround($1168 * Math_fround(0.0344875008));
      $1398 = Math_fround($1396 + $1397);
      $1399 = Math_fround($1171 * Math_fround(0.173380002));
      $1400 = Math_fround($1398 + $1399);
      $1401 = Math_fround($1174 * Math_fround(0.0982120037));
      $1402 = Math_fround($1400 + $1401);
      $1403 = Math_fround($1177 * Math_fround(-0.0982120037));
      $1404 = Math_fround($1402 + $1403);
      $1405 = Math_fround($1180 * Math_fround(-0.173380002));
      $1406 = Math_fround($1404 + $1405);
      $1407 = Math_fround($1183 * Math_fround(-0.0344875008));
      $1408 = Math_fround($1406 + $1407);
      $1409 = Math_fround($1186 * Math_fround(0.146984503));
      $1410 = Math_fround($1408 + $1409);
      HEAPF32[$208>>2] = $1410;
      $1411 = Math_fround($1145 * Math_fround(0.136649996));
      $1412 = Math_fround($1411 + Math_fround(0.0));
      $1413 = Math_fround($1148 * Math_fround(-0.0833320021));
      $1414 = Math_fround($1412 + $1413);
      $1415 = Math_fround($1151 * Math_fround(-0.169165));
      $1416 = Math_fround($1414 + $1415);
      $1417 = Math_fround($1154 * Math_fround(0.0173269995));
      $1418 = Math_fround($1416 + $1417);
      $1419 = Math_fround($1157 * Math_fround(0.175925493));
      $1420 = Math_fround($1418 + $1419);
      $1421 = Math_fround($1160 * Math_fround(0.0513155013));
      $1422 = Math_fround($1420 + $1421);
      $1423 = Math_fround($1163 * Math_fround(-0.155902997));
      $1424 = Math_fround($1422 + $1423);
      $1425 = Math_fround($1164 * Math_fround(-0.112145998));
      $1426 = Math_fround($1424 + $1425);
      $1427 = Math_fround($1165 * Math_fround(0.112145998));
      $1428 = Math_fround($1426 + $1427);
      $1429 = Math_fround($1168 * Math_fround(0.155902997));
      $1430 = Math_fround($1428 + $1429);
      $1431 = Math_fround($1171 * Math_fround(-0.0513155013));
      $1432 = Math_fround($1430 + $1431);
      $1433 = Math_fround($1174 * Math_fround(-0.175925493));
      $1434 = Math_fround($1432 + $1433);
      $1435 = Math_fround($1177 * Math_fround(-0.0173269995));
      $1436 = Math_fround($1434 + $1435);
      $1437 = Math_fround($1180 * Math_fround(0.169165));
      $1438 = Math_fround($1436 + $1437);
      $1439 = Math_fround($1183 * Math_fround(0.0833320021));
      $1440 = Math_fround($1438 + $1439);
      $1441 = Math_fround($1186 * Math_fround(-0.136649996));
      $1442 = Math_fround($1440 + $1441);
      HEAPF32[$209>>2] = $1442;
      $spec$select1058$i = $1142 ? 20 : $$41026$i;
      $1443 = Math_fround($585 / Math_fround(18.0));
      $1444 = ($867|0)<(10);
      $spec$store$select$i = $1444 ? Math_fround(0.5) : $1443;
      $1445 = Math_fround($506 / Math_fround(18.0));
      $1446 = Math_fround(Math_fround(1.0) - $1445);
      $1447 = Math_fround($1446 * $spec$store$select$i);
      $1448 = Math_fround($1445 + $1447);
      HEAPF32[$415>>2] = $1448;
      $1449 = Math_fround($$01001$$i / Math_fround(9.0));
      $1450 = Math_fround(HEAPF32[$113>>2]);
      $1451 = Math_fround($1450 * Math_fround(0.800000011));
      $1452 = $1449 > $1451;
      $$1059$i = $1452 ? $1449 : $1451;
      HEAPF32[$113>>2] = $$1059$i;
      $1453 = Math_fround($618 * Math_fround(0.015625));
      $1454 = (((((($0)) + 8300|0) + (($242*56)|0)|0)) + 8|0);
      HEAPF32[$1454>>2] = $1453;
      $1455 = HEAP32[$97>>2]|0;
      $1456 = (($1455) + 1)|0;
      $1457 = (($1456|0) % 8)&-1;
      HEAP32[$97>>2] = $1457;
      $1458 = ($867|0)<(9999);
      $1459 = (($867) + 1)|0;
      $1460 = $1458 ? $1459 : 10000;
      HEAP32[$36>>2] = $1460;
      $1461 = (((((($0)) + 8300|0) + (($242*56)|0)|0)) + 4|0);
      HEAPF32[$1461>>2] = $$1059$i;
      $1462 = Math_fround(HEAPF32[$14>>2]);
      $1463 = Math_fround(HEAPF32[$114>>2]);
      $1464 = Math_fround($1462 + $1463);
      $1465 = Math_fround($1464 * Math_fround(0.122989997));
      $1466 = Math_fround(HEAPF32[$115>>2]);
      $1467 = Math_fround(HEAPF32[$116>>2]);
      $1468 = Math_fround($1466 + $1467);
      $1469 = Math_fround($1468 * Math_fround(0.491950005));
      $1470 = Math_fround($1469 - $1465);
      $1471 = Math_fround(HEAPF32[$117>>2]);
      $1472 = Math_fround($1471 * Math_fround(0.696929991));
      $1473 = Math_fround($1472 + $1470);
      $1474 = Math_fround(HEAPF32[$118>>2]);
      $1475 = Math_fround($1474 * Math_fround(1.43490005));
      $1476 = Math_fround($1473 - $1475);
      HEAPF32[$15>>2] = $1476;
      $1477 = Math_fround(HEAPF32[$119>>2]);
      $1478 = Math_fround(HEAPF32[$120>>2]);
      $1479 = Math_fround($1477 + $1478);
      $1480 = Math_fround($1479 * Math_fround(0.122989997));
      $1481 = Math_fround(HEAPF32[$121>>2]);
      $1482 = Math_fround(HEAPF32[$122>>2]);
      $1483 = Math_fround($1481 + $1482);
      $1484 = Math_fround($1483 * Math_fround(0.491950005));
      $1485 = Math_fround($1484 - $1480);
      $1486 = Math_fround(HEAPF32[$123>>2]);
      $1487 = Math_fround($1486 * Math_fround(0.696929991));
      $1488 = Math_fround($1487 + $1485);
      $1489 = Math_fround(HEAPF32[$124>>2]);
      $1490 = Math_fround($1489 * Math_fround(1.43490005));
      $1491 = Math_fround($1488 - $1490);
      HEAPF32[$125>>2] = $1491;
      $1492 = Math_fround(HEAPF32[$126>>2]);
      $1493 = Math_fround(HEAPF32[$127>>2]);
      $1494 = Math_fround($1492 + $1493);
      $1495 = Math_fround($1494 * Math_fround(0.122989997));
      $1496 = Math_fround(HEAPF32[$128>>2]);
      $1497 = Math_fround(HEAPF32[$129>>2]);
      $1498 = Math_fround($1496 + $1497);
      $1499 = Math_fround($1498 * Math_fround(0.491950005));
      $1500 = Math_fround($1499 - $1495);
      $1501 = Math_fround(HEAPF32[$130>>2]);
      $1502 = Math_fround($1501 * Math_fround(0.696929991));
      $1503 = Math_fround($1502 + $1500);
      $1504 = Math_fround(HEAPF32[$131>>2]);
      $1505 = Math_fround($1504 * Math_fround(1.43490005));
      $1506 = Math_fround($1503 - $1505);
      HEAPF32[$132>>2] = $1506;
      $1507 = Math_fround(HEAPF32[$133>>2]);
      $1508 = Math_fround(HEAPF32[$134>>2]);
      $1509 = Math_fround($1507 + $1508);
      $1510 = Math_fround($1509 * Math_fround(0.122989997));
      $1511 = Math_fround(HEAPF32[$135>>2]);
      $1512 = Math_fround(HEAPF32[$136>>2]);
      $1513 = Math_fround($1511 + $1512);
      $1514 = Math_fround($1513 * Math_fround(0.491950005));
      $1515 = Math_fround($1514 - $1510);
      $1516 = Math_fround(HEAPF32[$137>>2]);
      $1517 = Math_fround($1516 * Math_fround(0.696929991));
      $1518 = Math_fround($1517 + $1515);
      $1519 = Math_fround(HEAPF32[$138>>2]);
      $1520 = Math_fround($1519 * Math_fround(1.43490005));
      $1521 = Math_fround($1518 - $1520);
      HEAPF32[$139>>2] = $1521;
      $1522 = Math_fround($596 / Math_fround(18.0));
      $1523 = Math_fround(Math_fround(1.0) - $215);
      $1524 = Math_fround($1523 * $1474);
      $1525 = Math_fround($215 * $1462);
      $1526 = Math_fround($1525 + $1524);
      HEAPF32[$118>>2] = $1526;
      $1527 = Math_fround($1523 * $1489);
      $1528 = Math_fround($215 * $1477);
      $1529 = Math_fround($1528 + $1527);
      HEAPF32[$124>>2] = $1529;
      $1530 = Math_fround($1523 * $1504);
      $1531 = Math_fround($215 * $1492);
      $1532 = Math_fround($1531 + $1530);
      HEAPF32[$131>>2] = $1532;
      $1533 = Math_fround($1523 * $1519);
      $1534 = Math_fround($215 * $1507);
      $1535 = Math_fround($1534 + $1533);
      HEAPF32[$138>>2] = $1535;
      $1536 = Math_fround($1462 - $1463);
      $1537 = Math_fround($1536 * Math_fround(0.632459998));
      $1538 = Math_fround($1466 - $1467);
      $1539 = Math_fround($1538 * Math_fround(0.316229999));
      $1540 = Math_fround($1537 + $1539);
      HEAPF32[$140>>2] = $1540;
      $1541 = Math_fround($1477 - $1478);
      $1542 = Math_fround($1541 * Math_fround(0.632459998));
      $1543 = Math_fround($1481 - $1482);
      $1544 = Math_fround($1543 * Math_fround(0.316229999));
      $1545 = Math_fround($1542 + $1544);
      HEAPF32[$141>>2] = $1545;
      $1546 = Math_fround($1492 - $1493);
      $1547 = Math_fround($1546 * Math_fround(0.632459998));
      $1548 = Math_fround($1496 - $1497);
      $1549 = Math_fround($1548 * Math_fround(0.316229999));
      $1550 = Math_fround($1547 + $1549);
      HEAPF32[$142>>2] = $1550;
      $1551 = Math_fround($1507 - $1508);
      $1552 = Math_fround($1551 * Math_fround(0.632459998));
      $1553 = Math_fround($1511 - $1512);
      $1554 = Math_fround($1553 * Math_fround(0.316229999));
      $1555 = Math_fround($1552 + $1554);
      HEAPF32[$143>>2] = $1555;
      $1556 = Math_fround($1464 * Math_fround(0.53451997));
      $1557 = Math_fround($1468 * Math_fround(0.267259985));
      $1558 = Math_fround($1556 - $1557);
      $1559 = Math_fround($1471 * Math_fround(0.53451997));
      $1560 = Math_fround($1558 - $1559);
      HEAPF32[$144>>2] = $1560;
      $1561 = Math_fround($1479 * Math_fround(0.53451997));
      $1562 = Math_fround($1483 * Math_fround(0.267259985));
      $1563 = Math_fround($1561 - $1562);
      $1564 = Math_fround($1486 * Math_fround(0.53451997));
      $1565 = Math_fround($1563 - $1564);
      HEAPF32[$145>>2] = $1565;
      $1566 = Math_fround($1494 * Math_fround(0.53451997));
      $1567 = Math_fround($1498 * Math_fround(0.267259985));
      $1568 = Math_fround($1566 - $1567);
      $1569 = Math_fround($1501 * Math_fround(0.53451997));
      $1570 = Math_fround($1568 - $1569);
      HEAPF32[$146>>2] = $1570;
      $1571 = ($1460|0)>(5);
      $1572 = Math_fround(HEAPF32[$147>>2]);
      if ($1571) {
       $1573 = Math_fround($1523 * $1572);
       $1574 = Math_fround($215 * $1476);
       $1575 = Math_fround($1476 * $1574);
       $1576 = Math_fround($1575 + $1573);
       HEAPF32[$147>>2] = $1576;
       $1577 = Math_fround(HEAPF32[$148>>2]);
       $1578 = Math_fround($1523 * $1577);
       $1579 = Math_fround($215 * $1491);
       $1580 = Math_fround($1491 * $1579);
       $1581 = Math_fround($1580 + $1578);
       HEAPF32[$148>>2] = $1581;
       $1582 = Math_fround(HEAPF32[$149>>2]);
       $1583 = Math_fround($1523 * $1582);
       $1584 = Math_fround($215 * $1506);
       $1585 = Math_fround($1506 * $1584);
       $1586 = Math_fround($1585 + $1583);
       HEAPF32[$149>>2] = $1586;
       $1587 = Math_fround(HEAPF32[$150>>2]);
       $1588 = Math_fround($1523 * $1587);
       $1589 = Math_fround($215 * $1521);
       $1590 = Math_fround($1521 * $1589);
       $1591 = Math_fround($1590 + $1588);
       HEAPF32[$150>>2] = $1591;
       $1592 = Math_fround(HEAPF32[$151>>2]);
       $1593 = Math_fround($1523 * $1592);
       $1594 = Math_fround($215 * $1540);
       $1595 = Math_fround($1540 * $1594);
       $1596 = Math_fround($1595 + $1593);
       HEAPF32[$151>>2] = $1596;
       $1597 = Math_fround(HEAPF32[$152>>2]);
       $1598 = Math_fround($1523 * $1597);
       $1599 = Math_fround($215 * $1545);
       $1600 = Math_fround($1545 * $1599);
       $1601 = Math_fround($1600 + $1598);
       HEAPF32[$152>>2] = $1601;
       $1602 = Math_fround(HEAPF32[$153>>2]);
       $1603 = Math_fround($1523 * $1602);
       $1604 = Math_fround($215 * $1550);
       $1605 = Math_fround($1550 * $1604);
       $1606 = Math_fround($1605 + $1603);
       HEAPF32[$153>>2] = $1606;
       $1607 = Math_fround(HEAPF32[$154>>2]);
       $1608 = Math_fround($1523 * $1607);
       $1609 = Math_fround($215 * $1555);
       $1610 = Math_fround($1555 * $1609);
       $1611 = Math_fround($1610 + $1608);
       HEAPF32[$154>>2] = $1611;
       $1612 = Math_fround(HEAPF32[$155>>2]);
       $1613 = Math_fround($1523 * $1612);
       $1614 = Math_fround($215 * $1560);
       $1615 = Math_fround($1560 * $1614);
       $1616 = Math_fround($1615 + $1613);
       HEAPF32[$155>>2] = $1616;
       $1641 = $1576;$1644 = $1581;$1647 = $1586;$1650 = $1591;$1653 = $1596;$1656 = $1601;$1659 = $1606;$1662 = $1616;
      } else {
       $$pre65 = Math_fround(HEAPF32[$148>>2]);
       $$pre66 = Math_fround(HEAPF32[$149>>2]);
       $$pre67 = Math_fround(HEAPF32[$150>>2]);
       $$pre68 = Math_fround(HEAPF32[$151>>2]);
       $$pre69 = Math_fround(HEAPF32[$152>>2]);
       $$pre70 = Math_fround(HEAPF32[$153>>2]);
       $$pre71 = Math_fround(HEAPF32[$155>>2]);
       $1641 = $1572;$1644 = $$pre65;$1647 = $$pre66;$1650 = $$pre67;$1653 = $$pre68;$1656 = $$pre69;$1659 = $$pre70;$1662 = $$pre71;
      }
      $1617 = Math_fround(HEAPF32[$18>>2]);
      $1618 = Math_fround($1462 - $1617);
      HEAPF32[$15>>2] = $1618;
      $1619 = Math_fround(HEAPF32[$156>>2]);
      $1620 = Math_fround($1477 - $1619);
      HEAPF32[$125>>2] = $1620;
      $1621 = Math_fround(HEAPF32[$157>>2]);
      $1622 = Math_fround($1492 - $1621);
      HEAPF32[$132>>2] = $1622;
      $1623 = Math_fround(HEAPF32[$158>>2]);
      $1624 = Math_fround($1507 - $1623);
      HEAPF32[$139>>2] = $1624;
      HEAPF32[$114>>2] = $1467;
      HEAPF32[$116>>2] = $1471;
      HEAPF32[$117>>2] = $1466;
      HEAPF32[$115>>2] = $1462;
      HEAPF32[$120>>2] = $1482;
      HEAPF32[$122>>2] = $1486;
      HEAPF32[$123>>2] = $1481;
      HEAPF32[$121>>2] = $1477;
      HEAPF32[$127>>2] = $1497;
      HEAPF32[$129>>2] = $1501;
      HEAPF32[$130>>2] = $1496;
      HEAPF32[$128>>2] = $1492;
      HEAPF32[$134>>2] = $1512;
      HEAPF32[$136>>2] = $1516;
      HEAPF32[$137>>2] = $1511;
      HEAPF32[$135>>2] = $1507;
      $1625 = HEAP32[$159>>2]|0;
      HEAP32[$160>>2] = $1625;
      $1626 = HEAP32[$161>>2]|0;
      HEAP32[$159>>2] = $1626;
      $1627 = HEAP32[$162>>2]|0;
      HEAP32[$161>>2] = $1627;
      $1628 = HEAP32[$163>>2]|0;
      HEAP32[$162>>2] = $1628;
      $1629 = HEAP32[$164>>2]|0;
      HEAP32[$165>>2] = $1629;
      $1630 = HEAP32[$166>>2]|0;
      HEAP32[$164>>2] = $1630;
      $1631 = HEAP32[$167>>2]|0;
      HEAP32[$166>>2] = $1631;
      $1632 = HEAP32[$168>>2]|0;
      HEAP32[$167>>2] = $1632;
      $1633 = HEAP32[$169>>2]|0;
      HEAP32[$170>>2] = $1633;
      $1634 = HEAP32[$171>>2]|0;
      HEAP32[$169>>2] = $1634;
      $1635 = HEAP32[$172>>2]|0;
      HEAP32[$171>>2] = $1635;
      $1636 = HEAP32[$173>>2]|0;
      HEAP32[$172>>2] = $1636;
      $1637 = HEAP32[$174>>2]|0;
      HEAP32[$175>>2] = $1637;
      $1638 = HEAP32[$176>>2]|0;
      HEAP32[$174>>2] = $1638;
      $1639 = HEAP32[$177>>2]|0;
      HEAP32[$176>>2] = $1639;
      $1640 = HEAP32[$178>>2]|0;
      HEAP32[$177>>2] = $1640;
      $1642 = (Math_fround(Math_sqrt((Math_fround($1641)))));
      $1643 = Math_fround($1642 + Math_fround(-5.68494701));
      HEAPF32[$179>>2] = $1643;
      $1645 = (Math_fround(Math_sqrt((Math_fround($1644)))));
      $1646 = Math_fround($1645 + Math_fround(-3.47528791));
      HEAPF32[$180>>2] = $1646;
      $1648 = (Math_fround(Math_sqrt((Math_fround($1647)))));
      $1649 = Math_fround($1648 + Math_fround(-1.77063406));
      HEAPF32[$181>>2] = $1649;
      $1651 = (Math_fround(Math_sqrt((Math_fround($1650)))));
      $1652 = Math_fround($1651 + Math_fround(-1.59978402));
      HEAPF32[$182>>2] = $1652;
      $1654 = (Math_fround(Math_sqrt((Math_fround($1653)))));
      $1655 = Math_fround($1654 + Math_fround(-3.77321506));
      HEAPF32[$183>>2] = $1655;
      $1657 = (Math_fround(Math_sqrt((Math_fround($1656)))));
      $1658 = Math_fround($1657 + Math_fround(-2.16331291));
      HEAPF32[$184>>2] = $1658;
      $1660 = (Math_fround(Math_sqrt((Math_fround($1659)))));
      $1661 = Math_fround($1660 + Math_fround(-1.26075602));
      HEAPF32[$185>>2] = $1661;
      $1663 = (Math_fround(Math_sqrt((Math_fround($1662)))));
      $1664 = Math_fround($1663 + Math_fround(-1.91879499));
      HEAPF32[$187>>2] = $1664;
      $1665 = Math_fround($844 + Math_fround(-0.779999971));
      HEAPF32[$186>>2] = $1665;
      $1666 = Math_fround(HEAPF32[$1461>>2]);
      $1667 = Math_fround($1666 + Math_fround(-0.154723004));
      HEAPF32[$188>>2] = $1667;
      $1668 = Math_fround(HEAPF32[$415>>2]);
      $1669 = Math_fround($1668 + Math_fround(-0.724642992));
      HEAPF32[$189>>2] = $1669;
      $1670 = Math_fround($1522 + Math_fround(-0.743717014));
      HEAPF32[$190>>2] = $1670;
      $1671 = Math_fround(HEAPF32[$1454>>2]);
      $1672 = Math_fround($1671 + Math_fround(0.0692159981));
      HEAPF32[$191>>2] = $1672;
      $1673 = Math_fround($storemerge1037$i + Math_fround(-0.067929998));
      HEAPF32[$192>>2] = $1673;
      _mlp_process(36336,$15,$16);
      $1674 = Math_fround(HEAPF32[$16>>2]);
      $1675 = Math_fround($1674 + Math_fround(1.0));
      $1676 = Math_fround($1675 * Math_fround(0.5));
      $1677 = Math_fround(HEAPF32[$193>>2]);
      $1678 = Math_fround($1677 * Math_fround(0.5));
      $1679 = Math_fround($1678 + Math_fround(0.5));
      $1680 = Math_fround($1679 * $1679);
      HEAPF32[$193>>2] = $1680;
      $1681 = (((((($0)) + 8300|0) + (($242*56)|0)|0)) + 32|0);
      HEAPF32[$1681>>2] = $1680;
      $1682 = Math_fround(HEAPF32[$39>>2]);
      $1683 = Math_fround($1682 * Math_fround(0.00100000005));
      $1684 = Math_fround(Math_fround(1.0) - $1682);
      $1685 = Math_fround($1684 * Math_fround(0.00999999977));
      $1686 = Math_fround($1683 + $1685);
      $1687 = $1680 > Math_fround(0.949999988);
      $1688 = $1687 ? Math_fround(0.949999988) : $1680;
      $1689 = $1688 < Math_fround(0.0500000007);
      $1690 = $1689 ? Math_fround(0.0500000007) : $1688;
      $1691 = Math_fround(HEAPF32[$194>>2]);
      $1692 = $1691 > Math_fround(0.949999988);
      $1693 = $1692 ? Math_fround(0.949999988) : $1691;
      $1694 = $1693 < Math_fround(0.0500000007);
      $brmerge$i = $1692 | $1694;
      $$mux$i = $1694 ? Math_fround(0.0500000007) : Math_fround(0.949999988);
      $1695 = $brmerge$i ? $$mux$i : $1691;
      $1696 = Math_fround($1690 - $1695);
      $1697 = (Math_fround(Math_abs((Math_fround($1696)))));
      $1698 = Math_fround($1697 * Math_fround(0.0500000007));
      $1699 = Math_fround(Math_fround(1.0) - $1695);
      $1700 = Math_fround($1690 * $1699);
      $1701 = Math_fround(Math_fround(1.0) - $1690);
      $1702 = Math_fround($1701 * $1695);
      $1703 = Math_fround($1702 + $1700);
      $1704 = Math_fround($1698 / $1703);
      $1705 = Math_fround($1704 + Math_fround(0.0199999996));
      $1706 = Math_fround(Math_fround(1.0) - $1691);
      $1707 = Math_fround(Math_fround(1.0) - $1686);
      $1708 = Math_fround($1706 * $1707);
      $1709 = Math_fround($1691 * $1686);
      $1710 = Math_fround($1709 + $1708);
      $1711 = Math_fround($1691 * $1707);
      $1712 = Math_fround($1706 * $1686);
      $1713 = Math_fround($1712 + $1711);
      $1714 = Math_fround(Math_fround(1.0) - $1680);
      $1715 = +$1714;
      $1716 = +$1705;
      $1717 = (+_pow($1715,$1716));
      $1718 = Math_fround($1717);
      $1719 = Math_fround($1710 * $1718);
      $1720 = +$1680;
      $1721 = (+_pow($1720,$1716));
      $1722 = Math_fround($1721);
      $1723 = Math_fround($1713 * $1722);
      $1724 = Math_fround($1719 + $1723);
      $1725 = Math_fround($1723 / $1724);
      HEAPF32[$194>>2] = $1725;
      $1726 = (((((($0)) + 8300|0) + (($242*56)|0)|0)) + 24|0);
      HEAPF32[$1726>>2] = $1725;
      $1727 = Math_fround($1676 * $1725);
      $1728 = Math_fround(Math_fround(1.0) - $1725);
      $1729 = Math_fround($1728 * Math_fround(0.5));
      $1730 = Math_fround($1727 + $1729);
      HEAPF32[$16>>2] = $1730;
      $1731 = $1730 > Math_fround(0.949999988);
      $1732 = $1731 ? Math_fround(0.949999988) : $1730;
      $1733 = $1732 < Math_fround(0.0500000007);
      $1734 = $1733 ? Math_fround(0.0500000007) : $1732;
      $1735 = $1682 > Math_fround(0.949999988);
      $1736 = $1735 ? Math_fround(0.949999988) : $1682;
      $1737 = $1736 < Math_fround(0.0500000007);
      $brmerge1073$i = $1735 | $1737;
      $$mux1074$i = $1737 ? Math_fround(0.0500000007) : Math_fround(0.949999988);
      $1738 = $brmerge1073$i ? $$mux1074$i : $1682;
      $1739 = Math_fround($1734 - $1738);
      $1740 = (Math_fround(Math_abs((Math_fround($1739)))));
      $1741 = Math_fround($1740 * Math_fround(0.0500000007));
      $1742 = Math_fround(Math_fround(1.0) - $1738);
      $1743 = Math_fround($1742 * $1734);
      $1744 = Math_fround(Math_fround(1.0) - $1734);
      $1745 = Math_fround($1738 * $1744);
      $1746 = Math_fround($1743 + $1745);
      $1747 = Math_fround($1741 / $1746);
      $1748 = Math_fround($1747 + Math_fround(0.0199999996));
      $1749 = Math_fround($1684 * Math_fround(0.999899983));
      $1750 = Math_fround($1682 * Math_fround(9.99999974E-5));
      $1751 = Math_fround($1750 + $1749);
      $1752 = Math_fround($1682 * Math_fround(0.999899983));
      $1753 = Math_fround($1684 * Math_fround(9.99999974E-5));
      $1754 = Math_fround($1752 + $1753);
      $1755 = Math_fround(Math_fround(1.0) - $1730);
      $1756 = +$1755;
      $1757 = +$1748;
      $1758 = (+_pow($1756,$1757));
      $1759 = Math_fround($1758);
      $1760 = Math_fround($1751 * $1759);
      $1761 = +$1730;
      $1762 = (+_pow($1761,$1757));
      $1763 = Math_fround($1762);
      $1764 = Math_fround($1754 * $1763);
      $1765 = Math_fround($1760 + $1764);
      $1766 = Math_fround($1764 / $1765);
      HEAPF32[$39>>2] = $1766;
      $1767 = (((((($0)) + 8300|0) + (($242*56)|0)|0)) + 20|0);
      HEAPF32[$1767>>2] = $1766;
      $1768 = HEAP32[$36>>2]|0;
      $1769 = ($1768|0)==(1);
      if ($1769) {
       $1770 = HEAP32[$38>>2]|0;
       $1771 = ($1770|0)==(2048);
       $$1060$i = $1771 ? Math_fround(0.100000001) : Math_fround(0.625);
       HEAPF32[$195>>2] = $$1060$i;
       $1772 = Math_fround(Math_fround(1.0) - $$1060$i);
       HEAPF32[$196>>2] = $1772;
       $1775 = $1772;$1778 = $$1060$i;
      } else {
       $$pre1270$i = Math_fround(HEAPF32[$196>>2]);
       $$pre1272$i = Math_fround(HEAPF32[$195>>2]);
       $1775 = $$pre1270$i;$1778 = $$pre1272$i;
      }
      $1773 = Math_fround(HEAPF32[$197>>2]);
      $1774 = Math_fround($1775 + $1773);
      $1776 = Math_fround(HEAPF32[$198>>2]);
      $1777 = Math_fround($1778 + $1776);
      $1779 = Math_fround($1774 * Math_fround(0.999899983));
      $1780 = Math_fround($1779 * $1759);
      HEAPF32[$196>>2] = $1780;
      $1781 = Math_fround($1777 * Math_fround(0.999899983));
      $1782 = Math_fround($1781 * $1763);
      HEAPF32[$195>>2] = $1782;
      $$181088$i = 1;
      while(1) {
       $1783 = (($$181088$i) + 1)|0;
       $1784 = (((($0)) + 7456|0) + ($1783<<2)|0);
       $1785 = Math_fround(HEAPF32[$1784>>2]);
       $1786 = Math_fround($1785 * $1759);
       $1787 = (((($0)) + 7456|0) + ($$181088$i<<2)|0);
       HEAPF32[$1787>>2] = $1786;
       $1788 = (((($0)) + 7856|0) + ($1783<<2)|0);
       $1789 = Math_fround(HEAPF32[$1788>>2]);
       $1790 = Math_fround($1789 * $1763);
       $1791 = (((($0)) + 7856|0) + ($$181088$i<<2)|0);
       HEAPF32[$1791>>2] = $1790;
       $exitcond1170$i = ($1783|0)==(99);
       if ($exitcond1170$i) {
        break;
       } else {
        $$181088$i = $1783;
       }
      }
      $1792 = Math_fround($1777 * Math_fround(9.99999974E-5));
      $1793 = Math_fround($1792 * $1759);
      HEAPF32[$199>>2] = $1793;
      $1794 = Math_fround($1774 * Math_fround(9.99999974E-5));
      $1795 = Math_fround($1794 * $1763);
      HEAPF32[$200>>2] = $1795;
      $$09961086$i = Math_fround(9.99999968E-21);$$191087$i = 0;
      while(1) {
       $1796 = (((($0)) + 7456|0) + ($$191087$i<<2)|0);
       $1797 = Math_fround(HEAPF32[$1796>>2]);
       $1798 = (((($0)) + 7856|0) + ($$191087$i<<2)|0);
       $1799 = Math_fround(HEAPF32[$1798>>2]);
       $1800 = Math_fround($1797 + $1799);
       $1801 = Math_fround($$09961086$i + $1800);
       $1802 = (($$191087$i) + 1)|0;
       $exitcond1169$i = ($1802|0)==(100);
       if ($exitcond1169$i) {
        break;
       } else {
        $$09961086$i = $1801;$$191087$i = $1802;
       }
      }
      $1803 = Math_fround(Math_fround(1.0) / $1801);
      $$201085$i = 0;
      while(1) {
       $1804 = (((($0)) + 7456|0) + ($$201085$i<<2)|0);
       $1805 = Math_fround(HEAPF32[$1804>>2]);
       $1806 = Math_fround($1803 * $1805);
       HEAPF32[$1804>>2] = $1806;
       $1807 = (((($0)) + 7856|0) + ($$201085$i<<2)|0);
       $1808 = Math_fround(HEAPF32[$1807>>2]);
       $1809 = Math_fround($1803 * $1808);
       HEAPF32[$1807>>2] = $1809;
       $1810 = (($$201085$i) + 1)|0;
       $exitcond$i = ($1810|0)==(100);
       if ($exitcond$i) {
        break;
       } else {
        $$201085$i = $1810;
       }
      }
      $1811 = $1680 > Math_fround(0.75);
      if ($1811) {
       $1812 = +$1766;
       $1813 = $1812 > 0.90000000000000002;
       if ($1813) {
        $1814 = HEAP32[$202>>2]|0;
        $1815 = (($1814) + 1)|0;
        $1816 = (Math_fround(($1815|0)));
        $1817 = Math_fround(Math_fround(1.0) / $1816);
        $1818 = ($1814|0)<(499);
        $spec$select1061$i = $1818 ? $1815 : 500;
        HEAP32[$202>>2] = $spec$select1061$i;
        $1819 = Math_fround(HEAPF32[$203>>2]);
        $1820 = Math_fround($1730 - $1819);
        $1821 = $1820 < Math_fround(-0.200000003);
        $1822 = $1821 ? Math_fround(-0.200000003) : $1820;
        $1823 = Math_fround($1817 * $1822);
        $1824 = Math_fround($1819 + $1823);
        HEAPF32[$203>>2] = $1824;
       }
       $1825 = $1812 < 0.10000000000000001;
       if ($1825) {
        $1826 = HEAP32[$204>>2]|0;
        $1827 = (($1826) + 1)|0;
        $1828 = (Math_fround(($1827|0)));
        $1829 = Math_fround(Math_fround(1.0) / $1828);
        $1830 = ($1826|0)<(499);
        $spec$select1062$i = $1830 ? $1827 : 500;
        HEAP32[$204>>2] = $spec$select1062$i;
        $1831 = Math_fround(HEAPF32[$205>>2]);
        $1832 = Math_fround($1730 - $1831);
        $1833 = $1832 > Math_fround(0.200000003);
        $1834 = $1833 ? Math_fround(0.200000003) : $1832;
        $1835 = Math_fround($1829 * $1834);
        $1836 = Math_fround($1831 + $1835);
        HEAPF32[$205>>2] = $1836;
       }
      }
      $1837 = $1766 > Math_fround(0.5);
      $1838 = $1837&1;
      HEAP32[$201>>2] = $1838;
      $1839 = (((((($0)) + 8300|0) + (($242*56)|0)|0)) + 28|0);
      HEAP32[$1839>>2] = $spec$select1058$i;
      HEAP32[$105>>2] = $spec$select1058$i;
      $1840 = (((((($0)) + 8300|0) + (($242*56)|0)|0)) + 12|0);
      HEAPF32[$1840>>2] = $1445;
      $$sink = 1;
     }
    } while(0);
    $1841 = (((($0)) + 8300|0) + (($242*56)|0)|0);
    HEAP32[$1841>>2] = $$sink;
   }
   $1842 = (($$03851) + ($35))|0;
   $1843 = (($$052) - ($35))|0;
   $1844 = ($1843|0)>(0);
   if ($1844) {
    $$03851 = $1842;$$052 = $1843;
   } else {
    break;
   }
  }
 }
 $1845 = (($$) - ($4))|0;
 HEAP32[$31>>2] = $1845;
 HEAP32[$11>>2] = 0;
 _tonality_get_info($0,$11,$4);
 STACKTOP = sp;return;
}
function _downmix_and_resample($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0 = Math_fround(0), $$055 = 0, $$056 = Math_fround(0), $$05767 = 0, $$058 = Math_fround(0), $$05859$i = 0, $$05859$i62 = 0, $$059 = 0, $$060$i = Math_fround(0), $$166 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $10 = 0, $100 = Math_fround(0), $101 = Math_fround(0), $102 = Math_fround(0), $103 = 0, $104 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = Math_fround(0), $23 = Math_fround(0), $24 = 0, $25 = 0, $26 = 0, $27 = Math_fround(0), $28 = Math_fround(0), $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = Math_fround(0), $37 = Math_fround(0), $38 = Math_fround(0), $39 = Math_fround(0), $40 = Math_fround(0), $41 = Math_fround(0), $42 = 0, $43 = 0, $44 = Math_fround(0), $45 = Math_fround(0), $46 = Math_fround(0), $47 = Math_fround(0), $48 = Math_fround(0), $49 = Math_fround(0), $50 = Math_fround(0), $51 = Math_fround(0), $52 = Math_fround(0);
 var $53 = Math_fround(0), $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = Math_fround(0), $59 = Math_fround(0), $60 = Math_fround(0), $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = Math_fround(0), $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = Math_fround(0), $87 = Math_fround(0), $88 = 0, $89 = 0, $90 = Math_fround(0), $91 = Math_fround(0), $92 = Math_fround(0);
 var $93 = Math_fround(0), $94 = Math_fround(0), $95 = Math_fround(0), $96 = Math_fround(0), $97 = Math_fround(0), $98 = Math_fround(0), $99 = Math_fround(0), $exitcond = 0, $exitcond$i = 0, $exitcond$i63 = 0, $exitcond71 = 0, $spec$select = Math_fround(0), $switch$split2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $10 = ($4|0)==(0);
 if ($10) {
  $$0 = Math_fround(0.0);
  STACKTOP = sp;return (Math_fround($$0));
 }
 $11 = ($9|0)==(48000);
 if ($11) {
  $12 = $4 << 1;
  $13 = $5 << 1;
  $$055 = $12;$$059 = $13;
 } else {
  $14 = ($9|0)==(16000);
  if ($14) {
   $15 = $5 << 1;
   $16 = $4 << 1;
   $17 = (($16|0) / 3)&-1;
   $18 = (($15|0) / 3)&-1;
   $$055 = $17;$$059 = $18;
  } else {
   $$055 = $4;$$059 = $5;
  }
 }
 $19 = (_llvm_stacksave()|0);
 $$alloca_mul = $$055<<2;
 $20 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 ftCall_viiiiiii($0|0,$1,$20,$$055,$$059,$6,$7,$8);
 $21 = ($7|0)==(-2);
 if ($21) {
  $22 = (Math_fround(($8|0)));
  $23 = Math_fround(Math_fround(3.05175781E-5) / $22);
  $$058 = $23;
 } else {
  $24 = ($7|0)>(-1);
  $spec$select = $24 ? Math_fround(1.52587891E-5) : Math_fround(3.05175781E-5);
  $$058 = $spec$select;
 }
 $25 = ($$055|0)>(0);
 if ($25) {
  $$05767 = 0;
  while(1) {
   $26 = (($20) + ($$05767<<2)|0);
   $27 = Math_fround(HEAPF32[$26>>2]);
   $28 = Math_fround($$058 * $27);
   HEAPF32[$26>>2] = $28;
   $29 = (($$05767) + 1)|0;
   $exitcond71 = ($29|0)==($$055|0);
   if ($exitcond71) {
    break;
   } else {
    $$05767 = $29;
   }
  }
 }
 L18: do {
  if ($11) {
   $30 = (($$055|0) / 2)&-1;
   $31 = ($$055|0)>(1);
   if ($31) {
    $32 = ((($3)) + 4|0);
    $33 = ((($3)) + 8|0);
    $$05859$i = 0;$$060$i = Math_fround(0.0);
    while(1) {
     $34 = $$05859$i << 1;
     $35 = (($20) + ($34<<2)|0);
     $36 = Math_fround(HEAPF32[$35>>2]);
     $37 = Math_fround(HEAPF32[$3>>2]);
     $38 = Math_fround($36 - $37);
     $39 = Math_fround($38 * Math_fround(0.607437074));
     $40 = Math_fround($37 + $39);
     $41 = Math_fround($36 + $39);
     HEAPF32[$3>>2] = $41;
     $42 = $34 | 1;
     $43 = (($20) + ($42<<2)|0);
     $44 = Math_fround(HEAPF32[$43>>2]);
     $45 = Math_fround(HEAPF32[$32>>2]);
     $46 = Math_fround($44 - $45);
     $47 = Math_fround($46 * Math_fround(0.150629997));
     $48 = Math_fround($40 + $45);
     $49 = Math_fround($48 + $47);
     $50 = Math_fround($44 + $47);
     HEAPF32[$32>>2] = $50;
     $51 = Math_fround(- $44);
     $52 = Math_fround(HEAPF32[$33>>2]);
     $53 = Math_fround($51 - $52);
     $54 = Math_fround($53 * Math_fround(0.150629997));
     $55 = Math_fround($40 + $52);
     $56 = Math_fround($55 + $54);
     $57 = Math_fround($54 - $44);
     HEAPF32[$33>>2] = $57;
     $58 = Math_fround($56 * $56);
     $59 = Math_fround($$060$i + $58);
     $60 = Math_fround($49 * Math_fround(0.5));
     $61 = (($2) + ($$05859$i<<2)|0);
     HEAPF32[$61>>2] = $60;
     $62 = (($$05859$i) + 1)|0;
     $exitcond$i = ($62|0)==($30|0);
     if ($exitcond$i) {
      $$056 = $59;
      break;
     } else {
      $$05859$i = $62;$$060$i = $59;
     }
    }
   } else {
    $$056 = Math_fround(0.0);
   }
  } else {
   $switch$split2D = ($9|0)<(24000);
   if (!($switch$split2D)) {
    switch ($9|0) {
    case 24000:  {
     break;
    }
    default: {
     $$056 = Math_fround(0.0);
     break L18;
    }
    }
    $63 = $$055 << 2;
    _memcpy(($2|0),($20|0),($63|0))|0;
    $$056 = Math_fround(0.0);
    break;
   }
   switch ($9|0) {
   case 16000:  {
    break;
   }
   default: {
    $$056 = Math_fround(0.0);
    break L18;
   }
   }
   $64 = ($$055*3)|0;
   $65 = (_llvm_stacksave()|0);
   $$alloca_mul1 = $64<<2;
   $66 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
   if ($25) {
    $$166 = 0;
    while(1) {
     $67 = (($20) + ($$166<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ($$166*3)|0;
     $70 = (($66) + ($69<<2)|0);
     HEAP32[$70>>2] = $68;
     $71 = (($69) + 1)|0;
     $72 = (($66) + ($71<<2)|0);
     HEAP32[$72>>2] = $68;
     $73 = (($69) + 2)|0;
     $74 = (($66) + ($73<<2)|0);
     HEAP32[$74>>2] = $68;
     $75 = (($$166) + 1)|0;
     $exitcond = ($75|0)==($$055|0);
     if ($exitcond) {
      break;
     } else {
      $$166 = $75;
     }
    }
   }
   $76 = (($64|0) / 2)&-1;
   $77 = ($64|0)>(1);
   if ($77) {
    $78 = ((($3)) + 4|0);
    $79 = ((($3)) + 8|0);
    $$05859$i62 = 0;
    while(1) {
     $80 = $$05859$i62 << 1;
     $81 = (($66) + ($80<<2)|0);
     $82 = Math_fround(HEAPF32[$81>>2]);
     $83 = Math_fround(HEAPF32[$3>>2]);
     $84 = Math_fround($82 - $83);
     $85 = Math_fround($84 * Math_fround(0.607437074));
     $86 = Math_fround($83 + $85);
     $87 = Math_fround($82 + $85);
     HEAPF32[$3>>2] = $87;
     $88 = $80 | 1;
     $89 = (($66) + ($88<<2)|0);
     $90 = Math_fround(HEAPF32[$89>>2]);
     $91 = Math_fround(HEAPF32[$78>>2]);
     $92 = Math_fround($90 - $91);
     $93 = Math_fround($92 * Math_fround(0.150629997));
     $94 = Math_fround($86 + $91);
     $95 = Math_fround($94 + $93);
     $96 = Math_fround($90 + $93);
     HEAPF32[$78>>2] = $96;
     $97 = Math_fround(- $90);
     $98 = Math_fround(HEAPF32[$79>>2]);
     $99 = Math_fround($97 - $98);
     $100 = Math_fround($99 * Math_fround(0.150629997));
     $101 = Math_fround($100 - $90);
     HEAPF32[$79>>2] = $101;
     $102 = Math_fround($95 * Math_fround(0.5));
     $103 = (($2) + ($$05859$i62<<2)|0);
     HEAPF32[$103>>2] = $102;
     $104 = (($$05859$i62) + 1)|0;
     $exitcond$i63 = ($104|0)==($76|0);
     if ($exitcond$i63) {
      break;
     } else {
      $$05859$i62 = $104;
     }
    }
   }
   _llvm_stackrestore(($65|0));
   $$056 = Math_fround(0.0);
  }
 } while(0);
 _llvm_stackrestore(($19|0));
 $$0 = $$056;
 STACKTOP = sp;return (Math_fround($$0));
}
function _mlp_process($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = Math_fround(0), $$0$i42 = Math_fround(0), $$0$i42$us = Math_fround(0), $$026$i = Math_fround(0), $$026$i43 = Math_fround(0), $$026$i43$us = Math_fround(0), $$027$i = Math_fround(0), $$027$i41 = Math_fround(0), $$027$i41$us = Math_fround(0), $$03547$us = 0, $$036$lcssa = Math_fround(0), $$03658 = Math_fround(0), $$03757 = 0, $$038$lcssa = 0, $$03866 = 0, $$03965 = 0, $$048$us = Math_fround(0), $$1 = 0, $$1$lcssa = 0, $$14051 = 0;
 var $$14051$us = 0, $$156 = 0, $$159 = 0, $$252 = 0, $$252$us = 0, $$252$us$pn = 0, $$346 = 0, $$349$us = 0, $$pre = 0, $10 = 0, $100 = Math_fround(0), $101 = Math_fround(0), $102 = Math_fround(0), $103 = Math_fround(0), $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = Math_fround(0), $13 = 0;
 var $14 = Math_fround(0), $15 = Math_fround(0), $16 = Math_fround(0), $17 = Math_fround(0), $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = Math_fround(0), $25 = Math_fround(0), $26 = Math_fround(0), $27 = Math_fround(0), $28 = 0, $29 = Math_fround(0), $3 = 0, $30 = Math_fround(0), $31 = Math_fround(0), $32 = 0;
 var $33 = Math_fround(0), $34 = Math_fround(0), $35 = Math_fround(0), $36 = Math_fround(0), $37 = Math_fround(0), $38 = Math_fround(0), $39 = Math_fround(0), $4 = 0, $40 = Math_fround(0), $41 = Math_fround(0), $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = Math_fround(0), $5 = 0, $50 = 0;
 var $51 = Math_fround(0), $52 = 0, $53 = 0, $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = 0, $59 = Math_fround(0), $6 = 0, $60 = Math_fround(0), $61 = Math_fround(0), $62 = 0, $63 = Math_fround(0), $64 = Math_fround(0), $65 = Math_fround(0), $66 = Math_fround(0), $67 = Math_fround(0), $68 = Math_fround(0), $69 = Math_fround(0);
 var $7 = 0, $70 = Math_fround(0), $71 = Math_fround(0), $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = Math_fround(0), $77 = Math_fround(0), $78 = Math_fround(0), $79 = 0, $8 = 0, $80 = 0, $81 = Math_fround(0), $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = Math_fround(0), $87 = Math_fround(0);
 var $88 = Math_fround(0), $89 = Math_fround(0), $9 = 0, $90 = 0, $91 = Math_fround(0), $92 = Math_fround(0), $93 = Math_fround(0), $94 = 0, $95 = Math_fround(0), $96 = Math_fround(0), $97 = Math_fround(0), $98 = Math_fround(0), $99 = Math_fround(0), $exitcond = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $3 = sp;
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)>(0);
 if ($10) {
  $$pre = HEAP32[$7>>2]|0;
  $11 = ($$pre|0)>(0);
  $$03866 = $5;$$03965 = 0;
  while(1) {
   $12 = Math_fround(HEAPF32[$$03866>>2]);
   $$156 = ((($$03866)) + 4|0);
   if ($11) {
    $$03658 = $12;$$03757 = 0;$$159 = $$156;
    while(1) {
     $13 = (($1) + ($$03757<<2)|0);
     $14 = Math_fround(HEAPF32[$13>>2]);
     $15 = Math_fround(HEAPF32[$$159>>2]);
     $16 = Math_fround($14 * $15);
     $17 = Math_fround($$03658 + $16);
     $18 = (($$03757) + 1)|0;
     $$1 = ((($$159)) + 4|0);
     $19 = ($18|0)<($$pre|0);
     if ($19) {
      $$03658 = $17;$$03757 = $18;$$159 = $$1;
     } else {
      $$036$lcssa = $17;$$1$lcssa = $$1;
      break;
     }
    }
   } else {
    $$036$lcssa = $12;$$1$lcssa = $$156;
   }
   $20 = $$036$lcssa < Math_fround(8.0);
   if ($20) {
    $21 = $$036$lcssa > Math_fround(-8.0);
    if ($21) {
     $22 = ($$036$lcssa != $$036$lcssa) | (Math_fround(0.0) != Math_fround(0.0));
     if ($22) {
      $$026$i = Math_fround(0.0);
     } else {
      $23 = $$036$lcssa < Math_fround(0.0);
      $24 = Math_fround(- $$036$lcssa);
      $$027$i = $23 ? $24 : $$036$lcssa;
      $$0$i = $23 ? Math_fround(-1.0) : Math_fround(1.0);
      $25 = Math_fround($$027$i * Math_fround(25.0));
      $26 = Math_fround($25 + Math_fround(0.5));
      $27 = (Math_fround(Math_floor((Math_fround($26)))));
      $28 = (~~(($27)));
      $29 = (Math_fround(($28|0)));
      $30 = Math_fround($29 * Math_fround(0.0399999991));
      $31 = Math_fround($$027$i - $30);
      $32 = (2368 + ($28<<2)|0);
      $33 = Math_fround(HEAPF32[$32>>2]);
      $34 = Math_fround($33 * $33);
      $35 = Math_fround(Math_fround(1.0) - $34);
      $36 = Math_fround($31 * $35);
      $37 = Math_fround($31 * $33);
      $38 = Math_fround(Math_fround(1.0) - $37);
      $39 = Math_fround($38 * $36);
      $40 = Math_fround($33 + $39);
      $41 = Math_fround($$0$i * $40);
      $$026$i = $41;
     }
    } else {
     $$026$i = Math_fround(-1.0);
    }
   } else {
    $$026$i = Math_fround(1.0);
   }
   $42 = (($3) + ($$03965<<2)|0);
   HEAPF32[$42>>2] = $$026$i;
   $43 = (($$03965) + 1)|0;
   $44 = ($43|0)<($9|0);
   if ($44) {
    $$03866 = $$1$lcssa;$$03965 = $43;
   } else {
    $$038$lcssa = $$1$lcssa;
    break;
   }
  }
 } else {
  $$038$lcssa = $5;
 }
 $45 = ((($7)) + 8|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = ($46|0)>(0);
 if (!($47)) {
  STACKTOP = sp;return;
 }
 if (!($10)) {
  $$14051 = 0;$$252 = $$038$lcssa;
  while(1) {
   $81 = Math_fround(HEAPF32[$$252>>2]);
   $$346 = ((($$252)) + 4|0);
   $82 = $81 < Math_fround(8.0);
   if ($82) {
    $83 = $81 > Math_fround(-8.0);
    if ($83) {
     $84 = ($81 != $81) | (Math_fround(0.0) != Math_fround(0.0));
     if ($84) {
      $$026$i43 = Math_fround(0.0);
     } else {
      $85 = $81 < Math_fround(0.0);
      $86 = Math_fround(- $81);
      $$027$i41 = $85 ? $86 : $81;
      $$0$i42 = $85 ? Math_fround(-1.0) : Math_fround(1.0);
      $87 = Math_fround($$027$i41 * Math_fround(25.0));
      $88 = Math_fround($87 + Math_fround(0.5));
      $89 = (Math_fround(Math_floor((Math_fround($88)))));
      $90 = (~~(($89)));
      $91 = (Math_fround(($90|0)));
      $92 = Math_fround($91 * Math_fround(0.0399999991));
      $93 = Math_fround($$027$i41 - $92);
      $94 = (2368 + ($90<<2)|0);
      $95 = Math_fround(HEAPF32[$94>>2]);
      $96 = Math_fround($95 * $95);
      $97 = Math_fround(Math_fround(1.0) - $96);
      $98 = Math_fround($93 * $97);
      $99 = Math_fround($93 * $95);
      $100 = Math_fround(Math_fround(1.0) - $99);
      $101 = Math_fround($100 * $98);
      $102 = Math_fround($95 + $101);
      $103 = Math_fround($$0$i42 * $102);
      $$026$i43 = $103;
     }
    } else {
     $$026$i43 = Math_fround(-1.0);
    }
   } else {
    $$026$i43 = Math_fround(1.0);
   }
   $104 = (($2) + ($$14051<<2)|0);
   HEAPF32[$104>>2] = $$026$i43;
   $105 = (($$14051) + 1)|0;
   $106 = ($105|0)<($46|0);
   if ($106) {
    $$14051 = $105;$$252 = $$346;
   } else {
    break;
   }
  }
  STACKTOP = sp;return;
 }
 $48 = (($9) + 1)|0;
 $$14051$us = 0;$$252$us = $$038$lcssa;
 while(1) {
  $49 = Math_fround(HEAPF32[$$252$us>>2]);
  $$03547$us = 0;$$048$us = $49;$$252$us$pn = $$252$us;
  while(1) {
   $$349$us = ((($$252$us$pn)) + 4|0);
   $75 = (($3) + ($$03547$us<<2)|0);
   $76 = Math_fround(HEAPF32[$75>>2]);
   $77 = Math_fround(HEAPF32[$$349$us>>2]);
   $78 = Math_fround($76 * $77);
   $51 = Math_fround($$048$us + $78);
   $79 = (($$03547$us) + 1)|0;
   $exitcond = ($79|0)==($9|0);
   if ($exitcond) {
    break;
   } else {
    $$03547$us = $79;$$048$us = $51;$$252$us$pn = $$349$us;
   }
  }
  $scevgep = (($$252$us) + ($48<<2)|0);
  $80 = $51 < Math_fround(8.0);
  if ($80) {
   $50 = $51 > Math_fround(-8.0);
   if ($50) {
    $52 = ($51 != $51) | (Math_fround(0.0) != Math_fround(0.0));
    if ($52) {
     $$026$i43$us = Math_fround(0.0);
    } else {
     $53 = $51 < Math_fround(0.0);
     $54 = Math_fround(- $51);
     $$027$i41$us = $53 ? $54 : $51;
     $$0$i42$us = $53 ? Math_fround(-1.0) : Math_fround(1.0);
     $55 = Math_fround($$027$i41$us * Math_fround(25.0));
     $56 = Math_fround($55 + Math_fround(0.5));
     $57 = (Math_fround(Math_floor((Math_fround($56)))));
     $58 = (~~(($57)));
     $59 = (Math_fround(($58|0)));
     $60 = Math_fround($59 * Math_fround(0.0399999991));
     $61 = Math_fround($$027$i41$us - $60);
     $62 = (2368 + ($58<<2)|0);
     $63 = Math_fround(HEAPF32[$62>>2]);
     $64 = Math_fround($63 * $63);
     $65 = Math_fround(Math_fround(1.0) - $64);
     $66 = Math_fround($61 * $65);
     $67 = Math_fround($61 * $63);
     $68 = Math_fround(Math_fround(1.0) - $67);
     $69 = Math_fround($68 * $66);
     $70 = Math_fround($63 + $69);
     $71 = Math_fround($$0$i42$us * $70);
     $$026$i43$us = $71;
    }
   } else {
    $$026$i43$us = Math_fround(-1.0);
   }
  } else {
   $$026$i43$us = Math_fround(1.0);
  }
  $72 = (($2) + ($$14051$us<<2)|0);
  HEAPF32[$72>>2] = $$026$i43$us;
  $73 = (($$14051$us) + 1)|0;
  $74 = ($73|0)<($46|0);
  if ($74) {
   $$14051$us = $73;$$252$us = $scevgep;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _celt_encoder_get_size($0) {
 $0 = $0|0;
 var $$idx = 0, $$idx$val = 0, $$idx2 = 0, $$idx2$val = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $reass$add$i = 0, $reass$add1$i = 0, $reass$mul$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_opus_custom_mode_create(48000,960,0)|0);
 $$idx = ((($1)) + 4|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx2 = ((($1)) + 8|0);
 $$idx2$val = HEAP32[$$idx2>>2]|0;
 $2 = $$idx$val << 2;
 $3 = $$idx2$val << 4;
 $reass$add$i = (($2) + 4096)|0;
 $reass$add1$i = (($reass$add$i) + ($3))|0;
 $reass$mul$i = Math_imul($reass$add1$i, $0)|0;
 $4 = (($reass$mul$i) + 236)|0;
 return ($4|0);
}
function _celt_encoder_init($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$idx$i = 0, $$idx$val$i = 0, $$idx30$i = 0, $$idx30$val$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond3$i = 0, $reass$add$i$i = 0, $reass$add1$i$i = 0, $reass$mul$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $4 = (_opus_custom_mode_create(48000,960,0)|0);
 $5 = ($2>>>0)>(2);
 if ($5) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $6 = ($0|0)==(0|0);
 $7 = ($4|0)==(0|0);
 $or$cond3$i = $6 | $7;
 if ($or$cond3$i) {
  $$0 = -7;
  STACKTOP = sp;return ($$0|0);
 }
 $$idx$i = ((($4)) + 4|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $$idx30$i = ((($4)) + 8|0);
 $$idx30$val$i = HEAP32[$$idx30$i>>2]|0;
 $8 = $$idx$val$i << 2;
 $9 = $$idx30$val$i << 4;
 $reass$add$i$i = (($8) + 4096)|0;
 $reass$add1$i$i = (($reass$add$i$i) + ($9))|0;
 $reass$mul$i$i = Math_imul($reass$add1$i$i, $2)|0;
 $10 = (($reass$mul$i$i) + 236)|0;
 _memset(($0|0),0,($10|0))|0;
 HEAP32[$0>>2] = $4;
 $11 = ((($0)) + 4|0);
 HEAP32[$11>>2] = $2;
 $12 = ((($0)) + 8|0);
 HEAP32[$12>>2] = $2;
 $13 = ((($0)) + 28|0);
 HEAP32[$13>>2] = 1;
 $14 = ((($0)) + 32|0);
 HEAP32[$14>>2] = 0;
 $15 = ((($4)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 36|0);
 HEAP32[$17>>2] = $16;
 $18 = ((($0)) + 48|0);
 HEAP32[$18>>2] = 1;
 $19 = ((($0)) + 72|0);
 HEAP32[$19>>2] = $3;
 $20 = ((($0)) + 52|0);
 HEAP32[$20>>2] = 1;
 $21 = ((($0)) + 16|0);
 HEAP32[$21>>2] = 1;
 $22 = ((($0)) + 40|0);
 HEAP32[$22>>2] = -1;
 $23 = ((($0)) + 44|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($0)) + 12|0);
 HEAP32[$24>>2] = 0;
 $25 = ((($0)) + 24|0);
 HEAP32[$25>>2] = 5;
 $26 = ((($0)) + 60|0);
 HEAP32[$26>>2] = 24;
 (_opus_custom_encoder_ctl($0,4028,$vararg_buffer)|0);
 $27 = (_resampling_factor($1)|0);
 HEAP32[$13>>2] = $27;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _opus_custom_encoder_ctl($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $$ = 0, $$0 = 0, $$0197212 = 0, $$off = 0, $$off198 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0, $arglist_current50 = 0, $arglist_current53 = 0, $arglist_current56 = 0;
 var $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0, $arglist_next33 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0, $arglist_next45 = 0, $arglist_next48 = 0, $arglist_next51 = 0, $arglist_next54 = 0, $arglist_next57 = 0, $arglist_next6 = 0;
 var $arglist_next9 = 0, $expanded = 0, $expanded10 = 0, $expanded100 = 0, $expanded101 = 0, $expanded103 = 0, $expanded104 = 0, $expanded105 = 0, $expanded107 = 0, $expanded108 = 0, $expanded110 = 0, $expanded111 = 0, $expanded112 = 0, $expanded114 = 0, $expanded115 = 0, $expanded117 = 0, $expanded118 = 0, $expanded119 = 0, $expanded12 = 0, $expanded121 = 0;
 var $expanded122 = 0, $expanded124 = 0, $expanded125 = 0, $expanded126 = 0, $expanded128 = 0, $expanded129 = 0, $expanded13 = 0, $expanded131 = 0, $expanded132 = 0, $expanded133 = 0, $expanded135 = 0, $expanded136 = 0, $expanded138 = 0, $expanded139 = 0, $expanded14 = 0, $expanded140 = 0, $expanded16 = 0, $expanded17 = 0, $expanded19 = 0, $expanded20 = 0;
 var $expanded21 = 0, $expanded23 = 0, $expanded24 = 0, $expanded26 = 0, $expanded27 = 0, $expanded28 = 0, $expanded3 = 0, $expanded30 = 0, $expanded31 = 0, $expanded33 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded40 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded47 = 0;
 var $expanded48 = 0, $expanded49 = 0, $expanded5 = 0, $expanded51 = 0, $expanded52 = 0, $expanded54 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0, $expanded6 = 0, $expanded61 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded68 = 0, $expanded69 = 0, $expanded7 = 0, $expanded70 = 0;
 var $expanded72 = 0, $expanded73 = 0, $expanded75 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded82 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0, $expanded89 = 0, $expanded9 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded96 = 0, $expanded97 = 0;
 var $expanded98 = 0, $or$cond7 = 0, $reass$add$i = 0, $reass$add1$i = 0, $reass$mul$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 do {
  switch ($1|0) {
  case 4010:  {
   $arglist_current = HEAP32[$2>>2]|0;
   $3 = $arglist_current;
   $4 = ((0) + 4|0);
   $expanded3 = $4;
   $expanded = (($expanded3) - 1)|0;
   $5 = (($3) + ($expanded))|0;
   $6 = ((0) + 4|0);
   $expanded7 = $6;
   $expanded6 = (($expanded7) - 1)|0;
   $expanded5 = $expanded6 ^ -1;
   $7 = $5 & $expanded5;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $arglist_next = ((($8)) + 4|0);
   HEAP32[$2>>2] = $arglist_next;
   $10 = ($9>>>0)>(10);
   if ($10) {
    label = 43;
   } else {
    $11 = ((($0)) + 24|0);
    HEAP32[$11>>2] = $9;
    label = 42;
   }
   break;
  }
  case 10010:  {
   $arglist_current2 = HEAP32[$2>>2]|0;
   $12 = $arglist_current2;
   $13 = ((0) + 4|0);
   $expanded10 = $13;
   $expanded9 = (($expanded10) - 1)|0;
   $14 = (($12) + ($expanded9))|0;
   $15 = ((0) + 4|0);
   $expanded14 = $15;
   $expanded13 = (($expanded14) - 1)|0;
   $expanded12 = $expanded13 ^ -1;
   $16 = $14 & $expanded12;
   $17 = $16;
   $18 = HEAP32[$17>>2]|0;
   $arglist_next3 = ((($17)) + 4|0);
   HEAP32[$2>>2] = $arglist_next3;
   $19 = ($18|0)<(0);
   if ($19) {
    label = 43;
   } else {
    $20 = HEAP32[$0>>2]|0;
    $21 = ((($20)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ($18|0)<($22|0);
    if ($23) {
     $24 = ((($0)) + 32|0);
     HEAP32[$24>>2] = $18;
     label = 42;
    } else {
     label = 43;
    }
   }
   break;
  }
  case 10012:  {
   $arglist_current5 = HEAP32[$2>>2]|0;
   $25 = $arglist_current5;
   $26 = ((0) + 4|0);
   $expanded17 = $26;
   $expanded16 = (($expanded17) - 1)|0;
   $27 = (($25) + ($expanded16))|0;
   $28 = ((0) + 4|0);
   $expanded21 = $28;
   $expanded20 = (($expanded21) - 1)|0;
   $expanded19 = $expanded20 ^ -1;
   $29 = $27 & $expanded19;
   $30 = $29;
   $31 = HEAP32[$30>>2]|0;
   $arglist_next6 = ((($30)) + 4|0);
   HEAP32[$2>>2] = $arglist_next6;
   $32 = ($31|0)<(1);
   if ($32) {
    label = 43;
   } else {
    $33 = HEAP32[$0>>2]|0;
    $34 = ((($33)) + 8|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($31|0)>($35|0);
    if ($36) {
     label = 43;
    } else {
     $37 = ((($0)) + 36|0);
     HEAP32[$37>>2] = $31;
     label = 42;
    }
   }
   break;
  }
  case 10002:  {
   $arglist_current8 = HEAP32[$2>>2]|0;
   $38 = $arglist_current8;
   $39 = ((0) + 4|0);
   $expanded24 = $39;
   $expanded23 = (($expanded24) - 1)|0;
   $40 = (($38) + ($expanded23))|0;
   $41 = ((0) + 4|0);
   $expanded28 = $41;
   $expanded27 = (($expanded28) - 1)|0;
   $expanded26 = $expanded27 ^ -1;
   $42 = $40 & $expanded26;
   $43 = $42;
   $44 = HEAP32[$43>>2]|0;
   $arglist_next9 = ((($43)) + 4|0);
   HEAP32[$2>>2] = $arglist_next9;
   $45 = ($44>>>0)>(2);
   if ($45) {
    label = 43;
   } else {
    $46 = ((($0)) + 12|0);
    $47 = ($44|0)==(0);
    $48 = $47&1;
    $49 = ((($0)) + 20|0);
    $50 = ($44|0)!=(2);
    $51 = $50&1;
    HEAP32[$49>>2] = $51;
    HEAP32[$46>>2] = $48;
    label = 42;
   }
   break;
  }
  case 4014:  {
   $arglist_current11 = HEAP32[$2>>2]|0;
   $52 = $arglist_current11;
   $53 = ((0) + 4|0);
   $expanded31 = $53;
   $expanded30 = (($expanded31) - 1)|0;
   $54 = (($52) + ($expanded30))|0;
   $55 = ((0) + 4|0);
   $expanded35 = $55;
   $expanded34 = (($expanded35) - 1)|0;
   $expanded33 = $expanded34 ^ -1;
   $56 = $54 & $expanded33;
   $57 = $56;
   $58 = HEAP32[$57>>2]|0;
   $arglist_next12 = ((($57)) + 4|0);
   HEAP32[$2>>2] = $arglist_next12;
   $59 = ($58>>>0)>(100);
   if ($59) {
    label = 43;
   } else {
    $60 = ((($0)) + 56|0);
    HEAP32[$60>>2] = $58;
    label = 42;
   }
   break;
  }
  case 4020:  {
   $arglist_current14 = HEAP32[$2>>2]|0;
   $61 = $arglist_current14;
   $62 = ((0) + 4|0);
   $expanded38 = $62;
   $expanded37 = (($expanded38) - 1)|0;
   $63 = (($61) + ($expanded37))|0;
   $64 = ((0) + 4|0);
   $expanded42 = $64;
   $expanded41 = (($expanded42) - 1)|0;
   $expanded40 = $expanded41 ^ -1;
   $65 = $63 & $expanded40;
   $66 = $65;
   $67 = HEAP32[$66>>2]|0;
   $arglist_next15 = ((($66)) + 4|0);
   HEAP32[$2>>2] = $arglist_next15;
   $68 = ((($0)) + 52|0);
   HEAP32[$68>>2] = $67;
   label = 42;
   break;
  }
  case 4006:  {
   $arglist_current17 = HEAP32[$2>>2]|0;
   $69 = $arglist_current17;
   $70 = ((0) + 4|0);
   $expanded45 = $70;
   $expanded44 = (($expanded45) - 1)|0;
   $71 = (($69) + ($expanded44))|0;
   $72 = ((0) + 4|0);
   $expanded49 = $72;
   $expanded48 = (($expanded49) - 1)|0;
   $expanded47 = $expanded48 ^ -1;
   $73 = $71 & $expanded47;
   $74 = $73;
   $75 = HEAP32[$74>>2]|0;
   $arglist_next18 = ((($74)) + 4|0);
   HEAP32[$2>>2] = $arglist_next18;
   $76 = ((($0)) + 44|0);
   HEAP32[$76>>2] = $75;
   label = 42;
   break;
  }
  case 4002:  {
   $arglist_current20 = HEAP32[$2>>2]|0;
   $77 = $arglist_current20;
   $78 = ((0) + 4|0);
   $expanded52 = $78;
   $expanded51 = (($expanded52) - 1)|0;
   $79 = (($77) + ($expanded51))|0;
   $80 = ((0) + 4|0);
   $expanded56 = $80;
   $expanded55 = (($expanded56) - 1)|0;
   $expanded54 = $expanded55 ^ -1;
   $81 = $79 & $expanded54;
   $82 = $81;
   $83 = HEAP32[$82>>2]|0;
   $arglist_next21 = ((($82)) + 4|0);
   HEAP32[$2>>2] = $arglist_next21;
   $84 = ($83|0)<(501);
   $85 = ($83|0)!=(-1);
   $or$cond7 = $84 & $85;
   if ($or$cond7) {
    label = 43;
   } else {
    $86 = ((($0)) + 4|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87*260000)|0;
    $89 = ($83|0)<($88|0);
    $$ = $89 ? $83 : $88;
    $90 = ((($0)) + 40|0);
    HEAP32[$90>>2] = $$;
    label = 42;
   }
   break;
  }
  case 10008:  {
   $arglist_current23 = HEAP32[$2>>2]|0;
   $91 = $arglist_current23;
   $92 = ((0) + 4|0);
   $expanded59 = $92;
   $expanded58 = (($expanded59) - 1)|0;
   $93 = (($91) + ($expanded58))|0;
   $94 = ((0) + 4|0);
   $expanded63 = $94;
   $expanded62 = (($expanded63) - 1)|0;
   $expanded61 = $expanded62 ^ -1;
   $95 = $93 & $expanded61;
   $96 = $95;
   $97 = HEAP32[$96>>2]|0;
   $arglist_next24 = ((($96)) + 4|0);
   HEAP32[$2>>2] = $arglist_next24;
   $$off198 = (($97) + -1)|0;
   $98 = ($$off198>>>0)>(1);
   if ($98) {
    label = 43;
   } else {
    $99 = ((($0)) + 8|0);
    HEAP32[$99>>2] = $97;
    label = 42;
   }
   break;
  }
  case 4036:  {
   $arglist_current26 = HEAP32[$2>>2]|0;
   $100 = $arglist_current26;
   $101 = ((0) + 4|0);
   $expanded66 = $101;
   $expanded65 = (($expanded66) - 1)|0;
   $102 = (($100) + ($expanded65))|0;
   $103 = ((0) + 4|0);
   $expanded70 = $103;
   $expanded69 = (($expanded70) - 1)|0;
   $expanded68 = $expanded69 ^ -1;
   $104 = $102 & $expanded68;
   $105 = $104;
   $106 = HEAP32[$105>>2]|0;
   $arglist_next27 = ((($105)) + 4|0);
   HEAP32[$2>>2] = $arglist_next27;
   $$off = (($106) + -8)|0;
   $107 = ($$off>>>0)>(16);
   if ($107) {
    label = 43;
   } else {
    $108 = ((($0)) + 60|0);
    HEAP32[$108>>2] = $106;
    label = 42;
   }
   break;
  }
  case 4037:  {
   $arglist_current29 = HEAP32[$2>>2]|0;
   $109 = $arglist_current29;
   $110 = ((0) + 4|0);
   $expanded73 = $110;
   $expanded72 = (($expanded73) - 1)|0;
   $111 = (($109) + ($expanded72))|0;
   $112 = ((0) + 4|0);
   $expanded77 = $112;
   $expanded76 = (($expanded77) - 1)|0;
   $expanded75 = $expanded76 ^ -1;
   $113 = $111 & $expanded75;
   $114 = $113;
   $115 = HEAP32[$114>>2]|0;
   $arglist_next30 = ((($114)) + 4|0);
   HEAP32[$2>>2] = $arglist_next30;
   $116 = ((($0)) + 60|0);
   $117 = HEAP32[$116>>2]|0;
   HEAP32[$115>>2] = $117;
   label = 42;
   break;
  }
  case 4046:  {
   $arglist_current32 = HEAP32[$2>>2]|0;
   $118 = $arglist_current32;
   $119 = ((0) + 4|0);
   $expanded80 = $119;
   $expanded79 = (($expanded80) - 1)|0;
   $120 = (($118) + ($expanded79))|0;
   $121 = ((0) + 4|0);
   $expanded84 = $121;
   $expanded83 = (($expanded84) - 1)|0;
   $expanded82 = $expanded83 ^ -1;
   $122 = $120 & $expanded82;
   $123 = $122;
   $124 = HEAP32[$123>>2]|0;
   $arglist_next33 = ((($123)) + 4|0);
   HEAP32[$2>>2] = $arglist_next33;
   $125 = ($124>>>0)>(1);
   if ($125) {
    label = 43;
   } else {
    $126 = ((($0)) + 68|0);
    HEAP32[$126>>2] = $124;
    label = 42;
   }
   break;
  }
  case 4047:  {
   $arglist_current35 = HEAP32[$2>>2]|0;
   $127 = $arglist_current35;
   $128 = ((0) + 4|0);
   $expanded87 = $128;
   $expanded86 = (($expanded87) - 1)|0;
   $129 = (($127) + ($expanded86))|0;
   $130 = ((0) + 4|0);
   $expanded91 = $130;
   $expanded90 = (($expanded91) - 1)|0;
   $expanded89 = $expanded90 ^ -1;
   $131 = $129 & $expanded89;
   $132 = $131;
   $133 = HEAP32[$132>>2]|0;
   $arglist_next36 = ((($132)) + 4|0);
   HEAP32[$2>>2] = $arglist_next36;
   $134 = ($133|0)==(0|0);
   if ($134) {
    label = 43;
   } else {
    $135 = ((($0)) + 68|0);
    $136 = HEAP32[$135>>2]|0;
    HEAP32[$133>>2] = $136;
    label = 42;
   }
   break;
  }
  case 4028:  {
   $137 = ((($0)) + 4|0);
   $138 = HEAP32[$137>>2]|0;
   $139 = HEAP32[$0>>2]|0;
   $140 = ((($139)) + 4|0);
   $141 = HEAP32[$140>>2]|0;
   $142 = (($141) + 1024)|0;
   $143 = Math_imul($142, $138)|0;
   $144 = (((($0)) + 236|0) + ($143<<2)|0);
   $145 = ((($139)) + 8|0);
   $146 = HEAP32[$145>>2]|0;
   $147 = Math_imul($146, $138)|0;
   $148 = (($144) + ($147<<2)|0);
   $149 = (($148) + ($147<<2)|0);
   $150 = ((($0)) + 76|0);
   $151 = $141 << 2;
   $152 = $146 << 4;
   $reass$add$i = (($151) + 4096)|0;
   $reass$add1$i = (($reass$add$i) + ($152))|0;
   $reass$mul$i = Math_imul($reass$add1$i, $138)|0;
   $153 = (($reass$mul$i) + 160)|0;
   _memset(($150|0),0,($153|0))|0;
   $154 = HEAP32[$145>>2]|0;
   $155 = Math_imul($154, $138)|0;
   $156 = ($155|0)>(0);
   if ($156) {
    $$0197212 = 0;
    while(1) {
     $157 = (($149) + ($$0197212<<2)|0);
     HEAPF32[$157>>2] = Math_fround(-28.0);
     $158 = (($148) + ($$0197212<<2)|0);
     HEAPF32[$158>>2] = Math_fround(-28.0);
     $159 = (($$0197212) + 1)|0;
     $160 = ($159|0)<($155|0);
     if ($160) {
      $$0197212 = $159;
     } else {
      break;
     }
    }
   }
   $161 = ((($0)) + 208|0);
   HEAP32[$161>>2] = 0;
   $162 = ((($0)) + 84|0);
   HEAPF32[$162>>2] = Math_fround(1.0);
   $163 = ((($0)) + 80|0);
   HEAP32[$163>>2] = 2;
   $164 = ((($0)) + 88|0);
   HEAP32[$164>>2] = 256;
   $165 = ((($0)) + 96|0);
   HEAP32[$165>>2] = 0;
   $166 = ((($0)) + 100|0);
   HEAP32[$166>>2] = 0;
   label = 42;
   break;
  }
  case 10016:  {
   $arglist_current38 = HEAP32[$2>>2]|0;
   $167 = $arglist_current38;
   $168 = ((0) + 4|0);
   $expanded94 = $168;
   $expanded93 = (($expanded94) - 1)|0;
   $169 = (($167) + ($expanded93))|0;
   $170 = ((0) + 4|0);
   $expanded98 = $170;
   $expanded97 = (($expanded98) - 1)|0;
   $expanded96 = $expanded97 ^ -1;
   $171 = $169 & $expanded96;
   $172 = $171;
   $173 = HEAP32[$172>>2]|0;
   $arglist_next39 = ((($172)) + 4|0);
   HEAP32[$2>>2] = $arglist_next39;
   $174 = ((($0)) + 48|0);
   HEAP32[$174>>2] = $173;
   label = 42;
   break;
  }
  case 10022:  {
   $arglist_current41 = HEAP32[$2>>2]|0;
   $175 = $arglist_current41;
   $176 = ((0) + 4|0);
   $expanded101 = $176;
   $expanded100 = (($expanded101) - 1)|0;
   $177 = (($175) + ($expanded100))|0;
   $178 = ((0) + 4|0);
   $expanded105 = $178;
   $expanded104 = (($expanded105) - 1)|0;
   $expanded103 = $expanded104 ^ -1;
   $179 = $177 & $expanded103;
   $180 = $179;
   $181 = HEAP32[$180>>2]|0;
   $arglist_next42 = ((($180)) + 4|0);
   HEAP32[$2>>2] = $arglist_next42;
   $182 = ($181|0)==(0|0);
   if ($182) {
    label = 42;
   } else {
    $183 = ((($0)) + 120|0);
    dest=$183; src=$181; stop=dest+56|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    label = 42;
   }
   break;
  }
  case 10028:  {
   $arglist_current44 = HEAP32[$2>>2]|0;
   $184 = $arglist_current44;
   $185 = ((0) + 4|0);
   $expanded108 = $185;
   $expanded107 = (($expanded108) - 1)|0;
   $186 = (($184) + ($expanded107))|0;
   $187 = ((0) + 4|0);
   $expanded112 = $187;
   $expanded111 = (($expanded112) - 1)|0;
   $expanded110 = $expanded111 ^ -1;
   $188 = $186 & $expanded110;
   $189 = $188;
   $190 = HEAP32[$189>>2]|0;
   $arglist_next45 = ((($189)) + 4|0);
   HEAP32[$2>>2] = $arglist_next45;
   $191 = ($190|0)==(0|0);
   if ($191) {
    label = 42;
   } else {
    $192 = ((($0)) + 176|0);
    $193 = $190;
    $194 = $193;
    $195 = HEAP32[$194>>2]|0;
    $196 = (($193) + 4)|0;
    $197 = $196;
    $198 = HEAP32[$197>>2]|0;
    $199 = $192;
    $200 = $199;
    HEAP32[$200>>2] = $195;
    $201 = (($199) + 4)|0;
    $202 = $201;
    HEAP32[$202>>2] = $198;
    label = 42;
   }
   break;
  }
  case 10015:  {
   $arglist_current47 = HEAP32[$2>>2]|0;
   $203 = $arglist_current47;
   $204 = ((0) + 4|0);
   $expanded115 = $204;
   $expanded114 = (($expanded115) - 1)|0;
   $205 = (($203) + ($expanded114))|0;
   $206 = ((0) + 4|0);
   $expanded119 = $206;
   $expanded118 = (($expanded119) - 1)|0;
   $expanded117 = $expanded118 ^ -1;
   $207 = $205 & $expanded117;
   $208 = $207;
   $209 = HEAP32[$208>>2]|0;
   $arglist_next48 = ((($208)) + 4|0);
   HEAP32[$2>>2] = $arglist_next48;
   $210 = ($209|0)==(0|0);
   if ($210) {
    label = 43;
   } else {
    $211 = HEAP32[$0>>2]|0;
    HEAP32[$209>>2] = $211;
    label = 42;
   }
   break;
  }
  case 4031:  {
   $arglist_current50 = HEAP32[$2>>2]|0;
   $212 = $arglist_current50;
   $213 = ((0) + 4|0);
   $expanded122 = $213;
   $expanded121 = (($expanded122) - 1)|0;
   $214 = (($212) + ($expanded121))|0;
   $215 = ((0) + 4|0);
   $expanded126 = $215;
   $expanded125 = (($expanded126) - 1)|0;
   $expanded124 = $expanded125 ^ -1;
   $216 = $214 & $expanded124;
   $217 = $216;
   $218 = HEAP32[$217>>2]|0;
   $arglist_next51 = ((($217)) + 4|0);
   HEAP32[$2>>2] = $arglist_next51;
   $219 = ($218|0)==(0|0);
   if ($219) {
    label = 43;
   } else {
    $220 = ((($0)) + 76|0);
    $221 = HEAP32[$220>>2]|0;
    HEAP32[$218>>2] = $221;
    label = 42;
   }
   break;
  }
  case 10024:  {
   $arglist_current53 = HEAP32[$2>>2]|0;
   $222 = $arglist_current53;
   $223 = ((0) + 4|0);
   $expanded129 = $223;
   $expanded128 = (($expanded129) - 1)|0;
   $224 = (($222) + ($expanded128))|0;
   $225 = ((0) + 4|0);
   $expanded133 = $225;
   $expanded132 = (($expanded133) - 1)|0;
   $expanded131 = $expanded132 ^ -1;
   $226 = $224 & $expanded131;
   $227 = $226;
   $228 = HEAP32[$227>>2]|0;
   $arglist_next54 = ((($227)) + 4|0);
   HEAP32[$2>>2] = $arglist_next54;
   $229 = ((($0)) + 64|0);
   HEAP32[$229>>2] = $228;
   label = 42;
   break;
  }
  case 10026:  {
   $arglist_current56 = HEAP32[$2>>2]|0;
   $230 = $arglist_current56;
   $231 = ((0) + 4|0);
   $expanded136 = $231;
   $expanded135 = (($expanded136) - 1)|0;
   $232 = (($230) + ($expanded135))|0;
   $233 = ((0) + 4|0);
   $expanded140 = $233;
   $expanded139 = (($expanded140) - 1)|0;
   $expanded138 = $expanded139 ^ -1;
   $234 = $232 & $expanded138;
   $235 = $234;
   $236 = HEAP32[$235>>2]|0;
   $arglist_next57 = ((($235)) + 4|0);
   HEAP32[$2>>2] = $arglist_next57;
   $237 = ((($0)) + 228|0);
   HEAP32[$237>>2] = $236;
   label = 42;
   break;
  }
  default: {
   $$0 = -5;
   STACKTOP = sp;return ($$0|0);
  }
  }
 } while(0);
 if ((label|0) == 42) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 43) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _celt_preemphasis($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$07888 = Math_fround(0), $$089 = 0, $$17982 = Math_fround(0), $$186 = 0, $$284 = 0, $$383 = 0, $$mux = Math_fround(0), $10 = 0, $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = Math_fround(0), $19 = Math_fround(0), $20 = Math_fround(0), $21 = 0, $22 = Math_fround(0);
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = Math_fround(0), $31 = Math_fround(0), $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = Math_fround(0), $38 = 0, $39 = Math_fround(0), $40 = 0, $41 = Math_fround(0), $42 = 0;
 var $43 = 0, $44 = 0, $45 = Math_fround(0), $46 = Math_fround(0), $47 = Math_fround(0), $48 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $brmerge = 0, $exitcond = 0, $exitcond95 = 0, $exitcond96 = 0, $exitcond97 = 0, $or$cond = 0, $or$cond$not = 0, $or$cond3 = 0, $storemerge = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 $8 = Math_fround(HEAPF32[$5>>2]);
 $9 = Math_fround(HEAPF32[$6>>2]);
 $10 = ((($5)) + 4|0);
 $11 = Math_fround(HEAPF32[$10>>2]);
 $12 = $11 != Math_fround(0.0);
 $13 = ($4|0)!=(1);
 $or$cond$not = $13 | $12;
 $14 = ($7|0)!=(0);
 $or$cond3 = $14 | $or$cond$not;
 if (!($or$cond3)) {
  $15 = ($2|0)>(0);
  if (!($15)) {
   $storemerge = $9;
   HEAPF32[$6>>2] = $storemerge;
   return;
  }
  $$07888 = $9;$$089 = 0;
  while(1) {
   $16 = Math_imul($$089, $3)|0;
   $17 = (($0) + ($16<<2)|0);
   $18 = Math_fround(HEAPF32[$17>>2]);
   $19 = Math_fround($18 * Math_fround(32768.0));
   $20 = Math_fround($19 - $$07888);
   $21 = (($1) + ($$089<<2)|0);
   HEAPF32[$21>>2] = $20;
   $22 = Math_fround($8 * $19);
   $23 = (($$089) + 1)|0;
   $exitcond97 = ($23|0)==($2|0);
   if ($exitcond97) {
    $storemerge = $22;
    break;
   } else {
    $$07888 = $22;$$089 = $23;
   }
  }
  HEAPF32[$6>>2] = $storemerge;
  return;
 }
 $24 = (($2|0) / ($4|0))&-1;
 $25 = ($4|0)==(1);
 if (!($25)) {
  $26 = $2 << 2;
  _memset(($1|0),0,($26|0))|0;
 }
 $27 = ($24|0)>(0);
 if ($27) {
  $$186 = 0;
  while(1) {
   $28 = Math_imul($$186, $3)|0;
   $29 = (($0) + ($28<<2)|0);
   $30 = Math_fround(HEAPF32[$29>>2]);
   $31 = Math_fround($30 * Math_fround(32768.0));
   $32 = Math_imul($$186, $4)|0;
   $33 = (($1) + ($32<<2)|0);
   HEAPF32[$33>>2] = $31;
   $34 = (($$186) + 1)|0;
   $exitcond96 = ($34|0)==($24|0);
   if ($exitcond96) {
    break;
   } else {
    $$186 = $34;
   }
  }
  $or$cond = $14 & $27;
  if ($or$cond) {
   $$284 = 0;
   while(1) {
    $35 = Math_imul($$284, $4)|0;
    $36 = (($1) + ($35<<2)|0);
    $37 = Math_fround(HEAPF32[$36>>2]);
    $38 = $37 > Math_fround(65536.0);
    $39 = $38 ? Math_fround(65536.0) : $37;
    $40 = $39 < Math_fround(-65536.0);
    $brmerge = $38 | $40;
    $$mux = $40 ? Math_fround(-65536.0) : Math_fround(65536.0);
    $41 = $brmerge ? $$mux : $37;
    HEAPF32[$36>>2] = $41;
    $42 = (($$284) + 1)|0;
    $exitcond95 = ($42|0)==($24|0);
    if ($exitcond95) {
     break;
    } else {
     $$284 = $42;
    }
   }
  }
 }
 $43 = ($2|0)>(0);
 if (!($43)) {
  $storemerge = $9;
  HEAPF32[$6>>2] = $storemerge;
  return;
 }
 $$17982 = $9;$$383 = 0;
 while(1) {
  $44 = (($1) + ($$383<<2)|0);
  $45 = Math_fround(HEAPF32[$44>>2]);
  $46 = Math_fround($45 - $$17982);
  HEAPF32[$44>>2] = $46;
  $47 = Math_fround($8 * $45);
  $48 = (($$383) + 1)|0;
  $exitcond = ($48|0)==($2|0);
  if ($exitcond) {
   $storemerge = $47;
   break;
  } else {
   $$17982 = $47;$$383 = $48;
  }
 }
 HEAPF32[$6>>2] = $storemerge;
 return;
}
function _celt_encode_with_ec($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$$0 = 0, $$$i = Math_fround(0), $$$i1354 = Math_fround(0), $$$i1391 = Math_fround(0), $$0 = 0, $$0$i = 0, $$0$i1392 = 0, $$0$lcssa$i = Math_fround(0), $$0$lcssa$i$1$i = Math_fround(0), $$0$lcssa$i$2$i = Math_fround(0), $$0$lcssa$i$3$i = Math_fround(0), $$0$lcssa$i$4$i = Math_fround(0), $$0$lcssa$i$5$i = Math_fround(0), $$0$lcssa$i$6$i = Math_fround(0), $$0$lcssa$i$7$i = Math_fround(0), $$0$lcssa$i$i = Math_fround(0), $$0$lcssa$i1378 = Math_fround(0), $$0$lcssa$i1388 = Math_fround(0), $$0$lcssa$i6$i = Math_fround(0);
 var $$01011$i$1$i = 0, $$01011$i$2$i = 0, $$01011$i$3$i = 0, $$01011$i$4$i = 0, $$01011$i$5$i = 0, $$01011$i$6$i = 0, $$01011$i$7$i = 0, $$01011$i$i = 0, $$01011$i4$i = 0, $$0105$i = 0, $$0107$i = 0, $$012$i$1$i = Math_fround(0), $$012$i$2$i = Math_fround(0), $$012$i$3$i = Math_fround(0), $$012$i$4$i = Math_fround(0), $$012$i$5$i = Math_fround(0), $$012$i$6$i = Math_fround(0), $$012$i$7$i = Math_fround(0), $$012$i$i = Math_fround(0), $$012$i3$i = Math_fround(0);
 var $$01213 = 0, $$01215 = 0, $$01218 = Math_fround(0), $$012231515 = 0, $$01224$lcssa1680 = 0, $$01224$lcssa1681 = 0, $$012241514 = 0, $$012271513 = 0, $$01229 = 0, $$01229$idx$val = 0, $$01229$idx1339$val = 0, $$01229$idx1340$val = 0, $$01229$idx1341$val = 0, $$01229$idx1342$val$pre = 0, $$01229$idx1343$val$pre = 0, $$01229$idx1344 = 0, $$01229$idx1344$val = 0, $$01229$idx1345 = 0, $$01229$idx1345$val = 0, $$01229$idx1346 = 0;
 var $$01229$idx1346$val = 0, $$01229$idx1347 = 0, $$01229$idx1347$val = 0, $$01229$idx1348 = 0, $$01229$idx1348$val = 0, $$01229$idx1349 = 0, $$01229$idx1349$val = 0, $$01229$idx1353 = 0, $$01229$idx1353$val = 0, $$012301601 = 0, $$01237 = 0, $$01242$lcssa = Math_fround(0), $$012421563 = Math_fround(0), $$012421563$us = Math_fround(0), $$012431562 = Math_fround(0), $$012431562$us = Math_fround(0), $$0124614051411 = 0, $$01248$us = Math_fround(0), $$01249$lcssa = 0, $$012491590$us = 0;
 var $$01251$lcssa = Math_fround(0), $$012511589$us = Math_fround(0), $$01254$lcssa = Math_fround(0), $$012541588$us = Math_fround(0), $$01257$lcssa = 0, $$012571572 = 0, $$012571572$us = 0, $$01259 = 0, $$0126$us$i = Math_fround(0), $$01260 = 0, $$012631604 = 0, $$01264 = 0, $$01265 = 0, $$01273 = 0, $$01275 = 0, $$012791533 = 0, $$0128$$i = Math_fround(0), $$0128$lcssa$i = Math_fround(0), $$012817$i = Math_fround(0), $$01282 = 0;
 var $$01284$ph = Math_fround(0), $$012841416 = Math_fround(0), $$01285 = Math_fround(0), $$01286$ph = Math_fround(0), $$012861415 = Math_fround(0), $$012871403$ph = 0, $$0128714031413 = 0, $$01288 = 0, $$01292$lcssa = 0, $$012921532 = 0, $$01296 = 0, $$0130$us$i = 0, $$01302 = 0, $$01303 = 0, $$013041401 = 0, $$0146$i = 0, $$022$$i = Math_fround(0), $$022$$i1375 = Math_fround(0), $$022$$i1385 = Math_fround(0), $$022$lcssa$i = Math_fround(0);
 var $$022$lcssa$i1377 = Math_fround(0), $$022$lcssa$i1387 = Math_fround(0), $$02225$i = Math_fround(0), $$02225$i1373 = Math_fround(0), $$02225$i1383 = Math_fround(0), $$02324$i = 0, $$02324$i1374 = 0, $$02324$i1384 = 0, $$026$i = Math_fround(0), $$026$i1372 = Math_fround(0), $$026$i1382 = Math_fround(0), $$05262$i = Math_fround(0), $$05361$i = Math_fround(0), $$05556$i = 0, $$063$i = 0, $$063$lcssa$i = 0, $$06376$i = 0, $$065$i = 0, $$06675$i = 0, $$06874$i = 0;
 var $$078$i = 0, $$089$us$i = 0, $$090$us$i = Math_fround(0), $$1 = 0, $$1$i = 0, $$1$i1366 = 0, $$1$i1394 = 0, $$1$lcssa$i = Math_fround(0), $$1$peel$i = 0, $$101552 = 0, $$1110$i = 0, $$1112$i = 0, $$111540$us = 0, $$11214 = 0, $$11216 = 0, $$11220 = 0, $$112311598 = 0, $$112381591$us = 0, $$11247 = 0, $$112471421 = 0;
 var $$112471422 = 0, $$112501580$us = 0, $$112521579$us = Math_fround(0), $$112551578$us = Math_fround(0), $$11258 = 0, $$11258$us = 0, $$1126114041412 = 0, $$11267 = 0, $$1127$lcssa$lcssa$i = Math_fround(0), $$112714$us$i = Math_fround(0), $$11274 = 0, $$11276 = 0, $$11291 = 0, $$11293$lcssa1678 = 0, $$11293$lcssa1679 = 0, $$112931512 = 0, $$11297 = 0, $$1132$i = Math_fround(0), $$118$i = 0, $$121534 = 0;
 var $$1308 = 0, $$1311 = Math_fround(0), $$131505$us = 0, $$1317 = Math_fround(0), $$1319$us = Math_fround(0), $$1320 = Math_fround(0), $$1320$$us = Math_fround(0), $$1320$us = Math_fround(0), $$1325 = 0, $$1326 = 0, $$1329 = 0, $$1333 = 0, $$1335 = 0, $$1337 = Math_fround(0), $$141502 = 0, $$150$i = 0, $$151499 = 0, $$154$lcssa$i = Math_fround(0), $$15457$i = Math_fround(0), $$158$i = Math_fround(0);
 var $$161487$us = 0, $$164$i = 0, $$16773$i = 0, $$169$i = 0, $$169$peel$i = 0, $$171488$us = 0, $$171488$us1493 = 0, $$191$lcssa$lcssa$i = Math_fround(0), $$19198$us$i = Math_fround(0), $$2 = 0, $$2$i = 0, $$2101$i = 0, $$212321581$us = 0, $$21239$us = 0, $$21253 = Math_fround(0), $$21256 = Math_fround(0), $$21262 = 0, $$212621419 = 0, $$212621420 = 0, $$21268 = 0;
 var $$21277 = 0, $$21298$lcssa = 0, $$212981531 = 0, $$2133$i = Math_fround(0), $$215$us$i = 0, $$3$i = 0, $$31222 = 0, $$312331573 = 0, $$312331573$us = 0, $$31240$us = 0, $$31269 = 0, $$312991511 = 0, $$399$us$i = 0, $$4 = 0, $$412341569 = 0, $$41241$us = 0, $$41241$us1492 = 0, $$41300 = 0, $$413001682 = 0, $$413001683 = 0;
 var $$5 = 0, $$5$ = 0, $$5$i = 0, $$512351564 = 0, $$512351564$us = 0, $$51271 = 0, $$51301 = 0, $$6 = 0, $$6$ = 0, $$612361558 = 0, $$71555 = 0, $$81546 = 0, $$92$i = Math_fround(0), $$93$i = Math_fround(0), $$95$i = Math_fround(0), $$alloca_mul = 0, $$alloca_mul12 = 0, $$alloca_mul14 = 0, $$alloca_mul16 = 0, $$alloca_mul18 = 0;
 var $$alloca_mul20 = 0, $$alloca_mul22 = 0, $$alloca_mul24 = 0, $$alloca_mul26 = 0, $$alloca_mul28 = 0, $$alloca_mul30 = 0, $$alloca_mul32 = 0, $$alloca_mul34 = 0, $$alloca_mul36 = 0, $$alloca_mul38 = 0, $$alloca_mul40 = 0, $$alloca_mul42 = 0, $$alloca_mul44 = 0, $$alloca_mul46 = 0, $$idx = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$peel$i = 0, $$idx1350 = 0, $$idx1350$val = 0;
 var $$idx1351$val = 0, $$idx1352$val = 0, $$idx70$val$i = 0, $$idx70$val$peel$i = 0, $$idx71$i = 0, $$idx71$val$i = 0, $$idx72$i = 0, $$idx72$val$i = 0, $$mux$i = Math_fround(0), $$mux$us = Math_fround(0), $$mux10$i = Math_fround(0), $$mux1446$us = Math_fround(0), $$neg = 0, $$neg1450 = 0, $$neg1452 = 0, $$neg1453 = 0, $$neg1454 = 0, $$neg1457 = 0, $$neg1459 = 0, $$not1434$us = 0;
 var $$op = 0, $$ph1407 = 0, $$ph1408 = 0, $$ph1409 = 0, $$phi$trans$insert = 0, $$pr = 0, $$pre = 0, $$pre$i = 0, $$pre$i1355 = 0, $$pre$i1358 = 0, $$pre$phi1669Z2D = 0, $$pre$phi1675Z2D = 0, $$pre$phi3$iZ2D = Math_fround(0), $$pre1662$pre = 0, $$pre1666 = 0, $$pre1670 = 0, $$pre1672 = 0, $$pre1674 = 0, $$pre2$i = Math_fround(0), $10 = 0;
 var $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = Math_fround(0), $1008 = 0, $1009 = Math_fround(0), $101 = 0, $1010 = Math_fround(0), $1011 = Math_fround(0), $1012 = 0, $1013 = Math_fround(0), $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0;
 var $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = Math_fround(0), $1026 = 0, $1027 = Math_fround(0), $1028 = Math_fround(0), $1029 = Math_fround(0), $103 = 0, $1030 = 0, $1031 = Math_fround(0), $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0;
 var $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = Math_fround(0), $1044 = 0, $1045 = Math_fround(0), $1046 = Math_fround(0), $1047 = Math_fround(0), $1048 = 0, $1049 = Math_fround(0), $105 = 0, $1050 = Math_fround(0), $1051 = Math_fround(0), $1052 = 0, $1053 = 0;
 var $1054 = Math_fround(0), $1055 = Math_fround(0), $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0;
 var $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = Math_fround(0), $1081 = 0, $1082 = Math_fround(0), $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0;
 var $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = Math_fround(0), $1104 = 0.0, $1105 = 0, $1106 = Math_fround(0), $1107 = 0;
 var $1108 = Math_fround(0), $1109 = Math_fround(0), $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = Math_fround(0), $112 = 0, $1120 = Math_fround(0), $1121 = Math_fround(0), $1122 = Math_fround(0), $1123 = 0, $1124 = Math_fround(0), $1125 = Math_fround(0);
 var $1126 = Math_fround(0), $1127 = Math_fround(0), $1128 = 0, $1129 = Math_fround(0), $113 = 0, $1130 = Math_fround(0), $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = Math_fround(0), $1138 = Math_fround(0), $1139 = Math_fround(0), $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0;
 var $1144 = Math_fround(0), $1145 = Math_fround(0), $1146 = 0, $1147 = Math_fround(0), $1148 = 0, $1149 = Math_fround(0), $115 = 0, $1150 = Math_fround(0), $1151 = Math_fround(0), $1152 = 0, $1153 = 0, $1154 = Math_fround(0), $1155 = 0, $1156 = 0, $1157 = 0, $1158 = Math_fround(0), $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0;
 var $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = Math_fround(0), $1171 = Math_fround(0), $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0;
 var $1180 = Math_fround(0), $1181 = Math_fround(0), $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = Math_fround(0), $119 = 0, $1190 = Math_fround(0), $1191 = Math_fround(0), $1192 = Math_fround(0), $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0;
 var $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = Math_fround(0), $1206 = Math_fround(0), $1207 = Math_fround(0), $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0;
 var $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0;
 var $1234 = 0, $1235 = Math_fround(0), $1236 = Math_fround(0), $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = Math_fround(0), $125 = 0, $1250 = Math_fround(0), $1251 = 0;
 var $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0;
 var $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0;
 var $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = Math_fround(0), $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0;
 var $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = Math_fround(0);
 var $1324 = 0, $1325 = Math_fround(0), $1326 = 0, $1327 = Math_fround(0), $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0;
 var $1342 = 0, $1343 = 0, $1344 = Math_fround(0), $1345 = 0, $1346 = Math_fround(0), $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0;
 var $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = Math_fround(0), $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0;
 var $1379 = 0, $138 = 0, $1380 = 0, $139 = 0, $14 = 0, $140 = Math_fround(0), $141 = 0, $142 = Math_fround(0), $143 = 0, $144 = Math_fround(0), $145 = 0, $146 = 0, $147 = Math_fround(0), $148 = 0, $149 = 0, $15 = 0, $150 = Math_fround(0), $151 = 0, $152 = Math_fround(0), $153 = 0;
 var $154 = Math_fround(0), $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = Math_fround(0), $161 = 0, $162 = 0, $163 = Math_fround(0), $164 = 0, $165 = Math_fround(0), $166 = 0, $167 = Math_fround(0), $168 = 0, $169 = Math_fround(0), $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = Math_fround(0), $174 = Math_fround(0), $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = Math_fround(0), $223 = 0, $224 = 0, $225 = Math_fround(0), $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = Math_fround(0), $232 = 0.0, $233 = 0, $234 = 0, $235 = 0.0, $236 = 0, $237 = 0, $238 = 0.0, $239 = 0.0, $24 = 0, $240 = 0, $241 = 0.0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = Math_fround(0), $293 = Math_fround(0), $294 = 0, $295 = Math_fround(0), $296 = Math_fround(0), $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = Math_fround(0), $311 = Math_fround(0), $312 = Math_fround(0), $313 = 0, $314 = 0, $315 = Math_fround(0), $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = Math_fround(0), $335 = 0;
 var $336 = Math_fround(0), $337 = 0, $338 = Math_fround(0), $339 = 0, $34 = 0, $340 = Math_fround(0), $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = Math_fround(0), $349 = Math_fround(0), $35 = 0, $350 = Math_fround(0), $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = Math_fround(0), $356 = Math_fround(0), $357 = Math_fround(0), $358 = 0, $359 = 0, $36 = 0, $360 = Math_fround(0), $361 = Math_fround(0), $362 = Math_fround(0), $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = Math_fround(0), $369 = Math_fround(0), $37 = 0, $370 = Math_fround(0), $371 = 0;
 var $372 = Math_fround(0), $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = Math_fround(0), $382 = Math_fround(0), $383 = 0, $384 = 0, $385 = 0, $386 = Math_fround(0), $387 = Math_fround(0), $388 = Math_fround(0), $389 = 0, $39 = 0;
 var $390 = Math_fround(0), $391 = 0, $392 = 0, $393 = Math_fround(0), $394 = 0, $395 = 0, $396 = Math_fround(0), $397 = Math_fround(0), $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = Math_fround(0), $402 = 0, $403 = 0, $404 = 0, $405 = Math_fround(0), $406 = Math_fround(0), $407 = Math_fround(0), $408 = 0;
 var $409 = Math_fround(0), $41 = 0, $410 = 0, $411 = Math_fround(0), $412 = Math_fround(0), $413 = 0, $414 = 0, $415 = 0, $416 = Math_fround(0), $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = Math_fround(0), $421 = 0, $422 = 0, $423 = 0, $424 = Math_fround(0), $425 = Math_fround(0), $426 = 0;
 var $427 = Math_fround(0), $428 = 0, $429 = 0, $43 = 0, $430 = Math_fround(0), $431 = Math_fround(0), $432 = 0, $433 = Math_fround(0), $434 = Math_fround(0), $435 = Math_fround(0), $436 = 0, $437 = 0, $438 = 0, $439 = Math_fround(0), $44 = 0, $440 = 0, $441 = Math_fround(0), $442 = Math_fround(0), $443 = 0, $444 = 0;
 var $445 = 0, $446 = Math_fround(0), $447 = Math_fround(0), $448 = 0, $449 = Math_fround(0), $45 = 0, $450 = 0, $451 = Math_fround(0), $452 = 0, $453 = Math_fround(0), $454 = Math_fround(0), $455 = 0, $456 = Math_fround(0), $457 = 0, $458 = 0, $459 = Math_fround(0), $46 = 0, $460 = Math_fround(0), $461 = 0, $462 = Math_fround(0);
 var $463 = Math_fround(0), $464 = 0, $465 = Math_fround(0), $466 = 0, $467 = Math_fround(0), $468 = Math_fround(0), $469 = Math_fround(0), $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0;
 var $481 = 0, $482 = 0, $483 = Math_fround(0), $484 = 0, $485 = 0, $486 = Math_fround(0), $487 = Math_fround(0), $488 = 0, $489 = Math_fround(0), $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = Math_fround(0), $495 = 0, $496 = 0, $497 = 0, $498 = Math_fround(0), $499 = Math_fround(0);
 var $50 = 0, $500 = 0, $501 = Math_fround(0), $502 = 0, $503 = 0, $504 = Math_fround(0), $505 = 0, $506 = 0, $507 = Math_fround(0), $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = Math_fround(0), $513 = 0, $514 = 0, $515 = Math_fround(0), $516 = Math_fround(0), $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = Math_fround(0), $528 = 0, $529 = Math_fround(0), $53 = 0, $530 = 0, $531 = Math_fround(0), $532 = 0, $533 = Math_fround(0), $534 = Math_fround(0), $535 = 0;
 var $536 = Math_fround(0), $537 = Math_fround(0), $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = Math_fround(0), $545 = Math_fround(0), $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = Math_fround(0), $552 = Math_fround(0), $553 = 0;
 var $554 = Math_fround(0), $555 = Math_fround(0), $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = Math_fround(0), $571 = 0;
 var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;
 var $590 = 0, $591 = 0, $592 = 0, $593 = Math_fround(0), $594 = 0, $595 = Math_fround(0), $596 = Math_fround(0), $597 = Math_fround(0), $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = Math_fround(0), $601 = Math_fround(0), $602 = Math_fround(0), $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0;
 var $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0;
 var $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0;
 var $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0;
 var $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0;
 var $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0;
 var $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = Math_fround(0), $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0;
 var $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0;
 var $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0;
 var $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = Math_fround(0), $763 = 0, $764 = 0, $765 = Math_fround(0), $766 = Math_fround(0), $767 = Math_fround(0), $768 = Math_fround(0), $769 = Math_fround(0), $77 = 0;
 var $770 = Math_fround(0), $771 = Math_fround(0), $772 = Math_fround(0), $773 = Math_fround(0), $774 = Math_fround(0), $775 = Math_fround(0), $776 = 0, $777 = Math_fround(0), $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = Math_fround(0), $786 = Math_fround(0), $787 = Math_fround(0), $788 = Math_fround(0);
 var $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = Math_fround(0), $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0;
 var $806 = Math_fround(0), $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = Math_fround(0), $814 = Math_fround(0), $815 = Math_fround(0), $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0;
 var $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = Math_fround(0), $831 = 0, $832 = Math_fround(0), $833 = Math_fround(0), $834 = Math_fround(0), $835 = 0, $836 = Math_fround(0), $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0;
 var $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0;
 var $860 = 0, $861 = Math_fround(0), $862 = 0, $863 = Math_fround(0), $864 = Math_fround(0), $865 = Math_fround(0), $866 = 0, $867 = Math_fround(0), $868 = 0, $869 = Math_fround(0), $87 = 0, $870 = 0, $871 = Math_fround(0), $872 = Math_fround(0), $873 = Math_fround(0), $874 = Math_fround(0), $875 = 0.0, $876 = 0.0, $877 = 0.0, $878 = Math_fround(0);
 var $879 = Math_fround(0), $88 = 0, $880 = Math_fround(0), $881 = Math_fround(0), $882 = 0.0, $883 = 0.0, $884 = 0.0, $885 = Math_fround(0), $886 = 0, $887 = Math_fround(0), $888 = 0, $889 = Math_fround(0), $89 = 0, $890 = Math_fround(0), $891 = Math_fround(0), $892 = Math_fround(0), $893 = Math_fround(0), $894 = Math_fround(0), $895 = 0, $896 = Math_fround(0);
 var $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = Math_fround(0), $904 = 0, $905 = 0, $906 = Math_fround(0), $907 = Math_fround(0), $908 = Math_fround(0), $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = Math_fround(0);
 var $914 = Math_fround(0), $915 = Math_fround(0), $916 = Math_fround(0), $917 = 0, $918 = 0, $919 = Math_fround(0), $92 = 0, $920 = Math_fround(0), $921 = Math_fround(0), $922 = Math_fround(0), $923 = Math_fround(0), $924 = 0, $925 = 0, $926 = 0, $927 = Math_fround(0), $928 = Math_fround(0), $929 = Math_fround(0), $93 = 0, $930 = 0, $931 = 0;
 var $932 = Math_fround(0), $933 = Math_fround(0), $934 = 0, $935 = Math_fround(0), $936 = 0, $937 = Math_fround(0), $938 = Math_fround(0), $939 = Math_fround(0), $94 = 0, $940 = 0, $941 = Math_fround(0), $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0;
 var $950 = 0, $951 = 0, $952 = 0, $953 = Math_fround(0), $954 = 0, $955 = Math_fround(0), $956 = Math_fround(0), $957 = Math_fround(0), $958 = 0, $959 = Math_fround(0), $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0;
 var $969 = 0, $97 = 0, $970 = 0, $971 = Math_fround(0), $972 = 0, $973 = Math_fround(0), $974 = Math_fround(0), $975 = Math_fround(0), $976 = 0, $977 = Math_fround(0), $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0;
 var $987 = 0, $988 = 0, $989 = Math_fround(0), $99 = 0, $990 = 0, $991 = Math_fround(0), $992 = Math_fround(0), $993 = Math_fround(0), $994 = 0, $995 = Math_fround(0), $996 = 0, $997 = 0, $998 = 0, $999 = 0, $brmerge$i = 0, $brmerge$us = 0, $brmerge1445$us = 0, $brmerge9$i = 0, $exitcond = 0, $exitcond$i = 0;
 var $exitcond$i$1$i = 0, $exitcond$i$2$i = 0, $exitcond$i$3$i = 0, $exitcond$i$4$i = 0, $exitcond$i$5$i = 0, $exitcond$i$6$i = 0, $exitcond$i$7$i = 0, $exitcond$i$i = 0, $exitcond$i1359 = 0, $exitcond$i1363 = 0, $exitcond$i1369 = 0, $exitcond$i1376 = 0, $exitcond$i1386 = 0, $exitcond$i1393 = 0, $exitcond$i5$i = 0, $exitcond117$i = 0, $exitcond1642 = 0, $exitcond1644 = 0, $exitcond1646 = 0, $exitcond1647 = 0;
 var $exitcond1648 = 0, $exitcond1649 = 0, $exitcond1650 = 0, $exitcond1651 = 0, $exitcond1652 = 0, $exitcond1654 = 0, $exitcond1655 = 0, $exitcond1656 = 0, $exitcond1657 = 0, $exitcond1658 = 0, $exitcond1660 = 0, $exitcond1661 = 0, $exitcond29$i = 0, $exitcond82$i = 0, $exitcond82$peel$i = 0, $not$ = 0, $not$$i = 0, $not$11$i = 0, $or$cond = 0, $or$cond$i = 0;
 var $or$cond13 = 0, $or$cond1313 = 0, $or$cond1315 = 0, $or$cond1323 = 0, $or$cond1436 = 0, $or$cond16 = 0, $or$cond1607 = 0, $or$cond1608 = 0, $or$cond1718 = 0, $or$cond19 = 0, $or$cond25 = 0, $or$cond28 = 0, $or$cond3 = 0, $or$cond3$i = 0, $or$cond31 = 0, $or$cond34 = 0, $or$cond7$i = 0, $or$cond9$i = 0, $phitmp$i = Math_fround(0), $phitmp$i1356 = 0;
 var $phitmp$i1367 = 0, $phitmp1$i = 0, $phitmp148$i = Math_fround(0), $phitmp149$i = Math_fround(0), $spec$select = 0, $spec$select$i = 0, $spec$select$i1357 = 0, $spec$select$i1361 = 0, $spec$select$i1365 = 0, $spec$select1$i = 0, $spec$select1310 = 0, $spec$select1316 = 0, $spec$select1318 = 0, $spec$select1321 = 0, $spec$select1324 = 0, $spec$select1328 = 0, $spec$select1330 = 0, $spec$select1331 = 0, $spec$select1332 = 0, $spec$select1334 = 0;
 var $spec$select1338 = 0, $spec$select1432 = 0, $spec$select1433 = 0, $spec$select1438 = 0, $spec$select1439 = Math_fround(0), $spec$select1440 = 0, $spec$select1443 = 0, $spec$select1444 = 0, $spec$select1447 = 0, $spec$select1448 = 0, $spec$select8$i = Math_fround(0), $storemerge = 0, $storemerge1305 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $6 = sp;
 $7 = sp + 144|0;
 $8 = sp + 136|0;
 $9 = sp + 132|0;
 $10 = sp + 128|0;
 $11 = sp + 124|0;
 $12 = sp + 120|0;
 $13 = sp + 116|0;
 $14 = sp + 112|0;
 $15 = sp + 108|0;
 $16 = sp + 104|0;
 $17 = ((($0)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($0)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 HEAP32[$8>>2] = 15;
 HEAPF32[$9>>2] = Math_fround(0.0);
 HEAP32[$10>>2] = 0;
 HEAP32[$12>>2] = 0;
 HEAP32[$15>>2] = 0;
 $21 = HEAP32[$0>>2]|0;
 $22 = ((($21)) + 8|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($21)) + 4|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ((($21)) + 32|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($0)) + 32|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ((($0)) + 36|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($29|0)!=(0);
 HEAPF32[$13>>2] = Math_fround(0.0);
 $33 = ($4|0)<(2);
 $34 = ($1|0)==(0|0);
 $or$cond = $34 | $33;
 if ($or$cond) {
  $$1 = -1;
  STACKTOP = sp;return ($$1|0);
 }
 $35 = ((($0)) + 28|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = Math_imul($36, $2)|0;
 $38 = ((($21)) + 36|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ($39|0)<(0);
 if ($40) {
  $$1 = -1;
  STACKTOP = sp;return ($$1|0);
 }
 $41 = ((($21)) + 44|0);
 $42 = HEAP32[$41>>2]|0;
 $$012631604 = 0;
 while(1) {
  $43 = $42 << $$012631604;
  $44 = ($43|0)==($37|0);
  if ($44) {
   break;
  }
  $45 = (($$012631604) + 1)|0;
  $46 = ($$012631604|0)<($39|0);
  if ($46) {
   $$012631604 = $45;
  } else {
   $$1 = -1;
   label = 325;
   break;
  }
 }
 if ((label|0) == 325) {
  STACKTOP = sp;return ($$1|0);
 }
 $47 = 1 << $$012631604;
 $48 = Math_imul($25, $18)|0;
 $49 = (((($0)) + 236|0) + ($48<<2)|0);
 $50 = (($25) + 1024)|0;
 $51 = Math_imul($50, $18)|0;
 $52 = (((($0)) + 236|0) + ($51<<2)|0);
 $53 = Math_imul($23, $18)|0;
 $54 = (($52) + ($53<<2)|0);
 $55 = (($54) + ($53<<2)|0);
 $56 = (($55) + ($53<<2)|0);
 $57 = ($5|0)==(0|0);
 if ($57) {
  $$01265 = 0;$$01296 = 1;$$01302 = 1;
 } else {
  $58 = (_ec_tell_frac($5)|0);
  $$idx = ((($5)) + 20|0);
  $$idx$val = HEAP32[$$idx>>2]|0;
  $$idx1350 = ((($5)) + 28|0);
  $$idx1350$val = HEAP32[$$idx1350>>2]|0;
  $59 = (Math_clz32(($$idx1350$val|0))|0);
  $60 = (($$idx$val) + -32)|0;
  $61 = (($60) + ($59))|0;
  $62 = (($61) + 4)|0;
  $63 = $62 >> 3;
  $$01265 = $63;$$01296 = $61;$$01302 = $58;
 }
 $64 = ($4|0)<(1275);
 $65 = $64 ? $4 : 1275;
 $66 = (($65) - ($$01265))|0;
 $67 = ((($0)) + 44|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = ($68|0)==(0);
 $$phi$trans$insert = ((($0)) + 40|0);
 $$pre = HEAP32[$$phi$trans$insert>>2]|0;
 $70 = ($$pre|0)==(-1);
 if ($69) {
  if ($70) {
   $$01275 = $66;$$01282 = 0;$$11220 = $65;$103 = -1;
  } else {
   $78 = ($$01296|0)>(1);
   $79 = Math_imul($$pre, $37)|0;
   $80 = $78 ? $$01296 : 0;
   $spec$select = (($79) + ($80))|0;
   $81 = HEAP32[$21>>2]|0;
   $82 = $81 << 2;
   $83 = (($spec$select) + ($82))|0;
   $84 = $81 << 3;
   $85 = (($83|0) / ($84|0))&-1;
   $86 = ((($0)) + 48|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = ($87|0)!=(0);
   $89 = $88&1;
   $90 = (($85) - ($89))|0;
   $91 = ($65|0)<($90|0);
   $$ = $91 ? $65 : $90;
   $92 = ($$|0)>(2);
   $spec$select1432 = $92 ? $$ : 2;
   $$pre1666 = (($spec$select1432) - ($$01265))|0;
   $$01275 = $$pre1666;$$01282 = 0;$$11220 = $spec$select1432;$103 = $$pre;
  }
 } else {
  if ($70) {
   $$01275 = $66;$$01282 = 0;$$11220 = $65;$103 = -1;
  } else {
   $71 = HEAP32[$21>>2]|0;
   $72 = $71 >> 3;
   $73 = Math_imul($$pre, $37)|0;
   $74 = $71 >> 4;
   $75 = (($74) + ($73))|0;
   $76 = (($75|0) / ($72|0))&-1;
   $77 = $76 >> 6;
   $$01275 = $77;$$01282 = $76;$$11220 = $65;$103 = $$pre;
  }
 }
 $93 = ($$11220*400)|0;
 $94 = (3 - ($$012631604))|0;
 $95 = $93 >> $94;
 $96 = ($20*40)|0;
 $97 = (($96) + 20)|0;
 $98 = 400 >>> $$012631604;
 $99 = (($98) + -50)|0;
 $100 = Math_imul($99, $97)|0;
 $101 = (($95) - ($100))|0;
 $102 = ($103|0)==(-1);
 $104 = (($103) - ($100))|0;
 $105 = ($101|0)<($104|0);
 $106 = $102 | $105;
 $spec$select1433 = $106 ? $101 : $104;
 if ($57) {
  _ec_enc_init($7,$3,$$11220);
  $$01229 = $7;
 } else {
  $$01229 = $5;
 }
 $107 = ($$01282|0)>(0);
 if ($107) {
  $108 = ((($0)) + 52|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($109|0)==(0);
  if ($110) {
   $$11267 = $66;$$31222 = $$11220;
  } else {
   $111 = ($$01296|0)==(1);
   $112 = $111 ? 2 : 0;
   $113 = $$01282 << 1;
   $114 = ((($0)) + 200|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = (($113) - ($115))|0;
   $117 = $116 >> 6;
   $118 = ($112|0)>($117|0);
   $$1308 = $118 ? $112 : $117;
   $119 = ($$1308|0)<($66|0);
   if ($119) {
    $120 = (($$1308) + ($$01265))|0;
    _ec_enc_shrink($$01229,$120);
    $$11267 = $$1308;$$31222 = $120;
   } else {
    $$11267 = $66;$$31222 = $$11220;
   }
  }
 } else {
  $$11267 = $66;$$31222 = $$11220;
 }
 $121 = $$31222 << 3;
 $122 = ((($21)) + 12|0);
 $123 = HEAP32[$122>>2]|0;
 $124 = ($31|0)>($123|0);
 $spec$select1310 = $124 ? $123 : $31;
 $125 = (($37) + ($25))|0;
 $126 = Math_imul($125, $18)|0;
 $127 = (_llvm_stacksave()|0);
 $$alloca_mul = $126<<2;
 $128 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $129 = ((($0)) + 216|0);
 $130 = Math_fround(HEAPF32[$129>>2]);
 $131 = (($37) - ($25))|0;
 $132 = Math_imul($131, $20)|0;
 $133 = HEAP32[$35>>2]|0;
 $134 = (($132|0) / ($133|0))&-1;
 $135 = ($134|0)>(0);
 if ($135) {
  $$02225$i = Math_fround(0.0);$$02324$i = 0;$$026$i = Math_fround(0.0);
  while(1) {
   $136 = (($1) + ($$02324$i<<2)|0);
   $137 = Math_fround(HEAPF32[$136>>2]);
   $138 = $$02225$i > $137;
   $$022$$i = $138 ? $$02225$i : $137;
   $139 = $$026$i < $137;
   $140 = $139 ? $$026$i : $137;
   $141 = (($$02324$i) + 1)|0;
   $exitcond$i1363 = ($141|0)==($134|0);
   if ($exitcond$i1363) {
    $$0$lcssa$i = $140;$$022$lcssa$i = $$022$$i;
    break;
   } else {
    $$02225$i = $$022$$i;$$02324$i = $141;$$026$i = $140;
   }
  }
 } else {
  $$0$lcssa$i = Math_fround(0.0);$$022$lcssa$i = Math_fround(0.0);
 }
 $142 = Math_fround(- $$0$lcssa$i);
 $143 = $$022$lcssa$i > $142;
 $144 = $143 ? $$022$lcssa$i : $142;
 $145 = $130 > $144;
 if ($145) {
  $169 = $130;
 } else {
  if ($135) {
   $$02225$i1373 = Math_fround(0.0);$$02324$i1374 = 0;$$026$i1372 = Math_fround(0.0);
   while(1) {
    $146 = (($1) + ($$02324$i1374<<2)|0);
    $147 = Math_fround(HEAPF32[$146>>2]);
    $148 = $$02225$i1373 > $147;
    $$022$$i1375 = $148 ? $$02225$i1373 : $147;
    $149 = $$026$i1372 < $147;
    $150 = $149 ? $$026$i1372 : $147;
    $151 = (($$02324$i1374) + 1)|0;
    $exitcond$i1376 = ($151|0)==($134|0);
    if ($exitcond$i1376) {
     $$0$lcssa$i1378 = $150;$$022$lcssa$i1377 = $$022$$i1375;
     break;
    } else {
     $$02225$i1373 = $$022$$i1375;$$02324$i1374 = $151;$$026$i1372 = $150;
    }
   }
  } else {
   $$0$lcssa$i1378 = Math_fround(0.0);$$022$lcssa$i1377 = Math_fround(0.0);
  }
  $152 = Math_fround(- $$0$lcssa$i1378);
  $153 = $$022$lcssa$i1377 > $152;
  $154 = $153 ? $$022$lcssa$i1377 : $152;
  $169 = $154;
 }
 $155 = (($1) + ($134<<2)|0);
 $156 = Math_imul($25, $20)|0;
 $157 = (($156|0) / ($133|0))&-1;
 $158 = ($157|0)>(0);
 if ($158) {
  $$02225$i1383 = Math_fround(0.0);$$02324$i1384 = 0;$$026$i1382 = Math_fround(0.0);
  while(1) {
   $159 = (($155) + ($$02324$i1384<<2)|0);
   $160 = Math_fround(HEAPF32[$159>>2]);
   $161 = $$02225$i1383 > $160;
   $$022$$i1385 = $161 ? $$02225$i1383 : $160;
   $162 = $$026$i1382 < $160;
   $163 = $162 ? $$026$i1382 : $160;
   $164 = (($$02324$i1384) + 1)|0;
   $exitcond$i1386 = ($164|0)==($157|0);
   if ($exitcond$i1386) {
    $$0$lcssa$i1388 = $163;$$022$lcssa$i1387 = $$022$$i1385;
    break;
   } else {
    $$02225$i1383 = $$022$$i1385;$$02324$i1384 = $164;$$026$i1382 = $163;
   }
  }
 } else {
  $$0$lcssa$i1388 = Math_fround(0.0);$$022$lcssa$i1387 = Math_fround(0.0);
 }
 $165 = Math_fround(- $$0$lcssa$i1388);
 $166 = $$022$lcssa$i1387 > $165;
 $167 = $166 ? $$022$lcssa$i1387 : $165;
 HEAPF32[$129>>2] = $167;
 $168 = $169 > $167;
 $$1311 = $168 ? $169 : $167;
 $170 = ((($0)) + 60|0);
 $171 = HEAP32[$170>>2]|0;
 $172 = 1 << $171;
 $173 = (Math_fround(($172|0)));
 $174 = Math_fround(Math_fround(1.0) / $173);
 $175 = $$1311 <= $174;
 $176 = ($$01296|0)==(1);
 if ($176) {
  $177 = $175&1;
  _ec_enc_bit_logp($$01229,$177,15);
  if ($175) {
   $178 = (($$01265) + 2)|0;
   $179 = ($$31222|0)<($178|0);
   $180 = $179 ? $$31222 : $178;
   if ($107) {
    $181 = $180 << 3;
    _ec_enc_shrink($$01229,$180);
    $$11276 = $180;$$21268 = 2;$$4 = $180;$$pre$phi1669Z2D = $181;
   } else {
    $$11276 = $$01275;$$21268 = $$11267;$$4 = $$31222;$$pre$phi1669Z2D = $121;
   }
   $$01229$idx1348 = ((($$01229)) + 20|0);
   $$01229$idx1348$val = HEAP32[$$01229$idx1348>>2]|0;
   $$01229$idx1349 = ((($$01229)) + 28|0);
   $$01229$idx1349$val = HEAP32[$$01229$idx1349>>2]|0;
   $182 = (Math_clz32(($$01229$idx1349$val|0))|0);
   $$neg = (32 - ($$01229$idx1348$val))|0;
   $$neg1450 = (($$neg) + ($$pre$phi1669Z2D))|0;
   $183 = (($$neg1450) - ($182))|0;
   $184 = (($183) + ($$01229$idx1348$val))|0;
   HEAP32[$$01229$idx1348>>2] = $184;
   $$013041401 = 1;$$11291 = $$pre$phi1669Z2D;$$11297 = $$pre$phi1669Z2D;$$21277 = $$11276;$$31269 = $$21268;$$5 = $$4;$1230 = 1;
  } else {
   $$013041401 = 0;$$11291 = $121;$$11297 = 1;$$21277 = $$01275;$$31269 = $$11267;$$5 = $$31222;$1230 = 0;
  }
 } else {
  $$013041401 = 0;$$11291 = $121;$$11297 = $$01296;$$21277 = $$01275;$$31269 = $$11267;$$5 = $$31222;$1230 = 0;
 }
 $185 = ((($0)) + 16|0);
 $186 = $$1311 > Math_fround(65536.0);
 $187 = ((($21)) + 16|0);
 $$01237 = 0;
 while(1) {
  $188 = HEAP32[$185>>2]|0;
  $189 = ($188|0)!=(0);
  $190 = $186 & $189;
  $191 = $190&1;
  $192 = (($1) + ($$01237<<2)|0);
  $193 = Math_imul($$01237, $125)|0;
  $194 = (($128) + ($193<<2)|0);
  $195 = (($194) + ($25<<2)|0);
  $196 = HEAP32[$35>>2]|0;
  $197 = (((($0)) + 184|0) + ($$01237<<2)|0);
  _celt_preemphasis($192,$195,$37,$18,$196,$187,$197,$191);
  $198 = (($$01237) + 1)|0;
  $199 = ($198|0)<($18|0);
  if ($199) {
   $$01237 = $198;
  } else {
   break;
  }
 }
 $200 = ((($0)) + 64|0);
 $201 = HEAP32[$200>>2]|0;
 $202 = ($201|0)!=(0);
 $203 = ($$31269|0)>(3);
 $or$cond3 = $203 & $202;
 if ($or$cond3) {
  $209 = $$013041401 | $29;
  $210 = ($209|0)==(0);
  if ($210) {
   label = 40;
  } else {
   $218 = 0;
  }
 } else {
  $204 = ($20*12)|0;
  $205 = ($$31269|0)<=($204|0);
  $206 = $$013041401 | $29;
  $207 = ($206|0)!=(0);
  $208 = $207 | $205;
  if ($208) {
   $218 = 0;
  } else {
   label = 40;
  }
 }
 if ((label|0) == 40) {
  $211 = ((($0)) + 20|0);
  $212 = HEAP32[$211>>2]|0;
  $213 = ($212|0)==(0);
  if ($213) {
   $214 = ((($0)) + 24|0);
   $215 = HEAP32[$214>>2]|0;
   $216 = ($215|0)>(4);
   $218 = $216;
  } else {
   $218 = 0;
  }
 }
 $217 = $218&1;
 $219 = ((($0)) + 100|0);
 $220 = HEAP32[$219>>2]|0;
 $221 = (_run_prefilter($0,$128,$49,$18,$37,$220,$8,$9,$16,$217,$$31269)|0);
 $222 = Math_fround(HEAPF32[$9>>2]);
 $223 = $222 > Math_fround(0.400000006);
 if ($223) {
  label = 44;
 } else {
  $224 = ((($0)) + 108|0);
  $225 = Math_fround(HEAPF32[$224>>2]);
  $226 = $225 > Math_fround(0.400000006);
  if ($226) {
   label = 44;
  } else {
   $$01303 = 0;
  }
 }
 do {
  if ((label|0) == 44) {
   $227 = ((($0)) + 120|0);
   $228 = HEAP32[$227>>2]|0;
   $229 = ($228|0)==(0);
   if (!($229)) {
    $230 = ((($0)) + 124|0);
    $231 = Math_fround(HEAPF32[$230>>2]);
    $232 = +$231;
    $233 = $232 > 0.29999999999999999;
    if (!($233)) {
     $$01303 = 0;
     break;
    }
   }
   $234 = HEAP32[$8>>2]|0;
   $235 = (+($234|0));
   $236 = ((($0)) + 104|0);
   $237 = HEAP32[$236>>2]|0;
   $238 = (+($237|0));
   $239 = $238 * 1.26;
   $240 = $239 < $235;
   $241 = $238 * 0.79000000000000004;
   $242 = $241 > $235;
   $or$cond1313 = $240 | $242;
   $spec$select1338 = $or$cond1313&1;
   $$01303 = $spec$select1338;
  }
 } while(0);
 $243 = ($221|0)==(0);
 if ($243) {
  $244 = (($$11297) + 16)|0;
  $245 = ($244|0)>($$11291|0);
  $or$cond1315 = $32 | $245;
  if (!($or$cond1315)) {
   _ec_enc_bit_logp($$01229,0,1);
  }
 } else {
  _ec_enc_bit_logp($$01229,1,1);
  $246 = HEAP32[$8>>2]|0;
  $247 = (($246) + 1)|0;
  $248 = (Math_clz32(($247|0))|0);
  $249 = (32 - ($248))|0;
  $250 = (($249) + -5)|0;
  _ec_enc_uint($$01229,$250,6);
  $251 = 16 << $250;
  $252 = (($247) - ($251))|0;
  $253 = (($249) + -1)|0;
  _ec_enc_bits($$01229,$252,$253);
  HEAP32[$8>>2] = $246;
  $254 = HEAP32[$16>>2]|0;
  _ec_enc_bits($$01229,$254,3);
  _ec_enc_icdf($$01229,$220,37731,2);
 }
 $255 = ((($0)) + 24|0);
 $256 = HEAP32[$255>>2]|0;
 $257 = ($256|0)>(0);
 if ($257) {
  $258 = HEAP32[$200>>2]|0;
  $259 = ($258|0)==(0);
  if ($259) {
   $260 = ($$21277|0)<(15);
   $or$cond13 = $32 & $260;
   if ($or$cond13) {
    $261 = ((($0)) + 180|0);
    $262 = HEAP32[$261>>2]|0;
    $263 = ($262|0)>(99);
    $265 = $263;
   } else {
    $265 = 0;
   }
   $264 = $265&1;
   $266 = (_transient_analysis($128,$125,$18,$13,$12,$264,$15)|0);
   $$01260 = $266;
  } else {
   $$01260 = 0;
  }
 } else {
  $$01260 = 0;
 }
 $267 = ($$012631604|0)!=(0);
 if ($267) {
  $$01229$idx1346 = ((($$01229)) + 20|0);
  $$01229$idx1346$val = HEAP32[$$01229$idx1346>>2]|0;
  $$01229$idx1347 = ((($$01229)) + 28|0);
  $$01229$idx1347$val = HEAP32[$$01229$idx1347>>2]|0;
  $268 = (Math_clz32(($$01229$idx1347$val|0))|0);
  $269 = (($$01229$idx1346$val) + -29)|0;
  $270 = (($269) + ($268))|0;
  $271 = ($270|0)>($$11291|0);
  $272 = ($$01260|0)==(0);
  $spec$select1316 = $272 ? 0 : $47;
  if ($271) {
   label = 58;
  } else {
   $277 = Math_imul($37, $18)|0;
   $$alloca_mul18 = $277<<2;
   $278 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul18)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul18)|0)+15)&-16)|0);;
   $$alloca_mul20 = $53<<2;
   $279 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul20)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul20)|0)+15)&-16)|0);;
   $$alloca_mul22 = $53<<2;
   $280 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul22)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul22)|0)+15)&-16)|0);;
   if ($272) {
    $$012871403$ph = 0;$$ph1407 = $280;$$ph1408 = $279;$$ph1409 = $278;
    label = 60;
   } else {
    $283 = HEAP32[$255>>2]|0;
    $284 = ($283|0)>(7);
    $285 = Math_imul($23, $20)|0;
    $$alloca_mul26 = $285<<2;
    $286 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul26)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul26)|0)+15)&-16)|0);;
    if ($284) {
     $287 = HEAP32[$35>>2]|0;
     $288 = ((($0)) + 72|0);
     $289 = HEAP32[$288>>2]|0;
     _compute_mdcts($21,0,$128,$278,$20,$18,$$012631604,$287,$289);
     $290 = HEAP32[$288>>2]|0;
     _compute_band_energies($21,$278,$279,$spec$select1310,$20,$$012631604,$290);
     _amp2Log2($21,$spec$select1310,$31,$279,$286,$20);
     $291 = ($285|0)>(0);
     if ($291) {
      $292 = (Math_fround(($$012631604|0)));
      $293 = Math_fround($292 * Math_fround(0.5));
      $$012301601 = 0;
      while(1) {
       $294 = (($286) + ($$012301601<<2)|0);
       $295 = Math_fround(HEAPF32[$294>>2]);
       $296 = Math_fround($293 + $295);
       HEAPF32[$294>>2] = $296;
       $297 = (($$012301601) + 1)|0;
       $exitcond1661 = ($297|0)==($285|0);
       if ($exitcond1661) {
        $$0124614051411 = $spec$select1316;$$0128714031413 = 0;$$1126114041412 = $$01260;$1379 = 1;$301 = $278;$305 = $279;$317 = $280;$318 = $285;$436 = 1;$471 = $286;
        break;
       } else {
        $$012301601 = $297;
       }
      }
     } else {
      $$0124614051411 = $47;$$0128714031413 = 0;$$1126114041412 = $$01260;$1379 = 1;$301 = $278;$305 = $279;$317 = $280;$318 = $285;$436 = 1;$471 = $286;
     }
    } else {
     $$0124614051411 = $47;$$0128714031413 = 0;$$1126114041412 = $$01260;$1379 = 0;$301 = $278;$305 = $279;$317 = $280;$318 = $285;$436 = 1;$471 = $286;
    }
   }
  }
 } else {
  label = 58;
 }
 if ((label|0) == 58) {
  $273 = Math_imul($37, $18)|0;
  $$alloca_mul12 = $273<<2;
  $274 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul12)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul12)|0)+15)&-16)|0);;
  $$alloca_mul14 = $53<<2;
  $275 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul14)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul14)|0)+15)&-16)|0);;
  $$alloca_mul16 = $53<<2;
  $276 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul16)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul16)|0)+15)&-16)|0);;
  $$012871403$ph = 1;$$ph1407 = $276;$$ph1408 = $275;$$ph1409 = $274;
  label = 60;
 }
 if ((label|0) == 60) {
  $281 = Math_imul($23, $20)|0;
  $$alloca_mul24 = $281<<2;
  $282 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul24)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul24)|0)+15)&-16)|0);;
  $$0124614051411 = 0;$$0128714031413 = $$012871403$ph;$$1126114041412 = 0;$1379 = 0;$301 = $$ph1409;$305 = $$ph1408;$317 = $$ph1407;$318 = $281;$436 = 0;$471 = $282;
 }
 $298 = HEAP32[$35>>2]|0;
 $299 = ((($0)) + 72|0);
 $300 = HEAP32[$299>>2]|0;
 _compute_mdcts($21,$$0124614051411,$128,$301,$20,$18,$$012631604,$298,$300);
 $302 = ($18|0)==(2);
 $303 = ($20|0)==(1);
 $or$cond16 = $302 & $303;
 if ($or$cond16) {
  HEAP32[$12>>2] = 0;
 }
 $304 = HEAP32[$299>>2]|0;
 _compute_band_energies($21,$301,$305,$spec$select1310,$20,$$012631604,$304);
 $306 = HEAP32[$200>>2]|0;
 $307 = ($306|0)!=(0);
 $308 = ($31|0)>(2);
 $or$cond1607 = $307 & $308;
 if ($or$cond1607) {
  $$112311598 = 2;
  while(1) {
   $309 = (($305) + ($$112311598<<2)|0);
   $310 = Math_fround(HEAPF32[$309>>2]);
   $311 = Math_fround(HEAPF32[$305>>2]);
   $312 = Math_fround($311 * Math_fround(9.99999974E-5));
   $313 = $310 < $312;
   $$1317 = $313 ? $310 : $312;
   $314 = $$1317 > Math_fround(1.0E-15);
   $315 = $314 ? $$1317 : Math_fround(1.0E-15);
   HEAPF32[$309>>2] = $315;
   $316 = (($$112311598) + 1)|0;
   $exitcond1660 = ($316|0)==($31|0);
   if ($exitcond1660) {
    break;
   } else {
    $$112311598 = $316;
   }
  }
 }
 _amp2Log2($21,$spec$select1310,$31,$305,$317,$20);
 $$alloca_mul28 = $318<<2;
 $319 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul28)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul28)|0)+15)&-16)|0);;
 $320 = $31 << 2;
 _memset(($319|0),0,($320|0))|0;
 do {
  if ($32) {
   $$01284$ph = Math_fround(0.0);$$01286$ph = Math_fround(0.0);
   label = 97;
  } else {
   $321 = ((($0)) + 228|0);
   $322 = HEAP32[$321>>2]|0;
   $323 = ($322|0)==(0|0);
   if ($323) {
    $$01284$ph = Math_fround(0.0);$$01286$ph = Math_fround(0.0);
    label = 97;
   } else {
    $324 = HEAP32[$200>>2]|0;
    $325 = ($324|0)==(0);
    if (!($325)) {
     $$012841416 = Math_fround(0.0);$$01285 = Math_fround(0.0);$$012861415 = Math_fround(0.0);$480 = $324;
     break;
    }
    $326 = ((($0)) + 92|0);
    $327 = HEAP32[$326>>2]|0;
    $328 = ($327|0)>(2);
    $spec$select1318 = $328 ? $327 : 2;
    $329 = ($20|0)>(0);
    $330 = ($spec$select1318|0)>(0);
    $or$cond1718 = $329 & $330;
    if ($or$cond1718) {
     $$pre1662$pre = HEAP16[$27>>1]|0;
     $$012491590$us = 0;$$012511589$us = Math_fround(0.0);$$012541588$us = Math_fround(0.0);$$112381591$us = 0;
     while(1) {
      $331 = Math_imul($$112381591$us, $23)|0;
      $$112501580$us = $$012491590$us;$$112521579$us = $$012511589$us;$$112551578$us = $$012541588$us;$$212321581$us = 0;$346 = $$pre1662$pre;
      while(1) {
       $332 = (($$212321581$us) + ($331))|0;
       $333 = (($322) + ($332<<2)|0);
       $334 = Math_fround(HEAPF32[$333>>2]);
       $335 = $334 < Math_fround(0.25);
       $336 = $335 ? $334 : Math_fround(0.25);
       $337 = !($336 > Math_fround(-2.0));
       $$not1434$us = $335 ^ 1;
       $brmerge$us = $337 | $$not1434$us;
       $$mux$us = $337 ? Math_fround(-2.0) : Math_fround(0.25);
       $338 = $brmerge$us ? $$mux$us : $334;
       $339 = $338 > Math_fround(0.0);
       $340 = Math_fround($338 * Math_fround(0.5));
       $$01248$us = $339 ? $340 : $338;
       $341 = (($$212321581$us) + 1)|0;
       $342 = (($27) + ($341<<1)|0);
       $343 = HEAP16[$342>>1]|0;
       $344 = $343 << 16 >> 16;
       $345 = $346 << 16 >> 16;
       $347 = (($344) - ($345))|0;
       $348 = (Math_fround(($347|0)));
       $349 = Math_fround($$01248$us * $348);
       $350 = Math_fround($$112551578$us + $349);
       $351 = (($347) + ($$112501580$us))|0;
       $352 = $$212321581$us << 1;
       $353 = $352 | 1;
       $354 = (($353) - ($spec$select1318))|0;
       $355 = (Math_fround(($354|0)));
       $356 = Math_fround($$01248$us * $355);
       $357 = Math_fround($$112521579$us + $356);
       $358 = ($341>>>0)<($spec$select1318>>>0);
       if ($358) {
        $$112501580$us = $351;$$112521579$us = $357;$$112551578$us = $350;$$212321581$us = $341;$346 = $343;
       } else {
        break;
       }
      }
      $359 = (($$112381591$us) + 1)|0;
      $exitcond1658 = ($359|0)==($20|0);
      if ($exitcond1658) {
       $$01249$lcssa = $351;$$01251$lcssa = $357;$$01254$lcssa = $350;
       break;
      } else {
       $$012491590$us = $351;$$012511589$us = $357;$$012541588$us = $350;$$112381591$us = $359;
      }
     }
    } else {
     $$01249$lcssa = 0;$$01251$lcssa = Math_fround(0.0);$$01254$lcssa = Math_fround(0.0);
    }
    $360 = (Math_fround(($$01249$lcssa|0)));
    $361 = Math_fround($$01254$lcssa / $360);
    $362 = Math_fround($$01251$lcssa * Math_fround(6.0));
    $363 = (($spec$select1318) + -1)|0;
    $364 = (($spec$select1318) + 1)|0;
    $365 = Math_imul($spec$select1318, $20)|0;
    $366 = Math_imul($365, $363)|0;
    $367 = Math_imul($366, $364)|0;
    $368 = (Math_fround(($367|0)));
    $369 = Math_fround($362 / $368);
    $370 = Math_fround($369 * Math_fround(0.5));
    $371 = $370 < Math_fround(0.0309999995);
    $372 = $371 ? $370 : Math_fround(0.0309999995);
    $373 = $372 > Math_fround(-0.0309999995);
    $374 = (($27) + ($spec$select1318<<1)|0);
    $375 = HEAP16[$374>>1]|0;
    $376 = (($375<<16>>16) / 2)&-1;
    $$01259 = 0;
    while(1) {
     $377 = (($$01259) + 1)|0;
     $378 = (($27) + ($377<<1)|0);
     $379 = HEAP16[$378>>1]|0;
     $380 = ($379<<16>>16)<($376<<16>>16);
     if ($380) {
      $$01259 = $377;
     } else {
      break;
     }
    }
    $381 = Math_fround($361 + Math_fround(0.200000003));
    $382 = $373 ? $372 : Math_fround(-0.0309999995);
    $383 = ($spec$select1318|0)>(0);
    do {
     if ($383) {
      $384 = ($20|0)==(2);
      if ($384) {
       $$012571572$us = 0;$$312331573$us = 0;
       while(1) {
        $385 = (($$312331573$us) - ($$01259))|0;
        $386 = (Math_fround(($385|0)));
        $387 = Math_fround($382 * $386);
        $388 = Math_fround($381 + $387);
        $389 = (($322) + ($$312331573$us<<2)|0);
        $390 = Math_fround(HEAPF32[$389>>2]);
        $391 = (($$312331573$us) + ($23))|0;
        $392 = (($322) + ($391<<2)|0);
        $393 = Math_fround(HEAPF32[$392>>2]);
        $394 = $390 > $393;
        $$1319$us = $394 ? $390 : $393;
        $395 = $$1319$us < Math_fround(0.0);
        $396 = $395 ? $$1319$us : Math_fround(0.0);
        $397 = Math_fround($396 - $388);
        $398 = $397 > Math_fround(0.25);
        if ($398) {
         $399 = (($$012571572$us) + 1)|0;
         $400 = (($319) + ($$312331573$us<<2)|0);
         $401 = Math_fround($397 + Math_fround(-0.25));
         HEAPF32[$400>>2] = $401;
         $$11258$us = $399;
        } else {
         $$11258$us = $$012571572$us;
        }
        $402 = (($$312331573$us) + 1)|0;
        $403 = ($402>>>0)<($spec$select1318>>>0);
        if ($403) {
         $$012571572$us = $$11258$us;$$312331573$us = $402;
        } else {
         $$01257$lcssa = $$11258$us;
         break;
        }
       }
      } else {
       $$012571572 = 0;$$312331573 = 0;
       while(1) {
        $404 = (($$312331573) - ($$01259))|0;
        $405 = (Math_fround(($404|0)));
        $406 = Math_fround($382 * $405);
        $407 = Math_fround($381 + $406);
        $408 = (($322) + ($$312331573<<2)|0);
        $409 = Math_fround(HEAPF32[$408>>2]);
        $410 = $409 < Math_fround(0.0);
        $411 = $410 ? $409 : Math_fround(0.0);
        $412 = Math_fround($411 - $407);
        $413 = $412 > Math_fround(0.25);
        if ($413) {
         $414 = (($$012571572) + 1)|0;
         $415 = (($319) + ($$312331573<<2)|0);
         $416 = Math_fround($412 + Math_fround(-0.25));
         HEAPF32[$415>>2] = $416;
         $$11258 = $414;
        } else {
         $$11258 = $$012571572;
        }
        $417 = (($$312331573) + 1)|0;
        $418 = ($417>>>0)<($spec$select1318>>>0);
        if ($418) {
         $$012571572 = $$11258;$$312331573 = $417;
        } else {
         $$01257$lcssa = $$11258;
         break;
        }
       }
      }
      $419 = ($$01257$lcssa|0)>(2);
      if (!($419)) {
       $$21253 = $382;$$21256 = $381;
       break;
      }
      $420 = Math_fround($381 + Math_fround(0.25));
      $421 = $420 > Math_fround(0.0);
      if ($421) {
       $422 = $spec$select1318 << 2;
       _memset(($319|0),0,($422|0))|0;
       $$21253 = Math_fround(0.0);$$21256 = Math_fround(0.0);
       break;
      }
      if (!($383)) {
       $$21253 = $382;$$21256 = $420;
       break;
      }
      $$412341569 = 0;
      while(1) {
       $423 = (($319) + ($$412341569<<2)|0);
       $424 = Math_fround(HEAPF32[$423>>2]);
       $425 = Math_fround($424 + Math_fround(-0.25));
       $426 = $425 < Math_fround(0.0);
       $427 = $426 ? Math_fround(0.0) : $425;
       HEAPF32[$423>>2] = $427;
       $428 = (($$412341569) + 1)|0;
       $429 = ($428>>>0)<($spec$select1318>>>0);
       if ($429) {
        $$412341569 = $428;
       } else {
        $$21253 = $382;$$21256 = $420;
        break;
       }
      }
     } else {
      $$21253 = $382;$$21256 = $381;
     }
    } while(0);
    $430 = Math_fround($$21256 + Math_fround(0.200000003));
    $431 = Math_fround($$21253 * Math_fround(64.0));
    $$01284$ph = $431;$$01286$ph = $430;
    label = 97;
   }
  }
 } while(0);
 if ((label|0) == 97) {
  $$pr = HEAP32[$200>>2]|0;
  $432 = ($$pr|0)==(0);
  if ($432) {
   $433 = (Math_fround(($$012631604|0)));
   $434 = Math_fround($433 * Math_fround(0.5));
   $435 = $436 ? $434 : Math_fround(0.0);
   $437 = ($31|0)>($29|0);
   if ($437) {
    $438 = ($20|0)==(2);
    if ($438) {
     $$012421563$us = Math_fround(0.0);$$012431562$us = Math_fround(-10.0);$$512351564$us = $29;
     while(1) {
      $439 = Math_fround($$012431562$us + Math_fround(-1.0));
      $440 = (($317) + ($$512351564$us<<2)|0);
      $441 = Math_fround(HEAPF32[$440>>2]);
      $442 = Math_fround($441 - $435);
      $443 = $439 > $442;
      $$1320$us = $443 ? $439 : $442;
      $444 = (($$512351564$us) + ($23))|0;
      $445 = (($317) + ($444<<2)|0);
      $446 = Math_fround(HEAPF32[$445>>2]);
      $447 = Math_fround($446 - $435);
      $448 = $$1320$us > $447;
      $$1320$$us = $448 ? $$1320$us : $447;
      $449 = Math_fround($$012421563$us + $$1320$$us);
      $450 = (($$512351564$us) + 1)|0;
      $exitcond1656 = ($450|0)==($31|0);
      if ($exitcond1656) {
       $$01242$lcssa = $449;
       break;
      } else {
       $$012421563$us = $449;$$012431562$us = $$1320$$us;$$512351564$us = $450;
      }
     }
    } else {
     $$012421563 = Math_fround(0.0);$$012431562 = Math_fround(-10.0);$$512351564 = $29;
     while(1) {
      $451 = Math_fround($$012431562 + Math_fround(-1.0));
      $452 = (($317) + ($$512351564<<2)|0);
      $453 = Math_fround(HEAPF32[$452>>2]);
      $454 = Math_fround($453 - $435);
      $455 = $451 > $454;
      $$1320 = $455 ? $451 : $454;
      $456 = Math_fround($$012421563 + $$1320);
      $457 = (($$512351564) + 1)|0;
      $exitcond1657 = ($457|0)==($31|0);
      if ($exitcond1657) {
       $$01242$lcssa = $456;
       break;
      } else {
       $$012421563 = $456;$$012431562 = $$1320;$$512351564 = $457;
      }
     }
    }
   } else {
    $$01242$lcssa = Math_fround(0.0);
   }
   $458 = (($31) - ($29))|0;
   $459 = (Math_fround(($458|0)));
   $460 = Math_fround($$01242$lcssa / $459);
   $461 = ((($0)) + 232|0);
   $462 = Math_fround(HEAPF32[$461>>2]);
   $463 = Math_fround($460 - $462);
   $464 = $463 < Math_fround(-1.5);
   $465 = $464 ? Math_fround(-1.5) : $463;
   $466 = $465 > Math_fround(3.0);
   $467 = $466 ? Math_fround(3.0) : $465;
   $468 = Math_fround($467 * Math_fround(0.0199999996));
   $469 = Math_fround($462 + $468);
   HEAPF32[$461>>2] = $469;
   $$012841416 = $$01284$ph;$$01285 = $467;$$012861415 = $$01286$ph;$480 = 0;
  } else {
   $$012841416 = $$01284$ph;$$01285 = Math_fround(0.0);$$012861415 = $$01286$ph;$480 = $$pr;
  }
 }
 if (!($1379)) {
  $470 = $318 << 2;
  _memcpy(($471|0),($317|0),($470|0))|0;
 }
 do {
  if ($267) {
   $$01229$idx1344 = ((($$01229)) + 20|0);
   $$01229$idx1344$val = HEAP32[$$01229$idx1344>>2]|0;
   $$01229$idx1345 = ((($$01229)) + 28|0);
   $$01229$idx1345$val = HEAP32[$$01229$idx1345>>2]|0;
   $472 = (Math_clz32(($$01229$idx1345$val|0))|0);
   $473 = (($$01229$idx1344$val) + -29)|0;
   $474 = (($473) + ($472))|0;
   $475 = ($474|0)>($$11291|0);
   $476 = ($$1126114041412|0)!=(0);
   $or$cond19 = $476 | $475;
   do {
    if ($or$cond19) {
     $$112471422 = $$0124614051411;$$212621419 = $$1126114041412;$$pre$phi1675Z2D = $474;
    } else {
     $477 = HEAP32[$255>>2]|0;
     $478 = ($477|0)>(4);
     $479 = $480 | $29;
     $481 = ($479|0)==(0);
     $or$cond1436 = $481 & $478;
     if (!($or$cond1436)) {
      $$112471422 = $$0124614051411;$$212621419 = 0;$$pre$phi1675Z2D = $474;
      break;
     }
     $482 = (($52) + ($29<<2)|0);
     $483 = Math_fround(HEAPF32[$482>>2]);
     do {
      if ($303) {
       $484 = (($6) + ($29<<2)|0);
       HEAPF32[$484>>2] = $483;
       $$0105$i = (($29) + 1)|0;
       $485 = ($$0105$i|0)<($31|0);
       if (!($485)) {
        break;
       }
       $$0107$i = $$0105$i;$487 = $483;
       while(1) {
        $486 = Math_fround($487 + Math_fround(-1.0));
        $488 = (($52) + ($$0107$i<<2)|0);
        $489 = Math_fround(HEAPF32[$488>>2]);
        $490 = $486 > $489;
        $$$i1391 = $490 ? $486 : $489;
        $491 = (($6) + ($$0107$i<<2)|0);
        HEAPF32[$491>>2] = $$$i1391;
        $$0$i1392 = (($$0107$i) + 1)|0;
        $exitcond$i1393 = ($$0$i1392|0)==($31|0);
        if ($exitcond$i1393) {
         break;
        } else {
         $$0107$i = $$0$i1392;$487 = $$$i1391;
        }
       }
      } else {
       $492 = (($29) + ($23))|0;
       $493 = (($52) + ($492<<2)|0);
       $494 = Math_fround(HEAPF32[$493>>2]);
       $495 = $483 > $494;
       $$92$i = $495 ? $483 : $494;
       $496 = (($6) + ($29<<2)|0);
       HEAPF32[$496>>2] = $$92$i;
       $$1110$i = (($29) + 1)|0;
       $497 = ($$1110$i|0)<($31|0);
       if (!($497)) {
        break;
       }
       $$1112$i = $$1110$i;$499 = $$92$i;
       while(1) {
        $498 = Math_fround($499 + Math_fround(-1.0));
        $500 = (($52) + ($$1112$i<<2)|0);
        $501 = Math_fround(HEAPF32[$500>>2]);
        $502 = (($$1112$i) + ($23))|0;
        $503 = (($52) + ($502<<2)|0);
        $504 = Math_fround(HEAPF32[$503>>2]);
        $505 = $501 > $504;
        $$93$i = $505 ? $501 : $504;
        $506 = $498 > $$93$i;
        $507 = $506 ? $498 : $$93$i;
        $508 = (($6) + ($$1112$i<<2)|0);
        HEAPF32[$508>>2] = $507;
        $$1$i1394 = (($$1112$i) + 1)|0;
        $exitcond117$i = ($$1$i1394|0)==($31|0);
        if ($exitcond117$i) {
         break;
        } else {
         $$1112$i = $$1$i1394;$499 = $507;
        }
       }
      }
     } while(0);
     $509 = (($31) + -2)|0;
     $510 = ($509|0)<($29|0);
     if (!($510)) {
      $$2101$i = $509;
      while(1) {
       $511 = (($6) + ($$2101$i<<2)|0);
       $512 = Math_fround(HEAPF32[$511>>2]);
       $513 = (($$2101$i) + 1)|0;
       $514 = (($6) + ($513<<2)|0);
       $515 = Math_fround(HEAPF32[$514>>2]);
       $516 = Math_fround($515 + Math_fround(-1.0));
       $517 = $512 > $516;
       $$95$i = $517 ? $512 : $516;
       HEAPF32[$511>>2] = $$95$i;
       $518 = (($$2101$i) + -1)|0;
       $519 = ($$2101$i|0)>($29|0);
       if ($519) {
        $$2101$i = $518;
       } else {
        break;
       }
      }
     }
     $520 = ($29|0)>(2);
     $521 = $520 ? $29 : 2;
     $522 = (($31) + -1)|0;
     $523 = ($522|0)>($521|0);
     if ($523) {
      $$089$us$i = 0;$$090$us$i = Math_fround(0.0);
      while(1) {
       $524 = Math_imul($$089$us$i, $23)|0;
       $$19198$us$i = $$090$us$i;$$399$us$i = $521;
       while(1) {
        $525 = (($$399$us$i) + ($524))|0;
        $526 = (($317) + ($525<<2)|0);
        $527 = Math_fround(HEAPF32[$526>>2]);
        $528 = $527 < Math_fround(0.0);
        $529 = $528 ? Math_fround(0.0) : $527;
        $530 = (($6) + ($$399$us$i<<2)|0);
        $531 = Math_fround(HEAPF32[$530>>2]);
        $532 = $531 < Math_fround(0.0);
        $533 = $532 ? Math_fround(0.0) : $531;
        $534 = Math_fround($529 - $533);
        $535 = $534 < Math_fround(0.0);
        $536 = $535 ? Math_fround(0.0) : $534;
        $537 = Math_fround($$19198$us$i + $536);
        $538 = (($$399$us$i) + 1)|0;
        $539 = ($538|0)<($522|0);
        if ($539) {
         $$19198$us$i = $537;$$399$us$i = $538;
        } else {
         break;
        }
       }
       $540 = (($$089$us$i) + 1)|0;
       $541 = ($540|0)<($20|0);
       if ($541) {
        $$089$us$i = $540;$$090$us$i = $537;
       } else {
        $$191$lcssa$lcssa$i = $537;
        break;
       }
      }
     } else {
      $$191$lcssa$lcssa$i = Math_fround(0.0);
     }
     $542 = (($522) - ($521))|0;
     $543 = Math_imul($542, $20)|0;
     $544 = (Math_fround(($543|0)));
     $545 = Math_fround($$191$lcssa$lcssa$i / $544);
     $546 = !($545 > Math_fround(1.0));
     if ($546) {
      $$11247 = $$0124614051411;$$21262 = 0;
     } else {
      $547 = HEAP32[$35>>2]|0;
      $548 = HEAP32[$299>>2]|0;
      _compute_mdcts($21,$47,$128,$301,$20,$18,$$012631604,$547,$548);
      $549 = HEAP32[$299>>2]|0;
      _compute_band_energies($21,$301,$305,$spec$select1310,$20,$$012631604,$549);
      _amp2Log2($21,$spec$select1310,$31,$305,$317,$20);
      $550 = ($318|0)>(0);
      if ($550) {
       $551 = (Math_fround(($$012631604|0)));
       $552 = Math_fround($551 * Math_fround(0.5));
       $$612361558 = 0;
       while(1) {
        $553 = (($471) + ($$612361558<<2)|0);
        $554 = Math_fround(HEAPF32[$553>>2]);
        $555 = Math_fround($552 + $554);
        HEAPF32[$553>>2] = $555;
        $556 = (($$612361558) + 1)|0;
        $exitcond1655 = ($556|0)==($318|0);
        if ($exitcond1655) {
         break;
        } else {
         $$612361558 = $556;
        }
       }
      }
      HEAPF32[$13>>2] = Math_fround(0.200000003);
      $$11247 = $47;$$21262 = 1;
     }
     $$01229$idx1342$val$pre = HEAP32[$$01229$idx1344>>2]|0;
     $$01229$idx1343$val$pre = HEAP32[$$01229$idx1345>>2]|0;
     $$pre1670 = (Math_clz32(($$01229$idx1343$val$pre|0))|0);
     $$pre1672 = (($$01229$idx1342$val$pre) + -29)|0;
     $$pre1674 = (($$pre1672) + ($$pre1670))|0;
     $$112471422 = $$11247;$$212621419 = $$21262;$$pre$phi1675Z2D = $$pre1674;
    }
   } while(0);
   $557 = ($$pre$phi1675Z2D|0)>($$11291|0);
   if ($557) {
    $$112471421 = $$112471422;$$212621420 = $$212621419;
    break;
   }
   _ec_enc_bit_logp($$01229,$$212621419,3);
   $$112471421 = $$112471422;$$212621420 = $$212621419;
  } else {
   $$112471421 = $$0124614051411;$$212621420 = $$1126114041412;
  }
 } while(0);
 $558 = Math_imul($37, $20)|0;
 $$alloca_mul30 = $558<<2;
 $559 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul30)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul30)|0)+15)&-16)|0);;
 _normalise_bands($21,$301,$559,$305,$spec$select1310,$20,$47);
 $$alloca_mul32 = $23<<2;
 $560 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul32)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul32)|0)+15)&-16)|0);;
 $561 = ($20*15)|0;
 $562 = ($$21277|0)<($561|0);
 $or$cond25 = $32 | $562;
 do {
  if ($or$cond25) {
   label = 139;
  } else {
   $563 = HEAP32[$255>>2]|0;
   $564 = ($563|0)>(1);
   if (!($564)) {
    label = 139;
    break;
   }
   $565 = HEAP32[$200>>2]|0;
   $566 = ($565|0)==(0);
   if (!($566)) {
    label = 139;
    break;
   }
   $567 = (1280 / ($$21277|0))&-1;
   $568 = ($567|0)<(3);
   $569 = (($567) + 2)|0;
   $spec$select1321 = $568 ? 5 : $569;
   $570 = Math_fround(HEAPF32[$13>>2]);
   $571 = HEAP32[$12>>2]|0;
   $572 = (_tf_analysis($21,$spec$select1310,$$212621420,$560,$spec$select1321,$559,$37,$$012631604,$570,$571)|0);
   if (!($124)) {
    $$01264 = $572;
    break;
   }
   $573 = (($spec$select1310) + -1)|0;
   $574 = (($560) + ($573<<2)|0);
   $$71555 = $123;
   while(1) {
    $575 = HEAP32[$574>>2]|0;
    $576 = (($560) + ($$71555<<2)|0);
    HEAP32[$576>>2] = $575;
    $577 = (($$71555) + 1)|0;
    $578 = ($577|0)<($31|0);
    if ($578) {
     $$71555 = $577;
    } else {
     $$01264 = $572;
     break;
    }
   }
  }
 } while(0);
 L208: do {
  if ((label|0) == 139) {
   $579 = HEAP32[$15>>2]|0;
   $580 = ($579|0)!=(0);
   $or$cond28 = $32 & $580;
   if ($or$cond28) {
    $581 = ($31|0)>(0);
    if (!($581)) {
     $$01264 = 0;
     break;
    }
    $$81546 = 0;
    while(1) {
     $582 = (($560) + ($$81546<<2)|0);
     HEAP32[$582>>2] = 1;
     $583 = (($$81546) + 1)|0;
     $exitcond1652 = ($583|0)==($31|0);
     if ($exitcond1652) {
      $$01264 = 0;
      break L208;
     } else {
      $$81546 = $583;
     }
    }
   }
   $584 = ($$21277|0)<(15);
   $or$cond31 = $32 & $584;
   $585 = ($31|0)>(0);
   if ($or$cond31) {
    if (!($585)) {
     $$01264 = $$212621420;
     break;
    }
    _memset(($560|0),0,($320|0))|0;
    $$01264 = $$212621420;
    break;
   }
   if (!($585)) {
    $$01264 = 0;
    break;
   }
   $$101552 = 0;
   while(1) {
    $586 = (($560) + ($$101552<<2)|0);
    HEAP32[$586>>2] = $$212621420;
    $587 = (($$101552) + 1)|0;
    $exitcond1654 = ($587|0)==($31|0);
    if ($exitcond1654) {
     $$01264 = 0;
     break;
    } else {
     $$101552 = $587;
    }
   }
  }
 } while(0);
 $$alloca_mul34 = $318<<2;
 $588 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul34)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul34)|0)+15)&-16)|0);;
 $589 = ($31|0)>($29|0);
 if ($589) {
  $$21239$us = 0;
  while(1) {
   $590 = Math_imul($$21239$us, $23)|0;
   $$111540$us = $29;
   while(1) {
    $591 = (($$111540$us) + ($590))|0;
    $592 = (($317) + ($591<<2)|0);
    $593 = Math_fround(HEAPF32[$592>>2]);
    $594 = (($52) + ($591<<2)|0);
    $595 = Math_fround(HEAPF32[$594>>2]);
    $596 = Math_fround($593 - $595);
    $597 = (Math_fround(Math_abs((Math_fround($596)))));
    $598 = $597 < Math_fround(2.0);
    if ($598) {
     $599 = (($56) + ($591<<2)|0);
     $600 = Math_fround(HEAPF32[$599>>2]);
     $601 = Math_fround($600 * Math_fround(0.25));
     $602 = Math_fround($593 - $601);
     HEAPF32[$592>>2] = $602;
    }
    $603 = (($$111540$us) + 1)|0;
    $exitcond1651 = ($603|0)==($31|0);
    if ($exitcond1651) {
     break;
    } else {
     $$111540$us = $603;
    }
   }
   $604 = (($$21239$us) + 1)|0;
   $605 = ($604|0)<($20|0);
   if ($605) {
    $$21239$us = $604;
   } else {
    break;
   }
  }
 }
 $606 = ((($0)) + 12|0);
 $607 = HEAP32[$606>>2]|0;
 $608 = ((($0)) + 84|0);
 $609 = HEAP32[$255>>2]|0;
 $610 = ($609|0)>(3);
 $611 = $610&1;
 $612 = ((($0)) + 56|0);
 $613 = HEAP32[$612>>2]|0;
 $614 = HEAP32[$200>>2]|0;
 _quant_coarse_energy($21,$29,$31,$spec$select1310,$317,$52,$$11291,$588,$$01229,$20,$$012631604,$$31269,$607,$608,$611,$613,$614);
 $615 = ((($$01229)) + 4|0);
 $616 = HEAP32[$615>>2]|0;
 $617 = $616 << 3;
 $$idx71$i = ((($$01229)) + 20|0);
 $$idx71$val$i = HEAP32[$$idx71$i>>2]|0;
 $$idx72$i = ((($$01229)) + 28|0);
 $$idx72$val$i = HEAP32[$$idx72$i>>2]|0;
 $618 = (Math_clz32(($$idx72$val$i|0))|0);
 $619 = (($$idx71$val$i) + -32)|0;
 $620 = (($619) + ($618))|0;
 $621 = ($$212621420|0)!=(0);
 $622 = $621 ? 2 : 4;
 $623 = $622 | 1;
 $624 = (($620) + ($623))|0;
 $625 = ($624>>>0)<=($617>>>0);
 $spec$select$i1365 = $267 & $625;
 $626 = $spec$select$i1365&1;
 $627 = (($617) - ($626))|0;
 do {
  if ($589) {
   $628 = $621 ? 4 : 5;
   $629 = (($620) + ($622))|0;
   $630 = ($629>>>0)>($627>>>0);
   $631 = (($560) + ($29<<2)|0);
   if ($630) {
    HEAP32[$631>>2] = 0;
    $$1$peel$i = $620;$$169$peel$i = 0;
   } else {
    $632 = HEAP32[$631>>2]|0;
    _ec_enc_bit_logp($$01229,$632,$622);
    $$idx$val$peel$i = HEAP32[$$idx71$i>>2]|0;
    $$idx70$val$peel$i = HEAP32[$$idx72$i>>2]|0;
    $633 = (Math_clz32(($$idx70$val$peel$i|0))|0);
    $634 = (($$idx$val$peel$i) + -32)|0;
    $635 = (($634) + ($633))|0;
    $636 = HEAP32[$631>>2]|0;
    $$1$peel$i = $635;$$169$peel$i = $636;
   }
   $637 = (($29) + 1)|0;
   $exitcond82$peel$i = ($637|0)==($31|0);
   if ($exitcond82$peel$i) {
    $$063$lcssa$i = $$169$peel$i;
    break;
   }
   $$06376$i = $$169$peel$i;$$06675$i = $637;$$06874$i = $$169$peel$i;$$078$i = $$1$peel$i;
   while(1) {
    $638 = (($$078$i) + ($628))|0;
    $639 = ($638>>>0)>($627>>>0);
    $640 = (($560) + ($$06675$i<<2)|0);
    if ($639) {
     HEAP32[$640>>2] = $$06874$i;
     $$1$i1366 = $$078$i;$$164$i = $$06376$i;$$169$i = $$06874$i;
    } else {
     $641 = HEAP32[$640>>2]|0;
     $642 = $641 ^ $$06874$i;
     _ec_enc_bit_logp($$01229,$642,$628);
     $$idx$val$i = HEAP32[$$idx71$i>>2]|0;
     $$idx70$val$i = HEAP32[$$idx72$i>>2]|0;
     $643 = (Math_clz32(($$idx70$val$i|0))|0);
     $644 = (($$idx$val$i) + -32)|0;
     $645 = (($644) + ($643))|0;
     $646 = HEAP32[$640>>2]|0;
     $647 = $646 | $$06376$i;
     $$1$i1366 = $645;$$164$i = $647;$$169$i = $646;
    }
    $648 = (($$06675$i) + 1)|0;
    $exitcond82$i = ($648|0)==($31|0);
    if ($exitcond82$i) {
     $$063$lcssa$i = $$164$i;
     break;
    } else {
     $$06376$i = $$164$i;$$06675$i = $648;$$06874$i = $$169$i;$$078$i = $$1$i1366;
    }
   }
  } else {
   $$063$lcssa$i = 0;
  }
 } while(0);
 do {
  if ($spec$select$i1365) {
   $649 = $$212621420 << 2;
   $650 = (($$063$lcssa$i) + ($649))|0;
   $651 = ((1024 + ($$012631604<<3)|0) + ($650)|0);
   $652 = HEAP8[$651>>0]|0;
   $653 = $649 | 2;
   $654 = (($$063$lcssa$i) + ($653))|0;
   $655 = ((1024 + ($$012631604<<3)|0) + ($654)|0);
   $656 = HEAP8[$655>>0]|0;
   $657 = ($652<<24>>24)==($656<<24>>24);
   if ($657) {
    $$065$i = 0;
    break;
   }
   $phitmp$i1367 = $$01264 << 1;
   _ec_enc_bit_logp($$01229,$$01264,1);
   $$065$i = $phitmp$i1367;
  } else {
   $$065$i = 0;
  }
 } while(0);
 if ($589) {
  $658 = $$212621420 << 2;
  $659 = (($$065$i) + ($658))|0;
  $$16773$i = $29;
  while(1) {
   $660 = (($560) + ($$16773$i<<2)|0);
   $661 = HEAP32[$660>>2]|0;
   $662 = (($659) + ($661))|0;
   $663 = ((1024 + ($$012631604<<3)|0) + ($662)|0);
   $664 = HEAP8[$663>>0]|0;
   $665 = $664 << 24 >> 24;
   HEAP32[$660>>2] = $665;
   $666 = (($$16773$i) + 1)|0;
   $exitcond$i1369 = ($666|0)==($31|0);
   if ($exitcond$i1369) {
    break;
   } else {
    $$16773$i = $666;
   }
  }
 }
 $$01229$idx1340$val = HEAP32[$$idx71$i>>2]|0;
 $$01229$idx1341$val = HEAP32[$$idx72$i>>2]|0;
 $667 = (Math_clz32(($$01229$idx1341$val|0))|0);
 $668 = (($$01229$idx1340$val) + -28)|0;
 $669 = (($668) + ($667))|0;
 $670 = ($669|0)>($$11291|0);
 if (!($670)) {
  $671 = HEAP32[$200>>2]|0;
  $672 = ($671|0)==(0);
  L260: do {
   if ($672) {
    if ($32) {
     $674 = HEAP32[$255>>2]|0;
     $675 = ($674|0)==(0);
     if ($675) {
      $676 = ((($0)) + 80|0);
      HEAP32[$676>>2] = 0;
      $691 = 0;
      break;
     }
     $677 = ($$212621420|0)==(0);
     $678 = ((($0)) + 80|0);
     if ($677) {
      HEAP32[$678>>2] = 3;
      $691 = 3;
      break;
     } else {
      HEAP32[$678>>2] = 2;
      $691 = 2;
      break;
     }
    }
    $679 = ($$112471421|0)==(0);
    $680 = HEAP32[$255>>2]|0;
    do {
     if ($679) {
      $681 = ($680|0)<(3);
      $682 = ($20*10)|0;
      $683 = ($$31269|0)<($682|0);
      $or$cond1323 = $683 | $681;
      if ($or$cond1323) {
       break;
      }
      $686 = ((($0)) + 88|0);
      $687 = ((($0)) + 80|0);
      $688 = HEAP32[$687>>2]|0;
      $689 = ((($0)) + 96|0);
      $not$ = $243 ^ 1;
      $spec$select1324 = $not$&1;
      $690 = (_spreading_decision($21,$559,$686,$688,$689,$219,$spec$select1324,$spec$select1310,$20,$47)|0);
      HEAP32[$687>>2] = $690;
      $691 = $690;
      break L260;
     }
    } while(0);
    $684 = ($680|0)==(0);
    $685 = ((($0)) + 80|0);
    if ($684) {
     HEAP32[$685>>2] = 0;
     $691 = 0;
     break;
    } else {
     HEAP32[$685>>2] = 2;
     $691 = 2;
     break;
    }
   } else {
    HEAP32[$219>>2] = 0;
    $673 = ((($0)) + 80|0);
    HEAP32[$673>>2] = 2;
    $691 = 2;
   }
  } while(0);
  _ec_enc_icdf($$01229,$691,37734,5);
 }
 $$alloca_mul36 = $23<<2;
 $692 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul36)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul36)|0)+15)&-16)|0);;
 $693 = HEAP32[$170>>2]|0;
 $694 = ((($21)) + 56|0);
 $695 = HEAP32[$694>>2]|0;
 $696 = HEAP32[$67>>2]|0;
 $697 = ((($0)) + 52|0);
 $698 = HEAP32[$697>>2]|0;
 $699 = HEAP32[$200>>2]|0;
 $700 = ((($0)) + 120|0);
 $701 = (Math_fround(_dynalloc_analysis($317,$471,$23,$29,$31,$20,$692,$693,$695,$$212621420,$696,$698,$27,$$012631604,$$21277,$14,$699,$319,$700)));
 $702 = HEAP32[$200>>2]|0;
 $703 = ($702|0)==(0);
 if (!($703)) {
  $704 = ($$21277|0)>(26);
  $705 = (($$21277|0) / 3)&-1;
  $706 = $704 ? 8 : $705;
  HEAP32[$692>>2] = $706;
 }
 $$alloca_mul38 = $23<<2;
 $707 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul38)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul38)|0)+15)&-16)|0);;
 _init_caps($21,$707,$$012631604,$20);
 $708 = $$11291 << 3;
 $709 = (_ec_tell_frac($$01229)|0);
 if ($589) {
  $$012791533 = 6;$$012921532 = 0;$$121534 = $29;$$212981531 = $709;
  while(1) {
   $710 = (($$121534) + 1)|0;
   $711 = (($27) + ($710<<1)|0);
   $712 = HEAP16[$711>>1]|0;
   $713 = $712 << 16 >> 16;
   $714 = (($27) + ($$121534<<1)|0);
   $715 = HEAP16[$714>>1]|0;
   $716 = $715 << 16 >> 16;
   $717 = (($713) - ($716))|0;
   $718 = Math_imul($717, $20)|0;
   $719 = $718 << $$012631604;
   $720 = $719 << 3;
   $721 = ($719|0)>(48);
   $722 = $721 ? $719 : 48;
   $723 = ($720|0)<($722|0);
   $$1325 = $723 ? $720 : $722;
   $724 = (($707) + ($$121534<<2)|0);
   $725 = (($692) + ($$121534<<2)|0);
   $726 = $$012791533 << 3;
   $727 = (($726) + ($$212981531))|0;
   $728 = (($708) - ($$012921532))|0;
   $729 = ($727|0)<($728|0);
   do {
    if ($729) {
     $$012231515 = 0;$$012241514 = 0;$$012271513 = $$012791533;$$112931512 = $$012921532;$$312991511 = $$212981531;
     while(1) {
      $730 = HEAP32[$724>>2]|0;
      $731 = ($$012241514|0)<($730|0);
      if (!($731)) {
       $$41300 = $$312991511;
       label = 198;
       break;
      }
      $732 = HEAP32[$725>>2]|0;
      $733 = ($$012231515|0)<($732|0);
      $734 = $733&1;
      _ec_enc_bit_logp($$01229,$734,$$012271513);
      $735 = (_ec_tell_frac($$01229)|0);
      if (!($733)) {
       $$41300 = $735;
       label = 198;
       break;
      }
      $736 = (($$112931512) + ($$1325))|0;
      $737 = (($$012241514) + ($$1325))|0;
      $738 = (($$012231515) + 1)|0;
      $739 = (($735) + 8)|0;
      $740 = (($708) - ($736))|0;
      $741 = ($739|0)<($740|0);
      if ($741) {
       $$012231515 = $738;$$012241514 = $737;$$012271513 = 1;$$112931512 = $736;$$312991511 = $735;
      } else {
       label = 197;
       break;
      }
     }
     if ((label|0) == 197) {
      label = 0;
      $742 = (($$012791533) + -1)|0;
      $743 = ($742|0)>(2);
      $744 = $743 ? $742 : 2;
      $$01224$lcssa1680 = $737;$$11293$lcssa1678 = $736;$$413001682 = $735;$1380 = $744;
      break;
     }
     else if ((label|0) == 198) {
      label = 0;
      $745 = ($$012231515|0)==(0);
      $746 = (($$012791533) + -1)|0;
      $747 = ($746|0)>(2);
      $748 = $747 ? $746 : 2;
      if ($745) {
       $$01224$lcssa1681 = $$012241514;$$11293$lcssa1679 = $$112931512;$$413001683 = $$41300;
       label = 199;
       break;
      } else {
       $$01224$lcssa1680 = $$012241514;$$11293$lcssa1678 = $$112931512;$$413001682 = $$41300;$1380 = $748;
       break;
      }
     }
    } else {
     $$01224$lcssa1681 = 0;$$11293$lcssa1679 = $$012921532;$$413001683 = $$212981531;
     label = 199;
    }
   } while(0);
   if ((label|0) == 199) {
    label = 0;
    $$01224$lcssa1680 = $$01224$lcssa1681;$$11293$lcssa1678 = $$11293$lcssa1679;$$413001682 = $$413001683;$1380 = $$012791533;
   }
   HEAP32[$725>>2] = $$01224$lcssa1680;
   $exitcond1650 = ($710|0)==($31|0);
   if ($exitcond1650) {
    $$01292$lcssa = $$11293$lcssa1678;$$21298$lcssa = $$413001682;
    break;
   } else {
    $$012791533 = $1380;$$012921532 = $$11293$lcssa1678;$$121534 = $710;$$212981531 = $$413001682;
   }
  }
 } else {
  $$01292$lcssa = 0;$$21298$lcssa = $709;
 }
 $749 = ($20|0)==(2);
 if ($749) {
  $750 = ($$012631604|0)==(0);
  if (!($750)) {
   $751 = HEAP32[$26>>2]|0;
   $$pre$i1358 = HEAP16[$751>>1]|0;
   $$05262$i = Math_fround(1.0E-15);$$05361$i = Math_fround(1.0E-15);$$063$i = 0;$753 = $$pre$i1358;
   while(1) {
    $752 = $753 << 16 >> 16;
    $754 = $752 << $$012631604;
    $755 = (($$063$i) + 1)|0;
    $756 = (($751) + ($755<<1)|0);
    $757 = HEAP16[$756>>1]|0;
    $758 = $757 << 16 >> 16;
    $759 = $758 << $$012631604;
    $760 = ($754|0)<($759|0);
    if ($760) {
     $$05556$i = $754;$$15457$i = $$05361$i;$$158$i = $$05262$i;
     while(1) {
      $761 = (($559) + ($$05556$i<<2)|0);
      $762 = Math_fround(HEAPF32[$761>>2]);
      $763 = (($$05556$i) + ($37))|0;
      $764 = (($559) + ($763<<2)|0);
      $765 = Math_fround(HEAPF32[$764>>2]);
      $766 = Math_fround($762 + $765);
      $767 = Math_fround($762 - $765);
      $768 = (Math_fround(Math_abs((Math_fround($762)))));
      $769 = (Math_fround(Math_abs((Math_fround($765)))));
      $770 = Math_fround($768 + $769);
      $771 = Math_fround($$158$i + $770);
      $772 = (Math_fround(Math_abs((Math_fround($766)))));
      $773 = (Math_fround(Math_abs((Math_fround($767)))));
      $774 = Math_fround($772 + $773);
      $775 = Math_fround($$15457$i + $774);
      $776 = (($$05556$i) + 1)|0;
      $exitcond1649 = ($776|0)==($759|0);
      if ($exitcond1649) {
       $$1$lcssa$i = $771;$$154$lcssa$i = $775;
       break;
      } else {
       $$05556$i = $776;$$15457$i = $775;$$158$i = $771;
      }
     }
    } else {
     $$1$lcssa$i = $$05262$i;$$154$lcssa$i = $$05361$i;
    }
    $exitcond$i1359 = ($755|0)==(13);
    if ($exitcond$i1359) {
     break;
    } else {
     $$05262$i = $$1$lcssa$i;$$05361$i = $$154$lcssa$i;$$063$i = $755;$753 = $757;
    }
   }
   $777 = Math_fround($$154$lcssa$i * Math_fround(0.707107007));
   $778 = ($$012631604>>>0)<(2);
   $spec$select$i1361 = $778 ? 5 : 13;
   $779 = ((($751)) + 26|0);
   $780 = HEAP16[$779>>1]|0;
   $781 = $780 << 16 >> 16;
   $782 = (($$012631604) + 1)|0;
   $783 = $781 << $782;
   $784 = (($783) + ($spec$select$i1361))|0;
   $785 = (Math_fround(($784|0)));
   $786 = Math_fround($777 * $785);
   $787 = (Math_fround(($783|0)));
   $788 = Math_fround($$1$lcssa$i * $787);
   $789 = $786 > $788;
   $790 = $789&1;
   HEAP32[$10>>2] = $790;
  }
  $791 = (($spec$select1433|0) / 1000)&-1;
  $792 = (Math_fround(($791|0)));
  $793 = ((($0)) + 224|0);
  $794 = HEAP32[$793>>2]|0;
  $795 = (_hysteresis_decision($792,4992,5088,21,$794)|0);
  $796 = ($29|0)>($795|0);
  $$1326 = $796 ? $29 : $795;
  $797 = ($31|0)<($$1326|0);
  $spec$select1438 = $797 ? $31 : $$1326;
  HEAP32[$793>>2] = $spec$select1438;
 }
 $798 = (($$21298$lcssa) + 48)|0;
 $799 = (($708) - ($$01292$lcssa))|0;
 $800 = ($798|0)>($799|0);
 if ($800) {
  $$11274 = 5;$$51301 = $$21298$lcssa;
 } else {
  $801 = ($29|0)>(0);
  do {
   if ($801) {
    label = 213;
   } else {
    $802 = HEAP32[$200>>2]|0;
    $803 = ($802|0)==(0);
    if (!($803)) {
     label = 213;
     break;
    }
    $805 = ((($0)) + 220|0);
    $806 = Math_fround(HEAPF32[$13>>2]);
    $807 = ((($0)) + 224|0);
    $808 = HEAP32[$807>>2]|0;
    $809 = ($spec$select1433|0)<(64000);
    $810 = ($spec$select1433|0)<(80000);
    $811 = (($spec$select1433) + -64000)|0;
    $812 = $811 >> 10;
    $813 = (Math_fround(($812|0)));
    $814 = Math_fround($813 * Math_fround(0.0625));
    $815 = Math_fround($814 + Math_fround(4.0));
    $spec$select8$i = $810 ? $815 : Math_fround(5.0);
    $spec$select1439 = $809 ? Math_fround(4.0) : $spec$select8$i;
    if ($749) {
     $816 = HEAP32[$26>>2]|0;
     $817 = HEAP16[$816>>1]|0;
     $818 = $817 << 16 >> 16;
     $819 = $818 << $$012631604;
     $820 = (($559) + ($819<<2)|0);
     $821 = (($819) + ($37))|0;
     $822 = (($559) + ($821<<2)|0);
     $823 = ((($816)) + 2|0);
     $824 = HEAP16[$823>>1]|0;
     $825 = $824 << 16 >> 16;
     $826 = (($825) - ($818))|0;
     $827 = $826 << $$012631604;
     $828 = ($827|0)>(0);
     if ($828) {
      $$01011$i$i = 0;$$012$i$i = Math_fround(0.0);
      while(1) {
       $829 = (($820) + ($$01011$i$i<<2)|0);
       $830 = Math_fround(HEAPF32[$829>>2]);
       $831 = (($822) + ($$01011$i$i<<2)|0);
       $832 = Math_fround(HEAPF32[$831>>2]);
       $833 = Math_fround($830 * $832);
       $834 = Math_fround($$012$i$i + $833);
       $835 = (($$01011$i$i) + 1)|0;
       $exitcond$i$i = ($835|0)==($827|0);
       if ($exitcond$i$i) {
        $$0$lcssa$i$i = $834;
        break;
       } else {
        $$01011$i$i = $835;$$012$i$i = $834;
       }
      }
     } else {
      $$0$lcssa$i$i = Math_fround(0.0);
     }
     $836 = Math_fround($$0$lcssa$i$i + Math_fround(0.0));
     $837 = $825 << $$012631604;
     $838 = (($559) + ($837<<2)|0);
     $839 = (($837) + ($37))|0;
     $840 = (($559) + ($839<<2)|0);
     $841 = ((($816)) + 4|0);
     $842 = HEAP16[$841>>1]|0;
     $843 = $842 << 16 >> 16;
     $844 = (($843) - ($825))|0;
     $845 = $844 << $$012631604;
     $846 = ($845|0)>(0);
     if ($846) {
      $$01011$i$1$i = 0;$$012$i$1$i = Math_fround(0.0);
      while(1) {
       $934 = (($838) + ($$01011$i$1$i<<2)|0);
       $935 = Math_fround(HEAPF32[$934>>2]);
       $936 = (($840) + ($$01011$i$1$i<<2)|0);
       $937 = Math_fround(HEAPF32[$936>>2]);
       $938 = Math_fround($935 * $937);
       $939 = Math_fround($$012$i$1$i + $938);
       $940 = (($$01011$i$1$i) + 1)|0;
       $exitcond$i$1$i = ($940|0)==($845|0);
       if ($exitcond$i$1$i) {
        $$0$lcssa$i$1$i = $939;
        break;
       } else {
        $$01011$i$1$i = $940;$$012$i$1$i = $939;
       }
      }
     } else {
      $$0$lcssa$i$1$i = Math_fround(0.0);
     }
     $941 = Math_fround($836 + $$0$lcssa$i$1$i);
     $942 = $843 << $$012631604;
     $943 = (($559) + ($942<<2)|0);
     $944 = (($942) + ($37))|0;
     $945 = (($559) + ($944<<2)|0);
     $946 = ((($816)) + 6|0);
     $947 = HEAP16[$946>>1]|0;
     $948 = $947 << 16 >> 16;
     $949 = (($948) - ($843))|0;
     $950 = $949 << $$012631604;
     $951 = ($950|0)>(0);
     if ($951) {
      $$01011$i$2$i = 0;$$012$i$2$i = Math_fround(0.0);
      while(1) {
       $952 = (($943) + ($$01011$i$2$i<<2)|0);
       $953 = Math_fround(HEAPF32[$952>>2]);
       $954 = (($945) + ($$01011$i$2$i<<2)|0);
       $955 = Math_fround(HEAPF32[$954>>2]);
       $956 = Math_fround($953 * $955);
       $957 = Math_fround($$012$i$2$i + $956);
       $958 = (($$01011$i$2$i) + 1)|0;
       $exitcond$i$2$i = ($958|0)==($950|0);
       if ($exitcond$i$2$i) {
        $$0$lcssa$i$2$i = $957;
        break;
       } else {
        $$01011$i$2$i = $958;$$012$i$2$i = $957;
       }
      }
     } else {
      $$0$lcssa$i$2$i = Math_fround(0.0);
     }
     $959 = Math_fround($941 + $$0$lcssa$i$2$i);
     $960 = $948 << $$012631604;
     $961 = (($559) + ($960<<2)|0);
     $962 = (($960) + ($37))|0;
     $963 = (($559) + ($962<<2)|0);
     $964 = ((($816)) + 8|0);
     $965 = HEAP16[$964>>1]|0;
     $966 = $965 << 16 >> 16;
     $967 = (($966) - ($948))|0;
     $968 = $967 << $$012631604;
     $969 = ($968|0)>(0);
     if ($969) {
      $$01011$i$3$i = 0;$$012$i$3$i = Math_fround(0.0);
      while(1) {
       $970 = (($961) + ($$01011$i$3$i<<2)|0);
       $971 = Math_fround(HEAPF32[$970>>2]);
       $972 = (($963) + ($$01011$i$3$i<<2)|0);
       $973 = Math_fround(HEAPF32[$972>>2]);
       $974 = Math_fround($971 * $973);
       $975 = Math_fround($$012$i$3$i + $974);
       $976 = (($$01011$i$3$i) + 1)|0;
       $exitcond$i$3$i = ($976|0)==($968|0);
       if ($exitcond$i$3$i) {
        $$0$lcssa$i$3$i = $975;
        break;
       } else {
        $$01011$i$3$i = $976;$$012$i$3$i = $975;
       }
      }
     } else {
      $$0$lcssa$i$3$i = Math_fround(0.0);
     }
     $977 = Math_fround($959 + $$0$lcssa$i$3$i);
     $978 = $966 << $$012631604;
     $979 = (($559) + ($978<<2)|0);
     $980 = (($978) + ($37))|0;
     $981 = (($559) + ($980<<2)|0);
     $982 = ((($816)) + 10|0);
     $983 = HEAP16[$982>>1]|0;
     $984 = $983 << 16 >> 16;
     $985 = (($984) - ($966))|0;
     $986 = $985 << $$012631604;
     $987 = ($986|0)>(0);
     if ($987) {
      $$01011$i$4$i = 0;$$012$i$4$i = Math_fround(0.0);
      while(1) {
       $988 = (($979) + ($$01011$i$4$i<<2)|0);
       $989 = Math_fround(HEAPF32[$988>>2]);
       $990 = (($981) + ($$01011$i$4$i<<2)|0);
       $991 = Math_fround(HEAPF32[$990>>2]);
       $992 = Math_fround($989 * $991);
       $993 = Math_fround($$012$i$4$i + $992);
       $994 = (($$01011$i$4$i) + 1)|0;
       $exitcond$i$4$i = ($994|0)==($986|0);
       if ($exitcond$i$4$i) {
        $$0$lcssa$i$4$i = $993;
        break;
       } else {
        $$01011$i$4$i = $994;$$012$i$4$i = $993;
       }
      }
     } else {
      $$0$lcssa$i$4$i = Math_fround(0.0);
     }
     $995 = Math_fround($977 + $$0$lcssa$i$4$i);
     $996 = $984 << $$012631604;
     $997 = (($559) + ($996<<2)|0);
     $998 = (($996) + ($37))|0;
     $999 = (($559) + ($998<<2)|0);
     $1000 = ((($816)) + 12|0);
     $1001 = HEAP16[$1000>>1]|0;
     $1002 = $1001 << 16 >> 16;
     $1003 = (($1002) - ($984))|0;
     $1004 = $1003 << $$012631604;
     $1005 = ($1004|0)>(0);
     if ($1005) {
      $$01011$i$5$i = 0;$$012$i$5$i = Math_fround(0.0);
      while(1) {
       $1006 = (($997) + ($$01011$i$5$i<<2)|0);
       $1007 = Math_fround(HEAPF32[$1006>>2]);
       $1008 = (($999) + ($$01011$i$5$i<<2)|0);
       $1009 = Math_fround(HEAPF32[$1008>>2]);
       $1010 = Math_fround($1007 * $1009);
       $1011 = Math_fround($$012$i$5$i + $1010);
       $1012 = (($$01011$i$5$i) + 1)|0;
       $exitcond$i$5$i = ($1012|0)==($1004|0);
       if ($exitcond$i$5$i) {
        $$0$lcssa$i$5$i = $1011;
        break;
       } else {
        $$01011$i$5$i = $1012;$$012$i$5$i = $1011;
       }
      }
     } else {
      $$0$lcssa$i$5$i = Math_fround(0.0);
     }
     $1013 = Math_fround($995 + $$0$lcssa$i$5$i);
     $1014 = $1002 << $$012631604;
     $1015 = (($559) + ($1014<<2)|0);
     $1016 = (($1014) + ($37))|0;
     $1017 = (($559) + ($1016<<2)|0);
     $1018 = ((($816)) + 14|0);
     $1019 = HEAP16[$1018>>1]|0;
     $1020 = $1019 << 16 >> 16;
     $1021 = (($1020) - ($1002))|0;
     $1022 = $1021 << $$012631604;
     $1023 = ($1022|0)>(0);
     if ($1023) {
      $$01011$i$6$i = 0;$$012$i$6$i = Math_fround(0.0);
      while(1) {
       $1024 = (($1015) + ($$01011$i$6$i<<2)|0);
       $1025 = Math_fround(HEAPF32[$1024>>2]);
       $1026 = (($1017) + ($$01011$i$6$i<<2)|0);
       $1027 = Math_fround(HEAPF32[$1026>>2]);
       $1028 = Math_fround($1025 * $1027);
       $1029 = Math_fround($$012$i$6$i + $1028);
       $1030 = (($$01011$i$6$i) + 1)|0;
       $exitcond$i$6$i = ($1030|0)==($1022|0);
       if ($exitcond$i$6$i) {
        $$0$lcssa$i$6$i = $1029;
        break;
       } else {
        $$01011$i$6$i = $1030;$$012$i$6$i = $1029;
       }
      }
     } else {
      $$0$lcssa$i$6$i = Math_fround(0.0);
     }
     $1031 = Math_fround($1013 + $$0$lcssa$i$6$i);
     $1032 = $1020 << $$012631604;
     $1033 = (($559) + ($1032<<2)|0);
     $1034 = (($1032) + ($37))|0;
     $1035 = (($559) + ($1034<<2)|0);
     $1036 = ((($816)) + 16|0);
     $1037 = HEAP16[$1036>>1]|0;
     $1038 = $1037 << 16 >> 16;
     $1039 = (($1038) - ($1020))|0;
     $1040 = $1039 << $$012631604;
     $1041 = ($1040|0)>(0);
     if ($1041) {
      $$01011$i$7$i = 0;$$012$i$7$i = Math_fround(0.0);
      while(1) {
       $1042 = (($1033) + ($$01011$i$7$i<<2)|0);
       $1043 = Math_fround(HEAPF32[$1042>>2]);
       $1044 = (($1035) + ($$01011$i$7$i<<2)|0);
       $1045 = Math_fround(HEAPF32[$1044>>2]);
       $1046 = Math_fround($1043 * $1045);
       $1047 = Math_fround($$012$i$7$i + $1046);
       $1048 = (($$01011$i$7$i) + 1)|0;
       $exitcond$i$7$i = ($1048|0)==($1040|0);
       if ($exitcond$i$7$i) {
        $$0$lcssa$i$7$i = $1047;
        break;
       } else {
        $$01011$i$7$i = $1048;$$012$i$7$i = $1047;
       }
      }
     } else {
      $$0$lcssa$i$7$i = Math_fround(0.0);
     }
     $1049 = Math_fround($1031 + $$0$lcssa$i$7$i);
     $1050 = Math_fround($1049 * Math_fround(0.125));
     $1051 = (Math_fround(Math_abs((Math_fround($1050)))));
     $1052 = $1051 > Math_fround(1.0);
     $873 = $1052 ? Math_fround(1.0) : $1051;
     $1053 = ($808|0)>(8);
     if ($1053) {
      $$012817$i = $873;$$118$i = 8;$848 = $1037;
      while(1) {
       $847 = $848 << 16 >> 16;
       $849 = $847 << $$012631604;
       $850 = (($559) + ($849<<2)|0);
       $851 = (($849) + ($37))|0;
       $852 = (($559) + ($851<<2)|0);
       $853 = (($$118$i) + 1)|0;
       $854 = (($816) + ($853<<1)|0);
       $855 = HEAP16[$854>>1]|0;
       $856 = $855 << 16 >> 16;
       $857 = (($856) - ($847))|0;
       $858 = $857 << $$012631604;
       $859 = ($858|0)>(0);
       if ($859) {
        $$01011$i4$i = 0;$$012$i3$i = Math_fround(0.0);
        while(1) {
         $860 = (($850) + ($$01011$i4$i<<2)|0);
         $861 = Math_fround(HEAPF32[$860>>2]);
         $862 = (($852) + ($$01011$i4$i<<2)|0);
         $863 = Math_fround(HEAPF32[$862>>2]);
         $864 = Math_fround($861 * $863);
         $865 = Math_fround($$012$i3$i + $864);
         $866 = (($$01011$i4$i) + 1)|0;
         $exitcond$i5$i = ($866|0)==($858|0);
         if ($exitcond$i5$i) {
          $$0$lcssa$i6$i = $865;
          break;
         } else {
          $$01011$i4$i = $866;$$012$i3$i = $865;
         }
        }
       } else {
        $$0$lcssa$i6$i = Math_fround(0.0);
       }
       $867 = (Math_fround(Math_abs((Math_fround($$0$lcssa$i6$i)))));
       $868 = $$012817$i < $867;
       $$0128$$i = $868 ? $$012817$i : $867;
       $exitcond29$i = ($853|0)==($808|0);
       if ($exitcond29$i) {
        $$0128$lcssa$i = $$0128$$i;
        break;
       } else {
        $$012817$i = $$0128$$i;$$118$i = $853;$848 = $855;
       }
      }
     } else {
      $$0128$lcssa$i = $873;
     }
     $869 = (Math_fround(Math_abs((Math_fround($$0128$lcssa$i)))));
     $870 = $869 > Math_fround(1.0);
     $871 = $870 ? Math_fround(1.0) : $869;
     $872 = Math_fround($873 * $873);
     $874 = Math_fround(Math_fround(1.00100005) - $872);
     $875 = +$874;
     $876 = (+_log($875));
     $877 = $876 * 1.4426950408889634;
     $878 = Math_fround($877);
     $879 = Math_fround($878 * Math_fround(0.5));
     $880 = Math_fround($871 * $871);
     $881 = Math_fround(Math_fround(1.00100005) - $880);
     $882 = +$881;
     $883 = (+_log($882));
     $884 = $883 * 1.4426950408889634;
     $885 = Math_fround($884);
     $886 = $879 > $885;
     $$$i1354 = $886 ? $879 : $885;
     $887 = Math_fround($878 * Math_fround(0.75));
     $888 = $887 < Math_fround(-4.0);
     $889 = $888 ? Math_fround(-4.0) : $887;
     $890 = Math_fround($spec$select1439 + $889);
     $891 = Math_fround(HEAPF32[$805>>2]);
     $892 = Math_fround($891 + Math_fround(0.25));
     $893 = Math_fround($$$i1354 * Math_fround(0.5));
     $894 = Math_fround(- $893);
     $895 = $892 < $894;
     $896 = $895 ? $892 : $894;
     HEAPF32[$805>>2] = $896;
     $$1132$i = $890;
    } else {
     $$1132$i = $spec$select1439;
    }
    $897 = (($31) + -1)|0;
    $898 = ($31|0)>(1);
    $899 = (2 - ($31))|0;
    if ($898) {
     $$pre$i1355 = HEAP32[$22>>2]|0;
     $$0126$us$i = Math_fround(0.0);$$0130$us$i = 0;
     while(1) {
      $900 = Math_imul($$0130$us$i, $$pre$i1355)|0;
      $$112714$us$i = $$0126$us$i;$$215$us$i = 0;
      while(1) {
       $901 = (($$215$us$i) + ($900))|0;
       $902 = (($317) + ($901<<2)|0);
       $903 = Math_fround(HEAPF32[$902>>2]);
       $904 = $$215$us$i << 1;
       $905 = (($899) + ($904))|0;
       $906 = (Math_fround(($905|0)));
       $907 = Math_fround($903 * $906);
       $908 = Math_fround($$112714$us$i + $907);
       $909 = (($$215$us$i) + 1)|0;
       $exitcond$i = ($909|0)==($897|0);
       if ($exitcond$i) {
        break;
       } else {
        $$112714$us$i = $908;$$215$us$i = $909;
       }
      }
      $910 = (($$0130$us$i) + 1)|0;
      $911 = ($910|0)<($20|0);
      if ($911) {
       $$0126$us$i = $908;$$0130$us$i = $910;
      } else {
       $$1127$lcssa$lcssa$i = $908;
       break;
      }
     }
    } else {
     $$1127$lcssa$lcssa$i = Math_fround(0.0);
    }
    $912 = Math_imul($897, $20)|0;
    $913 = (Math_fround(($912|0)));
    $914 = Math_fround($$1127$lcssa$lcssa$i / $913);
    $915 = Math_fround($914 + Math_fround(1.0));
    $916 = Math_fround($915 / Math_fround(6.0));
    $917 = $916 > Math_fround(2.0);
    $phitmp$i1356 = $916 < Math_fround(-2.0);
    $not$$i = $917 ^ 1;
    $918 = $phitmp$i1356 & $not$$i;
    $brmerge$i = $phitmp$i1356 | $917;
    $$mux$i = $918 ? Math_fround(-2.0) : Math_fround(2.0);
    $919 = $brmerge$i ? $$mux$i : $916;
    $920 = Math_fround($$1132$i - $919);
    $921 = Math_fround($920 - $$012841416);
    $922 = Math_fround($806 * Math_fround(2.0));
    $923 = Math_fround($921 - $922);
    $924 = HEAP32[$700>>2]|0;
    $925 = ($924|0)==(0);
    if ($925) {
     $$2133$i = $923;
    } else {
     $926 = ((($0)) + 128|0);
     $927 = Math_fround(HEAPF32[$926>>2]);
     $928 = Math_fround($927 + Math_fround(0.0500000007));
     $929 = Math_fround($928 * Math_fround(2.0));
     $930 = $929 > Math_fround(2.0);
     $phitmp1$i = $929 < Math_fround(-2.0);
     $not$11$i = $930 ^ 1;
     $931 = $phitmp1$i & $not$11$i;
     $brmerge9$i = $phitmp1$i | $930;
     $$mux10$i = $931 ? Math_fround(-2.0) : Math_fround(2.0);
     $932 = $brmerge9$i ? $$mux10$i : $929;
     $933 = Math_fround($923 - $932);
     $$2133$i = $933;
    }
    $1054 = Math_fround($$2133$i + Math_fround(0.5));
    $1055 = (Math_fround(Math_floor((Math_fround($1054)))));
    $1056 = (~~(($1055)));
    $1057 = ($1056|0)<(10);
    $1058 = $1057 ? $1056 : 10;
    $1059 = ($1058|0)>(0);
    $spec$select$i1357 = $1059 ? $1058 : 0;
    $$01273 = $spec$select$i1357;
   }
  } while(0);
  if ((label|0) == 213) {
   $804 = ((($0)) + 220|0);
   HEAPF32[$804>>2] = Math_fround(0.0);
   $$01273 = 5;
  }
  _ec_enc_icdf($$01229,$$01273,37738,7);
  $1060 = (_ec_tell_frac($$01229)|0);
  $$11274 = $$01273;$$51301 = $1060;
 }
 if ($107) {
  $1061 = HEAP32[$38>>2]|0;
  $1062 = (($1061) - ($$012631604))|0;
  $1063 = 1275 >>> $94;
  $1064 = ($$5|0)<($1063|0);
  $$5$ = $1064 ? $$5 : $1063;
  if ($32) {
   $$neg1452 = Math_imul($20, -72)|0;
   $$neg1453 = (($$neg1452) + -32)|0;
   $1067 = (($$neg1453) + ($$01282))|0;
   $1068 = ($1067|0)>(0);
   $spec$select1328 = $1068 ? $1067 : 0;
   $$01213 = $spec$select1328;
  } else {
   $1065 = $97 << 3;
   $1066 = (($$01282) - ($1065))|0;
   $$01213 = $1066;
  }
  $1069 = HEAP32[$697>>2]|0;
  $1070 = ($1069|0)==(0);
  if ($1070) {
   $$11214 = $$01213;
  } else {
   $1071 = ((($0)) + 208|0);
   $1072 = HEAP32[$1071>>2]|0;
   $1073 = $1072 >> $1062;
   $1074 = (($1073) + ($$01213))|0;
   $$11214 = $1074;
  }
  do {
   if ($32) {
    $1198 = ((($0)) + 180|0);
    $1199 = HEAP32[$1198>>2]|0;
    $1200 = ($1199|0)<(100);
    $1201 = 96 >>> $94;
    $1202 = $1200 ? $1201 : 0;
    $$01215 = (($1202) + ($$11214))|0;
    $1203 = ($1199|0)>(100);
    $1204 = 144 >>> $94;
    $$op = (0 - ($1204))|0;
    $$neg1454 = $1203 ? $$op : 0;
    $$11216 = (($$01215) + ($$neg1454))|0;
    $1205 = Math_fround(HEAPF32[$13>>2]);
    $1206 = Math_fround($1205 + Math_fround(-0.25));
    $1207 = Math_fround($1206 * Math_fround(400.0));
    $1208 = (~~(($1207)));
    $1209 = (($$11216) + ($1208))|0;
    $1210 = $1205 > Math_fround(0.699999988);
    if (!($1210)) {
     $$2 = $1209;
     break;
    }
    $1211 = ($1209|0)>(400);
    $1212 = $1211 ? $1209 : 400;
    $$2 = $1212;
   } else {
    $1075 = ((($0)) + 92|0);
    $1076 = HEAP32[$1075>>2]|0;
    $1077 = ((($0)) + 224|0);
    $1078 = HEAP32[$1077>>2]|0;
    $1079 = ((($0)) + 220|0);
    $1080 = Math_fround(HEAPF32[$1079>>2]);
    $1081 = HEAP32[$14>>2]|0;
    $1082 = Math_fround(HEAPF32[$13>>2]);
    $1083 = HEAP32[$200>>2]|0;
    $1084 = ((($0)) + 228|0);
    $1085 = HEAP32[$1084>>2]|0;
    $1086 = ($1085|0)==(0|0);
    $$idx1351$val = HEAP32[$22>>2]|0;
    $$idx1352$val = HEAP32[$26>>2]|0;
    $1087 = ($1076|0)==(0);
    $1088 = $1087 ? $$idx1351$val : $1076;
    $1089 = (($$idx1352$val) + ($1088<<1)|0);
    $1090 = HEAP16[$1089>>1]|0;
    $1091 = $1090 << 16 >> 16;
    $1092 = $1091 << $$012631604;
    if ($749) {
     $1093 = ($1088|0)>($1078|0);
     $1094 = $1093 ? $1078 : $1088;
     $1095 = (($$idx1352$val) + ($1094<<1)|0);
     $1096 = HEAP16[$1095>>1]|0;
     $1097 = $1096 << 16 >> 16;
     $1098 = $1097 << $$012631604;
     $1099 = (($1098) + ($1092))|0;
     $$0146$i = $1099;
    } else {
     $$0146$i = $1092;
    }
    $1100 = HEAP32[$700>>2]|0;
    $1101 = ($1100|0)==(0);
    do {
     if ($1101) {
      $$0$i = $$11214;
     } else {
      $1102 = ((($0)) + 136|0);
      $1103 = Math_fround(HEAPF32[$1102>>2]);
      $1104 = +$1103;
      $1105 = $1104 < 0.40000000000000002;
      if (!($1105)) {
       $$0$i = $$11214;
       break;
      }
      $1106 = Math_fround(Math_fround(0.400000006) - $1103);
      $1107 = $$0146$i << 3;
      $1108 = (Math_fround(($1107|0)));
      $1109 = Math_fround($1106 * $1108);
      $1110 = (~~(($1109)));
      $1111 = (($$11214) - ($1110))|0;
      $$0$i = $1111;
     }
    } while(0);
    if ($749) {
     $1112 = ($1088|0)>($1078|0);
     $1113 = $1112 ? $1078 : $1088;
     $1114 = (($$idx1352$val) + ($1113<<1)|0);
     $1115 = HEAP16[$1114>>1]|0;
     $1116 = $1115 << 16 >> 16;
     $1117 = $1116 << $$012631604;
     $1118 = (($1117) - ($1113))|0;
     $1119 = (Math_fround(($1118|0)));
     $1120 = Math_fround($1119 * Math_fround(0.800000011));
     $1121 = (Math_fround(($$0146$i|0)));
     $1122 = Math_fround($1120 / $1121);
     $1123 = $1080 < Math_fround(1.0);
     $1124 = $1123 ? $1080 : Math_fround(1.0);
     $1125 = (Math_fround(($$0$i|0)));
     $1126 = Math_fround($1122 * $1125);
     $1127 = Math_fround($1124 + Math_fround(-0.100000001));
     $1128 = $1118 << 3;
     $1129 = (Math_fround(($1128|0)));
     $1130 = Math_fround($1127 * $1129);
     $1131 = $1126 < $1130;
     $$$i = $1131 ? $1126 : $1130;
     $1132 = (~~(($$$i)));
     $1133 = (($$0$i) - ($1132))|0;
     $$1$i = $1133;
    } else {
     $$1$i = $$0$i;
    }
    $1134 = 19 << $$012631604;
    $1135 = (($1081) - ($1134))|0;
    $1136 = (($$1$i) + ($1135))|0;
    $1137 = Math_fround($1082 + Math_fround(-0.0439999998));
    $1138 = (Math_fround(($1136|0)));
    $1139 = Math_fround($1137 * $1138);
    $1140 = (~~(($1139)));
    $1141 = (($1136) + ($1140))|0;
    $1142 = ($1083|0)!=(0);
    $or$cond$i = $1142 | $1101;
    if ($or$cond$i) {
     $$pre$i = $$0146$i << 3;
     $$pre2$i = (Math_fround(($$pre$i|0)));
     $$2$i = $1141;$$pre$phi3$iZ2D = $$pre2$i;
    } else {
     $1143 = ((($0)) + 124|0);
     $1144 = Math_fround(HEAPF32[$1143>>2]);
     $1145 = Math_fround($1144 + Math_fround(-0.150000006));
     $1146 = $1145 < Math_fround(0.0);
     $phitmp$i = Math_fround($1145 + Math_fround(-0.119999997));
     $1147 = $1146 ? Math_fround(-0.119999997) : $phitmp$i;
     $1148 = $$0146$i << 3;
     $1149 = (Math_fround(($1148|0)));
     $1150 = Math_fround($1149 * Math_fround(1.20000005));
     $1151 = Math_fround($1150 * $1147);
     $1152 = (~~(($1151)));
     $1153 = ($$01303|0)==(0);
     $1154 = Math_fround($1149 * Math_fround(0.800000011));
     $1155 = (~~(($1154)));
     $1156 = $1153 ? 0 : $1155;
     $1157 = (($1141) + ($1156))|0;
     $spec$select$i = (($1157) + ($1152))|0;
     $$2$i = $spec$select$i;$$pre$phi3$iZ2D = $1149;
    }
    $or$cond3$i = $1142 | $1086;
    $1158 = Math_fround($$012861415 * $$pre$phi3$iZ2D);
    $1159 = (~~(($1158)));
    $1160 = (($$2$i) + ($1159))|0;
    if ($or$cond3$i) {
     $$3$i = $$2$i;
    } else {
     $1161 = (($$2$i|0) / 4)&-1;
     $1162 = ($1161|0)>($1160|0);
     $$150$i = $1162 ? $1161 : $1160;
     $$3$i = $$150$i;
    }
    $1163 = (($$idx1351$val) + -2)|0;
    $1164 = (($$idx1352$val) + ($1163<<1)|0);
    $1165 = HEAP16[$1164>>1]|0;
    $1166 = $1165 << 16 >> 16;
    $1167 = $1166 << $$012631604;
    $1168 = $20 << 3;
    $1169 = Math_imul($1168, $1167)|0;
    $1170 = (Math_fround(($1169|0)));
    $1171 = Math_fround($701 * $1170);
    $1172 = (~~(($1171)));
    $1173 = $$3$i >> 2;
    $1174 = ($1173|0)<($1172|0);
    $1175 = $1174 ? $1172 : $1173;
    $1176 = ($$3$i|0)<($1175|0);
    $1177 = $1176 ? $$3$i : $1175;
    $1178 = ($1069|0)!=(0);
    $or$cond7$i = $1178 & $or$cond3$i;
    $1179 = (($1177) - ($$11214))|0;
    $1180 = (Math_fround(($1179|0)));
    $1181 = Math_fround($1180 * Math_fround(0.670000016));
    $1182 = (~~(($1181)));
    $1183 = (($$11214) + ($1182))|0;
    $spec$select1$i = $or$cond7$i ? $1183 : $1177;
    $1184 = $1082 < Math_fround(0.200000003);
    $or$cond9$i = $1184 & $1086;
    if ($or$cond9$i) {
     $1185 = (96000 - ($spec$select1433))|0;
     $1186 = ($1185|0)<(32000);
     $1187 = $1186 ? $1185 : 32000;
     $1188 = ($1187|0)<(0);
     $phitmp148$i = (Math_fround(($1187|0)));
     $phitmp149$i = Math_fround($phitmp148$i * Math_fround(3.09999996E-6));
     $1189 = $1188 ? Math_fround(0.0) : $phitmp149$i;
     $1190 = Math_fround($1189 * $$01285);
     $1191 = (Math_fround(($spec$select1$i|0)));
     $1192 = Math_fround($1190 * $1191);
     $1193 = (~~(($1192)));
     $1194 = (($spec$select1$i) + ($1193))|0;
     $$5$i = $1194;
    } else {
     $$5$i = $spec$select1$i;
    }
    $1195 = $$11214 << 1;
    $1196 = ($1195|0)<($$5$i|0);
    $1197 = $1196 ? $1195 : $$5$i;
    $$2 = $1197;
   }
  } while(0);
  $1213 = (($$2) + ($$51301))|0;
  $1214 = (($$01292$lcssa) + 63)|0;
  $1215 = (($1214) + ($$51301))|0;
  $1216 = $1215 >> 6;
  $1217 = (($1216) + 2)|0;
  $1218 = (($$01302) + 359)|0;
  $1219 = (($1218) + ($$01292$lcssa))|0;
  $1220 = $1219 >> 6;
  $1221 = ($1217|0)>($1220|0);
  $$1329 = $1221 ? $1217 : $1220;
  $spec$select1440 = $32 ? $$1329 : $1217;
  $1222 = (($1213) + 32)|0;
  $1223 = $1222 >> 6;
  $1224 = ($spec$select1440|0)>($1223|0);
  $1225 = $1224 ? $spec$select1440 : $1223;
  $1226 = ($$5$|0)<($1225|0);
  $1227 = $1226 ? $$5$ : $1225;
  $1228 = (($1213) - ($$01282))|0;
  $1229 = $1227 << 6;
  $spec$select1330 = $1230 ? 2 : $1227;
  $spec$select1331 = $1230 ? 0 : $1228;
  $spec$select1332 = $1230 ? 128 : $1229;
  $1231 = ((($0)) + 212|0);
  $1232 = HEAP32[$1231>>2]|0;
  $1233 = ($1232|0)<(970);
  if ($1233) {
   $1234 = (($1232) + 21)|0;
   $1235 = (Math_fround(($1234|0)));
   $1236 = Math_fround(Math_fround(1.0) / $1235);
   $1237 = (($1232) + 1)|0;
   HEAP32[$1231>>2] = $1237;
   $$01218 = $1236;
  } else {
   $$01218 = Math_fround(0.00100000005);
  }
  $1238 = ((($0)) + 200|0);
  do {
   if ($1070) {
    $$51271 = $spec$select1330;
   } else {
    $1239 = (($spec$select1332) - ($$01282))|0;
    $1240 = HEAP32[$1238>>2]|0;
    $1241 = (($1239) + ($1240))|0;
    HEAP32[$1238>>2] = $1241;
    $1242 = $spec$select1331 << $1062;
    $1243 = ((($0)) + 208|0);
    $1244 = HEAP32[$1243>>2]|0;
    $1245 = (($1242) - ($1244))|0;
    $1246 = ((($0)) + 204|0);
    $1247 = HEAP32[$1246>>2]|0;
    $1248 = (($1245) - ($1247))|0;
    $1249 = (Math_fround(($1248|0)));
    $1250 = Math_fround($$01218 * $1249);
    $1251 = (~~(($1250)));
    $1252 = (($1247) + ($1251))|0;
    HEAP32[$1246>>2] = $1252;
    $1253 = (0 - ($1252))|0;
    HEAP32[$1243>>2] = $1253;
    $1254 = ($1241|0)<(0);
    if (!($1254)) {
     $$51271 = $spec$select1330;
     break;
    }
    $1255 = (($1241|0) / -64)&-1;
    $1256 = $1230 ? 0 : $1255;
    $1257 = (($1256) + ($spec$select1330))|0;
    HEAP32[$1238>>2] = 0;
    $$51271 = $1257;
   }
  } while(0);
  $1258 = ($$5$|0)<($$51271|0);
  $1259 = $1258 ? $$5$ : $$51271;
  _ec_enc_shrink($$01229,$1259);
  $$6 = $1259;
 } else {
  $$6 = $$5;
 }
 $$alloca_mul40 = $23<<2;
 $1260 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul40)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul40)|0)+15)&-16)|0);;
 $$alloca_mul42 = $23<<2;
 $1261 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul42)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul42)|0)+15)&-16)|0);;
 $$alloca_mul44 = $23<<2;
 $1262 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul44)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul44)|0)+15)&-16)|0);;
 $1263 = $$6 << 3;
 $1264 = $$6 << 6;
 $1265 = (_ec_tell_frac($$01229)|0);
 $1266 = (($1264) - ($1265))|0;
 $1267 = (($1266) + -1)|0;
 $1268 = ($$012631604>>>0)>(1);
 $or$cond34 = $1268 & $621;
 $1269 = $$012631604 << 3;
 $1270 = (($1269) + 16)|0;
 $1271 = ($1267|0)>=($1270|0);
 $spec$select1447 = $or$cond34 & $1271;
 $spec$select1448 = $spec$select1447 ? 8 : 0;
 $1272 = (($1267) - ($spec$select1448))|0;
 $1273 = (($31) + -1)|0;
 $1274 = HEAP32[$700>>2]|0;
 $1275 = ($1274|0)==(0);
 if ($1275) {
  $$01288 = $1273;
 } else {
  $1276 = ($20*32000)|0;
  $1277 = ($spec$select1433|0)<($1276|0);
  do {
   if ($1277) {
    $$0 = 13;
   } else {
    $1278 = ($20*48000)|0;
    $1279 = ($spec$select1433|0)<($1278|0);
    if ($1279) {
     $$0 = 16;
     break;
    }
    $1280 = ($20*60000)|0;
    $1281 = ($spec$select1433|0)<($1280|0);
    $1282 = ($20*80000)|0;
    $1283 = ($spec$select1433|0)<($1282|0);
    $$1333 = $1283 ? 19 : 20;
    $spec$select1443 = $1281 ? 18 : $$1333;
    $$0 = $spec$select1443;
   }
  } while(0);
  $1284 = ((($0)) + 148|0);
  $1285 = HEAP32[$1284>>2]|0;
  $1286 = ($1285|0)>($$0|0);
  $$$0 = $1286 ? $1285 : $$0;
  $$01288 = $$$0;
 }
 $1287 = HEAP32[$200>>2]|0;
 $1288 = ($1287|0)==(0);
 $spec$select1334 = $1288 ? $$01288 : 1;
 $1289 = ((($0)) + 224|0);
 $1290 = ((($0)) + 92|0);
 $1291 = HEAP32[$1290>>2]|0;
 $1292 = (_compute_allocation($21,$29,$31,$692,$707,$$11274,$1289,$10,$1272,$11,$1261,$1260,$1262,$20,$$012631604,$$01229,1,$1291,$spec$select1334)|0);
 $1293 = HEAP32[$1290>>2]|0;
 $1294 = ($1293|0)==(0);
 if ($1294) {
  $storemerge = $1292;
 } else {
  $1295 = (($1293) + 1)|0;
  $1296 = (($1293) + -1)|0;
  $1297 = ($1296|0)>($1292|0);
  $$1335 = $1297 ? $1296 : $1292;
  $1298 = ($1295|0)<($$1335|0);
  $spec$select1444 = $1298 ? $1295 : $$1335;
  $storemerge = $spec$select1444;
 }
 HEAP32[$1290>>2] = $storemerge;
 _quant_fine_energy($21,$29,$31,$52,$588,$1260,$$01229,$20);
 $$alloca_mul46 = $318;
 $1299 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul46)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul46)|0)+15)&-16)|0);;
 $1300 = (($559) + ($37<<2)|0);
 $1301 = $749 ? $1300 : 0;
 $1302 = ((($0)) + 80|0);
 $1303 = HEAP32[$1302>>2]|0;
 $1304 = HEAP32[$10>>2]|0;
 $1305 = HEAP32[$1289>>2]|0;
 $1306 = (($1264) - ($spec$select1448))|0;
 $1307 = HEAP32[$11>>2]|0;
 $1308 = ((($0)) + 76|0);
 $1309 = HEAP32[$255>>2]|0;
 $1310 = HEAP32[$299>>2]|0;
 $1311 = ((($0)) + 68|0);
 $1312 = HEAP32[$1311>>2]|0;
 _quant_all_bands(1,$21,$29,$31,$559,$1301,$1299,$305,$1261,$$112471421,$1303,$1304,$1305,$560,$1306,$1307,$$01229,$$012631604,$1292,$1308,$1309,$1310,$1312);
 if ($spec$select1447) {
  $1313 = ((($0)) + 116|0);
  $1314 = HEAP32[$1313>>2]|0;
  $1315 = ($1314|0)<(2);
  $1316 = $1315&1;
  _ec_enc_bits($$01229,$1316,1);
 }
 $$01229$idx$val = HEAP32[$$idx71$i>>2]|0;
 $$01229$idx1339$val = HEAP32[$$idx72$i>>2]|0;
 $1317 = (Math_clz32(($$01229$idx1339$val|0))|0);
 $$neg1457 = (($1263) + 32)|0;
 $$neg1459 = (($$neg1457) - ($$01229$idx$val))|0;
 $1318 = (($$neg1459) - ($1317))|0;
 _quant_energy_finalise($21,$29,$31,$52,$588,$1260,$1262,$1318,$$01229,$20);
 $1319 = $53 << 2;
 _memset(($56|0),0,($1319|0))|0;
 if ($589) {
  $$31240$us = 0;
  while(1) {
   $1320 = Math_imul($$31240$us, $23)|0;
   $$131505$us = $29;
   while(1) {
    $1321 = (($$131505$us) + ($1320))|0;
    $1322 = (($588) + ($1321<<2)|0);
    $1323 = Math_fround(HEAPF32[$1322>>2]);
    $1324 = $1323 > Math_fround(0.5);
    $1325 = $1324 ? Math_fround(0.5) : $1323;
    $1326 = $1325 < Math_fround(-0.5);
    $brmerge1445$us = $1324 | $1326;
    $$mux1446$us = $1326 ? Math_fround(-0.5) : Math_fround(0.5);
    $1327 = $brmerge1445$us ? $$mux1446$us : $1323;
    $1328 = (($56) + ($1321<<2)|0);
    HEAPF32[$1328>>2] = $1327;
    $1329 = (($$131505$us) + 1)|0;
    $exitcond1648 = ($1329|0)==($31|0);
    if ($exitcond1648) {
     break;
    } else {
     $$131505$us = $1329;
    }
   }
   $1330 = (($$31240$us) + 1)|0;
   $1331 = ($1330|0)<($20|0);
   if ($1331) {
    $$31240$us = $1330;
   } else {
    break;
   }
  }
 }
 $1332 = ($318|0)>(0);
 $or$cond1608 = $1230 & $1332;
 if ($or$cond1608) {
  $$141502 = 0;
  while(1) {
   $1333 = (($52) + ($$141502<<2)|0);
   HEAPF32[$1333>>2] = Math_fround(-28.0);
   $1334 = (($$141502) + 1)|0;
   $exitcond1647 = ($1334|0)==($318|0);
   if ($exitcond1647) {
    break;
   } else {
    $$141502 = $1334;
   }
  }
 }
 $1335 = HEAP32[$8>>2]|0;
 $1336 = ((($0)) + 104|0);
 HEAP32[$1336>>2] = $1335;
 $1337 = HEAP32[$9>>2]|0;
 $1338 = ((($0)) + 108|0);
 HEAP32[$1338>>2] = $1337;
 $1339 = ((($0)) + 112|0);
 HEAP32[$1339>>2] = $220;
 if ($or$cond16) {
  $1340 = $23 << 2;
  $1341 = (($52) + ($23<<2)|0);
  _memcpy(($1341|0),($52|0),($1340|0))|0;
 }
 do {
  if ($621) {
   $1342 = ($53|0)>(0);
   if (!($1342)) {
    break;
   }
   $$151499 = 0;
   while(1) {
    $1343 = (($54) + ($$151499<<2)|0);
    $1344 = Math_fround(HEAPF32[$1343>>2]);
    $1345 = (($52) + ($$151499<<2)|0);
    $1346 = Math_fround(HEAPF32[$1345>>2]);
    $1347 = $1344 < $1346;
    $$1337 = $1347 ? $1344 : $1346;
    HEAPF32[$1343>>2] = $$1337;
    $1348 = (($$151499) + 1)|0;
    $exitcond1646 = ($1348|0)==($53|0);
    if ($exitcond1646) {
     break;
    } else {
     $$151499 = $1348;
    }
   }
  } else {
   _memcpy(($55|0),($54|0),($1319|0))|0;
   _memcpy(($54|0),($52|0),($1319|0))|0;
  }
 } while(0);
 $1349 = ($29|0)>(0);
 $1350 = ($31|0)<($23|0);
 do {
  if ($1349) {
   $$41241$us = 0;
   while(1) {
    $1351 = Math_imul($$41241$us, $23)|0;
    $$161487$us = 0;
    while(1) {
     $1359 = (($$161487$us) + ($1351))|0;
     $1360 = (($52) + ($1359<<2)|0);
     HEAPF32[$1360>>2] = Math_fround(0.0);
     $1361 = (($55) + ($1359<<2)|0);
     HEAPF32[$1361>>2] = Math_fround(-28.0);
     $1362 = (($54) + ($1359<<2)|0);
     HEAPF32[$1362>>2] = Math_fround(-28.0);
     $1363 = (($$161487$us) + 1)|0;
     $exitcond = ($1363|0)==($29|0);
     if ($exitcond) {
      break;
     } else {
      $$161487$us = $1363;
     }
    }
    if ($1350) {
     $$171488$us = $31;
     while(1) {
      $1354 = (($$171488$us) + ($1351))|0;
      $1355 = (($52) + ($1354<<2)|0);
      HEAPF32[$1355>>2] = Math_fround(0.0);
      $1356 = (($55) + ($1354<<2)|0);
      HEAPF32[$1356>>2] = Math_fround(-28.0);
      $1357 = (($54) + ($1354<<2)|0);
      HEAPF32[$1357>>2] = Math_fround(-28.0);
      $1358 = (($$171488$us) + 1)|0;
      $exitcond1642 = ($1358|0)==($23|0);
      if ($exitcond1642) {
       break;
      } else {
       $$171488$us = $1358;
      }
     }
    }
    $1352 = (($$41241$us) + 1)|0;
    $1353 = ($1352|0)<($18|0);
    if ($1353) {
     $$41241$us = $1352;
    } else {
     break;
    }
   }
  } else {
   if (!($1350)) {
    break;
   }
   $$41241$us1492 = 0;
   while(1) {
    $1364 = Math_imul($$41241$us1492, $23)|0;
    $$171488$us1493 = $31;
    while(1) {
     $1365 = (($$171488$us1493) + ($1364))|0;
     $1366 = (($52) + ($1365<<2)|0);
     HEAPF32[$1366>>2] = Math_fround(0.0);
     $1367 = (($55) + ($1365<<2)|0);
     HEAPF32[$1367>>2] = Math_fround(-28.0);
     $1368 = (($54) + ($1365<<2)|0);
     HEAPF32[$1368>>2] = Math_fround(-28.0);
     $1369 = (($$171488$us1493) + 1)|0;
     $exitcond1644 = ($1369|0)==($23|0);
     if ($exitcond1644) {
      break;
     } else {
      $$171488$us1493 = $1369;
     }
    }
    $1370 = (($$41241$us1492) + 1)|0;
    $1371 = ($1370|0)<($18|0);
    if ($1371) {
     $$41241$us1492 = $1370;
    } else {
     break;
    }
   }
  }
 } while(0);
 $1372 = $$212621420 | $$0128714031413;
 $1373 = ($1372|0)==(0);
 $1374 = ((($0)) + 116|0);
 if ($1373) {
  $storemerge1305 = 0;
 } else {
  $1375 = HEAP32[$1374>>2]|0;
  $1376 = (($1375) + 1)|0;
  $storemerge1305 = $1376;
 }
 HEAP32[$1374>>2] = $storemerge1305;
 $1377 = HEAP32[$$idx72$i>>2]|0;
 HEAP32[$1308>>2] = $1377;
 _ec_enc_done($$01229);
 $$01229$idx1353 = ((($$01229)) + 44|0);
 $$01229$idx1353$val = HEAP32[$$01229$idx1353>>2]|0;
 $1378 = ($$01229$idx1353$val|0)==(0);
 $$6$ = $1378 ? $$6 : -3;
 _llvm_stackrestore(($127|0));
 $$1 = $$6$;
 STACKTOP = sp;return ($$1|0);
}
function _run_prefilter($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 var $$0 = 0, $$0194 = 0, $$0195 = 0, $$1 = 0, $$1$us = 0, $$1188 = Math_fround(0), $$1190 = Math_fround(0), $$3 = Math_fround(0), $$3192 = Math_fround(0), $$4 = Math_fround(0), $$4193 = Math_fround(0), $$5 = Math_fround(0), $$alloca_mul = 0, $$alloca_mul3 = 0, $$pre = 0, $$pre$phi208Z2D = 0, $$pre$phi214Z2D = 0, $$pre$phi218Z2D = 0, $$pre$phiZ2D = 0, $$pre203 = 0;
 var $$pre205 = 0, $$pre206 = 0, $$pre207 = 0, $$pre213 = 0, $$pre217 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = Math_fround(0), $117 = Math_fround(0), $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = Math_fround(0), $129 = Math_fround(0), $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = Math_fround(0), $155 = Math_fround(0), $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = Math_fround(0), $167 = Math_fround(0), $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = 0, $49 = Math_fround(0), $50 = 0, $51 = 0, $52 = Math_fround(0), $53 = 0, $54 = 0, $55 = 0, $56 = Math_fround(0), $57 = 0, $58 = Math_fround(0), $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = Math_fround(0), $68 = 0, $69 = Math_fround(0), $70 = Math_fround(0), $71 = 0, $72 = Math_fround(0), $73 = 0, $74 = Math_fround(0), $75 = 0, $76 = Math_fround(0), $77 = 0, $78 = Math_fround(0), $79 = Math_fround(0), $80 = 0, $81 = Math_fround(0), $82 = Math_fround(0), $83 = Math_fround(0);
 var $84 = Math_fround(0), $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = Math_fround(0), $92 = Math_fround(0), $93 = 0, $94 = 0, $95 = Math_fround(0), $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ispos = 0, $neg = 0, $spec$select = Math_fround(0), $spec$select196 = Math_fround(0);
 var $spec$select197 = Math_fround(0), $spec$select198 = Math_fround(0), $spec$select199 = 0, $spec$select200 = 0, $spec$select200$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $11 = sp + 8|0;
 $12 = sp;
 $13 = HEAP32[$0>>2]|0;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($4) + 1024)|0;
 $17 = Math_imul($16, $3)|0;
 $18 = (_llvm_stacksave()|0);
 $$alloca_mul = $17<<2;
 $19 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 HEAP32[$11>>2] = $19;
 $20 = (($19) + ($16<<2)|0);
 $21 = ((($11)) + 4|0);
 HEAP32[$21>>2] = $20;
 $22 = (($15) + ($4))|0;
 $23 = $4 << 2;
 $$0 = 0;
 while(1) {
  $24 = (($11) + ($$0<<2)|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = $$0 << 10;
  $27 = (($2) + ($26<<2)|0);
  _memcpy(($25|0),($27|0),4096)|0;
  $28 = ((($25)) + 4096|0);
  $29 = Math_imul($$0, $22)|0;
  $30 = (($1) + ($29<<2)|0);
  $31 = (($30) + ($15<<2)|0);
  _memcpy(($28|0),($31|0),($23|0))|0;
  $32 = (($$0) + 1)|0;
  $33 = ($32|0)<($3|0);
  if ($33) {
   $$0 = $32;
  } else {
   break;
  }
 }
 $34 = ($9|0)==(0);
 if ($34) {
  HEAP32[$12>>2] = 15;
  $$pre206 = ((($0)) + 104|0);
  $$pre207 = ((($0)) + 108|0);
  $$3 = Math_fround(0.0);$$pre$phi208Z2D = $$pre207;$$pre$phiZ2D = $$pre206;$62 = 15;
 } else {
  $35 = $16 >> 1;
  $36 = (_llvm_stacksave()|0);
  $$alloca_mul3 = $35<<2;
  $37 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;
  $38 = ((($0)) + 72|0);
  $39 = HEAP32[$38>>2]|0;
  _pitch_downsample($11,$37,$16,$3,$39);
  $40 = ((($37)) + 2048|0);
  $41 = HEAP32[$38>>2]|0;
  _pitch_search($40,$37,$4,979,$12,$41);
  $42 = HEAP32[$12>>2]|0;
  $43 = (1024 - ($42))|0;
  HEAP32[$12>>2] = $43;
  $44 = ((($0)) + 104|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ((($0)) + 108|0);
  $47 = Math_fround(HEAPF32[$46>>2]);
  $48 = HEAP32[$38>>2]|0;
  $49 = (Math_fround(_remove_doubling($37,1024,15,$4,$12,$45,$47,$48)));
  $50 = HEAP32[$12>>2]|0;
  $51 = ($50|0)>(1022);
  if ($51) {
   HEAP32[$12>>2] = 1022;
  }
  $52 = Math_fround($49 * Math_fround(0.699999988));
  $53 = ((($0)) + 56|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = ($54|0)>(2);
  $56 = Math_fround($52 * Math_fround(0.5));
  $spec$select = $55 ? $56 : $52;
  $57 = ($54|0)>(4);
  $58 = Math_fround($spec$select * Math_fround(0.5));
  $$1188 = $57 ? $58 : $spec$select;
  $59 = ($54|0)>(8);
  $spec$select196 = $59 ? Math_fround(0.0) : $$1188;
  _llvm_stackrestore(($36|0));
  $$pre = HEAP32[$12>>2]|0;
  $$3 = $spec$select196;$$pre$phi208Z2D = $46;$$pre$phiZ2D = $44;$62 = $$pre;
 }
 $60 = HEAP32[$$pre$phiZ2D>>2]|0;
 $61 = (($62) - ($60))|0;
 $ispos = ($61|0)>(-1);
 $neg = (0 - ($61))|0;
 $63 = $ispos ? $61 : $neg;
 $64 = ($63*10)|0;
 $65 = ($64|0)>($62|0);
 $spec$select197 = $65 ? Math_fround(0.400000006) : Math_fround(0.200000003);
 $66 = ($10|0)<(25);
 $67 = Math_fround($spec$select197 + Math_fround(0.100000001));
 $$1190 = $66 ? $67 : $spec$select197;
 $68 = ($10|0)<(35);
 $69 = Math_fround($$1190 + Math_fround(0.100000001));
 $spec$select198 = $68 ? $69 : $$1190;
 $70 = Math_fround(HEAPF32[$$pre$phi208Z2D>>2]);
 $71 = $70 > Math_fround(0.400000006);
 $72 = Math_fround($spec$select198 + Math_fround(-0.100000001));
 $$3192 = $71 ? $72 : $spec$select198;
 $73 = $70 > Math_fround(0.550000012);
 $74 = Math_fround($$3192 + Math_fround(-0.100000001));
 $$4193 = $73 ? $74 : $$3192;
 $75 = $$4193 > Math_fround(0.200000003);
 $76 = $75 ? $$4193 : Math_fround(0.200000003);
 $77 = $$3 < $76;
 if ($77) {
  $$0194 = 0;$$0195 = 0;$$5 = Math_fround(0.0);
 } else {
  $78 = Math_fround($$3 - $70);
  $79 = (Math_fround(Math_abs((Math_fround($78)))));
  $80 = $79 < Math_fround(0.100000001);
  $$4 = $80 ? $70 : $$3;
  $81 = Math_fround($$4 * Math_fround(32.0));
  $82 = Math_fround($81 / Math_fround(3.0));
  $83 = Math_fround($82 + Math_fround(0.5));
  $84 = (Math_fround(Math_floor((Math_fround($83)))));
  $85 = (~~(($84)));
  $86 = (($85) + -1)|0;
  $87 = ($86|0)<(7);
  $88 = $87 ? $86 : 7;
  $89 = ($88|0)>(0);
  $spec$select199 = $89 ? $88 : 0;
  $90 = (($spec$select199) + 1)|0;
  $91 = (Math_fround(($90|0)));
  $92 = Math_fround($91 * Math_fround(0.09375));
  $$0194 = 1;$$0195 = $spec$select199;$$5 = $92;
 }
 $93 = ((($13)) + 44|0);
 $94 = $15 << 2;
 $95 = Math_fround(- $$5);
 $96 = ((($0)) + 112|0);
 $97 = ((($13)) + 60|0);
 $98 = ((($0)) + 72|0);
 $99 = ($4|0)>(1024);
 $100 = (4096 - ($23))|0;
 $101 = (0 - ($4))|0;
 if ($99) {
  $$1$us = 0;$105 = $60;
  while(1) {
   $102 = HEAP32[$93>>2]|0;
   $103 = (($102) - ($15))|0;
   $104 = ($105|0)>(15);
   $spec$select200$us = $104 ? $105 : 15;
   HEAP32[$$pre$phiZ2D>>2] = $spec$select200$us;
   $106 = Math_imul($$1$us, $22)|0;
   $107 = (($1) + ($106<<2)|0);
   $108 = Math_imul($$1$us, $15)|0;
   $109 = (((($0)) + 236|0) + ($108<<2)|0);
   _memcpy(($107|0),($109|0),($94|0))|0;
   $110 = ($103|0)==(0);
   if ($110) {
    $$pre213 = (($11) + ($$1$us<<2)|0);
    $$pre$phi214Z2D = $$pre213;
   } else {
    $111 = (($107) + ($15<<2)|0);
    $112 = (($11) + ($$1$us<<2)|0);
    $113 = HEAP32[$112>>2]|0;
    $114 = ((($113)) + 4096|0);
    $115 = HEAP32[$$pre$phiZ2D>>2]|0;
    $116 = Math_fround(HEAPF32[$$pre$phi208Z2D>>2]);
    $117 = Math_fround(- $116);
    $118 = HEAP32[$96>>2]|0;
    $119 = HEAP32[$98>>2]|0;
    _comb_filter($111,$114,$115,$115,$103,$117,$117,$118,$118,0,0,$119);
    $$pre$phi214Z2D = $112;
   }
   $120 = (($107) + ($15<<2)|0);
   $121 = (($120) + ($103<<2)|0);
   $122 = HEAP32[$$pre$phi214Z2D>>2]|0;
   $123 = ((($122)) + 4096|0);
   $124 = (($123) + ($103<<2)|0);
   $125 = HEAP32[$$pre$phiZ2D>>2]|0;
   $126 = HEAP32[$12>>2]|0;
   $127 = (($4) - ($103))|0;
   $128 = Math_fround(HEAPF32[$$pre$phi208Z2D>>2]);
   $129 = Math_fround(- $128);
   $130 = HEAP32[$96>>2]|0;
   $131 = HEAP32[$97>>2]|0;
   $132 = HEAP32[$98>>2]|0;
   _comb_filter($121,$124,$125,$126,$127,$129,$95,$130,$5,$131,$15,$132);
   $133 = (($107) + ($4<<2)|0);
   _memcpy(($109|0),($133|0),($94|0))|0;
   $134 = $$1$us << 10;
   $135 = (($2) + ($134<<2)|0);
   $136 = HEAP32[$$pre$phi214Z2D>>2]|0;
   $137 = (($136) + ($4<<2)|0);
   _memcpy(($135|0),($137|0),4096)|0;
   $138 = (($$1$us) + 1)|0;
   $139 = ($138|0)<($3|0);
   if (!($139)) {
    break;
   }
   $$pre205 = HEAP32[$$pre$phiZ2D>>2]|0;
   $$1$us = $138;$105 = $$pre205;
  }
  HEAPF32[$7>>2] = $$5;
  $181 = HEAP32[$12>>2]|0;
  HEAP32[$6>>2] = $181;
  HEAP32[$8>>2] = $$0195;
  _llvm_stackrestore(($18|0));
  STACKTOP = sp;return ($$0194|0);
 } else {
  $$1 = 0;$143 = $60;
  while(1) {
   $140 = HEAP32[$93>>2]|0;
   $141 = (($140) - ($15))|0;
   $142 = ($143|0)>(15);
   $spec$select200 = $142 ? $143 : 15;
   HEAP32[$$pre$phiZ2D>>2] = $spec$select200;
   $144 = Math_imul($$1, $22)|0;
   $145 = (($1) + ($144<<2)|0);
   $146 = Math_imul($$1, $15)|0;
   $147 = (((($0)) + 236|0) + ($146<<2)|0);
   _memcpy(($145|0),($147|0),($94|0))|0;
   $148 = ($141|0)==(0);
   if ($148) {
    $$pre217 = (($11) + ($$1<<2)|0);
    $$pre$phi218Z2D = $$pre217;
   } else {
    $149 = (($145) + ($15<<2)|0);
    $150 = (($11) + ($$1<<2)|0);
    $151 = HEAP32[$150>>2]|0;
    $152 = ((($151)) + 4096|0);
    $153 = HEAP32[$$pre$phiZ2D>>2]|0;
    $154 = Math_fround(HEAPF32[$$pre$phi208Z2D>>2]);
    $155 = Math_fround(- $154);
    $156 = HEAP32[$96>>2]|0;
    $157 = HEAP32[$98>>2]|0;
    _comb_filter($149,$152,$153,$153,$141,$155,$155,$156,$156,0,0,$157);
    $$pre$phi218Z2D = $150;
   }
   $158 = (($145) + ($15<<2)|0);
   $159 = (($158) + ($141<<2)|0);
   $160 = HEAP32[$$pre$phi218Z2D>>2]|0;
   $161 = ((($160)) + 4096|0);
   $162 = (($161) + ($141<<2)|0);
   $163 = HEAP32[$$pre$phiZ2D>>2]|0;
   $164 = HEAP32[$12>>2]|0;
   $165 = (($4) - ($141))|0;
   $166 = Math_fround(HEAPF32[$$pre$phi208Z2D>>2]);
   $167 = Math_fround(- $166);
   $168 = HEAP32[$96>>2]|0;
   $169 = HEAP32[$97>>2]|0;
   $170 = HEAP32[$98>>2]|0;
   _comb_filter($159,$162,$163,$164,$165,$167,$95,$168,$5,$169,$15,$170);
   $171 = (($145) + ($4<<2)|0);
   _memcpy(($147|0),($171|0),($94|0))|0;
   $172 = $$1 << 10;
   $173 = (($2) + ($172<<2)|0);
   $174 = (($173) + ($4<<2)|0);
   _memmove(($173|0),($174|0),($100|0))|0;
   $175 = ((($173)) + 4096|0);
   $176 = (($175) + ($101<<2)|0);
   $177 = HEAP32[$$pre$phi218Z2D>>2]|0;
   $178 = ((($177)) + 4096|0);
   _memcpy(($176|0),($178|0),($23|0))|0;
   $179 = (($$1) + 1)|0;
   $180 = ($179|0)<($3|0);
   if (!($180)) {
    break;
   }
   $$pre203 = HEAP32[$$pre$phiZ2D>>2]|0;
   $$1 = $179;$143 = $$pre203;
  }
  HEAPF32[$7>>2] = $$5;
  $181 = HEAP32[$12>>2]|0;
  HEAP32[$6>>2] = $181;
  HEAP32[$8>>2] = $$0195;
  _llvm_stackrestore(($18|0));
  STACKTOP = sp;return ($$0194|0);
 }
 return (0)|0;
}
function _transient_analysis($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0124137 = Math_fround(0), $$0127136 = Math_fround(0), $$0128 = 0, $$0129$lcssa = Math_fround(0), $$0129146 = Math_fround(0), $$0130$lcssa171 = 0, $$0130$off = 0, $$0130160 = 0, $$0132$lcssa = 0, $$0132153 = 0, $$0133$lcssa169 = Math_fround(0), $$0133139 = Math_fround(0), $$0134159 = 0, $$0138 = 0, $$1125140 = Math_fround(0), $$1131 = 0, $$1141 = 0, $$2126147 = Math_fround(0), $$2148 = 0, $$2148$in = 0;
 var $$3154 = 0, $$alloca_mul = 0, $$inv = 0, $$mux = 0.0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0.0, $103 = Math_fround(0), $11 = 0, $12 = 0, $13 = 0.0, $14 = Math_fround(0), $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = Math_fround(0), $23 = Math_fround(0), $24 = Math_fround(0), $25 = Math_fround(0), $26 = Math_fround(0), $27 = Math_fround(0), $28 = Math_fround(0), $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = Math_fround(0), $34 = Math_fround(0), $35 = 0, $36 = 0, $37 = Math_fround(0), $38 = Math_fround(0), $39 = Math_fround(0), $40 = Math_fround(0), $41 = Math_fround(0);
 var $42 = Math_fround(0), $43 = Math_fround(0), $44 = 0, $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = Math_fround(0), $49 = Math_fround(0), $50 = Math_fround(0), $51 = 0, $52 = Math_fround(0), $53 = 0, $54 = Math_fround(0), $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = Math_fround(0), $60 = Math_fround(0), $61 = Math_fround(0);
 var $62 = Math_fround(0), $63 = 0, $64 = Math_fround(0), $65 = Math_fround(0), $66 = Math_fround(0), $67 = Math_fround(0), $68 = 0, $69 = 0.0, $7 = 0, $70 = Math_fround(0), $71 = 0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = Math_fround(0), $92 = Math_fround(0), $93 = 0, $94 = Math_fround(0), $95 = 0, $96 = Math_fround(0), $97 = Math_fround(0), $98 = 0.0;
 var $99 = 0.0, $brmerge = 0, $exitcond = 0, $exitcond167 = 0, $exitcond168 = 0, $spec$select = Math_fround(0), dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $$alloca_mul = $1<<2;
 $7 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 HEAP32[$6>>2] = 0;
 $8 = ($5|0)!=(0);
 $spec$select = $8 ? Math_fround(0.03125) : Math_fround(0.0625);
 $9 = (($1|0) / 2)&-1;
 $10 = ($2|0)>(0);
 if ($10) {
  $11 = ($1|0)>(0);
  $12 = ($1|0)>(1);
  $13 = (+($9|0));
  $14 = (Math_fround(($9|0)));
  $15 = (($9) + -5)|0;
  $16 = ($1|0)>(35);
  $17 = ($9*6)|0;
  $18 = (($17) + -102)|0;
  $$0130160 = 0;$$0134159 = 0;
  while(1) {
   if ($11) {
    $19 = Math_imul($$0134159, $1)|0;
    $$0124137 = Math_fround(0.0);$$0127136 = Math_fround(0.0);$$0138 = 0;
    while(1) {
     $20 = (($$0138) + ($19))|0;
     $21 = (($0) + ($20<<2)|0);
     $22 = Math_fround(HEAPF32[$21>>2]);
     $23 = Math_fround($$0124137 + $22);
     $24 = Math_fround($$0127136 + $23);
     $25 = Math_fround($22 * Math_fround(2.0));
     $26 = Math_fround($24 - $25);
     $27 = Math_fround($23 * Math_fround(0.5));
     $28 = Math_fround($22 - $27);
     $29 = (($7) + ($$0138<<2)|0);
     HEAPF32[$29>>2] = $23;
     $30 = (($$0138) + 1)|0;
     $exitcond = ($30|0)==($1|0);
     if ($exitcond) {
      break;
     } else {
      $$0124137 = $26;$$0127136 = $28;$$0138 = $30;
     }
    }
   }
   dest=$7; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
   if ($12) {
    $$0133139 = Math_fround(0.0);$$1125140 = Math_fround(0.0);$$1141 = 0;
    while(1) {
     $31 = $$1141 << 1;
     $32 = (($7) + ($31<<2)|0);
     $33 = Math_fround(HEAPF32[$32>>2]);
     $34 = Math_fround($33 * $33);
     $35 = $31 | 1;
     $36 = (($7) + ($35<<2)|0);
     $37 = Math_fround(HEAPF32[$36>>2]);
     $38 = Math_fround($37 * $37);
     $39 = Math_fround($34 + $38);
     $40 = Math_fround($$0133139 + $39);
     $41 = Math_fround($39 - $$1125140);
     $42 = Math_fround($spec$select * $41);
     $43 = Math_fround($$1125140 + $42);
     $44 = (($7) + ($$1141<<2)|0);
     HEAPF32[$44>>2] = $43;
     $45 = (($$1141) + 1)|0;
     $exitcond167 = ($45|0)==($9|0);
     if ($exitcond167) {
      break;
     } else {
      $$0133139 = $40;$$1125140 = $43;$$1141 = $45;
     }
    }
    if ($12) {
     $$0129146 = Math_fround(0.0);$$2126147 = Math_fround(0.0);$$2148$in = $9;
     while(1) {
      $$2148 = (($$2148$in) + -1)|0;
      $46 = (($7) + ($$2148<<2)|0);
      $47 = Math_fround(HEAPF32[$46>>2]);
      $48 = Math_fround($47 - $$2126147);
      $49 = Math_fround($48 * Math_fround(0.125));
      $50 = Math_fround($$2126147 + $49);
      HEAPF32[$46>>2] = $50;
      $51 = $$0129146 > $50;
      $52 = $51 ? $$0129146 : $50;
      $53 = ($$2148$in|0)>(1);
      if ($53) {
       $$0129146 = $52;$$2126147 = $50;$$2148$in = $$2148;
      } else {
       $$0129$lcssa = $52;$$0133$lcssa169 = $40;
       break;
      }
     }
    } else {
     $$0129$lcssa = Math_fround(0.0);$$0133$lcssa169 = $40;
    }
   } else {
    $$0129$lcssa = Math_fround(0.0);$$0133$lcssa169 = Math_fround(0.0);
   }
   if ($16) {
    $54 = Math_fround($$0133$lcssa169 * $$0129$lcssa);
    $55 = +$54;
    $56 = $55 * 0.5;
    $57 = $56 * $13;
    $58 = (+Math_sqrt((+$57)));
    $59 = Math_fround($58);
    $60 = Math_fround($59 + Math_fround(1.0E-15));
    $61 = Math_fround($14 / $60);
    $62 = Math_fround($61 * Math_fround(64.0));
    $$0132153 = 0;$$3154 = 12;
    while(1) {
     $63 = (($7) + ($$3154<<2)|0);
     $64 = Math_fround(HEAPF32[$63>>2]);
     $65 = Math_fround($64 + Math_fround(1.0E-15));
     $66 = Math_fround($62 * $65);
     $67 = (Math_fround(Math_floor((Math_fround($66)))));
     $68 = $67 > Math_fround(127.0);
     $69 = +$67;
     $$inv = $67 >= Math_fround(127.0);
     $70 = $$inv ? Math_fround(127.0) : $67;
     $71 = $70 < Math_fround(0.0);
     $brmerge = $68 | $71;
     $$mux = $71 ? 0.0 : 127.0;
     $72 = $brmerge ? $$mux : $69;
     $73 = (~~(($72)));
     $74 = (5184 + ($73)|0);
     $75 = HEAP8[$74>>0]|0;
     $76 = $75&255;
     $77 = (($$0132153) + ($76))|0;
     $78 = (($$3154) + 4)|0;
     $79 = ($78|0)<($15|0);
     if ($79) {
      $$0132153 = $77;$$3154 = $78;
     } else {
      $$0132$lcssa = $77;
      break;
     }
    }
   } else {
    $$0132$lcssa = 0;
   }
   $80 = $$0132$lcssa << 8;
   $81 = (($80|0) / ($18|0))&-1;
   $82 = ($81|0)>($$0130160|0);
   if ($82) {
    HEAP32[$4>>2] = $$0134159;
    $$1131 = $81;
   } else {
    $$1131 = $$0130160;
   }
   $83 = (($$0134159) + 1)|0;
   $exitcond168 = ($83|0)==($2|0);
   if ($exitcond168) {
    break;
   } else {
    $$0130160 = $$1131;$$0134159 = $83;
   }
  }
  $84 = ($$1131|0)>(200);
  $85 = $84&1;
  $$0130$off = (($$1131) + -201)|0;
  $86 = ($$0130$off>>>0)<(399);
  $87 = $8 & $86;
  if ($87) {
   HEAP32[$6>>2] = 1;
   $$0128 = 0;$$0130$lcssa171 = $$1131;
  } else {
   $$0128 = $85;$$0130$lcssa171 = $$1131;
  }
 } else {
  $$0128 = 0;$$0130$lcssa171 = 0;
 }
 $88 = ($$0130$lcssa171*27)|0;
 $89 = (+($88|0));
 $90 = (+Math_sqrt((+$89)));
 $91 = Math_fround($90);
 $92 = Math_fround($91 + Math_fround(-42.0));
 $93 = $92 < Math_fround(0.0);
 $94 = $93 ? Math_fround(0.0) : $92;
 $95 = $94 > Math_fround(163.0);
 $96 = $95 ? Math_fround(163.0) : $94;
 $97 = Math_fround($96 * Math_fround(0.00689999992));
 $98 = +$97;
 $99 = $98 + -0.13900000000000001;
 $100 = $99 < 0.0;
 $101 = $100 ? 0.0 : $99;
 $102 = (+Math_sqrt((+$101)));
 $103 = Math_fround($102);
 HEAPF32[$3>>2] = $103;
 STACKTOP = sp;return ($$0128|0);
}
function _compute_mdcts($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$0104 = 0, $$084$us = 0, $$08595$us = 0, $$08692 = 0, $$088103 = 0, $$089102 = 0, $$1 = 0, $$1$us = 0, $$18791$us = 0, $$pn = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = Math_fround(0), $43 = Math_fround(0), $44 = 0, $45 = 0, $46 = Math_fround(0), $47 = Math_fround(0), $48 = Math_fround(0), $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = Math_fround(0), $57 = 0, $58 = 0, $59 = 0;
 var $60 = Math_fround(0), $61 = Math_fround(0), $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $9 = 0, $exitcond = 0, $or$cond = 0, $or$cond106 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($1|0)==(0);
 $12 = ((($0)) + 44|0);
 $13 = HEAP32[$12>>2]|0;
 if ($11) {
  $14 = $13 << $6;
  $15 = ((($0)) + 36|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = (($16) - ($6))|0;
  $$0104 = $14;$$088103 = $17;$$089102 = 1;$$pn = $14;
  label = 4;
 } else {
  $18 = ((($0)) + 36|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ($1|0)>(0);
  $21 = Math_imul($13, $1)|0;
  if ($20) {
   $$0104 = $13;$$088103 = $19;$$089102 = $1;$$pn = $21;
   label = 4;
  } else {
   $40 = $21;
  }
 }
 if ((label|0) == 4) {
  $22 = ((($0)) + 64|0);
  $23 = (($$pn) + ($10))|0;
  $24 = ((($0)) + 60|0);
  $$084$us = 0;
  while(1) {
   $25 = Math_imul($$084$us, $23)|0;
   $26 = (($2) + ($25<<2)|0);
   $27 = Math_imul($$pn, $$084$us)|0;
   $$08595$us = 0;
   while(1) {
    $28 = Math_imul($$08595$us, $$0104)|0;
    $29 = (($26) + ($28<<2)|0);
    $30 = (($$08595$us) + ($27))|0;
    $31 = (($3) + ($30<<2)|0);
    $32 = HEAP32[$24>>2]|0;
    _clt_mdct_forward_c($22,$29,$31,$32,$10,$$088103,$$089102,$8);
    $33 = (($$08595$us) + 1)|0;
    $34 = ($33|0)<($$089102|0);
    if ($34) {
     $$08595$us = $33;
    } else {
     break;
    }
   }
   $35 = (($$084$us) + 1)|0;
   $36 = ($35|0)<($5|0);
   if ($36) {
    $$084$us = $35;
   } else {
    $40 = $$pn;
    break;
   }
  }
 }
 $37 = ($5|0)==(2);
 $38 = ($4|0)==(1);
 $or$cond = $38 & $37;
 $39 = ($40|0)>(0);
 $or$cond106 = $or$cond & $39;
 if ($or$cond106) {
  $$08692 = 0;
  while(1) {
   $41 = (($3) + ($$08692<<2)|0);
   $42 = Math_fround(HEAPF32[$41>>2]);
   $43 = Math_fround($42 * Math_fround(0.5));
   $44 = (($$08692) + ($40))|0;
   $45 = (($3) + ($44<<2)|0);
   $46 = Math_fround(HEAPF32[$45>>2]);
   $47 = Math_fround($46 * Math_fround(0.5));
   $48 = Math_fround($43 + $47);
   HEAPF32[$41>>2] = $48;
   $49 = (($$08692) + 1)|0;
   $50 = ($49|0)<($40|0);
   if ($50) {
    $$08692 = $49;
   } else {
    break;
   }
  }
 }
 $51 = ($7|0)==(1);
 if ($51) {
  return;
 }
 $52 = (($40|0) / ($7|0))&-1;
 $53 = ($52|0)>(0);
 $54 = (($40) - ($52))|0;
 $55 = $54 << 2;
 $56 = (Math_fround(($7|0)));
 if (!($53)) {
  $$1 = 0;
  while(1) {
   $67 = Math_imul($40, $$1)|0;
   $68 = (($67) + ($52))|0;
   $69 = (($3) + ($68<<2)|0);
   _memset(($69|0),0,($55|0))|0;
   $70 = (($$1) + 1)|0;
   $71 = ($70|0)<($4|0);
   if ($71) {
    $$1 = $70;
   } else {
    break;
   }
  }
  return;
 }
 $$1$us = 0;
 while(1) {
  $57 = Math_imul($40, $$1$us)|0;
  $$18791$us = 0;
  while(1) {
   $58 = (($$18791$us) + ($57))|0;
   $59 = (($3) + ($58<<2)|0);
   $60 = Math_fround(HEAPF32[$59>>2]);
   $61 = Math_fround($60 * $56);
   HEAPF32[$59>>2] = $61;
   $62 = (($$18791$us) + 1)|0;
   $exitcond = ($62|0)==($52|0);
   if ($exitcond) {
    break;
   } else {
    $$18791$us = $62;
   }
  }
  $63 = (($57) + ($52))|0;
  $64 = (($3) + ($63<<2)|0);
  _memset(($64|0),0,($55|0))|0;
  $65 = (($$1$us) + 1)|0;
  $66 = ($65|0)<($4|0);
  if ($66) {
   $$1$us = $65;
  } else {
   break;
  }
 }
 return;
}
function _tf_analysis($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = Math_fround($8);
 $9 = $9|0;
 var $$ = 0, $$0 = 0, $$0$lcssa$i = Math_fround(0), $$0$lcssa$i243 = Math_fround(0), $$01314$i = 0, $$01314$i235$us = 0, $$01314$i235$us$us = 0, $$01314$i241 = 0, $$015$i = Math_fround(0), $$015$i234$us = Math_fround(0), $$015$i234$us$us = Math_fround(0), $$015$i240 = Math_fround(0), $$0210287 = 0, $$0211$$us = 0, $$0211$$us$1 = 0, $$0211257$us = 0, $$0211257$us$1 = 0, $$0214 = 0, $$0217 = Math_fround(0), $$0220256$us = 0;
 var $$0220256$us$1 = 0, $$0223265 = 0, $$0223265$us = 0, $$0223265$us$us = 0, $$0223265$us274 = 0, $$1212$ = 0, $$1212250 = 0, $$1215$lcssa = 0, $$1215267 = 0, $$1215267$us = 0, $$1215267$us$us = 0, $$1215267$us272 = 0, $$1218266 = Math_fround(0), $$1218266$us = Math_fround(0), $$1218266$us$us = Math_fround(0), $$1218266$us273 = Math_fround(0), $$1221$lcssa$ph = 0, $$1221249 = 0, $$1258$us = 0, $$1258$us$1 = 0;
 var $$2216 = 0, $$2216$us = 0, $$2216$us$us = 0, $$2216$us284 = 0, $$2219 = Math_fround(0), $$2219$us = Math_fround(0), $$2219$us$us = Math_fround(0), $$2219$us283 = Math_fround(0), $$2251 = 0, $$3248 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul3 = 0, $$alloca_mul5 = 0, $$alloca_mul7 = 0, $$pre = 0, $$sink312 = 0, $$sink312$in = 0, $10 = Math_fround(0), $100 = 0;
 var $101 = 0, $102 = Math_fround(0), $103 = Math_fround(0), $104 = Math_fround(0), $105 = Math_fround(0), $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = Math_fround(0), $112 = Math_fround(0), $113 = Math_fround(0), $114 = Math_fround(0), $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = Math_fround(0);
 var $12 = Math_fround(0), $120 = Math_fround(0), $121 = Math_fround(0), $122 = Math_fround(0), $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = Math_fround(0), $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = Math_fround(0), $34 = Math_fround(0), $35 = Math_fround(0), $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = Math_fround(0), $41 = Math_fround(0), $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $60 = Math_fround(0), $61 = Math_fround(0), $62 = Math_fround(0), $63 = 0, $64 = Math_fround(0), $65 = Math_fround(0), $66 = 0, $67 = 0, $68 = Math_fround(0), $69 = Math_fround(0), $70 = Math_fround(0), $71 = 0, $72 = Math_fround(0), $73 = Math_fround(0), $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = Math_fround(0), $85 = Math_fround(0), $86 = Math_fround(0), $87 = Math_fround(0), $88 = Math_fround(0), $89 = 0, $90 = 0, $91 = Math_fround(0), $92 = Math_fround(0), $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = Math_fround(0), $98 = Math_fround(0), $99 = Math_fround(0);
 var $exitcond = 0, $exitcond$i = 0, $exitcond$i236$us = 0, $exitcond$i236$us$us = 0, $exitcond$i242 = 0, $exitcond303 = 0, $exitcond303$1 = 0, $exitcond307 = 0, $exitcond308 = 0, $exitcond309 = 0, $exitcond310 = 0, $exitcond311 = 0, $ispos = 0, $ispos225 = 0, $ispos227$us = 0, $ispos227$us$1 = 0, $ispos229$us = 0, $ispos229$us$1 = 0, $neg = 0, $neg226 = 0;
 var $neg228$us = 0, $neg228$us$1 = 0, $neg230$us = 0, $neg230$us$1 = 0, $not$ = 0, $not$291 = 0, $or$cond = 0, $or$cond232 = 0, $or$cond3 = 0, $spec$select = 0, $spec$select315$ph = 0, $spec$select315317 = 0, $spec$select330 = 0, $storemerge245 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $10 = Math_fround(Math_fround(0.5) - $8);
 $11 = $10 < Math_fround(-0.25);
 $12 = $11 ? Math_fround(-0.25) : $10;
 $13 = Math_fround($12 * Math_fround(0.0399999991));
 $$alloca_mul = $1<<2;
 $14 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $15 = ((($0)) + 32|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (($16) + ($1<<1)|0);
 $18 = HEAP16[$17>>1]|0;
 $19 = $18 << 16 >> 16;
 $20 = (($1) + -1)|0;
 $21 = (($16) + ($20<<1)|0);
 $22 = HEAP16[$21>>1]|0;
 $23 = $22 << 16 >> 16;
 $24 = (($19) - ($23))|0;
 $25 = $24 << $7;
 $$alloca_mul1 = $25<<2;
 $26 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $$alloca_mul3 = $25<<2;
 $27 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;
 $$alloca_mul5 = $1<<2;
 $28 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul5)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul5)|0)+15)&-16)|0);;
 $$alloca_mul7 = $1<<2;
 $29 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul7)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul7)|0)+15)&-16)|0);;
 $30 = ($1|0)>(0);
 do {
  if ($30) {
   $31 = Math_imul($9, $6)|0;
   $32 = ($2|0)!=(0);
   $33 = (Math_fround(($7|0)));
   $34 = $32 ? $33 : Math_fround(0.0);
   $35 = Math_fround($34 * $13);
   $36 = ($2|0)==(0);
   $37 = 1 << $7;
   $38 = (($7) + 1)|0;
   $39 = (($7) + -1)|0;
   $40 = (Math_fround(($38|0)));
   $41 = Math_fround($13 * $40);
   $42 = Math_imul($7, -2)|0;
   $$0210287 = 0;$45 = $16;
   while(1) {
    $43 = (($$0210287) + 1)|0;
    $44 = (($45) + ($43<<1)|0);
    $46 = HEAP16[$44>>1]|0;
    $47 = $46 << 16 >> 16;
    $48 = (($45) + ($$0210287<<1)|0);
    $49 = HEAP16[$48>>1]|0;
    $50 = $49 << 16 >> 16;
    $51 = (($47) - ($50))|0;
    $52 = $51 << $7;
    $53 = ($51|0)==(1);
    $54 = $50 << $7;
    $55 = (($54) + ($31))|0;
    $56 = (($5) + ($55<<2)|0);
    $57 = $52 << 2;
    _memcpy(($26|0),($56|0),($57|0))|0;
    $58 = ($52|0)>(0);
    if ($58) {
     $$01314$i = 0;$$015$i = Math_fround(0.0);
     while(1) {
      $59 = (($26) + ($$01314$i<<2)|0);
      $60 = Math_fround(HEAPF32[$59>>2]);
      $61 = (Math_fround(Math_abs((Math_fround($60)))));
      $62 = Math_fround($$015$i + $61);
      $63 = (($$01314$i) + 1)|0;
      $exitcond$i = ($63|0)==($52|0);
      if ($exitcond$i) {
       $$0$lcssa$i = $62;
       break;
      } else {
       $$01314$i = $63;$$015$i = $62;
      }
     }
    } else {
     $$0$lcssa$i = Math_fround(0.0);
    }
    $64 = Math_fround($35 * $$0$lcssa$i);
    $65 = Math_fround($$0$lcssa$i + $64);
    $or$cond = $36 | $53;
    if ($or$cond) {
     $$0214 = 0;$$0217 = $65;
    } else {
     _memcpy(($27|0),($26|0),($57|0))|0;
     $66 = $52 >> $7;
     _haar1($27,$66,$37);
     if ($58) {
      $$01314$i241 = 0;$$015$i240 = Math_fround(0.0);
      while(1) {
       $67 = (($27) + ($$01314$i241<<2)|0);
       $68 = Math_fround(HEAPF32[$67>>2]);
       $69 = (Math_fround(Math_abs((Math_fround($68)))));
       $70 = Math_fround($$015$i240 + $69);
       $71 = (($$01314$i241) + 1)|0;
       $exitcond$i242 = ($71|0)==($52|0);
       if ($exitcond$i242) {
        $$0$lcssa$i243 = $70;
        break;
       } else {
        $$01314$i241 = $71;$$015$i240 = $70;
       }
      }
     } else {
      $$0$lcssa$i243 = Math_fround(0.0);
     }
     $72 = Math_fround($41 * $$0$lcssa$i243);
     $73 = Math_fround($$0$lcssa$i243 + $72);
     $74 = $73 < $65;
     if ($74) {
      $$0214 = -1;$$0217 = $73;
     } else {
      $$0214 = 0;$$0217 = $65;
     }
    }
    $75 = $32 | $53;
    $76 = $75 ^ 1;
    $77 = $76&1;
    $78 = (($77) + ($7))|0;
    $79 = ($78|0)>(0);
    L19: do {
     if ($79) {
      if (!($58)) {
       if ($32) {
        $$0223265$us274 = 0;$$1215267$us272 = $$0214;$$1218266$us273 = $$0217;
        while(1) {
         $107 = (($39) - ($$0223265$us274))|0;
         $108 = (($$0223265$us274) + 1)|0;
         $109 = $52 >> $$0223265$us274;
         $110 = 1 << $$0223265$us274;
         _haar1($26,$109,$110);
         $111 = (Math_fround(($107|0)));
         $112 = Math_fround($13 * $111);
         $113 = Math_fround($112 * Math_fround(0.0));
         $114 = Math_fround($113 + Math_fround(0.0));
         $115 = $114 < $$1218266$us273;
         $$2219$us283 = $115 ? $114 : $$1218266$us273;
         $$2216$us284 = $115 ? $108 : $$1215267$us272;
         $exitcond308 = ($108|0)==($78|0);
         if ($exitcond308) {
          $$1215$lcssa = $$2216$us284;
          break L19;
         } else {
          $$0223265$us274 = $108;$$1215267$us272 = $$2216$us284;$$1218266$us273 = $$2219$us283;
         }
        }
       } else {
        $$0223265 = 0;$$1215267 = $$0214;$$1218266 = $$0217;
        while(1) {
         $116 = (($$0223265) + 1)|0;
         $117 = $52 >> $$0223265;
         $118 = 1 << $$0223265;
         _haar1($26,$117,$118);
         $119 = (Math_fround(($116|0)));
         $120 = Math_fround($13 * $119);
         $121 = Math_fround($120 * Math_fround(0.0));
         $122 = Math_fround($121 + Math_fround(0.0));
         $123 = $122 < $$1218266;
         $$2219 = $123 ? $122 : $$1218266;
         $$2216 = $123 ? $116 : $$1215267;
         $exitcond307 = ($116|0)==($78|0);
         if ($exitcond307) {
          $$1215$lcssa = $$2216;
          break L19;
         } else {
          $$0223265 = $116;$$1215267 = $$2216;$$1218266 = $$2219;
         }
        }
       }
      }
      if ($32) {
       $$0223265$us$us = 0;$$1215267$us$us = $$0214;$$1218266$us$us = $$0217;
       while(1) {
        $80 = (($39) - ($$0223265$us$us))|0;
        $81 = $52 >> $$0223265$us$us;
        $82 = 1 << $$0223265$us$us;
        _haar1($26,$81,$82);
        $$01314$i235$us$us = 0;$$015$i234$us$us = Math_fround(0.0);
        while(1) {
         $90 = (($26) + ($$01314$i235$us$us<<2)|0);
         $91 = Math_fround(HEAPF32[$90>>2]);
         $92 = (Math_fround(Math_abs((Math_fround($91)))));
         $87 = Math_fround($$015$i234$us$us + $92);
         $93 = (($$01314$i235$us$us) + 1)|0;
         $exitcond$i236$us$us = ($93|0)==($52|0);
         if ($exitcond$i236$us$us) {
          break;
         } else {
          $$01314$i235$us$us = $93;$$015$i234$us$us = $87;
         }
        }
        $83 = (($$0223265$us$us) + 1)|0;
        $84 = (Math_fround(($80|0)));
        $85 = Math_fround($13 * $84);
        $86 = Math_fround($85 * $87);
        $88 = Math_fround($87 + $86);
        $89 = $88 < $$1218266$us$us;
        $$2219$us$us = $89 ? $88 : $$1218266$us$us;
        $$2216$us$us = $89 ? $83 : $$1215267$us$us;
        $exitcond310 = ($83|0)==($78|0);
        if ($exitcond310) {
         $$1215$lcssa = $$2216$us$us;
         break;
        } else {
         $$0223265$us$us = $83;$$1215267$us$us = $$2216$us$us;$$1218266$us$us = $$2219$us$us;
        }
       }
      } else {
       $$0223265$us = 0;$$1215267$us = $$0214;$$1218266$us = $$0217;
       while(1) {
        $94 = $52 >> $$0223265$us;
        $95 = 1 << $$0223265$us;
        _haar1($26,$94,$95);
        $$01314$i235$us = 0;$$015$i234$us = Math_fround(0.0);
        while(1) {
         $96 = (($26) + ($$01314$i235$us<<2)|0);
         $97 = Math_fround(HEAPF32[$96>>2]);
         $98 = (Math_fround(Math_abs((Math_fround($97)))));
         $99 = Math_fround($$015$i234$us + $98);
         $100 = (($$01314$i235$us) + 1)|0;
         $exitcond$i236$us = ($100|0)==($52|0);
         if ($exitcond$i236$us) {
          break;
         } else {
          $$01314$i235$us = $100;$$015$i234$us = $99;
         }
        }
        $101 = (($$0223265$us) + 1)|0;
        $102 = (Math_fround(($101|0)));
        $103 = Math_fround($13 * $102);
        $104 = Math_fround($103 * $99);
        $105 = Math_fround($99 + $104);
        $106 = $105 < $$1218266$us;
        $$2219$us = $106 ? $105 : $$1218266$us;
        $$2216$us = $106 ? $101 : $$1215267$us;
        $exitcond309 = ($101|0)==($78|0);
        if ($exitcond309) {
         $$1215$lcssa = $$2216$us;
         break;
        } else {
         $$0223265$us = $101;$$1215267$us = $$2216$us;$$1218266$us = $$2219$us;
        }
       }
      }
     } else {
      $$1215$lcssa = $$0214;
     }
    } while(0);
    $124 = Math_imul($$1215$lcssa, -2)|0;
    $125 = $$1215$lcssa << 1;
    $126 = $32 ? $125 : $124;
    $127 = (($14) + ($$0210287<<2)|0);
    HEAP32[$127>>2] = $126;
    if ($53) {
     $128 = ($126|0)==(0);
     $129 = ($126|0)==($42|0);
     $or$cond232 = $128 | $129;
     if ($or$cond232) {
      $130 = (($126) + -1)|0;
      HEAP32[$127>>2] = $130;
     }
    }
    $exitcond311 = ($43|0)==($1|0);
    if ($exitcond311) {
     break;
    }
    $$pre = HEAP32[$15>>2]|0;
    $$0210287 = $43;$45 = $$pre;
   }
   $131 = ($2|0)==(0);
   $132 = $131 ? $4 : 0;
   $133 = ($1|0)>(1);
   $134 = $2 << 2;
   if (!($133)) {
    $135 = ($2|0)==(0);
    $136 = $135 ? $4 : 0;
    $$1221$lcssa$ph = $136;$spec$select315$ph = 0;
    break;
   }
   $137 = ((1024 + ($7<<3)|0) + ($134)|0);
   $138 = HEAP8[$137>>0]|0;
   $139 = $138 << 24 >> 24;
   $140 = $139 << 1;
   $141 = $134 | 1;
   $142 = ((1024 + ($7<<3)|0) + ($141)|0);
   $143 = HEAP8[$142>>0]|0;
   $144 = $143 << 24 >> 24;
   $145 = $144 << 1;
   $$0211257$us = 0;$$0220256$us = $132;$$1258$us = 1;
   while(1) {
    $146 = (($$0220256$us) + ($4))|0;
    $147 = ($$0211257$us|0)<($146|0);
    $$0211$$us = $147 ? $$0211257$us : $146;
    $148 = (($$0211257$us) + ($4))|0;
    $149 = ($148|0)<($$0220256$us|0);
    $150 = $149 ? $148 : $$0220256$us;
    $151 = (($14) + ($$1258$us<<2)|0);
    $152 = HEAP32[$151>>2]|0;
    $153 = (($152) - ($140))|0;
    $ispos227$us = ($153|0)>(-1);
    $neg228$us = (0 - ($153))|0;
    $154 = $ispos227$us ? $153 : $neg228$us;
    $155 = (($154) + ($$0211$$us))|0;
    $156 = (($152) - ($145))|0;
    $ispos229$us = ($156|0)>(-1);
    $neg230$us = (0 - ($156))|0;
    $157 = $ispos229$us ? $156 : $neg230$us;
    $158 = (($157) + ($150))|0;
    $159 = (($$1258$us) + 1)|0;
    $exitcond303 = ($159|0)==($1|0);
    if ($exitcond303) {
     break;
    } else {
     $$0211257$us = $155;$$0220256$us = $158;$$1258$us = $159;
    }
   }
   $160 = ($155|0)<($158|0);
   $161 = $160 ? $155 : $158;
   $162 = $134 | 2;
   $163 = ((1024 + ($7<<3)|0) + ($162)|0);
   $164 = HEAP8[$163>>0]|0;
   $165 = $164 << 24 >> 24;
   $166 = $165 << 1;
   $167 = $134 | 3;
   $168 = ((1024 + ($7<<3)|0) + ($167)|0);
   $169 = HEAP8[$168>>0]|0;
   $170 = $169 << 24 >> 24;
   $171 = $170 << 1;
   $$0211257$us$1 = 0;$$0220256$us$1 = $132;$$1258$us$1 = 1;
   while(1) {
    $220 = (($$0220256$us$1) + ($4))|0;
    $221 = ($$0211257$us$1|0)<($220|0);
    $$0211$$us$1 = $221 ? $$0211257$us$1 : $220;
    $222 = (($$0211257$us$1) + ($4))|0;
    $223 = ($222|0)<($$0220256$us$1|0);
    $224 = $223 ? $222 : $$0220256$us$1;
    $225 = (($14) + ($$1258$us$1<<2)|0);
    $226 = HEAP32[$225>>2]|0;
    $227 = (($226) - ($166))|0;
    $ispos227$us$1 = ($227|0)>(-1);
    $neg228$us$1 = (0 - ($227))|0;
    $228 = $ispos227$us$1 ? $227 : $neg228$us$1;
    $175 = (($228) + ($$0211$$us$1))|0;
    $229 = (($226) - ($171))|0;
    $ispos229$us$1 = ($229|0)>(-1);
    $neg230$us$1 = (0 - ($229))|0;
    $230 = $ispos229$us$1 ? $229 : $neg230$us$1;
    $176 = (($230) + ($224))|0;
    $231 = (($$1258$us$1) + 1)|0;
    $exitcond303$1 = ($231|0)==($1|0);
    if ($exitcond303$1) {
     break;
    } else {
     $$0211257$us$1 = $175;$$0220256$us$1 = $176;$$1258$us$1 = $231;
    }
   }
   $174 = ($175|0)<($176|0);
   $177 = $174 ? $175 : $176;
   $178 = ($177|0)<($161|0);
   $179 = ($2|0)!=(0);
   $or$cond3 = $179 & $178;
   $spec$select = $or$cond3&1;
   $180 = $179 ? 0 : $4;
   if ($133) {
    $181 = $spec$select << 1;
    $182 = $181 | $134;
    $183 = ((1024 + ($7<<3)|0) + ($182)|0);
    $184 = HEAP8[$183>>0]|0;
    $185 = $184 << 24 >> 24;
    $186 = $185 << 1;
    $187 = $182 | 1;
    $188 = ((1024 + ($7<<3)|0) + ($187)|0);
    $189 = HEAP8[$188>>0]|0;
    $190 = $189 << 24 >> 24;
    $191 = $190 << 1;
    $$1212250 = 0;$$1221249 = $180;$$2251 = 1;
    while(1) {
     $192 = (($$1221249) + ($4))|0;
     $193 = ($$1212250|0)<($192|0);
     $194 = (($28) + ($$2251<<2)|0);
     $not$ = $193 ^ 1;
     $$ = $not$&1;
     $$1212$ = $193 ? $$1212250 : $192;
     HEAP32[$194>>2] = $$;
     $195 = (($$1212250) + ($4))|0;
     $196 = ($195|0)<($$1221249|0);
     $197 = (($29) + ($$2251<<2)|0);
     $not$291 = $196 ^ 1;
     $storemerge245 = $not$291&1;
     $$0 = $196 ? $195 : $$1221249;
     HEAP32[$197>>2] = $storemerge245;
     $198 = (($14) + ($$2251<<2)|0);
     $199 = HEAP32[$198>>2]|0;
     $200 = (($199) - ($186))|0;
     $ispos = ($200|0)>(-1);
     $neg = (0 - ($200))|0;
     $201 = $ispos ? $200 : $neg;
     $202 = (($201) + ($$1212$))|0;
     $203 = (($199) - ($191))|0;
     $ispos225 = ($203|0)>(-1);
     $neg226 = (0 - ($203))|0;
     $204 = $ispos225 ? $203 : $neg226;
     $205 = (($204) + ($$0))|0;
     $206 = (($$2251) + 1)|0;
     $exitcond = ($206|0)==($1|0);
     if ($exitcond) {
      break;
     } else {
      $$1212250 = $202;$$1221249 = $205;$$2251 = $206;
     }
    }
    $210 = ($202|0)>=($205|0);
    $211 = $210&1;
    $212 = (($3) + ($20<<2)|0);
    HEAP32[$212>>2] = $211;
    $213 = (($1) + -2)|0;
    $$3248 = $213;$216 = $211;
    while(1) {
     $214 = (($$3248) + 1)|0;
     $215 = ($216|0)==(1);
     $spec$select330 = $215 ? $29 : $28;
     $$sink312$in = (($spec$select330) + ($214<<2)|0);
     $$sink312 = HEAP32[$$sink312$in>>2]|0;
     $217 = (($3) + ($$3248<<2)|0);
     HEAP32[$217>>2] = $$sink312;
     $218 = (($$3248) + -1)|0;
     $219 = ($$3248|0)>(0);
     if ($219) {
      $$3248 = $218;$216 = $$sink312;
     } else {
      $spec$select315317 = $spec$select;
      break;
     }
    }
    STACKTOP = sp;return ($spec$select315317|0);
   } else {
    $$1221$lcssa$ph = $180;$spec$select315$ph = $spec$select;
   }
  } else {
   $172 = ($2|0)==(0);
   $173 = $172 ? $4 : 0;
   $$1221$lcssa$ph = $173;$spec$select315$ph = 0;
  }
 } while(0);
 $207 = ($$1221$lcssa$ph|0)<(1);
 $208 = $207&1;
 $209 = (($3) + ($20<<2)|0);
 HEAP32[$209>>2] = $208;
 $spec$select315317 = $spec$select315$ph;
 STACKTOP = sp;return ($spec$select315317|0);
}
function _dynalloc_analysis($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 $13 = $13|0;
 $14 = $14|0;
 $15 = $15|0;
 $16 = $16|0;
 $17 = $17|0;
 $18 = $18|0;
 var $$ = Math_fround(0), $$$$i = Math_fround(0), $$$$i357 = Math_fround(0), $$$i = Math_fround(0), $$$i353 = Math_fround(0), $$$i355 = Math_fround(0), $$0$i = Math_fround(0), $$0$i354 = Math_fround(0), $$0$i358 = Math_fround(0), $$0$i366 = Math_fround(0), $$0328424 = 0, $$0329 = 0, $$0329$us = 0, $$0330 = 0, $$0330$us = 0, $$0331$us = 0, $$0333377 = 0, $$0333377$us = 0, $$0337$us = Math_fround(0), $$0339 = 0;
 var $$056$i = Math_fround(0), $$057$i = Math_fround(0), $$1$i = Math_fround(0), $$10381 = 0, $$11379 = 0, $$12378 = 0, $$12378$us = 0, $$1332 = 0, $$1338$$us = Math_fround(0), $$1338$lcssa$lcssa = Math_fround(0), $$1338417$us = Math_fround(0), $$1340$lcssa = 0, $$1340396 = 0, $$1418$us = 0, $$158$i = Math_fround(0), $$160$i = Math_fround(0), $$21$i = Math_fround(0), $$21$i356 = Math_fround(0), $$2341 = 0, $$2397 = 0;
 var $$3336 = 0, $$3404 = 0, $$3404$in = 0, $$342 = Math_fround(0), $$344 = Math_fround(0), $$345 = Math_fround(0), $$346 = Math_fround(0), $$347 = Math_fround(0), $$348 = Math_fround(0), $$4408 = 0, $$5413 = 0, $$61$i = Math_fround(0), $$6390 = 0, $$7393 = 0, $$8386 = 0, $$9383 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$idx = 0, $$idx$val = Math_fround(0);
 var $$idx349 = 0, $$idx349$val = Math_fround(0), $$idx351 = 0, $$idx351$val = Math_fround(0), $$idx352 = 0, $$idx352$val = Math_fround(0), $$phi$trans$insert = 0, $$phi$trans$insert447 = 0, $$pre = Math_fround(0), $$pre448 = 0, $$sink462 = Math_fround(0), $$val = Math_fround(0), $100 = Math_fround(0), $101 = 0, $102 = 0, $103 = Math_fround(0), $104 = 0, $105 = Math_fround(0), $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $110 = 0, $111 = Math_fround(0), $112 = 0, $113 = Math_fround(0), $114 = 0, $115 = 0, $116 = Math_fround(0), $117 = 0, $118 = Math_fround(0), $119 = Math_fround(0), $120 = 0, $121 = 0, $122 = 0, $123 = Math_fround(0), $124 = 0, $125 = Math_fround(0), $126 = 0, $127 = 0;
 var $128 = Math_fround(0), $129 = 0, $130 = Math_fround(0), $131 = Math_fround(0), $132 = Math_fround(0), $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = Math_fround(0), $138 = Math_fround(0), $139 = 0, $140 = 0, $141 = Math_fround(0), $142 = 0, $143 = Math_fround(0), $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = Math_fround(0), $150 = 0, $151 = Math_fround(0), $152 = 0, $153 = 0, $154 = Math_fround(0), $155 = 0, $156 = Math_fround(0), $157 = 0, $158 = Math_fround(0), $159 = 0, $160 = Math_fround(0), $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = Math_fround(0), $170 = 0, $171 = Math_fround(0), $172 = Math_fround(0), $173 = 0, $174 = Math_fround(0), $175 = Math_fround(0), $176 = 0, $177 = Math_fround(0), $178 = 0, $179 = Math_fround(0), $180 = Math_fround(0), $181 = 0, $182 = Math_fround(0), $183 = 0, $184 = Math_fround(0), $185 = Math_fround(0), $186 = Math_fround(0), $187 = 0;
 var $188 = Math_fround(0), $189 = Math_fround(0), $19 = 0, $190 = Math_fround(0), $191 = 0, $192 = 0, $193 = Math_fround(0), $194 = 0, $195 = Math_fround(0), $196 = Math_fround(0), $197 = 0, $198 = Math_fround(0), $199 = 0, $20 = 0, $200 = 0, $201 = Math_fround(0), $202 = 0, $203 = Math_fround(0), $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = Math_fround(0), $211 = Math_fround(0), $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = Math_fround(0), $217 = Math_fround(0), $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = Math_fround(0), $226 = 0, $227 = 0, $228 = Math_fround(0), $229 = Math_fround(0), $23 = 0, $230 = Math_fround(0), $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = Math_fround(0), $237 = 0, $238 = Math_fround(0), $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = Math_fround(0), $250 = Math_fround(0), $251 = Math_fround(0), $252 = Math_fround(0), $253 = 0, $254 = 0, $255 = Math_fround(0), $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = Math_fround(0), $267 = 0, $268 = Math_fround(0), $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = Math_fround(0), $280 = 0, $281 = 0, $282 = 0, $283 = Math_fround(0), $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = Math_fround(0), $289 = Math_fround(0), $29 = Math_fround(0), $290 = Math_fround(0), $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $30 = Math_fround(0), $300 = 0, $31 = Math_fround(0), $32 = 0, $33 = Math_fround(0), $34 = Math_fround(0), $35 = 0, $36 = 0, $37 = Math_fround(0), $38 = Math_fround(0), $39 = Math_fround(0), $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = Math_fround(0);
 var $46 = 0, $47 = Math_fround(0), $48 = Math_fround(0), $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = Math_fround(0);
 var $66 = 0, $67 = 0, $68 = Math_fround(0), $69 = 0, $70 = 0, $71 = Math_fround(0), $72 = Math_fround(0), $73 = 0, $74 = Math_fround(0), $75 = Math_fround(0), $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = Math_fround(0), $82 = Math_fround(0), $83 = Math_fround(0), $84 = 0, $85 = 0;
 var $86 = Math_fround(0), $87 = 0, $88 = 0, $89 = Math_fround(0), $90 = 0, $91 = 0, $92 = Math_fround(0), $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = Math_fround(0), $98 = Math_fround(0), $99 = 0, $exitcond = 0, $exitcond435 = 0, $exitcond436 = 0, $exitcond437 = 0, $exitcond438 = 0, $exitcond439 = 0;
 var $exitcond440 = 0, $exitcond441 = 0, $exitcond442 = 0, $exitcond443 = 0, $exitcond444 = 0, $or$cond = 0, $or$cond$not = 0, $or$cond3 = 0, $or$cond428 = 0, $or$cond5$not = 0, $or$cond7 = 0, $or$cond7$not = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $19 = Math_imul($5, $2)|0;
 $$alloca_mul = $19<<2;
 $20 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $$alloca_mul1 = $19<<2;
 $21 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $22 = $2 << 2;
 _memset(($6|0),0,($22|0))|0;
 $23 = ($4|0)>(0);
 if ($23) {
  $24 = (9 - ($7))|0;
  $25 = (Math_fround(($24|0)));
  $$0328424 = 0;
  while(1) {
   $26 = (($8) + ($$0328424<<1)|0);
   $27 = HEAP16[$26>>1]|0;
   $28 = (Math_fround(($27<<16>>16)));
   $29 = Math_fround($28 * Math_fround(0.0625));
   $30 = Math_fround($29 + Math_fround(0.5));
   $31 = Math_fround($30 + $25);
   $32 = (19872 + ($$0328424<<2)|0);
   $33 = Math_fround(HEAPF32[$32>>2]);
   $34 = Math_fround($31 - $33);
   $35 = (($$0328424) + 5)|0;
   $36 = Math_imul($35, $35)|0;
   $37 = (Math_fround(($36|0)));
   $38 = Math_fround($37 * Math_fround(0.00620000018));
   $39 = Math_fround($38 + $34);
   $40 = (($21) + ($$0328424<<2)|0);
   HEAPF32[$40>>2] = $39;
   $41 = (($$0328424) + 1)|0;
   $exitcond444 = ($41|0)==($4|0);
   if ($exitcond444) {
    break;
   } else {
    $$0328424 = $41;
   }
  }
  if ($23) {
   $$0331$us = 0;$$0337$us = Math_fround(-31.8999996);
   while(1) {
    $42 = Math_imul($$0331$us, $2)|0;
    $$1338417$us = $$0337$us;$$1418$us = 0;
    while(1) {
     $43 = (($$1418$us) + ($42))|0;
     $44 = (($0) + ($43<<2)|0);
     $45 = Math_fround(HEAPF32[$44>>2]);
     $46 = (($21) + ($$1418$us<<2)|0);
     $47 = Math_fround(HEAPF32[$46>>2]);
     $48 = Math_fround($45 - $47);
     $49 = $$1338417$us > $48;
     $$1338$$us = $49 ? $$1338417$us : $48;
     $50 = (($$1418$us) + 1)|0;
     $exitcond443 = ($50|0)==($4|0);
     if ($exitcond443) {
      break;
     } else {
      $$1338417$us = $$1338$$us;$$1418$us = $50;
     }
    }
    $51 = (($$0331$us) + 1)|0;
    $52 = ($51|0)<($5|0);
    if ($52) {
     $$0331$us = $51;$$0337$us = $$1338$$us;
    } else {
     $$1338$lcssa$lcssa = $$1338$$us;
     break;
    }
   }
  } else {
   $$1338$lcssa$lcssa = Math_fround(-31.8999996);
  }
 } else {
  $$1338$lcssa$lcssa = Math_fround(-31.8999996);
 }
 $53 = ($14|0)<(51);
 $54 = ($13|0)<(1);
 $or$cond$not = $54 | $53;
 $55 = ($16|0)!=(0);
 $or$cond3 = $or$cond$not | $55;
 if ($or$cond3) {
  $$3336 = 0;
  HEAP32[$15>>2] = $$3336;
  STACKTOP = sp;return (Math_fround($$1338$lcssa$lcssa));
 }
 $56 = ($4|0)>(1);
 $57 = (($4) + -2)|0;
 $58 = ($4|0)>(4);
 $59 = (($4) + -3)|0;
 $60 = (($4) + -1)|0;
 $$0339 = 0;$$1332 = 0;
 while(1) {
  $61 = Math_imul($$1332, $2)|0;
  $62 = (($20) + ($61<<2)|0);
  $63 = (($1) + ($61<<2)|0);
  $64 = HEAP32[$63>>2]|0;
  HEAP32[$62>>2] = $64;
  $65 = (HEAP32[tempDoublePtr>>2]=$64,Math_fround(HEAPF32[tempDoublePtr>>2]));
  if ($56) {
   $$1340396 = $$0339;$$2397 = 1;$75 = $65;
   while(1) {
    $66 = (($$2397) + ($61))|0;
    $67 = (($1) + ($66<<2)|0);
    $68 = Math_fround(HEAPF32[$67>>2]);
    $69 = (($66) + -1)|0;
    $70 = (($1) + ($69<<2)|0);
    $71 = Math_fround(HEAPF32[$70>>2]);
    $72 = Math_fround($71 + Math_fround(0.5));
    $73 = $68 > $72;
    $$2341 = $73 ? $$2397 : $$1340396;
    $74 = Math_fround($75 + Math_fround(1.5));
    $76 = $74 < $68;
    $$ = $76 ? $74 : $68;
    $77 = (($62) + ($$2397<<2)|0);
    HEAPF32[$77>>2] = $$;
    $78 = (($$2397) + 1)|0;
    $exitcond440 = ($78|0)==($4|0);
    if ($exitcond440) {
     $$1340$lcssa = $$2341;
     break;
    } else {
     $$1340396 = $$2341;$$2397 = $78;$75 = $$;
    }
   }
  } else {
   $$1340$lcssa = $$0339;
  }
  $79 = ($$1340$lcssa|0)>(0);
  if ($79) {
   $$phi$trans$insert = (($62) + ($$1340$lcssa<<2)|0);
   $$pre = Math_fround(HEAPF32[$$phi$trans$insert>>2]);
   $$3404$in = $$1340$lcssa;$83 = $$pre;
   while(1) {
    $$3404 = (($$3404$in) + -1)|0;
    $80 = (($62) + ($$3404<<2)|0);
    $81 = Math_fround(HEAPF32[$80>>2]);
    $82 = Math_fround($83 + Math_fround(2.0));
    $84 = (($$3404) + ($61))|0;
    $85 = (($1) + ($84<<2)|0);
    $86 = Math_fround(HEAPF32[$85>>2]);
    $87 = $82 < $86;
    $$342 = $87 ? $82 : $86;
    $88 = $81 < $$342;
    $89 = $88 ? $81 : $$342;
    HEAPF32[$80>>2] = $89;
    $90 = ($$3404$in|0)>(1);
    if ($90) {
     $$3404$in = $$3404;$83 = $89;
    } else {
     break;
    }
   }
  }
  if ($58) {
   $$4408 = 2;
   while(1) {
    $91 = (($62) + ($$4408<<2)|0);
    $92 = Math_fround(HEAPF32[$91>>2]);
    $93 = (($$4408) + ($61))|0;
    $94 = (($93) + -2)|0;
    $95 = (($1) + ($94<<2)|0);
    $96 = (($1) + ($93<<2)|0);
    $97 = Math_fround(HEAPF32[$96>>2]);
    $98 = Math_fround(HEAPF32[$95>>2]);
    $99 = ((($95)) + 4|0);
    $100 = Math_fround(HEAPF32[$99>>2]);
    $101 = $98 > $100;
    $$$i = $101 ? $98 : $100;
    $$61$i = $101 ? $100 : $98;
    $102 = ((($95)) + 12|0);
    $103 = Math_fround(HEAPF32[$102>>2]);
    $104 = ((($95)) + 16|0);
    $105 = Math_fround(HEAPF32[$104>>2]);
    $106 = $103 > $105;
    $$057$i = $106 ? $105 : $103;
    $$056$i = $106 ? $103 : $105;
    $107 = $$61$i > $$057$i;
    $$160$i = $107 ? $$056$i : $$$i;
    $$158$i = $107 ? $$61$i : $$057$i;
    $$1$i = $107 ? $$$i : $$056$i;
    $108 = $97 > $$160$i;
    do {
     if ($108) {
      $109 = $$160$i < $$158$i;
      if ($109) {
       $110 = $97 < $$158$i;
       $111 = $110 ? $97 : $$158$i;
       $$0$i = $111;
       break;
      } else {
       $112 = $$1$i < $$160$i;
       $113 = $112 ? $$1$i : $$160$i;
       $$0$i = $113;
       break;
      }
     } else {
      $114 = $97 < $$158$i;
      if ($114) {
       $115 = $$160$i < $$158$i;
       $116 = $115 ? $$160$i : $$158$i;
       $$0$i = $116;
       break;
      } else {
       $117 = $97 < $$1$i;
       $118 = $117 ? $97 : $$1$i;
       $$0$i = $118;
       break;
      }
     }
    } while(0);
    $119 = Math_fround($$0$i + Math_fround(-1.0));
    $120 = $92 > $119;
    if ($120) {
     $132 = $92;
    } else {
     do {
      if ($108) {
       $121 = $$160$i < $$158$i;
       if ($121) {
        $122 = $97 < $$158$i;
        $123 = $122 ? $97 : $$158$i;
        $$0$i366 = $123;
        break;
       } else {
        $124 = $$1$i < $$160$i;
        $125 = $124 ? $$1$i : $$160$i;
        $$0$i366 = $125;
        break;
       }
      } else {
       $126 = $97 < $$158$i;
       if ($126) {
        $127 = $$160$i < $$158$i;
        $128 = $127 ? $$160$i : $$158$i;
        $$0$i366 = $128;
        break;
       } else {
        $129 = $97 < $$1$i;
        $130 = $129 ? $97 : $$1$i;
        $$0$i366 = $130;
        break;
       }
      }
     } while(0);
     $131 = Math_fround($$0$i366 + Math_fround(-1.0));
     $132 = $131;
    }
    HEAPF32[$91>>2] = $132;
    $133 = (($$4408) + 1)|0;
    $exitcond441 = ($133|0)==($57|0);
    if ($exitcond441) {
     break;
    } else {
     $$4408 = $133;
    }
   }
  }
  $$idx351 = ((($63)) + 4|0);
  $$idx351$val = Math_fround(HEAPF32[$$idx351>>2]);
  $$idx352 = ((($63)) + 8|0);
  $$idx352$val = Math_fround(HEAPF32[$$idx352>>2]);
  $134 = $$idx351$val < $65;
  $$$i355 = $134 ? $$idx351$val : $65;
  $$21$i356 = $134 ? $65 : $$idx351$val;
  $135 = $$21$i356 < $$idx352$val;
  $136 = $$$i355 < $$idx352$val;
  $$$$i357 = $136 ? $$idx352$val : $$$i355;
  $$0$i358 = $135 ? $$21$i356 : $$$$i357;
  $137 = Math_fround($$0$i358 + Math_fround(-1.0));
  $138 = Math_fround(HEAPF32[$62>>2]);
  $139 = $138 > $137;
  $$344 = $139 ? $138 : $137;
  HEAPF32[$62>>2] = $$344;
  $140 = ((($62)) + 4|0);
  $141 = Math_fround(HEAPF32[$140>>2]);
  $142 = $141 > $137;
  $143 = $142 ? $141 : $137;
  HEAPF32[$140>>2] = $143;
  $144 = (($59) + ($61))|0;
  $145 = (($1) + ($144<<2)|0);
  $$val = Math_fround(HEAPF32[$145>>2]);
  $$idx = ((($145)) + 4|0);
  $$idx$val = Math_fround(HEAPF32[$$idx>>2]);
  $$idx349 = ((($145)) + 8|0);
  $$idx349$val = Math_fround(HEAPF32[$$idx349>>2]);
  $146 = $$val > $$idx$val;
  $$$i353 = $146 ? $$idx$val : $$val;
  $$21$i = $146 ? $$val : $$idx$val;
  $147 = $$21$i < $$idx349$val;
  $148 = $$$i353 < $$idx349$val;
  $$$$i = $148 ? $$idx349$val : $$$i353;
  $$0$i354 = $147 ? $$21$i : $$$$i;
  $149 = Math_fround($$0$i354 + Math_fround(-1.0));
  $150 = (($62) + ($57<<2)|0);
  $151 = Math_fround(HEAPF32[$150>>2]);
  $152 = $151 > $149;
  $$345 = $152 ? $151 : $149;
  HEAPF32[$150>>2] = $$345;
  $153 = (($62) + ($60<<2)|0);
  $154 = Math_fround(HEAPF32[$153>>2]);
  $155 = $154 > $149;
  $156 = $155 ? $154 : $149;
  HEAPF32[$153>>2] = $156;
  if ($23) {
   $$5413 = 0;
   while(1) {
    $157 = (($62) + ($$5413<<2)|0);
    $158 = Math_fround(HEAPF32[$157>>2]);
    $159 = (($21) + ($$5413<<2)|0);
    $160 = Math_fround(HEAPF32[$159>>2]);
    $161 = $158 > $160;
    $$346 = $161 ? $158 : $160;
    HEAPF32[$157>>2] = $$346;
    $162 = (($$5413) + 1)|0;
    $exitcond442 = ($162|0)==($4|0);
    if ($exitcond442) {
     break;
    } else {
     $$5413 = $162;
    }
   }
  }
  $163 = (($$1332) + 1)|0;
  $164 = ($163|0)<($5|0);
  if ($164) {
   $$0339 = $$1340$lcssa;$$1332 = $163;
  } else {
   break;
  }
 }
 $165 = ($5|0)==(2);
 $166 = ($3|0)<($4|0);
 if ($165) {
  if ($166) {
   $$6390 = $3;
   while(1) {
    $167 = (($$6390) + ($2))|0;
    $168 = (($20) + ($167<<2)|0);
    $169 = Math_fround(HEAPF32[$168>>2]);
    $170 = (($20) + ($$6390<<2)|0);
    $171 = Math_fround(HEAPF32[$170>>2]);
    $172 = Math_fround($171 + Math_fround(-4.0));
    $173 = $169 > $172;
    $$347 = $173 ? $169 : $172;
    HEAPF32[$168>>2] = $$347;
    $174 = Math_fround(HEAPF32[$170>>2]);
    $175 = Math_fround($$347 + Math_fround(-4.0));
    $176 = $174 > $175;
    $177 = $176 ? $174 : $175;
    HEAPF32[$170>>2] = $177;
    $178 = (($0) + ($$6390<<2)|0);
    $179 = Math_fround(HEAPF32[$178>>2]);
    $180 = Math_fround($179 - $177);
    $181 = $180 < Math_fround(0.0);
    $182 = $181 ? Math_fround(0.0) : $180;
    $183 = (($0) + ($167<<2)|0);
    $184 = Math_fround(HEAPF32[$183>>2]);
    $185 = Math_fround(HEAPF32[$168>>2]);
    $186 = Math_fround($184 - $185);
    $187 = $186 < Math_fround(0.0);
    $188 = $187 ? Math_fround(0.0) : $186;
    $189 = Math_fround($182 + $188);
    $190 = Math_fround($189 * Math_fround(0.5));
    HEAPF32[$170>>2] = $190;
    $191 = (($$6390) + 1)|0;
    $exitcond438 = ($191|0)==($4|0);
    if ($exitcond438) {
     label = 47;
     break;
    } else {
     $$6390 = $191;
    }
   }
  }
 } else {
  if ($166) {
   $$7393 = $3;
   while(1) {
    $192 = (($0) + ($$7393<<2)|0);
    $193 = Math_fround(HEAPF32[$192>>2]);
    $194 = (($20) + ($$7393<<2)|0);
    $195 = Math_fround(HEAPF32[$194>>2]);
    $196 = Math_fround($193 - $195);
    $197 = $196 < Math_fround(0.0);
    $198 = $197 ? Math_fround(0.0) : $196;
    HEAPF32[$194>>2] = $198;
    $199 = (($$7393) + 1)|0;
    $exitcond439 = ($199|0)==($4|0);
    if ($exitcond439) {
     label = 47;
     break;
    } else {
     $$7393 = $199;
    }
   }
  }
 }
 if ((label|0) == 47) {
  if ($166) {
   $$8386 = $3;
   while(1) {
    $200 = (($20) + ($$8386<<2)|0);
    $201 = Math_fround(HEAPF32[$200>>2]);
    $202 = (($17) + ($$8386<<2)|0);
    $203 = Math_fround(HEAPF32[$202>>2]);
    $204 = $201 > $203;
    $$348 = $204 ? $201 : $203;
    HEAPF32[$200>>2] = $$348;
    $205 = (($$8386) + 1)|0;
    $exitcond437 = ($205|0)==($4|0);
    if ($exitcond437) {
     break;
    } else {
     $$8386 = $205;
    }
   }
  }
 }
 $206 = ($10|0)!=(0);
 $207 = ($11|0)==(0);
 $or$cond5$not = $206 & $207;
 $208 = ($9|0)!=(0);
 $or$cond7 = $208 | $or$cond5$not;
 $or$cond7$not = $or$cond7 ^ 1;
 $or$cond428 = $166 & $or$cond7$not;
 if ($or$cond428) {
  $$9383 = $3;
  while(1) {
   $209 = (($20) + ($$9383<<2)|0);
   $210 = Math_fround(HEAPF32[$209>>2]);
   $211 = Math_fround($210 * Math_fround(0.5));
   HEAPF32[$209>>2] = $211;
   $212 = (($$9383) + 1)|0;
   $exitcond436 = ($212|0)==($4|0);
   if ($exitcond436) {
    break;
   } else {
    $$9383 = $212;
   }
  }
 }
 if ($166) {
  $$10381 = $3;
  while(1) {
   $213 = ($$10381|0)<(8);
   $214 = (($20) + ($$10381<<2)|0);
   if ($213) {
    $$sink462 = Math_fround(2.0);
    label = 57;
   } else {
    $215 = ($$10381|0)>(11);
    if ($215) {
     $$sink462 = Math_fround(0.5);
     label = 57;
    }
   }
   if ((label|0) == 57) {
    label = 0;
    $216 = Math_fround(HEAPF32[$214>>2]);
    $217 = Math_fround($216 * $$sink462);
    HEAPF32[$214>>2] = $217;
   }
   $218 = (($$10381) + 1)|0;
   $exitcond435 = ($218|0)==($4|0);
   if ($exitcond435) {
    break;
   } else {
    $$10381 = $218;
   }
  }
 }
 $219 = HEAP32[$18>>2]|0;
 $220 = ($219|0)==(0);
 if (!($220)) {
  $221 = ($4|0)<(19);
  $222 = $221 ? $4 : 19;
  $223 = ($222|0)>($3|0);
  if ($223) {
   $$11379 = $3;
   while(1) {
    $224 = (($20) + ($$11379<<2)|0);
    $225 = Math_fround(HEAPF32[$224>>2]);
    $226 = (((($18)) + 36|0) + ($$11379)|0);
    $227 = HEAP8[$226>>0]|0;
    $228 = (Math_fround(($227&255)));
    $229 = Math_fround($228 * Math_fround(0.015625));
    $230 = Math_fround($225 + $229);
    HEAPF32[$224>>2] = $230;
    $231 = (($$11379) + 1)|0;
    $232 = ($231|0)<($222|0);
    if ($232) {
     $$11379 = $231;
    } else {
     break;
    }
   }
  }
 }
 if (!($166)) {
  $$3336 = 0;
  HEAP32[$15>>2] = $$3336;
  STACKTOP = sp;return (Math_fround($$1338$lcssa$lcssa));
 }
 $or$cond9 = $208 | $207;
 $or$cond = $206 & $or$cond9;
 $233 = $14 << 1;
 $234 = (($233|0) / 3)&-1;
 $$phi$trans$insert447 = (($12) + ($3<<1)|0);
 $$pre448 = HEAP16[$$phi$trans$insert447>>1]|0;
 if ($or$cond) {
  $$0333377$us = 0;$$12378$us = $3;$244 = $$pre448;
  while(1) {
   $235 = (($20) + ($$12378$us<<2)|0);
   $236 = Math_fround(HEAPF32[$235>>2]);
   $237 = $236 < Math_fround(4.0);
   $238 = $237 ? $236 : Math_fround(4.0);
   HEAPF32[$235>>2] = $238;
   $239 = (($$12378$us) + 1)|0;
   $240 = (($12) + ($239<<1)|0);
   $241 = HEAP16[$240>>1]|0;
   $242 = $241 << 16 >> 16;
   $243 = $244 << 16 >> 16;
   $245 = (($242) - ($243))|0;
   $246 = Math_imul($245, $5)|0;
   $247 = $246 << $13;
   $248 = ($247|0)<(6);
   do {
    if ($248) {
     $260 = (~~(($238)));
     $261 = $260 << 3;
     $262 = Math_imul($261, $247)|0;
     $$0329$us = $262;$$0330$us = $260;
    } else {
     $249 = ($247|0)>(48);
     if ($249) {
      $255 = Math_fround($238 * Math_fround(8.0));
      $256 = (~~(($255)));
      $257 = $256 << 3;
      $258 = Math_imul($257, $247)|0;
      $259 = (($258|0) / 8)&-1;
      $$0329$us = $259;$$0330$us = $256;
      break;
     } else {
      $250 = (Math_fround(($247|0)));
      $251 = Math_fround($238 * $250);
      $252 = Math_fround($251 / Math_fround(6.0));
      $253 = (~~(($252)));
      $254 = ($253*48)|0;
      $$0329$us = $254;$$0330$us = $253;
      break;
     }
    }
   } while(0);
   $263 = (($6) + ($$12378$us<<2)|0);
   HEAP32[$263>>2] = $$0330$us;
   $264 = (($$0329$us) + ($$0333377$us))|0;
   $exitcond = ($239|0)==($4|0);
   if ($exitcond) {
    $$3336 = $264;
    break;
   } else {
    $$0333377$us = $264;$$12378$us = $239;$244 = $241;
   }
  }
  HEAP32[$15>>2] = $$3336;
  STACKTOP = sp;return (Math_fround($$1338$lcssa$lcssa));
 }
 $$0333377 = 0;$$12378 = $3;$274 = $$pre448;
 while(1) {
  $265 = (($20) + ($$12378<<2)|0);
  $266 = Math_fround(HEAPF32[$265>>2]);
  $267 = $266 < Math_fround(4.0);
  $268 = $267 ? $266 : Math_fround(4.0);
  HEAPF32[$265>>2] = $268;
  $269 = (($$12378) + 1)|0;
  $270 = (($12) + ($269<<1)|0);
  $271 = HEAP16[$270>>1]|0;
  $272 = $271 << 16 >> 16;
  $273 = $274 << 16 >> 16;
  $275 = (($272) - ($273))|0;
  $276 = Math_imul($275, $5)|0;
  $277 = $276 << $13;
  $278 = ($277|0)<(6);
  do {
   if ($278) {
    $279 = (~~(($268)));
    $280 = $279 << 3;
    $281 = Math_imul($280, $277)|0;
    $$0329 = $281;$$0330 = $279;
   } else {
    $282 = ($277|0)>(48);
    if ($282) {
     $283 = Math_fround($268 * Math_fround(8.0));
     $284 = (~~(($283)));
     $285 = $284 << 3;
     $286 = Math_imul($285, $277)|0;
     $287 = (($286|0) / 8)&-1;
     $$0329 = $287;$$0330 = $284;
     break;
    } else {
     $288 = (Math_fround(($277|0)));
     $289 = Math_fround($268 * $288);
     $290 = Math_fround($289 / Math_fround(6.0));
     $291 = (~~(($290)));
     $292 = ($291*48)|0;
     $$0329 = $292;$$0330 = $291;
     break;
    }
   }
  } while(0);
  $293 = (($$0329) + ($$0333377))|0;
  $294 = $293 >> 6;
  $295 = ($294|0)>($234|0);
  if ($295) {
   break;
  }
  $299 = (($6) + ($$12378<<2)|0);
  HEAP32[$299>>2] = $$0330;
  $300 = ($269|0)<($4|0);
  if ($300) {
   $$0333377 = $293;$$12378 = $269;$274 = $271;
  } else {
   $$3336 = $293;
   label = 81;
   break;
  }
 }
 if ((label|0) == 81) {
  HEAP32[$15>>2] = $$3336;
  STACKTOP = sp;return (Math_fround($$1338$lcssa$lcssa));
 }
 $296 = $234 << 6;
 $297 = (($296) - ($$0333377))|0;
 $298 = (($6) + ($$12378<<2)|0);
 HEAP32[$298>>2] = $297;
 $$3336 = $296;
 HEAP32[$15>>2] = $$3336;
 STACKTOP = sp;return (Math_fround($$1338$lcssa$lcssa));
}
function _celt_decoder_get_size($0) {
 $0 = $0|0;
 var $$idx = 0, $$idx$val = 0, $$idx2 = 0, $$idx2$val = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $reass$add$i = 0, $reass$mul$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_opus_custom_mode_create(48000,960,0)|0);
 $$idx = ((($1)) + 4|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx2 = ((($1)) + 8|0);
 $$idx2$val = HEAP32[$$idx2>>2]|0;
 $2 = $$idx$val << 2;
 $3 = $$idx2$val << 5;
 $reass$add$i = (($2) + 8288)|0;
 $reass$mul$i = Math_imul($reass$add$i, $0)|0;
 $4 = (($3) + 92)|0;
 $5 = (($4) + ($reass$mul$i))|0;
 return ($5|0);
}
function _celt_decoder_init($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0 = 0, $$idx$i = 0, $$idx$val$i = 0, $$idx22$i = 0, $$idx22$val$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $reass$add$i$i = 0, $reass$mul$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $3 = (_opus_custom_mode_create(48000,960,0)|0);
 $4 = ($2>>>0)>(2);
 if ($4) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $5 = ($0|0)==(0|0);
 if ($5) {
  $$0 = -7;
  STACKTOP = sp;return ($$0|0);
 }
 $$idx$i = ((($3)) + 4|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $$idx22$i = ((($3)) + 8|0);
 $$idx22$val$i = HEAP32[$$idx22$i>>2]|0;
 $6 = $$idx$val$i << 2;
 $7 = $$idx22$val$i << 5;
 $reass$add$i$i = (($6) + 8288)|0;
 $reass$mul$i$i = Math_imul($reass$add$i$i, $2)|0;
 $8 = (($7) + 92)|0;
 $9 = (($8) + ($reass$mul$i$i))|0;
 _memset(($0|0),0,($9|0))|0;
 HEAP32[$0>>2] = $3;
 $10 = HEAP32[$$idx$i>>2]|0;
 $11 = ((($0)) + 4|0);
 HEAP32[$11>>2] = $10;
 $12 = ((($0)) + 8|0);
 HEAP32[$12>>2] = $2;
 $13 = ((($0)) + 12|0);
 HEAP32[$13>>2] = $2;
 $14 = ((($0)) + 16|0);
 HEAP32[$14>>2] = 1;
 $15 = ((($0)) + 20|0);
 HEAP32[$15>>2] = 0;
 $16 = ((($3)) + 12|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($0)) + 24|0);
 HEAP32[$18>>2] = $17;
 $19 = ((($0)) + 28|0);
 HEAP32[$19>>2] = 1;
 $20 = ((($0)) + 32|0);
 HEAP32[$20>>2] = 0;
 $21 = ((($0)) + 36|0);
 HEAP32[$21>>2] = 0;
 (_opus_custom_decoder_ctl($0,4028,$vararg_buffer)|0);
 $22 = (_resampling_factor($1)|0);
 HEAP32[$14>>2] = $22;
 $23 = ($22|0)==(0);
 $$ = $23 << 31 >> 31;
 $$0 = $$;
 STACKTOP = sp;return ($$0|0);
}
function _opus_custom_decoder_ctl($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $$0 = 0, $$0119131 = 0, $$idx = 0, $$idx$val = 0, $$off = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0;
 var $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded10 = 0, $expanded12 = 0, $expanded13 = 0, $expanded14 = 0, $expanded16 = 0, $expanded17 = 0, $expanded19 = 0, $expanded20 = 0, $expanded21 = 0, $expanded23 = 0, $expanded24 = 0;
 var $expanded26 = 0, $expanded27 = 0, $expanded28 = 0, $expanded3 = 0, $expanded30 = 0, $expanded31 = 0, $expanded33 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded40 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded47 = 0, $expanded48 = 0, $expanded49 = 0, $expanded5 = 0;
 var $expanded51 = 0, $expanded52 = 0, $expanded54 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0, $expanded6 = 0, $expanded61 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded68 = 0, $expanded69 = 0, $expanded7 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded75 = 0;
 var $expanded76 = 0, $expanded77 = 0, $expanded9 = 0, $reass$add$i = 0, $reass$mul$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 do {
  switch ($1|0) {
  case 10010:  {
   $arglist_current = HEAP32[$2>>2]|0;
   $3 = $arglist_current;
   $4 = ((0) + 4|0);
   $expanded3 = $4;
   $expanded = (($expanded3) - 1)|0;
   $5 = (($3) + ($expanded))|0;
   $6 = ((0) + 4|0);
   $expanded7 = $6;
   $expanded6 = (($expanded7) - 1)|0;
   $expanded5 = $expanded6 ^ -1;
   $7 = $5 & $expanded5;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $arglist_next = ((($8)) + 4|0);
   HEAP32[$2>>2] = $arglist_next;
   $10 = ($9|0)<(0);
   if ($10) {
    label = 30;
   } else {
    $11 = HEAP32[$0>>2]|0;
    $12 = ((($11)) + 8|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($9|0)<($13|0);
    if ($14) {
     $15 = ((($0)) + 20|0);
     HEAP32[$15>>2] = $9;
     label = 29;
    } else {
     label = 30;
    }
   }
   break;
  }
  case 10012:  {
   $arglist_current2 = HEAP32[$2>>2]|0;
   $16 = $arglist_current2;
   $17 = ((0) + 4|0);
   $expanded10 = $17;
   $expanded9 = (($expanded10) - 1)|0;
   $18 = (($16) + ($expanded9))|0;
   $19 = ((0) + 4|0);
   $expanded14 = $19;
   $expanded13 = (($expanded14) - 1)|0;
   $expanded12 = $expanded13 ^ -1;
   $20 = $18 & $expanded12;
   $21 = $20;
   $22 = HEAP32[$21>>2]|0;
   $arglist_next3 = ((($21)) + 4|0);
   HEAP32[$2>>2] = $arglist_next3;
   $23 = ($22|0)<(1);
   if ($23) {
    label = 30;
   } else {
    $24 = HEAP32[$0>>2]|0;
    $25 = ((($24)) + 8|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = ($22|0)>($26|0);
    if ($27) {
     label = 30;
    } else {
     $28 = ((($0)) + 24|0);
     HEAP32[$28>>2] = $22;
     label = 29;
    }
   }
   break;
  }
  case 10008:  {
   $arglist_current5 = HEAP32[$2>>2]|0;
   $29 = $arglist_current5;
   $30 = ((0) + 4|0);
   $expanded17 = $30;
   $expanded16 = (($expanded17) - 1)|0;
   $31 = (($29) + ($expanded16))|0;
   $32 = ((0) + 4|0);
   $expanded21 = $32;
   $expanded20 = (($expanded21) - 1)|0;
   $expanded19 = $expanded20 ^ -1;
   $33 = $31 & $expanded19;
   $34 = $33;
   $35 = HEAP32[$34>>2]|0;
   $arglist_next6 = ((($34)) + 4|0);
   HEAP32[$2>>2] = $arglist_next6;
   $$off = (($35) + -1)|0;
   $36 = ($$off>>>0)>(1);
   if ($36) {
    label = 30;
   } else {
    $37 = ((($0)) + 12|0);
    HEAP32[$37>>2] = $35;
    label = 29;
   }
   break;
  }
  case 10007:  {
   $arglist_current8 = HEAP32[$2>>2]|0;
   $38 = $arglist_current8;
   $39 = ((0) + 4|0);
   $expanded24 = $39;
   $expanded23 = (($expanded24) - 1)|0;
   $40 = (($38) + ($expanded23))|0;
   $41 = ((0) + 4|0);
   $expanded28 = $41;
   $expanded27 = (($expanded28) - 1)|0;
   $expanded26 = $expanded27 ^ -1;
   $42 = $40 & $expanded26;
   $43 = $42;
   $44 = HEAP32[$43>>2]|0;
   $arglist_next9 = ((($43)) + 4|0);
   HEAP32[$2>>2] = $arglist_next9;
   $45 = ($44|0)==(0|0);
   if ($45) {
    label = 30;
   } else {
    $46 = ((($0)) + 44|0);
    $47 = HEAP32[$46>>2]|0;
    HEAP32[$44>>2] = $47;
    HEAP32[$46>>2] = 0;
    label = 29;
   }
   break;
  }
  case 4027:  {
   $arglist_current11 = HEAP32[$2>>2]|0;
   $48 = $arglist_current11;
   $49 = ((0) + 4|0);
   $expanded31 = $49;
   $expanded30 = (($expanded31) - 1)|0;
   $50 = (($48) + ($expanded30))|0;
   $51 = ((0) + 4|0);
   $expanded35 = $51;
   $expanded34 = (($expanded35) - 1)|0;
   $expanded33 = $expanded34 ^ -1;
   $52 = $50 & $expanded33;
   $53 = $52;
   $54 = HEAP32[$53>>2]|0;
   $arglist_next12 = ((($53)) + 4|0);
   HEAP32[$2>>2] = $arglist_next12;
   $55 = ($54|0)==(0|0);
   if ($55) {
    label = 30;
   } else {
    $56 = ((($0)) + 4|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = ((($0)) + 16|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (($57|0) / ($59|0))&-1;
    HEAP32[$54>>2] = $60;
    label = 29;
   }
   break;
  }
  case 4028:  {
   $61 = ((($0)) + 4|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (($62) + 2048)|0;
   $64 = ((($0)) + 8|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = Math_imul($63, $65)|0;
   $67 = (((($0)) + 92|0) + ($66<<2)|0);
   $68 = ($65*24)|0;
   $69 = (($67) + ($68<<2)|0);
   $70 = HEAP32[$0>>2]|0;
   $71 = ((($70)) + 8|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = $72 << 1;
   $74 = (($69) + ($73<<2)|0);
   $75 = (($74) + ($73<<2)|0);
   $76 = ((($0)) + 40|0);
   $$idx = ((($70)) + 4|0);
   $$idx$val = HEAP32[$$idx>>2]|0;
   $77 = $$idx$val << 2;
   $78 = $72 << 5;
   $reass$add$i = (($77) + 8288)|0;
   $reass$mul$i = Math_imul($reass$add$i, $65)|0;
   $79 = (($78) + 52)|0;
   $80 = (($79) + ($reass$mul$i))|0;
   _memset(($76|0),0,($80|0))|0;
   $81 = ($72|0)>(0);
   if ($81) {
    $$0119131 = 0;
    while(1) {
     $82 = (($75) + ($$0119131<<2)|0);
     HEAPF32[$82>>2] = Math_fround(-28.0);
     $83 = (($74) + ($$0119131<<2)|0);
     HEAPF32[$83>>2] = Math_fround(-28.0);
     $84 = (($$0119131) + 1)|0;
     $85 = ($84|0)<($73|0);
     if ($85) {
      $$0119131 = $84;
     } else {
      break;
     }
    }
   }
   $86 = ((($0)) + 56|0);
   HEAP32[$86>>2] = 1;
   label = 29;
   break;
  }
  case 4033:  {
   $arglist_current14 = HEAP32[$2>>2]|0;
   $87 = $arglist_current14;
   $88 = ((0) + 4|0);
   $expanded38 = $88;
   $expanded37 = (($expanded38) - 1)|0;
   $89 = (($87) + ($expanded37))|0;
   $90 = ((0) + 4|0);
   $expanded42 = $90;
   $expanded41 = (($expanded42) - 1)|0;
   $expanded40 = $expanded41 ^ -1;
   $91 = $89 & $expanded40;
   $92 = $91;
   $93 = HEAP32[$92>>2]|0;
   $arglist_next15 = ((($92)) + 4|0);
   HEAP32[$2>>2] = $arglist_next15;
   $94 = ($93|0)==(0|0);
   if ($94) {
    label = 30;
   } else {
    $95 = ((($0)) + 60|0);
    $96 = HEAP32[$95>>2]|0;
    HEAP32[$93>>2] = $96;
    label = 29;
   }
   break;
  }
  case 10015:  {
   $arglist_current17 = HEAP32[$2>>2]|0;
   $97 = $arglist_current17;
   $98 = ((0) + 4|0);
   $expanded45 = $98;
   $expanded44 = (($expanded45) - 1)|0;
   $99 = (($97) + ($expanded44))|0;
   $100 = ((0) + 4|0);
   $expanded49 = $100;
   $expanded48 = (($expanded49) - 1)|0;
   $expanded47 = $expanded48 ^ -1;
   $101 = $99 & $expanded47;
   $102 = $101;
   $103 = HEAP32[$102>>2]|0;
   $arglist_next18 = ((($102)) + 4|0);
   HEAP32[$2>>2] = $arglist_next18;
   $104 = ($103|0)==(0|0);
   if ($104) {
    label = 30;
   } else {
    $105 = HEAP32[$0>>2]|0;
    HEAP32[$103>>2] = $105;
    label = 29;
   }
   break;
  }
  case 10016:  {
   $arglist_current20 = HEAP32[$2>>2]|0;
   $106 = $arglist_current20;
   $107 = ((0) + 4|0);
   $expanded52 = $107;
   $expanded51 = (($expanded52) - 1)|0;
   $108 = (($106) + ($expanded51))|0;
   $109 = ((0) + 4|0);
   $expanded56 = $109;
   $expanded55 = (($expanded56) - 1)|0;
   $expanded54 = $expanded55 ^ -1;
   $110 = $108 & $expanded54;
   $111 = $110;
   $112 = HEAP32[$111>>2]|0;
   $arglist_next21 = ((($111)) + 4|0);
   HEAP32[$2>>2] = $arglist_next21;
   $113 = ((($0)) + 28|0);
   HEAP32[$113>>2] = $112;
   label = 29;
   break;
  }
  case 4031:  {
   $arglist_current23 = HEAP32[$2>>2]|0;
   $114 = $arglist_current23;
   $115 = ((0) + 4|0);
   $expanded59 = $115;
   $expanded58 = (($expanded59) - 1)|0;
   $116 = (($114) + ($expanded58))|0;
   $117 = ((0) + 4|0);
   $expanded63 = $117;
   $expanded62 = (($expanded63) - 1)|0;
   $expanded61 = $expanded62 ^ -1;
   $118 = $116 & $expanded61;
   $119 = $118;
   $120 = HEAP32[$119>>2]|0;
   $arglist_next24 = ((($119)) + 4|0);
   HEAP32[$2>>2] = $arglist_next24;
   $121 = ($120|0)==(0|0);
   if ($121) {
    label = 30;
   } else {
    $122 = ((($0)) + 40|0);
    $123 = HEAP32[$122>>2]|0;
    HEAP32[$120>>2] = $123;
    label = 29;
   }
   break;
  }
  case 4046:  {
   $arglist_current26 = HEAP32[$2>>2]|0;
   $124 = $arglist_current26;
   $125 = ((0) + 4|0);
   $expanded66 = $125;
   $expanded65 = (($expanded66) - 1)|0;
   $126 = (($124) + ($expanded65))|0;
   $127 = ((0) + 4|0);
   $expanded70 = $127;
   $expanded69 = (($expanded70) - 1)|0;
   $expanded68 = $expanded69 ^ -1;
   $128 = $126 & $expanded68;
   $129 = $128;
   $130 = HEAP32[$129>>2]|0;
   $arglist_next27 = ((($129)) + 4|0);
   HEAP32[$2>>2] = $arglist_next27;
   $131 = ($130>>>0)>(1);
   if ($131) {
    label = 30;
   } else {
    $132 = ((($0)) + 32|0);
    HEAP32[$132>>2] = $130;
    label = 29;
   }
   break;
  }
  case 4047:  {
   $arglist_current29 = HEAP32[$2>>2]|0;
   $133 = $arglist_current29;
   $134 = ((0) + 4|0);
   $expanded73 = $134;
   $expanded72 = (($expanded73) - 1)|0;
   $135 = (($133) + ($expanded72))|0;
   $136 = ((0) + 4|0);
   $expanded77 = $136;
   $expanded76 = (($expanded77) - 1)|0;
   $expanded75 = $expanded76 ^ -1;
   $137 = $135 & $expanded75;
   $138 = $137;
   $139 = HEAP32[$138>>2]|0;
   $arglist_next30 = ((($138)) + 4|0);
   HEAP32[$2>>2] = $arglist_next30;
   $140 = ($139|0)==(0|0);
   if ($140) {
    label = 30;
   } else {
    $141 = ((($0)) + 32|0);
    $142 = HEAP32[$141>>2]|0;
    HEAP32[$139>>2] = $142;
    label = 29;
   }
   break;
  }
  default: {
   $$0 = -5;
   STACKTOP = sp;return ($$0|0);
  }
  }
 } while(0);
 if ((label|0) == 29) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 30) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _celt_decode_with_ec($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$ = Math_fround(0), $$0 = Math_fround(0), $$0518 = 0, $$0519$lcssa = 0, $$0519643 = 0, $$0521642 = 0, $$0523 = 0, $$0523$idx$val = 0, $$0523$idx567$val = 0, $$0523$idx568$val = 0, $$0523$idx569$val = 0, $$0523$idx570$val = 0, $$0523$idx571$val = 0, $$0523$idx572$val = 0, $$0523$idx573$val = 0, $$0523$idx574$val = 0, $$0523$idx575$val = 0, $$0523$idx576$val = 0, $$0523$idx577$val = 0, $$0523$idx578$val = 0;
 var $$0523$idx579$val = 0, $$0523$idx580$val = 0, $$0523$idx580$val$pre = 0, $$0523$idx581$val$pre = 0, $$0523$idx582 = 0, $$0523$idx582$val = 0, $$0523$idx583 = 0, $$0523$idx583$val = 0, $$0523$idx584 = 0, $$0523$idx584$val = 0, $$0524 = 0, $$0527665 = 0, $$0531 = 0, $$0534 = 0, $$0535668 = 0, $$0537586 = 0, $$0537587 = 0, $$0539 = 0, $$0541 = 0, $$0544658 = 0;
 var $$0546 = 0, $$0552$lcssa = 0, $$0552656 = 0, $$0556 = Math_fround(0), $$060$lcssa$i = 0, $$06073$i = 0, $$06272$i = 0, $$064$i = 0, $$06571$i = 0, $$075$i = 0, $$1 = 0, $$1$i = 0, $$1$peel$i = 0, $$1525 = 0, $$1528659 = 0, $$1540 = 0, $$1542 = 0, $$1547 = 0, $$1553$lcssa = 0, $$1553$lcssa693 = 0;
 var $$1553640 = 0, $$1557 = Math_fround(0), $$161$i = 0, $$16370$i = 0, $$166$i = 0, $$166$peel$i = 0, $$2526 = 0, $$2526$us = 0, $$2529637 = 0, $$2543 = 0, $$3530632 = 0, $$3549$lcssa = 0, $$3549657 = 0, $$4550641 = 0, $$4629 = 0, $$5551 = 0, $$5551694 = 0, $$561 = 0, $$5617$us = 0, $$5617$us$1 = 0;
 var $$562 = 0, $$565 = Math_fround(0), $$566 = Math_fround(0), $$6618$us = 0, $$6618$us$1 = 0, $$6618$us623 = 0, $$6618$us623$1 = 0, $$alloca_mul = 0, $$alloca_mul11 = 0, $$alloca_mul13 = 0, $$alloca_mul15 = 0, $$alloca_mul17 = 0, $$alloca_mul19 = 0, $$alloca_mul7 = 0, $$alloca_mul9 = 0, $$idx$val$i = 0, $$idx$val$peel$i = 0, $$idx67$val$i = 0, $$idx67$val$peel$i = 0, $$idx68$val$i = 0;
 var $$idx69$val$i = 0, $$neg = 0, $$neg600 = 0, $$neg601 = 0, $$neg603 = 0, $$neg604 = 0, $$neg606 = 0, $$pre = 0, $$pre$phi692Z2D = 0, $$pre$phiZ2D = 0, $$pre691 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = Math_fround(0), $115 = Math_fround(0), $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0;
 var $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = Math_fround(0), $297 = Math_fround(0), $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = Math_fround(0), $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = Math_fround(0), $321 = Math_fround(0), $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = Math_fround(0), $337 = Math_fround(0), $338 = 0, $339 = Math_fround(0), $34 = 0, $340 = Math_fround(0), $341 = 0, $342 = Math_fround(0), $343 = 0;
 var $344 = 0, $345 = 0, $346 = 0, $347 = Math_fround(0), $348 = 0, $349 = Math_fround(0), $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0;
 var $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0;
 var $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = Math_fround(0), $81 = 0;
 var $82 = 0, $83 = Math_fround(0), $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0;
 var $exitcond$1 = 0, $exitcond$i = 0, $exitcond679 = 0, $exitcond679$1 = 0, $exitcond682 = 0, $exitcond682$1 = 0, $exitcond686 = 0, $exitcond687 = 0, $exitcond688 = 0, $exitcond79$i = 0, $exitcond79$peel$i = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond560 = 0, $or$cond671 = 0, $or$cond672 = 0, $or$cond7 = 0, $phitmp = 0, $phitmp$i = 0;
 var $spec$select = 0, $spec$select$i = 0, $spec$select564 = 0, $spec$select564$us = 0, $spec$select598 = 0, $spec$select699 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $7 = sp + 32|0;
 $8 = sp + 24|0;
 $9 = sp + 16|0;
 $10 = sp + 8|0;
 $11 = sp + 4|0;
 $12 = sp;
 $13 = ((($0)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 HEAP32[$10>>2] = 0;
 HEAP32[$11>>2] = 0;
 $15 = ((($0)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = HEAP32[$0>>2]|0;
 $18 = ((($17)) + 8|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($17)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($17)) + 32|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($0)) + 20|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ((($0)) + 24|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($0)) + 16|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = Math_imul($29, $4)|0;
 $31 = (($21) + 2048)|0;
 $32 = Math_imul($31, $14)|0;
 $33 = (((($0)) + 92|0) + ($32<<2)|0);
 $34 = ($14*24)|0;
 $35 = (($33) + ($34<<2)|0);
 $36 = $19 << 1;
 $37 = (($35) + ($36<<2)|0);
 $38 = (($37) + ($36<<2)|0);
 $39 = (($38) + ($36<<2)|0);
 $40 = ((($17)) + 36|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ($41|0)<(0);
 if ($42) {
  $$1 = -1;
  STACKTOP = sp;return ($$1|0);
 }
 $43 = ((($17)) + 44|0);
 $44 = HEAP32[$43>>2]|0;
 $$0535668 = 0;
 while(1) {
  $45 = $44 << $$0535668;
  $46 = ($45|0)==($30|0);
  if ($46) {
   break;
  }
  $47 = (($$0535668) + 1)|0;
  $48 = ($$0535668|0)<($41|0);
  if ($48) {
   $$0535668 = $47;
  } else {
   $$1 = -1;
   label = 99;
   break;
  }
 }
 if ((label|0) == 99) {
  STACKTOP = sp;return ($$1|0);
 }
 $49 = 1 << $$0535668;
 $50 = ($2>>>0)>(1275);
 $51 = ($3|0)==(0|0);
 $or$cond3 = $50 | $51;
 if ($or$cond3) {
  $$1 = -1;
  STACKTOP = sp;return ($$1|0);
 }
 $52 = (0 - ($30))|0;
 $$0524 = 0;
 while(1) {
  $53 = Math_imul($$0524, $31)|0;
  $54 = (((($0)) + 92|0) + ($53<<2)|0);
  $55 = (($8) + ($$0524<<2)|0);
  HEAP32[$55>>2] = $54;
  $56 = ((($54)) + 8192|0);
  $57 = (($56) + ($52<<2)|0);
  $58 = (($9) + ($$0524<<2)|0);
  HEAP32[$58>>2] = $57;
  $59 = (($$0524) + 1)|0;
  $60 = ($59|0)<($14|0);
  if ($60) {
   $$0524 = $59;
  } else {
   break;
  }
 }
 $61 = ((($17)) + 12|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = ($27|0)>($62|0);
 $spec$select = $63 ? $62 : $27;
 $64 = ($1|0)==(0|0);
 $65 = ($2|0)<(2);
 $or$cond5 = $64 | $65;
 if ($or$cond5) {
  _celt_decode_lost($0,$30,$$0535668);
  $66 = HEAP32[$28>>2]|0;
  $67 = ((($17)) + 16|0);
  $68 = ((($0)) + 84|0);
  _deemphasis($9,$3,$30,$14,$66,$67,$68,$6);
  $69 = HEAP32[$28>>2]|0;
  $70 = (($30|0) / ($69|0))&-1;
  $$1 = $70;
  STACKTOP = sp;return ($$1|0);
 }
 $71 = ((($0)) + 52|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = ($72|0)!=(0);
 $74 = $73&1;
 $75 = ((($0)) + 56|0);
 HEAP32[$75>>2] = $74;
 $76 = ($5|0)==(0|0);
 if ($76) {
  _ec_dec_init($7,$1,$2);
  $$0523 = $7;
 } else {
  $$0523 = $5;
 }
 $77 = ($16|0)==(1);
 $78 = ($19|0)>(0);
 $or$cond671 = $77 & $78;
 if ($or$cond671) {
  $$0527665 = 0;
  while(1) {
   $79 = (($35) + ($$0527665<<2)|0);
   $80 = Math_fround(HEAPF32[$79>>2]);
   $81 = (($$0527665) + ($19))|0;
   $82 = (($35) + ($81<<2)|0);
   $83 = Math_fround(HEAPF32[$82>>2]);
   $84 = $80 > $83;
   $$ = $84 ? $80 : $83;
   HEAPF32[$79>>2] = $$;
   $85 = (($$0527665) + 1)|0;
   $exitcond688 = ($85|0)==($19|0);
   if ($exitcond688) {
    break;
   } else {
    $$0527665 = $85;
   }
  }
 }
 $86 = $2 << 3;
 $$0523$idx582 = ((($$0523)) + 20|0);
 $$0523$idx582$val = HEAP32[$$0523$idx582>>2]|0;
 $$0523$idx583 = ((($$0523)) + 28|0);
 $$0523$idx583$val = HEAP32[$$0523$idx583>>2]|0;
 $87 = (Math_clz32(($$0523$idx583$val|0))|0);
 $88 = (($$0523$idx582$val) + -32)|0;
 $89 = (($88) + ($87))|0;
 $90 = ($89|0)<($86|0);
 if ($90) {
  $91 = ($89|0)==(1);
  if ($91) {
   $92 = (_ec_dec_bit_logp($$0523,15)|0);
   $93 = ($92|0)==(0);
   if ($93) {
    $$0537586 = 0;$$0546 = 1;$276 = 0;
   } else {
    $$0523$idx580$val$pre = HEAP32[$$0523$idx582>>2]|0;
    $$0523$idx581$val$pre = HEAP32[$$0523$idx583>>2]|0;
    $$pre691 = (Math_clz32(($$0523$idx581$val$pre|0))|0);
    $$0523$idx580$val = $$0523$idx580$val$pre;$$0537587 = $92;$$pre$phi692Z2D = $$pre691;
    label = 19;
   }
  } else {
   $$0537586 = 0;$$0546 = $89;$276 = 0;
  }
 } else {
  $$0523$idx580$val = $$0523$idx582$val;$$0537587 = 1;$$pre$phi692Z2D = $87;
  label = 19;
 }
 if ((label|0) == 19) {
  $$neg = (($86) + 32)|0;
  $$neg600 = (($$neg) - ($$0523$idx580$val))|0;
  $94 = (($$neg600) - ($$pre$phi692Z2D))|0;
  $95 = (($94) + ($$0523$idx580$val))|0;
  HEAP32[$$0523$idx582>>2] = $95;
  $$0537586 = $$0537587;$$0546 = $86;$276 = 1;
 }
 $96 = ($25|0)!=(0);
 $97 = (($$0546) + 16)|0;
 $98 = ($97|0)>($86|0);
 $or$cond = $96 | $98;
 if ($or$cond) {
  $$1540 = 0;$$1547 = $$0546;$$1557 = Math_fround(0.0);$$2543 = 0;
 } else {
  $99 = (_ec_dec_bit_logp($$0523,1)|0);
  $100 = ($99|0)==(0);
  if ($100) {
   $$0539 = 0;$$0556 = Math_fround(0.0);$$1542 = 0;
  } else {
   $101 = (_ec_dec_uint($$0523,6)|0);
   $102 = 16 << $101;
   $103 = (($101) + 4)|0;
   $104 = (_ec_dec_bits($$0523,$103)|0);
   $105 = (($104) + -1)|0;
   $106 = (($105) + ($102))|0;
   $107 = (_ec_dec_bits($$0523,3)|0);
   $$0523$idx578$val = HEAP32[$$0523$idx582>>2]|0;
   $$0523$idx579$val = HEAP32[$$0523$idx583>>2]|0;
   $108 = (Math_clz32(($$0523$idx579$val|0))|0);
   $109 = (($$0523$idx578$val) + -30)|0;
   $110 = (($109) + ($108))|0;
   $111 = ($110|0)>($86|0);
   if ($111) {
    $$0541 = 0;
   } else {
    $112 = (_ec_dec_icdf($$0523,37749,2)|0);
    $$0541 = $112;
   }
   $113 = (($107) + 1)|0;
   $114 = (Math_fround(($113|0)));
   $115 = Math_fround($114 * Math_fround(0.09375));
   $$0539 = $106;$$0556 = $115;$$1542 = $$0541;
  }
  $$0523$idx576$val = HEAP32[$$0523$idx582>>2]|0;
  $$0523$idx577$val = HEAP32[$$0523$idx583>>2]|0;
  $116 = (Math_clz32(($$0523$idx577$val|0))|0);
  $117 = (($$0523$idx576$val) + -32)|0;
  $118 = (($117) + ($116))|0;
  $$1540 = $$0539;$$1547 = $118;$$1557 = $$0556;$$2543 = $$1542;
 }
 $119 = ($$0535668|0)==(0);
 $120 = (($$1547) + 3)|0;
 $121 = ($120|0)>($86|0);
 $or$cond560 = $119 | $121;
 if ($or$cond560) {
  $$0534 = 0;$$pre$phiZ2D = $120;
 } else {
  $122 = (_ec_dec_bit_logp($$0523,3)|0);
  $$0523$idx574$val = HEAP32[$$0523$idx582>>2]|0;
  $$0523$idx575$val = HEAP32[$$0523$idx583>>2]|0;
  $123 = (Math_clz32(($$0523$idx575$val|0))|0);
  $124 = (($$0523$idx574$val) + -32)|0;
  $125 = (($124) + ($123))|0;
  $$pre = (($125) + 3)|0;
  $$0534 = $122;$$pre$phiZ2D = $$pre;
 }
 $126 = ($$0534|0)!=(0);
 $$561 = $126 ? $49 : 0;
 $127 = ($$pre$phiZ2D|0)>($86|0);
 if ($127) {
  $129 = 0;
 } else {
  $128 = (_ec_dec_bit_logp($$0523,3)|0);
  $129 = $128;
 }
 _unquant_coarse_energy($17,$25,$27,$35,$129,$$0523,$16,$$0535668);
 $130 = (_llvm_stacksave()|0);
 $$alloca_mul = $19<<2;
 $131 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $132 = ((($$0523)) + 4|0);
 $133 = HEAP32[$132>>2]|0;
 $134 = $133 << 3;
 $$idx68$val$i = HEAP32[$$0523$idx582>>2]|0;
 $$idx69$val$i = HEAP32[$$0523$idx583>>2]|0;
 $135 = (Math_clz32(($$idx69$val$i|0))|0);
 $136 = (($$idx68$val$i) + -32)|0;
 $137 = (($136) + ($135))|0;
 $138 = $126 ? 2 : 4;
 $139 = ($$0535668|0)!=(0);
 $140 = $138 | 1;
 $141 = (($137) + ($140))|0;
 $142 = ($141>>>0)<=($134>>>0);
 $spec$select$i = $139 & $142;
 $143 = $spec$select$i&1;
 $144 = (($134) - ($143))|0;
 $145 = ($25|0)<($27|0);
 if ($145) {
  $146 = $126 ? 4 : 5;
  $147 = (($137) + ($138))|0;
  $148 = ($147>>>0)>($144>>>0);
  if ($148) {
   $$1$peel$i = $137;$$166$peel$i = 0;
  } else {
   $149 = (_ec_dec_bit_logp($$0523,$138)|0);
   $$idx$val$peel$i = HEAP32[$$0523$idx582>>2]|0;
   $$idx67$val$peel$i = HEAP32[$$0523$idx583>>2]|0;
   $150 = (Math_clz32(($$idx67$val$peel$i|0))|0);
   $151 = (($$idx$val$peel$i) + -32)|0;
   $152 = (($151) + ($150))|0;
   $$1$peel$i = $152;$$166$peel$i = $149;
  }
  $153 = (($131) + ($25<<2)|0);
  HEAP32[$153>>2] = $$166$peel$i;
  $154 = (($25) + 1)|0;
  $exitcond79$peel$i = ($154|0)==($27|0);
  if ($exitcond79$peel$i) {
   $$060$lcssa$i = $$166$peel$i;
  } else {
   $$06073$i = $$166$peel$i;$$06272$i = $154;$$06571$i = $$166$peel$i;$$075$i = $$1$peel$i;
   while(1) {
    $155 = (($$075$i) + ($146))|0;
    $156 = ($155>>>0)>($144>>>0);
    if ($156) {
     $$1$i = $$075$i;$$161$i = $$06073$i;$$166$i = $$06571$i;
    } else {
     $157 = (_ec_dec_bit_logp($$0523,$146)|0);
     $158 = $157 ^ $$06571$i;
     $$idx$val$i = HEAP32[$$0523$idx582>>2]|0;
     $$idx67$val$i = HEAP32[$$0523$idx583>>2]|0;
     $159 = (Math_clz32(($$idx67$val$i|0))|0);
     $160 = (($$idx$val$i) + -32)|0;
     $161 = (($160) + ($159))|0;
     $162 = $158 | $$06073$i;
     $$1$i = $161;$$161$i = $162;$$166$i = $158;
    }
    $163 = (($131) + ($$06272$i<<2)|0);
    HEAP32[$163>>2] = $$166$i;
    $164 = (($$06272$i) + 1)|0;
    $exitcond79$i = ($164|0)==($27|0);
    if ($exitcond79$i) {
     $$060$lcssa$i = $$161$i;
     break;
    } else {
     $$06073$i = $$161$i;$$06272$i = $164;$$06571$i = $$166$i;$$075$i = $$1$i;
    }
   }
  }
 } else {
  $$060$lcssa$i = 0;
 }
 if ($spec$select$i) {
  $165 = $$0534 << 2;
  $166 = (($$060$lcssa$i) + ($165))|0;
  $167 = ((1024 + ($$0535668<<3)|0) + ($166)|0);
  $168 = HEAP8[$167>>0]|0;
  $169 = $165 | 2;
  $170 = (($$060$lcssa$i) + ($169))|0;
  $171 = ((1024 + ($$0535668<<3)|0) + ($170)|0);
  $172 = HEAP8[$171>>0]|0;
  $173 = ($168<<24>>24)==($172<<24>>24);
  if ($173) {
   $$064$i = 0;
  } else {
   $174 = (_ec_dec_bit_logp($$0523,1)|0);
   $phitmp$i = $174 << 1;
   $$064$i = $phitmp$i;
  }
 } else {
  $$064$i = 0;
 }
 if ($145) {
  $175 = $$0534 << 2;
  $176 = (($$064$i) + ($175))|0;
  $$16370$i = $25;
  while(1) {
   $177 = (($131) + ($$16370$i<<2)|0);
   $178 = HEAP32[$177>>2]|0;
   $179 = (($176) + ($178))|0;
   $180 = ((1024 + ($$0535668<<3)|0) + ($179)|0);
   $181 = HEAP8[$180>>0]|0;
   $182 = $181 << 24 >> 24;
   HEAP32[$177>>2] = $182;
   $183 = (($$16370$i) + 1)|0;
   $exitcond$i = ($183|0)==($27|0);
   if ($exitcond$i) {
    break;
   } else {
    $$16370$i = $183;
   }
  }
 }
 $$0523$idx572$val = HEAP32[$$0523$idx582>>2]|0;
 $$0523$idx573$val = HEAP32[$$0523$idx583>>2]|0;
 $184 = (Math_clz32(($$0523$idx573$val|0))|0);
 $185 = (($$0523$idx572$val) + -28)|0;
 $186 = (($185) + ($184))|0;
 $187 = ($186|0)>($86|0);
 if ($187) {
  $$0531 = 2;
 } else {
  $188 = (_ec_dec_icdf($$0523,37752,5)|0);
  $$0531 = $188;
 }
 $$alloca_mul7 = $19<<2;
 $189 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul7)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul7)|0)+15)&-16)|0);;
 _init_caps($17,$189,$$0535668,$16);
 $$alloca_mul9 = $19<<2;
 $190 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul9)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul9)|0)+15)&-16)|0);;
 $191 = $2 << 6;
 $192 = (_ec_tell_frac($$0523)|0);
 if ($145) {
  $$0544658 = 6;$$0552656 = $191;$$1528659 = $25;$$3549657 = $192;
  while(1) {
   $193 = (($$1528659) + 1)|0;
   $194 = (($23) + ($193<<1)|0);
   $195 = HEAP16[$194>>1]|0;
   $196 = $195 << 16 >> 16;
   $197 = (($23) + ($$1528659<<1)|0);
   $198 = HEAP16[$197>>1]|0;
   $199 = $198 << 16 >> 16;
   $200 = (($196) - ($199))|0;
   $201 = Math_imul($200, $16)|0;
   $202 = $201 << $$0535668;
   $203 = $202 << 3;
   $204 = ($202|0)>(48);
   $205 = $204 ? $202 : 48;
   $206 = ($203|0)<($205|0);
   $$562 = $206 ? $203 : $205;
   $207 = (($189) + ($$1528659<<2)|0);
   $208 = $$0544658 << 3;
   $209 = (($208) + ($$3549657))|0;
   $210 = ($209|0)<($$0552656|0);
   if ($210) {
    $$0519643 = 0;$$0521642 = $$0544658;$$1553640 = $$0552656;$$4550641 = $$3549657;
    while(1) {
     $212 = HEAP32[$207>>2]|0;
     $213 = ($$0519643|0)<($212|0);
     if (!($213)) {
      $$0519$lcssa = $$0519643;$$1553$lcssa = $$1553640;$$5551 = $$4550641;
      break;
     }
     $214 = (_ec_dec_bit_logp($$0523,$$0521642)|0);
     $215 = (_ec_tell_frac($$0523)|0);
     $216 = ($214|0)==(0);
     if ($216) {
      $$0519$lcssa = $$0519643;$$1553$lcssa = $$1553640;$$5551 = $215;
      break;
     }
     $217 = (($$1553640) - ($$562))|0;
     $218 = (($$0519643) + ($$562))|0;
     $219 = (($215) + 8)|0;
     $220 = ($219|0)<($217|0);
     if ($220) {
      $$0519643 = $218;$$0521642 = 1;$$1553640 = $217;$$4550641 = $215;
     } else {
      $$0519$lcssa = $218;$$1553$lcssa = $217;$$5551 = $215;
      break;
     }
    }
    $221 = (($190) + ($$1528659<<2)|0);
    HEAP32[$221>>2] = $$0519$lcssa;
    $222 = ($$0519$lcssa|0)>(0);
    $223 = (($$0544658) + -1)|0;
    $224 = ($223|0)>(2);
    $225 = $224 ? $223 : 2;
    $spec$select699 = $222 ? $225 : $$0544658;
    $$1553$lcssa693 = $$1553$lcssa;$$5551694 = $$5551;$394 = $spec$select699;
   } else {
    $211 = (($190) + ($$1528659<<2)|0);
    HEAP32[$211>>2] = 0;
    $$1553$lcssa693 = $$0552656;$$5551694 = $$3549657;$394 = $$0544658;
   }
   $exitcond687 = ($193|0)==($27|0);
   if ($exitcond687) {
    $$0552$lcssa = $$1553$lcssa693;$$3549$lcssa = $$5551694;
    break;
   } else {
    $$0544658 = $394;$$0552656 = $$1553$lcssa693;$$1528659 = $193;$$3549657 = $$5551694;
   }
  }
 } else {
  $$0552$lcssa = $191;$$3549$lcssa = $192;
 }
 $$alloca_mul11 = $19<<2;
 $226 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul11)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul11)|0)+15)&-16)|0);;
 $227 = (($$3549$lcssa) + 48)|0;
 $228 = ($227|0)>($$0552$lcssa|0);
 if ($228) {
  $241 = 5;
 } else {
  $229 = (_ec_dec_icdf($$0523,37756,7)|0);
  $241 = $229;
 }
 $230 = (_ec_tell_frac($$0523)|0);
 $231 = (($191) - ($230))|0;
 $232 = (($231) + -1)|0;
 $233 = ($$0535668>>>0)>(1);
 $or$cond7 = $233 & $126;
 $234 = $$0535668 << 3;
 $235 = (($234) + 16)|0;
 $236 = ($232|0)>=($235|0);
 $237 = $or$cond7 & $236;
 $spec$select598 = $237 ? 8 : 0;
 $238 = (($232) - ($spec$select598))|0;
 $$alloca_mul13 = $19<<2;
 $239 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul13)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul13)|0)+15)&-16)|0);;
 $$alloca_mul15 = $19<<2;
 $240 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul15)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul15)|0)+15)&-16)|0);;
 $242 = (_compute_allocation($17,$25,$27,$190,$189,$241,$10,$11,$238,$12,$239,$226,$240,$16,$$0535668,$$0523,0,0,0)|0);
 _unquant_fine_energy($17,$25,$27,$35,$226,$$0523,$16);
 $243 = (($21|0) / 2)&-1;
 $244 = (($243) + 2048)|0;
 $245 = (($244) - ($30))|0;
 $246 = $245 << 2;
 $$1525 = 0;
 while(1) {
  $247 = (($8) + ($$1525<<2)|0);
  $248 = HEAP32[$247>>2]|0;
  $249 = (($248) + ($30<<2)|0);
  _memmove(($248|0),($249|0),($246|0))|0;
  $250 = (($$1525) + 1)|0;
  $251 = ($250|0)<($14|0);
  if ($251) {
   $$1525 = $250;
  } else {
   break;
  }
 }
 $252 = Math_imul($19, $16)|0;
 $$alloca_mul17 = $252;
 $253 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul17)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul17)|0)+15)&-16)|0);;
 $254 = Math_imul($30, $16)|0;
 $$alloca_mul19 = $254<<2;
 $255 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul19)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul19)|0)+15)&-16)|0);;
 $256 = ($16|0)==(2);
 $257 = (($255) + ($30<<2)|0);
 $258 = $256 ? $257 : 0;
 $259 = HEAP32[$11>>2]|0;
 $260 = HEAP32[$10>>2]|0;
 $261 = (($191) - ($spec$select598))|0;
 $262 = HEAP32[$12>>2]|0;
 $263 = ((($0)) + 40|0);
 $264 = ((($0)) + 36|0);
 $265 = HEAP32[$264>>2]|0;
 $266 = ((($0)) + 32|0);
 $267 = HEAP32[$266>>2]|0;
 _quant_all_bands(0,$17,$25,$27,$255,$258,$253,0,$239,$$561,$$0531,$259,$260,$131,$261,$262,$$0523,$$0535668,$242,$263,0,$265,$267);
 if ($237) {
  $268 = (_ec_dec_bits($$0523,1)|0);
  $phitmp = ($268|0)==(0);
  $$0523$idx570$val = HEAP32[$$0523$idx582>>2]|0;
  $$0523$idx571$val = HEAP32[$$0523$idx583>>2]|0;
  $269 = (Math_clz32(($$0523$idx571$val|0))|0);
  $$neg604 = (($86) + 32)|0;
  $$neg606 = (($$neg604) - ($$0523$idx570$val))|0;
  $270 = (($$neg606) - ($269))|0;
  _unquant_energy_finalise($17,$25,$27,$35,$226,$240,$270,$$0523,$16);
  if (!($phitmp)) {
   $271 = HEAP32[$263>>2]|0;
   $272 = HEAP32[$264>>2]|0;
   _anti_collapse($17,$255,$253,$$0535668,$16,$30,$25,$27,$35,$37,$38,$239,$271,$272);
  }
 } else {
  $$0523$idx$val = HEAP32[$$0523$idx582>>2]|0;
  $$0523$idx567$val = HEAP32[$$0523$idx583>>2]|0;
  $273 = (Math_clz32(($$0523$idx567$val|0))|0);
  $$neg601 = (($86) + 32)|0;
  $$neg603 = (($$neg601) - ($$0523$idx$val))|0;
  $274 = (($$neg603) - ($273))|0;
  _unquant_energy_finalise($17,$25,$27,$35,$226,$240,$274,$$0523,$16);
 }
 $275 = ($252|0)>(0);
 $or$cond672 = $276 & $275;
 if ($or$cond672) {
  $$2529637 = 0;
  while(1) {
   $277 = (($35) + ($$2529637<<2)|0);
   HEAPF32[$277>>2] = Math_fround(-28.0);
   $278 = (($$2529637) + 1)|0;
   $exitcond686 = ($278|0)==($252|0);
   if ($exitcond686) {
    break;
   } else {
    $$2529637 = $278;
   }
  }
 }
 $279 = HEAP32[$28>>2]|0;
 $280 = HEAP32[$264>>2]|0;
 _celt_synthesis($17,$255,$9,$35,$25,$spec$select,$16,$14,$$0534,$$0535668,$279,$$0537586,$280);
 $281 = ((($0)) + 60|0);
 $282 = ((($0)) + 64|0);
 $283 = ((($0)) + 72|0);
 $284 = ((($0)) + 68|0);
 $285 = ((($0)) + 80|0);
 $286 = ((($0)) + 76|0);
 $287 = ((($17)) + 60|0);
 if ($139) {
  $$2526$us = 0;
  while(1) {
   $288 = HEAP32[$281>>2]|0;
   $289 = ($288|0)>(15);
   $spec$select564$us = $289 ? $288 : 15;
   HEAP32[$281>>2] = $spec$select564$us;
   $290 = HEAP32[$282>>2]|0;
   $291 = ($290|0)>(15);
   $292 = $291 ? $290 : 15;
   HEAP32[$282>>2] = $292;
   $293 = (($9) + ($$2526$us<<2)|0);
   $294 = HEAP32[$293>>2]|0;
   $295 = HEAP32[$43>>2]|0;
   $296 = Math_fround(HEAPF32[$283>>2]);
   $297 = Math_fround(HEAPF32[$284>>2]);
   $298 = HEAP32[$285>>2]|0;
   $299 = HEAP32[$286>>2]|0;
   $300 = HEAP32[$287>>2]|0;
   $301 = HEAP32[$264>>2]|0;
   _comb_filter($294,$294,$292,$spec$select564$us,$295,$296,$297,$298,$299,$300,$21,$301);
   $302 = HEAP32[$43>>2]|0;
   $303 = (($294) + ($302<<2)|0);
   $304 = HEAP32[$281>>2]|0;
   $305 = (($30) - ($302))|0;
   $306 = Math_fround(HEAPF32[$284>>2]);
   $307 = HEAP32[$286>>2]|0;
   $308 = HEAP32[$287>>2]|0;
   $309 = HEAP32[$264>>2]|0;
   _comb_filter($303,$303,$304,$$1540,$305,$306,$$1557,$307,$$2543,$308,$21,$309);
   $310 = (($$2526$us) + 1)|0;
   $311 = ($310|0)<($14|0);
   if ($311) {
    $$2526$us = $310;
   } else {
    break;
   }
  }
 } else {
  $$2526 = 0;
  while(1) {
   $312 = HEAP32[$281>>2]|0;
   $313 = ($312|0)>(15);
   $spec$select564 = $313 ? $312 : 15;
   HEAP32[$281>>2] = $spec$select564;
   $314 = HEAP32[$282>>2]|0;
   $315 = ($314|0)>(15);
   $316 = $315 ? $314 : 15;
   HEAP32[$282>>2] = $316;
   $317 = (($9) + ($$2526<<2)|0);
   $318 = HEAP32[$317>>2]|0;
   $319 = HEAP32[$43>>2]|0;
   $320 = Math_fround(HEAPF32[$283>>2]);
   $321 = Math_fround(HEAPF32[$284>>2]);
   $322 = HEAP32[$285>>2]|0;
   $323 = HEAP32[$286>>2]|0;
   $324 = HEAP32[$287>>2]|0;
   $325 = HEAP32[$264>>2]|0;
   _comb_filter($318,$318,$316,$spec$select564,$319,$320,$321,$322,$323,$324,$21,$325);
   $326 = (($$2526) + 1)|0;
   $327 = ($326|0)<($14|0);
   if ($327) {
    $$2526 = $326;
   } else {
    break;
   }
  }
 }
 $328 = HEAP32[$281>>2]|0;
 HEAP32[$282>>2] = $328;
 $329 = HEAP32[$284>>2]|0;
 HEAP32[$283>>2] = $329;
 $330 = HEAP32[$286>>2]|0;
 HEAP32[$285>>2] = $330;
 HEAP32[$281>>2] = $$1540;
 HEAPF32[$284>>2] = $$1557;
 HEAP32[$286>>2] = $$2543;
 if ($139) {
  HEAP32[$282>>2] = $$1540;
  HEAPF32[$283>>2] = $$1557;
  HEAP32[$285>>2] = $$2543;
 }
 if ($77) {
  $331 = $19 << 2;
  $332 = (($35) + ($19<<2)|0);
  _memcpy(($332|0),($35|0),($331|0))|0;
 }
 do {
  if ($126) {
   if (!($78)) {
    break;
   }
   $$4629 = 0;
   while(1) {
    $346 = (($37) + ($$4629<<2)|0);
    $347 = Math_fround(HEAPF32[$346>>2]);
    $348 = (($35) + ($$4629<<2)|0);
    $349 = Math_fround(HEAPF32[$348>>2]);
    $350 = $347 < $349;
    $$566 = $350 ? $347 : $349;
    HEAPF32[$346>>2] = $$566;
    $351 = (($$4629) + 1)|0;
    $352 = ($351|0)<($36|0);
    if ($352) {
     $$4629 = $351;
    } else {
     break;
    }
   }
  } else {
   $333 = $19 << 3;
   _memcpy(($38|0),($37|0),($333|0))|0;
   _memcpy(($37|0),($35|0),($333|0))|0;
   $334 = HEAP32[$71>>2]|0;
   $335 = ($334|0)<(10);
   $336 = (Math_fround(($49|0)));
   $337 = Math_fround($336 * Math_fround(0.00100000005));
   $$0 = $335 ? $337 : Math_fround(1.0);
   if (!($78)) {
    break;
   }
   $$3530632 = 0;
   while(1) {
    $338 = (($39) + ($$3530632<<2)|0);
    $339 = Math_fround(HEAPF32[$338>>2]);
    $340 = Math_fround($$0 + $339);
    $341 = (($35) + ($$3530632<<2)|0);
    $342 = Math_fround(HEAPF32[$341>>2]);
    $343 = $340 < $342;
    $$565 = $343 ? $340 : $342;
    HEAPF32[$338>>2] = $$565;
    $344 = (($$3530632) + 1)|0;
    $345 = ($344|0)<($36|0);
    if ($345) {
     $$3530632 = $344;
    } else {
     break;
    }
   }
  }
 } while(0);
 $353 = ($25|0)>(0);
 $354 = ($27|0)<($19|0);
 do {
  if ($353) {
   $$5617$us = 0;
   while(1) {
    $359 = (($35) + ($$5617$us<<2)|0);
    HEAPF32[$359>>2] = Math_fround(0.0);
    $360 = (($38) + ($$5617$us<<2)|0);
    HEAPF32[$360>>2] = Math_fround(-28.0);
    $361 = (($37) + ($$5617$us<<2)|0);
    HEAPF32[$361>>2] = Math_fround(-28.0);
    $362 = (($$5617$us) + 1)|0;
    $exitcond = ($362|0)==($25|0);
    if ($exitcond) {
     break;
    } else {
     $$5617$us = $362;
    }
   }
   if ($354) {
    $$6618$us = $27;
    while(1) {
     $355 = (($35) + ($$6618$us<<2)|0);
     HEAPF32[$355>>2] = Math_fround(0.0);
     $356 = (($38) + ($$6618$us<<2)|0);
     HEAPF32[$356>>2] = Math_fround(-28.0);
     $357 = (($37) + ($$6618$us<<2)|0);
     HEAPF32[$357>>2] = Math_fround(-28.0);
     $358 = (($$6618$us) + 1)|0;
     $exitcond679 = ($358|0)==($19|0);
     if ($exitcond679) {
      break;
     } else {
      $$6618$us = $358;
     }
    }
   }
   $$5617$us$1 = 0;
   while(1) {
    $379 = (($$5617$us$1) + ($19))|0;
    $380 = (($35) + ($379<<2)|0);
    HEAPF32[$380>>2] = Math_fround(0.0);
    $381 = (($38) + ($379<<2)|0);
    HEAPF32[$381>>2] = Math_fround(-28.0);
    $382 = (($37) + ($379<<2)|0);
    HEAPF32[$382>>2] = Math_fround(-28.0);
    $383 = (($$5617$us$1) + 1)|0;
    $exitcond$1 = ($383|0)==($25|0);
    if ($exitcond$1) {
     break;
    } else {
     $$5617$us$1 = $383;
    }
   }
   if (!($354)) {
    break;
   }
   $$6618$us$1 = $27;
   while(1) {
    $384 = (($$6618$us$1) + ($19))|0;
    $385 = (($35) + ($384<<2)|0);
    HEAPF32[$385>>2] = Math_fround(0.0);
    $386 = (($38) + ($384<<2)|0);
    HEAPF32[$386>>2] = Math_fround(-28.0);
    $387 = (($37) + ($384<<2)|0);
    HEAPF32[$387>>2] = Math_fround(-28.0);
    $388 = (($$6618$us$1) + 1)|0;
    $exitcond679$1 = ($388|0)==($19|0);
    if ($exitcond679$1) {
     break;
    } else {
     $$6618$us$1 = $388;
    }
   }
  } else {
   if (!($354)) {
    break;
   }
   $$6618$us623 = $27;
   while(1) {
    $363 = (($35) + ($$6618$us623<<2)|0);
    HEAPF32[$363>>2] = Math_fround(0.0);
    $364 = (($38) + ($$6618$us623<<2)|0);
    HEAPF32[$364>>2] = Math_fround(-28.0);
    $365 = (($37) + ($$6618$us623<<2)|0);
    HEAPF32[$365>>2] = Math_fround(-28.0);
    $366 = (($$6618$us623) + 1)|0;
    $exitcond682 = ($366|0)==($19|0);
    if ($exitcond682) {
     break;
    } else {
     $$6618$us623 = $366;
    }
   }
   $$6618$us623$1 = $27;
   while(1) {
    $389 = (($$6618$us623$1) + ($19))|0;
    $390 = (($35) + ($389<<2)|0);
    HEAPF32[$390>>2] = Math_fround(0.0);
    $391 = (($38) + ($389<<2)|0);
    HEAPF32[$391>>2] = Math_fround(-28.0);
    $392 = (($37) + ($389<<2)|0);
    HEAPF32[$392>>2] = Math_fround(-28.0);
    $393 = (($$6618$us623$1) + 1)|0;
    $exitcond682$1 = ($393|0)==($19|0);
    if ($exitcond682$1) {
     break;
    } else {
     $$6618$us623$1 = $393;
    }
   }
  }
 } while(0);
 $367 = HEAP32[$$0523$idx583>>2]|0;
 HEAP32[$263>>2] = $367;
 $368 = HEAP32[$28>>2]|0;
 $369 = ((($17)) + 16|0);
 $370 = ((($0)) + 84|0);
 _deemphasis($9,$3,$30,$14,$368,$369,$370,$6);
 HEAP32[$71>>2] = 0;
 $$0523$idx568$val = HEAP32[$$0523$idx582>>2]|0;
 $$0523$idx569$val = HEAP32[$$0523$idx583>>2]|0;
 $371 = (Math_clz32(($$0523$idx569$val|0))|0);
 $372 = (($$0523$idx568$val) + -32)|0;
 $373 = (($372) + ($371))|0;
 $374 = ($373|0)>($86|0);
 if ($374) {
  $$0518 = -3;
 } else {
  $$0523$idx584 = ((($$0523)) + 44|0);
  $$0523$idx584$val = HEAP32[$$0523$idx584>>2]|0;
  $375 = ($$0523$idx584$val|0)==(0);
  if (!($375)) {
   $376 = ((($0)) + 44|0);
   HEAP32[$376>>2] = 1;
  }
  $377 = HEAP32[$28>>2]|0;
  $378 = (($30|0) / ($377|0))&-1;
  $$0518 = $378;
 }
 _llvm_stackrestore(($130|0));
 $$1 = $$0518;
 STACKTOP = sp;return ($$1|0);
}
function _celt_decode_lost($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0 = 0, $$0396432$us = 0, $$0401$lcssa = 0, $$0401426$us = 0, $$0404$lcssa = Math_fround(0), $$0404456 = Math_fround(0), $$0405418$us = 0, $$0406 = Math_fround(0), $$0407 = 0, $$0408$lcssa = Math_fround(0), $$0408440 = Math_fround(0), $$0409$lcssa = Math_fround(0), $$0409439 = Math_fround(0), $$0410449 = 0, $$0412448 = Math_fround(0), $$0414$lcssa = Math_fround(0), $$0414447 = Math_fround(0), $$1$us = 0, $$10465 = 0;
 var $$11469 = 0, $$12$neg = 0, $$12$neg473 = 0, $$12472 = 0, $$1397421$us = 0, $$1402420$us = 0, $$1411 = 0, $$1413 = Math_fround(0), $$2398436 = 0, $$2403$lcssa$us = 0, $$2403419$us = 0, $$2427$us = 0, $$3 = 0, $$4 = 0, $$416$us = Math_fround(0), $$5441 = 0, $$6450 = 0, $$8457 = 0, $$alloca_mul = 0, $$alloca_mul8 = 0;
 var $$pre = 0, $$pre$phi502Z2D = 0, $$pre$phiZ2D = 0, $$pre499 = 0, $$pre501 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = Math_fround(0), $3 = 0, $30 = 0, $300 = Math_fround(0), $301 = Math_fround(0), $302 = Math_fround(0), $303 = Math_fround(0), $304 = Math_fround(0), $305 = Math_fround(0), $306 = Math_fround(0), $307 = Math_fround(0), $308 = Math_fround(0), $309 = Math_fround(0), $31 = 0, $310 = Math_fround(0), $311 = Math_fround(0);
 var $312 = Math_fround(0), $313 = Math_fround(0), $314 = Math_fround(0), $315 = Math_fround(0), $316 = Math_fround(0), $317 = Math_fround(0), $318 = Math_fround(0), $319 = Math_fround(0), $32 = 0, $320 = Math_fround(0), $321 = Math_fround(0), $322 = Math_fround(0), $323 = Math_fround(0), $324 = Math_fround(0), $325 = Math_fround(0), $326 = Math_fround(0), $327 = Math_fround(0), $328 = Math_fround(0), $329 = Math_fround(0), $33 = 0;
 var $330 = Math_fround(0), $331 = Math_fround(0), $332 = Math_fround(0), $333 = Math_fround(0), $334 = Math_fround(0), $335 = Math_fround(0), $336 = Math_fround(0), $337 = Math_fround(0), $338 = Math_fround(0), $339 = Math_fround(0), $34 = 0, $340 = Math_fround(0), $341 = Math_fround(0), $342 = Math_fround(0), $343 = Math_fround(0), $344 = Math_fround(0), $345 = Math_fround(0), $346 = Math_fround(0), $347 = Math_fround(0), $348 = Math_fround(0);
 var $349 = Math_fround(0), $35 = 0, $350 = Math_fround(0), $351 = Math_fround(0), $352 = Math_fround(0), $353 = Math_fround(0), $354 = Math_fround(0), $355 = Math_fround(0), $356 = Math_fround(0), $357 = Math_fround(0), $358 = Math_fround(0), $359 = Math_fround(0), $36 = 0, $360 = Math_fround(0), $361 = Math_fround(0), $362 = Math_fround(0), $363 = Math_fround(0), $364 = Math_fround(0), $365 = Math_fround(0), $366 = Math_fround(0);
 var $367 = Math_fround(0), $368 = Math_fround(0), $369 = Math_fround(0), $37 = 0, $370 = Math_fround(0), $371 = Math_fround(0), $372 = Math_fround(0), $373 = Math_fround(0), $374 = Math_fround(0), $375 = Math_fround(0), $376 = Math_fround(0), $377 = Math_fround(0), $378 = Math_fround(0), $379 = Math_fround(0), $38 = 0, $380 = Math_fround(0), $381 = Math_fround(0), $382 = Math_fround(0), $383 = Math_fround(0), $384 = Math_fround(0);
 var $385 = Math_fround(0), $386 = Math_fround(0), $387 = Math_fround(0), $388 = Math_fround(0), $389 = Math_fround(0), $39 = 0, $390 = Math_fround(0), $391 = Math_fround(0), $392 = Math_fround(0), $393 = Math_fround(0), $394 = Math_fround(0), $395 = Math_fround(0), $396 = Math_fround(0), $397 = Math_fround(0), $398 = Math_fround(0), $399 = Math_fround(0), $4 = 0, $40 = 0, $400 = Math_fround(0), $401 = Math_fround(0);
 var $402 = Math_fround(0), $403 = Math_fround(0), $404 = Math_fround(0), $405 = Math_fround(0), $406 = Math_fround(0), $407 = Math_fround(0), $408 = Math_fround(0), $409 = Math_fround(0), $41 = 0, $410 = Math_fround(0), $411 = Math_fround(0), $412 = Math_fround(0), $413 = Math_fround(0), $414 = Math_fround(0), $415 = Math_fround(0), $416 = Math_fround(0), $417 = Math_fround(0), $418 = Math_fround(0), $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = Math_fround(0), $473 = Math_fround(0), $474 = Math_fround(0);
 var $475 = 0, $476 = 0, $477 = Math_fround(0), $478 = Math_fround(0), $479 = Math_fround(0), $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = Math_fround(0), $484 = Math_fround(0), $485 = Math_fround(0), $486 = 0, $487 = Math_fround(0), $488 = 0, $489 = Math_fround(0), $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = Math_fround(0), $494 = Math_fround(0), $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = Math_fround(0), $501 = Math_fround(0), $502 = Math_fround(0), $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = Math_fround(0), $559 = Math_fround(0), $56 = Math_fround(0), $560 = Math_fround(0), $561 = 0, $562 = Math_fround(0), $563 = 0, $564 = 0;
 var $565 = Math_fround(0), $566 = Math_fround(0), $567 = Math_fround(0), $568 = Math_fround(0), $569 = Math_fround(0), $57 = 0, $570 = 0, $571 = Math_fround(0), $572 = Math_fround(0), $573 = Math_fround(0), $574 = 0, $575 = 0, $576 = Math_fround(0), $577 = Math_fround(0), $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = Math_fround(0), $582 = Math_fround(0);
 var $583 = 0, $584 = 0, $585 = 0, $586 = Math_fround(0), $587 = Math_fround(0), $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = Math_fround(0), $592 = 0, $593 = 0, $594 = Math_fround(0), $595 = Math_fround(0), $596 = 0, $597 = Math_fround(0), $598 = 0, $599 = Math_fround(0), $6 = 0, $60 = 0;
 var $600 = Math_fround(0), $601 = Math_fround(0), $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $61 = Math_fround(0), $62 = 0, $63 = Math_fround(0), $64 = Math_fround(0), $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = Math_fround(0), $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond484 = 0, $exitcond486 = 0, $exitcond487 = 0, $exitcond492 = 0, $exitcond494 = 0, $exitcond497 = 0, $exitcond498 = 0, $or$cond = 0, $scevgep = 0;
 var $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8528|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(8528|0);
 $3 = (0 - ($1))|0;
 $4 = sp + 8512|0;
 $5 = sp + 4400|0;
 $6 = sp + 8504|0;
 $7 = sp + 8496|0;
 $8 = sp + 208|0;
 $9 = sp + 96|0;
 $10 = sp;
 $11 = ((($0)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = HEAP32[$0>>2]|0;
 $14 = ((($13)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($13)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($13)) + 32|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (($17) + 2048)|0;
 $$0 = 0;
 while(1) {
  $21 = Math_imul($$0, $20)|0;
  $22 = (((($0)) + 92|0) + ($21<<2)|0);
  $23 = (($6) + ($$0<<2)|0);
  HEAP32[$23>>2] = $22;
  $24 = ((($22)) + 8192|0);
  $25 = (($24) + ($3<<2)|0);
  $26 = (($7) + ($$0<<2)|0);
  HEAP32[$26>>2] = $25;
  $27 = (($$0) + 1)|0;
  $28 = ($27|0)<($12|0);
  if ($28) {
   $$0 = $27;
  } else {
   break;
  }
 }
 $29 = Math_imul($20, $12)|0;
 $30 = (((($0)) + 92|0) + ($29<<2)|0);
 $31 = ($12*24)|0;
 $32 = (($30) + ($31<<2)|0);
 $33 = $15 << 1;
 $34 = (($32) + ($33<<2)|0);
 $35 = (($34) + ($33<<2)|0);
 $36 = (($35) + ($33<<2)|0);
 $37 = ((($0)) + 52|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ((($0)) + 20|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($38|0)>(4);
 $42 = ($40|0)!=(0);
 $or$cond = $41 | $42;
 if (!($or$cond)) {
  $43 = ((($0)) + 56|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($44|0)==(0);
  if ($45) {
   $110 = ($38|0)==(0);
   if ($110) {
    $111 = ((($0)) + 36|0);
    $112 = HEAP32[$111>>2]|0;
    _pitch_downsample($6,$5,2048,$12,$112);
    $113 = ((($5)) + 1440|0);
    _pitch_search($113,$5,1328,620,$4,$112);
    $114 = HEAP32[$4>>2]|0;
    $115 = (720 - ($114))|0;
    $116 = ((($0)) + 48|0);
    HEAP32[$116>>2] = $115;
    $$0406 = Math_fround(1.0);$$0407 = $115;$$pre$phiZ2D = $111;
   } else {
    $117 = ((($0)) + 48|0);
    $118 = HEAP32[$117>>2]|0;
    $$pre = ((($0)) + 36|0);
    $$0406 = Math_fround(0.800000011);$$0407 = $118;$$pre$phiZ2D = $$pre;
   }
   $119 = (_llvm_stacksave()|0);
   $$alloca_mul8 = $17<<2;
   $120 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul8)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul8)|0)+15)&-16)|0);;
   $121 = ((($8)) + 96|0);
   $122 = ((($13)) + 60|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = $$0407 << 1;
   $125 = ($124|0)<(1024);
   $126 = $125 ? $124 : 1024;
   $127 = (0 - ($126))|0;
   $128 = (2024 - ($126))|0;
   $129 = (1000 - ($126))|0;
   $130 = ((($8)) + 4192|0);
   $131 = (($130) + ($127<<2)|0);
   $132 = $126 >> 1;
   $133 = ($$0407|0)>(0);
   $134 = (2048 - ($1))|0;
   $135 = $134 << 2;
   $136 = (1024 - ($$0407))|0;
   $137 = (($17) + ($1))|0;
   $138 = ($137|0)>(0);
   $139 = (1024 - ($132))|0;
   $140 = (1024 - ($126))|0;
   $141 = (($134) + -1)|0;
   $142 = ((($0)) + 60|0);
   $143 = ((($0)) + 68|0);
   $144 = ((($0)) + 76|0);
   $145 = (($17|0) / 2)&-1;
   $146 = ($17|0)>(1);
   $147 = ($17|0)>(0);
   $148 = (($17) + -1)|0;
   $149 = ($1|0)>(0);
   $150 = $137 << 2;
   $151 = ((($9)) + 4|0);
   $152 = ((($9)) + 8|0);
   $153 = ((($9)) + 12|0);
   $154 = ((($9)) + 16|0);
   $155 = ((($9)) + 20|0);
   $156 = ((($9)) + 24|0);
   $157 = ((($9)) + 28|0);
   $158 = ((($9)) + 32|0);
   $159 = ((($9)) + 36|0);
   $160 = ((($9)) + 40|0);
   $161 = ((($9)) + 44|0);
   $162 = ((($9)) + 48|0);
   $163 = ((($9)) + 52|0);
   $164 = ((($9)) + 56|0);
   $165 = ((($9)) + 60|0);
   $166 = ((($9)) + 64|0);
   $167 = ((($9)) + 68|0);
   $168 = ((($9)) + 72|0);
   $169 = ((($9)) + 76|0);
   $170 = ((($9)) + 80|0);
   $171 = ((($9)) + 84|0);
   $172 = ((($9)) + 88|0);
   $173 = ((($9)) + 92|0);
   $174 = ((($9)) + 96|0);
   $175 = (($121) + ($129<<2)|0);
   $176 = $128 | 1;
   $177 = $129 | 1;
   $178 = (($121) + ($177<<2)|0);
   $179 = (($128) + 2)|0;
   $180 = (($129) + 2)|0;
   $181 = (($121) + ($180<<2)|0);
   $182 = (($128) + 3)|0;
   $183 = (($129) + 3)|0;
   $184 = (($121) + ($183<<2)|0);
   $185 = (($128) + 4)|0;
   $186 = (($129) + 4)|0;
   $187 = (($121) + ($186<<2)|0);
   $188 = (($128) + 5)|0;
   $189 = (($129) + 5)|0;
   $190 = (($121) + ($189<<2)|0);
   $191 = (($128) + 6)|0;
   $192 = (($129) + 6)|0;
   $193 = (($121) + ($192<<2)|0);
   $194 = (($128) + 7)|0;
   $195 = (($129) + 7)|0;
   $196 = (($121) + ($195<<2)|0);
   $197 = (($128) + 8)|0;
   $198 = (($129) + 8)|0;
   $199 = (($121) + ($198<<2)|0);
   $200 = (($128) + 9)|0;
   $201 = (($129) + 9)|0;
   $202 = (($121) + ($201<<2)|0);
   $203 = (($128) + 10)|0;
   $204 = (($129) + 10)|0;
   $205 = (($121) + ($204<<2)|0);
   $206 = (($128) + 11)|0;
   $207 = (($129) + 11)|0;
   $208 = (($121) + ($207<<2)|0);
   $209 = (($128) + 12)|0;
   $210 = (($129) + 12)|0;
   $211 = (($121) + ($210<<2)|0);
   $212 = (($128) + 13)|0;
   $213 = (($129) + 13)|0;
   $214 = (($121) + ($213<<2)|0);
   $215 = (($128) + 14)|0;
   $216 = (($129) + 14)|0;
   $217 = (($121) + ($216<<2)|0);
   $218 = (($128) + 15)|0;
   $219 = (($129) + 15)|0;
   $220 = (($121) + ($219<<2)|0);
   $221 = (($128) + 16)|0;
   $222 = (($129) + 16)|0;
   $223 = (($121) + ($222<<2)|0);
   $224 = (($128) + 17)|0;
   $225 = (($129) + 17)|0;
   $226 = (($121) + ($225<<2)|0);
   $227 = (($128) + 18)|0;
   $228 = (($129) + 18)|0;
   $229 = (($121) + ($228<<2)|0);
   $230 = (($128) + 19)|0;
   $231 = (($129) + 19)|0;
   $232 = (($121) + ($231<<2)|0);
   $233 = (($128) + 20)|0;
   $234 = (($129) + 20)|0;
   $235 = (($121) + ($234<<2)|0);
   $236 = (($128) + 21)|0;
   $237 = (($129) + 21)|0;
   $238 = (($121) + ($237<<2)|0);
   $239 = (($128) + 22)|0;
   $240 = (($129) + 22)|0;
   $241 = (($121) + ($240<<2)|0);
   $242 = (($128) + 23)|0;
   $243 = (($129) + 23)|0;
   $244 = (($121) + ($243<<2)|0);
   $245 = (($134) + -2)|0;
   $246 = ((($10)) + 4|0);
   $247 = (($134) + -3)|0;
   $248 = ((($10)) + 8|0);
   $249 = (($134) + -4)|0;
   $250 = ((($10)) + 12|0);
   $251 = (($134) + -5)|0;
   $252 = ((($10)) + 16|0);
   $253 = (($134) + -6)|0;
   $254 = ((($10)) + 20|0);
   $255 = (($134) + -7)|0;
   $256 = ((($10)) + 24|0);
   $257 = (($134) + -8)|0;
   $258 = ((($10)) + 28|0);
   $259 = (($134) + -9)|0;
   $260 = ((($10)) + 32|0);
   $261 = (($134) + -10)|0;
   $262 = ((($10)) + 36|0);
   $263 = (($134) + -11)|0;
   $264 = ((($10)) + 40|0);
   $265 = (($134) + -12)|0;
   $266 = ((($10)) + 44|0);
   $267 = (($134) + -13)|0;
   $268 = ((($10)) + 48|0);
   $269 = (($134) + -14)|0;
   $270 = ((($10)) + 52|0);
   $271 = (($134) + -15)|0;
   $272 = ((($10)) + 56|0);
   $273 = (($134) + -16)|0;
   $274 = ((($10)) + 60|0);
   $275 = (($134) + -17)|0;
   $276 = ((($10)) + 64|0);
   $277 = (($134) + -18)|0;
   $278 = ((($10)) + 68|0);
   $279 = (($134) + -19)|0;
   $280 = ((($10)) + 72|0);
   $281 = (($134) + -20)|0;
   $282 = ((($10)) + 76|0);
   $283 = (($134) + -21)|0;
   $284 = ((($10)) + 80|0);
   $285 = (($134) + -22)|0;
   $286 = ((($10)) + 84|0);
   $287 = (($134) + -23)|0;
   $288 = ((($10)) + 88|0);
   $289 = (($134) + -24)|0;
   $290 = ((($10)) + 92|0);
   $$4 = 0;
   while(1) {
    $291 = (($6) + ($$4<<2)|0);
    $292 = HEAP32[$291>>2]|0;
    $$2398436 = 0;
    while(1) {
     $293 = (($$2398436) + 1024)|0;
     $294 = (($292) + ($293<<2)|0);
     $295 = HEAP32[$294>>2]|0;
     $296 = (($121) + ($$2398436<<2)|0);
     HEAP32[$296>>2] = $295;
     $297 = (($$2398436) + 1)|0;
     $exitcond487 = ($297|0)==(1024);
     if ($exitcond487) {
      break;
     } else {
      $$2398436 = $297;
     }
    }
    if ($110) {
     $298 = HEAP32[$$pre$phiZ2D>>2]|0;
     (__celt_autocorr($121,$9,$123,$17,24,1024,$298)|0);
     $299 = Math_fround(HEAPF32[$9>>2]);
     $300 = Math_fround($299 * Math_fround(1.00010002));
     HEAPF32[$9>>2] = $300;
     $301 = Math_fround(HEAPF32[$151>>2]);
     $302 = Math_fround($301 * Math_fround(6.40000071E-5));
     $303 = Math_fround($301 - $302);
     HEAPF32[$151>>2] = $303;
     $304 = Math_fround(HEAPF32[$152>>2]);
     $305 = Math_fround($304 * Math_fround(6.40000071E-5));
     $306 = Math_fround($305 * Math_fround(2.0));
     $307 = Math_fround($306 * Math_fround(2.0));
     $308 = Math_fround($304 - $307);
     HEAPF32[$152>>2] = $308;
     $309 = Math_fround(HEAPF32[$153>>2]);
     $310 = Math_fround($309 * Math_fround(6.40000071E-5));
     $311 = Math_fround($310 * Math_fround(3.0));
     $312 = Math_fround($311 * Math_fround(3.0));
     $313 = Math_fround($309 - $312);
     HEAPF32[$153>>2] = $313;
     $314 = Math_fround(HEAPF32[$154>>2]);
     $315 = Math_fround($314 * Math_fround(6.40000071E-5));
     $316 = Math_fround($315 * Math_fround(4.0));
     $317 = Math_fround($316 * Math_fround(4.0));
     $318 = Math_fround($314 - $317);
     HEAPF32[$154>>2] = $318;
     $319 = Math_fround(HEAPF32[$155>>2]);
     $320 = Math_fround($319 * Math_fround(6.40000071E-5));
     $321 = Math_fround($320 * Math_fround(5.0));
     $322 = Math_fround($321 * Math_fround(5.0));
     $323 = Math_fround($319 - $322);
     HEAPF32[$155>>2] = $323;
     $324 = Math_fround(HEAPF32[$156>>2]);
     $325 = Math_fround($324 * Math_fround(6.40000071E-5));
     $326 = Math_fround($325 * Math_fround(6.0));
     $327 = Math_fround($326 * Math_fround(6.0));
     $328 = Math_fround($324 - $327);
     HEAPF32[$156>>2] = $328;
     $329 = Math_fround(HEAPF32[$157>>2]);
     $330 = Math_fround($329 * Math_fround(6.40000071E-5));
     $331 = Math_fround($330 * Math_fround(7.0));
     $332 = Math_fround($331 * Math_fround(7.0));
     $333 = Math_fround($329 - $332);
     HEAPF32[$157>>2] = $333;
     $334 = Math_fround(HEAPF32[$158>>2]);
     $335 = Math_fround($334 * Math_fround(6.40000071E-5));
     $336 = Math_fround($335 * Math_fround(8.0));
     $337 = Math_fround($336 * Math_fround(8.0));
     $338 = Math_fround($334 - $337);
     HEAPF32[$158>>2] = $338;
     $339 = Math_fround(HEAPF32[$159>>2]);
     $340 = Math_fround($339 * Math_fround(6.40000071E-5));
     $341 = Math_fround($340 * Math_fround(9.0));
     $342 = Math_fround($341 * Math_fround(9.0));
     $343 = Math_fround($339 - $342);
     HEAPF32[$159>>2] = $343;
     $344 = Math_fround(HEAPF32[$160>>2]);
     $345 = Math_fround($344 * Math_fround(6.40000071E-5));
     $346 = Math_fround($345 * Math_fround(10.0));
     $347 = Math_fround($346 * Math_fround(10.0));
     $348 = Math_fround($344 - $347);
     HEAPF32[$160>>2] = $348;
     $349 = Math_fround(HEAPF32[$161>>2]);
     $350 = Math_fround($349 * Math_fround(6.40000071E-5));
     $351 = Math_fround($350 * Math_fround(11.0));
     $352 = Math_fround($351 * Math_fround(11.0));
     $353 = Math_fround($349 - $352);
     HEAPF32[$161>>2] = $353;
     $354 = Math_fround(HEAPF32[$162>>2]);
     $355 = Math_fround($354 * Math_fround(6.40000071E-5));
     $356 = Math_fround($355 * Math_fround(12.0));
     $357 = Math_fround($356 * Math_fround(12.0));
     $358 = Math_fround($354 - $357);
     HEAPF32[$162>>2] = $358;
     $359 = Math_fround(HEAPF32[$163>>2]);
     $360 = Math_fround($359 * Math_fround(6.40000071E-5));
     $361 = Math_fround($360 * Math_fround(13.0));
     $362 = Math_fround($361 * Math_fround(13.0));
     $363 = Math_fround($359 - $362);
     HEAPF32[$163>>2] = $363;
     $364 = Math_fround(HEAPF32[$164>>2]);
     $365 = Math_fround($364 * Math_fround(6.40000071E-5));
     $366 = Math_fround($365 * Math_fround(14.0));
     $367 = Math_fround($366 * Math_fround(14.0));
     $368 = Math_fround($364 - $367);
     HEAPF32[$164>>2] = $368;
     $369 = Math_fround(HEAPF32[$165>>2]);
     $370 = Math_fround($369 * Math_fround(6.40000071E-5));
     $371 = Math_fround($370 * Math_fround(15.0));
     $372 = Math_fround($371 * Math_fround(15.0));
     $373 = Math_fround($369 - $372);
     HEAPF32[$165>>2] = $373;
     $374 = Math_fround(HEAPF32[$166>>2]);
     $375 = Math_fround($374 * Math_fround(6.40000071E-5));
     $376 = Math_fround($375 * Math_fround(16.0));
     $377 = Math_fround($376 * Math_fround(16.0));
     $378 = Math_fround($374 - $377);
     HEAPF32[$166>>2] = $378;
     $379 = Math_fround(HEAPF32[$167>>2]);
     $380 = Math_fround($379 * Math_fround(6.40000071E-5));
     $381 = Math_fround($380 * Math_fround(17.0));
     $382 = Math_fround($381 * Math_fround(17.0));
     $383 = Math_fround($379 - $382);
     HEAPF32[$167>>2] = $383;
     $384 = Math_fround(HEAPF32[$168>>2]);
     $385 = Math_fround($384 * Math_fround(6.40000071E-5));
     $386 = Math_fround($385 * Math_fround(18.0));
     $387 = Math_fround($386 * Math_fround(18.0));
     $388 = Math_fround($384 - $387);
     HEAPF32[$168>>2] = $388;
     $389 = Math_fround(HEAPF32[$169>>2]);
     $390 = Math_fround($389 * Math_fround(6.40000071E-5));
     $391 = Math_fround($390 * Math_fround(19.0));
     $392 = Math_fround($391 * Math_fround(19.0));
     $393 = Math_fround($389 - $392);
     HEAPF32[$169>>2] = $393;
     $394 = Math_fround(HEAPF32[$170>>2]);
     $395 = Math_fround($394 * Math_fround(6.40000071E-5));
     $396 = Math_fround($395 * Math_fround(20.0));
     $397 = Math_fround($396 * Math_fround(20.0));
     $398 = Math_fround($394 - $397);
     HEAPF32[$170>>2] = $398;
     $399 = Math_fround(HEAPF32[$171>>2]);
     $400 = Math_fround($399 * Math_fround(6.40000071E-5));
     $401 = Math_fround($400 * Math_fround(21.0));
     $402 = Math_fround($401 * Math_fround(21.0));
     $403 = Math_fround($399 - $402);
     HEAPF32[$171>>2] = $403;
     $404 = Math_fround(HEAPF32[$172>>2]);
     $405 = Math_fround($404 * Math_fround(6.40000071E-5));
     $406 = Math_fround($405 * Math_fround(22.0));
     $407 = Math_fround($406 * Math_fround(22.0));
     $408 = Math_fround($404 - $407);
     HEAPF32[$172>>2] = $408;
     $409 = Math_fround(HEAPF32[$173>>2]);
     $410 = Math_fround($409 * Math_fround(6.40000071E-5));
     $411 = Math_fround($410 * Math_fround(23.0));
     $412 = Math_fround($411 * Math_fround(23.0));
     $413 = Math_fround($409 - $412);
     HEAPF32[$173>>2] = $413;
     $414 = Math_fround(HEAPF32[$174>>2]);
     $415 = Math_fround($414 * Math_fround(6.40000071E-5));
     $416 = Math_fround($415 * Math_fround(24.0));
     $417 = Math_fround($416 * Math_fround(24.0));
     $418 = Math_fround($414 - $417);
     HEAPF32[$174>>2] = $418;
     $419 = ($$4*24)|0;
     $420 = (($30) + ($419<<2)|0);
     __celt_lpc($420,$9,24);
     $$pre$phi502Z2D = $420;
    } else {
     $$pre499 = ($$4*24)|0;
     $$pre501 = (($30) + ($$pre499<<2)|0);
     $$pre$phi502Z2D = $$pre501;
    }
    $421 = (($292) + ($128<<2)|0);
    $422 = HEAP32[$421>>2]|0;
    HEAP32[$175>>2] = $422;
    $423 = (($292) + ($176<<2)|0);
    $424 = HEAP32[$423>>2]|0;
    HEAP32[$178>>2] = $424;
    $425 = (($292) + ($179<<2)|0);
    $426 = HEAP32[$425>>2]|0;
    HEAP32[$181>>2] = $426;
    $427 = (($292) + ($182<<2)|0);
    $428 = HEAP32[$427>>2]|0;
    HEAP32[$184>>2] = $428;
    $429 = (($292) + ($185<<2)|0);
    $430 = HEAP32[$429>>2]|0;
    HEAP32[$187>>2] = $430;
    $431 = (($292) + ($188<<2)|0);
    $432 = HEAP32[$431>>2]|0;
    HEAP32[$190>>2] = $432;
    $433 = (($292) + ($191<<2)|0);
    $434 = HEAP32[$433>>2]|0;
    HEAP32[$193>>2] = $434;
    $435 = (($292) + ($194<<2)|0);
    $436 = HEAP32[$435>>2]|0;
    HEAP32[$196>>2] = $436;
    $437 = (($292) + ($197<<2)|0);
    $438 = HEAP32[$437>>2]|0;
    HEAP32[$199>>2] = $438;
    $439 = (($292) + ($200<<2)|0);
    $440 = HEAP32[$439>>2]|0;
    HEAP32[$202>>2] = $440;
    $441 = (($292) + ($203<<2)|0);
    $442 = HEAP32[$441>>2]|0;
    HEAP32[$205>>2] = $442;
    $443 = (($292) + ($206<<2)|0);
    $444 = HEAP32[$443>>2]|0;
    HEAP32[$208>>2] = $444;
    $445 = (($292) + ($209<<2)|0);
    $446 = HEAP32[$445>>2]|0;
    HEAP32[$211>>2] = $446;
    $447 = (($292) + ($212<<2)|0);
    $448 = HEAP32[$447>>2]|0;
    HEAP32[$214>>2] = $448;
    $449 = (($292) + ($215<<2)|0);
    $450 = HEAP32[$449>>2]|0;
    HEAP32[$217>>2] = $450;
    $451 = (($292) + ($218<<2)|0);
    $452 = HEAP32[$451>>2]|0;
    HEAP32[$220>>2] = $452;
    $453 = (($292) + ($221<<2)|0);
    $454 = HEAP32[$453>>2]|0;
    HEAP32[$223>>2] = $454;
    $455 = (($292) + ($224<<2)|0);
    $456 = HEAP32[$455>>2]|0;
    HEAP32[$226>>2] = $456;
    $457 = (($292) + ($227<<2)|0);
    $458 = HEAP32[$457>>2]|0;
    HEAP32[$229>>2] = $458;
    $459 = (($292) + ($230<<2)|0);
    $460 = HEAP32[$459>>2]|0;
    HEAP32[$232>>2] = $460;
    $461 = (($292) + ($233<<2)|0);
    $462 = HEAP32[$461>>2]|0;
    HEAP32[$235>>2] = $462;
    $463 = (($292) + ($236<<2)|0);
    $464 = HEAP32[$463>>2]|0;
    HEAP32[$238>>2] = $464;
    $465 = (($292) + ($239<<2)|0);
    $466 = HEAP32[$465>>2]|0;
    HEAP32[$241>>2] = $466;
    $467 = (($292) + ($242<<2)|0);
    $468 = HEAP32[$467>>2]|0;
    HEAP32[$244>>2] = $468;
    $469 = HEAP32[$$pre$phiZ2D>>2]|0;
    _celt_fir_c($131,$$pre$phi502Z2D,$131,$126,24,$469);
    if ($133) {
     $$0408440 = Math_fround(1.0);$$0409439 = Math_fround(1.0);$$5441 = 0;
     while(1) {
      $470 = (($139) + ($$5441))|0;
      $471 = (($121) + ($470<<2)|0);
      $472 = Math_fround(HEAPF32[$471>>2]);
      $473 = Math_fround($472 * $472);
      $474 = Math_fround($$0409439 + $473);
      $475 = (($140) + ($$5441))|0;
      $476 = (($121) + ($475<<2)|0);
      $477 = Math_fround(HEAPF32[$476>>2]);
      $478 = Math_fround($477 * $477);
      $479 = Math_fround($$0408440 + $478);
      $480 = (($$5441) + 1)|0;
      $481 = ($480|0)<($132|0);
      if ($481) {
       $$0408440 = $479;$$0409439 = $474;$$5441 = $480;
      } else {
       $$0408$lcssa = $479;$$0409$lcssa = $474;
       break;
      }
     }
    } else {
     $$0408$lcssa = Math_fround(1.0);$$0409$lcssa = Math_fround(1.0);
    }
    $482 = $$0409$lcssa < $$0408$lcssa;
    $483 = $482 ? $$0409$lcssa : $$0408$lcssa;
    $484 = Math_fround($483 / $$0408$lcssa);
    $485 = (Math_fround(Math_sqrt((Math_fround($484)))));
    $486 = (($292) + ($1<<2)|0);
    _memmove(($292|0),($486|0),($135|0))|0;
    if ($138) {
     $487 = Math_fround($$0406 * $485);
     $$0410449 = 0;$$0412448 = $487;$$0414447 = Math_fround(0.0);$$6450 = 0;
     while(1) {
      $488 = ($$0410449|0)<($$0407|0);
      $489 = Math_fround($485 * $$0412448);
      $$1413 = $488 ? $$0412448 : $489;
      $490 = $488 ? 0 : $$0407;
      $$1411 = (($$0410449) - ($490))|0;
      $491 = (($$1411) + ($136))|0;
      $492 = (($121) + ($491<<2)|0);
      $493 = Math_fround(HEAPF32[$492>>2]);
      $494 = Math_fround($$1413 * $493);
      $495 = (($$6450) + ($134))|0;
      $496 = (($292) + ($495<<2)|0);
      HEAPF32[$496>>2] = $494;
      $497 = (($491) + 1024)|0;
      $498 = (($497) - ($1))|0;
      $499 = (($292) + ($498<<2)|0);
      $500 = Math_fround(HEAPF32[$499>>2]);
      $501 = Math_fround($500 * $500);
      $502 = Math_fround($$0414447 + $501);
      $503 = (($$6450) + 1)|0;
      $504 = (($$1411) + 1)|0;
      $exitcond492 = ($503|0)==($137|0);
      if ($exitcond492) {
       $$0414$lcssa = $502;
       break;
      } else {
       $$0410449 = $504;$$0412448 = $$1413;$$0414447 = $502;$$6450 = $503;
      }
     }
    } else {
     $$0414$lcssa = Math_fround(0.0);
    }
    $505 = (($292) + ($141<<2)|0);
    $506 = HEAP32[$505>>2]|0;
    HEAP32[$10>>2] = $506;
    $507 = (($292) + ($245<<2)|0);
    $508 = HEAP32[$507>>2]|0;
    HEAP32[$246>>2] = $508;
    $509 = (($292) + ($247<<2)|0);
    $510 = HEAP32[$509>>2]|0;
    HEAP32[$248>>2] = $510;
    $511 = (($292) + ($249<<2)|0);
    $512 = HEAP32[$511>>2]|0;
    HEAP32[$250>>2] = $512;
    $513 = (($292) + ($251<<2)|0);
    $514 = HEAP32[$513>>2]|0;
    HEAP32[$252>>2] = $514;
    $515 = (($292) + ($253<<2)|0);
    $516 = HEAP32[$515>>2]|0;
    HEAP32[$254>>2] = $516;
    $517 = (($292) + ($255<<2)|0);
    $518 = HEAP32[$517>>2]|0;
    HEAP32[$256>>2] = $518;
    $519 = (($292) + ($257<<2)|0);
    $520 = HEAP32[$519>>2]|0;
    HEAP32[$258>>2] = $520;
    $521 = (($292) + ($259<<2)|0);
    $522 = HEAP32[$521>>2]|0;
    HEAP32[$260>>2] = $522;
    $523 = (($292) + ($261<<2)|0);
    $524 = HEAP32[$523>>2]|0;
    HEAP32[$262>>2] = $524;
    $525 = (($292) + ($263<<2)|0);
    $526 = HEAP32[$525>>2]|0;
    HEAP32[$264>>2] = $526;
    $527 = (($292) + ($265<<2)|0);
    $528 = HEAP32[$527>>2]|0;
    HEAP32[$266>>2] = $528;
    $529 = (($292) + ($267<<2)|0);
    $530 = HEAP32[$529>>2]|0;
    HEAP32[$268>>2] = $530;
    $531 = (($292) + ($269<<2)|0);
    $532 = HEAP32[$531>>2]|0;
    HEAP32[$270>>2] = $532;
    $533 = (($292) + ($271<<2)|0);
    $534 = HEAP32[$533>>2]|0;
    HEAP32[$272>>2] = $534;
    $535 = (($292) + ($273<<2)|0);
    $536 = HEAP32[$535>>2]|0;
    HEAP32[$274>>2] = $536;
    $537 = (($292) + ($275<<2)|0);
    $538 = HEAP32[$537>>2]|0;
    HEAP32[$276>>2] = $538;
    $539 = (($292) + ($277<<2)|0);
    $540 = HEAP32[$539>>2]|0;
    HEAP32[$278>>2] = $540;
    $541 = (($292) + ($279<<2)|0);
    $542 = HEAP32[$541>>2]|0;
    HEAP32[$280>>2] = $542;
    $543 = (($292) + ($281<<2)|0);
    $544 = HEAP32[$543>>2]|0;
    HEAP32[$282>>2] = $544;
    $545 = (($292) + ($283<<2)|0);
    $546 = HEAP32[$545>>2]|0;
    HEAP32[$284>>2] = $546;
    $547 = (($292) + ($285<<2)|0);
    $548 = HEAP32[$547>>2]|0;
    HEAP32[$286>>2] = $548;
    $549 = (($292) + ($287<<2)|0);
    $550 = HEAP32[$549>>2]|0;
    HEAP32[$288>>2] = $550;
    $551 = (($292) + ($289<<2)|0);
    $552 = HEAP32[$551>>2]|0;
    HEAP32[$290>>2] = $552;
    $553 = ((($292)) + 8192|0);
    $554 = (($553) + ($3<<2)|0);
    $555 = HEAP32[$$pre$phiZ2D>>2]|0;
    _celt_iir($554,$$pre$phi502Z2D,$554,$137,24,$10,$555);
    if ($138) {
     $$0404456 = Math_fround(0.0);$$8457 = 0;
     while(1) {
      $556 = (($$8457) + ($134))|0;
      $557 = (($292) + ($556<<2)|0);
      $558 = Math_fround(HEAPF32[$557>>2]);
      $559 = Math_fround($558 * $558);
      $560 = Math_fround($$0404456 + $559);
      $561 = (($$8457) + 1)|0;
      $exitcond494 = ($561|0)==($137|0);
      if ($exitcond494) {
       $$0404$lcssa = $560;
       break;
      } else {
       $$0404456 = $560;$$8457 = $561;
      }
     }
    } else {
     $$0404$lcssa = Math_fround(0.0);
    }
    $562 = Math_fround($$0404$lcssa * Math_fround(0.200000003));
    $563 = $$0414$lcssa > $562;
    if ($563) {
     $564 = $$0414$lcssa < $$0404$lcssa;
     if ($564) {
      $565 = Math_fround($$0414$lcssa + Math_fround(1.0));
      $566 = Math_fround($$0404$lcssa + Math_fround(1.0));
      $567 = Math_fround($565 / $566);
      $568 = (Math_fround(Math_sqrt((Math_fround($567)))));
      if ($147) {
       $569 = Math_fround(Math_fround(1.0) - $568);
       $$10465 = 0;
       while(1) {
        $570 = (($123) + ($$10465<<2)|0);
        $571 = Math_fround(HEAPF32[$570>>2]);
        $572 = Math_fround($569 * $571);
        $573 = Math_fround(Math_fround(1.0) - $572);
        $574 = (($$10465) + ($134))|0;
        $575 = (($292) + ($574<<2)|0);
        $576 = Math_fround(HEAPF32[$575>>2]);
        $577 = Math_fround($576 * $573);
        HEAPF32[$575>>2] = $577;
        $578 = (($$10465) + 1)|0;
        $exitcond497 = ($578|0)==($17|0);
        if ($exitcond497) {
         break;
        } else {
         $$10465 = $578;
        }
       }
      }
      if ($149) {
       $$11469 = $17;
       while(1) {
        $579 = (($$11469) + ($134))|0;
        $580 = (($292) + ($579<<2)|0);
        $581 = Math_fround(HEAPF32[$580>>2]);
        $582 = Math_fround($568 * $581);
        HEAPF32[$580>>2] = $582;
        $583 = (($$11469) + 1)|0;
        $584 = ($583|0)<($137|0);
        if ($584) {
         $$11469 = $583;
        } else {
         break;
        }
       }
      }
     }
    } else {
     if ($138) {
      $scevgep = (($292) + ($134<<2)|0);
      _memset(($scevgep|0),0,($150|0))|0;
     }
    }
    $585 = HEAP32[$142>>2]|0;
    $586 = Math_fround(HEAPF32[$143>>2]);
    $587 = Math_fround(- $586);
    $588 = HEAP32[$144>>2]|0;
    $589 = HEAP32[$$pre$phiZ2D>>2]|0;
    _comb_filter($120,$553,$585,$585,$17,$587,$587,$588,$588,0,0,$589);
    if ($146) {
     $$12$neg473 = 0;$$12472 = 0;
     while(1) {
      $590 = (($123) + ($$12472<<2)|0);
      $591 = Math_fround(HEAPF32[$590>>2]);
      $592 = (($148) + ($$12$neg473))|0;
      $593 = (($120) + ($592<<2)|0);
      $594 = Math_fround(HEAPF32[$593>>2]);
      $595 = Math_fround($591 * $594);
      $596 = (($123) + ($592<<2)|0);
      $597 = Math_fround(HEAPF32[$596>>2]);
      $598 = (($120) + ($$12472<<2)|0);
      $599 = Math_fround(HEAPF32[$598>>2]);
      $600 = Math_fround($597 * $599);
      $601 = Math_fround($595 + $600);
      $602 = (($$12472) + 2048)|0;
      $603 = (($292) + ($602<<2)|0);
      HEAPF32[$603>>2] = $601;
      $604 = (($$12472) + 1)|0;
      $$12$neg = $$12472 ^ -1;
      $exitcond498 = ($604|0)==($145|0);
      if ($exitcond498) {
       break;
      } else {
       $$12$neg473 = $$12$neg;$$12472 = $604;
      }
     }
    }
    $605 = (($$4) + 1)|0;
    $606 = ($605|0)<($12|0);
    if ($606) {
     $$4 = $605;
    } else {
     break;
    }
   }
   _llvm_stackrestore(($119|0));
   $607 = (($38) + 1)|0;
   HEAP32[$37>>2] = $607;
   STACKTOP = sp;return;
  }
 }
 $46 = ((($0)) + 24|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = ((($13)) + 12|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ($47|0)<($49|0);
 $$ = $50 ? $47 : $49;
 $51 = ($40|0)>($$|0);
 $spec$select = $51 ? $40 : $$;
 $52 = Math_imul($12, $1)|0;
 $53 = (_llvm_stacksave()|0);
 $$alloca_mul = $52<<2;
 $54 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $55 = ($38|0)==(0);
 $56 = $55 ? Math_fround(1.5) : Math_fround(0.5);
 $57 = ($40|0)<($47|0);
 if ($57) {
  $$1$us = 0;
  while(1) {
   $58 = Math_imul($$1$us, $15)|0;
   $$0396432$us = $40;
   while(1) {
    $59 = (($$0396432$us) + ($58))|0;
    $60 = (($36) + ($59<<2)|0);
    $61 = Math_fround(HEAPF32[$60>>2]);
    $62 = (($32) + ($59<<2)|0);
    $63 = Math_fround(HEAPF32[$62>>2]);
    $64 = Math_fround($63 - $56);
    $65 = $61 > $64;
    $$416$us = $65 ? $61 : $64;
    HEAPF32[$62>>2] = $$416$us;
    $66 = (($$0396432$us) + 1)|0;
    $exitcond486 = ($66|0)==($47|0);
    if ($exitcond486) {
     break;
    } else {
     $$0396432$us = $66;
    }
   }
   $67 = (($$1$us) + 1)|0;
   $68 = ($67|0)<($12|0);
   if ($68) {
    $$1$us = $67;
   } else {
    break;
   }
  }
 }
 $69 = ((($0)) + 40|0);
 $70 = HEAP32[$69>>2]|0;
 $71 = ($12|0)>(0);
 if ($71) {
  $72 = ($40|0)<($$|0);
  $73 = ((($0)) + 36|0);
  if ($72) {
   $$0401426$us = $70;$$2427$us = 0;
   while(1) {
    $74 = Math_imul($$2427$us, $1)|0;
    $$1397421$us = $40;$$1402420$us = $$0401426$us;
    while(1) {
     $75 = (($19) + ($$1397421$us<<1)|0);
     $76 = HEAP16[$75>>1]|0;
     $77 = $76 << 16 >> 16;
     $78 = $77 << $2;
     $79 = (($78) + ($74))|0;
     $80 = (($$1397421$us) + 1)|0;
     $81 = (($19) + ($80<<1)|0);
     $82 = HEAP16[$81>>1]|0;
     $83 = $82 << 16 >> 16;
     $84 = (($83) - ($77))|0;
     $85 = $84 << $2;
     $86 = ($85|0)>(0);
     if ($86) {
      $$0405418$us = 0;$$2403419$us = $$1402420$us;
      while(1) {
       $90 = (_celt_lcg_rand($$2403419$us)|0);
       $91 = $90 >> 20;
       $92 = (Math_fround(($91|0)));
       $93 = (($$0405418$us) + ($79))|0;
       $94 = (($54) + ($93<<2)|0);
       HEAPF32[$94>>2] = $92;
       $95 = (($$0405418$us) + 1)|0;
       $exitcond = ($95|0)==($85|0);
       if ($exitcond) {
        $$2403$lcssa$us = $90;
        break;
       } else {
        $$0405418$us = $95;$$2403419$us = $90;
       }
      }
     } else {
      $$2403$lcssa$us = $$1402420$us;
     }
     $87 = (($54) + ($79<<2)|0);
     $88 = HEAP32[$73>>2]|0;
     _renormalise_vector($87,$85,Math_fround(1.0),$88);
     $89 = ($80|0)<($spec$select|0);
     if ($89) {
      $$1397421$us = $80;$$1402420$us = $$2403$lcssa$us;
     } else {
      break;
     }
    }
    $96 = (($$2427$us) + 1)|0;
    $exitcond484 = ($96|0)==($12|0);
    if ($exitcond484) {
     $$0401$lcssa = $$2403$lcssa$us;
     break;
    } else {
     $$0401426$us = $$2403$lcssa$us;$$2427$us = $96;
    }
   }
  } else {
   $$0401$lcssa = $70;
  }
 } else {
  $$0401$lcssa = $70;
 }
 HEAP32[$69>>2] = $$0401$lcssa;
 $97 = (2048 - ($1))|0;
 $98 = $17 >>> 1;
 $99 = (($97) + ($98))|0;
 $100 = $99 << 2;
 $$3 = 0;
 while(1) {
  $101 = (($6) + ($$3<<2)|0);
  $102 = HEAP32[$101>>2]|0;
  $103 = (($102) + ($1<<2)|0);
  _memmove(($102|0),($103|0),($100|0))|0;
  $104 = (($$3) + 1)|0;
  $105 = ($104|0)<($12|0);
  if ($105) {
   $$3 = $104;
  } else {
   break;
  }
 }
 $106 = ((($0)) + 16|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = ((($0)) + 36|0);
 $109 = HEAP32[$108>>2]|0;
 _celt_synthesis($13,$54,$7,$32,$40,$spec$select,$12,$12,0,$2,$107,0,$109);
 _llvm_stackrestore(($53|0));
 $607 = (($38) + 1)|0;
 HEAP32[$37>>2] = $607;
 STACKTOP = sp;return;
}
function _deemphasis($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$0 = 0, $$0$lcssa$i = Math_fround(0), $$0$us = 0, $$03$i = Math_fround(0), $$039$lcssa$i = Math_fround(0), $$0392$i = Math_fround(0), $$0401$i = 0, $$079$lcssa$us = Math_fround(0), $$07990$us = Math_fround(0), $$08189$us = 0, $$180$lcssa = Math_fround(0), $$18088 = Math_fround(0), $$18287 = 0, $$28394$us = 0, $$alloca_mul = 0, $$idx = 0, $$idx$val = 0, $$val = 0, $10 = 0, $11 = Math_fround(0);
 var $12 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15 = 0, $16 = 0, $17 = Math_fround(0), $18 = Math_fround(0), $19 = Math_fround(0), $20 = 0, $21 = Math_fround(0), $22 = Math_fround(0), $23 = Math_fround(0), $24 = Math_fround(0), $25 = Math_fround(0), $26 = Math_fround(0), $27 = 0, $28 = 0, $29 = Math_fround(0), $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = Math_fround(0), $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = Math_fround(0), $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = Math_fround(0), $49 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = Math_fround(0), $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = Math_fround(0), $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = Math_fround(0), $68 = Math_fround(0), $69 = Math_fround(0), $70 = Math_fround(0), $71 = Math_fround(0);
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond101 = 0, $exitcond102 = 0, $or$cond$not = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = ($4|0)!=(1);
 $9 = ($3|0)!=(2);
 $or$cond$not = $9 | $8;
 $10 = ($7|0)!=(0);
 $or$cond3 = $or$cond$not | $10;
 if (!($or$cond3)) {
  $11 = Math_fround(HEAPF32[$5>>2]);
  $$val = HEAP32[$0>>2]|0;
  $$idx = ((($0)) + 4|0);
  $$idx$val = HEAP32[$$idx>>2]|0;
  $12 = Math_fround(HEAPF32[$6>>2]);
  $13 = ((($6)) + 4|0);
  $14 = Math_fround(HEAPF32[$13>>2]);
  $15 = ($2|0)>(0);
  if ($15) {
   $$03$i = $12;$$0392$i = $14;$$0401$i = 0;
   while(1) {
    $16 = (($$val) + ($$0401$i<<2)|0);
    $17 = Math_fround(HEAPF32[$16>>2]);
    $18 = Math_fround($17 + Math_fround(1.0E-30));
    $19 = Math_fround($$03$i + $18);
    $20 = (($$idx$val) + ($$0401$i<<2)|0);
    $21 = Math_fround(HEAPF32[$20>>2]);
    $22 = Math_fround($21 + Math_fround(1.0E-30));
    $23 = Math_fround($$0392$i + $22);
    $24 = Math_fround($11 * $19);
    $25 = Math_fround($11 * $23);
    $26 = Math_fround($19 * Math_fround(3.05175781E-5));
    $27 = $$0401$i << 1;
    $28 = (($1) + ($27<<2)|0);
    HEAPF32[$28>>2] = $26;
    $29 = Math_fround($23 * Math_fround(3.05175781E-5));
    $30 = $27 | 1;
    $31 = (($1) + ($30<<2)|0);
    HEAPF32[$31>>2] = $29;
    $32 = (($$0401$i) + 1)|0;
    $exitcond$i = ($32|0)==($2|0);
    if ($exitcond$i) {
     $$0$lcssa$i = $24;$$039$lcssa$i = $25;
     break;
    } else {
     $$03$i = $24;$$0392$i = $25;$$0401$i = $32;
    }
   }
  } else {
   $$0$lcssa$i = $12;$$039$lcssa$i = $14;
  }
  HEAPF32[$6>>2] = $$0$lcssa$i;
  HEAPF32[$13>>2] = $$039$lcssa$i;
  STACKTOP = sp;return;
 }
 $33 = (_llvm_stacksave()|0);
 $$alloca_mul = $2<<2;
 $34 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $35 = Math_fround(HEAPF32[$5>>2]);
 $36 = (($2|0) / ($4|0))&-1;
 $37 = ($4|0)>(1);
 $38 = ($2|0)>(0);
 $39 = ($36|0)>(0);
 if ($37) {
  $$0$us = 0;
  while(1) {
   $40 = (($6) + ($$0$us<<2)|0);
   $41 = Math_fround(HEAPF32[$40>>2]);
   $42 = (($0) + ($$0$us<<2)|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (($1) + ($$0$us<<2)|0);
   if ($38) {
    $$07990$us = $41;$$08189$us = 0;
    while(1) {
     $52 = (($43) + ($$08189$us<<2)|0);
     $53 = Math_fround(HEAPF32[$52>>2]);
     $54 = Math_fround($53 + Math_fround(1.0E-30));
     $55 = Math_fround($$07990$us + $54);
     $56 = Math_fround($35 * $55);
     $57 = (($34) + ($$08189$us<<2)|0);
     HEAPF32[$57>>2] = $55;
     $58 = (($$08189$us) + 1)|0;
     $exitcond = ($58|0)==($2|0);
     if ($exitcond) {
      $$079$lcssa$us = $56;
      break;
     } else {
      $$07990$us = $56;$$08189$us = $58;
     }
    }
   } else {
    $$079$lcssa$us = $41;
   }
   HEAPF32[$40>>2] = $$079$lcssa$us;
   if ($39) {
    $$28394$us = 0;
    while(1) {
     $45 = Math_imul($$28394$us, $4)|0;
     $46 = (($34) + ($45<<2)|0);
     $47 = Math_fround(HEAPF32[$46>>2]);
     $48 = Math_fround($47 * Math_fround(3.05175781E-5));
     $49 = Math_imul($$28394$us, $3)|0;
     $50 = (($44) + ($49<<2)|0);
     HEAPF32[$50>>2] = $48;
     $51 = (($$28394$us) + 1)|0;
     $exitcond101 = ($51|0)==($36|0);
     if ($exitcond101) {
      break;
     } else {
      $$28394$us = $51;
     }
    }
   }
   $59 = (($$0$us) + 1)|0;
   $60 = ($59|0)<($3|0);
   if ($60) {
    $$0$us = $59;
   } else {
    break;
   }
  }
 } else {
  $$0 = 0;
  while(1) {
   $61 = (($6) + ($$0<<2)|0);
   $62 = Math_fround(HEAPF32[$61>>2]);
   $63 = (($0) + ($$0<<2)|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = (($1) + ($$0<<2)|0);
   if ($38) {
    $$18088 = $62;$$18287 = 0;
    while(1) {
     $66 = (($64) + ($$18287<<2)|0);
     $67 = Math_fround(HEAPF32[$66>>2]);
     $68 = Math_fround($67 + Math_fround(1.0E-30));
     $69 = Math_fround($$18088 + $68);
     $70 = Math_fround($35 * $69);
     $71 = Math_fround($69 * Math_fround(3.05175781E-5));
     $72 = Math_imul($$18287, $3)|0;
     $73 = (($65) + ($72<<2)|0);
     HEAPF32[$73>>2] = $71;
     $74 = (($$18287) + 1)|0;
     $exitcond102 = ($74|0)==($2|0);
     if ($exitcond102) {
      $$180$lcssa = $70;
      break;
     } else {
      $$18088 = $70;$$18287 = $74;
     }
    }
   } else {
    $$180$lcssa = $62;
   }
   HEAPF32[$61>>2] = $$180$lcssa;
   $75 = (($$0) + 1)|0;
   $76 = ($75|0)<($3|0);
   if ($76) {
    $$0 = $75;
   } else {
    break;
   }
  }
 }
 _llvm_stackrestore(($33|0));
 STACKTOP = sp;return;
}
function _celt_synthesis($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 var $$0 = 0, $$0$us = 0, $$0164179 = 0, $$0166174 = 0, $$0168 = 0, $$0169 = 0, $$0170 = 0, $$1167173 = 0, $$2176 = 0, $$3183$us = 0, $$alloca_mul = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = Math_fround(0), $60 = Math_fround(0), $61 = 0;
 var $62 = Math_fround(0), $63 = Math_fround(0), $64 = Math_fround(0), $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $exitcond = 0, $exitcond190 = 0, $exitcond191 = 0, $exitcond192 = 0, $exitcond193 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $13 = ((($0)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($0)) + 8|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 44|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = $18 << $9;
 $$alloca_mul = $19<<2;
 $20 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $21 = 1 << $9;
 $22 = ($8|0)==(0);
 $23 = ((($0)) + 36|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = $22 ? $9 : 0;
 $$0170 = (($24) - ($25))|0;
 $$0169 = $22 ? $19 : $18;
 $$0168 = $22 ? 1 : $21;
 $26 = ($7|0)==(2);
 $27 = ($6|0)==(1);
 $or$cond = $27 & $26;
 if ($or$cond) {
  _denormalise_bands($0,$1,$20,$3,$4,$5,$21,$10,$11);
  $28 = ((($2)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = (($14|0) / 2)&-1;
  $31 = (($29) + ($30<<2)|0);
  $32 = $19 << 2;
  _memcpy(($31|0),($20|0),($32|0))|0;
  $33 = ($$0168|0)>(0);
  if (!($33)) {
   STACKTOP = sp;return;
  }
  $34 = ((($0)) + 64|0);
  $35 = ((($0)) + 60|0);
  $$0166174 = 0;
  while(1) {
   $36 = (($31) + ($$0166174<<2)|0);
   $37 = HEAP32[$2>>2]|0;
   $38 = Math_imul($$0166174, $$0169)|0;
   $39 = (($37) + ($38<<2)|0);
   $40 = HEAP32[$35>>2]|0;
   _clt_mdct_backward_c($34,$36,$39,$40,$14,$$0170,$$0168,$12);
   $41 = (($$0166174) + 1)|0;
   $exitcond190 = ($41|0)==($$0168|0);
   if ($exitcond190) {
    break;
   } else {
    $$0166174 = $41;
   }
  }
  if (!($33)) {
   STACKTOP = sp;return;
  }
  $42 = ((($0)) + 64|0);
  $43 = ((($0)) + 60|0);
  $$1167173 = 0;
  while(1) {
   $44 = (($20) + ($$1167173<<2)|0);
   $45 = HEAP32[$28>>2]|0;
   $46 = Math_imul($$1167173, $$0169)|0;
   $47 = (($45) + ($46<<2)|0);
   $48 = HEAP32[$43>>2]|0;
   _clt_mdct_backward_c($42,$44,$47,$48,$14,$$0170,$$0168,$12);
   $49 = (($$1167173) + 1)|0;
   $exitcond = ($49|0)==($$0168|0);
   if ($exitcond) {
    break;
   } else {
    $$1167173 = $49;
   }
  }
  STACKTOP = sp;return;
 }
 $50 = ($7|0)==(1);
 $51 = ($6|0)==(2);
 $or$cond3 = $51 & $50;
 if ($or$cond3) {
  $52 = HEAP32[$2>>2]|0;
  $53 = (($14|0) / 2)&-1;
  $54 = (($52) + ($53<<2)|0);
  _denormalise_bands($0,$1,$20,$3,$4,$5,$21,$10,$11);
  $55 = (($1) + ($19<<2)|0);
  $56 = (($3) + ($16<<2)|0);
  _denormalise_bands($0,$55,$54,$56,$4,$5,$21,$10,$11);
  $57 = ($19|0)>(0);
  if ($57) {
   $$0164179 = 0;
   while(1) {
    $58 = (($20) + ($$0164179<<2)|0);
    $59 = Math_fround(HEAPF32[$58>>2]);
    $60 = Math_fround($59 * Math_fround(0.5));
    $61 = (($54) + ($$0164179<<2)|0);
    $62 = Math_fround(HEAPF32[$61>>2]);
    $63 = Math_fround($62 * Math_fround(0.5));
    $64 = Math_fround($60 + $63);
    HEAPF32[$58>>2] = $64;
    $65 = (($$0164179) + 1)|0;
    $exitcond192 = ($65|0)==($19|0);
    if ($exitcond192) {
     break;
    } else {
     $$0164179 = $65;
    }
   }
  }
  $66 = ($$0168|0)>(0);
  if (!($66)) {
   STACKTOP = sp;return;
  }
  $67 = ((($0)) + 64|0);
  $68 = ((($0)) + 60|0);
  $$2176 = 0;
  while(1) {
   $69 = (($20) + ($$2176<<2)|0);
   $70 = HEAP32[$2>>2]|0;
   $71 = Math_imul($$2176, $$0169)|0;
   $72 = (($70) + ($71<<2)|0);
   $73 = HEAP32[$68>>2]|0;
   _clt_mdct_backward_c($67,$69,$72,$73,$14,$$0170,$$0168,$12);
   $74 = (($$2176) + 1)|0;
   $exitcond191 = ($74|0)==($$0168|0);
   if ($exitcond191) {
    break;
   } else {
    $$2176 = $74;
   }
  }
  STACKTOP = sp;return;
 }
 $75 = ($$0168|0)>(0);
 $76 = ((($0)) + 64|0);
 $77 = ((($0)) + 60|0);
 if (!($75)) {
  $$0 = 0;
  while(1) {
   $91 = Math_imul($$0, $19)|0;
   $92 = (($1) + ($91<<2)|0);
   $93 = Math_imul($$0, $16)|0;
   $94 = (($3) + ($93<<2)|0);
   _denormalise_bands($0,$92,$20,$94,$4,$5,$21,$10,$11);
   $95 = (($$0) + 1)|0;
   $96 = ($95|0)<($7|0);
   if ($96) {
    $$0 = $95;
   } else {
    break;
   }
  }
  STACKTOP = sp;return;
 }
 $$0$us = 0;
 while(1) {
  $78 = Math_imul($$0$us, $19)|0;
  $79 = (($1) + ($78<<2)|0);
  $80 = Math_imul($$0$us, $16)|0;
  $81 = (($3) + ($80<<2)|0);
  _denormalise_bands($0,$79,$20,$81,$4,$5,$21,$10,$11);
  $82 = (($2) + ($$0$us<<2)|0);
  $$3183$us = 0;
  while(1) {
   $83 = (($20) + ($$3183$us<<2)|0);
   $84 = HEAP32[$82>>2]|0;
   $85 = Math_imul($$3183$us, $$0169)|0;
   $86 = (($84) + ($85<<2)|0);
   $87 = HEAP32[$77>>2]|0;
   _clt_mdct_backward_c($76,$83,$86,$87,$14,$$0170,$$0168,$12);
   $88 = (($$3183$us) + 1)|0;
   $exitcond193 = ($88|0)==($$0168|0);
   if ($exitcond193) {
    break;
   } else {
    $$3183$us = $88;
   }
  }
  $89 = (($$0$us) + 1)|0;
  $90 = ($89|0)<($7|0);
  if ($90) {
   $$0$us = $89;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _ec_tell_frac($0) {
 $0 = $0|0;
 var $$neg = 0, $$neg18 = 0, $$neg19 = 0, $$neg20 = 0, $$neg21 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 << 3;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (Math_clz32(($5|0))|0);
 $7 = (32 - ($6))|0;
 $8 = (($7) + -16)|0;
 $9 = $5 >>> $8;
 $10 = $9 >>> 12;
 $11 = (($10) + -8)|0;
 $12 = (5312 + ($11<<2)|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($9>>>0)>($13>>>0);
 $$neg = Math_imul($7, -8)|0;
 $$neg18 = (8 - ($10))|0;
 $$neg19 = $14 << 31 >> 31;
 $$neg20 = (($$neg) + ($3))|0;
 $$neg21 = (($$neg20) + ($$neg19))|0;
 $15 = (($$neg21) + ($$neg18))|0;
 return ($15|0);
}
function _ec_dec_init($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$masked$i$1 = 0, $$masked$i$2 = 0, $$pre = 0, $$pre$phi18Z2D = 0, $$pre$phiZ2D = 0, $$pre12$i = 0, $$pre17 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = $2;
 $4 = ((($0)) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($0)) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 16|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = 9;
 $8 = ((($0)) + 24|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($0)) + 28|0);
 HEAP32[$9>>2] = 128;
 $10 = ($2|0)==(0);
 if ($10) {
  $$pre12$i = 0;$14 = 0;
 } else {
  HEAP32[$8>>2] = 1;
  $11 = HEAP8[$1>>0]|0;
  $12 = $11&255;
  $$pre12$i = 1;$14 = $12;
 }
 $13 = ((($0)) + 40|0);
 HEAP32[$13>>2] = $14;
 $15 = $14 >>> 1;
 $16 = $15 ^ 127;
 $17 = ((($0)) + 32|0);
 HEAP32[$17>>2] = $16;
 $18 = ((($0)) + 44|0);
 HEAP32[$18>>2] = 0;
 HEAP32[$7>>2] = 17;
 HEAP32[$9>>2] = 32768;
 $19 = ($$pre12$i>>>0)<($2>>>0);
 $20 = (($$pre12$i) + 1)|0;
 if ($19) {
  $21 = (($1) + ($$pre12$i)|0);
  HEAP32[$8>>2] = $20;
  $22 = HEAP8[$21>>0]|0;
  $23 = $22&255;
  $$pre = $$pre12$i | 2;
  $$pre$phiZ2D = $$pre;$24 = $23;$33 = $20;
 } else {
  $$pre$phiZ2D = $20;$24 = 0;$33 = $$pre12$i;
 }
 HEAP32[$13>>2] = $24;
 $25 = $14 << 8;
 $26 = $24 | $25;
 $27 = $26 >>> 1;
 $28 = $16 << 8;
 $29 = $27 & 255;
 $30 = $28 | $29;
 $31 = $30 ^ 255;
 HEAP32[$17>>2] = $31;
 HEAP32[$7>>2] = 25;
 HEAP32[$9>>2] = 8388608;
 $32 = ($33>>>0)<($2>>>0);
 if ($32) {
  $34 = (($1) + ($33)|0);
  HEAP32[$8>>2] = $$pre$phiZ2D;
  $35 = HEAP8[$34>>0]|0;
  $36 = $35&255;
  $$pre17 = (($$pre$phiZ2D) + 1)|0;
  $$pre$phi18Z2D = $$pre17;$37 = $36;$46 = $$pre$phiZ2D;
 } else {
  $$pre$phi18Z2D = $$pre$phiZ2D;$37 = 0;$46 = $33;
 }
 HEAP32[$13>>2] = $37;
 $38 = $24 << 8;
 $39 = $37 | $38;
 $40 = $39 >>> 1;
 $41 = $31 << 8;
 $42 = $40 & 255;
 $$masked$i$1 = $41 & 2147483392;
 $43 = $$masked$i$1 | $42;
 $44 = $43 ^ 255;
 HEAP32[$17>>2] = $44;
 HEAP32[$7>>2] = 33;
 HEAP32[$9>>2] = -2147483648;
 $45 = ($46>>>0)<($2>>>0);
 if (!($45)) {
  $50 = 0;
  HEAP32[$13>>2] = $50;
  $51 = $37 << 8;
  $52 = $50 | $51;
  $53 = $52 >>> 1;
  $54 = $44 << 8;
  $55 = $53 & 255;
  $$masked$i$2 = $54 & 2147483392;
  $56 = $$masked$i$2 | $55;
  $57 = $56 ^ 255;
  HEAP32[$17>>2] = $57;
  return;
 }
 $47 = (($1) + ($46)|0);
 HEAP32[$8>>2] = $$pre$phi18Z2D;
 $48 = HEAP8[$47>>0]|0;
 $49 = $48&255;
 $50 = $49;
 HEAP32[$13>>2] = $50;
 $51 = $37 << 8;
 $52 = $50 | $51;
 $53 = $52 >>> 1;
 $54 = $44 << 8;
 $55 = $53 & 255;
 $$masked$i$2 = $54 & 2147483392;
 $56 = $$masked$i$2 | $55;
 $57 = $56 ^ 255;
 HEAP32[$17>>2] = $57;
 return;
}
function _ec_decode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3>>>0) / ($1>>>0))&-1;
 $5 = ((($0)) + 36|0);
 HEAP32[$5>>2] = $4;
 $6 = ((($0)) + 32|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7>>>0) / ($4>>>0))&-1;
 $9 = (($8) + 1)|0;
 $10 = ($9>>>0)>($1>>>0);
 $11 = $10 ? $1 : $9;
 $12 = (($1) - ($11))|0;
 return ($12|0);
}
function _ec_decode_bin($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 >>> $1;
 $5 = ((($0)) + 36|0);
 HEAP32[$5>>2] = $4;
 $6 = ((($0)) + 32|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7>>>0) / ($4>>>0))&-1;
 $9 = 1 << $1;
 $10 = (($8) + 1)|0;
 $11 = ($9>>>0)<($10>>>0);
 $12 = $11 ? $9 : $10;
 $13 = (($9) - ($12))|0;
 return ($13|0);
}
function _ec_dec_update($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$masked$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phiZ2D = 0, $$pre11$i = 0, $$pre12$i = 0, $$pre13$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 36|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) - ($2))|0;
 $7 = Math_imul($5, $6)|0;
 $8 = ((($0)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) - ($7))|0;
 HEAP32[$8>>2] = $10;
 $11 = ($1|0)==(0);
 if ($11) {
  $14 = ((($0)) + 28|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($15) - ($7))|0;
  $$pre$phiZ2D = $14;$17 = $16;
 } else {
  $12 = (($2) - ($1))|0;
  $13 = Math_imul($5, $12)|0;
  $$pre = ((($0)) + 28|0);
  $$pre$phiZ2D = $$pre;$17 = $13;
 }
 HEAP32[$$pre$phiZ2D>>2] = $17;
 $18 = ($17>>>0)<(8388609);
 if (!($18)) {
  return;
 }
 $19 = ((($0)) + 20|0);
 $20 = ((($0)) + 40|0);
 $21 = ((($0)) + 24|0);
 $22 = ((($0)) + 4|0);
 $$pre$i = HEAP32[$19>>2]|0;
 $$pre11$i = HEAP32[$20>>2]|0;
 $$pre12$i = HEAP32[$21>>2]|0;
 $$pre13$i = HEAP32[$22>>2]|0;
 $24 = $$pre$i;$26 = $17;$28 = $$pre12$i;$36 = $$pre11$i;$40 = $10;
 while(1) {
  $23 = (($24) + 8)|0;
  HEAP32[$19>>2] = $23;
  $25 = $26 << 8;
  HEAP32[$$pre$phiZ2D>>2] = $25;
  $27 = ($28>>>0)<($$pre13$i>>>0);
  if ($27) {
   $29 = HEAP32[$0>>2]|0;
   $30 = (($28) + 1)|0;
   HEAP32[$21>>2] = $30;
   $31 = (($29) + ($28)|0);
   $32 = HEAP8[$31>>0]|0;
   $33 = $32&255;
   $34 = $33;$45 = $30;
  } else {
   $34 = 0;$45 = $28;
  }
  HEAP32[$20>>2] = $34;
  $35 = $36 << 8;
  $37 = $34 | $35;
  $38 = $37 >>> 1;
  $39 = $40 << 8;
  $41 = $38 & 255;
  $$masked$i = $39 & 2147483392;
  $42 = $$masked$i | $41;
  $43 = $42 ^ 255;
  HEAP32[$8>>2] = $43;
  $44 = ($25>>>0)<(8388609);
  if ($44) {
   $24 = $23;$26 = $25;$28 = $45;$36 = $34;$40 = $43;
  } else {
   break;
  }
 }
 return;
}
function _ec_dec_bit_logp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$masked$i = 0, $$pre$i = 0, $$pre11$i = 0, $$pre12$i = 0, $$pre13$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 32|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3 >>> $1;
 $7 = ($5>>>0)<($6>>>0);
 $8 = $7&1;
 if ($7) {
  $11 = $6;$39 = $5;
 } else {
  $9 = (($3) - ($6))|0;
  $10 = (($5) - ($6))|0;
  HEAP32[$4>>2] = $10;
  $11 = $9;$39 = $10;
 }
 HEAP32[$2>>2] = $11;
 $12 = ($11>>>0)<(8388609);
 if (!($12)) {
  return ($8|0);
 }
 $13 = ((($0)) + 20|0);
 $14 = ((($0)) + 40|0);
 $15 = ((($0)) + 24|0);
 $16 = ((($0)) + 4|0);
 $$pre$i = HEAP32[$13>>2]|0;
 $$pre11$i = HEAP32[$14>>2]|0;
 $$pre12$i = HEAP32[$15>>2]|0;
 $$pre13$i = HEAP32[$16>>2]|0;
 $18 = $$pre$i;$20 = $11;$22 = $$pre12$i;$30 = $$pre11$i;$34 = $39;
 while(1) {
  $17 = (($18) + 8)|0;
  HEAP32[$13>>2] = $17;
  $19 = $20 << 8;
  HEAP32[$2>>2] = $19;
  $21 = ($22>>>0)<($$pre13$i>>>0);
  if ($21) {
   $23 = HEAP32[$0>>2]|0;
   $24 = (($22) + 1)|0;
   HEAP32[$15>>2] = $24;
   $25 = (($23) + ($22)|0);
   $26 = HEAP8[$25>>0]|0;
   $27 = $26&255;
   $28 = $27;$40 = $24;
  } else {
   $28 = 0;$40 = $22;
  }
  HEAP32[$14>>2] = $28;
  $29 = $30 << 8;
  $31 = $28 | $29;
  $32 = $31 >>> 1;
  $33 = $34 << 8;
  $35 = $32 & 255;
  $$masked$i = $33 & 2147483392;
  $36 = $$masked$i | $35;
  $37 = $36 ^ 255;
  HEAP32[$4>>2] = $37;
  $38 = ($19>>>0)<(8388609);
  if ($38) {
   $18 = $17;$20 = $19;$22 = $40;$30 = $28;$34 = $37;
  } else {
   break;
  }
 }
 return ($8|0);
}
function _ec_dec_icdf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$026 = 0, $$masked$i = 0, $$pre$i = 0, $$pre11$i = 0, $$pre12$i = 0, $$pre13$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $4 >>> $2;
 $$0 = -1;$$026 = $4;
 while(1) {
  $8 = (($$0) + 1)|0;
  $9 = (($1) + ($8)|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = $10&255;
  $12 = Math_imul($7, $11)|0;
  $13 = ($6>>>0)<($12>>>0);
  if ($13) {
   $$0 = $8;$$026 = $12;
  } else {
   break;
  }
 }
 $14 = (($6) - ($12))|0;
 HEAP32[$5>>2] = $14;
 $15 = (($$026) - ($12))|0;
 HEAP32[$3>>2] = $15;
 $16 = ($15>>>0)<(8388609);
 if (!($16)) {
  return ($8|0);
 }
 $17 = ((($0)) + 20|0);
 $18 = ((($0)) + 40|0);
 $19 = ((($0)) + 24|0);
 $20 = ((($0)) + 4|0);
 $$pre$i = HEAP32[$17>>2]|0;
 $$pre11$i = HEAP32[$18>>2]|0;
 $$pre12$i = HEAP32[$19>>2]|0;
 $$pre13$i = HEAP32[$20>>2]|0;
 $22 = $$pre$i;$24 = $15;$26 = $$pre12$i;$34 = $$pre11$i;$38 = $14;
 while(1) {
  $21 = (($22) + 8)|0;
  HEAP32[$17>>2] = $21;
  $23 = $24 << 8;
  HEAP32[$3>>2] = $23;
  $25 = ($26>>>0)<($$pre13$i>>>0);
  if ($25) {
   $27 = HEAP32[$0>>2]|0;
   $28 = (($26) + 1)|0;
   HEAP32[$19>>2] = $28;
   $29 = (($27) + ($26)|0);
   $30 = HEAP8[$29>>0]|0;
   $31 = $30&255;
   $32 = $31;$43 = $28;
  } else {
   $32 = 0;$43 = $26;
  }
  HEAP32[$18>>2] = $32;
  $33 = $34 << 8;
  $35 = $32 | $33;
  $36 = $35 >>> 1;
  $37 = $38 << 8;
  $39 = $36 & 255;
  $$masked$i = $37 & 2147483392;
  $40 = $$masked$i | $39;
  $41 = $40 ^ 255;
  HEAP32[$5>>2] = $41;
  $42 = ($23>>>0)<(8388609);
  if ($42) {
   $22 = $21;$24 = $23;$26 = $43;$34 = $32;$38 = $41;
  } else {
   break;
  }
 }
 return ($8|0);
}
function _ec_dec_uint($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$026$i = 0, $$1 = 0, $$1$i = 0, $$127$i = 0, $$masked$i$i = 0, $$masked$i$i44 = 0, $$pre$i$i = 0, $$pre$i$i39 = 0, $$pre$i36 = 0, $$pre11$i$i = 0, $$pre11$i$i40 = 0, $$pre12$i$i = 0, $$pre12$i$i41 = 0, $$pre13$i$i = 0, $$pre13$i$i42 = 0, $$pre30$i = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $smax$i = 0, $spec$select = 0, $spec$select47 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1) + -1)|0;
 $3 = (Math_clz32(($2|0))|0);
 $4 = (32 - ($3))|0;
 $5 = ($4|0)>(8);
 if (!($5)) {
  $90 = ((($0)) + 28|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = (($91>>>0) / ($1>>>0))&-1;
  $93 = ((($0)) + 36|0);
  HEAP32[$93>>2] = $92;
  $94 = ((($0)) + 32|0);
  $95 = HEAP32[$94>>2]|0;
  $96 = (($95>>>0) / ($92>>>0))&-1;
  $97 = (($96) + 1)|0;
  $98 = ($97>>>0)>($1>>>0);
  $99 = $98 ? $1 : $97;
  $100 = (($1) - ($99))|0;
  $101 = (($2) - ($100))|0;
  $102 = Math_imul($101, $92)|0;
  $103 = (($95) - ($102))|0;
  HEAP32[$94>>2] = $103;
  $104 = ($100|0)==(0);
  $105 = (($91) - ($102))|0;
  $spec$select47 = $104 ? $105 : $92;
  HEAP32[$90>>2] = $spec$select47;
  $106 = ($spec$select47>>>0)<(8388609);
  if (!($106)) {
   $$1 = $100;
   return ($$1|0);
  }
  $107 = ((($0)) + 20|0);
  $108 = ((($0)) + 40|0);
  $109 = ((($0)) + 24|0);
  $110 = ((($0)) + 4|0);
  $$pre$i$i = HEAP32[$107>>2]|0;
  $$pre11$i$i = HEAP32[$108>>2]|0;
  $$pre12$i$i = HEAP32[$109>>2]|0;
  $$pre13$i$i = HEAP32[$110>>2]|0;
  $112 = $$pre$i$i;$114 = $spec$select47;$116 = $$pre12$i$i;$124 = $$pre11$i$i;$128 = $103;
  while(1) {
   $111 = (($112) + 8)|0;
   HEAP32[$107>>2] = $111;
   $113 = $114 << 8;
   HEAP32[$90>>2] = $113;
   $115 = ($116>>>0)<($$pre13$i$i>>>0);
   if ($115) {
    $117 = HEAP32[$0>>2]|0;
    $118 = (($116) + 1)|0;
    HEAP32[$109>>2] = $118;
    $119 = (($117) + ($116)|0);
    $120 = HEAP8[$119>>0]|0;
    $121 = $120&255;
    $122 = $121;$135 = $118;
   } else {
    $122 = 0;$135 = $116;
   }
   HEAP32[$108>>2] = $122;
   $123 = $124 << 8;
   $125 = $122 | $123;
   $126 = $125 >>> 1;
   $127 = $128 << 8;
   $129 = $126 & 255;
   $$masked$i$i = $127 & 2147483392;
   $130 = $129 | $$masked$i$i;
   $131 = $130 ^ 255;
   HEAP32[$94>>2] = $131;
   $132 = ($113>>>0)<(8388609);
   if ($132) {
    $112 = $111;$114 = $113;$116 = $135;$124 = $122;$128 = $131;
   } else {
    $$1 = $100;
    break;
   }
  }
  return ($$1|0);
 }
 $6 = (($4) + -8)|0;
 $7 = $2 >>> $6;
 $8 = (($7) + 1)|0;
 $9 = ((($0)) + 28|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($10>>>0) / ($8>>>0))&-1;
 $12 = ((($0)) + 36|0);
 HEAP32[$12>>2] = $11;
 $13 = ((($0)) + 32|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($14>>>0) / ($11>>>0))&-1;
 $16 = (($15) + 1)|0;
 $17 = ($16>>>0)>($8>>>0);
 $18 = $17 ? $8 : $16;
 $19 = (($8) - ($18))|0;
 $20 = (($7) - ($19))|0;
 $21 = Math_imul($20, $11)|0;
 $22 = (($14) - ($21))|0;
 HEAP32[$13>>2] = $22;
 $23 = ($19|0)==(0);
 $24 = (($10) - ($21))|0;
 $spec$select = $23 ? $24 : $11;
 HEAP32[$9>>2] = $spec$select;
 $25 = ($spec$select>>>0)<(8388609);
 if ($25) {
  $26 = ((($0)) + 20|0);
  $27 = ((($0)) + 40|0);
  $28 = ((($0)) + 24|0);
  $29 = ((($0)) + 4|0);
  $$pre$i$i39 = HEAP32[$26>>2]|0;
  $$pre11$i$i40 = HEAP32[$27>>2]|0;
  $$pre12$i$i41 = HEAP32[$28>>2]|0;
  $$pre13$i$i42 = HEAP32[$29>>2]|0;
  $31 = $$pre$i$i39;$33 = $spec$select;$35 = $$pre12$i$i41;$43 = $$pre11$i$i40;$47 = $22;
  while(1) {
   $30 = (($31) + 8)|0;
   HEAP32[$26>>2] = $30;
   $32 = $33 << 8;
   HEAP32[$9>>2] = $32;
   $34 = ($35>>>0)<($$pre13$i$i42>>>0);
   if ($34) {
    $36 = HEAP32[$0>>2]|0;
    $37 = (($35) + 1)|0;
    HEAP32[$28>>2] = $37;
    $38 = (($36) + ($35)|0);
    $39 = HEAP8[$38>>0]|0;
    $40 = $39&255;
    $133 = $37;$41 = $40;
   } else {
    $133 = $35;$41 = 0;
   }
   HEAP32[$27>>2] = $41;
   $42 = $43 << 8;
   $44 = $41 | $42;
   $45 = $44 >>> 1;
   $46 = $47 << 8;
   $48 = $45 & 255;
   $$masked$i$i44 = $46 & 2147483392;
   $49 = $48 | $$masked$i$i44;
   $50 = $49 ^ 255;
   HEAP32[$13>>2] = $50;
   $51 = ($32>>>0)<(8388609);
   if ($51) {
    $31 = $30;$33 = $32;$35 = $133;$43 = $41;$47 = $50;
   } else {
    break;
   }
  }
 }
 $52 = $19 << $6;
 $53 = ((($0)) + 12|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = ((($0)) + 16|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = ($56>>>0)<($6>>>0);
 if ($57) {
  $58 = ((($0)) + 8|0);
  $59 = ((($0)) + 4|0);
  $60 = ($56|0)>(17);
  $smax$i = $60 ? $56 : 17;
  $61 = (7 - ($56))|0;
  $62 = (($61) + ($smax$i))|0;
  $$pre$i36 = HEAP32[$58>>2]|0;
  $$pre30$i = HEAP32[$59>>2]|0;
  $$0$i = $54;$$026$i = $56;$64 = $$pre$i36;
  while(1) {
   $63 = ($64>>>0)<($$pre30$i>>>0);
   if ($63) {
    $65 = HEAP32[$0>>2]|0;
    $66 = (($64) + 1)|0;
    HEAP32[$58>>2] = $66;
    $67 = (($$pre30$i) - ($66))|0;
    $68 = (($65) + ($67)|0);
    $69 = HEAP8[$68>>0]|0;
    $70 = $69&255;
    $134 = $66;$72 = $70;
   } else {
    $134 = $64;$72 = 0;
   }
   $71 = $72 << $$026$i;
   $73 = $71 | $$0$i;
   $74 = (($$026$i) + 8)|0;
   $75 = ($$026$i|0)<(17);
   if ($75) {
    $$0$i = $73;$$026$i = $74;$64 = $134;
   } else {
    break;
   }
  }
  $76 = $62 & -8;
  $77 = (($56) + 8)|0;
  $78 = (($77) + ($76))|0;
  $$1$i = $73;$$127$i = $78;
 } else {
  $$1$i = $54;$$127$i = $56;
 }
 $79 = 1 << $6;
 $80 = (($79) + -1)|0;
 $81 = $$1$i & $80;
 $82 = $$1$i >>> $6;
 $83 = (($$127$i) - ($6))|0;
 HEAP32[$53>>2] = $82;
 HEAP32[$55>>2] = $83;
 $84 = ((($0)) + 20|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = (($85) + ($6))|0;
 HEAP32[$84>>2] = $86;
 $87 = $81 | $52;
 $88 = ($87>>>0)>($2>>>0);
 if (!($88)) {
  $$1 = $87;
  return ($$1|0);
 }
 $89 = ((($0)) + 44|0);
 HEAP32[$89>>2] = 1;
 $$1 = $2;
 return ($$1|0);
}
function _ec_dec_bits($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$026 = 0, $$1 = 0, $$127 = 0, $$pre = 0, $$pre30 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $smax = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5>>>0)<($1>>>0);
 if ($6) {
  $7 = ((($0)) + 8|0);
  $8 = ((($0)) + 4|0);
  $9 = ($5|0)>(17);
  $smax = $9 ? $5 : 17;
  $10 = (($smax) + 7)|0;
  $11 = (($10) - ($5))|0;
  $12 = $11 & -8;
  $13 = (($5) + ($12))|0;
  $$pre = HEAP32[$7>>2]|0;
  $$pre30 = HEAP32[$8>>2]|0;
  $$0 = $3;$$026 = $5;$15 = $$pre;
  while(1) {
   $14 = ($15>>>0)<($$pre30>>>0);
   if ($14) {
    $16 = HEAP32[$0>>2]|0;
    $17 = (($15) + 1)|0;
    HEAP32[$7>>2] = $17;
    $18 = (($$pre30) - ($17))|0;
    $19 = (($16) + ($18)|0);
    $20 = HEAP8[$19>>0]|0;
    $21 = $20&255;
    $23 = $21;$36 = $17;
   } else {
    $23 = 0;$36 = $15;
   }
   $22 = $23 << $$026;
   $24 = $22 | $$0;
   $25 = (($$026) + 8)|0;
   $26 = ($$026|0)<(17);
   if ($26) {
    $$0 = $24;$$026 = $25;$15 = $36;
   } else {
    break;
   }
  }
  $27 = (($13) + 8)|0;
  $$1 = $24;$$127 = $27;
 } else {
  $$1 = $3;$$127 = $5;
 }
 $28 = 1 << $1;
 $29 = (($28) + -1)|0;
 $30 = $$1 & $29;
 $31 = $$1 >>> $1;
 $32 = (($$127) - ($1))|0;
 HEAP32[$2>>2] = $31;
 HEAP32[$4>>2] = $32;
 $33 = ((($0)) + 20|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (($34) + ($1))|0;
 HEAP32[$33>>2] = $35;
 return ($30|0);
}
function _ec_enc_init($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($0)) + 16|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 20|0);
 HEAP32[$6>>2] = 33;
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = 0;
 $8 = ((($0)) + 28|0);
 HEAP32[$8>>2] = -2147483648;
 $9 = ((($0)) + 40|0);
 HEAP32[$9>>2] = -1;
 $10 = ((($0)) + 32|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($0)) + 36|0);
 HEAP32[$11>>2] = 0;
 $12 = ((($0)) + 4|0);
 HEAP32[$12>>2] = $2;
 $13 = ((($0)) + 44|0);
 HEAP32[$13>>2] = 0;
 return;
}
function _ec_encode($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i$i$i = 0, $$0$i18$i$i = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre7$i = 0, $$pre8$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, $storemerge = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5>>>0) / ($3>>>0))&-1;
 $7 = ($1|0)==(0);
 if ($7) {
  $16 = (($3) - ($2))|0;
  $17 = Math_imul($6, $16)|0;
  $18 = (($5) - ($17))|0;
  $storemerge = $18;
 } else {
  $8 = (($3) - ($1))|0;
  $9 = Math_imul($6, $8)|0;
  $10 = (($5) - ($9))|0;
  $11 = ((($0)) + 32|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($10) + ($12))|0;
  HEAP32[$11>>2] = $13;
  $14 = (($2) - ($1))|0;
  $15 = Math_imul($6, $14)|0;
  $storemerge = $15;
 }
 HEAP32[$4>>2] = $storemerge;
 $19 = ($storemerge>>>0)<(8388609);
 if (!($19)) {
  return;
 }
 $20 = ((($0)) + 32|0);
 $21 = ((($0)) + 36|0);
 $22 = ((($0)) + 20|0);
 $23 = ((($0)) + 40|0);
 $24 = ((($0)) + 24|0);
 $25 = ((($0)) + 8|0);
 $26 = ((($0)) + 4|0);
 $27 = ((($0)) + 44|0);
 $$pre$i = HEAP32[$20>>2]|0;
 $29 = $$pre$i;$74 = $storemerge;
 while(1) {
  $28 = $29 >>> 23;
  $30 = ($28|0)==(255);
  if ($30) {
   $64 = HEAP32[$21>>2]|0;
   $65 = (($64) + 1)|0;
   HEAP32[$21>>2] = $65;
   $67 = $29;$70 = $74;
  } else {
   $31 = $29 >>> 31;
   $32 = HEAP32[$23>>2]|0;
   $33 = ($32|0)>(-1);
   if ($33) {
    $34 = HEAP32[$24>>2]|0;
    $35 = HEAP32[$25>>2]|0;
    $36 = (($35) + ($34))|0;
    $37 = HEAP32[$26>>2]|0;
    $38 = ($36>>>0)<($37>>>0);
    if ($38) {
     $39 = (($32) + ($31))|0;
     $40 = $39&255;
     $41 = HEAP32[$0>>2]|0;
     $42 = (($34) + 1)|0;
     HEAP32[$24>>2] = $42;
     $43 = (($41) + ($34)|0);
     HEAP8[$43>>0] = $40;
     $$0$i$i$i = 0;
    } else {
     $$0$i$i$i = -1;
    }
    $44 = HEAP32[$27>>2]|0;
    $45 = $44 | $$0$i$i$i;
    HEAP32[$27>>2] = $45;
   }
   $46 = HEAP32[$21>>2]|0;
   $47 = ($46|0)==(0);
   if (!($47)) {
    $48 = (($31) + 255)|0;
    $49 = $48&255;
    $75 = $46;
    while(1) {
     $50 = HEAP32[$24>>2]|0;
     $51 = HEAP32[$25>>2]|0;
     $52 = (($51) + ($50))|0;
     $53 = HEAP32[$26>>2]|0;
     $54 = ($52>>>0)<($53>>>0);
     if ($54) {
      $55 = HEAP32[$0>>2]|0;
      $56 = (($50) + 1)|0;
      HEAP32[$24>>2] = $56;
      $57 = (($55) + ($50)|0);
      HEAP8[$57>>0] = $49;
      $$pre$i$i = HEAP32[$21>>2]|0;
      $$0$i18$i$i = 0;$61 = $$pre$i$i;
     } else {
      $$0$i18$i$i = -1;$61 = $75;
     }
     $58 = HEAP32[$27>>2]|0;
     $59 = $58 | $$0$i18$i$i;
     HEAP32[$27>>2] = $59;
     $60 = (($61) + -1)|0;
     HEAP32[$21>>2] = $60;
     $62 = ($60|0)==(0);
     if ($62) {
      break;
     } else {
      $75 = $60;
     }
    }
   }
   $63 = $28 & 255;
   HEAP32[$23>>2] = $63;
   $$pre7$i = HEAP32[$20>>2]|0;
   $$pre8$i = HEAP32[$4>>2]|0;
   $67 = $$pre7$i;$70 = $$pre8$i;
  }
  $66 = $67 << 8;
  $68 = $66 & 2147483392;
  HEAP32[$20>>2] = $68;
  $69 = $70 << 8;
  HEAP32[$4>>2] = $69;
  $71 = HEAP32[$22>>2]|0;
  $72 = (($71) + 8)|0;
  HEAP32[$22>>2] = $72;
  $73 = ($69>>>0)<(8388609);
  if ($73) {
   $29 = $68;$74 = $69;
  } else {
   break;
  }
 }
 return;
}
function _ec_encode_bin($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i$i$i = 0, $$0$i18$i$i = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre7$i = 0, $$pre8$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $storemerge = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 >>> $3;
 $7 = ($1|0)==(0);
 $8 = 1 << $3;
 if ($7) {
  $17 = (($8) - ($2))|0;
  $18 = Math_imul($6, $17)|0;
  $19 = (($5) - ($18))|0;
  $storemerge = $19;
 } else {
  $9 = (($8) - ($1))|0;
  $10 = Math_imul($6, $9)|0;
  $11 = (($5) - ($10))|0;
  $12 = ((($0)) + 32|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($11) + ($13))|0;
  HEAP32[$12>>2] = $14;
  $15 = (($2) - ($1))|0;
  $16 = Math_imul($6, $15)|0;
  $storemerge = $16;
 }
 HEAP32[$4>>2] = $storemerge;
 $20 = ($storemerge>>>0)<(8388609);
 if (!($20)) {
  return;
 }
 $21 = ((($0)) + 32|0);
 $22 = ((($0)) + 36|0);
 $23 = ((($0)) + 20|0);
 $24 = ((($0)) + 40|0);
 $25 = ((($0)) + 24|0);
 $26 = ((($0)) + 8|0);
 $27 = ((($0)) + 4|0);
 $28 = ((($0)) + 44|0);
 $$pre$i = HEAP32[$21>>2]|0;
 $30 = $$pre$i;$75 = $storemerge;
 while(1) {
  $29 = $30 >>> 23;
  $31 = ($29|0)==(255);
  if ($31) {
   $65 = HEAP32[$22>>2]|0;
   $66 = (($65) + 1)|0;
   HEAP32[$22>>2] = $66;
   $68 = $30;$71 = $75;
  } else {
   $32 = $30 >>> 31;
   $33 = HEAP32[$24>>2]|0;
   $34 = ($33|0)>(-1);
   if ($34) {
    $35 = HEAP32[$25>>2]|0;
    $36 = HEAP32[$26>>2]|0;
    $37 = (($36) + ($35))|0;
    $38 = HEAP32[$27>>2]|0;
    $39 = ($37>>>0)<($38>>>0);
    if ($39) {
     $40 = (($33) + ($32))|0;
     $41 = $40&255;
     $42 = HEAP32[$0>>2]|0;
     $43 = (($35) + 1)|0;
     HEAP32[$25>>2] = $43;
     $44 = (($42) + ($35)|0);
     HEAP8[$44>>0] = $41;
     $$0$i$i$i = 0;
    } else {
     $$0$i$i$i = -1;
    }
    $45 = HEAP32[$28>>2]|0;
    $46 = $45 | $$0$i$i$i;
    HEAP32[$28>>2] = $46;
   }
   $47 = HEAP32[$22>>2]|0;
   $48 = ($47|0)==(0);
   if (!($48)) {
    $49 = (($32) + 255)|0;
    $50 = $49&255;
    $76 = $47;
    while(1) {
     $51 = HEAP32[$25>>2]|0;
     $52 = HEAP32[$26>>2]|0;
     $53 = (($52) + ($51))|0;
     $54 = HEAP32[$27>>2]|0;
     $55 = ($53>>>0)<($54>>>0);
     if ($55) {
      $56 = HEAP32[$0>>2]|0;
      $57 = (($51) + 1)|0;
      HEAP32[$25>>2] = $57;
      $58 = (($56) + ($51)|0);
      HEAP8[$58>>0] = $50;
      $$pre$i$i = HEAP32[$22>>2]|0;
      $$0$i18$i$i = 0;$62 = $$pre$i$i;
     } else {
      $$0$i18$i$i = -1;$62 = $76;
     }
     $59 = HEAP32[$28>>2]|0;
     $60 = $59 | $$0$i18$i$i;
     HEAP32[$28>>2] = $60;
     $61 = (($62) + -1)|0;
     HEAP32[$22>>2] = $61;
     $63 = ($61|0)==(0);
     if ($63) {
      break;
     } else {
      $76 = $61;
     }
    }
   }
   $64 = $29 & 255;
   HEAP32[$24>>2] = $64;
   $$pre7$i = HEAP32[$21>>2]|0;
   $$pre8$i = HEAP32[$4>>2]|0;
   $68 = $$pre7$i;$71 = $$pre8$i;
  }
  $67 = $68 << 8;
  $69 = $67 & 2147483392;
  HEAP32[$21>>2] = $69;
  $70 = $71 << 8;
  HEAP32[$4>>2] = $70;
  $72 = HEAP32[$23>>2]|0;
  $73 = (($72) + 8)|0;
  HEAP32[$23>>2] = $73;
  $74 = ($70>>>0)<(8388609);
  if ($74) {
   $30 = $69;$75 = $70;
  } else {
   break;
  }
 }
 return;
}
function _ec_enc_bit_logp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i$i$i = 0, $$0$i18$i$i = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre7$i = 0, $$pre8$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 32|0);
 $6 = $4 >>> $2;
 $7 = (($4) - ($6))|0;
 $8 = ($1|0)!=(0);
 if ($8) {
  $9 = HEAP32[$5>>2]|0;
  $10 = (($9) + ($7))|0;
  HEAP32[$5>>2] = $10;
 }
 $11 = $8 ? $6 : $7;
 HEAP32[$3>>2] = $11;
 $12 = ($11>>>0)<(8388609);
 if (!($12)) {
  return;
 }
 $13 = ((($0)) + 36|0);
 $14 = ((($0)) + 20|0);
 $15 = ((($0)) + 40|0);
 $16 = ((($0)) + 24|0);
 $17 = ((($0)) + 8|0);
 $18 = ((($0)) + 4|0);
 $19 = ((($0)) + 44|0);
 $$pre$i = HEAP32[$5>>2]|0;
 $21 = $$pre$i;$66 = $11;
 while(1) {
  $20 = $21 >>> 23;
  $22 = ($20|0)==(255);
  if ($22) {
   $56 = HEAP32[$13>>2]|0;
   $57 = (($56) + 1)|0;
   HEAP32[$13>>2] = $57;
   $59 = $21;$62 = $66;
  } else {
   $23 = $21 >>> 31;
   $24 = HEAP32[$15>>2]|0;
   $25 = ($24|0)>(-1);
   if ($25) {
    $26 = HEAP32[$16>>2]|0;
    $27 = HEAP32[$17>>2]|0;
    $28 = (($27) + ($26))|0;
    $29 = HEAP32[$18>>2]|0;
    $30 = ($28>>>0)<($29>>>0);
    if ($30) {
     $31 = (($24) + ($23))|0;
     $32 = $31&255;
     $33 = HEAP32[$0>>2]|0;
     $34 = (($26) + 1)|0;
     HEAP32[$16>>2] = $34;
     $35 = (($33) + ($26)|0);
     HEAP8[$35>>0] = $32;
     $$0$i$i$i = 0;
    } else {
     $$0$i$i$i = -1;
    }
    $36 = HEAP32[$19>>2]|0;
    $37 = $36 | $$0$i$i$i;
    HEAP32[$19>>2] = $37;
   }
   $38 = HEAP32[$13>>2]|0;
   $39 = ($38|0)==(0);
   if (!($39)) {
    $40 = (($23) + 255)|0;
    $41 = $40&255;
    $67 = $38;
    while(1) {
     $42 = HEAP32[$16>>2]|0;
     $43 = HEAP32[$17>>2]|0;
     $44 = (($43) + ($42))|0;
     $45 = HEAP32[$18>>2]|0;
     $46 = ($44>>>0)<($45>>>0);
     if ($46) {
      $47 = HEAP32[$0>>2]|0;
      $48 = (($42) + 1)|0;
      HEAP32[$16>>2] = $48;
      $49 = (($47) + ($42)|0);
      HEAP8[$49>>0] = $41;
      $$pre$i$i = HEAP32[$13>>2]|0;
      $$0$i18$i$i = 0;$53 = $$pre$i$i;
     } else {
      $$0$i18$i$i = -1;$53 = $67;
     }
     $50 = HEAP32[$19>>2]|0;
     $51 = $50 | $$0$i18$i$i;
     HEAP32[$19>>2] = $51;
     $52 = (($53) + -1)|0;
     HEAP32[$13>>2] = $52;
     $54 = ($52|0)==(0);
     if ($54) {
      break;
     } else {
      $67 = $52;
     }
    }
   }
   $55 = $20 & 255;
   HEAP32[$15>>2] = $55;
   $$pre7$i = HEAP32[$5>>2]|0;
   $$pre8$i = HEAP32[$3>>2]|0;
   $59 = $$pre7$i;$62 = $$pre8$i;
  }
  $58 = $59 << 8;
  $60 = $58 & 2147483392;
  HEAP32[$5>>2] = $60;
  $61 = $62 << 8;
  HEAP32[$3>>2] = $61;
  $63 = HEAP32[$14>>2]|0;
  $64 = (($63) + 8)|0;
  HEAP32[$14>>2] = $64;
  $65 = ($61>>>0)<(8388609);
  if ($65) {
   $21 = $60;$66 = $61;
  } else {
   break;
  }
 }
 return;
}
function _ec_enc_icdf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i$i$i = 0, $$0$i18$i$i = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre7$i = 0, $$pre8$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 >>> $3;
 $7 = ($1|0)>(0);
 if ($7) {
  $8 = (($1) + -1)|0;
  $9 = (($2) + ($8)|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = $10&255;
  $12 = Math_imul($6, $11)|0;
  $13 = ((($0)) + 32|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + ($5))|0;
  $16 = (($15) - ($12))|0;
  HEAP32[$13>>2] = $16;
  $17 = HEAP8[$9>>0]|0;
  $18 = $17&255;
  $19 = (($2) + ($1)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20&255;
  $22 = (($18) - ($21))|0;
  $23 = Math_imul($22, $6)|0;
  $storemerge = $23;
 } else {
  $24 = (($2) + ($1)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25&255;
  $27 = Math_imul($6, $26)|0;
  $28 = (($5) - ($27))|0;
  $storemerge = $28;
 }
 HEAP32[$4>>2] = $storemerge;
 $29 = ($storemerge>>>0)<(8388609);
 if (!($29)) {
  return;
 }
 $30 = ((($0)) + 32|0);
 $31 = ((($0)) + 36|0);
 $32 = ((($0)) + 20|0);
 $33 = ((($0)) + 40|0);
 $34 = ((($0)) + 24|0);
 $35 = ((($0)) + 8|0);
 $36 = ((($0)) + 4|0);
 $37 = ((($0)) + 44|0);
 $$pre$i = HEAP32[$30>>2]|0;
 $39 = $$pre$i;$84 = $storemerge;
 while(1) {
  $38 = $39 >>> 23;
  $40 = ($38|0)==(255);
  if ($40) {
   $74 = HEAP32[$31>>2]|0;
   $75 = (($74) + 1)|0;
   HEAP32[$31>>2] = $75;
   $77 = $39;$80 = $84;
  } else {
   $41 = $39 >>> 31;
   $42 = HEAP32[$33>>2]|0;
   $43 = ($42|0)>(-1);
   if ($43) {
    $44 = HEAP32[$34>>2]|0;
    $45 = HEAP32[$35>>2]|0;
    $46 = (($45) + ($44))|0;
    $47 = HEAP32[$36>>2]|0;
    $48 = ($46>>>0)<($47>>>0);
    if ($48) {
     $49 = (($42) + ($41))|0;
     $50 = $49&255;
     $51 = HEAP32[$0>>2]|0;
     $52 = (($44) + 1)|0;
     HEAP32[$34>>2] = $52;
     $53 = (($51) + ($44)|0);
     HEAP8[$53>>0] = $50;
     $$0$i$i$i = 0;
    } else {
     $$0$i$i$i = -1;
    }
    $54 = HEAP32[$37>>2]|0;
    $55 = $54 | $$0$i$i$i;
    HEAP32[$37>>2] = $55;
   }
   $56 = HEAP32[$31>>2]|0;
   $57 = ($56|0)==(0);
   if (!($57)) {
    $58 = (($41) + 255)|0;
    $59 = $58&255;
    $85 = $56;
    while(1) {
     $60 = HEAP32[$34>>2]|0;
     $61 = HEAP32[$35>>2]|0;
     $62 = (($61) + ($60))|0;
     $63 = HEAP32[$36>>2]|0;
     $64 = ($62>>>0)<($63>>>0);
     if ($64) {
      $65 = HEAP32[$0>>2]|0;
      $66 = (($60) + 1)|0;
      HEAP32[$34>>2] = $66;
      $67 = (($65) + ($60)|0);
      HEAP8[$67>>0] = $59;
      $$pre$i$i = HEAP32[$31>>2]|0;
      $$0$i18$i$i = 0;$71 = $$pre$i$i;
     } else {
      $$0$i18$i$i = -1;$71 = $85;
     }
     $68 = HEAP32[$37>>2]|0;
     $69 = $68 | $$0$i18$i$i;
     HEAP32[$37>>2] = $69;
     $70 = (($71) + -1)|0;
     HEAP32[$31>>2] = $70;
     $72 = ($70|0)==(0);
     if ($72) {
      break;
     } else {
      $85 = $70;
     }
    }
   }
   $73 = $38 & 255;
   HEAP32[$33>>2] = $73;
   $$pre7$i = HEAP32[$30>>2]|0;
   $$pre8$i = HEAP32[$4>>2]|0;
   $77 = $$pre7$i;$80 = $$pre8$i;
  }
  $76 = $77 << 8;
  $78 = $76 & 2147483392;
  HEAP32[$30>>2] = $78;
  $79 = $80 << 8;
  HEAP32[$4>>2] = $79;
  $81 = HEAP32[$32>>2]|0;
  $82 = (($81) + 8)|0;
  HEAP32[$32>>2] = $82;
  $83 = ($79>>>0)<(8388609);
  if ($83) {
   $39 = $78;$84 = $79;
  } else {
   break;
  }
 }
 return;
}
function _ec_enc_uint($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$0$i$i = 0, $$023$i = 0, $$1$i = 0, $$124$i = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $smax$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($2) + -1)|0;
 $4 = (Math_clz32(($3|0))|0);
 $5 = (32 - ($4))|0;
 $6 = ($5|0)>(8);
 if (!($6)) {
  $52 = (($1) + 1)|0;
  _ec_encode($0,$1,$52,$2);
  return;
 }
 $7 = (($5) + -8)|0;
 $8 = $3 >>> $7;
 $9 = (($8) + 1)|0;
 $10 = $1 >>> $7;
 $11 = (($10) + 1)|0;
 _ec_encode($0,$10,$11,$9);
 $12 = 1 << $7;
 $13 = (($12) + -1)|0;
 $14 = $13 & $1;
 $15 = ((($0)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (($18) + ($7))|0;
 $20 = ($19>>>0)>(32);
 if ($20) {
  $21 = ((($0)) + 24|0);
  $22 = ((($0)) + 8|0);
  $23 = ((($0)) + 4|0);
  $24 = ((($0)) + 44|0);
  $25 = $18 ^ -1;
  $26 = ($25|0)>(-16);
  $smax$i = $26 ? $25 : -16;
  $27 = (($18) + 8)|0;
  $28 = (($27) + ($smax$i))|0;
  $$0$i = $18;$$023$i = $16;
  while(1) {
   $29 = HEAP32[$21>>2]|0;
   $30 = HEAP32[$22>>2]|0;
   $31 = (($30) + ($29))|0;
   $32 = HEAP32[$23>>2]|0;
   $33 = ($31>>>0)<($32>>>0);
   if ($33) {
    $34 = $$023$i&255;
    $35 = HEAP32[$0>>2]|0;
    $36 = (($30) + 1)|0;
    HEAP32[$22>>2] = $36;
    $37 = (($32) - ($36))|0;
    $38 = (($35) + ($37)|0);
    HEAP8[$38>>0] = $34;
    $$0$i$i = 0;
   } else {
    $$0$i$i = -1;
   }
   $39 = HEAP32[$24>>2]|0;
   $40 = $39 | $$0$i$i;
   HEAP32[$24>>2] = $40;
   $41 = $$023$i >>> 8;
   $42 = (($$0$i) + -8)|0;
   $43 = ($$0$i|0)>(15);
   if ($43) {
    $$0$i = $42;$$023$i = $41;
   } else {
    break;
   }
  }
  $44 = $28 & -8;
  $45 = (($18) + -8)|0;
  $46 = (($45) - ($44))|0;
  $$pre$i = (($46) + ($7))|0;
  $$1$i = $46;$$124$i = $41;$$pre$phi$iZ2D = $$pre$i;
 } else {
  $$1$i = $18;$$124$i = $16;$$pre$phi$iZ2D = $19;
 }
 $47 = $14 << $$1$i;
 $48 = $47 | $$124$i;
 HEAP32[$15>>2] = $48;
 HEAP32[$17>>2] = $$pre$phi$iZ2D;
 $49 = ((($0)) + 20|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = (($50) + ($7))|0;
 HEAP32[$49>>2] = $51;
 return;
}
function _ec_enc_bits($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i = 0, $$023 = 0, $$1 = 0, $$124 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $smax = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + ($2))|0;
 $8 = ($7>>>0)>(32);
 if (!($8)) {
  $$1 = $6;$$124 = $4;$$pre$phiZ2D = $7;
  $35 = $1 << $$1;
  $36 = $35 | $$124;
  HEAP32[$3>>2] = $36;
  HEAP32[$5>>2] = $$pre$phiZ2D;
  $37 = ((($0)) + 20|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = (($38) + ($2))|0;
  HEAP32[$37>>2] = $39;
  return;
 }
 $9 = ((($0)) + 24|0);
 $10 = ((($0)) + 8|0);
 $11 = ((($0)) + 4|0);
 $12 = ((($0)) + 44|0);
 $13 = $6 ^ -1;
 $14 = ($13|0)>(-16);
 $smax = $14 ? $13 : -16;
 $15 = (($6) + ($smax))|0;
 $16 = (($15) + 8)|0;
 $17 = $16 & -8;
 $$0 = $6;$$023 = $4;
 while(1) {
  $18 = HEAP32[$9>>2]|0;
  $19 = HEAP32[$10>>2]|0;
  $20 = (($19) + ($18))|0;
  $21 = HEAP32[$11>>2]|0;
  $22 = ($20>>>0)<($21>>>0);
  if ($22) {
   $23 = $$023&255;
   $24 = HEAP32[$0>>2]|0;
   $25 = (($19) + 1)|0;
   HEAP32[$10>>2] = $25;
   $26 = (($21) - ($25))|0;
   $27 = (($24) + ($26)|0);
   HEAP8[$27>>0] = $23;
   $$0$i = 0;
  } else {
   $$0$i = -1;
  }
  $28 = HEAP32[$12>>2]|0;
  $29 = $28 | $$0$i;
  HEAP32[$12>>2] = $29;
  $30 = $$023 >>> 8;
  $31 = (($$0) + -8)|0;
  $32 = ($$0|0)>(15);
  if ($32) {
   $$0 = $31;$$023 = $30;
  } else {
   break;
  }
 }
 $33 = (($6) + -8)|0;
 $34 = (($33) - ($17))|0;
 $$pre = (($34) + ($2))|0;
 $$1 = $34;$$124 = $30;$$pre$phiZ2D = $$pre;
 $35 = $1 << $$1;
 $36 = $35 | $$124;
 HEAP32[$3>>2] = $36;
 HEAP32[$5>>2] = $$pre$phiZ2D;
 $37 = ((($0)) + 20|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = (($38) + ($2))|0;
 HEAP32[$37>>2] = $39;
 return;
}
function _ec_enc_patch_initial_bits($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (8 - ($2))|0;
 $4 = 1 << $2;
 $5 = (($4) + -1)|0;
 $6 = $5 << $3;
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0);
 if (!($9)) {
  $10 = HEAP32[$0>>2]|0;
  $11 = HEAP8[$10>>0]|0;
  $12 = $11&255;
  $13 = $6 ^ 255;
  $14 = $13 & $12;
  $15 = $1 << $3;
  $16 = $14 | $15;
  $17 = $16&255;
  HEAP8[$10>>0] = $17;
  return;
 }
 $18 = ((($0)) + 40|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)>(-1);
 if ($20) {
  $21 = $6 ^ -1;
  $22 = $19 & $21;
  $23 = $1 << $3;
  $24 = $22 | $23;
  HEAP32[$18>>2] = $24;
  return;
 }
 $25 = ((($0)) + 28|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = -2147483648 >>> $2;
 $28 = ($26>>>0)>($27>>>0);
 if ($28) {
  $37 = ((($0)) + 44|0);
  HEAP32[$37>>2] = -1;
  return;
 } else {
  $29 = ((($0)) + 32|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = $6 << 23;
  $32 = $31 ^ -1;
  $33 = $30 & $32;
  $34 = (($3) + 23)|0;
  $35 = $1 << $34;
  $36 = $33 | $35;
  HEAP32[$29>>2] = $36;
  return;
 }
}
function _ec_enc_shrink($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = (($2) + ($1)|0);
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (0 - ($5))|0;
 $7 = (($3) + ($6)|0);
 $8 = ((($0)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($2) + ($9)|0);
 $11 = (($10) + ($6)|0);
 _memmove(($7|0),($11|0),($5|0))|0;
 HEAP32[$8>>2] = $1;
 return;
}
function _ec_enc_done($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i64 = 0, $$0$i18$i = 0, $$0$i18$i67 = 0, $$061$lcssa = 0, $$06175 = 0, $$062$lcssa = 0, $$06274 = 0, $$1$lcssa = 0, $$16077 = 0, $$163 = 0, $$178 = 0, $$phi$trans$insert = 0, $$phi$trans$insert86 = 0, $$pre = 0, $$pre$i = 0, $$pre$i66 = 0, $$pre$phi88Z2D = 0, $$pre$phi90Z2D = 0;
 var $$pre$phi91Z2D = 0, $$pre87 = 0, $$pre89 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$ = 0;
 var $or$cond = 0, $smax = 0, $smax85 = 0, $spec$select = 0, $spec$select71 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (Math_clz32(($2|0))|0);
 $4 = 2147483647 >>> $3;
 $5 = ((($0)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + ($6))|0;
 $8 = -2147483648 >> $3;
 $9 = $7 & $8;
 $10 = $9 | $4;
 $11 = (($6) + ($2))|0;
 $12 = ($10>>>0)<($11>>>0);
 $13 = $4 >>> 1;
 $not$ = $12 ^ 1;
 $14 = $not$&1;
 $spec$select71 = (($3) + ($14))|0;
 $15 = ($spec$select71|0)==(0);
 if ($15) {
  $$pre89 = ((($0)) + 40|0);
  $$1$lcssa = 0;$$pre$phi90Z2D = $$pre89;
 } else {
  $16 = (($13) + ($6))|0;
  $17 = $13 ^ -1;
  $18 = $16 & $17;
  $spec$select = $12 ? $9 : $18;
  $19 = ((($0)) + 36|0);
  $20 = ((($0)) + 40|0);
  $21 = ((($0)) + 24|0);
  $22 = ((($0)) + 8|0);
  $23 = ((($0)) + 4|0);
  $24 = ((($0)) + 44|0);
  $25 = $spec$select71 ^ -1;
  $26 = ($25>>>0)>(4294967287);
  $smax85 = $26 ? $25 : -9;
  $27 = (($3) + ($smax85))|0;
  $28 = (($27) + ($14))|0;
  $29 = (($28) + 8)|0;
  $30 = $29 & -8;
  $$16077 = $spec$select;$$178 = $spec$select71;
  while(1) {
   $31 = $$16077 >>> 23;
   $32 = ($31|0)==(255);
   if ($32) {
    $66 = HEAP32[$19>>2]|0;
    $67 = (($66) + 1)|0;
    HEAP32[$19>>2] = $67;
   } else {
    $33 = $$16077 >>> 31;
    $34 = HEAP32[$20>>2]|0;
    $35 = ($34|0)>(-1);
    if ($35) {
     $36 = HEAP32[$21>>2]|0;
     $37 = HEAP32[$22>>2]|0;
     $38 = (($37) + ($36))|0;
     $39 = HEAP32[$23>>2]|0;
     $40 = ($38>>>0)<($39>>>0);
     if ($40) {
      $41 = (($34) + ($33))|0;
      $42 = $41&255;
      $43 = HEAP32[$0>>2]|0;
      $44 = (($36) + 1)|0;
      HEAP32[$21>>2] = $44;
      $45 = (($43) + ($36)|0);
      HEAP8[$45>>0] = $42;
      $$0$i$i = 0;
     } else {
      $$0$i$i = -1;
     }
     $46 = HEAP32[$24>>2]|0;
     $47 = $46 | $$0$i$i;
     HEAP32[$24>>2] = $47;
    }
    $48 = HEAP32[$19>>2]|0;
    $49 = ($48|0)==(0);
    if (!($49)) {
     $50 = (($33) + 255)|0;
     $51 = $50&255;
     $174 = $48;
     while(1) {
      $52 = HEAP32[$21>>2]|0;
      $53 = HEAP32[$22>>2]|0;
      $54 = (($53) + ($52))|0;
      $55 = HEAP32[$23>>2]|0;
      $56 = ($54>>>0)<($55>>>0);
      if ($56) {
       $57 = HEAP32[$0>>2]|0;
       $58 = (($52) + 1)|0;
       HEAP32[$21>>2] = $58;
       $59 = (($57) + ($52)|0);
       HEAP8[$59>>0] = $51;
       $$pre$i = HEAP32[$19>>2]|0;
       $$0$i18$i = 0;$63 = $$pre$i;
      } else {
       $$0$i18$i = -1;$63 = $174;
      }
      $60 = HEAP32[$24>>2]|0;
      $61 = $60 | $$0$i18$i;
      HEAP32[$24>>2] = $61;
      $62 = (($63) + -1)|0;
      HEAP32[$19>>2] = $62;
      $64 = ($62|0)==(0);
      if ($64) {
       break;
      } else {
       $174 = $62;
      }
     }
    }
    $65 = $31 & 255;
    HEAP32[$20>>2] = $65;
   }
   $68 = $$16077 << 8;
   $69 = $68 & 2147483392;
   $70 = (($$178) + -8)|0;
   $71 = ($$178|0)>(8);
   if ($71) {
    $$16077 = $69;$$178 = $70;
   } else {
    break;
   }
  }
  $72 = (($spec$select71) + -8)|0;
  $73 = (($30) - ($72))|0;
  $$1$lcssa = $73;$$pre$phi90Z2D = $20;
 }
 $74 = HEAP32[$$pre$phi90Z2D>>2]|0;
 $75 = ($74|0)>(-1);
 if ($75) {
  $79 = ((($0)) + 24|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = ((($0)) + 8|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (($82) + ($80))|0;
  $84 = ((($0)) + 4|0);
  $85 = HEAP32[$84>>2]|0;
  $86 = ($83>>>0)<($85>>>0);
  if ($86) {
   $87 = $74&255;
   $88 = HEAP32[$0>>2]|0;
   $89 = (($80) + 1)|0;
   HEAP32[$79>>2] = $89;
   $90 = (($88) + ($80)|0);
   HEAP8[$90>>0] = $87;
   $$0$i$i64 = 0;
  } else {
   $$0$i$i64 = -1;
  }
  $91 = ((($0)) + 44|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = $92 | $$0$i$i64;
  HEAP32[$91>>2] = $93;
  $$phi$trans$insert = ((($0)) + 36|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $94 = ($$pre|0)==(0);
  if ($94) {
   label = 27;
  } else {
   $$pre$phi91Z2D = $$phi$trans$insert;$175 = $$pre;
   label = 23;
  }
 } else {
  $76 = ((($0)) + 36|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$phi91Z2D = $76;$175 = $77;
   label = 23;
  }
 }
 if ((label|0) == 23) {
  $95 = ((($0)) + 24|0);
  $96 = ((($0)) + 8|0);
  $97 = ((($0)) + 4|0);
  $98 = ((($0)) + 44|0);
  $176 = $175;
  while(1) {
   $99 = HEAP32[$95>>2]|0;
   $100 = HEAP32[$96>>2]|0;
   $101 = (($100) + ($99))|0;
   $102 = HEAP32[$97>>2]|0;
   $103 = ($101>>>0)<($102>>>0);
   if ($103) {
    $104 = HEAP32[$0>>2]|0;
    $105 = (($99) + 1)|0;
    HEAP32[$95>>2] = $105;
    $106 = (($104) + ($99)|0);
    HEAP8[$106>>0] = -1;
    $$pre$i66 = HEAP32[$$pre$phi91Z2D>>2]|0;
    $$0$i18$i67 = 0;$110 = $$pre$i66;
   } else {
    $$0$i18$i67 = -1;$110 = $176;
   }
   $107 = HEAP32[$98>>2]|0;
   $108 = $107 | $$0$i18$i67;
   HEAP32[$98>>2] = $108;
   $109 = (($110) + -1)|0;
   HEAP32[$$pre$phi91Z2D>>2] = $109;
   $111 = ($109|0)==(0);
   if ($111) {
    label = 27;
    break;
   } else {
    $176 = $109;
   }
  }
 }
 if ((label|0) == 27) {
  HEAP32[$$pre$phi90Z2D>>2] = 0;
 }
 $112 = ((($0)) + 12|0);
 $113 = HEAP32[$112>>2]|0;
 $114 = ((($0)) + 16|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = ($115|0)>(7);
 if ($116) {
  $117 = ((($0)) + 24|0);
  $118 = ((($0)) + 8|0);
  $119 = ((($0)) + 4|0);
  $120 = ((($0)) + 44|0);
  $121 = $115 ^ -1;
  $122 = ($121|0)>(-16);
  $smax = $122 ? $121 : -16;
  $123 = (($115) + ($smax))|0;
  $124 = (($123) + 8)|0;
  $125 = $124 & -8;
  $$06175 = $115;$$06274 = $113;
  while(1) {
   $126 = HEAP32[$117>>2]|0;
   $127 = HEAP32[$118>>2]|0;
   $128 = (($127) + ($126))|0;
   $129 = HEAP32[$119>>2]|0;
   $130 = ($128>>>0)<($129>>>0);
   if ($130) {
    $131 = $$06274&255;
    $132 = HEAP32[$0>>2]|0;
    $133 = (($127) + 1)|0;
    HEAP32[$118>>2] = $133;
    $134 = (($129) - ($133))|0;
    $135 = (($132) + ($134)|0);
    HEAP8[$135>>0] = $131;
    $$0$i = 0;
   } else {
    $$0$i = -1;
   }
   $136 = HEAP32[$120>>2]|0;
   $137 = $136 | $$0$i;
   HEAP32[$120>>2] = $137;
   $138 = $$06274 >>> 8;
   $139 = (($$06175) + -8)|0;
   $140 = ($$06175|0)>(15);
   if ($140) {
    $$06175 = $139;$$06274 = $138;
   } else {
    break;
   }
  }
  $141 = (($115) + -8)|0;
  $142 = (($141) - ($125))|0;
  $$061$lcssa = $142;$$062$lcssa = $138;$$pre$phi88Z2D = $120;$144 = $137;
 } else {
  $$phi$trans$insert86 = ((($0)) + 44|0);
  $$pre87 = HEAP32[$$phi$trans$insert86>>2]|0;
  $$061$lcssa = $115;$$062$lcssa = $113;$$pre$phi88Z2D = $$phi$trans$insert86;$144 = $$pre87;
 }
 $143 = ($144|0)==(0);
 if (!($143)) {
  return;
 }
 $145 = HEAP32[$0>>2]|0;
 $146 = ((($0)) + 24|0);
 $147 = HEAP32[$146>>2]|0;
 $148 = (($145) + ($147)|0);
 $149 = ((($0)) + 4|0);
 $150 = HEAP32[$149>>2]|0;
 $151 = (($150) - ($147))|0;
 $152 = ((($0)) + 8|0);
 $153 = HEAP32[$152>>2]|0;
 $154 = (($151) - ($153))|0;
 _memset(($148|0),0,($154|0))|0;
 $155 = ($$061$lcssa|0)>(0);
 if (!($155)) {
  return;
 }
 $156 = HEAP32[$152>>2]|0;
 $157 = HEAP32[$149>>2]|0;
 $158 = ($157>>>0)>($156>>>0);
 if (!($158)) {
  HEAP32[$$pre$phi88Z2D>>2] = -1;
  return;
 }
 $159 = HEAP32[$146>>2]|0;
 $160 = (($159) + ($156))|0;
 $161 = ($160>>>0)>=($157>>>0);
 $162 = ($$061$lcssa|0)>($$1$lcssa|0);
 $or$cond = $162 & $161;
 if ($or$cond) {
  $163 = 1 << $$1$lcssa;
  $164 = (($163) + -1)|0;
  $165 = $$062$lcssa & $164;
  HEAP32[$$pre$phi88Z2D>>2] = -1;
  $$163 = $165;
 } else {
  $$163 = $$062$lcssa;
 }
 $166 = HEAP32[$0>>2]|0;
 $167 = $156 ^ -1;
 $168 = (($157) + ($167))|0;
 $169 = (($166) + ($168)|0);
 $170 = HEAP8[$169>>0]|0;
 $171 = $170&255;
 $172 = $$163 | $171;
 $173 = $172&255;
 HEAP8[$169>>0] = $173;
 return;
}
function _opus_fft_impl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$01011$i = 0, $$0102$i = 0, $$0103$i = 0, $$0104$i = 0, $$0161168$i = 0, $$0163173$us$i = 0, $$0164172$us$i = 0, $$0165171$us$i = 0, $$0166170$us$i = 0, $$0169$i = 0, $$02$i = 0, $$02035$i = 0, $$02044$i = 0, $$02053$i = 0, $$02062$i = 0, $$02077$i = 0, $$02081$i = 0, $$05674 = 0;
 var $$057 = 0, $$05873 = 0, $$06$i = 0, $$0661$i = 0, $$1162176$us$i = 0, $$1174$us$i = 0, $$idx = 0, $$idx$val = 0, $$idx59$val = 0, $$pre$phiZ2D = 0, $$sroa$0$0$$sroa_idx$i = 0, $$sroa$0$0$$sroa_idx$i60 = 0, $$sroa$0$0$copyload$i = Math_fround(0), $$sroa$0$0$copyload$i61 = Math_fround(0), $$sroa$011$0$$sroa_idx$i = 0, $$sroa$011$0$copyload$i = Math_fround(0), $$sroa$040$0$copyload$i = Math_fround(0), $$sroa$14$0$$sroa_idx9$i = 0, $$sroa$14$0$copyload$i = Math_fround(0), $$sroa$3$0$$sroa_idx3$i = 0;
 var $$sroa$3$0$copyload$i = Math_fround(0), $$sroa$5$0$$sroa_idx44$i = 0, $$sroa$5$0$copyload$i = Math_fround(0), $$sroa$7$0$$sroa_idx6$i = 0, $$sroa$7$0$copyload$i = Math_fround(0), $$sroa$716$0$$sroa_idx17$i = 0, $$sroa$716$0$copyload$i = Math_fround(0), $10 = 0, $100 = Math_fround(0), $101 = Math_fround(0), $102 = Math_fround(0), $103 = Math_fround(0), $104 = 0, $105 = Math_fround(0), $106 = 0, $107 = Math_fround(0), $108 = Math_fround(0), $109 = 0, $11 = 0, $110 = Math_fround(0);
 var $111 = 0, $112 = Math_fround(0), $113 = Math_fround(0), $114 = Math_fround(0), $115 = Math_fround(0), $116 = Math_fround(0), $117 = Math_fround(0), $118 = Math_fround(0), $119 = Math_fround(0), $12 = 0, $120 = Math_fround(0), $121 = Math_fround(0), $122 = Math_fround(0), $123 = Math_fround(0), $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = Math_fround(0), $137 = Math_fround(0), $138 = Math_fround(0), $139 = 0, $14 = 0, $140 = Math_fround(0), $141 = 0, $142 = Math_fround(0), $143 = Math_fround(0), $144 = Math_fround(0), $145 = Math_fround(0), $146 = Math_fround(0), $147 = Math_fround(0);
 var $148 = 0, $149 = Math_fround(0), $15 = 0, $150 = Math_fround(0), $151 = Math_fround(0), $152 = 0, $153 = Math_fround(0), $154 = 0, $155 = Math_fround(0), $156 = Math_fround(0), $157 = Math_fround(0), $158 = Math_fround(0), $159 = Math_fround(0), $16 = 0, $160 = Math_fround(0), $161 = 0, $162 = Math_fround(0), $163 = Math_fround(0), $164 = Math_fround(0), $165 = 0;
 var $166 = Math_fround(0), $167 = 0, $168 = Math_fround(0), $169 = Math_fround(0), $17 = 0, $170 = Math_fround(0), $171 = Math_fround(0), $172 = Math_fround(0), $173 = Math_fround(0), $174 = Math_fround(0), $175 = Math_fround(0), $176 = 0, $177 = Math_fround(0), $178 = Math_fround(0), $179 = Math_fround(0), $18 = 0, $180 = Math_fround(0), $181 = Math_fround(0), $182 = Math_fround(0), $183 = Math_fround(0);
 var $184 = Math_fround(0), $185 = Math_fround(0), $186 = Math_fround(0), $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = Math_fround(0), $191 = Math_fround(0), $192 = Math_fround(0), $193 = Math_fround(0), $194 = Math_fround(0), $195 = Math_fround(0), $196 = Math_fround(0), $197 = Math_fround(0), $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = Math_fround(0), $212 = Math_fround(0), $213 = Math_fround(0), $214 = 0, $215 = Math_fround(0), $216 = 0, $217 = Math_fround(0), $218 = Math_fround(0), $219 = Math_fround(0);
 var $22 = 0, $220 = Math_fround(0), $221 = Math_fround(0), $222 = Math_fround(0), $223 = 0, $224 = Math_fround(0), $225 = Math_fround(0), $226 = Math_fround(0), $227 = 0, $228 = Math_fround(0), $229 = 0, $23 = 0, $230 = Math_fround(0), $231 = Math_fround(0), $232 = Math_fround(0), $233 = Math_fround(0), $234 = Math_fround(0), $235 = Math_fround(0), $236 = Math_fround(0), $237 = Math_fround(0);
 var $238 = Math_fround(0), $239 = Math_fround(0), $24 = 0, $240 = 0, $241 = 0, $242 = Math_fround(0), $243 = Math_fround(0), $244 = Math_fround(0), $245 = 0, $246 = Math_fround(0), $247 = Math_fround(0), $248 = Math_fround(0), $249 = Math_fround(0), $25 = 0, $250 = Math_fround(0), $251 = Math_fround(0), $252 = Math_fround(0), $253 = Math_fround(0), $254 = Math_fround(0), $255 = Math_fround(0);
 var $256 = Math_fround(0), $257 = Math_fround(0), $258 = Math_fround(0), $259 = Math_fround(0), $26 = 0, $260 = Math_fround(0), $261 = Math_fround(0), $262 = Math_fround(0), $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = Math_fround(0), $285 = 0, $286 = 0, $287 = Math_fround(0), $288 = Math_fround(0), $289 = 0, $29 = 0, $290 = Math_fround(0), $291 = 0;
 var $292 = Math_fround(0), $293 = Math_fround(0), $294 = Math_fround(0), $295 = Math_fround(0), $296 = Math_fround(0), $297 = Math_fround(0), $298 = Math_fround(0), $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = Math_fround(0), $303 = Math_fround(0), $304 = 0, $305 = Math_fround(0), $306 = 0, $307 = Math_fround(0), $308 = Math_fround(0), $309 = Math_fround(0);
 var $31 = 0, $310 = Math_fround(0), $311 = Math_fround(0), $312 = Math_fround(0), $313 = Math_fround(0), $314 = 0, $315 = 0, $316 = Math_fround(0), $317 = Math_fround(0), $318 = 0, $319 = Math_fround(0), $32 = 0, $320 = 0, $321 = Math_fround(0), $322 = Math_fround(0), $323 = Math_fround(0), $324 = Math_fround(0), $325 = Math_fround(0), $326 = Math_fround(0), $327 = Math_fround(0);
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = Math_fround(0), $332 = Math_fround(0), $333 = 0, $334 = Math_fround(0), $335 = 0, $336 = Math_fround(0), $337 = Math_fround(0), $338 = Math_fround(0), $339 = Math_fround(0), $34 = 0, $340 = Math_fround(0), $341 = Math_fround(0), $342 = Math_fround(0), $343 = Math_fround(0), $344 = Math_fround(0), $345 = Math_fround(0);
 var $346 = Math_fround(0), $347 = Math_fround(0), $348 = Math_fround(0), $349 = Math_fround(0), $35 = Math_fround(0), $350 = Math_fround(0), $351 = Math_fround(0), $352 = Math_fround(0), $353 = Math_fround(0), $354 = Math_fround(0), $355 = Math_fround(0), $356 = Math_fround(0), $357 = Math_fround(0), $358 = Math_fround(0), $359 = Math_fround(0), $36 = Math_fround(0), $360 = Math_fround(0), $361 = Math_fround(0), $362 = Math_fround(0), $363 = Math_fround(0);
 var $364 = Math_fround(0), $365 = Math_fround(0), $366 = Math_fround(0), $367 = Math_fround(0), $368 = Math_fround(0), $369 = Math_fround(0), $37 = 0, $370 = Math_fround(0), $371 = Math_fround(0), $372 = Math_fround(0), $373 = Math_fround(0), $374 = Math_fround(0), $375 = Math_fround(0), $376 = Math_fround(0), $377 = Math_fround(0), $378 = Math_fround(0), $379 = Math_fround(0), $38 = Math_fround(0), $380 = Math_fround(0), $381 = Math_fround(0);
 var $382 = Math_fround(0), $383 = Math_fround(0), $384 = Math_fround(0), $385 = Math_fround(0), $386 = Math_fround(0), $387 = Math_fround(0), $388 = Math_fround(0), $389 = Math_fround(0), $39 = Math_fround(0), $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $4 = 0, $40 = Math_fround(0);
 var $41 = Math_fround(0), $42 = 0, $43 = Math_fround(0), $44 = 0, $45 = Math_fround(0), $46 = Math_fround(0), $47 = Math_fround(0), $48 = Math_fround(0), $49 = Math_fround(0), $5 = 0, $50 = 0, $51 = Math_fround(0), $52 = Math_fround(0), $53 = 0, $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = 0, $59 = Math_fround(0);
 var $6 = 0, $60 = 0, $61 = Math_fround(0), $62 = 0, $63 = Math_fround(0), $64 = Math_fround(0), $65 = 0, $66 = Math_fround(0), $67 = Math_fround(0), $68 = Math_fround(0), $69 = Math_fround(0), $7 = 0, $70 = 0, $71 = Math_fround(0), $72 = 0, $73 = Math_fround(0), $74 = Math_fround(0), $75 = Math_fround(0), $76 = Math_fround(0), $77 = Math_fround(0);
 var $78 = 0, $79 = Math_fround(0), $8 = 0, $80 = Math_fround(0), $81 = 0, $82 = Math_fround(0), $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = Math_fround(0), $94 = 0, $95 = Math_fround(0);
 var $96 = Math_fround(0), $97 = 0, $98 = Math_fround(0), $99 = 0, $exitcond$i = 0, $exitcond$i63 = 0, $exitcond$i65 = 0, $exitcond$i68 = 0, $exitcond11$i = 0, $exitcond181$i = 0, $exitcond182$i = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>(0);
 HEAP32[$2>>2] = 1;
 $$057 = 0;$14 = 1;
 while(1) {
  $6 = $$057 << 1;
  $7 = (((($0)) + 12|0) + ($6<<1)|0);
  $8 = HEAP16[$7>>1]|0;
  $9 = $8 << 16 >> 16;
  $10 = $6 | 1;
  $11 = (((($0)) + 12|0) + ($10<<1)|0);
  $12 = HEAP16[$11>>1]|0;
  $13 = Math_imul($14, $9)|0;
  $15 = (($$057) + 1)|0;
  $16 = (($2) + ($15<<2)|0);
  HEAP32[$16>>2] = $13;
  $17 = ($12<<16>>16)==(1);
  if ($17) {
   break;
  } else {
   $$057 = $15;$14 = $13;
  }
 }
 $spec$select = $5 ? $4 : 0;
 $18 = $15 << 1;
 $19 = (($18) + -1)|0;
 $20 = (((($0)) + 12|0) + ($19<<1)|0);
 $21 = HEAP16[$20>>1]|0;
 $22 = $21 << 16 >> 16;
 $$idx = ((($0)) + 48|0);
 $$05674 = $$057;$$05873 = $22;
 while(1) {
  $23 = ($$05674|0)==(0);
  if ($23) {
   $$0 = 1;$$pre$phiZ2D = 0;
  } else {
   $24 = $$05674 << 1;
   $25 = (($24) + -1)|0;
   $26 = (((($0)) + 12|0) + ($25<<1)|0);
   $27 = HEAP16[$26>>1]|0;
   $28 = $27 << 16 >> 16;
   $$0 = $28;$$pre$phiZ2D = $24;
  }
  $29 = (((($0)) + 12|0) + ($$pre$phiZ2D<<1)|0);
  $30 = HEAP16[$29>>1]|0;
  $31 = $30 << 16 >> 16;
  L9: do {
   switch ($31|0) {
   case 2:  {
    $32 = (($2) + ($$05674<<2)|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ($33|0)>(0);
    if ($34) {
     $$02$i = $1;$$0661$i = 0;
     while(1) {
      $$sroa$0$0$$sroa_idx$i = ((($$02$i)) + 32|0);
      $$sroa$0$0$copyload$i = Math_fround(HEAPF32[$$sroa$0$0$$sroa_idx$i>>2]);
      $$sroa$14$0$$sroa_idx9$i = ((($$02$i)) + 36|0);
      $$sroa$14$0$copyload$i = Math_fround(HEAPF32[$$sroa$14$0$$sroa_idx9$i>>2]);
      $35 = Math_fround(HEAPF32[$$02$i>>2]);
      $36 = Math_fround($35 - $$sroa$0$0$copyload$i);
      HEAPF32[$$sroa$0$0$$sroa_idx$i>>2] = $36;
      $37 = ((($$02$i)) + 4|0);
      $38 = Math_fround(HEAPF32[$37>>2]);
      $39 = Math_fround($38 - $$sroa$14$0$copyload$i);
      HEAPF32[$$sroa$14$0$$sroa_idx9$i>>2] = $39;
      $40 = Math_fround($$sroa$0$0$copyload$i + $35);
      HEAPF32[$$02$i>>2] = $40;
      $41 = Math_fround($$sroa$14$0$copyload$i + $38);
      HEAPF32[$37>>2] = $41;
      $42 = ((($$02$i)) + 40|0);
      $43 = Math_fround(HEAPF32[$42>>2]);
      $44 = ((($$02$i)) + 44|0);
      $45 = Math_fround(HEAPF32[$44>>2]);
      $46 = Math_fround($43 + $45);
      $47 = Math_fround($46 * Math_fround(0.707106769));
      $48 = Math_fround($45 - $43);
      $49 = Math_fround($48 * Math_fround(0.707106769));
      $50 = ((($$02$i)) + 8|0);
      $51 = Math_fround(HEAPF32[$50>>2]);
      $52 = Math_fround($51 - $47);
      HEAPF32[$42>>2] = $52;
      $53 = ((($$02$i)) + 12|0);
      $54 = Math_fround(HEAPF32[$53>>2]);
      $55 = Math_fround($54 - $49);
      HEAPF32[$44>>2] = $55;
      $56 = Math_fround($51 + $47);
      HEAPF32[$50>>2] = $56;
      $57 = Math_fround($49 + $54);
      HEAPF32[$53>>2] = $57;
      $58 = ((($$02$i)) + 52|0);
      $59 = Math_fround(HEAPF32[$58>>2]);
      $60 = ((($$02$i)) + 48|0);
      $61 = Math_fround(HEAPF32[$60>>2]);
      $62 = ((($$02$i)) + 16|0);
      $63 = Math_fround(HEAPF32[$62>>2]);
      $64 = Math_fround($63 - $59);
      HEAPF32[$60>>2] = $64;
      $65 = ((($$02$i)) + 20|0);
      $66 = Math_fround(HEAPF32[$65>>2]);
      $67 = Math_fround($61 + $66);
      HEAPF32[$58>>2] = $67;
      $68 = Math_fround($59 + $63);
      HEAPF32[$62>>2] = $68;
      $69 = Math_fround($66 - $61);
      HEAPF32[$65>>2] = $69;
      $70 = ((($$02$i)) + 60|0);
      $71 = Math_fround(HEAPF32[$70>>2]);
      $72 = ((($$02$i)) + 56|0);
      $73 = Math_fround(HEAPF32[$72>>2]);
      $74 = Math_fround($71 - $73);
      $75 = Math_fround($74 * Math_fround(0.707106769));
      $76 = Math_fround($71 + $73);
      $77 = Math_fround($76 * Math_fround(-0.707106769));
      $78 = ((($$02$i)) + 24|0);
      $79 = Math_fround(HEAPF32[$78>>2]);
      $80 = Math_fround($79 - $75);
      HEAPF32[$72>>2] = $80;
      $81 = ((($$02$i)) + 28|0);
      $82 = Math_fround(HEAPF32[$81>>2]);
      $83 = Math_fround($82 - $77);
      HEAPF32[$70>>2] = $83;
      $84 = Math_fround($79 + $75);
      HEAPF32[$78>>2] = $84;
      $85 = Math_fround($77 + $82);
      HEAPF32[$81>>2] = $85;
      $86 = ((($$02$i)) + 64|0);
      $87 = (($$0661$i) + 1)|0;
      $exitcond$i = ($87|0)==($33|0);
      if ($exitcond$i) {
       break;
      } else {
       $$02$i = $86;$$0661$i = $87;
      }
     }
    }
    break;
   }
   case 4:  {
    $88 = (($2) + ($$05674<<2)|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = $89 << $spec$select;
    $91 = ($$05873|0)==(1);
    if ($91) {
     $92 = ($89|0)>(0);
     if (!($92)) {
      break L9;
     }
     $$0161168$i = 0;$$0169$i = $1;
     while(1) {
      $93 = Math_fround(HEAPF32[$$0169$i>>2]);
      $94 = ((($$0169$i)) + 16|0);
      $95 = Math_fround(HEAPF32[$94>>2]);
      $96 = Math_fround($93 - $95);
      $97 = ((($$0169$i)) + 4|0);
      $98 = Math_fround(HEAPF32[$97>>2]);
      $99 = ((($$0169$i)) + 20|0);
      $100 = Math_fround(HEAPF32[$99>>2]);
      $101 = Math_fround($98 - $100);
      $102 = Math_fround($93 + $95);
      $103 = Math_fround($98 + $100);
      $104 = ((($$0169$i)) + 8|0);
      $105 = Math_fround(HEAPF32[$104>>2]);
      $106 = ((($$0169$i)) + 24|0);
      $107 = Math_fround(HEAPF32[$106>>2]);
      $108 = Math_fround($105 + $107);
      $109 = ((($$0169$i)) + 12|0);
      $110 = Math_fround(HEAPF32[$109>>2]);
      $111 = ((($$0169$i)) + 28|0);
      $112 = Math_fround(HEAPF32[$111>>2]);
      $113 = Math_fround($110 + $112);
      $114 = Math_fround($102 - $108);
      HEAPF32[$94>>2] = $114;
      $115 = Math_fround($103 - $113);
      HEAPF32[$99>>2] = $115;
      $116 = Math_fround($102 + $108);
      HEAPF32[$$0169$i>>2] = $116;
      $117 = Math_fround($103 + $113);
      HEAPF32[$97>>2] = $117;
      $118 = Math_fround($105 - $107);
      $119 = Math_fround($110 - $112);
      $120 = Math_fround($96 + $119);
      HEAPF32[$104>>2] = $120;
      $121 = Math_fround($101 - $118);
      HEAPF32[$109>>2] = $121;
      $122 = Math_fround($96 - $119);
      HEAPF32[$106>>2] = $122;
      $123 = Math_fround($101 + $118);
      HEAPF32[$111>>2] = $123;
      $124 = ((($$0169$i)) + 32|0);
      $125 = (($$0161168$i) + 1)|0;
      $exitcond$i68 = ($125|0)==($89|0);
      if ($exitcond$i68) {
       break L9;
      } else {
       $$0161168$i = $125;$$0169$i = $124;
      }
     }
    }
    $126 = $$05873 << 1;
    $127 = ($$05873*3)|0;
    $128 = ($89|0)>(0);
    if ($128) {
     $129 = HEAP32[$$idx>>2]|0;
     $130 = ($$05873|0)>(0);
     $131 = $90 << 1;
     $132 = ($90*3)|0;
     if ($130) {
      $$1162176$us$i = 0;
      while(1) {
       $133 = Math_imul($$1162176$us$i, $$0)|0;
       $134 = (($1) + ($133<<3)|0);
       $$0163173$us$i = 0;$$0164172$us$i = $129;$$0165171$us$i = $129;$$0166170$us$i = $129;$$1174$us$i = $134;
       while(1) {
        $135 = (($$1174$us$i) + ($$05873<<3)|0);
        $136 = Math_fround(HEAPF32[$135>>2]);
        $137 = Math_fround(HEAPF32[$$0166170$us$i>>2]);
        $138 = Math_fround($136 * $137);
        $139 = (((($$1174$us$i) + ($$05873<<3)|0)) + 4|0);
        $140 = Math_fround(HEAPF32[$139>>2]);
        $141 = ((($$0166170$us$i)) + 4|0);
        $142 = Math_fround(HEAPF32[$141>>2]);
        $143 = Math_fround($140 * $142);
        $144 = Math_fround($138 - $143);
        $145 = Math_fround($136 * $142);
        $146 = Math_fround($137 * $140);
        $147 = Math_fround($146 + $145);
        $148 = (($$1174$us$i) + ($126<<3)|0);
        $149 = Math_fround(HEAPF32[$148>>2]);
        $150 = Math_fround(HEAPF32[$$0165171$us$i>>2]);
        $151 = Math_fround($149 * $150);
        $152 = (((($$1174$us$i) + ($126<<3)|0)) + 4|0);
        $153 = Math_fround(HEAPF32[$152>>2]);
        $154 = ((($$0165171$us$i)) + 4|0);
        $155 = Math_fround(HEAPF32[$154>>2]);
        $156 = Math_fround($153 * $155);
        $157 = Math_fround($151 - $156);
        $158 = Math_fround($149 * $155);
        $159 = Math_fround($150 * $153);
        $160 = Math_fround($159 + $158);
        $161 = (($$1174$us$i) + ($127<<3)|0);
        $162 = Math_fround(HEAPF32[$161>>2]);
        $163 = Math_fround(HEAPF32[$$0164172$us$i>>2]);
        $164 = Math_fround($162 * $163);
        $165 = (((($$1174$us$i) + ($127<<3)|0)) + 4|0);
        $166 = Math_fround(HEAPF32[$165>>2]);
        $167 = ((($$0164172$us$i)) + 4|0);
        $168 = Math_fround(HEAPF32[$167>>2]);
        $169 = Math_fround($166 * $168);
        $170 = Math_fround($164 - $169);
        $171 = Math_fround($162 * $168);
        $172 = Math_fround($163 * $166);
        $173 = Math_fround($172 + $171);
        $174 = Math_fround(HEAPF32[$$1174$us$i>>2]);
        $175 = Math_fround($174 - $157);
        $176 = ((($$1174$us$i)) + 4|0);
        $177 = Math_fround(HEAPF32[$176>>2]);
        $178 = Math_fround($177 - $160);
        $179 = Math_fround($157 + $174);
        HEAPF32[$$1174$us$i>>2] = $179;
        $180 = Math_fround($160 + $177);
        HEAPF32[$176>>2] = $180;
        $181 = Math_fround($144 + $170);
        $182 = Math_fround($147 + $173);
        $183 = Math_fround($144 - $170);
        $184 = Math_fround($147 - $173);
        $185 = Math_fround($179 - $181);
        HEAPF32[$148>>2] = $185;
        $186 = Math_fround($180 - $182);
        HEAPF32[$152>>2] = $186;
        $187 = (($$0166170$us$i) + ($90<<3)|0);
        $188 = (($$0165171$us$i) + ($131<<3)|0);
        $189 = (($$0164172$us$i) + ($132<<3)|0);
        $190 = Math_fround(HEAPF32[$$1174$us$i>>2]);
        $191 = Math_fround($181 + $190);
        HEAPF32[$$1174$us$i>>2] = $191;
        $192 = Math_fround(HEAPF32[$176>>2]);
        $193 = Math_fround($182 + $192);
        HEAPF32[$176>>2] = $193;
        $194 = Math_fround($175 + $184);
        HEAPF32[$135>>2] = $194;
        $195 = Math_fround($178 - $183);
        HEAPF32[$139>>2] = $195;
        $196 = Math_fround($175 - $184);
        HEAPF32[$161>>2] = $196;
        $197 = Math_fround($178 + $183);
        HEAPF32[$165>>2] = $197;
        $198 = ((($$1174$us$i)) + 8|0);
        $199 = (($$0163173$us$i) + 1)|0;
        $exitcond181$i = ($199|0)==($$05873|0);
        if ($exitcond181$i) {
         break;
        } else {
         $$0163173$us$i = $199;$$0164172$us$i = $189;$$0165171$us$i = $188;$$0166170$us$i = $187;$$1174$us$i = $198;
        }
       }
       $200 = (($$1162176$us$i) + 1)|0;
       $exitcond182$i = ($200|0)==($89|0);
       if ($exitcond182$i) {
        break;
       } else {
        $$1162176$us$i = $200;
       }
      }
     }
    }
    break;
   }
   case 3:  {
    $201 = (($2) + ($$05674<<2)|0);
    $202 = HEAP32[$201>>2]|0;
    $203 = $202 << $spec$select;
    $$idx$val = HEAP32[$$idx>>2]|0;
    $204 = $$05873 << 1;
    $205 = Math_imul($203, $$05873)|0;
    $$sroa$3$0$$sroa_idx3$i = (((($$idx$val) + ($205<<3)|0)) + 4|0);
    $$sroa$3$0$copyload$i = Math_fround(HEAPF32[$$sroa$3$0$$sroa_idx3$i>>2]);
    $206 = ($202|0)>(0);
    if ($206) {
     $207 = $203 << 1;
     $$01011$i = 0;
     while(1) {
      $208 = Math_imul($$01011$i, $$0)|0;
      $209 = (($1) + ($208<<3)|0);
      $$0$i = $209;$$0102$i = $$05873;$$0103$i = $$idx$val;$$0104$i = $$idx$val;
      while(1) {
       $210 = (($$0$i) + ($$05873<<3)|0);
       $211 = Math_fround(HEAPF32[$210>>2]);
       $212 = Math_fround(HEAPF32[$$0103$i>>2]);
       $213 = Math_fround($211 * $212);
       $214 = (((($$0$i) + ($$05873<<3)|0)) + 4|0);
       $215 = Math_fround(HEAPF32[$214>>2]);
       $216 = ((($$0103$i)) + 4|0);
       $217 = Math_fround(HEAPF32[$216>>2]);
       $218 = Math_fround($215 * $217);
       $219 = Math_fround($213 - $218);
       $220 = Math_fround($211 * $217);
       $221 = Math_fround($212 * $215);
       $222 = Math_fround($221 + $220);
       $223 = (($$0$i) + ($204<<3)|0);
       $224 = Math_fround(HEAPF32[$223>>2]);
       $225 = Math_fround(HEAPF32[$$0104$i>>2]);
       $226 = Math_fround($224 * $225);
       $227 = (((($$0$i) + ($204<<3)|0)) + 4|0);
       $228 = Math_fround(HEAPF32[$227>>2]);
       $229 = ((($$0104$i)) + 4|0);
       $230 = Math_fround(HEAPF32[$229>>2]);
       $231 = Math_fround($228 * $230);
       $232 = Math_fround($226 - $231);
       $233 = Math_fround($224 * $230);
       $234 = Math_fround($225 * $228);
       $235 = Math_fround($234 + $233);
       $236 = Math_fround($219 + $232);
       $237 = Math_fround($222 + $235);
       $238 = Math_fround($219 - $232);
       $239 = Math_fround($222 - $235);
       $240 = (($$0103$i) + ($203<<3)|0);
       $241 = (($$0104$i) + ($207<<3)|0);
       $242 = Math_fround(HEAPF32[$$0$i>>2]);
       $243 = Math_fround($236 * Math_fround(0.5));
       $244 = Math_fround($242 - $243);
       HEAPF32[$210>>2] = $244;
       $245 = ((($$0$i)) + 4|0);
       $246 = Math_fround(HEAPF32[$245>>2]);
       $247 = Math_fround($237 * Math_fround(0.5));
       $248 = Math_fround($246 - $247);
       HEAPF32[$214>>2] = $248;
       $249 = Math_fround($$sroa$3$0$copyload$i * $238);
       $250 = Math_fround($$sroa$3$0$copyload$i * $239);
       $251 = Math_fround(HEAPF32[$$0$i>>2]);
       $252 = Math_fround($236 + $251);
       HEAPF32[$$0$i>>2] = $252;
       $253 = Math_fround(HEAPF32[$245>>2]);
       $254 = Math_fround($237 + $253);
       HEAPF32[$245>>2] = $254;
       $255 = Math_fround(HEAPF32[$210>>2]);
       $256 = Math_fround($250 + $255);
       HEAPF32[$223>>2] = $256;
       $257 = Math_fround(HEAPF32[$214>>2]);
       $258 = Math_fround($257 - $249);
       HEAPF32[$227>>2] = $258;
       $259 = Math_fround(HEAPF32[$210>>2]);
       $260 = Math_fround($259 - $250);
       HEAPF32[$210>>2] = $260;
       $261 = Math_fround(HEAPF32[$214>>2]);
       $262 = Math_fround($249 + $261);
       HEAPF32[$214>>2] = $262;
       $263 = ((($$0$i)) + 8|0);
       $264 = (($$0102$i) + -1)|0;
       $265 = ($264|0)==(0);
       if ($265) {
        break;
       } else {
        $$0$i = $263;$$0102$i = $264;$$0103$i = $240;$$0104$i = $241;
       }
      }
      $266 = (($$01011$i) + 1)|0;
      $exitcond$i65 = ($266|0)==($202|0);
      if ($exitcond$i65) {
       break;
      } else {
       $$01011$i = $266;
      }
     }
    }
    break;
   }
   case 5:  {
    $267 = (($2) + ($$05674<<2)|0);
    $268 = HEAP32[$267>>2]|0;
    $269 = $268 << $spec$select;
    $$idx59$val = HEAP32[$$idx>>2]|0;
    $270 = Math_imul($269, $$05873)|0;
    $$sroa$011$0$$sroa_idx$i = (($$idx59$val) + ($270<<3)|0);
    $$sroa$011$0$copyload$i = Math_fround(HEAPF32[$$sroa$011$0$$sroa_idx$i>>2]);
    $$sroa$716$0$$sroa_idx17$i = (((($$idx59$val) + ($270<<3)|0)) + 4|0);
    $$sroa$716$0$copyload$i = Math_fround(HEAPF32[$$sroa$716$0$$sroa_idx17$i>>2]);
    $271 = $269 << 1;
    $272 = Math_imul($271, $$05873)|0;
    $$sroa$0$0$$sroa_idx$i60 = (($$idx59$val) + ($272<<3)|0);
    $$sroa$0$0$copyload$i61 = Math_fround(HEAPF32[$$sroa$0$0$$sroa_idx$i60>>2]);
    $$sroa$7$0$$sroa_idx6$i = (((($$idx59$val) + ($272<<3)|0)) + 4|0);
    $$sroa$7$0$copyload$i = Math_fround(HEAPF32[$$sroa$7$0$$sroa_idx6$i>>2]);
    $273 = ($268|0)>(0);
    if ($273) {
     $274 = $$05873 << 1;
     $275 = ($$05873*3)|0;
     $276 = $$05873 << 2;
     $277 = ($$05873|0)>(0);
     $$02077$i = 0;
     while(1) {
      $278 = Math_imul($$02077$i, $$0)|0;
      $279 = (($1) + ($278<<3)|0);
      if ($277) {
       $280 = (($279) + ($276<<3)|0);
       $281 = (($279) + ($275<<3)|0);
       $282 = (($279) + ($274<<3)|0);
       $283 = (($279) + ($$05873<<3)|0);
       $$02035$i = $283;$$02044$i = $282;$$02053$i = $281;$$02062$i = $280;$$02081$i = 0;$$06$i = $279;
       while(1) {
        $$sroa$040$0$copyload$i = Math_fround(HEAPF32[$$06$i>>2]);
        $$sroa$5$0$$sroa_idx44$i = ((($$06$i)) + 4|0);
        $$sroa$5$0$copyload$i = Math_fround(HEAPF32[$$sroa$5$0$$sroa_idx44$i>>2]);
        $284 = Math_fround(HEAPF32[$$02035$i>>2]);
        $285 = Math_imul($$02081$i, $269)|0;
        $286 = (($$idx59$val) + ($285<<3)|0);
        $287 = Math_fround(HEAPF32[$286>>2]);
        $288 = Math_fround($284 * $287);
        $289 = ((($$02035$i)) + 4|0);
        $290 = Math_fround(HEAPF32[$289>>2]);
        $291 = (((($$idx59$val) + ($285<<3)|0)) + 4|0);
        $292 = Math_fround(HEAPF32[$291>>2]);
        $293 = Math_fround($290 * $292);
        $294 = Math_fround($288 - $293);
        $295 = Math_fround($284 * $292);
        $296 = Math_fround($287 * $290);
        $297 = Math_fround($296 + $295);
        $298 = Math_fround(HEAPF32[$$02044$i>>2]);
        $299 = $$02081$i << 1;
        $300 = Math_imul($299, $269)|0;
        $301 = (($$idx59$val) + ($300<<3)|0);
        $302 = Math_fround(HEAPF32[$301>>2]);
        $303 = Math_fround($298 * $302);
        $304 = ((($$02044$i)) + 4|0);
        $305 = Math_fround(HEAPF32[$304>>2]);
        $306 = (((($$idx59$val) + ($300<<3)|0)) + 4|0);
        $307 = Math_fround(HEAPF32[$306>>2]);
        $308 = Math_fround($305 * $307);
        $309 = Math_fround($303 - $308);
        $310 = Math_fround($298 * $307);
        $311 = Math_fround($302 * $305);
        $312 = Math_fround($311 + $310);
        $313 = Math_fround(HEAPF32[$$02053$i>>2]);
        $314 = ($285*3)|0;
        $315 = (($$idx59$val) + ($314<<3)|0);
        $316 = Math_fround(HEAPF32[$315>>2]);
        $317 = Math_fround($313 * $316);
        $318 = ((($$02053$i)) + 4|0);
        $319 = Math_fround(HEAPF32[$318>>2]);
        $320 = (((($$idx59$val) + ($314<<3)|0)) + 4|0);
        $321 = Math_fround(HEAPF32[$320>>2]);
        $322 = Math_fround($319 * $321);
        $323 = Math_fround($317 - $322);
        $324 = Math_fround($313 * $321);
        $325 = Math_fround($316 * $319);
        $326 = Math_fround($325 + $324);
        $327 = Math_fround(HEAPF32[$$02062$i>>2]);
        $328 = $$02081$i << 2;
        $329 = Math_imul($328, $269)|0;
        $330 = (($$idx59$val) + ($329<<3)|0);
        $331 = Math_fround(HEAPF32[$330>>2]);
        $332 = Math_fround($327 * $331);
        $333 = ((($$02062$i)) + 4|0);
        $334 = Math_fround(HEAPF32[$333>>2]);
        $335 = (((($$idx59$val) + ($329<<3)|0)) + 4|0);
        $336 = Math_fround(HEAPF32[$335>>2]);
        $337 = Math_fround($334 * $336);
        $338 = Math_fround($332 - $337);
        $339 = Math_fround($327 * $336);
        $340 = Math_fround($331 * $334);
        $341 = Math_fround($340 + $339);
        $342 = Math_fround($294 + $338);
        $343 = Math_fround($297 + $341);
        $344 = Math_fround($294 - $338);
        $345 = Math_fround($297 - $341);
        $346 = Math_fround($309 + $323);
        $347 = Math_fround($312 + $326);
        $348 = Math_fround($309 - $323);
        $349 = Math_fround($312 - $326);
        $350 = Math_fround($346 + $342);
        $351 = Math_fround($$sroa$040$0$copyload$i + $350);
        HEAPF32[$$06$i>>2] = $351;
        $352 = Math_fround($347 + $343);
        $353 = Math_fround($$sroa$5$0$copyload$i + $352);
        HEAPF32[$$sroa$5$0$$sroa_idx44$i>>2] = $353;
        $354 = Math_fround($$sroa$011$0$copyload$i * $342);
        $355 = Math_fround($$sroa$0$0$copyload$i61 * $346);
        $356 = Math_fround($355 + $354);
        $357 = Math_fround($$sroa$040$0$copyload$i + $356);
        $358 = Math_fround($$sroa$011$0$copyload$i * $343);
        $359 = Math_fround($$sroa$0$0$copyload$i61 * $347);
        $360 = Math_fround($359 + $358);
        $361 = Math_fround($$sroa$5$0$copyload$i + $360);
        $362 = Math_fround($$sroa$716$0$copyload$i * $345);
        $363 = Math_fround($$sroa$7$0$copyload$i * $349);
        $364 = Math_fround($363 + $362);
        $365 = Math_fround($$sroa$716$0$copyload$i * $344);
        $366 = Math_fround($$sroa$7$0$copyload$i * $348);
        $367 = Math_fround($366 + $365);
        $368 = Math_fround($357 - $364);
        HEAPF32[$$02035$i>>2] = $368;
        $369 = Math_fround($367 + $361);
        HEAPF32[$289>>2] = $369;
        $370 = Math_fround($364 + $357);
        HEAPF32[$$02062$i>>2] = $370;
        $371 = Math_fround($361 - $367);
        HEAPF32[$333>>2] = $371;
        $372 = Math_fround($$sroa$0$0$copyload$i61 * $342);
        $373 = Math_fround($$sroa$011$0$copyload$i * $346);
        $374 = Math_fround($373 + $372);
        $375 = Math_fround($$sroa$040$0$copyload$i + $374);
        $376 = Math_fround($$sroa$0$0$copyload$i61 * $343);
        $377 = Math_fround($$sroa$011$0$copyload$i * $347);
        $378 = Math_fround($377 + $376);
        $379 = Math_fround($$sroa$5$0$copyload$i + $378);
        $380 = Math_fround($$sroa$716$0$copyload$i * $349);
        $381 = Math_fround($$sroa$7$0$copyload$i * $345);
        $382 = Math_fround($380 - $381);
        $383 = Math_fround($$sroa$7$0$copyload$i * $344);
        $384 = Math_fround($$sroa$716$0$copyload$i * $348);
        $385 = Math_fround($383 - $384);
        $386 = Math_fround($382 + $375);
        HEAPF32[$$02044$i>>2] = $386;
        $387 = Math_fround($385 + $379);
        HEAPF32[$304>>2] = $387;
        $388 = Math_fround($375 - $382);
        HEAPF32[$$02053$i>>2] = $388;
        $389 = Math_fround($379 - $385);
        HEAPF32[$318>>2] = $389;
        $390 = ((($$06$i)) + 8|0);
        $391 = ((($$02035$i)) + 8|0);
        $392 = ((($$02044$i)) + 8|0);
        $393 = ((($$02053$i)) + 8|0);
        $394 = ((($$02062$i)) + 8|0);
        $395 = (($$02081$i) + 1)|0;
        $exitcond$i63 = ($395|0)==($$05873|0);
        if ($exitcond$i63) {
         break;
        } else {
         $$02035$i = $391;$$02044$i = $392;$$02053$i = $393;$$02062$i = $394;$$02081$i = $395;$$06$i = $390;
        }
       }
      }
      $396 = (($$02077$i) + 1)|0;
      $exitcond11$i = ($396|0)==($268|0);
      if ($exitcond11$i) {
       break;
      } else {
       $$02077$i = $396;
      }
     }
    }
    break;
   }
   default: {
   }
   }
  } while(0);
  $397 = (($$05674) + -1)|0;
  $398 = ($$05674|0)>(0);
  if ($398) {
   $$05674 = $397;$$05873 = $$0;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _opus_fft_c($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$021 = 0, $$pre = 0, $$sroa$0$0$$sroa_idx = 0, $$sroa$0$0$copyload = Math_fround(0), $$sroa$4$0$$sroa_idx2 = 0, $$sroa$4$0$copyload = Math_fround(0), $10 = 0, $11 = 0, $12 = 0, $13 = Math_fround(0), $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = Math_fround(0), $5 = 0, $6 = 0, $7 = 0, $8 = Math_fround(0), $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 4|0);
 $4 = Math_fround(HEAPF32[$3>>2]);
 $5 = HEAP32[$0>>2]|0;
 $6 = ($5|0)>(0);
 if (!($6)) {
  _opus_fft_impl($0,$2);
  return;
 }
 $7 = ((($0)) + 44|0);
 $$pre = HEAP32[$7>>2]|0;
 $$021 = 0;
 while(1) {
  $$sroa$0$0$$sroa_idx = (($1) + ($$021<<3)|0);
  $$sroa$0$0$copyload = Math_fround(HEAPF32[$$sroa$0$0$$sroa_idx>>2]);
  $$sroa$4$0$$sroa_idx2 = (((($1) + ($$021<<3)|0)) + 4|0);
  $$sroa$4$0$copyload = Math_fround(HEAPF32[$$sroa$4$0$$sroa_idx2>>2]);
  $8 = Math_fround($4 * $$sroa$0$0$copyload);
  $9 = (($$pre) + ($$021<<1)|0);
  $10 = HEAP16[$9>>1]|0;
  $11 = $10 << 16 >> 16;
  $12 = (($2) + ($11<<3)|0);
  HEAPF32[$12>>2] = $8;
  $13 = Math_fround($4 * $$sroa$4$0$copyload);
  $14 = (((($2) + ($11<<3)|0)) + 4|0);
  HEAPF32[$14>>2] = $13;
  $15 = (($$021) + 1)|0;
  $16 = ($15|0)<($5|0);
  if ($16) {
   $$021 = $15;
  } else {
   break;
  }
 }
 _opus_fft_impl($0,$2);
 return;
}
function _clt_mdct_forward_c($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$0186$lcssa = 0, $$0187$lcssa = 0, $$0187248 = 0, $$0188208 = 0, $$0189207 = 0, $$0190206 = 0, $$0191$lcssa = 0, $$0191238 = 0, $$0194$lcssa = 0, $$0194237 = 0, $$0197$lcssa = 0, $$0197236 = 0, $$0200235 = 0, $$0202234 = 0, $$0204210 = 0, $$0249 = 0, $$1$lcssa = 0, $$1192$lcssa = 0, $$1192226 = 0, $$1195$lcssa = 0;
 var $$1195225 = 0, $$1198$lcssa = 0, $$1198224 = 0, $$1201216 = 0, $$1203215 = 0, $$1239 = 0, $$2$lcssa = 0, $$2193219 = 0, $$2196218 = 0, $$2199217 = 0, $$2227 = 0, $$3220 = 0, $$4211 = 0, $$5209 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$lcssa205 = 0, $$sroa$0$0$$sroa_idx = 0, $$sroa$6$0$$sroa_idx49 = 0, $10 = 0;
 var $100 = 0, $101 = Math_fround(0), $102 = 0, $103 = 0, $104 = Math_fround(0), $105 = 0, $106 = Math_fround(0), $107 = 0, $108 = Math_fround(0), $109 = Math_fround(0), $11 = Math_fround(0), $110 = Math_fround(0), $111 = Math_fround(0), $112 = Math_fround(0), $113 = Math_fround(0), $114 = Math_fround(0), $115 = Math_fround(0), $116 = Math_fround(0), $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = Math_fround(0), $13 = 0, $130 = 0, $131 = 0, $132 = Math_fround(0), $133 = Math_fround(0), $134 = Math_fround(0), $135 = 0, $136 = Math_fround(0);
 var $137 = Math_fround(0), $138 = Math_fround(0), $139 = Math_fround(0), $14 = 0, $140 = Math_fround(0), $141 = Math_fround(0), $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = Math_fround(0), $36 = 0, $37 = Math_fround(0), $38 = Math_fround(0), $39 = Math_fround(0), $40 = Math_fround(0), $41 = Math_fround(0), $42 = Math_fround(0), $43 = 0;
 var $44 = Math_fround(0), $45 = Math_fround(0), $46 = 0, $47 = Math_fround(0), $48 = Math_fround(0), $49 = Math_fround(0), $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = Math_fround(0), $76 = 0, $77 = Math_fround(0), $78 = Math_fround(0), $79 = Math_fround(0), $8 = 0, $80 = Math_fround(0), $81 = Math_fround(0), $82 = Math_fround(0);
 var $83 = 0, $84 = Math_fround(0), $85 = Math_fround(0), $86 = Math_fround(0), $87 = Math_fround(0), $88 = 0, $89 = Math_fround(0), $9 = 0, $90 = Math_fround(0), $91 = Math_fround(0), $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond268 = 0;
 var $exitcond272 = 0, $scevgep = 0, $scevgep266 = 0, $scevgep267 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = (((($0)) + 8|0) + ($5<<2)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 4|0);
 $11 = Math_fround(HEAPF32[$10>>2]);
 $12 = HEAP32[$0>>2]|0;
 $13 = ((($0)) + 24|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($5|0)>(0);
 $16 = $12 >> 1;
 if ($15) {
  $$0187248 = $14;$$0249 = 0;$18 = $16;
  while(1) {
   $17 = (($$0187248) + ($18<<2)|0);
   $19 = (($$0249) + 1)|0;
   $20 = $18 >> 1;
   $exitcond272 = ($19|0)==($5|0);
   if ($exitcond272) {
    $$0186$lcssa = $18;$$0187$lcssa = $17;$$lcssa205 = $20;
    break;
   } else {
    $$0187248 = $17;$$0249 = $19;$18 = $20;
   }
  }
 } else {
  $$0186$lcssa = $12;$$0187$lcssa = $14;$$lcssa205 = $16;
 }
 $21 = $$0186$lcssa >> 2;
 $$alloca_mul = $$lcssa205<<2;
 $22 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $$alloca_mul1 = $21<<3;
 $23 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $24 = $4 >> 1;
 $25 = (($1) + ($24<<2)|0);
 $26 = (($1) + ($$lcssa205<<2)|0);
 $27 = ((($26)) + -4|0);
 $28 = (($27) + ($24<<2)|0);
 $29 = (($3) + ($24<<2)|0);
 $30 = (($4) + 3)|0;
 $31 = $30 >> 2;
 $32 = ($4|0)>(0);
 if ($32) {
  $33 = ((($29)) + -4|0);
  $34 = (0 - ($$lcssa205))|0;
  $$0191238 = $25;$$0194237 = $28;$$0197236 = $22;$$0200235 = $29;$$0202234 = $33;$$1239 = 0;
  while(1) {
   $35 = Math_fround(HEAPF32[$$0202234>>2]);
   $36 = (($$0191238) + ($$lcssa205<<2)|0);
   $37 = Math_fround(HEAPF32[$36>>2]);
   $38 = Math_fround($35 * $37);
   $39 = Math_fround(HEAPF32[$$0200235>>2]);
   $40 = Math_fround(HEAPF32[$$0194237>>2]);
   $41 = Math_fround($39 * $40);
   $42 = Math_fround($38 + $41);
   $43 = ((($$0197236)) + 4|0);
   HEAPF32[$$0197236>>2] = $42;
   $44 = Math_fround(HEAPF32[$$0191238>>2]);
   $45 = Math_fround($39 * $44);
   $46 = (($$0194237) + ($34<<2)|0);
   $47 = Math_fround(HEAPF32[$46>>2]);
   $48 = Math_fround($35 * $47);
   $49 = Math_fround($45 - $48);
   $50 = ((($$0197236)) + 8|0);
   HEAPF32[$43>>2] = $49;
   $51 = ((($$0191238)) + 8|0);
   $52 = ((($$0194237)) + -8|0);
   $53 = ((($$0200235)) + 8|0);
   $54 = ((($$0202234)) + -8|0);
   $55 = (($$1239) + 1)|0;
   $56 = ($55|0)<($31|0);
   if ($56) {
    $$0191238 = $51;$$0194237 = $52;$$0197236 = $50;$$0200235 = $53;$$0202234 = $54;$$1239 = $55;
   } else {
    $$0191$lcssa = $51;$$0194$lcssa = $52;$$0197$lcssa = $50;$$1$lcssa = $55;
    break;
   }
  }
 } else {
  $$0191$lcssa = $25;$$0194$lcssa = $28;$$0197$lcssa = $22;$$1$lcssa = 0;
 }
 $57 = (($3) + ($4<<2)|0);
 $58 = ((($57)) + -4|0);
 $59 = (($21) - ($31))|0;
 $60 = ($$1$lcssa|0)<($59|0);
 if ($60) {
  $61 = $21 << 1;
  $62 = (($$1$lcssa) + ($31))|0;
  $63 = $62 << 1;
  $64 = (($61) - ($63))|0;
  $scevgep = (($$0197$lcssa) + ($64<<2)|0);
  $65 = (($63) - ($61))|0;
  $$1192226 = $$0191$lcssa;$$1195225 = $$0194$lcssa;$$1198224 = $$0197$lcssa;$$2227 = $$1$lcssa;
  while(1) {
   $66 = HEAP32[$$1195225>>2]|0;
   $67 = ((($$1198224)) + 4|0);
   HEAP32[$$1198224>>2] = $66;
   $68 = HEAP32[$$1192226>>2]|0;
   $69 = ((($$1198224)) + 8|0);
   HEAP32[$67>>2] = $68;
   $70 = ((($$1192226)) + 8|0);
   $71 = ((($$1195225)) + -8|0);
   $72 = (($$2227) + 1)|0;
   $exitcond268 = ($72|0)==($59|0);
   if ($exitcond268) {
    break;
   } else {
    $$1192226 = $70;$$1195225 = $71;$$1198224 = $69;$$2227 = $72;
   }
  }
  $scevgep266 = (($$0191$lcssa) + ($64<<2)|0);
  $scevgep267 = (($$0194$lcssa) + ($65<<2)|0);
  $$1192$lcssa = $scevgep266;$$1195$lcssa = $scevgep267;$$1198$lcssa = $scevgep;$$2$lcssa = $59;
 } else {
  $$1192$lcssa = $$0191$lcssa;$$1195$lcssa = $$0194$lcssa;$$1198$lcssa = $$0197$lcssa;$$2$lcssa = $$1$lcssa;
 }
 $73 = ($$2$lcssa|0)<($21|0);
 if ($73) {
  $74 = (0 - ($$lcssa205))|0;
  $$1201216 = $3;$$1203215 = $58;$$2193219 = $$1192$lcssa;$$2196218 = $$1195$lcssa;$$2199217 = $$1198$lcssa;$$3220 = $$2$lcssa;
  while(1) {
   $75 = Math_fround(HEAPF32[$$1201216>>2]);
   $76 = (($$2193219) + ($74<<2)|0);
   $77 = Math_fround(HEAPF32[$76>>2]);
   $78 = Math_fround($75 * $77);
   $79 = Math_fround(HEAPF32[$$1203215>>2]);
   $80 = Math_fround(HEAPF32[$$2196218>>2]);
   $81 = Math_fround($79 * $80);
   $82 = Math_fround($81 - $78);
   $83 = ((($$2199217)) + 4|0);
   HEAPF32[$$2199217>>2] = $82;
   $84 = Math_fround(HEAPF32[$$1203215>>2]);
   $85 = Math_fround(HEAPF32[$$2193219>>2]);
   $86 = Math_fround($84 * $85);
   $87 = Math_fround(HEAPF32[$$1201216>>2]);
   $88 = (($$2196218) + ($$lcssa205<<2)|0);
   $89 = Math_fround(HEAPF32[$88>>2]);
   $90 = Math_fround($87 * $89);
   $91 = Math_fround($86 + $90);
   $92 = ((($$2199217)) + 8|0);
   HEAPF32[$83>>2] = $91;
   $93 = ((($$2193219)) + 8|0);
   $94 = ((($$2196218)) + -8|0);
   $95 = ((($$1201216)) + 8|0);
   $96 = ((($$1203215)) + -8|0);
   $97 = (($$3220) + 1)|0;
   $exitcond = ($97|0)==($21|0);
   if ($exitcond) {
    break;
   } else {
    $$1201216 = $95;$$1203215 = $96;$$2193219 = $93;$$2196218 = $94;$$2199217 = $92;$$3220 = $97;
   }
  }
 }
 $98 = ($$0186$lcssa|0)>(3);
 if (!($98)) {
  _opus_fft_impl($9,$23);
  STACKTOP = sp;return;
 }
 $99 = ((($9)) + 44|0);
 $$0204210 = $22;$$4211 = 0;
 while(1) {
  $100 = (($$0187$lcssa) + ($$4211<<2)|0);
  $101 = Math_fround(HEAPF32[$100>>2]);
  $102 = (($$4211) + ($21))|0;
  $103 = (($$0187$lcssa) + ($102<<2)|0);
  $104 = Math_fround(HEAPF32[$103>>2]);
  $105 = ((($$0204210)) + 4|0);
  $106 = Math_fround(HEAPF32[$$0204210>>2]);
  $107 = ((($$0204210)) + 8|0);
  $108 = Math_fround(HEAPF32[$105>>2]);
  $109 = Math_fround($101 * $106);
  $110 = Math_fround($104 * $108);
  $111 = Math_fround($109 - $110);
  $112 = Math_fround($101 * $108);
  $113 = Math_fround($104 * $106);
  $114 = Math_fround($113 + $112);
  $115 = Math_fround($11 * $111);
  $116 = Math_fround($11 * $114);
  $117 = HEAP32[$99>>2]|0;
  $118 = (($117) + ($$4211<<1)|0);
  $119 = HEAP16[$118>>1]|0;
  $120 = $119 << 16 >> 16;
  $$sroa$0$0$$sroa_idx = (($23) + ($120<<3)|0);
  HEAPF32[$$sroa$0$0$$sroa_idx>>2] = $115;
  $$sroa$6$0$$sroa_idx49 = (((($23) + ($120<<3)|0)) + 4|0);
  HEAPF32[$$sroa$6$0$$sroa_idx49>>2] = $116;
  $121 = (($$4211) + 1)|0;
  $122 = ($121|0)<($21|0);
  if ($122) {
   $$0204210 = $107;$$4211 = $121;
  } else {
   break;
  }
 }
 _opus_fft_impl($9,$23);
 if (!($98)) {
  STACKTOP = sp;return;
 }
 $123 = (($$lcssa205) + -1)|0;
 $124 = Math_imul($123, $6)|0;
 $125 = (($2) + ($124<<2)|0);
 $126 = $6 << 1;
 $127 = (0 - ($126))|0;
 $$0188208 = $125;$$0189207 = $2;$$0190206 = $23;$$5209 = 0;
 while(1) {
  $128 = ((($$0190206)) + 4|0);
  $129 = Math_fround(HEAPF32[$128>>2]);
  $130 = (($$5209) + ($21))|0;
  $131 = (($$0187$lcssa) + ($130<<2)|0);
  $132 = Math_fround(HEAPF32[$131>>2]);
  $133 = Math_fround($129 * $132);
  $134 = Math_fround(HEAPF32[$$0190206>>2]);
  $135 = (($$0187$lcssa) + ($$5209<<2)|0);
  $136 = Math_fround(HEAPF32[$135>>2]);
  $137 = Math_fround($134 * $136);
  $138 = Math_fround($133 - $137);
  $139 = Math_fround($132 * $134);
  $140 = Math_fround($129 * $136);
  $141 = Math_fround($139 + $140);
  HEAPF32[$$0189207>>2] = $138;
  HEAPF32[$$0188208>>2] = $141;
  $142 = ((($$0190206)) + 8|0);
  $143 = (($$0189207) + ($126<<2)|0);
  $144 = (($$0188208) + ($127<<2)|0);
  $145 = (($$5209) + 1)|0;
  $146 = ($145|0)<($21|0);
  if ($146) {
   $$0188208 = $144;$$0189207 = $143;$$0190206 = $142;$$5209 = $145;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _clt_mdct_backward_c($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$0178$lcssa = 0, $$0179196 = 0, $$0180194 = 0, $$0181193 = 0, $$0182197 = 0, $$0183$lcssa = 0, $$0183214 = 0, $$0184209 = 0, $$0185208 = 0, $$0186207 = 0, $$0187200 = 0, $$0188203 = 0, $$0215 = 0, $$1210 = 0, $$2$neg = 0, $$2$neg202 = 0, $$2201 = 0, $$3195 = 0, $$lcssa = 0, $$pn = 0;
 var $$pn221 = 0, $$pn222 = 0, $10 = 0, $100 = Math_fround(0), $101 = Math_fround(0), $102 = 0, $103 = Math_fround(0), $104 = Math_fround(0), $105 = Math_fround(0), $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = Math_fround(0), $34 = 0, $35 = Math_fround(0), $36 = Math_fround(0), $37 = Math_fround(0), $38 = 0, $39 = 0;
 var $40 = Math_fround(0), $41 = Math_fround(0), $42 = Math_fround(0), $43 = Math_fround(0), $44 = Math_fround(0), $45 = Math_fround(0), $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $60 = Math_fround(0), $61 = Math_fround(0), $62 = 0, $63 = Math_fround(0), $64 = 0, $65 = 0, $66 = Math_fround(0), $67 = Math_fround(0), $68 = Math_fround(0), $69 = Math_fround(0), $70 = Math_fround(0), $71 = Math_fround(0), $72 = Math_fround(0), $73 = 0, $74 = Math_fround(0), $75 = Math_fround(0), $76 = 0, $77 = 0, $78 = Math_fround(0), $79 = 0;
 var $8 = 0, $80 = 0, $81 = Math_fround(0), $82 = Math_fround(0), $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = Math_fround(0), $87 = Math_fround(0), $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = Math_fround(0), $96 = Math_fround(0), $97 = Math_fround(0);
 var $98 = Math_fround(0), $99 = Math_fround(0), $exitcond = 0, $exitcond226 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = HEAP32[$0>>2]|0;
 $9 = ((($0)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($5|0)>(0);
 $12 = $8 >> 1;
 if ($11) {
  $$0183214 = $10;$$0215 = 0;$14 = $12;
  while(1) {
   $13 = (($$0183214) + ($14<<2)|0);
   $15 = (($$0215) + 1)|0;
   $16 = $14 >> 1;
   $exitcond226 = ($15|0)==($5|0);
   if ($exitcond226) {
    $$0178$lcssa = $14;$$0183$lcssa = $13;$$lcssa = $16;
    break;
   } else {
    $$0183214 = $13;$$0215 = $15;$14 = $16;
   }
  }
 } else {
  $$0178$lcssa = $8;$$0183$lcssa = $10;$$lcssa = $12;
 }
 $17 = $$0178$lcssa >> 2;
 $18 = $4 >> 1;
 $19 = (($2) + ($18<<2)|0);
 $20 = (((($0)) + 8|0) + ($5<<2)|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ($$0178$lcssa|0)>(3);
 if ($22) {
  $23 = ((($21)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = (($$lcssa) + -1)|0;
  $26 = Math_imul($25, $6)|0;
  $27 = (($1) + ($26<<2)|0);
  $28 = $6 << 1;
  $29 = (0 - ($28))|0;
  $$0184209 = $1;$$0185208 = $27;$$0186207 = $24;$$1210 = 0;
  while(1) {
   $30 = ((($$0186207)) + 2|0);
   $31 = HEAP16[$$0186207>>1]|0;
   $32 = $31 << 16 >> 16;
   $33 = Math_fround(HEAPF32[$$0185208>>2]);
   $34 = (($$0183$lcssa) + ($$1210<<2)|0);
   $35 = Math_fround(HEAPF32[$34>>2]);
   $36 = Math_fround($33 * $35);
   $37 = Math_fround(HEAPF32[$$0184209>>2]);
   $38 = (($$1210) + ($17))|0;
   $39 = (($$0183$lcssa) + ($38<<2)|0);
   $40 = Math_fround(HEAPF32[$39>>2]);
   $41 = Math_fround($37 * $40);
   $42 = Math_fround($36 + $41);
   $43 = Math_fround($35 * $37);
   $44 = Math_fround($33 * $40);
   $45 = Math_fround($43 - $44);
   $46 = $32 << 1;
   $47 = $46 | 1;
   $48 = (($19) + ($47<<2)|0);
   HEAPF32[$48>>2] = $42;
   $49 = (($19) + ($46<<2)|0);
   HEAPF32[$49>>2] = $45;
   $50 = (($$0184209) + ($28<<2)|0);
   $51 = (($$0185208) + ($29<<2)|0);
   $52 = (($$1210) + 1)|0;
   $53 = ($52|0)<($17|0);
   if ($53) {
    $$0184209 = $50;$$0185208 = $51;$$0186207 = $30;$$1210 = $52;
   } else {
    break;
   }
  }
  _opus_fft_impl($21,$19);
  $54 = (($17) + 1)|0;
  $55 = $54 >> 1;
  if ($22) {
   $56 = (($19) + ($$lcssa<<2)|0);
   $57 = (($17) + -1)|0;
   $58 = (($$lcssa) + -1)|0;
   $$0187200 = $19;$$2$neg202 = 0;$$2201 = 0;$$pn222 = $56;
   while(1) {
    $$0188203 = ((($$pn222)) + -8|0);
    $59 = ((($$0187200)) + 4|0);
    $60 = Math_fround(HEAPF32[$59>>2]);
    $61 = Math_fround(HEAPF32[$$0187200>>2]);
    $62 = (($$0183$lcssa) + ($$2201<<2)|0);
    $63 = Math_fround(HEAPF32[$62>>2]);
    $64 = (($$2201) + ($17))|0;
    $65 = (($$0183$lcssa) + ($64<<2)|0);
    $66 = Math_fround(HEAPF32[$65>>2]);
    $67 = Math_fround($60 * $63);
    $68 = Math_fround($61 * $66);
    $69 = Math_fround($67 + $68);
    $70 = Math_fround($60 * $66);
    $71 = Math_fround($61 * $63);
    $72 = Math_fround($70 - $71);
    $73 = ((($$pn222)) + -4|0);
    $74 = Math_fround(HEAPF32[$73>>2]);
    $75 = Math_fround(HEAPF32[$$0188203>>2]);
    HEAPF32[$$0187200>>2] = $69;
    HEAPF32[$73>>2] = $72;
    $76 = (($57) + ($$2$neg202))|0;
    $77 = (($$0183$lcssa) + ($76<<2)|0);
    $78 = Math_fround(HEAPF32[$77>>2]);
    $79 = (($58) + ($$2$neg202))|0;
    $80 = (($$0183$lcssa) + ($79<<2)|0);
    $81 = Math_fround(HEAPF32[$80>>2]);
    $82 = Math_fround($74 * $78);
    $83 = Math_fround($75 * $81);
    $84 = Math_fround($82 + $83);
    $85 = Math_fround($74 * $81);
    $86 = Math_fround($75 * $78);
    $87 = Math_fround($85 - $86);
    HEAPF32[$$0188203>>2] = $84;
    HEAPF32[$59>>2] = $87;
    $88 = ((($$0187200)) + 8|0);
    $89 = (($$2201) + 1)|0;
    $$2$neg = $$2201 ^ -1;
    $90 = ($89|0)<($55|0);
    if ($90) {
     $$0187200 = $88;$$2$neg202 = $$2$neg;$$2201 = $89;$$pn222 = $$0188203;
    } else {
     break;
    }
   }
  }
 } else {
  _opus_fft_impl($21,$19);
 }
 $91 = (($4|0) / 2)&-1;
 $92 = ($4|0)>(1);
 if (!($92)) {
  return;
 }
 $93 = (($2) + ($4<<2)|0);
 $94 = (($3) + ($4<<2)|0);
 $$0180194 = $3;$$0181193 = $2;$$3195 = 0;$$pn = $93;$$pn221 = $94;
 while(1) {
  $$0179196 = ((($$pn221)) + -4|0);
  $$0182197 = ((($$pn)) + -4|0);
  $95 = Math_fround(HEAPF32[$$0182197>>2]);
  $96 = Math_fround(HEAPF32[$$0181193>>2]);
  $97 = Math_fround(HEAPF32[$$0179196>>2]);
  $98 = Math_fround($96 * $97);
  $99 = Math_fround(HEAPF32[$$0180194>>2]);
  $100 = Math_fround($95 * $99);
  $101 = Math_fround($98 - $100);
  $102 = ((($$0181193)) + 4|0);
  HEAPF32[$$0181193>>2] = $101;
  $103 = Math_fround($96 * $99);
  $104 = Math_fround($95 * $97);
  $105 = Math_fround($104 + $103);
  HEAPF32[$$0182197>>2] = $105;
  $106 = ((($$0180194)) + 4|0);
  $107 = (($$3195) + 1)|0;
  $exitcond = ($107|0)==($91|0);
  if ($exitcond) {
   break;
  } else {
   $$0180194 = $106;$$0181193 = $102;$$3195 = $107;$$pn = $$0182197;$$pn221 = $$0179196;
  }
 }
 return;
}
function _opus_custom_mode_create($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$2 = 0, $$mask = 0, $$mask34 = 0, $$mask35 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond38 = 0, $or$cond40 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(48000);
 if ($3) {
  $4 = ($1|0)==(960);
  $$mask = $1 & 2147483647;
  $5 = ($$mask|0)==(480);
  $or$cond = $4 | $5;
  $$mask34 = $1 & 1073741823;
  $6 = ($$mask34|0)==(240);
  $or$cond38 = $or$cond | $6;
  $$mask35 = $1 & 536870911;
  $7 = ($$mask35|0)==(120);
  $or$cond40 = $or$cond38 | $7;
  if ($or$cond40) {
   $8 = ($2|0)==(0|0);
   if ($8) {
    $$2 = 36360;
    return ($$2|0);
   }
   HEAP32[$2>>2] = 0;
   $$2 = 36360;
   return ($$2|0);
  }
 }
 $9 = ($2|0)==(0|0);
 if ($9) {
  $$2 = 0;
  return ($$2|0);
 }
 HEAP32[$2>>2] = -1;
 $$2 = 0;
 return ($$2|0);
}
function _pitch_downsample($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$071 = 0, $$07180$i = Math_fround(0), $$07180$i$phi = Math_fround(0), $$07279$i = Math_fround(0), $$07279$i$phi = Math_fround(0), $$07378$i = Math_fround(0), $$07378$i$phi = Math_fround(0), $$07477$i = Math_fround(0), $$07477$i$phi = Math_fround(0), $$07576$i = Math_fround(0), $$081$i = 0, $$170 = 0, $$pre$pre = Math_fround(0), $10 = 0, $100 = Math_fround(0), $101 = Math_fround(0), $102 = 0, $103 = Math_fround(0), $104 = Math_fround(0), $105 = Math_fround(0);
 var $106 = Math_fround(0), $107 = Math_fround(0), $108 = Math_fround(0), $109 = 0, $11 = Math_fround(0), $110 = Math_fround(0), $111 = Math_fround(0), $112 = 0, $113 = Math_fround(0), $114 = Math_fround(0), $115 = 0, $116 = Math_fround(0), $117 = Math_fround(0), $118 = Math_fround(0), $119 = Math_fround(0), $12 = 0, $120 = Math_fround(0), $121 = Math_fround(0), $122 = Math_fround(0), $123 = Math_fround(0);
 var $124 = Math_fround(0), $125 = Math_fround(0), $126 = 0, $127 = 0, $128 = Math_fround(0), $129 = Math_fround(0), $13 = Math_fround(0), $130 = Math_fround(0), $131 = Math_fround(0), $132 = Math_fround(0), $133 = Math_fround(0), $134 = Math_fround(0), $135 = Math_fround(0), $136 = Math_fround(0), $137 = Math_fround(0), $138 = Math_fround(0), $139 = 0, $14 = Math_fround(0), $15 = Math_fround(0), $16 = 0;
 var $17 = Math_fround(0), $18 = Math_fround(0), $19 = Math_fround(0), $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = Math_fround(0), $26 = 0, $27 = 0, $28 = Math_fround(0), $29 = Math_fround(0), $30 = Math_fround(0), $31 = 0, $32 = Math_fround(0), $33 = Math_fround(0), $34 = Math_fround(0), $35 = 0, $36 = 0;
 var $37 = 0, $38 = Math_fround(0), $39 = Math_fround(0), $40 = Math_fround(0), $41 = Math_fround(0), $42 = Math_fround(0), $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = 0, $49 = Math_fround(0), $5 = 0, $50 = Math_fround(0), $51 = Math_fround(0), $52 = 0, $53 = Math_fround(0), $54 = Math_fround(0), $55 = Math_fround(0);
 var $56 = 0, $57 = Math_fround(0), $58 = Math_fround(0), $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = Math_fround(0), $64 = 0, $65 = 0, $66 = Math_fround(0), $67 = Math_fround(0), $68 = Math_fround(0), $69 = 0, $7 = 0, $70 = Math_fround(0), $71 = Math_fround(0), $72 = Math_fround(0), $73 = 0;
 var $74 = Math_fround(0), $75 = Math_fround(0), $76 = 0, $77 = 0, $78 = Math_fround(0), $79 = Math_fround(0), $8 = 0, $80 = Math_fround(0), $81 = Math_fround(0), $82 = Math_fround(0), $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = Math_fround(0), $87 = 0, $88 = Math_fround(0), $89 = Math_fround(0), $9 = 0, $90 = Math_fround(0), $91 = Math_fround(0);
 var $92 = 0, $93 = Math_fround(0), $94 = Math_fround(0), $95 = Math_fround(0), $96 = Math_fround(0), $97 = 0, $98 = Math_fround(0), $99 = Math_fround(0), $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $5 = sp + 16|0;
 $6 = sp;
 $7 = $2 >> 1;
 $8 = ($2|0)>(3);
 $9 = HEAP32[$0>>2]|0;
 $10 = ((($9)) + 4|0);
 if ($8) {
  $11 = Math_fround(HEAPF32[$10>>2]);
  $12 = ((($9)) + 12|0);
  $13 = Math_fround(HEAPF32[$12>>2]);
  $14 = Math_fround($11 + $13);
  $15 = Math_fround($14 * Math_fround(0.5));
  $16 = ((($9)) + 8|0);
  $17 = Math_fround(HEAPF32[$16>>2]);
  $18 = Math_fround($17 + $15);
  $19 = Math_fround($18 * Math_fround(0.5));
  $20 = ((($1)) + 4|0);
  HEAPF32[$20>>2] = $19;
  $21 = ($2|0)>(5);
  if ($21) {
   $$071 = 2;
   while(1) {
    $22 = $$071 << 1;
    $23 = (($22) + -1)|0;
    $24 = (($9) + ($23<<2)|0);
    $25 = Math_fround(HEAPF32[$24>>2]);
    $26 = $22 | 1;
    $27 = (($9) + ($26<<2)|0);
    $28 = Math_fround(HEAPF32[$27>>2]);
    $29 = Math_fround($25 + $28);
    $30 = Math_fround($29 * Math_fround(0.5));
    $31 = (($9) + ($22<<2)|0);
    $32 = Math_fround(HEAPF32[$31>>2]);
    $33 = Math_fround($32 + $30);
    $34 = Math_fround($33 * Math_fround(0.5));
    $35 = (($1) + ($$071<<2)|0);
    HEAPF32[$35>>2] = $34;
    $36 = (($$071) + 1)|0;
    $37 = ($36|0)<($7|0);
    if ($37) {
     $$071 = $36;
    } else {
     break;
    }
   }
  }
 }
 $38 = Math_fround(HEAPF32[$10>>2]);
 $39 = Math_fround($38 * Math_fround(0.5));
 $40 = Math_fround(HEAPF32[$9>>2]);
 $41 = Math_fround($39 + $40);
 $42 = Math_fround($41 * Math_fround(0.5));
 HEAPF32[$1>>2] = $42;
 $43 = ($3|0)==(2);
 if ($43) {
  $44 = ((($0)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ((($45)) + 4|0);
  if ($8) {
   $47 = Math_fround(HEAPF32[$46>>2]);
   $48 = ((($45)) + 12|0);
   $49 = Math_fround(HEAPF32[$48>>2]);
   $50 = Math_fround($47 + $49);
   $51 = Math_fround($50 * Math_fround(0.5));
   $52 = ((($45)) + 8|0);
   $53 = Math_fround(HEAPF32[$52>>2]);
   $54 = Math_fround($53 + $51);
   $55 = Math_fround($54 * Math_fround(0.5));
   $56 = ((($1)) + 4|0);
   $57 = Math_fround(HEAPF32[$56>>2]);
   $58 = Math_fround($57 + $55);
   HEAPF32[$56>>2] = $58;
   $59 = ($2|0)>(5);
   if ($59) {
    $$170 = 2;
    while(1) {
     $60 = $$170 << 1;
     $61 = (($60) + -1)|0;
     $62 = (($45) + ($61<<2)|0);
     $63 = Math_fround(HEAPF32[$62>>2]);
     $64 = $60 | 1;
     $65 = (($45) + ($64<<2)|0);
     $66 = Math_fround(HEAPF32[$65>>2]);
     $67 = Math_fround($63 + $66);
     $68 = Math_fround($67 * Math_fround(0.5));
     $69 = (($45) + ($60<<2)|0);
     $70 = Math_fround(HEAPF32[$69>>2]);
     $71 = Math_fround($70 + $68);
     $72 = Math_fround($71 * Math_fround(0.5));
     $73 = (($1) + ($$170<<2)|0);
     $74 = Math_fround(HEAPF32[$73>>2]);
     $75 = Math_fround($74 + $72);
     HEAPF32[$73>>2] = $75;
     $76 = (($$170) + 1)|0;
     $77 = ($76|0)<($7|0);
     if ($77) {
      $$170 = $76;
     } else {
      break;
     }
    }
    $$pre$pre = Math_fround(HEAPF32[$1>>2]);
    $84 = $$pre$pre;
   } else {
    $84 = $42;
   }
  } else {
   $84 = $42;
  }
  $78 = Math_fround(HEAPF32[$46>>2]);
  $79 = Math_fround($78 * Math_fround(0.5));
  $80 = Math_fround(HEAPF32[$45>>2]);
  $81 = Math_fround($79 + $80);
  $82 = Math_fround($81 * Math_fround(0.5));
  $83 = Math_fround($84 + $82);
  HEAPF32[$1>>2] = $83;
 }
 (__celt_autocorr($1,$5,0,0,4,$7,$4)|0);
 $85 = Math_fround(HEAPF32[$5>>2]);
 $86 = Math_fround($85 * Math_fround(1.00010002));
 HEAPF32[$5>>2] = $86;
 $87 = ((($5)) + 4|0);
 $88 = Math_fround(HEAPF32[$87>>2]);
 $89 = Math_fround($88 * Math_fround(0.00800000038));
 $90 = Math_fround($89 * Math_fround(0.00800000038));
 $91 = Math_fround($88 - $90);
 HEAPF32[$87>>2] = $91;
 $92 = ((($5)) + 8|0);
 $93 = Math_fround(HEAPF32[$92>>2]);
 $94 = Math_fround($93 * Math_fround(0.0160000008));
 $95 = Math_fround($94 * Math_fround(0.0160000008));
 $96 = Math_fround($93 - $95);
 HEAPF32[$92>>2] = $96;
 $97 = ((($5)) + 12|0);
 $98 = Math_fround(HEAPF32[$97>>2]);
 $99 = Math_fround($98 * Math_fround(0.0240000002));
 $100 = Math_fround($99 * Math_fround(0.0240000002));
 $101 = Math_fround($98 - $100);
 HEAPF32[$97>>2] = $101;
 $102 = ((($5)) + 16|0);
 $103 = Math_fround(HEAPF32[$102>>2]);
 $104 = Math_fround($103 * Math_fround(0.0320000015));
 $105 = Math_fround($104 * Math_fround(0.0320000015));
 $106 = Math_fround($103 - $105);
 HEAPF32[$102>>2] = $106;
 __celt_lpc($6,$5,4);
 $107 = Math_fround(HEAPF32[$6>>2]);
 $108 = Math_fround($107 * Math_fround(0.899999976));
 HEAPF32[$6>>2] = $108;
 $109 = ((($6)) + 4|0);
 $110 = Math_fround(HEAPF32[$109>>2]);
 $111 = Math_fround($110 * Math_fround(0.809999942));
 HEAPF32[$109>>2] = $111;
 $112 = ((($6)) + 8|0);
 $113 = Math_fround(HEAPF32[$112>>2]);
 $114 = Math_fround($113 * Math_fround(0.728999912));
 HEAPF32[$112>>2] = $114;
 $115 = ((($6)) + 12|0);
 $116 = Math_fround(HEAPF32[$115>>2]);
 $117 = Math_fround($116 * Math_fround(0.656099916));
 HEAPF32[$115>>2] = $117;
 $118 = Math_fround($108 + Math_fround(0.800000011));
 $119 = Math_fround($108 * Math_fround(0.800000011));
 $120 = Math_fround($111 + $119);
 $121 = Math_fround($111 * Math_fround(0.800000011));
 $122 = Math_fround($114 + $121);
 $123 = Math_fround($114 * Math_fround(0.800000011));
 $124 = Math_fround($117 + $123);
 $125 = Math_fround($117 * Math_fround(0.800000011));
 $126 = ($2|0)>(1);
 if (!($126)) {
  STACKTOP = sp;return;
 }
 $$07180$i = Math_fround(0.0);$$07279$i = Math_fround(0.0);$$07378$i = Math_fround(0.0);$$07477$i = Math_fround(0.0);$$07576$i = Math_fround(0.0);$$081$i = 0;
 while(1) {
  $127 = (($1) + ($$081$i<<2)|0);
  $128 = Math_fround(HEAPF32[$127>>2]);
  $129 = Math_fround($118 * $$07576$i);
  $130 = Math_fround($129 + $128);
  $131 = Math_fround($120 * $$07477$i);
  $132 = Math_fround($131 + $130);
  $133 = Math_fround($122 * $$07378$i);
  $134 = Math_fround($133 + $132);
  $135 = Math_fround($124 * $$07279$i);
  $136 = Math_fround($135 + $134);
  $137 = Math_fround($125 * $$07180$i);
  $138 = Math_fround($137 + $136);
  HEAPF32[$127>>2] = $138;
  $139 = (($$081$i) + 1)|0;
  $exitcond$i = ($139|0)==($7|0);
  if ($exitcond$i) {
   break;
  } else {
   $$07477$i$phi = $$07576$i;$$07378$i$phi = $$07477$i;$$07279$i$phi = $$07378$i;$$07180$i$phi = $$07279$i;$$07576$i = $128;$$081$i = $139;$$07477$i = $$07477$i$phi;$$07378$i = $$07378$i$phi;$$07279$i = $$07279$i$phi;$$07180$i = $$07180$i$phi;
  }
 }
 STACKTOP = sp;return;
}
function _celt_pitch_xcorr_c($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0$lcssa = 0, $$0$lcssa$i = 0, $$01011$i$us = 0, $$012$i$us = Math_fround(0), $$0154$lcssa$i = 0, $$0154168$i = 0, $$0157$lcssa$i = 0, $$0157167$i = 0, $$0158$lcssa$i = Math_fround(0), $$0158166$i = Math_fround(0), $$0160$lcssa$i = Math_fround(0), $$0162$lcssa$i = Math_fround(0), $$0162165$i = Math_fround(0), $$0163$lcssa$i = Math_fround(0), $$0163164$i = Math_fround(0), $$0169$i = 0, $$056 = 0, $$1$i = 0, $$1155$i = 0, $$1159$i = Math_fround(0);
 var $$1161$i = Math_fround(0), $$155$us = 0, $$2$i = 0, $$2156$i = 0, $$sroa$0$0 = 0, $$sroa$0$1 = 0, $$sroa$0$2 = 0, $$sroa$0$3 = 0, $$sroa$15$0 = 0, $$sroa$15$1 = 0, $$sroa$15$2 = 0, $$sroa$15$3 = 0, $$sroa$27$0 = 0, $$sroa$27$1 = 0, $$sroa$27$2 = 0, $$sroa$27$3 = 0, $$sroa$39$1 = 0, $$sroa$39$2 = 0, $$sroa$39$3 = 0, $$sroa$39$4 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = Math_fround(0), $105 = 0, $106 = Math_fround(0), $107 = Math_fround(0), $108 = Math_fround(0), $109 = Math_fround(0), $11 = 0, $110 = 0, $111 = Math_fround(0), $112 = Math_fround(0), $113 = Math_fround(0), $114 = 0, $115 = Math_fround(0), $116 = Math_fround(0), $117 = Math_fround(0);
 var $118 = 0, $119 = Math_fround(0), $12 = 0, $120 = Math_fround(0), $121 = Math_fround(0), $122 = 0, $123 = 0, $124 = Math_fround(0), $125 = Math_fround(0), $126 = Math_fround(0), $127 = Math_fround(0), $128 = Math_fround(0), $129 = 0, $13 = 0, $130 = Math_fround(0), $131 = Math_fround(0), $132 = Math_fround(0), $133 = 0, $134 = Math_fround(0), $135 = Math_fround(0);
 var $136 = Math_fround(0), $137 = 0, $138 = Math_fround(0), $139 = Math_fround(0), $14 = 0, $140 = Math_fround(0), $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = Math_fround(0), $157 = 0, $158 = Math_fround(0), $159 = Math_fround(0), $16 = Math_fround(0), $160 = Math_fround(0), $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = Math_fround(0), $19 = 0, $20 = Math_fround(0), $21 = 0, $22 = Math_fround(0), $23 = 0;
 var $24 = Math_fround(0), $25 = Math_fround(0), $26 = Math_fround(0), $27 = Math_fround(0), $28 = Math_fround(0), $29 = Math_fround(0), $30 = Math_fround(0), $31 = Math_fround(0), $32 = Math_fround(0), $33 = Math_fround(0), $34 = Math_fround(0), $35 = Math_fround(0), $36 = Math_fround(0), $37 = 0, $38 = Math_fround(0), $39 = 0, $40 = Math_fround(0), $41 = Math_fround(0), $42 = Math_fround(0), $43 = Math_fround(0);
 var $44 = Math_fround(0), $45 = Math_fround(0), $46 = Math_fround(0), $47 = Math_fround(0), $48 = Math_fround(0), $49 = 0, $50 = Math_fround(0), $51 = 0, $52 = Math_fround(0), $53 = Math_fround(0), $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = Math_fround(0), $59 = Math_fround(0), $6 = 0, $60 = Math_fround(0), $61 = 0, $62 = Math_fround(0);
 var $63 = 0, $64 = Math_fround(0), $65 = Math_fround(0), $66 = Math_fround(0), $67 = Math_fround(0), $68 = Math_fround(0), $69 = Math_fround(0), $7 = 0, $70 = Math_fround(0), $71 = Math_fround(0), $72 = Math_fround(0), $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = Math_fround(0), $83 = 0, $84 = Math_fround(0), $85 = Math_fround(0), $86 = Math_fround(0), $87 = Math_fround(0), $88 = 0, $89 = Math_fround(0), $9 = 0, $90 = Math_fround(0), $91 = Math_fround(0), $92 = 0, $93 = Math_fround(0), $94 = Math_fround(0), $95 = Math_fround(0), $96 = 0, $97 = Math_fround(0), $98 = Math_fround(0), $99 = Math_fround(0);
 var $exitcond = 0, $exitcond$i$us = 0, $scevgep = 0, $scevgep$i = 0, $scevgep182$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = (($4) + -3)|0;
 $7 = ($4|0)>(3);
 if ($7) {
  $8 = (($3) + -3)|0;
  $9 = ($3|0)>(3);
  $10 = (($3) + -4)|0;
  $11 = $10 & -4;
  $12 = (($11) + 4)|0;
  $13 = (($11) + 7)|0;
  $scevgep$i = (($0) + ($12<<2)|0);
  $$056 = 0;
  while(1) {
   $14 = (($1) + ($$056<<2)|0);
   $15 = ((($14)) + 4|0);
   $16 = Math_fround(HEAPF32[$14>>2]);
   $17 = ((($14)) + 8|0);
   $18 = Math_fround(HEAPF32[$15>>2]);
   $19 = ((($14)) + 12|0);
   $20 = Math_fround(HEAPF32[$17>>2]);
   if ($9) {
    $$0154168$i = $19;$$0157167$i = 0;$$0158166$i = $16;$$0162165$i = $20;$$0163164$i = $18;$$0169$i = $0;$27 = Math_fround(0.0);$30 = Math_fround(0.0);$33 = Math_fround(0.0);$36 = Math_fround(0.0);
    while(1) {
     $21 = ((($$0169$i)) + 4|0);
     $22 = Math_fround(HEAPF32[$$0169$i>>2]);
     $23 = ((($$0154168$i)) + 4|0);
     $24 = Math_fround(HEAPF32[$$0154168$i>>2]);
     $25 = Math_fround($$0158166$i * $22);
     $26 = Math_fround($27 + $25);
     $28 = Math_fround($$0163164$i * $22);
     $29 = Math_fround($30 + $28);
     $31 = Math_fround($$0162165$i * $22);
     $32 = Math_fround($33 + $31);
     $34 = Math_fround($22 * $24);
     $35 = Math_fround($36 + $34);
     $37 = ((($$0169$i)) + 8|0);
     $38 = Math_fround(HEAPF32[$21>>2]);
     $39 = ((($$0154168$i)) + 8|0);
     $40 = Math_fround(HEAPF32[$23>>2]);
     $41 = Math_fround($$0163164$i * $38);
     $42 = Math_fround($26 + $41);
     $43 = Math_fround($$0162165$i * $38);
     $44 = Math_fround($29 + $43);
     $45 = Math_fround($24 * $38);
     $46 = Math_fround($32 + $45);
     $47 = Math_fround($38 * $40);
     $48 = Math_fround($35 + $47);
     $49 = ((($$0169$i)) + 12|0);
     $50 = Math_fround(HEAPF32[$37>>2]);
     $51 = ((($$0154168$i)) + 12|0);
     $52 = Math_fround(HEAPF32[$39>>2]);
     $53 = Math_fround($$0162165$i * $50);
     $54 = Math_fround($42 + $53);
     $55 = Math_fround($24 * $50);
     $56 = Math_fround($44 + $55);
     $57 = Math_fround($40 * $50);
     $58 = Math_fround($46 + $57);
     $59 = Math_fround($50 * $52);
     $60 = Math_fround($48 + $59);
     $61 = ((($$0169$i)) + 16|0);
     $62 = Math_fround(HEAPF32[$49>>2]);
     $63 = ((($$0154168$i)) + 16|0);
     $64 = Math_fround(HEAPF32[$51>>2]);
     $65 = Math_fround($24 * $62);
     $66 = Math_fround($54 + $65);
     $67 = Math_fround($40 * $62);
     $68 = Math_fround($56 + $67);
     $69 = Math_fround($52 * $62);
     $70 = Math_fround($58 + $69);
     $71 = Math_fround($62 * $64);
     $72 = Math_fround($60 + $71);
     $73 = (($$0157167$i) + 4)|0;
     $74 = ($73|0)<($8|0);
     if ($74) {
      $$0154168$i = $63;$$0157167$i = $73;$$0158166$i = $40;$$0162165$i = $64;$$0163164$i = $52;$$0169$i = $61;$27 = $66;$30 = $68;$33 = $70;$36 = $72;
     } else {
      break;
     }
    }
    $75 = (HEAPF32[tempDoublePtr>>2]=$72,HEAP32[tempDoublePtr>>2]|0);
    $76 = (HEAPF32[tempDoublePtr>>2]=$70,HEAP32[tempDoublePtr>>2]|0);
    $77 = (HEAPF32[tempDoublePtr>>2]=$68,HEAP32[tempDoublePtr>>2]|0);
    $78 = (HEAPF32[tempDoublePtr>>2]=$66,HEAP32[tempDoublePtr>>2]|0);
    $scevgep182$i = (($14) + ($13<<2)|0);
    $$0$lcssa$i = $scevgep$i;$$0154$lcssa$i = $scevgep182$i;$$0157$lcssa$i = $12;$$0158$lcssa$i = $40;$$0160$lcssa$i = $24;$$0162$lcssa$i = $64;$$0163$lcssa$i = $52;$$sroa$0$0 = $78;$$sroa$15$0 = $77;$$sroa$27$0 = $76;$$sroa$39$1 = $75;$87 = $66;$91 = $68;$95 = $70;$99 = $72;
   } else {
    $$0$lcssa$i = $0;$$0154$lcssa$i = $19;$$0157$lcssa$i = 0;$$0158$lcssa$i = $16;$$0160$lcssa$i = Math_fround(0.0);$$0162$lcssa$i = $20;$$0163$lcssa$i = $18;$$sroa$0$0 = 0;$$sroa$15$0 = 0;$$sroa$27$0 = 0;$$sroa$39$1 = 0;$87 = Math_fround(0.0);$91 = Math_fround(0.0);$95 = Math_fround(0.0);$99 = Math_fround(0.0);
   }
   $79 = $$0157$lcssa$i | 1;
   $80 = ($$0157$lcssa$i|0)<($3|0);
   if ($80) {
    $81 = ((($$0$lcssa$i)) + 4|0);
    $82 = Math_fround(HEAPF32[$$0$lcssa$i>>2]);
    $83 = ((($$0154$lcssa$i)) + 4|0);
    $84 = Math_fround(HEAPF32[$$0154$lcssa$i>>2]);
    $85 = Math_fround($$0158$lcssa$i * $82);
    $86 = Math_fround($87 + $85);
    $88 = (HEAPF32[tempDoublePtr>>2]=$86,HEAP32[tempDoublePtr>>2]|0);
    $89 = Math_fround($$0163$lcssa$i * $82);
    $90 = Math_fround($91 + $89);
    $92 = (HEAPF32[tempDoublePtr>>2]=$90,HEAP32[tempDoublePtr>>2]|0);
    $93 = Math_fround($$0162$lcssa$i * $82);
    $94 = Math_fround($95 + $93);
    $96 = (HEAPF32[tempDoublePtr>>2]=$94,HEAP32[tempDoublePtr>>2]|0);
    $97 = Math_fround($82 * $84);
    $98 = Math_fround($99 + $97);
    $100 = (HEAPF32[tempDoublePtr>>2]=$98,HEAP32[tempDoublePtr>>2]|0);
    $$1$i = $81;$$1155$i = $83;$$1161$i = $84;$$sroa$0$1 = $88;$$sroa$15$1 = $92;$$sroa$27$1 = $96;$$sroa$39$2 = $100;$109 = $86;$113 = $90;$117 = $94;$121 = $98;
   } else {
    $$1$i = $$0$lcssa$i;$$1155$i = $$0154$lcssa$i;$$1161$i = $$0160$lcssa$i;$$sroa$0$1 = $$sroa$0$0;$$sroa$15$1 = $$sroa$15$0;$$sroa$27$1 = $$sroa$27$0;$$sroa$39$2 = $$sroa$39$1;$109 = $87;$113 = $91;$117 = $95;$121 = $99;
   }
   $101 = (($79) + 1)|0;
   $102 = ($79|0)<($3|0);
   if ($102) {
    $103 = ((($$1$i)) + 4|0);
    $104 = Math_fround(HEAPF32[$$1$i>>2]);
    $105 = ((($$1155$i)) + 4|0);
    $106 = Math_fround(HEAPF32[$$1155$i>>2]);
    $107 = Math_fround($$0163$lcssa$i * $104);
    $108 = Math_fround($109 + $107);
    $110 = (HEAPF32[tempDoublePtr>>2]=$108,HEAP32[tempDoublePtr>>2]|0);
    $111 = Math_fround($$0162$lcssa$i * $104);
    $112 = Math_fround($113 + $111);
    $114 = (HEAPF32[tempDoublePtr>>2]=$112,HEAP32[tempDoublePtr>>2]|0);
    $115 = Math_fround($$1161$i * $104);
    $116 = Math_fround($117 + $115);
    $118 = (HEAPF32[tempDoublePtr>>2]=$116,HEAP32[tempDoublePtr>>2]|0);
    $119 = Math_fround($104 * $106);
    $120 = Math_fround($121 + $119);
    $122 = (HEAPF32[tempDoublePtr>>2]=$120,HEAP32[tempDoublePtr>>2]|0);
    $$1159$i = $106;$$2$i = $103;$$2156$i = $105;$$sroa$0$2 = $110;$$sroa$15$2 = $114;$$sroa$27$2 = $118;$$sroa$39$3 = $122;$128 = $108;$132 = $112;$136 = $116;$140 = $120;
   } else {
    $$1159$i = $$0158$lcssa$i;$$2$i = $$1$i;$$2156$i = $$1155$i;$$sroa$0$2 = $$sroa$0$1;$$sroa$15$2 = $$sroa$15$1;$$sroa$27$2 = $$sroa$27$1;$$sroa$39$3 = $$sroa$39$2;$128 = $109;$132 = $113;$136 = $117;$140 = $121;
   }
   $123 = ($101|0)<($3|0);
   if ($123) {
    $124 = Math_fround(HEAPF32[$$2$i>>2]);
    $125 = Math_fround(HEAPF32[$$2156$i>>2]);
    $126 = Math_fround($$0162$lcssa$i * $124);
    $127 = Math_fround($128 + $126);
    $129 = (HEAPF32[tempDoublePtr>>2]=$127,HEAP32[tempDoublePtr>>2]|0);
    $130 = Math_fround($$1161$i * $124);
    $131 = Math_fround($132 + $130);
    $133 = (HEAPF32[tempDoublePtr>>2]=$131,HEAP32[tempDoublePtr>>2]|0);
    $134 = Math_fround($$1159$i * $124);
    $135 = Math_fround($136 + $134);
    $137 = (HEAPF32[tempDoublePtr>>2]=$135,HEAP32[tempDoublePtr>>2]|0);
    $138 = Math_fround($124 * $125);
    $139 = Math_fround($140 + $138);
    $141 = (HEAPF32[tempDoublePtr>>2]=$139,HEAP32[tempDoublePtr>>2]|0);
    $$sroa$0$3 = $129;$$sroa$15$3 = $133;$$sroa$27$3 = $137;$$sroa$39$4 = $141;
   } else {
    $$sroa$0$3 = $$sroa$0$2;$$sroa$15$3 = $$sroa$15$2;$$sroa$27$3 = $$sroa$27$2;$$sroa$39$4 = $$sroa$39$3;
   }
   $142 = (($2) + ($$056<<2)|0);
   HEAP32[$142>>2] = $$sroa$0$3;
   $143 = $$056 | 1;
   $144 = (($2) + ($143<<2)|0);
   HEAP32[$144>>2] = $$sroa$15$3;
   $145 = $$056 | 2;
   $146 = (($2) + ($145<<2)|0);
   HEAP32[$146>>2] = $$sroa$27$3;
   $147 = $$056 | 3;
   $148 = (($2) + ($147<<2)|0);
   HEAP32[$148>>2] = $$sroa$39$4;
   $149 = (($$056) + 4)|0;
   $150 = ($149|0)<($6|0);
   if ($150) {
    $$056 = $149;
   } else {
    break;
   }
  }
  $151 = $4 & -4;
  $$0$lcssa = $151;
 } else {
  $$0$lcssa = 0;
 }
 $152 = ($$0$lcssa|0)<($4|0);
 if (!($152)) {
  return;
 }
 $153 = ($3|0)>(0);
 if (!($153)) {
  $scevgep = (($2) + ($$0$lcssa<<2)|0);
  $164 = (($4) - ($$0$lcssa))|0;
  $165 = $164 << 2;
  _memset(($scevgep|0),0,($165|0))|0;
  return;
 }
 $$155$us = $$0$lcssa;
 while(1) {
  $154 = (($1) + ($$155$us<<2)|0);
  $$01011$i$us = 0;$$012$i$us = Math_fround(0.0);
  while(1) {
   $155 = (($0) + ($$01011$i$us<<2)|0);
   $156 = Math_fround(HEAPF32[$155>>2]);
   $157 = (($154) + ($$01011$i$us<<2)|0);
   $158 = Math_fround(HEAPF32[$157>>2]);
   $159 = Math_fround($156 * $158);
   $160 = Math_fround($$012$i$us + $159);
   $161 = (($$01011$i$us) + 1)|0;
   $exitcond$i$us = ($161|0)==($3|0);
   if ($exitcond$i$us) {
    break;
   } else {
    $$01011$i$us = $161;$$012$i$us = $160;
   }
  }
  $162 = (($2) + ($$155$us<<2)|0);
  HEAPF32[$162>>2] = $160;
  $163 = (($$155$us) + 1)|0;
  $exitcond = ($163|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$155$us = $163;
  }
 }
 return;
}
function _pitch_search($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$01011$i$us = 0, $$0102 = 0, $$0102$us = 0, $$012$i$us = Math_fround(0), $$06372$i = 0, $$06372$i74 = 0, $$064$lcssa$i = Math_fround(0), $$064$lcssa$i77 = Math_fround(0), $$06471$i = Math_fround(0), $$06471$i75 = Math_fround(0), $$066108 = 0, $$070$i = 0, $$070$i80 = 0, $$1104 = 0, $$165$i = Math_fround(0), $$165$i85 = Math_fround(0), $$168 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0;
 var $$alloca_mul3 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sroa$0$0 = 0, $$sroa$0$069$i = Math_fround(0), $$sroa$0$069$i81 = Math_fround(0), $$sroa$0$1 = 0, $$sroa$0$2 = 0, $$sroa$0$2$i = Math_fround(0), $$sroa$0$2$i89 = Math_fround(0), $$sroa$0$3 = 0, $$sroa$0$4 = 0, $$sroa$0$599 = 0, $$sroa$013$067$i = Math_fround(0), $$sroa$013$067$i83 = Math_fround(0), $$sroa$013$2$i = Math_fround(0), $$sroa$013$2$i87 = Math_fround(0), $$sroa$10$0 = 0, $$sroa$10$1 = 0, $$sroa$10$2 = 0;
 var $$sroa$6$068$i = Math_fround(0), $$sroa$6$068$i82 = Math_fround(0), $$sroa$6$2$i = Math_fround(0), $$sroa$6$2$i88 = Math_fround(0), $$sroa$616$066$i = Math_fround(0), $$sroa$616$066$i84 = Math_fround(0), $$sroa$616$2$i = Math_fround(0), $$sroa$616$2$i86 = Math_fround(0), $10 = 0, $100 = Math_fround(0), $101 = Math_fround(0), $102 = Math_fround(0), $103 = 0, $104 = Math_fround(0), $105 = Math_fround(0), $106 = 0, $107 = 0, $108 = 0, $109 = Math_fround(0), $11 = 0;
 var $110 = Math_fround(0), $111 = 0, $112 = Math_fround(0), $113 = Math_fround(0), $114 = Math_fround(0), $115 = Math_fround(0), $116 = 0, $117 = Math_fround(0), $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = Math_fround(0), $125 = 0, $126 = Math_fround(0), $127 = 0, $128 = 0;
 var $129 = Math_fround(0), $13 = 0, $130 = Math_fround(0), $131 = Math_fround(0), $132 = Math_fround(0), $133 = 0, $134 = Math_fround(0), $135 = Math_fround(0), $136 = Math_fround(0), $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = Math_fround(0), $30 = Math_fround(0), $31 = Math_fround(0), $32 = 0, $33 = 0, $34 = 0, $35 = Math_fround(0), $36 = 0, $37 = Math_fround(0), $38 = Math_fround(0), $39 = Math_fround(0);
 var $40 = Math_fround(0), $41 = 0, $42 = Math_fround(0), $43 = Math_fround(0), $44 = 0, $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = Math_fround(0), $49 = 0, $50 = Math_fround(0), $51 = Math_fround(0), $52 = Math_fround(0), $53 = Math_fround(0), $54 = 0, $55 = Math_fround(0), $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = Math_fround(0), $72 = 0, $73 = Math_fround(0), $74 = Math_fround(0), $75 = Math_fround(0), $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = Math_fround(0), $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = Math_fround(0), $93 = Math_fround(0), $94 = Math_fround(0), $95 = 0;
 var $96 = 0, $97 = Math_fround(0), $98 = 0, $99 = Math_fround(0), $exitcond$i = 0, $exitcond$i90 = 0, $exitcond$i93$us = 0, $exitcond76$i = 0, $exitcond76$i76 = 0, $ispos = 0, $ispos$us = 0, $ispos70 = 0, $ispos70$us = 0, $neg = 0, $neg$us = 0, $neg71 = 0, $neg71$us = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = (($3) + ($2))|0;
 $7 = $2 >> 2;
 $$alloca_mul = $7<<2;
 $8 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $9 = $6 >> 2;
 $$alloca_mul1 = $9<<2;
 $10 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $11 = $3 >> 1;
 $$alloca_mul3 = $11<<2;
 $12 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;
 $13 = ($2|0)>(3);
 if ($13) {
  $$066108 = 0;
  while(1) {
   $14 = $$066108 << 1;
   $15 = (($0) + ($14<<2)|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($8) + ($$066108<<2)|0);
   HEAP32[$17>>2] = $16;
   $18 = (($$066108) + 1)|0;
   $19 = ($18|0)<($7|0);
   if ($19) {
    $$066108 = $18;
   } else {
    break;
   }
  }
 }
 $20 = ($6|0)>(3);
 if ($20) {
  $$1104 = 0;
  while(1) {
   $21 = $$1104 << 1;
   $22 = (($1) + ($21<<2)|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (($10) + ($$1104<<2)|0);
   HEAP32[$24>>2] = $23;
   $25 = (($$1104) + 1)|0;
   $26 = ($25|0)<($9|0);
   if ($26) {
    $$1104 = $25;
   } else {
    break;
   }
  }
 }
 $27 = $3 >> 2;
 _celt_pitch_xcorr_c($8,$10,$12,$7,$27,0);
 if ($13) {
  $$06372$i = 0;$$06471$i = Math_fround(1.0);
  while(1) {
   $28 = (($10) + ($$06372$i<<2)|0);
   $29 = Math_fround(HEAPF32[$28>>2]);
   $30 = Math_fround($29 * $29);
   $31 = Math_fround($$06471$i + $30);
   $32 = (($$06372$i) + 1)|0;
   $exitcond76$i = ($32|0)==($7|0);
   if ($exitcond76$i) {
    $$064$lcssa$i = $31;
    break;
   } else {
    $$06372$i = $32;$$06471$i = $31;
   }
  }
 } else {
  $$064$lcssa$i = Math_fround(1.0);
 }
 $33 = ($3|0)>(3);
 if ($33) {
  $$070$i = 0;$$165$i = $$064$lcssa$i;$$sroa$0$0 = 0;$$sroa$0$069$i = Math_fround(0.0);$$sroa$013$067$i = Math_fround(-1.0);$$sroa$10$0 = 1;$$sroa$6$068$i = Math_fround(0.0);$$sroa$616$066$i = Math_fround(-1.0);$140 = 0;
  while(1) {
   $34 = (($12) + ($$070$i<<2)|0);
   $35 = Math_fround(HEAPF32[$34>>2]);
   $36 = $35 > Math_fround(0.0);
   if ($36) {
    $37 = Math_fround($35 * Math_fround(9.99999996E-13));
    $38 = Math_fround($37 * $37);
    $39 = Math_fround($$sroa$6$068$i * $38);
    $40 = Math_fround($$sroa$616$066$i * $$165$i);
    $41 = $39 > $40;
    if ($41) {
     $42 = Math_fround($$sroa$0$069$i * $38);
     $43 = Math_fround($$sroa$013$067$i * $$165$i);
     $44 = $42 > $43;
     if ($44) {
      $$sroa$0$1 = $$070$i;$$sroa$0$2$i = $$165$i;$$sroa$013$2$i = $38;$$sroa$10$1 = $140;$$sroa$6$2$i = $$sroa$0$069$i;$$sroa$616$2$i = $$sroa$013$067$i;$141 = $$070$i;
     } else {
      $$sroa$0$1 = $$sroa$0$0;$$sroa$0$2$i = $$sroa$0$069$i;$$sroa$013$2$i = $$sroa$013$067$i;$$sroa$10$1 = $$070$i;$$sroa$6$2$i = $$165$i;$$sroa$616$2$i = $38;$141 = $140;
     }
    } else {
     $$sroa$0$1 = $$sroa$0$0;$$sroa$0$2$i = $$sroa$0$069$i;$$sroa$013$2$i = $$sroa$013$067$i;$$sroa$10$1 = $$sroa$10$0;$$sroa$6$2$i = $$sroa$6$068$i;$$sroa$616$2$i = $$sroa$616$066$i;$141 = $140;
    }
   } else {
    $$sroa$0$1 = $$sroa$0$0;$$sroa$0$2$i = $$sroa$0$069$i;$$sroa$013$2$i = $$sroa$013$067$i;$$sroa$10$1 = $$sroa$10$0;$$sroa$6$2$i = $$sroa$6$068$i;$$sroa$616$2$i = $$sroa$616$066$i;$141 = $140;
   }
   $45 = (($$070$i) + ($7))|0;
   $46 = (($10) + ($45<<2)|0);
   $47 = Math_fround(HEAPF32[$46>>2]);
   $48 = Math_fround($47 * $47);
   $49 = (($10) + ($$070$i<<2)|0);
   $50 = Math_fround(HEAPF32[$49>>2]);
   $51 = Math_fround($50 * $50);
   $52 = Math_fround($48 - $51);
   $53 = Math_fround($$165$i + $52);
   $54 = $53 < Math_fround(1.0);
   $55 = $54 ? Math_fround(1.0) : $53;
   $56 = (($$070$i) + 1)|0;
   $exitcond$i = ($56|0)==($27|0);
   if ($exitcond$i) {
    $$sroa$0$2 = $$sroa$0$1;$$sroa$10$2 = $$sroa$10$1;
    break;
   } else {
    $$070$i = $56;$$165$i = $55;$$sroa$0$0 = $$sroa$0$1;$$sroa$0$069$i = $$sroa$0$2$i;$$sroa$013$067$i = $$sroa$013$2$i;$$sroa$10$0 = $$sroa$10$1;$$sroa$6$068$i = $$sroa$6$2$i;$$sroa$616$066$i = $$sroa$616$2$i;$140 = $141;
   }
  }
 } else {
  $$sroa$0$2 = 0;$$sroa$10$2 = 1;
 }
 $57 = ($3|0)>(1);
 L26: do {
  if ($57) {
   $58 = $$sroa$0$2 << 1;
   $59 = $$sroa$10$2 << 1;
   $60 = $2 >> 1;
   $61 = ($2|0)>(1);
   if (!($61)) {
    $$0102 = 0;
    while(1) {
     $81 = (($12) + ($$0102<<2)|0);
     HEAPF32[$81>>2] = Math_fround(0.0);
     $82 = (($$0102) - ($58))|0;
     $ispos = ($82|0)>(-1);
     $neg = (0 - ($82))|0;
     $83 = $ispos ? $82 : $neg;
     $84 = ($83|0)>(2);
     if ($84) {
      $85 = (($$0102) - ($59))|0;
      $ispos70 = ($85|0)>(-1);
      $neg71 = (0 - ($85))|0;
      $86 = $ispos70 ? $85 : $neg71;
      $87 = ($86|0)>(2);
      if (!($87)) {
       label = 30;
      }
     } else {
      label = 30;
     }
     if ((label|0) == 30) {
      label = 0;
      HEAPF32[$81>>2] = Math_fround(0.0);
     }
     $88 = (($$0102) + 1)|0;
     $89 = ($88|0)<($11|0);
     if ($89) {
      $$0102 = $88;
     } else {
      $$pre$phiZ2D = $60;
      break L26;
     }
    }
   }
   $$0102$us = 0;
   while(1) {
    $62 = (($12) + ($$0102$us<<2)|0);
    HEAPF32[$62>>2] = Math_fround(0.0);
    $63 = (($$0102$us) - ($58))|0;
    $ispos$us = ($63|0)>(-1);
    $neg$us = (0 - ($63))|0;
    $64 = $ispos$us ? $63 : $neg$us;
    $65 = ($64|0)>(2);
    if ($65) {
     $66 = (($$0102$us) - ($59))|0;
     $ispos70$us = ($66|0)>(-1);
     $neg71$us = (0 - ($66))|0;
     $67 = $ispos70$us ? $66 : $neg71$us;
     $68 = ($67|0)>(2);
     if (!($68)) {
      label = 24;
     }
    } else {
     label = 24;
    }
    if ((label|0) == 24) {
     label = 0;
     $69 = (($1) + ($$0102$us<<2)|0);
     $$01011$i$us = 0;$$012$i$us = Math_fround(0.0);
     while(1) {
      $70 = (($0) + ($$01011$i$us<<2)|0);
      $71 = Math_fround(HEAPF32[$70>>2]);
      $72 = (($69) + ($$01011$i$us<<2)|0);
      $73 = Math_fround(HEAPF32[$72>>2]);
      $74 = Math_fround($71 * $73);
      $75 = Math_fround($$012$i$us + $74);
      $76 = (($$01011$i$us) + 1)|0;
      $exitcond$i93$us = ($76|0)==($60|0);
      if ($exitcond$i93$us) {
       break;
      } else {
       $$01011$i$us = $76;$$012$i$us = $75;
      }
     }
     $79 = $75 < Math_fround(-1.0);
     $80 = $79 ? Math_fround(-1.0) : $75;
     HEAPF32[$62>>2] = $80;
    }
    $77 = (($$0102$us) + 1)|0;
    $78 = ($77|0)<($11|0);
    if ($78) {
     $$0102$us = $77;
    } else {
     $$pre$phiZ2D = $60;
     break;
    }
   }
  } else {
   $$pre = $2 >> 1;
   $$pre$phiZ2D = $$pre;
  }
 } while(0);
 $90 = ($2|0)>(1);
 if ($90) {
  $$06372$i74 = 0;$$06471$i75 = Math_fround(1.0);
  while(1) {
   $91 = (($1) + ($$06372$i74<<2)|0);
   $92 = Math_fround(HEAPF32[$91>>2]);
   $93 = Math_fround($92 * $92);
   $94 = Math_fround($$06471$i75 + $93);
   $95 = (($$06372$i74) + 1)|0;
   $exitcond76$i76 = ($95|0)==($$pre$phiZ2D|0);
   if ($exitcond76$i76) {
    $$064$lcssa$i77 = $94;
    break;
   } else {
    $$06372$i74 = $95;$$06471$i75 = $94;
   }
  }
 } else {
  $$064$lcssa$i77 = Math_fround(1.0);
 }
 if (!($57)) {
  $$168 = 0;$$sroa$0$599 = 0;
  $138 = $$sroa$0$599 << 1;
  $139 = (($138) - ($$168))|0;
  HEAP32[$4>>2] = $139;
  STACKTOP = sp;return;
 }
 $$070$i80 = 0;$$165$i85 = $$064$lcssa$i77;$$sroa$0$069$i81 = Math_fround(0.0);$$sroa$0$3 = 0;$$sroa$013$067$i83 = Math_fround(-1.0);$$sroa$6$068$i82 = Math_fround(0.0);$$sroa$616$066$i84 = Math_fround(-1.0);
 while(1) {
  $96 = (($12) + ($$070$i80<<2)|0);
  $97 = Math_fround(HEAPF32[$96>>2]);
  $98 = $97 > Math_fround(0.0);
  if ($98) {
   $99 = Math_fround($97 * Math_fround(9.99999996E-13));
   $100 = Math_fround($99 * $99);
   $101 = Math_fround($$sroa$6$068$i82 * $100);
   $102 = Math_fround($$sroa$616$066$i84 * $$165$i85);
   $103 = $101 > $102;
   if ($103) {
    $104 = Math_fround($$sroa$0$069$i81 * $100);
    $105 = Math_fround($$sroa$013$067$i83 * $$165$i85);
    $106 = $104 > $105;
    if ($106) {
     $$sroa$0$2$i89 = $$165$i85;$$sroa$0$4 = $$070$i80;$$sroa$013$2$i87 = $100;$$sroa$6$2$i88 = $$sroa$0$069$i81;$$sroa$616$2$i86 = $$sroa$013$067$i83;
    } else {
     $$sroa$0$2$i89 = $$sroa$0$069$i81;$$sroa$0$4 = $$sroa$0$3;$$sroa$013$2$i87 = $$sroa$013$067$i83;$$sroa$6$2$i88 = $$165$i85;$$sroa$616$2$i86 = $100;
    }
   } else {
    $$sroa$0$2$i89 = $$sroa$0$069$i81;$$sroa$0$4 = $$sroa$0$3;$$sroa$013$2$i87 = $$sroa$013$067$i83;$$sroa$6$2$i88 = $$sroa$6$068$i82;$$sroa$616$2$i86 = $$sroa$616$066$i84;
   }
  } else {
   $$sroa$0$2$i89 = $$sroa$0$069$i81;$$sroa$0$4 = $$sroa$0$3;$$sroa$013$2$i87 = $$sroa$013$067$i83;$$sroa$6$2$i88 = $$sroa$6$068$i82;$$sroa$616$2$i86 = $$sroa$616$066$i84;
  }
  $107 = (($$070$i80) + ($$pre$phiZ2D))|0;
  $108 = (($1) + ($107<<2)|0);
  $109 = Math_fround(HEAPF32[$108>>2]);
  $110 = Math_fround($109 * $109);
  $111 = (($1) + ($$070$i80<<2)|0);
  $112 = Math_fround(HEAPF32[$111>>2]);
  $113 = Math_fround($112 * $112);
  $114 = Math_fround($110 - $113);
  $115 = Math_fround($$165$i85 + $114);
  $116 = $115 < Math_fround(1.0);
  $117 = $116 ? Math_fround(1.0) : $115;
  $118 = (($$070$i80) + 1)|0;
  $exitcond$i90 = ($118|0)==($11|0);
  if ($exitcond$i90) {
   break;
  } else {
   $$070$i80 = $118;$$165$i85 = $117;$$sroa$0$069$i81 = $$sroa$0$2$i89;$$sroa$0$3 = $$sroa$0$4;$$sroa$013$067$i83 = $$sroa$013$2$i87;$$sroa$6$068$i82 = $$sroa$6$2$i88;$$sroa$616$066$i84 = $$sroa$616$2$i86;
  }
 }
 $119 = ($$sroa$0$4|0)>(0);
 $120 = (($11) + -1)|0;
 $121 = ($$sroa$0$4|0)<($120|0);
 $or$cond = $119 & $121;
 if (!($or$cond)) {
  $$168 = 0;$$sroa$0$599 = $$sroa$0$4;
  $138 = $$sroa$0$599 << 1;
  $139 = (($138) - ($$168))|0;
  HEAP32[$4>>2] = $139;
  STACKTOP = sp;return;
 }
 $122 = (($$sroa$0$4) + -1)|0;
 $123 = (($12) + ($122<<2)|0);
 $124 = Math_fround(HEAPF32[$123>>2]);
 $125 = (($12) + ($$sroa$0$4<<2)|0);
 $126 = Math_fround(HEAPF32[$125>>2]);
 $127 = (($$sroa$0$4) + 1)|0;
 $128 = (($12) + ($127<<2)|0);
 $129 = Math_fround(HEAPF32[$128>>2]);
 $130 = Math_fround($129 - $124);
 $131 = Math_fround($126 - $124);
 $132 = Math_fround($131 * Math_fround(0.699999988));
 $133 = $130 > $132;
 if ($133) {
  $$168 = 1;$$sroa$0$599 = $$sroa$0$4;
  $138 = $$sroa$0$599 << 1;
  $139 = (($138) - ($$168))|0;
  HEAP32[$4>>2] = $139;
  STACKTOP = sp;return;
 }
 $134 = Math_fround($124 - $129);
 $135 = Math_fround($126 - $129);
 $136 = Math_fround($135 * Math_fround(0.699999988));
 $137 = $134 > $136;
 $$ = $137 << 31 >> 31;
 $$168 = $$;$$sroa$0$599 = $$sroa$0$4;
 $138 = $$sroa$0$599 << 1;
 $139 = (($138) - ($$168))|0;
 HEAP32[$4>>2] = $139;
 STACKTOP = sp;return;
}
function _remove_doubling($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = Math_fround($6);
 $7 = $7|0;
 var $$ = 0, $$0$lcssa$i = Math_fround(0), $$0$lcssa$i192 = Math_fround(0), $$01011$i$us = 0, $$01011$i$us$1 = 0, $$01011$i$us$2 = 0, $$012$i$us = Math_fround(0), $$012$i$us$1 = Math_fround(0), $$012$i$us$2 = Math_fround(0), $$0157 = Math_fround(0), $$0158 = Math_fround(0), $$0159 = 0, $$0160 = 0, $$0161$lcssa = Math_fround(0), $$0161217 = Math_fround(0), $$0162$lcssa = Math_fround(0), $$0162216 = Math_fround(0), $$0166219 = Math_fround(0), $$0167 = Math_fround(0), $$0169$lcssa = Math_fround(0);
 var $$0169215 = Math_fround(0), $$0173214 = 0, $$0175$lcssa = 0, $$0175213 = 0, $$0179218 = 0, $$020$lcssa$i = Math_fround(0), $$020$lcssa$i191 = Math_fround(0), $$02023$i = Math_fround(0), $$02023$i188 = Math_fround(0), $$02122$i = 0, $$02122$i189 = 0, $$024$i = Math_fround(0), $$024$i187 = Math_fround(0), $$1168 = Math_fround(0), $$2$ph = Math_fround(0), $$2164$ph = Math_fround(0), $$2171$ph = Math_fround(0), $$2177$ph = 0, $$alloca_mul = 0, $$neg = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = Math_fround(0), $107 = 0, $108 = Math_fround(0), $109 = 0, $11 = 0, $110 = Math_fround(0), $111 = 0, $112 = Math_fround(0), $113 = 0, $114 = Math_fround(0), $115 = 0, $116 = Math_fround(0), $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = Math_fround(0), $122 = 0, $123 = Math_fround(0), $124 = Math_fround(0), $125 = 0, $126 = 0, $127 = Math_fround(0), $128 = 0, $129 = Math_fround(0), $13 = 0, $130 = Math_fround(0), $131 = Math_fround(0), $132 = 0, $133 = 0, $134 = 0, $135 = Math_fround(0);
 var $136 = Math_fround(0), $137 = Math_fround(0), $138 = Math_fround(0), $139 = Math_fround(0), $14 = 0, $140 = Math_fround(0), $141 = 0, $142 = Math_fround(0), $143 = Math_fround(0), $144 = Math_fround(0), $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = Math_fround(0), $152 = 0, $153 = Math_fround(0);
 var $154 = Math_fround(0), $155 = Math_fround(0), $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = Math_fround(0), $161 = 0, $162 = Math_fround(0), $163 = Math_fround(0), $164 = Math_fround(0), $165 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = Math_fround(0);
 var $24 = Math_fround(0), $25 = Math_fround(0), $26 = 0, $27 = Math_fround(0), $28 = Math_fround(0), $29 = Math_fround(0), $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = Math_fround(0), $35 = Math_fround(0), $36 = Math_fround(0), $37 = 0, $38 = 0, $39 = Math_fround(0), $40 = Math_fround(0), $41 = Math_fround(0), $42 = 0, $43 = Math_fround(0);
 var $44 = 0, $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = Math_fround(0), $49 = Math_fround(0), $50 = Math_fround(0), $51 = Math_fround(0), $52 = 0, $53 = Math_fround(0), $54 = 0, $55 = Math_fround(0), $56 = Math_fround(0), $57 = 0, $58 = Math_fround(0), $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = Math_fround(0), $77 = 0, $78 = Math_fround(0), $79 = Math_fround(0), $8 = 0, $80 = Math_fround(0), $81 = 0, $82 = Math_fround(0);
 var $83 = Math_fround(0), $84 = Math_fround(0), $85 = 0, $86 = Math_fround(0), $87 = Math_fround(0), $88 = 0, $89 = Math_fround(0), $9 = 0, $90 = 0, $91 = Math_fround(0), $92 = Math_fround(0), $93 = Math_fround(0), $94 = Math_fround(0), $95 = Math_fround(0), $96 = Math_fround(0), $97 = Math_fround(0), $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0;
 var $exitcond$i184$us = 0, $exitcond$i184$us$1 = 0, $exitcond$i184$us$2 = 0, $exitcond$i190 = 0, $ispos = 0, $neg = 0, $spec$select = 0, $spec$select$ = 0, $spec$select181 = 0, $spec$select206 = Math_fround(0), $spec$select207 = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 $8 = (($1|0) / 2)&-1;
 $9 = (($2|0) / 2)&-1;
 $10 = HEAP32[$4>>2]|0;
 $11 = (($10|0) / 2)&-1;
 $12 = (($5|0) / 2)&-1;
 $13 = (($3|0) / 2)&-1;
 $14 = (($0) + ($8<<2)|0);
 $15 = ($11|0)<($8|0);
 $16 = (($8) + -1)|0;
 $spec$select = $15 ? $11 : $16;
 HEAP32[$4>>2] = $spec$select;
 $17 = (($8) + 1)|0;
 $$alloca_mul = $17<<2;
 $18 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $19 = (0 - ($spec$select))|0;
 $20 = (($14) + ($19<<2)|0);
 $21 = ($3|0)>(1);
 if ($21) {
  $$02023$i = Math_fround(0.0);$$02122$i = 0;$$024$i = Math_fround(0.0);
  while(1) {
   $22 = (($14) + ($$02122$i<<2)|0);
   $23 = Math_fround(HEAPF32[$22>>2]);
   $24 = Math_fround($23 * $23);
   $25 = Math_fround($$02023$i + $24);
   $26 = (($20) + ($$02122$i<<2)|0);
   $27 = Math_fround(HEAPF32[$26>>2]);
   $28 = Math_fround($23 * $27);
   $29 = Math_fround($$024$i + $28);
   $30 = (($$02122$i) + 1)|0;
   $exitcond$i = ($30|0)==($13|0);
   if ($exitcond$i) {
    $$0$lcssa$i = $29;$$020$lcssa$i = $25;
    break;
   } else {
    $$02023$i = $25;$$02122$i = $30;$$024$i = $29;
   }
  }
 } else {
  $$0$lcssa$i = Math_fround(0.0);$$020$lcssa$i = Math_fround(0.0);
 }
 HEAPF32[$18>>2] = $$020$lcssa$i;
 $31 = ($1|0)<(2);
 if (!($31)) {
  $$0166219 = $$020$lcssa$i;$$0179218 = 1;
  while(1) {
   $32 = (0 - ($$0179218))|0;
   $33 = (($14) + ($32<<2)|0);
   $34 = Math_fround(HEAPF32[$33>>2]);
   $35 = Math_fround($34 * $34);
   $36 = Math_fround($$0166219 + $35);
   $37 = (($13) - ($$0179218))|0;
   $38 = (($14) + ($37<<2)|0);
   $39 = Math_fround(HEAPF32[$38>>2]);
   $40 = Math_fround($39 * $39);
   $41 = Math_fround($36 - $40);
   $42 = $41 < Math_fround(0.0);
   $43 = $42 ? Math_fround(0.0) : $41;
   $44 = (($18) + ($$0179218<<2)|0);
   HEAPF32[$44>>2] = $43;
   $45 = (($$0179218) + 1)|0;
   $exitcond = ($45|0)==($17|0);
   if ($exitcond) {
    break;
   } else {
    $$0166219 = $41;$$0179218 = $45;
   }
  }
 }
 $46 = (($18) + ($spec$select<<2)|0);
 $47 = Math_fround(HEAPF32[$46>>2]);
 $48 = Math_fround($$020$lcssa$i * $47);
 $49 = Math_fround($48 + Math_fround(1.0));
 $50 = (Math_fround(Math_sqrt((Math_fround($49)))));
 $51 = Math_fround($$0$lcssa$i / $50);
 $52 = $spec$select << 1;
 $53 = Math_fround($51 * Math_fround(0.699999988));
 $54 = ($9*3)|0;
 $55 = Math_fround($6 * Math_fround(0.5));
 $56 = Math_fround($51 * Math_fround(0.850000023));
 $57 = $9 << 1;
 $58 = Math_fround($51 * Math_fround(0.899999976));
 $$0161217 = $47;$$0162216 = $$0$lcssa$i;$$0169215 = $51;$$0173214 = 2;$$0175213 = $spec$select;
 while(1) {
  $59 = (($$0173214) + ($52))|0;
  $60 = $$0173214 << 1;
  $61 = (($59>>>0) / ($60>>>0))&-1;
  $62 = ($61|0)<($9|0);
  if ($62) {
   $$0161$lcssa = $$0161217;$$0162$lcssa = $$0162216;$$0169$lcssa = $$0169215;$$0175$lcssa = $$0175213;
   break;
  }
  $63 = ($$0173214|0)==(2);
  if ($63) {
   $64 = (($61) + ($spec$select))|0;
   $65 = ($64|0)>($8|0);
   $spec$select$ = $65 ? $spec$select : $64;
   $$0159 = $spec$select$;
  } else {
   $66 = (19808 + ($$0173214<<2)|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = Math_imul($52, $67)|0;
   $69 = (($68) + ($$0173214))|0;
   $70 = (($69>>>0) / ($60>>>0))&-1;
   $$0159 = $70;
  }
  $71 = (0 - ($61))|0;
  $72 = (($14) + ($71<<2)|0);
  $73 = (0 - ($$0159))|0;
  $74 = (($14) + ($73<<2)|0);
  if ($21) {
   $$02023$i188 = Math_fround(0.0);$$02122$i189 = 0;$$024$i187 = Math_fround(0.0);
   while(1) {
    $75 = (($14) + ($$02122$i189<<2)|0);
    $76 = Math_fround(HEAPF32[$75>>2]);
    $77 = (($72) + ($$02122$i189<<2)|0);
    $78 = Math_fround(HEAPF32[$77>>2]);
    $79 = Math_fround($76 * $78);
    $80 = Math_fround($$02023$i188 + $79);
    $81 = (($74) + ($$02122$i189<<2)|0);
    $82 = Math_fround(HEAPF32[$81>>2]);
    $83 = Math_fround($76 * $82);
    $84 = Math_fround($$024$i187 + $83);
    $85 = (($$02122$i189) + 1)|0;
    $exitcond$i190 = ($85|0)==($13|0);
    if ($exitcond$i190) {
     $$0$lcssa$i192 = $84;$$020$lcssa$i191 = $80;
     break;
    } else {
     $$02023$i188 = $80;$$02122$i189 = $85;$$024$i187 = $84;
    }
   }
  } else {
   $$0$lcssa$i192 = Math_fround(0.0);$$020$lcssa$i191 = Math_fround(0.0);
  }
  $86 = Math_fround($$020$lcssa$i191 + $$0$lcssa$i192);
  $87 = Math_fround($86 * Math_fround(0.5));
  $88 = (($18) + ($61<<2)|0);
  $89 = Math_fround(HEAPF32[$88>>2]);
  $90 = (($18) + ($$0159<<2)|0);
  $91 = Math_fround(HEAPF32[$90>>2]);
  $92 = Math_fround($89 + $91);
  $93 = Math_fround($92 * Math_fround(0.5));
  $94 = Math_fround($$020$lcssa$i * $93);
  $95 = Math_fround($94 + Math_fround(1.0));
  $96 = (Math_fround(Math_sqrt((Math_fround($95)))));
  $97 = Math_fround($87 / $96);
  $98 = (($61) - ($12))|0;
  $ispos = ($98|0)>(-1);
  $neg = (0 - ($98))|0;
  $99 = $ispos ? $98 : $neg;
  $100 = ($99|0)<(2);
  if ($100) {
   $$0158 = $6;
  } else {
   $101 = ($99|0)==(2);
   $102 = ($$0173214*5)|0;
   $103 = Math_imul($102, $$0173214)|0;
   $104 = ($103|0)<($spec$select|0);
   $105 = $104 & $101;
   $spec$select206 = $105 ? $55 : Math_fround(0.0);
   $$0158 = $spec$select206;
  }
  $106 = Math_fround($53 - $$0158);
  $107 = ($61|0)<($54|0);
  if ($107) {
   $108 = Math_fround($56 - $$0158);
   $109 = $108 < Math_fround(0.400000006);
   $110 = $109 ? Math_fround(0.400000006) : $108;
   $$0157 = $110;
  } else {
   $111 = $106 < Math_fround(0.300000012);
   $112 = $111 ? Math_fround(0.300000012) : $106;
   $113 = ($61|0)<($57|0);
   $114 = Math_fround($58 - $$0158);
   $115 = $114 < Math_fround(0.5);
   $116 = $115 ? Math_fround(0.5) : $114;
   $spec$select207 = $113 ? $116 : $112;
   $$0157 = $spec$select207;
  }
  $117 = $97 > $$0157;
  if ($117) {
   $$2$ph = $93;$$2164$ph = $87;$$2171$ph = $97;$$2177$ph = $61;
  } else {
   $$2$ph = $$0161217;$$2164$ph = $$0162216;$$2171$ph = $$0169215;$$2177$ph = $$0175213;
  }
  $118 = (($$0173214) + 1)|0;
  $119 = ($118>>>0)<(16);
  if ($119) {
   $$0161217 = $$2$ph;$$0162216 = $$2164$ph;$$0169215 = $$2171$ph;$$0173214 = $118;$$0175213 = $$2177$ph;
  } else {
   $$0161$lcssa = $$2$ph;$$0162$lcssa = $$2164$ph;$$0169$lcssa = $$2171$ph;$$0175$lcssa = $$2177$ph;
   break;
  }
 }
 $120 = $$0162$lcssa < Math_fround(0.0);
 $121 = $120 ? Math_fround(0.0) : $$0162$lcssa;
 $122 = !($$0161$lcssa <= $121);
 $123 = Math_fround($$0161$lcssa + Math_fround(1.0));
 $124 = Math_fround($121 / $123);
 $$0167 = $122 ? $124 : Math_fround(1.0);
 $$neg = (1 - ($$0175$lcssa))|0;
 if (!($21)) {
  $136 = Math_fround(0.0);$137 = Math_fround(0.0);$139 = Math_fround(0.0);
  $135 = Math_fround($136 - $137);
  $138 = Math_fround($139 - $137);
  $140 = Math_fround($138 * Math_fround(0.699999988));
  $141 = $135 > $140;
  $142 = Math_fround($137 - $136);
  $143 = Math_fround($139 - $136);
  $144 = Math_fround($143 * Math_fround(0.699999988));
  $145 = $142 > $144;
  $$ = $145 << 31 >> 31;
  $$0160 = $141 ? 1 : $$;
  $146 = $$0167 > $$0169$lcssa;
  $$1168 = $146 ? $$0169$lcssa : $$0167;
  $147 = $$0175$lcssa << 1;
  $148 = (($$0160) + ($147))|0;
  $149 = ($148|0)<($2|0);
  $spec$select181 = $149 ? $2 : $148;
  HEAP32[$4>>2] = $spec$select181;
  STACKTOP = sp;return (Math_fround($$1168));
 }
 $125 = (($14) + ($$neg<<2)|0);
 $$01011$i$us = 0;$$012$i$us = Math_fround(0.0);
 while(1) {
  $126 = (($14) + ($$01011$i$us<<2)|0);
  $127 = Math_fround(HEAPF32[$126>>2]);
  $128 = (($125) + ($$01011$i$us<<2)|0);
  $129 = Math_fround(HEAPF32[$128>>2]);
  $130 = Math_fround($127 * $129);
  $131 = Math_fround($$012$i$us + $130);
  $132 = (($$01011$i$us) + 1)|0;
  $exitcond$i184$us = ($132|0)==($13|0);
  if ($exitcond$i184$us) {
   break;
  } else {
   $$01011$i$us = $132;$$012$i$us = $131;
  }
 }
 $133 = (($$neg) + -1)|0;
 $134 = (($14) + ($133<<2)|0);
 $$01011$i$us$1 = 0;$$012$i$us$1 = Math_fround(0.0);
 while(1) {
  $150 = (($14) + ($$01011$i$us$1<<2)|0);
  $151 = Math_fround(HEAPF32[$150>>2]);
  $152 = (($134) + ($$01011$i$us$1<<2)|0);
  $153 = Math_fround(HEAPF32[$152>>2]);
  $154 = Math_fround($151 * $153);
  $155 = Math_fround($$012$i$us$1 + $154);
  $156 = (($$01011$i$us$1) + 1)|0;
  $exitcond$i184$us$1 = ($156|0)==($13|0);
  if ($exitcond$i184$us$1) {
   break;
  } else {
   $$01011$i$us$1 = $156;$$012$i$us$1 = $155;
  }
 }
 $157 = (($$neg) + -2)|0;
 $158 = (($14) + ($157<<2)|0);
 $$01011$i$us$2 = 0;$$012$i$us$2 = Math_fround(0.0);
 while(1) {
  $159 = (($14) + ($$01011$i$us$2<<2)|0);
  $160 = Math_fround(HEAPF32[$159>>2]);
  $161 = (($158) + ($$01011$i$us$2<<2)|0);
  $162 = Math_fround(HEAPF32[$161>>2]);
  $163 = Math_fround($160 * $162);
  $164 = Math_fround($$012$i$us$2 + $163);
  $165 = (($$01011$i$us$2) + 1)|0;
  $exitcond$i184$us$2 = ($165|0)==($13|0);
  if ($exitcond$i184$us$2) {
   $136 = $164;$137 = $131;$139 = $155;
   break;
  } else {
   $$01011$i$us$2 = $165;$$012$i$us$2 = $164;
  }
 }
 $135 = Math_fround($136 - $137);
 $138 = Math_fround($139 - $137);
 $140 = Math_fround($138 * Math_fround(0.699999988));
 $141 = $135 > $140;
 $142 = Math_fround($137 - $136);
 $143 = Math_fround($139 - $136);
 $144 = Math_fround($143 * Math_fround(0.699999988));
 $145 = $142 > $144;
 $$ = $145 << 31 >> 31;
 $$0160 = $141 ? 1 : $$;
 $146 = $$0167 > $$0169$lcssa;
 $$1168 = $146 ? $$0169$lcssa : $$0167;
 $147 = $$0175$lcssa << 1;
 $148 = (($$0160) + ($147))|0;
 $149 = ($148|0)<($2|0);
 $spec$select181 = $149 ? $2 : $148;
 HEAP32[$4>>2] = $spec$select181;
 STACKTOP = sp;return (Math_fround($$1168));
}
function __celt_lpc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$06576 = 0, $$06670 = 0, $$067$lcssa = Math_fround(0), $$06769 = Math_fround(0), $$06875 = Math_fround(0), $$171 = 0, $$mask = 0, $10 = 0, $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = Math_fround(0), $15 = Math_fround(0), $16 = Math_fround(0), $17 = 0, $18 = 0, $19 = 0, $20 = Math_fround(0), $21 = Math_fround(0), $22 = Math_fround(0);
 var $23 = Math_fround(0), $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = Math_fround(0), $29 = 0, $3 = Math_fround(0), $30 = 0, $31 = Math_fround(0), $32 = Math_fround(0), $33 = Math_fround(0), $34 = Math_fround(0), $35 = Math_fround(0), $36 = 0, $37 = Math_fround(0), $38 = Math_fround(0), $39 = Math_fround(0), $4 = 0, $40 = Math_fround(0);
 var $41 = Math_fround(0), $42 = 0, $43 = 0, $5 = Math_fround(0), $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond81 = 0, $indvars$iv = 0, $indvars$iv$next = 0, $or$cond = 0, $or$cond80 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = Math_fround(HEAPF32[$1>>2]);
 $4 = $2 << 2;
 _memset(($0|0),0,($4|0))|0;
 $5 = Math_fround(HEAPF32[$1>>2]);
 $6 = $5 != Math_fround(0.0);
 $7 = ($2|0)>(0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  return;
 }
 $$06576 = 0;$$06875 = $3;$indvars$iv = 1;
 while(1) {
  $8 = $indvars$iv >>> 1;
  $9 = ($$06576|0)==(0);
  if ($9) {
   $$067$lcssa = Math_fround(0.0);
  } else {
   $$06670 = 0;$$06769 = Math_fround(0.0);
   while(1) {
    $10 = (($0) + ($$06670<<2)|0);
    $11 = Math_fround(HEAPF32[$10>>2]);
    $12 = (($$06576) - ($$06670))|0;
    $13 = (($1) + ($12<<2)|0);
    $14 = Math_fround(HEAPF32[$13>>2]);
    $15 = Math_fround($11 * $14);
    $16 = Math_fround($$06769 + $15);
    $17 = (($$06670) + 1)|0;
    $exitcond = ($17|0)==($$06576|0);
    if ($exitcond) {
     $$067$lcssa = $16;
     break;
    } else {
     $$06670 = $17;$$06769 = $16;
    }
   }
  }
  $18 = (($$06576) + 1)|0;
  $19 = (($1) + ($18<<2)|0);
  $20 = Math_fround(HEAPF32[$19>>2]);
  $21 = Math_fround($$067$lcssa + $20);
  $22 = Math_fround($21 / $$06875);
  $23 = Math_fround(- $22);
  $24 = (($0) + ($$06576<<2)|0);
  HEAPF32[$24>>2] = $23;
  $$mask = $18 & 2147483646;
  $25 = ($$mask|0)==(0);
  if (!($25)) {
   $26 = (($$06576) + -1)|0;
   $$171 = 0;
   while(1) {
    $27 = (($0) + ($$171<<2)|0);
    $28 = Math_fround(HEAPF32[$27>>2]);
    $29 = (($26) - ($$171))|0;
    $30 = (($0) + ($29<<2)|0);
    $31 = Math_fround(HEAPF32[$30>>2]);
    $32 = Math_fround($31 * $23);
    $33 = Math_fround($28 + $32);
    HEAPF32[$27>>2] = $33;
    $34 = Math_fround($28 * $23);
    $35 = Math_fround($31 + $34);
    HEAPF32[$30>>2] = $35;
    $36 = (($$171) + 1)|0;
    $exitcond81 = ($36|0)==($8|0);
    if ($exitcond81) {
     break;
    } else {
     $$171 = $36;
    }
   }
  }
  $37 = Math_fround($22 * $22);
  $38 = Math_fround($$06875 * $37);
  $39 = Math_fround($$06875 - $38);
  $40 = Math_fround(HEAPF32[$1>>2]);
  $41 = Math_fround($40 * Math_fround(0.00100000005));
  $42 = !($39 < $41);
  $43 = ($18|0)<($2|0);
  $or$cond80 = $42 & $43;
  $indvars$iv$next = (($indvars$iv) + 1)|0;
  if ($or$cond80) {
   $$06576 = $18;$$06875 = $39;$indvars$iv = $indvars$iv$next;
  } else {
   break;
  }
 }
 return;
}
function _celt_fir_c($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$05366 = 0, $$05455$us = 0, $$056$us = Math_fround(0), $$1$lcssa = 0, $$161 = 0, $$257 = 0, $$257$us = 0, $$alloca_mul = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = Math_fround(0), $46 = 0, $47 = 0, $48 = Math_fround(0), $49 = 0, $50 = 0, $51 = Math_fround(0), $52 = Math_fround(0), $53 = Math_fround(0), $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond72 = 0, $exitcond73 = 0, $exitcond75 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = (0 - ($4))|0;
 $7 = sp;
 $$alloca_mul = $4<<2;
 $8 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $9 = ($4|0)>(0);
 if ($9) {
  $10 = (($4) + -1)|0;
  $$05366 = 0;
  while(1) {
   $11 = (($10) - ($$05366))|0;
   $12 = (($1) + ($11<<2)|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = (($8) + ($$05366<<2)|0);
   HEAP32[$14>>2] = $13;
   $15 = (($$05366) + 1)|0;
   $exitcond75 = ($15|0)==($4|0);
   if ($exitcond75) {
    break;
   } else {
    $$05366 = $15;
   }
  }
 }
 $16 = (($3) + -3)|0;
 $17 = ($3|0)>(3);
 if ($17) {
  $18 = ((($7)) + 4|0);
  $19 = ((($7)) + 8|0);
  $20 = ((($7)) + 12|0);
  $$161 = 0;
  while(1) {
   $21 = (($0) + ($$161<<2)|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP32[$7>>2] = $22;
   $23 = $$161 | 1;
   $24 = (($0) + ($23<<2)|0);
   $25 = HEAP32[$24>>2]|0;
   HEAP32[$18>>2] = $25;
   $26 = $$161 | 2;
   $27 = (($0) + ($26<<2)|0);
   $28 = HEAP32[$27>>2]|0;
   HEAP32[$19>>2] = $28;
   $29 = $$161 | 3;
   $30 = (($0) + ($29<<2)|0);
   $31 = HEAP32[$30>>2]|0;
   HEAP32[$20>>2] = $31;
   $32 = (($21) + ($6<<2)|0);
   _xcorr_kernel_c($8,$32,$7,$4);
   $33 = HEAP32[$7>>2]|0;
   $34 = (($2) + ($$161<<2)|0);
   HEAP32[$34>>2] = $33;
   $35 = HEAP32[$18>>2]|0;
   $36 = (($2) + ($23<<2)|0);
   HEAP32[$36>>2] = $35;
   $37 = HEAP32[$19>>2]|0;
   $38 = (($2) + ($26<<2)|0);
   HEAP32[$38>>2] = $37;
   $39 = HEAP32[$20>>2]|0;
   $40 = (($2) + ($29<<2)|0);
   HEAP32[$40>>2] = $39;
   $41 = (($$161) + 4)|0;
   $42 = ($41|0)<($16|0);
   if ($42) {
    $$161 = $41;
   } else {
    $$1$lcssa = $41;
    break;
   }
  }
 } else {
  $$1$lcssa = 0;
 }
 $43 = ($$1$lcssa|0)<($3|0);
 if (!($43)) {
  STACKTOP = sp;return;
 }
 if (!($9)) {
  $$257 = $$1$lcssa;
  while(1) {
   $57 = (($0) + ($$257<<2)|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = (($2) + ($$257<<2)|0);
   HEAP32[$59>>2] = $58;
   $60 = (($$257) + 1)|0;
   $exitcond73 = ($60|0)==($3|0);
   if ($exitcond73) {
    break;
   } else {
    $$257 = $60;
   }
  }
  STACKTOP = sp;return;
 }
 $$257$us = $$1$lcssa;
 while(1) {
  $44 = (($0) + ($$257$us<<2)|0);
  $45 = Math_fround(HEAPF32[$44>>2]);
  $46 = (($$257$us) - ($4))|0;
  $$05455$us = 0;$$056$us = $45;
  while(1) {
   $47 = (($8) + ($$05455$us<<2)|0);
   $48 = Math_fround(HEAPF32[$47>>2]);
   $49 = (($46) + ($$05455$us))|0;
   $50 = (($0) + ($49<<2)|0);
   $51 = Math_fround(HEAPF32[$50>>2]);
   $52 = Math_fround($48 * $51);
   $53 = Math_fround($$056$us + $52);
   $54 = (($$05455$us) + 1)|0;
   $exitcond = ($54|0)==($4|0);
   if ($exitcond) {
    break;
   } else {
    $$05455$us = $54;$$056$us = $53;
   }
  }
  $55 = (($2) + ($$257$us<<2)|0);
  HEAPF32[$55>>2] = $53;
  $56 = (($$257$us) + 1)|0;
  $exitcond72 = ($56|0)==($3|0);
  if ($exitcond72) {
   break;
  } else {
   $$257$us = $56;
  }
 }
 STACKTOP = sp;return;
}
function _xcorr_kernel_c($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$lcssa = 0, $$0154$lcssa = 0, $$0154168 = 0, $$0157$lcssa = 0, $$0157167 = 0, $$0158$lcssa = Math_fround(0), $$0158166 = Math_fround(0), $$0160$lcssa = Math_fround(0), $$0162$lcssa = Math_fround(0), $$0162165 = Math_fround(0), $$0163$lcssa = Math_fround(0), $$0163164 = Math_fround(0), $$0169 = 0, $$1 = 0, $$1155 = 0, $$1159 = Math_fround(0), $$1161 = Math_fround(0), $$2 = 0, $$2156 = 0, $$pre = Math_fround(0);
 var $$pre183 = Math_fround(0), $$pre184 = Math_fround(0), $$pre185 = Math_fround(0), $10 = 0, $100 = Math_fround(0), $101 = Math_fround(0), $102 = Math_fround(0), $103 = 0, $104 = Math_fround(0), $105 = Math_fround(0), $106 = Math_fround(0), $107 = 0, $108 = Math_fround(0), $109 = Math_fround(0), $11 = 0, $110 = Math_fround(0), $111 = 0, $112 = Math_fround(0), $113 = Math_fround(0), $114 = Math_fround(0);
 var $115 = 0, $116 = Math_fround(0), $117 = Math_fround(0), $118 = Math_fround(0), $119 = Math_fround(0), $12 = 0, $120 = Math_fround(0), $121 = 0, $122 = Math_fround(0), $123 = Math_fround(0), $124 = Math_fround(0), $125 = 0, $126 = Math_fround(0), $127 = Math_fround(0), $128 = Math_fround(0), $129 = 0, $13 = 0, $130 = Math_fround(0), $131 = Math_fround(0), $132 = Math_fround(0);
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = Math_fround(0), $21 = 0, $22 = Math_fround(0), $23 = Math_fround(0), $24 = Math_fround(0), $25 = Math_fround(0), $26 = Math_fround(0), $27 = Math_fround(0), $28 = Math_fround(0), $29 = Math_fround(0), $30 = Math_fround(0), $31 = Math_fround(0), $32 = Math_fround(0), $33 = Math_fround(0);
 var $34 = Math_fround(0), $35 = 0, $36 = Math_fround(0), $37 = 0, $38 = Math_fround(0), $39 = Math_fround(0), $4 = 0, $40 = Math_fround(0), $41 = Math_fround(0), $42 = Math_fround(0), $43 = Math_fround(0), $44 = Math_fround(0), $45 = Math_fround(0), $46 = Math_fround(0), $47 = 0, $48 = Math_fround(0), $49 = 0, $5 = Math_fround(0), $50 = Math_fround(0), $51 = Math_fround(0);
 var $52 = Math_fround(0), $53 = Math_fround(0), $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = Math_fround(0), $59 = 0, $6 = 0, $60 = Math_fround(0), $61 = 0, $62 = Math_fround(0), $63 = Math_fround(0), $64 = Math_fround(0), $65 = Math_fround(0), $66 = Math_fround(0), $67 = Math_fround(0), $68 = Math_fround(0), $69 = Math_fround(0), $7 = Math_fround(0);
 var $70 = Math_fround(0), $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = Math_fround(0), $77 = 0, $78 = Math_fround(0), $79 = Math_fround(0), $8 = 0, $80 = Math_fround(0), $81 = Math_fround(0), $82 = 0, $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = 0, $87 = Math_fround(0), $88 = Math_fround(0);
 var $89 = Math_fround(0), $9 = Math_fround(0), $90 = 0, $91 = Math_fround(0), $92 = Math_fround(0), $93 = Math_fround(0), $94 = 0, $95 = 0, $96 = 0, $97 = Math_fround(0), $98 = 0, $99 = Math_fround(0), $scevgep = 0, $scevgep182 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 4|0);
 $5 = Math_fround(HEAPF32[$1>>2]);
 $6 = ((($1)) + 8|0);
 $7 = Math_fround(HEAPF32[$4>>2]);
 $8 = ((($1)) + 12|0);
 $9 = Math_fround(HEAPF32[$6>>2]);
 $10 = (($3) + -3)|0;
 $11 = ($3|0)>(3);
 if ($11) {
  $12 = ((($2)) + 4|0);
  $13 = ((($2)) + 8|0);
  $14 = ((($2)) + 12|0);
  $15 = (($3) + -4)|0;
  $16 = $15 & -4;
  $17 = (($16) + 4)|0;
  $18 = (($16) + 7)|0;
  $$pre = Math_fround(HEAPF32[$2>>2]);
  $$pre183 = Math_fround(HEAPF32[$12>>2]);
  $$pre184 = Math_fround(HEAPF32[$13>>2]);
  $$pre185 = Math_fround(HEAPF32[$14>>2]);
  $$0154168 = $8;$$0157167 = 0;$$0158166 = $5;$$0162165 = $9;$$0163164 = $7;$$0169 = $0;$25 = $$pre;$28 = $$pre183;$31 = $$pre184;$34 = $$pre185;
  while(1) {
   $19 = ((($$0169)) + 4|0);
   $20 = Math_fround(HEAPF32[$$0169>>2]);
   $21 = ((($$0154168)) + 4|0);
   $22 = Math_fround(HEAPF32[$$0154168>>2]);
   $23 = Math_fround($$0158166 * $20);
   $24 = Math_fround($23 + $25);
   HEAPF32[$2>>2] = $24;
   $26 = Math_fround($$0163164 * $20);
   $27 = Math_fround($26 + $28);
   HEAPF32[$12>>2] = $27;
   $29 = Math_fround($$0162165 * $20);
   $30 = Math_fround($29 + $31);
   HEAPF32[$13>>2] = $30;
   $32 = Math_fround($20 * $22);
   $33 = Math_fround($32 + $34);
   HEAPF32[$14>>2] = $33;
   $35 = ((($$0169)) + 8|0);
   $36 = Math_fround(HEAPF32[$19>>2]);
   $37 = ((($$0154168)) + 8|0);
   $38 = Math_fround(HEAPF32[$21>>2]);
   $39 = Math_fround($$0163164 * $36);
   $40 = Math_fround($24 + $39);
   HEAPF32[$2>>2] = $40;
   $41 = Math_fround($$0162165 * $36);
   $42 = Math_fround($27 + $41);
   HEAPF32[$12>>2] = $42;
   $43 = Math_fround($22 * $36);
   $44 = Math_fround($30 + $43);
   HEAPF32[$13>>2] = $44;
   $45 = Math_fround($36 * $38);
   $46 = Math_fround($33 + $45);
   HEAPF32[$14>>2] = $46;
   $47 = ((($$0169)) + 12|0);
   $48 = Math_fround(HEAPF32[$35>>2]);
   $49 = ((($$0154168)) + 12|0);
   $50 = Math_fround(HEAPF32[$37>>2]);
   $51 = Math_fround($$0162165 * $48);
   $52 = Math_fround($40 + $51);
   HEAPF32[$2>>2] = $52;
   $53 = Math_fround($22 * $48);
   $54 = Math_fround($42 + $53);
   HEAPF32[$12>>2] = $54;
   $55 = Math_fround($38 * $48);
   $56 = Math_fround($44 + $55);
   HEAPF32[$13>>2] = $56;
   $57 = Math_fround($48 * $50);
   $58 = Math_fround($46 + $57);
   HEAPF32[$14>>2] = $58;
   $59 = ((($$0169)) + 16|0);
   $60 = Math_fround(HEAPF32[$47>>2]);
   $61 = ((($$0154168)) + 16|0);
   $62 = Math_fround(HEAPF32[$49>>2]);
   $63 = Math_fround($22 * $60);
   $64 = Math_fround($52 + $63);
   HEAPF32[$2>>2] = $64;
   $65 = Math_fround($38 * $60);
   $66 = Math_fround($54 + $65);
   HEAPF32[$12>>2] = $66;
   $67 = Math_fround($50 * $60);
   $68 = Math_fround($56 + $67);
   HEAPF32[$13>>2] = $68;
   $69 = Math_fround($60 * $62);
   $70 = Math_fround($58 + $69);
   HEAPF32[$14>>2] = $70;
   $71 = (($$0157167) + 4)|0;
   $72 = ($71|0)<($10|0);
   if ($72) {
    $$0154168 = $61;$$0157167 = $71;$$0158166 = $38;$$0162165 = $62;$$0163164 = $50;$$0169 = $59;$25 = $64;$28 = $66;$31 = $68;$34 = $70;
   } else {
    break;
   }
  }
  $scevgep = (($0) + ($17<<2)|0);
  $scevgep182 = (($1) + ($18<<2)|0);
  $$0$lcssa = $scevgep;$$0154$lcssa = $scevgep182;$$0157$lcssa = $17;$$0158$lcssa = $38;$$0160$lcssa = $22;$$0162$lcssa = $62;$$0163$lcssa = $50;
 } else {
  $$0$lcssa = $0;$$0154$lcssa = $8;$$0157$lcssa = 0;$$0158$lcssa = $5;$$0160$lcssa = Math_fround(0.0);$$0162$lcssa = $9;$$0163$lcssa = $7;
 }
 $73 = $$0157$lcssa | 1;
 $74 = ($$0157$lcssa|0)<($3|0);
 if ($74) {
  $75 = ((($$0$lcssa)) + 4|0);
  $76 = Math_fround(HEAPF32[$$0$lcssa>>2]);
  $77 = ((($$0154$lcssa)) + 4|0);
  $78 = Math_fround(HEAPF32[$$0154$lcssa>>2]);
  $79 = Math_fround(HEAPF32[$2>>2]);
  $80 = Math_fround($$0158$lcssa * $76);
  $81 = Math_fround($80 + $79);
  HEAPF32[$2>>2] = $81;
  $82 = ((($2)) + 4|0);
  $83 = Math_fround(HEAPF32[$82>>2]);
  $84 = Math_fround($$0163$lcssa * $76);
  $85 = Math_fround($84 + $83);
  HEAPF32[$82>>2] = $85;
  $86 = ((($2)) + 8|0);
  $87 = Math_fround(HEAPF32[$86>>2]);
  $88 = Math_fround($$0162$lcssa * $76);
  $89 = Math_fround($88 + $87);
  HEAPF32[$86>>2] = $89;
  $90 = ((($2)) + 12|0);
  $91 = Math_fround(HEAPF32[$90>>2]);
  $92 = Math_fround($76 * $78);
  $93 = Math_fround($92 + $91);
  HEAPF32[$90>>2] = $93;
  $$1 = $75;$$1155 = $77;$$1161 = $78;
 } else {
  $$1 = $$0$lcssa;$$1155 = $$0154$lcssa;$$1161 = $$0160$lcssa;
 }
 $94 = (($73) + 1)|0;
 $95 = ($73|0)<($3|0);
 if ($95) {
  $96 = ((($$1)) + 4|0);
  $97 = Math_fround(HEAPF32[$$1>>2]);
  $98 = ((($$1155)) + 4|0);
  $99 = Math_fround(HEAPF32[$$1155>>2]);
  $100 = Math_fround(HEAPF32[$2>>2]);
  $101 = Math_fround($$0163$lcssa * $97);
  $102 = Math_fround($101 + $100);
  HEAPF32[$2>>2] = $102;
  $103 = ((($2)) + 4|0);
  $104 = Math_fround(HEAPF32[$103>>2]);
  $105 = Math_fround($$0162$lcssa * $97);
  $106 = Math_fround($105 + $104);
  HEAPF32[$103>>2] = $106;
  $107 = ((($2)) + 8|0);
  $108 = Math_fround(HEAPF32[$107>>2]);
  $109 = Math_fround($$1161 * $97);
  $110 = Math_fround($109 + $108);
  HEAPF32[$107>>2] = $110;
  $111 = ((($2)) + 12|0);
  $112 = Math_fround(HEAPF32[$111>>2]);
  $113 = Math_fround($97 * $99);
  $114 = Math_fround($113 + $112);
  HEAPF32[$111>>2] = $114;
  $$1159 = $99;$$2 = $96;$$2156 = $98;
 } else {
  $$1159 = $$0158$lcssa;$$2 = $$1;$$2156 = $$1155;
 }
 $115 = ($94|0)<($3|0);
 if (!($115)) {
  return;
 }
 $116 = Math_fround(HEAPF32[$$2>>2]);
 $117 = Math_fround(HEAPF32[$$2156>>2]);
 $118 = Math_fround(HEAPF32[$2>>2]);
 $119 = Math_fround($$0162$lcssa * $116);
 $120 = Math_fround($119 + $118);
 HEAPF32[$2>>2] = $120;
 $121 = ((($2)) + 4|0);
 $122 = Math_fround(HEAPF32[$121>>2]);
 $123 = Math_fround($$1161 * $116);
 $124 = Math_fround($123 + $122);
 HEAPF32[$121>>2] = $124;
 $125 = ((($2)) + 8|0);
 $126 = Math_fround(HEAPF32[$125>>2]);
 $127 = Math_fround($$1159 * $116);
 $128 = Math_fround($127 + $126);
 HEAPF32[$125>>2] = $128;
 $129 = ((($2)) + 12|0);
 $130 = Math_fround(HEAPF32[$129>>2]);
 $131 = Math_fround($116 * $117);
 $132 = Math_fround($131 + $130);
 HEAPF32[$129>>2] = $132;
 return;
}
function _celt_iir($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0101128 = 0, $$0102104$us = 0, $$0105$us = Math_fround(0), $$1$lcssa = 0, $$1123 = 0, $$3$lcssa = 0, $$3114 = 0, $$4109 = 0, $$4109$us = 0, $$5103 = 0, $$alloca_mul = 0, $$alloca_mul2 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = Math_fround(0), $22 = Math_fround(0), $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = Math_fround(0), $49 = 0, $50 = 0, $51 = 0, $52 = Math_fround(0), $53 = Math_fround(0), $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = 0, $58 = 0, $59 = 0, $60 = Math_fround(0), $61 = Math_fround(0), $62 = Math_fround(0), $63 = Math_fround(0);
 var $64 = Math_fround(0), $65 = Math_fround(0), $66 = Math_fround(0), $67 = Math_fround(0), $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = Math_fround(0), $72 = Math_fround(0), $73 = Math_fround(0), $74 = Math_fround(0), $75 = Math_fround(0), $76 = Math_fround(0), $77 = Math_fround(0), $78 = Math_fround(0), $79 = Math_fround(0), $8 = 0, $80 = Math_fround(0), $81 = Math_fround(0);
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = Math_fround(0), $9 = 0, $90 = 0, $91 = Math_fround(0), $92 = 0, $93 = 0, $94 = Math_fround(0), $95 = Math_fround(0), $96 = Math_fround(0), $97 = 0, $98 = 0, $99 = 0, $exitcond = 0;
 var $exitcond135 = 0, $exitcond136 = 0, $exitcond137 = 0, $exitcond144 = 0, $exitcond145 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $7 = sp;
 $$alloca_mul = $4<<2;
 $8 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $9 = (($4) + ($3))|0;
 $$alloca_mul2 = $9<<2;
 $10 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul2)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul2)|0)+15)&-16)|0);;
 $11 = ($4|0)>(0);
 if ($11) {
  $12 = (($4) + -1)|0;
  $$0101128 = 0;
  while(1) {
   $13 = (($12) - ($$0101128))|0;
   $14 = (($1) + ($13<<2)|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = (($8) + ($$0101128<<2)|0);
   HEAP32[$16>>2] = $15;
   $17 = (($$0101128) + 1)|0;
   $exitcond145 = ($17|0)==($4|0);
   if ($exitcond145) {
    break;
   } else {
    $$0101128 = $17;
   }
  }
  if ($11) {
   $18 = (($4) + -1)|0;
   $$1123 = 0;
   while(1) {
    $19 = (($18) - ($$1123))|0;
    $20 = (($5) + ($19<<2)|0);
    $21 = Math_fround(HEAPF32[$20>>2]);
    $22 = Math_fround(- $21);
    $23 = (($10) + ($$1123<<2)|0);
    HEAPF32[$23>>2] = $22;
    $24 = (($$1123) + 1)|0;
    $exitcond144 = ($24|0)==($4|0);
    if ($exitcond144) {
     $$1$lcssa = $4;
     break;
    } else {
     $$1123 = $24;
    }
   }
  } else {
   $$1$lcssa = 0;
  }
 } else {
  $$1$lcssa = 0;
 }
 $25 = ($9|0)>($$1$lcssa|0);
 if ($25) {
  $scevgep = (($10) + ($$1$lcssa<<2)|0);
  $26 = (($9) - ($$1$lcssa))|0;
  $27 = $26 << 2;
  _memset(($scevgep|0),0,($27|0))|0;
 }
 $28 = (($3) + -3)|0;
 $29 = ($3|0)>(3);
 if ($29) {
  $30 = ((($7)) + 4|0);
  $31 = ((($7)) + 8|0);
  $32 = ((($7)) + 12|0);
  $33 = ((($1)) + 4|0);
  $34 = ((($1)) + 8|0);
  $$3114 = 0;
  while(1) {
   $35 = (($0) + ($$3114<<2)|0);
   $36 = HEAP32[$35>>2]|0;
   HEAP32[$7>>2] = $36;
   $37 = $$3114 | 1;
   $38 = (($0) + ($37<<2)|0);
   $39 = HEAP32[$38>>2]|0;
   HEAP32[$30>>2] = $39;
   $40 = $$3114 | 2;
   $41 = (($0) + ($40<<2)|0);
   $42 = HEAP32[$41>>2]|0;
   HEAP32[$31>>2] = $42;
   $43 = $$3114 | 3;
   $44 = (($0) + ($43<<2)|0);
   $45 = HEAP32[$44>>2]|0;
   HEAP32[$32>>2] = $45;
   $46 = (($10) + ($$3114<<2)|0);
   _xcorr_kernel_c($8,$46,$7,$4);
   $47 = Math_fround(HEAPF32[$7>>2]);
   $48 = Math_fround(- $47);
   $49 = (($$3114) + ($4))|0;
   $50 = (($10) + ($49<<2)|0);
   HEAPF32[$50>>2] = $48;
   $51 = (($2) + ($$3114<<2)|0);
   HEAPF32[$51>>2] = $47;
   $52 = Math_fround(HEAPF32[$30>>2]);
   $53 = Math_fround(HEAPF32[$1>>2]);
   $54 = Math_fround($53 * $48);
   $55 = Math_fround($52 + $54);
   HEAPF32[$30>>2] = $55;
   $56 = Math_fround(- $55);
   $57 = (($49) + 1)|0;
   $58 = (($10) + ($57<<2)|0);
   HEAPF32[$58>>2] = $56;
   $59 = (($2) + ($37<<2)|0);
   HEAPF32[$59>>2] = $55;
   $60 = Math_fround(HEAPF32[$31>>2]);
   $61 = Math_fround(HEAPF32[$1>>2]);
   $62 = Math_fround($61 * $56);
   $63 = Math_fround($60 + $62);
   $64 = Math_fround(HEAPF32[$33>>2]);
   $65 = Math_fround($64 * $48);
   $66 = Math_fround($63 + $65);
   HEAPF32[$31>>2] = $66;
   $67 = Math_fround(- $66);
   $68 = (($49) + 2)|0;
   $69 = (($10) + ($68<<2)|0);
   HEAPF32[$69>>2] = $67;
   $70 = (($2) + ($40<<2)|0);
   HEAPF32[$70>>2] = $66;
   $71 = Math_fround(HEAPF32[$32>>2]);
   $72 = Math_fround(HEAPF32[$1>>2]);
   $73 = Math_fround($72 * $67);
   $74 = Math_fround($71 + $73);
   $75 = Math_fround(HEAPF32[$33>>2]);
   $76 = Math_fround($75 * $56);
   $77 = Math_fround($74 + $76);
   $78 = Math_fround(HEAPF32[$34>>2]);
   $79 = Math_fround($78 * $48);
   $80 = Math_fround($77 + $79);
   $81 = Math_fround(- $80);
   $82 = (($49) + 3)|0;
   $83 = (($10) + ($82<<2)|0);
   HEAPF32[$83>>2] = $81;
   $84 = (($2) + ($43<<2)|0);
   HEAPF32[$84>>2] = $80;
   $85 = (($$3114) + 4)|0;
   $86 = ($85|0)<($28|0);
   if ($86) {
    $$3114 = $85;
   } else {
    $$3$lcssa = $85;
    break;
   }
  }
 } else {
  $$3$lcssa = 0;
 }
 $87 = ($$3$lcssa|0)<($3|0);
 L18: do {
  if ($87) {
   if (!($11)) {
    $$4109 = $$3$lcssa;
    while(1) {
     $102 = (($0) + ($$4109<<2)|0);
     $103 = HEAP32[$102>>2]|0;
     $104 = (($$4109) + ($4))|0;
     $105 = (($10) + ($104<<2)|0);
     HEAP32[$105>>2] = $103;
     $106 = (($2) + ($$4109<<2)|0);
     HEAP32[$106>>2] = $103;
     $107 = (($$4109) + 1)|0;
     $exitcond137 = ($107|0)==($3|0);
     if ($exitcond137) {
      break L18;
     } else {
      $$4109 = $107;
     }
    }
   }
   $$4109$us = $$3$lcssa;
   while(1) {
    $88 = (($0) + ($$4109$us<<2)|0);
    $89 = Math_fround(HEAPF32[$88>>2]);
    $$0102104$us = 0;$$0105$us = $89;
    while(1) {
     $90 = (($8) + ($$0102104$us<<2)|0);
     $91 = Math_fround(HEAPF32[$90>>2]);
     $92 = (($$0102104$us) + ($$4109$us))|0;
     $93 = (($10) + ($92<<2)|0);
     $94 = Math_fround(HEAPF32[$93>>2]);
     $95 = Math_fround($91 * $94);
     $96 = Math_fround($$0105$us - $95);
     $97 = (($$0102104$us) + 1)|0;
     $exitcond135 = ($97|0)==($4|0);
     if ($exitcond135) {
      break;
     } else {
      $$0102104$us = $97;$$0105$us = $96;
     }
    }
    $98 = (($$4109$us) + ($4))|0;
    $99 = (($10) + ($98<<2)|0);
    HEAPF32[$99>>2] = $96;
    $100 = (($2) + ($$4109$us<<2)|0);
    HEAPF32[$100>>2] = $96;
    $101 = (($$4109$us) + 1)|0;
    $exitcond136 = ($101|0)==($3|0);
    if ($exitcond136) {
     break;
    } else {
     $$4109$us = $101;
    }
   }
  }
 } while(0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $108 = (($3) + -1)|0;
 $$5103 = 0;
 while(1) {
  $109 = (($108) - ($$5103))|0;
  $110 = (($2) + ($109<<2)|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = (($5) + ($$5103<<2)|0);
  HEAP32[$112>>2] = $111;
  $113 = (($$5103) + 1)|0;
  $exitcond = ($113|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$5103 = $113;
  }
 }
 STACKTOP = sp;return;
}
function __celt_autocorr($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0$lcssa = Math_fround(0), $$060 = 0, $$06265 = 0, $$064 = Math_fround(0), $$169 = 0, $$263 = 0, $$alloca_mul = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = Math_fround(0), $15 = 0, $16 = Math_fround(0), $17 = Math_fround(0), $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = Math_fround(0);
 var $23 = Math_fround(0), $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = Math_fround(0), $32 = 0, $33 = 0, $34 = Math_fround(0), $35 = Math_fround(0), $36 = Math_fround(0), $37 = 0, $38 = 0, $39 = Math_fround(0), $40 = Math_fround(0), $41 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $exitcond = 0, $exitcond76 = 0, $exitcond77 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = (($5) - ($4))|0;
 $$alloca_mul = $5<<2;
 $8 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $9 = ($3|0)==(0);
 if ($9) {
  $$060 = $0;
 } else {
  $10 = ($5|0)>(0);
  if ($10) {
   $11 = $5 << 2;
   _memcpy(($8|0),($0|0),($11|0))|0;
  }
  $12 = ($3|0)>(0);
  if ($12) {
   $$169 = 0;
   while(1) {
    $13 = (($0) + ($$169<<2)|0);
    $14 = Math_fround(HEAPF32[$13>>2]);
    $15 = (($2) + ($$169<<2)|0);
    $16 = Math_fround(HEAPF32[$15>>2]);
    $17 = Math_fround($14 * $16);
    $18 = (($8) + ($$169<<2)|0);
    HEAPF32[$18>>2] = $17;
    $19 = (($5) - ($$169))|0;
    $20 = (($19) + -1)|0;
    $21 = (($0) + ($20<<2)|0);
    $22 = Math_fround(HEAPF32[$21>>2]);
    $23 = Math_fround($16 * $22);
    $24 = (($8) + ($20<<2)|0);
    HEAPF32[$24>>2] = $23;
    $25 = (($$169) + 1)|0;
    $exitcond77 = ($25|0)==($3|0);
    if ($exitcond77) {
     $$060 = $8;
     break;
    } else {
     $$169 = $25;
    }
   }
  } else {
   $$060 = $8;
  }
 }
 $26 = (($4) + 1)|0;
 _celt_pitch_xcorr_c($$060,$$060,$1,$7,$26,$6);
 $27 = ($4|0)<(0);
 if ($27) {
  STACKTOP = sp;return 0;
 }
 $$06265 = 0;
 while(1) {
  $28 = (($$06265) + ($7))|0;
  $29 = ($28|0)<($5|0);
  if ($29) {
   $$064 = Math_fround(0.0);$$263 = $28;
   while(1) {
    $30 = (($$060) + ($$263<<2)|0);
    $31 = Math_fround(HEAPF32[$30>>2]);
    $32 = (($$263) - ($$06265))|0;
    $33 = (($$060) + ($32<<2)|0);
    $34 = Math_fround(HEAPF32[$33>>2]);
    $35 = Math_fround($31 * $34);
    $36 = Math_fround($$064 + $35);
    $37 = (($$263) + 1)|0;
    $exitcond = ($37|0)==($5|0);
    if ($exitcond) {
     $$0$lcssa = $36;
     break;
    } else {
     $$064 = $36;$$263 = $37;
    }
   }
  } else {
   $$0$lcssa = Math_fround(0.0);
  }
  $38 = (($1) + ($$06265<<2)|0);
  $39 = Math_fround(HEAPF32[$38>>2]);
  $40 = Math_fround($$0$lcssa + $39);
  HEAPF32[$38>>2] = $40;
  $41 = (($$06265) + 1)|0;
  $exitcond76 = ($41|0)==($26|0);
  if ($exitcond76) {
   break;
  } else {
   $$06265 = $41;
  }
 }
 STACKTOP = sp;return 0;
}
function _quant_coarse_energy($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 $13 = $13|0;
 $14 = $14|0;
 $15 = $15|0;
 $16 = $16|0;
 var $$ = Math_fround(0), $$0$us$i = 0, $$0146 = 0, $$025$us$i = Math_fround(0), $$02627$us$i = 0, $$1$lcssa$lcssa$i = Math_fround(0), $$128$us$i = Math_fround(0), $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul3 = 0, $$idx = 0, $$idx$val = 0, $$idx149 = 0, $$idx149$val = 0, $$sroa$0$0$copyload = 0, $$sroa$0175 = 0, $$sroa$4$0$$sroa_idx180 = 0, $$sroa$4$0$copyload = 0, $$sroa$5 = 0, $$sroa$5$0$$sroa_idx = 0;
 var $$sroa$5161$0$copyload = 0, $$sroa$5184 = 0, $$sroa$6 = 0, $100 = 0, $101 = 0, $102 = Math_fround(0), $103 = Math_fround(0), $104 = Math_fround(0), $105 = Math_fround(0), $106 = Math_fround(0), $17 = 0, $18 = 0, $19 = Math_fround(0), $20 = 0, $21 = 0, $22 = 0, $23 = Math_fround(0), $24 = 0, $25 = 0, $26 = 0;
 var $27 = Math_fround(0), $28 = Math_fround(0), $29 = Math_fround(0), $30 = Math_fround(0), $31 = Math_fround(0), $32 = 0, $33 = Math_fround(0), $34 = Math_fround(0), $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = Math_fround(0), $43 = 0, $44 = Math_fround(0), $45 = Math_fround(0), $46 = Math_fround(0);
 var $47 = Math_fround(0), $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = Math_fround(0), $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = Math_fround(0), $62 = Math_fround(0), $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $phitmp = 0, $spec$select = 0, $spec$select147 = 0, $spec$select148 = Math_fround(0), $spec$select194 = Math_fround(0), $spec$store$select = 0;
 var $storemerge = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $$sroa$0175 = sp + 72|0;
 $$sroa$5184 = sp + 48|0;
 $$sroa$5 = sp + 24|0;
 $$sroa$6 = sp;
 $17 = ($12|0)==(0);
 if ($17) {
  $18 = ($14|0)==(0);
  if ($18) {
   $19 = Math_fround(HEAPF32[$13>>2]);
   $20 = (($2) - ($1))|0;
   $21 = $20 << 1;
   $22 = Math_imul($21, $9)|0;
   $23 = (Math_fround(($22|0)));
   $24 = $19 > $23;
   if ($24) {
    $25 = Math_imul($20, $9)|0;
    $26 = ($25|0)<($11|0);
    $phitmp = $26&1;
    $58 = $phitmp;
   } else {
    $58 = 0;
   }
  } else {
   $58 = 0;
  }
 } else {
  $58 = 1;
 }
 $27 = (Math_fround(($6>>>0)));
 $28 = Math_fround(HEAPF32[$13>>2]);
 $29 = Math_fround($28 * $27);
 $30 = (Math_fround(($15|0)));
 $31 = Math_fround($29 * $30);
 $32 = $9 << 9;
 $33 = (Math_fround(($32|0)));
 $34 = Math_fround($31 / $33);
 $35 = (~~(($34)));
 $36 = ((($0)) + 8|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ($1|0)<($3|0);
 if ($38) {
  $$0$us$i = 0;$$025$us$i = Math_fround(0.0);
  while(1) {
   $39 = Math_imul($$0$us$i, $37)|0;
   $$02627$us$i = $1;$$128$us$i = $$025$us$i;
   while(1) {
    $40 = (($$02627$us$i) + ($39))|0;
    $41 = (($4) + ($40<<2)|0);
    $42 = Math_fround(HEAPF32[$41>>2]);
    $43 = (($5) + ($40<<2)|0);
    $44 = Math_fround(HEAPF32[$43>>2]);
    $45 = Math_fround($42 - $44);
    $46 = Math_fround($45 * $45);
    $47 = Math_fround($$128$us$i + $46);
    $48 = (($$02627$us$i) + 1)|0;
    $exitcond$i = ($48|0)==($3|0);
    if ($exitcond$i) {
     break;
    } else {
     $$02627$us$i = $48;$$128$us$i = $47;
    }
   }
   $49 = (($$0$us$i) + 1)|0;
   $50 = ($49|0)<($9|0);
   if ($50) {
    $$0$us$i = $49;$$025$us$i = $47;
   } else {
    $$1$lcssa$lcssa$i = $47;
    break;
   }
  }
 } else {
  $$1$lcssa$lcssa$i = Math_fround(0.0);
 }
 $51 = $$1$lcssa$lcssa$i > Math_fround(200.0);
 $52 = $51 ? Math_fround(200.0) : $$1$lcssa$lcssa$i;
 $$idx = ((($8)) + 20|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx149 = ((($8)) + 28|0);
 $$idx149$val = HEAP32[$$idx149>>2]|0;
 $53 = (Math_clz32(($$idx149$val|0))|0);
 $54 = (($$idx$val) + -32)|0;
 $55 = (($54) + ($53))|0;
 $56 = (($55) + 3)|0;
 $57 = ($56>>>0)>($6>>>0);
 $spec$select = $57 ? 0 : $58;
 $spec$select147 = $57 ? 0 : $14;
 $59 = (($2) - ($1))|0;
 $60 = ($59|0)>(10);
 $61 = (Math_fround(($11|0)));
 $62 = Math_fround($61 * Math_fround(0.125));
 $63 = $62 > Math_fround(16.0);
 $$ = $63 ? Math_fround(16.0) : $62;
 $spec$select194 = $60 ? $$ : Math_fround(16.0);
 $64 = ($16|0)==(0);
 $spec$select148 = $64 ? $spec$select194 : Math_fround(3.0);
 ;HEAP32[$$sroa$0175>>2]=HEAP32[$8>>2]|0;HEAP32[$$sroa$0175+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$$sroa$0175+8>>2]=HEAP32[$8+8>>2]|0;HEAP32[$$sroa$0175+12>>2]=HEAP32[$8+12>>2]|0;HEAP32[$$sroa$0175+16>>2]=HEAP32[$8+16>>2]|0;HEAP32[$$sroa$0175+20>>2]=HEAP32[$8+20>>2]|0;
 $$sroa$4$0$$sroa_idx180 = ((($8)) + 24|0);
 $$sroa$4$0$copyload = HEAP32[$$sroa$4$0$$sroa_idx180>>2]|0;
 ;HEAP32[$$sroa$5184>>2]=HEAP32[$$idx149>>2]|0;HEAP32[$$sroa$5184+4>>2]=HEAP32[$$idx149+4>>2]|0;HEAP32[$$sroa$5184+8>>2]=HEAP32[$$idx149+8>>2]|0;HEAP32[$$sroa$5184+12>>2]=HEAP32[$$idx149+12>>2]|0;HEAP32[$$sroa$5184+16>>2]=HEAP32[$$idx149+16>>2]|0;
 $65 = Math_imul($37, $9)|0;
 $66 = (_llvm_stacksave()|0);
 $$alloca_mul = $65<<2;
 $67 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $68 = HEAP32[$36>>2]|0;
 $69 = Math_imul($68, $9)|0;
 $$alloca_mul1 = $69<<2;
 $70 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $71 = $69 << 2;
 _memcpy(($67|0),($5|0),($71|0))|0;
 $72 = ($spec$select147|0)==(0);
 $73 = ($spec$select|0)==(0);
 $74 = $spec$select147 | $spec$select;
 $75 = ($74|0)==(0);
 if ($75) {
  $$0146 = 0;
 } else {
  $76 = (((19984 + (($10*84)|0)|0)) + 42|0);
  $77 = (_quant_coarse_energy_impl($0,$1,$2,$4,$67,$6,$55,$76,$70,$8,$9,$10,1,$spec$select148,$16)|0);
  $$0146 = $77;
 }
 if (!($73)) {
  $96 = HEAP32[$36>>2]|0;
  $97 = $9 << 2;
  $98 = Math_imul($97, $96)|0;
  _memcpy(($5|0),($67|0),($98|0))|0;
  $99 = HEAP32[$36>>2]|0;
  $100 = Math_imul($97, $99)|0;
  _memcpy(($7|0),($70|0),($100|0))|0;
  $storemerge = $52;
  HEAPF32[$13>>2] = $storemerge;
  _llvm_stackrestore(($66|0));
  STACKTOP = sp;return;
 }
 $78 = (_ec_tell_frac($8)|0);
 $$sroa$0$0$copyload = HEAP32[$8>>2]|0;
 $$sroa$5$0$$sroa_idx = ((($8)) + 4|0);
 ;HEAP32[$$sroa$5>>2]=HEAP32[$$sroa$5$0$$sroa_idx>>2]|0;HEAP32[$$sroa$5+4>>2]=HEAP32[$$sroa$5$0$$sroa_idx+4>>2]|0;HEAP32[$$sroa$5+8>>2]=HEAP32[$$sroa$5$0$$sroa_idx+8>>2]|0;HEAP32[$$sroa$5+12>>2]=HEAP32[$$sroa$5$0$$sroa_idx+12>>2]|0;HEAP32[$$sroa$5+16>>2]=HEAP32[$$sroa$5$0$$sroa_idx+16>>2]|0;
 $$sroa$5161$0$copyload = HEAP32[$$sroa$4$0$$sroa_idx180>>2]|0;
 ;HEAP32[$$sroa$6>>2]=HEAP32[$$idx149>>2]|0;HEAP32[$$sroa$6+4>>2]=HEAP32[$$idx149+4>>2]|0;HEAP32[$$sroa$6+8>>2]=HEAP32[$$idx149+8>>2]|0;HEAP32[$$sroa$6+12>>2]=HEAP32[$$idx149+12>>2]|0;HEAP32[$$sroa$6+16>>2]=HEAP32[$$idx149+16>>2]|0;
 $79 = (($$sroa$0$0$copyload) + ($$sroa$4$0$copyload)|0);
 $80 = (($$sroa$5161$0$copyload) - ($$sroa$4$0$copyload))|0;
 $81 = ($80|0)==(0);
 $spec$store$select = $81 ? 1 : $80;
 $82 = (_llvm_stacksave()|0);
 $$alloca_mul3 = $spec$store$select;
 $83 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;
 _memcpy(($83|0),($79|0),($80|0))|0;
 ;HEAP32[$8>>2]=HEAP32[$$sroa$0175>>2]|0;HEAP32[$8+4>>2]=HEAP32[$$sroa$0175+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$$sroa$0175+8>>2]|0;HEAP32[$8+12>>2]=HEAP32[$$sroa$0175+12>>2]|0;HEAP32[$8+16>>2]=HEAP32[$$sroa$0175+16>>2]|0;HEAP32[$8+20>>2]=HEAP32[$$sroa$0175+20>>2]|0;
 HEAP32[$$sroa$4$0$$sroa_idx180>>2] = $$sroa$4$0$copyload;
 ;HEAP32[$$idx149>>2]=HEAP32[$$sroa$5184>>2]|0;HEAP32[$$idx149+4>>2]=HEAP32[$$sroa$5184+4>>2]|0;HEAP32[$$idx149+8>>2]=HEAP32[$$sroa$5184+8>>2]|0;HEAP32[$$idx149+12>>2]=HEAP32[$$sroa$5184+12>>2]|0;HEAP32[$$idx149+16>>2]=HEAP32[$$sroa$5184+16>>2]|0;
 $84 = (19984 + (($10*84)|0)|0);
 $85 = (_quant_coarse_energy_impl($0,$1,$2,$4,$5,$6,$55,$84,$7,$8,$9,$10,0,$spec$select148,$16)|0);
 do {
  if (!($72)) {
   $86 = ($$0146|0)<($85|0);
   if (!($86)) {
    $87 = ($$0146|0)==($85|0);
    if (!($87)) {
     break;
    }
    $88 = (_ec_tell_frac($8)|0);
    $89 = (($88) + ($35))|0;
    $90 = ($89|0)>($78|0);
    if (!($90)) {
     break;
    }
   }
   HEAP32[$8>>2] = $$sroa$0$0$copyload;
   ;HEAP32[$$sroa$5$0$$sroa_idx>>2]=HEAP32[$$sroa$5>>2]|0;HEAP32[$$sroa$5$0$$sroa_idx+4>>2]=HEAP32[$$sroa$5+4>>2]|0;HEAP32[$$sroa$5$0$$sroa_idx+8>>2]=HEAP32[$$sroa$5+8>>2]|0;HEAP32[$$sroa$5$0$$sroa_idx+12>>2]=HEAP32[$$sroa$5+12>>2]|0;HEAP32[$$sroa$5$0$$sroa_idx+16>>2]=HEAP32[$$sroa$5+16>>2]|0;
   HEAP32[$$sroa$4$0$$sroa_idx180>>2] = $$sroa$5161$0$copyload;
   ;HEAP32[$$idx149>>2]=HEAP32[$$sroa$6>>2]|0;HEAP32[$$idx149+4>>2]=HEAP32[$$sroa$6+4>>2]|0;HEAP32[$$idx149+8>>2]=HEAP32[$$sroa$6+8>>2]|0;HEAP32[$$idx149+12>>2]=HEAP32[$$sroa$6+12>>2]|0;HEAP32[$$idx149+16>>2]=HEAP32[$$sroa$6+16>>2]|0;
   _memcpy(($79|0),($83|0),($80|0))|0;
   $91 = HEAP32[$36>>2]|0;
   $92 = $9 << 2;
   $93 = Math_imul($92, $91)|0;
   _memcpy(($5|0),($67|0),($93|0))|0;
   $94 = HEAP32[$36>>2]|0;
   $95 = Math_imul($92, $94)|0;
   _memcpy(($7|0),($70|0),($95|0))|0;
   _llvm_stackrestore(($82|0));
   $storemerge = $52;
   HEAPF32[$13>>2] = $storemerge;
   _llvm_stackrestore(($66|0));
   STACKTOP = sp;return;
  }
 } while(0);
 _llvm_stackrestore(($82|0));
 $101 = (20320 + ($10<<2)|0);
 $102 = Math_fround(HEAPF32[$101>>2]);
 $103 = Math_fround($102 * $102);
 $104 = Math_fround(HEAPF32[$13>>2]);
 $105 = Math_fround($103 * $104);
 $106 = Math_fround($52 + $105);
 $storemerge = $106;
 HEAPF32[$13>>2] = $storemerge;
 _llvm_stackrestore(($66|0));
 STACKTOP = sp;return;
}
function _quant_coarse_energy_impl($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 $13 = Math_fround($13);
 $14 = $14|0;
 var $$0123 = 0, $$0124$lcssa = 0, $$0124132 = 0, $$0125 = Math_fround(0), $$0126 = Math_fround(0), $$0133 = 0, $$1 = 0, $$idx = 0, $$idx$val = 0, $$idx128 = 0, $$idx128$val = 0, $$neg = 0, $$neg131 = 0, $$pre = 0, $$pre$pre = 0, $100 = Math_fround(0), $101 = Math_fround(0), $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = Math_fround(0), $110 = Math_fround(0), $111 = 0, $112 = Math_fround(0), $113 = Math_fround(0), $114 = Math_fround(0), $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = Math_fround(0), $27 = Math_fround(0), $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = Math_fround(0), $47 = 0, $48 = Math_fround(0), $49 = 0, $50 = Math_fround(0), $51 = Math_fround(0), $52 = Math_fround(0), $53 = 0, $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = 0, $59 = 0;
 var $60 = Math_fround(0), $61 = Math_fround(0), $62 = 0, $63 = 0, $64 = Math_fround(0), $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $exitcond = 0, $ispos = 0, $neg = 0, $or$cond127 = 0, $or$cond129 = 0, $or$cond3 = 0, $spec$select = 0, $spec$store$select = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $15 = sp;
 $16 = sp + 8|0;
 $17 = $15;
 $18 = $17;
 HEAP32[$18>>2] = 0;
 $19 = (($17) + 4)|0;
 $20 = $19;
 HEAP32[$20>>2] = 0;
 $21 = (($6) + 3)|0;
 $22 = ($21|0)>($5|0);
 if (!($22)) {
  _ec_enc_bit_logp($9,$12,3);
 }
 $23 = ($12|0)==(0);
 if ($23) {
  $24 = (20320 + ($11<<2)|0);
  $25 = (20336 + ($11<<2)|0);
  $26 = Math_fround(HEAPF32[$25>>2]);
  $27 = Math_fround(HEAPF32[$24>>2]);
  $$0125 = $27;$$0126 = $26;
 } else {
  $$0125 = Math_fround(0.0);$$0126 = Math_fround(0.149993896);
 }
 $28 = ($1|0)<($2|0);
 if (!($28)) {
  $$0124$lcssa = 0;
  $118 = ($14|0)==(0);
  $119 = $118 ? $$0124$lcssa : 0;
  STACKTOP = sp;return ($119|0);
 }
 $29 = ((($0)) + 8|0);
 $$idx = ((($9)) + 20|0);
 $$idx128 = ((($9)) + 28|0);
 $$neg = (($5) + 32)|0;
 $30 = ($10*3)|0;
 $31 = ($14|0)!=(0);
 $$pre$pre = HEAP32[$29>>2]|0;
 $$0124132 = 0;$$0133 = $1;$$pre = $$pre$pre;
 while(1) {
  $32 = (($2) - ($$0133))|0;
  $33 = Math_imul($30, $32)|0;
  $34 = ($$0133|0)!=($1|0);
  $35 = ($$0133|0)>(1);
  $or$cond3 = $31 & $35;
  $36 = ($$0133|0)<(20);
  $37 = $36 ? $$0133 : 20;
  $38 = $37 << 1;
  $39 = (($7) + ($38)|0);
  $40 = $38 | 1;
  $41 = (($7) + ($40)|0);
  $$0123 = 0;$$1 = $$0124132;$43 = $$pre;
  while(1) {
   $42 = Math_imul($43, $$0123)|0;
   $44 = (($42) + ($$0133))|0;
   $45 = (($3) + ($44<<2)|0);
   $46 = Math_fround(HEAPF32[$45>>2]);
   $47 = (($4) + ($44<<2)|0);
   $48 = Math_fround(HEAPF32[$47>>2]);
   $49 = $48 < Math_fround(-9.0);
   $50 = $49 ? Math_fround(-9.0) : $48;
   $51 = Math_fround($$0125 * $50);
   $52 = Math_fround($46 - $51);
   $53 = (($15) + ($$0123<<2)|0);
   $54 = Math_fround(HEAPF32[$53>>2]);
   $55 = Math_fround($52 - $54);
   $56 = Math_fround($55 + Math_fround(0.5));
   $57 = (Math_fround(Math_floor((Math_fround($56)))));
   $58 = (~~(($57)));
   $59 = $48 < Math_fround(-28.0);
   $60 = $59 ? Math_fround(-28.0) : $48;
   $61 = Math_fround($60 - $13);
   $62 = ($58|0)<(0);
   $63 = $46 < $61;
   $or$cond127 = $63 & $62;
   $64 = Math_fround($61 - $46);
   $65 = (~~(($64)));
   $66 = (($58) + ($65))|0;
   $67 = ($66|0)<(0);
   $spec$store$select = $67 ? $66 : 0;
   $storemerge = $or$cond127 ? $spec$store$select : $58;
   HEAP32[$16>>2] = $storemerge;
   $$idx$val = HEAP32[$$idx>>2]|0;
   $$idx128$val = HEAP32[$$idx128>>2]|0;
   $68 = (Math_clz32(($$idx128$val|0))|0);
   $$neg131 = (($$neg) - ($$idx$val))|0;
   $69 = (($$neg131) - ($68))|0;
   $70 = (($69) - ($33))|0;
   $71 = ($70|0)<(24);
   $or$cond129 = $34 & $71;
   if ($or$cond129) {
    $72 = ($storemerge|0)<(1);
    $73 = $72 ? $storemerge : 1;
    HEAP32[$16>>2] = $73;
    $74 = ($70|0)<(16);
    if ($74) {
     $75 = ($73|0)>(-1);
     $76 = $75 ? $73 : -1;
     HEAP32[$16>>2] = $76;
     $78 = $76;
    } else {
     $78 = $73;
    }
   } else {
    $78 = $storemerge;
   }
   if ($or$cond3) {
    $77 = ($78|0)<(0);
    $79 = $77 ? $78 : 0;
    HEAP32[$16>>2] = $79;
    $89 = $79;
   } else {
    $89 = $78;
   }
   $80 = ($69|0)>(14);
   do {
    if ($80) {
     $81 = HEAP8[$39>>0]|0;
     $82 = $81&255;
     $83 = $82 << 7;
     $84 = HEAP8[$41>>0]|0;
     $85 = $84&255;
     $86 = $85 << 6;
     _ec_laplace_encode($9,$16,$83,$86);
    } else {
     $87 = ($69|0)>(1);
     if ($87) {
      $88 = ($89|0)<(1);
      $90 = $88 ? $89 : 1;
      $91 = ($90|0)>(-1);
      $spec$select = $91 ? $90 : -1;
      HEAP32[$16>>2] = $spec$select;
      $92 = $spec$select << 1;
      $93 = $spec$select >> 31;
      $94 = $92 ^ $93;
      _ec_enc_icdf($9,$94,37767,2);
      break;
     }
     $95 = ($69|0)==(1);
     if ($95) {
      $96 = ($89|0)<(0);
      $97 = $96 ? $89 : 0;
      HEAP32[$16>>2] = $97;
      $98 = (0 - ($97))|0;
      _ec_enc_bit_logp($9,$98,1);
      break;
     } else {
      HEAP32[$16>>2] = -1;
      break;
     }
    }
   } while(0);
   $99 = HEAP32[$16>>2]|0;
   $100 = (Math_fround(($99|0)));
   $101 = Math_fround($55 - $100);
   $102 = HEAP32[$29>>2]|0;
   $103 = Math_imul($102, $$0123)|0;
   $104 = (($103) + ($$0133))|0;
   $105 = (($8) + ($104<<2)|0);
   HEAPF32[$105>>2] = $101;
   $106 = (($storemerge) - ($99))|0;
   $ispos = ($106|0)>(-1);
   $neg = (0 - ($106))|0;
   $107 = $ispos ? $106 : $neg;
   $108 = (($107) + ($$1))|0;
   $109 = Math_fround($54 + $51);
   $110 = Math_fround($109 + $100);
   $111 = (($4) + ($104<<2)|0);
   HEAPF32[$111>>2] = $110;
   $112 = Math_fround($54 + $100);
   $113 = Math_fround($$0126 * $100);
   $114 = Math_fround($112 - $113);
   HEAPF32[$53>>2] = $114;
   $115 = (($$0123) + 1)|0;
   $116 = ($115|0)<($10|0);
   if ($116) {
    $$0123 = $115;$$1 = $108;$43 = $102;
   } else {
    break;
   }
  }
  $117 = (($$0133) + 1)|0;
  $exitcond = ($117|0)==($2|0);
  if ($exitcond) {
   $$0124$lcssa = $108;
   break;
  } else {
   $$0124132 = $108;$$0133 = $117;$$pre = $102;
  }
 }
 $118 = ($14|0)==(0);
 $119 = $118 ? $$0124$lcssa : 0;
 STACKTOP = sp;return ($119|0);
}
function _quant_fine_energy($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$047 = 0, $$048 = 0, $$1 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = Math_fround(0), $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = Math_fround(0), $21 = Math_fround(0), $22 = Math_fround(0), $23 = Math_fround(0), $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = Math_fround(0), $29 = Math_fround(0), $30 = 0, $31 = 0, $32 = 0, $33 = Math_fround(0), $34 = Math_fround(0), $35 = Math_fround(0), $36 = Math_fround(0), $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = Math_fround(0), $42 = Math_fround(0), $43 = 0, $44 = Math_fround(0), $45 = Math_fround(0);
 var $46 = 0, $47 = 0, $48 = 0, $8 = 0, $9 = 0, $exitcond = 0, $sext = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = ($1|0)<($2|0);
 if (!($8)) {
  return;
 }
 $9 = ((($0)) + 8|0);
 $$048 = $1;
 while(1) {
  $10 = (($5) + ($$048<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)<(1);
  if (!($12)) {
   $sext = 65536 << $11;
   $13 = $sext >> 16;
   $14 = (Math_fround(($13|0)));
   $15 = (($13) + -1)|0;
   $$pre = HEAP32[$9>>2]|0;
   $$047 = 0;$17 = $$pre;$27 = $11;
   while(1) {
    $16 = Math_imul($17, $$047)|0;
    $18 = (($16) + ($$048))|0;
    $19 = (($4) + ($18<<2)|0);
    $20 = Math_fround(HEAPF32[$19>>2]);
    $21 = Math_fround($20 + Math_fround(0.5));
    $22 = Math_fround($21 * $14);
    $23 = (Math_fround(Math_floor((Math_fround($22)))));
    $24 = (~~(($23)));
    $25 = ($13|0)>($24|0);
    $spec$select = $25 ? $24 : $15;
    $26 = ($spec$select|0)>(0);
    $$1 = $26 ? $spec$select : 0;
    _ec_enc_bits($6,$$1,$27);
    $28 = (Math_fround(($$1|0)));
    $29 = Math_fround($28 + Math_fround(0.5));
    $30 = HEAP32[$10>>2]|0;
    $31 = (14 - ($30))|0;
    $32 = 1 << $31;
    $33 = (Math_fround(($32|0)));
    $34 = Math_fround($29 * $33);
    $35 = Math_fround($34 * Math_fround(6.10351563E-5));
    $36 = Math_fround($35 + Math_fround(-0.5));
    $37 = HEAP32[$9>>2]|0;
    $38 = Math_imul($37, $$047)|0;
    $39 = (($38) + ($$048))|0;
    $40 = (($3) + ($39<<2)|0);
    $41 = Math_fround(HEAPF32[$40>>2]);
    $42 = Math_fround($41 + $36);
    HEAPF32[$40>>2] = $42;
    $43 = (($4) + ($39<<2)|0);
    $44 = Math_fround(HEAPF32[$43>>2]);
    $45 = Math_fround($44 - $36);
    HEAPF32[$43>>2] = $45;
    $46 = (($$047) + 1)|0;
    $47 = ($46|0)<($7|0);
    if ($47) {
     $$047 = $46;$17 = $37;$27 = $30;
    } else {
     break;
    }
   }
  }
  $48 = (($$048) + 1)|0;
  $exitcond = ($48|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $$048 = $48;
  }
 }
 return;
}
function _quant_energy_finalise($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$04347 = 0, $$04347$1 = 0, $$044 = 0, $$044$1 = 0, $$1$lcssa = 0, $$149 = 0, $$149$1 = 0, $$2 = 0, $$2$1 = 0, $$3 = 0, $$3$1 = 0, $$pre = 0, $$pre53 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = Math_fround(0), $24 = 0, $25 = 0, $26 = Math_fround(0), $27 = Math_fround(0), $28 = 0, $29 = 0, $30 = 0, $31 = Math_fround(0), $32 = Math_fround(0), $33 = Math_fround(0), $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = Math_fround(0), $39 = Math_fround(0), $40 = 0, $41 = Math_fround(0), $42 = Math_fround(0), $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $60 = Math_fround(0), $61 = 0, $62 = 0, $63 = Math_fround(0), $64 = Math_fround(0), $65 = 0, $66 = 0, $67 = 0, $68 = Math_fround(0), $69 = Math_fround(0), $70 = Math_fround(0), $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = Math_fround(0), $76 = Math_fround(0);
 var $77 = 0, $78 = Math_fround(0), $79 = Math_fround(0), $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $or$cond = 0, $or$cond$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $10 = ($1|0)<($2|0);
 $11 = ((($0)) + 8|0);
 if (!($10)) {
  return;
 }
 $12 = ($7|0)<($9|0);
 if ($12) {
  $$1$lcssa = $7;
 } else {
  $$04347 = $1;$$149 = $7;
  while(1) {
   $13 = (($5) + ($$04347<<2)|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($14|0)>(7);
   if ($15) {
    $$3 = $$149;
   } else {
    $16 = (($6) + ($$04347<<2)|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(0);
    if ($18) {
     $$pre = HEAP32[$11>>2]|0;
     $$044 = 0;$$2 = $$149;$20 = $$pre;
     while(1) {
      $19 = Math_imul($20, $$044)|0;
      $21 = (($19) + ($$04347))|0;
      $22 = (($4) + ($21<<2)|0);
      $23 = Math_fround(HEAPF32[$22>>2]);
      $24 = !($23 < Math_fround(0.0));
      $25 = $24&1;
      _ec_enc_bits($8,$25,1);
      $26 = (Math_fround(($24&1)));
      $27 = Math_fround($26 + Math_fround(-0.5));
      $28 = HEAP32[$13>>2]|0;
      $29 = (13 - ($28))|0;
      $30 = 1 << $29;
      $31 = (Math_fround(($30|0)));
      $32 = Math_fround($27 * $31);
      $33 = Math_fround($32 * Math_fround(6.10351563E-5));
      $34 = HEAP32[$11>>2]|0;
      $35 = Math_imul($34, $$044)|0;
      $36 = (($35) + ($$04347))|0;
      $37 = (($3) + ($36<<2)|0);
      $38 = Math_fround(HEAPF32[$37>>2]);
      $39 = Math_fround($38 + $33);
      HEAPF32[$37>>2] = $39;
      $40 = (($4) + ($36<<2)|0);
      $41 = Math_fround(HEAPF32[$40>>2]);
      $42 = Math_fround($41 - $33);
      HEAPF32[$40>>2] = $42;
      $43 = (($$2) + -1)|0;
      $44 = (($$044) + 1)|0;
      $45 = ($44|0)<($9|0);
      if ($45) {
       $$044 = $44;$$2 = $43;$20 = $34;
      } else {
       $$3 = $43;
       break;
      }
     }
    } else {
     $$3 = $$149;
    }
   }
   $46 = (($$04347) + 1)|0;
   $47 = ($46|0)>=($2|0);
   $48 = ($$3|0)<($9|0);
   $or$cond = $47 | $48;
   if ($or$cond) {
    $$1$lcssa = $$3;
    break;
   } else {
    $$04347 = $46;$$149 = $$3;
   }
  }
 }
 $49 = ($$1$lcssa|0)<($9|0);
 if ($49) {
  return;
 }
 $$04347$1 = $1;$$149$1 = $$1$lcssa;
 while(1) {
  $50 = (($5) + ($$04347$1<<2)|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ($51|0)>(7);
  if ($52) {
   $$3$1 = $$149$1;
  } else {
   $53 = (($6) + ($$04347$1<<2)|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($54|0)==(1);
   if ($55) {
    $$pre53 = HEAP32[$11>>2]|0;
    $$044$1 = 0;$$2$1 = $$149$1;$57 = $$pre53;
    while(1) {
     $56 = Math_imul($57, $$044$1)|0;
     $58 = (($56) + ($$04347$1))|0;
     $59 = (($4) + ($58<<2)|0);
     $60 = Math_fround(HEAPF32[$59>>2]);
     $61 = !($60 < Math_fround(0.0));
     $62 = $61&1;
     _ec_enc_bits($8,$62,1);
     $63 = (Math_fround(($61&1)));
     $64 = Math_fround($63 + Math_fround(-0.5));
     $65 = HEAP32[$50>>2]|0;
     $66 = (13 - ($65))|0;
     $67 = 1 << $66;
     $68 = (Math_fround(($67|0)));
     $69 = Math_fround($64 * $68);
     $70 = Math_fround($69 * Math_fround(6.10351563E-5));
     $71 = HEAP32[$11>>2]|0;
     $72 = Math_imul($71, $$044$1)|0;
     $73 = (($72) + ($$04347$1))|0;
     $74 = (($3) + ($73<<2)|0);
     $75 = Math_fround(HEAPF32[$74>>2]);
     $76 = Math_fround($75 + $70);
     HEAPF32[$74>>2] = $76;
     $77 = (($4) + ($73<<2)|0);
     $78 = Math_fround(HEAPF32[$77>>2]);
     $79 = Math_fround($78 - $70);
     HEAPF32[$77>>2] = $79;
     $80 = (($$2$1) + -1)|0;
     $81 = (($$044$1) + 1)|0;
     $82 = ($81|0)<($9|0);
     if ($82) {
      $$044$1 = $81;$$2$1 = $80;$57 = $71;
     } else {
      $$3$1 = $80;
      break;
     }
    }
   } else {
    $$3$1 = $$149$1;
   }
  }
  $83 = (($$04347$1) + 1)|0;
  $84 = ($83|0)>=($2|0);
  $85 = ($$3$1|0)<($9|0);
  $or$cond$1 = $84 | $85;
  if ($or$cond$1) {
   break;
  } else {
   $$04347$1 = $83;$$149$1 = $$3$1;
  }
 }
 return;
}
function _unquant_coarse_energy($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$080 = 0, $$081 = Math_fround(0), $$082 = 0, $$083 = Math_fround(0), $$087 = 0, $$idx = 0, $$idx$val = 0, $$idx84 = 0, $$idx84$val = 0, $$neg = 0, $$neg86 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = Math_fround(0), $17 = Math_fround(0), $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = Math_fround(0), $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = Math_fround(0), $54 = 0, $55 = Math_fround(0), $56 = Math_fround(0), $57 = 0, $58 = Math_fround(0);
 var $59 = Math_fround(0), $60 = Math_fround(0), $61 = Math_fround(0), $62 = Math_fround(0), $63 = Math_fround(0), $64 = 0, $65 = 0, $66 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp;
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = 0;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = 0;
 $13 = ($4|0)==(0);
 if ($13) {
  $14 = (20320 + ($7<<2)|0);
  $15 = (20336 + ($7<<2)|0);
  $16 = Math_fround(HEAPF32[$15>>2]);
  $17 = Math_fround(HEAPF32[$14>>2]);
  $$081 = $17;$$083 = $16;
 } else {
  $$081 = Math_fround(0.0);$$083 = Math_fround(0.149993896);
 }
 $18 = ($1|0)<($2|0);
 if (!($18)) {
  STACKTOP = sp;return;
 }
 $19 = ((($5)) + 4|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $20 << 3;
 $$idx = ((($5)) + 20|0);
 $$idx84 = ((($5)) + 28|0);
 $$neg = (($21) + 32)|0;
 $22 = ((($0)) + 8|0);
 $$087 = $1;
 while(1) {
  $23 = ($$087|0)<(20);
  $24 = $23 ? $$087 : 20;
  $25 = $24 << 1;
  $26 = (((19984 + (($7*84)|0)|0) + (($4*42)|0)|0) + ($25)|0);
  $27 = $25 | 1;
  $28 = (((19984 + (($7*84)|0)|0) + (($4*42)|0)|0) + ($27)|0);
  $$080 = 0;
  while(1) {
   $$idx$val = HEAP32[$$idx>>2]|0;
   $$idx84$val = HEAP32[$$idx84>>2]|0;
   $29 = (Math_clz32(($$idx84$val|0))|0);
   $$neg86 = (($$neg) - ($$idx$val))|0;
   $30 = (($$neg86) - ($29))|0;
   $31 = ($30|0)>(14);
   do {
    if ($31) {
     $32 = HEAP8[$26>>0]|0;
     $33 = $32&255;
     $34 = $33 << 7;
     $35 = HEAP8[$28>>0]|0;
     $36 = $35&255;
     $37 = $36 << 6;
     $38 = (_ec_laplace_decode($5,$34,$37)|0);
     $$082 = $38;
    } else {
     $39 = ($30|0)>(1);
     if ($39) {
      $40 = (_ec_dec_icdf($5,37767,2)|0);
      $41 = $40 >> 1;
      $42 = $40 & 1;
      $43 = (0 - ($42))|0;
      $44 = $41 ^ $43;
      $$082 = $44;
      break;
     }
     $45 = ($30|0)==(1);
     if ($45) {
      $46 = (_ec_dec_bit_logp($5,1)|0);
      $47 = (0 - ($46))|0;
      $$082 = $47;
     } else {
      $$082 = -1;
     }
    }
   } while(0);
   $48 = (Math_fround(($$082|0)));
   $49 = HEAP32[$22>>2]|0;
   $50 = Math_imul($49, $$080)|0;
   $51 = (($50) + ($$087))|0;
   $52 = (($3) + ($51<<2)|0);
   $53 = Math_fround(HEAPF32[$52>>2]);
   $54 = $53 < Math_fround(-9.0);
   $55 = $54 ? Math_fround(-9.0) : $53;
   $56 = Math_fround($$081 * $55);
   $57 = (($8) + ($$080<<2)|0);
   $58 = Math_fround(HEAPF32[$57>>2]);
   $59 = Math_fround($58 + $56);
   $60 = Math_fround($59 + $48);
   HEAPF32[$52>>2] = $60;
   $61 = Math_fround($58 + $48);
   $62 = Math_fround($$083 * $48);
   $63 = Math_fround($61 - $62);
   HEAPF32[$57>>2] = $63;
   $64 = (($$080) + 1)|0;
   $65 = ($64|0)<($6|0);
   if ($65) {
    $$080 = $64;
   } else {
    break;
   }
  }
  $66 = (($$087) + 1)|0;
  $exitcond = ($66|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $$087 = $66;
  }
 }
 STACKTOP = sp;return;
}
function _unquant_fine_energy($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$025 = 0, $$026 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = Math_fround(0), $15 = Math_fround(0), $16 = 0, $17 = 0, $18 = 0, $19 = Math_fround(0), $20 = Math_fround(0), $21 = Math_fround(0), $22 = Math_fround(0), $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = Math_fround(0);
 var $28 = Math_fround(0), $29 = 0, $30 = 0, $31 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = ($1|0)<($2|0);
 if (!($7)) {
  return;
 }
 $8 = ((($0)) + 8|0);
 $$026 = $1;
 while(1) {
  $9 = (($4) + ($$026<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)<(1);
  if (!($11)) {
   $$025 = 0;$12 = $10;
   while(1) {
    $13 = (_ec_dec_bits($5,$12)|0);
    $14 = (Math_fround(($13|0)));
    $15 = Math_fround($14 + Math_fround(0.5));
    $16 = HEAP32[$9>>2]|0;
    $17 = (14 - ($16))|0;
    $18 = 1 << $17;
    $19 = (Math_fround(($18|0)));
    $20 = Math_fround($15 * $19);
    $21 = Math_fround($20 * Math_fround(6.10351563E-5));
    $22 = Math_fround($21 + Math_fround(-0.5));
    $23 = HEAP32[$8>>2]|0;
    $24 = Math_imul($23, $$025)|0;
    $25 = (($24) + ($$026))|0;
    $26 = (($3) + ($25<<2)|0);
    $27 = Math_fround(HEAPF32[$26>>2]);
    $28 = Math_fround($27 + $22);
    HEAPF32[$26>>2] = $28;
    $29 = (($$025) + 1)|0;
    $30 = ($29|0)<($6|0);
    if ($30) {
     $$025 = $29;$12 = $16;
    } else {
     break;
    }
   }
  }
  $31 = (($$026) + 1)|0;
  $exitcond = ($31|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $$026 = $31;
  }
 }
 return;
}
function _unquant_energy_finalise($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$03337 = 0, $$03337$1 = 0, $$034 = 0, $$034$1 = 0, $$1$lcssa = 0, $$139 = 0, $$139$1 = 0, $$2 = 0, $$2$1 = 0, $$3 = 0, $$3$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = Math_fround(0), $20 = Math_fround(0), $21 = 0, $22 = 0, $23 = 0, $24 = Math_fround(0), $25 = Math_fround(0), $26 = Math_fround(0), $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = Math_fround(0), $32 = Math_fround(0), $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = Math_fround(0), $49 = 0, $50 = 0, $51 = 0, $52 = Math_fround(0), $53 = Math_fround(0), $54 = Math_fround(0), $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = Math_fround(0), $60 = Math_fround(0), $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $9 = 0, $or$cond = 0, $or$cond$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $9 = ($1|0)<($2|0);
 $10 = ((($0)) + 8|0);
 if (!($9)) {
  return;
 }
 $11 = ($6|0)<($8|0);
 if ($11) {
  $$1$lcssa = $6;
 } else {
  $$03337 = $1;$$139 = $6;
  while(1) {
   $12 = (($4) + ($$03337<<2)|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($13|0)>(7);
   if ($14) {
    $$3 = $$139;
   } else {
    $15 = (($5) + ($$03337<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($16|0)==(0);
    if ($17) {
     $$034 = 0;$$2 = $$139;
     while(1) {
      $18 = (_ec_dec_bits($7,1)|0);
      $19 = (Math_fround(($18|0)));
      $20 = Math_fround($19 + Math_fround(-0.5));
      $21 = HEAP32[$12>>2]|0;
      $22 = (13 - ($21))|0;
      $23 = 1 << $22;
      $24 = (Math_fround(($23|0)));
      $25 = Math_fround($20 * $24);
      $26 = Math_fround($25 * Math_fround(6.10351563E-5));
      $27 = HEAP32[$10>>2]|0;
      $28 = Math_imul($27, $$034)|0;
      $29 = (($28) + ($$03337))|0;
      $30 = (($3) + ($29<<2)|0);
      $31 = Math_fround(HEAPF32[$30>>2]);
      $32 = Math_fround($31 + $26);
      HEAPF32[$30>>2] = $32;
      $33 = (($$2) + -1)|0;
      $34 = (($$034) + 1)|0;
      $35 = ($34|0)<($8|0);
      if ($35) {
       $$034 = $34;$$2 = $33;
      } else {
       $$3 = $33;
       break;
      }
     }
    } else {
     $$3 = $$139;
    }
   }
   $36 = (($$03337) + 1)|0;
   $37 = ($36|0)>=($2|0);
   $38 = ($$3|0)<($8|0);
   $or$cond = $37 | $38;
   if ($or$cond) {
    $$1$lcssa = $$3;
    break;
   } else {
    $$03337 = $36;$$139 = $$3;
   }
  }
 }
 $39 = ($$1$lcssa|0)<($8|0);
 if ($39) {
  return;
 }
 $$03337$1 = $1;$$139$1 = $$1$lcssa;
 while(1) {
  $40 = (($4) + ($$03337$1<<2)|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ($41|0)>(7);
  if ($42) {
   $$3$1 = $$139$1;
  } else {
   $43 = (($5) + ($$03337$1<<2)|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = ($44|0)==(1);
   if ($45) {
    $$034$1 = 0;$$2$1 = $$139$1;
    while(1) {
     $46 = (_ec_dec_bits($7,1)|0);
     $47 = (Math_fround(($46|0)));
     $48 = Math_fround($47 + Math_fround(-0.5));
     $49 = HEAP32[$40>>2]|0;
     $50 = (13 - ($49))|0;
     $51 = 1 << $50;
     $52 = (Math_fround(($51|0)));
     $53 = Math_fround($48 * $52);
     $54 = Math_fround($53 * Math_fround(6.10351563E-5));
     $55 = HEAP32[$10>>2]|0;
     $56 = Math_imul($55, $$034$1)|0;
     $57 = (($56) + ($$03337$1))|0;
     $58 = (($3) + ($57<<2)|0);
     $59 = Math_fround(HEAPF32[$58>>2]);
     $60 = Math_fround($59 + $54);
     HEAPF32[$58>>2] = $60;
     $61 = (($$2$1) + -1)|0;
     $62 = (($$034$1) + 1)|0;
     $63 = ($62|0)<($8|0);
     if ($63) {
      $$034$1 = $62;$$2$1 = $61;
     } else {
      $$3$1 = $61;
      break;
     }
    }
   } else {
    $$3$1 = $$139$1;
   }
  }
  $64 = (($$03337$1) + 1)|0;
  $65 = ($64|0)>=($2|0);
  $66 = ($$3$1|0)<($8|0);
  $or$cond$1 = $65 | $66;
  if ($or$cond$1) {
   break;
  } else {
   $$03337$1 = $64;$$139$1 = $$3$1;
  }
 }
 return;
}
function _amp2Log2($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$024$us = 0, $$024$us30 = 0, $$025$us = 0, $$126$us = 0, $$126$us31 = 0, $$pre = 0, $$pre41 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = Math_fround(0), $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = Math_fround(0), $22 = 0;
 var $23 = Math_fround(0), $24 = Math_fround(0), $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond39 = 0, $exitcond40 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ($1|0)>(0);
 $7 = ($1|0)<($2|0);
 $8 = ((($0)) + 8|0);
 if (!($6)) {
  if (!($7)) {
   return;
  }
  $$pre = HEAP32[$8>>2]|0;
  $$024$us30 = 0;
  while(1) {
   $27 = Math_imul($$pre, $$024$us30)|0;
   $$126$us31 = $1;
   while(1) {
    $28 = (($27) + ($$126$us31))|0;
    $29 = (($4) + ($28<<2)|0);
    HEAPF32[$29>>2] = Math_fround(-14.0);
    $30 = (($$126$us31) + 1)|0;
    $exitcond40 = ($30|0)==($2|0);
    if ($exitcond40) {
     break;
    } else {
     $$126$us31 = $30;
    }
   }
   $31 = (($$024$us30) + 1)|0;
   $32 = ($31|0)<($5|0);
   if ($32) {
    $$024$us30 = $31;
   } else {
    break;
   }
  }
  return;
 }
 $$pre41 = HEAP32[$8>>2]|0;
 $$024$us = 0;
 while(1) {
  $9 = Math_imul($$pre41, $$024$us)|0;
  $$025$us = 0;
  while(1) {
   $15 = (($9) + ($$025$us))|0;
   $16 = (($3) + ($15<<2)|0);
   $17 = Math_fround(HEAPF32[$16>>2]);
   $18 = +$17;
   $19 = (+_log($18));
   $20 = $19 * 1.4426950408889634;
   $21 = Math_fround($20);
   $22 = (19872 + ($$025$us<<2)|0);
   $23 = Math_fround(HEAPF32[$22>>2]);
   $24 = Math_fround($21 - $23);
   $25 = (($4) + ($15<<2)|0);
   HEAPF32[$25>>2] = $24;
   $26 = (($$025$us) + 1)|0;
   $exitcond = ($26|0)==($1|0);
   if ($exitcond) {
    break;
   } else {
    $$025$us = $26;
   }
  }
  if ($7) {
   $$126$us = $1;
   while(1) {
    $12 = (($9) + ($$126$us))|0;
    $13 = (($4) + ($12<<2)|0);
    HEAPF32[$13>>2] = Math_fround(-14.0);
    $14 = (($$126$us) + 1)|0;
    $exitcond39 = ($14|0)==($2|0);
    if ($exitcond39) {
     break;
    } else {
     $$126$us = $14;
    }
   }
  }
  $10 = (($$024$us) + 1)|0;
  $11 = ($10|0)<($5|0);
  if ($11) {
   $$024$us = $10;
  } else {
   break;
  }
 }
 return;
}
function _compute_allocation($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 $13 = $13|0;
 $14 = $14|0;
 $15 = $15|0;
 $16 = $16|0;
 $17 = $17|0;
 $18 = $18|0;
 var $$ = 0, $$$0435$us$1$i = 0, $$$0435$us$2$i = 0, $$$0435$us$3$i = 0, $$$0435$us$4$i = 0, $$$0435$us$i = 0, $$$0447$i = 0, $$$pn$us$1$i = 0, $$$pn$us$2$i = 0, $$$pn$us$3$i = 0, $$$pn$us$4$i = 0, $$$pn$us$5$i = 0, $$$pn$us$i = 0, $$$us$1$i = 0, $$$us$2$i = 0, $$$us$3$i = 0, $$$us$4$i = 0, $$$us$5$i = 0, $$$us$i = 0, $$0 = 0;
 var $$0211 = 0, $$0211$us = 0, $$0212 = 0, $$0212$us = 0, $$0213 = 0, $$0213$us = 0, $$0215$us = 0, $$0216 = 0, $$0216$us = 0, $$0218254$us = 0, $$0220253$us = 0, $$0222259 = 0, $$0224 = 0, $$0225 = 0, $$0226$lcssa = 0, $$0226$lcssa302 = 0, $$0226250 = 0, $$0226250$us = 0, $$0422$lcssa$i = 0, $$0422478$i = 0;
 var $$0422503$i = 0, $$0422503$us$i = 0, $$0426$i = 0, $$0428517$us$1$i = 0, $$0428517$us$2$i = 0, $$0428517$us$3$i = 0, $$0428517$us$4$i = 0, $$0428517$us$5$i = 0, $$0428517$us$i = 0, $$0433$$us$1$i = 0, $$0433$$us$2$i = 0, $$0433$$us$3$i = 0, $$0433$$us$4$i = 0, $$0433$$us$5$i = 0, $$0433$$us$i = 0, $$0444$i = 0, $$0447$lcssa$i = 0, $$0447484$i = 0, $$0447501$i = 0, $$0447501$i$phi = 0;
 var $$0447501$us$i = 0, $$0447501$us$i$phi = 0, $$0448$i = 0, $$0448$us$i = 0, $$0449$$i = 0, $$0449492$i = 0, $$0450$$i = 0, $$0450$i = 0, $$0451516$us$1$i = 0, $$0451516$us$2$i = 0, $$0451516$us$3$i = 0, $$0451516$us$4$i = 0, $$0451516$us$5$i = 0, $$0451516$us$i = 0, $$0455$lcssa$i = 0, $$0455486$i = 0, $$1 = 0, $$1$ph$i = 0, $$1$us = 0, $$1214 = 0;
 var $$1214$lcssa = 0, $$1214$us = 0, $$1217 = 0, $$1217$us = 0, $$1219$us = 0, $$1221$us = 0, $$1423$i = 0, $$1423$us$i = 0, $$1427$i = 0, $$1429$us$1$i = 0, $$1429$us$2$i = 0, $$1429$us$3$i = 0, $$1429$us$4$i = 0, $$1429$us$5$i = 0, $$1429$us$i = 0, $$1432$i = 0, $$1452$us$1$i = 0, $$1452$us$2$i = 0, $$1452$us$3$i = 0, $$1452$us$4$i = 0;
 var $$1452$us$5$i = 0, $$1452$us$i = 0, $$2251 = 0, $$2251$us = 0, $$228$pn$us = 0, $$228$us = 0, $$2430$lcssa$i = 0, $$2430511$i = 0, $$2440497$i = 0, $$2453510$i = 0, $$3$lcssa$i = 0, $$3441493$i = 0, $$3454$i = 0, $$3481$i = 0, $$3502$i = 0, $$3502$us$i = 0, $$4$i = 0, $$4$us$i = 0, $$4442$lcssa$i = 0, $$4442487$i = 0;
 var $$456$i = 0, $$465$i = 0, $$5$i = 0, $$5$us$i = 0, $$5443485$i = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul3 = 0, $$alloca_mul5 = 0, $$in = 0, $$in$i = 0, $$in526$1$i = 0, $$in526$2$i = 0, $$in526$3$i = 0, $$in526$4$i = 0, $$in526$5$i = 0, $$in526$i = 0, $$phi$trans$insert = 0, $$phi$trans$insert280$phi$trans$insert = 0, $$phi$trans$insert287 = 0;
 var $$pn$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi295300Z2D = 0, $$pre$phi295301Z2D = 0, $$pre$phi297298Z2D = 0, $$pre$phi297299Z2D = 0, $$pre278 = 0, $$pre279 = 0, $$pre281$pre = 0, $$pre288 = 0, $$pre294 = 0, $$pre296 = 0, $$pre547$i = 0, $$pre548$i = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0;
 var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0;
 var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0;
 var $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0;
 var $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0;
 var $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0;
 var $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0;
 var $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0;
 var $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond276 = 0, $exitcond277 = 0, $exitcond541$i = 0, $exitcond542$i = 0, $exitcond543$i = 0, $or$cond$us = 0, $or$cond$us$1$i = 0, $or$cond$us$2$i = 0, $or$cond$us$3$i = 0, $or$cond$us$4$i = 0, $or$cond$us$5$i = 0, $or$cond$us$i = 0, $or$cond3$i = 0;
 var $or$cond458$i = 0, $or$cond5$i = 0, $spec$select$us = 0, $spec$select230 = 0, $spec$select230$us = 0, $spec$select231 = 0, $spec$select231$us = 0, $spec$select232 = 0, $spec$select232$us = 0, $spec$select233 = 0, $spec$select234 = 0, $spec$select235 = 0, $spec$select236 = 0, $spec$select237 = 0, $spec$select457$i = 0, $spec$select457$us$i = 0, $spec$select460$i = 0, $spec$select461$i = 0, $spec$select462$i = 0, $spec$select463$i = 0;
 var $spec$select464$i = 0, $spec$select472$i = 0, $storemerge$i = 0, $storemerge$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $19 = ($8|0)>(0);
 $20 = $19 ? $8 : 0;
 $21 = ((($0)) + 8|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($20|0)>(7);
 $24 = $23 ? 8 : 0;
 $25 = (($20) - ($24))|0;
 $26 = ($13|0)==(2);
 if ($26) {
  $27 = (($2) - ($1))|0;
  $28 = (20352 + ($27)|0);
  $29 = HEAP8[$28>>0]|0;
  $30 = $29&255;
  $31 = ($25|0)<($30|0);
  $32 = (($25) - ($30))|0;
  $33 = ($32|0)>(7);
  $34 = $33 ? 8 : 0;
  $35 = (($32) - ($34))|0;
  $spec$select233 = $31 ? 0 : $30;
  $spec$select234 = $31 ? 0 : $34;
  $spec$select235 = $31 ? $25 : $35;
  $$0 = $spec$select235;$$0224 = $spec$select234;$$0225 = $spec$select233;
 } else {
  $$0 = $25;$$0224 = 0;$$0225 = 0;
 }
 $$alloca_mul = $22<<2;
 $36 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $$alloca_mul1 = $22<<2;
 $37 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $$alloca_mul3 = $22<<2;
 $38 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;
 $$alloca_mul5 = $22<<2;
 $39 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul5)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul5)|0)+15)&-16)|0);;
 $40 = ($2|0)>($1|0);
 if ($40) {
  $45 = $13 << 3;
  $46 = ((($0)) + 32|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = (($5) + -5)|0;
  $49 = (($48) - ($14))|0;
  $50 = (($2) + -1)|0;
  $51 = Math_imul($49, $13)|0;
  $52 = (($14) + 3)|0;
  $$phi$trans$insert = (($47) + ($1<<1)|0);
  $$pre = HEAP16[$$phi$trans$insert>>1]|0;
  $$0222259 = $1;$58 = $$pre;
  while(1) {
   $53 = (($$0222259) + 1)|0;
   $54 = (($47) + ($53<<1)|0);
   $55 = HEAP16[$54>>1]|0;
   $56 = $55 << 16 >> 16;
   $57 = $58 << 16 >> 16;
   $59 = (($56) - ($57))|0;
   $60 = ($59*3)|0;
   $61 = $60 << $14;
   $62 = $61 << 3;
   $63 = $62 >> 4;
   $64 = ($45|0)>($63|0);
   $$ = $64 ? $45 : $63;
   $65 = (($38) + ($$0222259<<2)|0);
   HEAP32[$65>>2] = $$;
   $66 = (($50) - ($$0222259))|0;
   $67 = Math_imul($51, $66)|0;
   $68 = Math_imul($67, $59)|0;
   $69 = $68 << $52;
   $70 = $69 >> 6;
   $71 = (($39) + ($$0222259<<2)|0);
   $72 = $59 << $14;
   $73 = ($72|0)==(1);
   $74 = $73 ? $45 : 0;
   $spec$select237 = (($70) - ($74))|0;
   HEAP32[$71>>2] = $spec$select237;
   $exitcond277 = ($53|0)==($2|0);
   if ($exitcond277) {
    break;
   } else {
    $$0222259 = $53;$58 = $55;
   }
  }
  $75 = ((($0)) + 48|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = (($76) + -1)|0;
  $78 = ((($0)) + 52|0);
  if ($40) {
   $$pre278 = HEAP32[$46>>2]|0;
   $$pre279 = HEAP32[$78>>2]|0;
   $$phi$trans$insert280$phi$trans$insert = (($$pre278) + ($2<<1)|0);
   $$pre281$pre = HEAP16[$$phi$trans$insert280$phi$trans$insert>>1]|0;
   $$0213$us = 1;$$0216$us = $77;
   while(1) {
    $79 = (($$0213$us) + ($$0216$us))|0;
    $80 = $79 >> 1;
    $81 = Math_imul($80, $22)|0;
    $$0218254$us = 0;$$0220253$us = 0;$$in = $2;$84 = $$pre281$pre;
    while(1) {
     $82 = (($$in) + -1)|0;
     $83 = $84 << 16 >> 16;
     $85 = (($$pre278) + ($82<<1)|0);
     $86 = HEAP16[$85>>1]|0;
     $87 = $86 << 16 >> 16;
     $88 = (($83) - ($87))|0;
     $89 = Math_imul($88, $13)|0;
     $90 = (($82) + ($81))|0;
     $91 = (($$pre279) + ($90)|0);
     $92 = HEAP8[$91>>0]|0;
     $93 = $92&255;
     $94 = Math_imul($89, $93)|0;
     $95 = $94 << $14;
     $96 = $95 >> 2;
     $97 = ($95|0)>(3);
     if ($97) {
      $98 = (($39) + ($82<<2)|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = (($99) + ($96))|0;
      $101 = ($100|0)>(0);
      $spec$select$us = $101 ? $100 : 0;
      $$0215$us = $spec$select$us;
     } else {
      $$0215$us = $96;
     }
     $102 = (($3) + ($82<<2)|0);
     $103 = HEAP32[$102>>2]|0;
     $104 = (($103) + ($$0215$us))|0;
     $105 = (($38) + ($82<<2)|0);
     $106 = HEAP32[$105>>2]|0;
     $107 = ($104|0)>=($106|0);
     $108 = ($$0220253$us|0)!=(0);
     $or$cond$us = $108 | $107;
     if ($or$cond$us) {
      $111 = (($4) + ($82<<2)|0);
      $112 = HEAP32[$111>>2]|0;
      $113 = ($104|0)<($112|0);
      $$228$us = $113 ? $104 : $112;
      $$1221$us = 1;$$228$pn$us = $$228$us;
     } else {
      $109 = ($104|0)<($45|0);
      $110 = $109 ? 0 : $45;
      $$1221$us = 0;$$228$pn$us = $110;
     }
     $$1219$us = (($$228$pn$us) + ($$0218254$us))|0;
     $114 = ($82|0)>($1|0);
     if ($114) {
      $$0218254$us = $$1219$us;$$0220253$us = $$1221$us;$$in = $82;$84 = $86;
     } else {
      break;
     }
    }
    $115 = ($$1219$us|0)>($$0|0);
    $116 = (($80) + -1)|0;
    $117 = (($80) + 1)|0;
    $$1217$us = $115 ? $116 : $$0216$us;
    $$1214$us = $115 ? $$0213$us : $117;
    $118 = ($$1214$us|0)>($$1217$us|0);
    if ($118) {
     $$1214$lcssa = $$1214$us;$$pre$phi295300Z2D = $46;$$pre$phi297298Z2D = $45;$131 = $78;$134 = $76;
     break;
    } else {
     $$0213$us = $$1214$us;$$0216$us = $$1217$us;
    }
   }
  } else {
   $$pre$phi295301Z2D = $46;$$pre$phi297299Z2D = $45;$626 = $78;$627 = $77;$628 = $76;
   label = 17;
  }
 } else {
  $$pre294 = ((($0)) + 32|0);
  $$pre296 = $13 << 3;
  $41 = ((($0)) + 48|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (($42) + -1)|0;
  $44 = ((($0)) + 52|0);
  $$pre$phi295301Z2D = $$pre294;$$pre$phi297299Z2D = $$pre296;$626 = $44;$627 = $43;$628 = $42;
  label = 17;
 }
 if ((label|0) == 17) {
  $119 = ($$0|0)<(0);
  $$0213 = 1;$$0216 = $627;
  while(1) {
   $120 = (($$0213) + ($$0216))|0;
   $121 = $120 >> 1;
   $122 = (($121) + -1)|0;
   $123 = (($121) + 1)|0;
   $$1217 = $119 ? $122 : $$0216;
   $$1214 = $119 ? $$0213 : $123;
   $124 = ($$1214|0)>($$1217|0);
   if ($124) {
    $$1214$lcssa = $$1214;$$pre$phi295300Z2D = $$pre$phi295301Z2D;$$pre$phi297298Z2D = $$pre$phi297299Z2D;$131 = $626;$134 = $628;
    break;
   } else {
    $$0213 = $$1214;$$0216 = $$1217;
   }
  }
 }
 if ($40) {
  $128 = (($$1214$lcssa) + -1)|0;
  $129 = HEAP32[$$pre$phi295300Z2D>>2]|0;
  $130 = HEAP32[$131>>2]|0;
  $132 = Math_imul($128, $22)|0;
  $133 = ($$1214$lcssa|0)<($134|0);
  $135 = Math_imul($$1214$lcssa, $22)|0;
  $136 = ($$1214$lcssa|0)>(1);
  $$phi$trans$insert287 = (($129) + ($1<<1)|0);
  $$pre288 = HEAP16[$$phi$trans$insert287>>1]|0;
  if ($133) {
   $$0226250$us = $1;$$2251$us = $1;$142 = $$pre288;
   while(1) {
    $137 = (($$2251$us) + 1)|0;
    $138 = (($129) + ($137<<1)|0);
    $139 = HEAP16[$138>>1]|0;
    $140 = $139 << 16 >> 16;
    $141 = $142 << 16 >> 16;
    $143 = (($140) - ($141))|0;
    $144 = Math_imul($143, $13)|0;
    $145 = (($$2251$us) + ($132))|0;
    $146 = (($130) + ($145)|0);
    $147 = HEAP8[$146>>0]|0;
    $148 = $147&255;
    $149 = Math_imul($144, $148)|0;
    $150 = $149 << $14;
    $151 = $150 >> 2;
    $152 = (($$2251$us) + ($135))|0;
    $153 = (($130) + ($152)|0);
    $154 = HEAP8[$153>>0]|0;
    $155 = $154&255;
    $156 = Math_imul($144, $155)|0;
    $157 = $156 << $14;
    $158 = $157 >> 2;
    $159 = ($150|0)>(3);
    if ($159) {
     $160 = (($39) + ($$2251$us<<2)|0);
     $161 = HEAP32[$160>>2]|0;
     $162 = (($161) + ($151))|0;
     $163 = ($162|0)>(0);
     $spec$select230$us = $163 ? $162 : 0;
     $$0212$us = $spec$select230$us;
    } else {
     $$0212$us = $151;
    }
    $164 = ($157|0)>(3);
    if ($164) {
     $165 = (($39) + ($$2251$us<<2)|0);
     $166 = HEAP32[$165>>2]|0;
     $167 = (($166) + ($158))|0;
     $168 = ($167|0)>(0);
     $spec$select231$us = $168 ? $167 : 0;
     $$0211$us = $spec$select231$us;
    } else {
     $$0211$us = $158;
    }
    $169 = (($3) + ($$2251$us<<2)|0);
    $170 = HEAP32[$169>>2]|0;
    $171 = $136 ? $170 : 0;
    $$1$us = (($$0212$us) + ($171))|0;
    $172 = ($170|0)>(0);
    $spec$select232$us = $172 ? $$2251$us : $$0226250$us;
    $173 = (($$0211$us) - ($$1$us))|0;
    $174 = (($173) + ($170))|0;
    $175 = ($174|0)>(0);
    $176 = $175 ? $174 : 0;
    $177 = (($36) + ($$2251$us<<2)|0);
    HEAP32[$177>>2] = $$1$us;
    $178 = (($37) + ($$2251$us<<2)|0);
    HEAP32[$178>>2] = $176;
    $exitcond = ($137|0)==($2|0);
    if ($exitcond) {
     $$0226$lcssa = $spec$select232$us;
     break;
    } else {
     $$0226250$us = $spec$select232$us;$$2251$us = $137;$142 = $139;
    }
   }
  } else {
   $$0226250 = $1;$$2251 = $1;$184 = $$pre288;
   while(1) {
    $179 = (($$2251) + 1)|0;
    $180 = (($129) + ($179<<1)|0);
    $181 = HEAP16[$180>>1]|0;
    $182 = $181 << 16 >> 16;
    $183 = $184 << 16 >> 16;
    $185 = (($182) - ($183))|0;
    $186 = Math_imul($185, $13)|0;
    $187 = (($$2251) + ($132))|0;
    $188 = (($130) + ($187)|0);
    $189 = HEAP8[$188>>0]|0;
    $190 = $189&255;
    $191 = Math_imul($186, $190)|0;
    $192 = $191 << $14;
    $193 = $192 >> 2;
    $194 = (($4) + ($$2251<<2)|0);
    $195 = HEAP32[$194>>2]|0;
    $196 = ($192|0)>(3);
    if ($196) {
     $197 = (($39) + ($$2251<<2)|0);
     $198 = HEAP32[$197>>2]|0;
     $199 = (($198) + ($193))|0;
     $200 = ($199|0)>(0);
     $spec$select230 = $200 ? $199 : 0;
     $$0212 = $spec$select230;
    } else {
     $$0212 = $193;
    }
    $201 = ($195|0)>(0);
    if ($201) {
     $202 = (($39) + ($$2251<<2)|0);
     $203 = HEAP32[$202>>2]|0;
     $204 = (($203) + ($195))|0;
     $205 = ($204|0)>(0);
     $spec$select231 = $205 ? $204 : 0;
     $$0211 = $spec$select231;
    } else {
     $$0211 = $195;
    }
    $206 = (($3) + ($$2251<<2)|0);
    $207 = HEAP32[$206>>2]|0;
    $208 = $136 ? $207 : 0;
    $$1 = (($$0212) + ($208))|0;
    $209 = ($207|0)>(0);
    $spec$select232 = $209 ? $$2251 : $$0226250;
    $210 = (($$0211) - ($$1))|0;
    $211 = (($210) + ($207))|0;
    $212 = ($211|0)>(0);
    $213 = $212 ? $211 : 0;
    $214 = (($36) + ($$2251<<2)|0);
    HEAP32[$214>>2] = $$1;
    $215 = (($37) + ($$2251<<2)|0);
    HEAP32[$215>>2] = $213;
    $exitcond276 = ($179|0)==($2|0);
    if ($exitcond276) {
     $$0226$lcssa = $spec$select232;
     break;
    } else {
     $$0226250 = $spec$select232;$$2251 = $179;$184 = $181;
    }
   }
  }
  $216 = ($13|0)>(1);
  $217 = $216&1;
  $218 = $14 << 3;
  if ($40) {
   $$0428517$us$i = 0;$$0451516$us$i = 0;$$in526$i = $2;
   while(1) {
    $219 = (($$in526$i) + -1)|0;
    $220 = (($36) + ($219<<2)|0);
    $221 = HEAP32[$220>>2]|0;
    $222 = (($37) + ($219<<2)|0);
    $223 = HEAP32[$222>>2]|0;
    $224 = $223 >> 1;
    $225 = (($224) + ($221))|0;
    $226 = (($38) + ($219<<2)|0);
    $227 = HEAP32[$226>>2]|0;
    $228 = ($225|0)>=($227|0);
    $229 = ($$0451516$us$i|0)!=(0);
    $or$cond$us$i = $229 | $228;
    if ($or$cond$us$i) {
     $232 = (($4) + ($219<<2)|0);
     $233 = HEAP32[$232>>2]|0;
     $234 = ($225|0)<($233|0);
     $$$us$i = $234 ? $225 : $233;
     $$$pn$us$i = $$$us$i;$$1452$us$i = 1;
    } else {
     $230 = ($225|0)<($$pre$phi297298Z2D|0);
     $231 = $230 ? 0 : $$pre$phi297298Z2D;
     $$$pn$us$i = $231;$$1452$us$i = 0;
    }
    $$1429$us$i = (($$$pn$us$i) + ($$0428517$us$i))|0;
    $235 = ($219|0)>($1|0);
    if ($235) {
     $$0428517$us$i = $$1429$us$i;$$0451516$us$i = $$1452$us$i;$$in526$i = $219;
    } else {
     break;
    }
   }
   $236 = ($$1429$us$i|0)>($$0|0);
   $$$0435$us$i = $236 ? 32 : 64;
   $237 = $236 ? 16 : 48;
   $$0428517$us$1$i = 0;$$0451516$us$1$i = 0;$$in526$1$i = $2;
   while(1) {
    $525 = (($$in526$1$i) + -1)|0;
    $526 = (($36) + ($525<<2)|0);
    $527 = HEAP32[$526>>2]|0;
    $528 = (($37) + ($525<<2)|0);
    $529 = HEAP32[$528>>2]|0;
    $530 = Math_imul($529, $237)|0;
    $531 = $530 >> 6;
    $532 = (($531) + ($527))|0;
    $533 = (($38) + ($525<<2)|0);
    $534 = HEAP32[$533>>2]|0;
    $535 = ($532|0)>=($534|0);
    $536 = ($$0451516$us$1$i|0)!=(0);
    $or$cond$us$1$i = $536 | $535;
    if ($or$cond$us$1$i) {
     $539 = (($4) + ($525<<2)|0);
     $540 = HEAP32[$539>>2]|0;
     $541 = ($532|0)<($540|0);
     $$$us$1$i = $541 ? $532 : $540;
     $$$pn$us$1$i = $$$us$1$i;$$1452$us$1$i = 1;
    } else {
     $537 = ($532|0)<($$pre$phi297298Z2D|0);
     $538 = $537 ? 0 : $$pre$phi297298Z2D;
     $$$pn$us$1$i = $538;$$1452$us$1$i = 0;
    }
    $$1429$us$1$i = (($$$pn$us$1$i) + ($$0428517$us$1$i))|0;
    $542 = ($525|0)>($1|0);
    if ($542) {
     $$0428517$us$1$i = $$1429$us$1$i;$$0451516$us$1$i = $$1452$us$1$i;$$in526$1$i = $525;
    } else {
     break;
    }
   }
   $$0433$$us$i = $236 ? 0 : 32;
   $543 = ($$1429$us$1$i|0)>($$0|0);
   $$$0435$us$1$i = $543 ? $237 : $$$0435$us$i;
   $$0433$$us$1$i = $543 ? $$0433$$us$i : $237;
   $544 = (($$0433$$us$1$i) + ($$$0435$us$1$i))|0;
   $545 = $544 >>> 1;
   $$0428517$us$2$i = 0;$$0451516$us$2$i = 0;$$in526$2$i = $2;
   while(1) {
    $546 = (($$in526$2$i) + -1)|0;
    $547 = (($36) + ($546<<2)|0);
    $548 = HEAP32[$547>>2]|0;
    $549 = (($37) + ($546<<2)|0);
    $550 = HEAP32[$549>>2]|0;
    $551 = Math_imul($550, $545)|0;
    $552 = $551 >> 6;
    $553 = (($552) + ($548))|0;
    $554 = (($38) + ($546<<2)|0);
    $555 = HEAP32[$554>>2]|0;
    $556 = ($553|0)>=($555|0);
    $557 = ($$0451516$us$2$i|0)!=(0);
    $or$cond$us$2$i = $557 | $556;
    if ($or$cond$us$2$i) {
     $560 = (($4) + ($546<<2)|0);
     $561 = HEAP32[$560>>2]|0;
     $562 = ($553|0)<($561|0);
     $$$us$2$i = $562 ? $553 : $561;
     $$$pn$us$2$i = $$$us$2$i;$$1452$us$2$i = 1;
    } else {
     $558 = ($553|0)<($$pre$phi297298Z2D|0);
     $559 = $558 ? 0 : $$pre$phi297298Z2D;
     $$$pn$us$2$i = $559;$$1452$us$2$i = 0;
    }
    $$1429$us$2$i = (($$$pn$us$2$i) + ($$0428517$us$2$i))|0;
    $563 = ($546|0)>($1|0);
    if ($563) {
     $$0428517$us$2$i = $$1429$us$2$i;$$0451516$us$2$i = $$1452$us$2$i;$$in526$2$i = $546;
    } else {
     break;
    }
   }
   $564 = ($$1429$us$2$i|0)>($$0|0);
   $$$0435$us$2$i = $564 ? $545 : $$$0435$us$1$i;
   $$0433$$us$2$i = $564 ? $$0433$$us$1$i : $545;
   $565 = (($$0433$$us$2$i) + ($$$0435$us$2$i))|0;
   $566 = $565 >>> 1;
   $$0428517$us$3$i = 0;$$0451516$us$3$i = 0;$$in526$3$i = $2;
   while(1) {
    $567 = (($$in526$3$i) + -1)|0;
    $568 = (($36) + ($567<<2)|0);
    $569 = HEAP32[$568>>2]|0;
    $570 = (($37) + ($567<<2)|0);
    $571 = HEAP32[$570>>2]|0;
    $572 = Math_imul($571, $566)|0;
    $573 = $572 >> 6;
    $574 = (($573) + ($569))|0;
    $575 = (($38) + ($567<<2)|0);
    $576 = HEAP32[$575>>2]|0;
    $577 = ($574|0)>=($576|0);
    $578 = ($$0451516$us$3$i|0)!=(0);
    $or$cond$us$3$i = $578 | $577;
    if ($or$cond$us$3$i) {
     $581 = (($4) + ($567<<2)|0);
     $582 = HEAP32[$581>>2]|0;
     $583 = ($574|0)<($582|0);
     $$$us$3$i = $583 ? $574 : $582;
     $$$pn$us$3$i = $$$us$3$i;$$1452$us$3$i = 1;
    } else {
     $579 = ($574|0)<($$pre$phi297298Z2D|0);
     $580 = $579 ? 0 : $$pre$phi297298Z2D;
     $$$pn$us$3$i = $580;$$1452$us$3$i = 0;
    }
    $$1429$us$3$i = (($$$pn$us$3$i) + ($$0428517$us$3$i))|0;
    $584 = ($567|0)>($1|0);
    if ($584) {
     $$0428517$us$3$i = $$1429$us$3$i;$$0451516$us$3$i = $$1452$us$3$i;$$in526$3$i = $567;
    } else {
     break;
    }
   }
   $585 = ($$1429$us$3$i|0)>($$0|0);
   $$$0435$us$3$i = $585 ? $566 : $$$0435$us$2$i;
   $$0433$$us$3$i = $585 ? $$0433$$us$2$i : $566;
   $586 = (($$0433$$us$3$i) + ($$$0435$us$3$i))|0;
   $587 = $586 >>> 1;
   $$0428517$us$4$i = 0;$$0451516$us$4$i = 0;$$in526$4$i = $2;
   while(1) {
    $588 = (($$in526$4$i) + -1)|0;
    $589 = (($36) + ($588<<2)|0);
    $590 = HEAP32[$589>>2]|0;
    $591 = (($37) + ($588<<2)|0);
    $592 = HEAP32[$591>>2]|0;
    $593 = Math_imul($592, $587)|0;
    $594 = $593 >> 6;
    $595 = (($594) + ($590))|0;
    $596 = (($38) + ($588<<2)|0);
    $597 = HEAP32[$596>>2]|0;
    $598 = ($595|0)>=($597|0);
    $599 = ($$0451516$us$4$i|0)!=(0);
    $or$cond$us$4$i = $599 | $598;
    if ($or$cond$us$4$i) {
     $602 = (($4) + ($588<<2)|0);
     $603 = HEAP32[$602>>2]|0;
     $604 = ($595|0)<($603|0);
     $$$us$4$i = $604 ? $595 : $603;
     $$$pn$us$4$i = $$$us$4$i;$$1452$us$4$i = 1;
    } else {
     $600 = ($595|0)<($$pre$phi297298Z2D|0);
     $601 = $600 ? 0 : $$pre$phi297298Z2D;
     $$$pn$us$4$i = $601;$$1452$us$4$i = 0;
    }
    $$1429$us$4$i = (($$$pn$us$4$i) + ($$0428517$us$4$i))|0;
    $605 = ($588|0)>($1|0);
    if ($605) {
     $$0428517$us$4$i = $$1429$us$4$i;$$0451516$us$4$i = $$1452$us$4$i;$$in526$4$i = $588;
    } else {
     break;
    }
   }
   $606 = ($$1429$us$4$i|0)>($$0|0);
   $$$0435$us$4$i = $606 ? $587 : $$$0435$us$3$i;
   $$0433$$us$4$i = $606 ? $$0433$$us$3$i : $587;
   $607 = (($$0433$$us$4$i) + ($$$0435$us$4$i))|0;
   $239 = $607 >>> 1;
   $$0428517$us$5$i = 0;$$0451516$us$5$i = 0;$$in526$5$i = $2;
   while(1) {
    $608 = (($$in526$5$i) + -1)|0;
    $609 = (($36) + ($608<<2)|0);
    $610 = HEAP32[$609>>2]|0;
    $611 = (($37) + ($608<<2)|0);
    $612 = HEAP32[$611>>2]|0;
    $613 = Math_imul($612, $239)|0;
    $614 = $613 >> 6;
    $615 = (($614) + ($610))|0;
    $616 = (($38) + ($608<<2)|0);
    $617 = HEAP32[$616>>2]|0;
    $618 = ($615|0)>=($617|0);
    $619 = ($$0451516$us$5$i|0)!=(0);
    $or$cond$us$5$i = $619 | $618;
    if ($or$cond$us$5$i) {
     $622 = (($4) + ($608<<2)|0);
     $623 = HEAP32[$622>>2]|0;
     $624 = ($615|0)<($623|0);
     $$$us$5$i = $624 ? $615 : $623;
     $$$pn$us$5$i = $$$us$5$i;$$1452$us$5$i = 1;
    } else {
     $620 = ($615|0)<($$pre$phi297298Z2D|0);
     $621 = $620 ? 0 : $$pre$phi297298Z2D;
     $$$pn$us$5$i = $621;$$1452$us$5$i = 0;
    }
    $$1429$us$5$i = (($$$pn$us$5$i) + ($$0428517$us$5$i))|0;
    $625 = ($608|0)>($1|0);
    if ($625) {
     $$0428517$us$5$i = $$1429$us$5$i;$$0451516$us$5$i = $$1452$us$5$i;$$in526$5$i = $608;
    } else {
     break;
    }
   }
   $238 = ($$1429$us$5$i|0)>($$0|0);
   $$0433$$us$5$i = $238 ? $$0433$$us$4$i : $239;
   $$2430511$i = 0;$$2453510$i = 0;$$in$i = $2;
   while(1) {
    $240 = (($$in$i) + -1)|0;
    $241 = (($36) + ($240<<2)|0);
    $242 = HEAP32[$241>>2]|0;
    $243 = (($37) + ($240<<2)|0);
    $244 = HEAP32[$243>>2]|0;
    $245 = Math_imul($244, $$0433$$us$5$i)|0;
    $246 = $245 >> 6;
    $247 = (($246) + ($242))|0;
    $248 = (($38) + ($240<<2)|0);
    $249 = HEAP32[$248>>2]|0;
    $250 = ($247|0)>=($249|0);
    $251 = ($$2453510$i|0)!=(0);
    $or$cond3$i = $251 | $250;
    $252 = ($247|0)<($$pre$phi297298Z2D|0);
    $$456$i = $252 ? 0 : $$pre$phi297298Z2D;
    $$3454$i = $or$cond3$i ? 1 : $$2453510$i;
    $$0450$i = $or$cond3$i ? $247 : $$456$i;
    $253 = (($4) + ($240<<2)|0);
    $254 = HEAP32[$253>>2]|0;
    $255 = ($$0450$i|0)<($254|0);
    $$0450$$i = $255 ? $$0450$i : $254;
    $256 = (($10) + ($240<<2)|0);
    HEAP32[$256>>2] = $$0450$$i;
    $257 = (($$0450$$i) + ($$2430511$i))|0;
    $258 = ($240|0)>($1|0);
    if ($258) {
     $$2430511$i = $257;$$2453510$i = $$3454$i;$$in$i = $240;
    } else {
     $$0226$lcssa302 = $$0226$lcssa;$$2430$lcssa$i = $257;$422 = $216;$454 = $218;$483 = $217;
     break;
    }
   }
  } else {
   $$0226$lcssa302 = $$0226$lcssa;$$2430$lcssa$i = 0;$422 = $216;$454 = $218;$483 = $217;
  }
 } else {
  $125 = ($13|0)>(1);
  $126 = $125&1;
  $127 = $14 << 3;
  $$0226$lcssa302 = $1;$$2430$lcssa$i = 0;$422 = $125;$454 = $127;$483 = $126;
 }
 $259 = (($2) + -1)|0;
 $260 = ($259|0)>($$0226$lcssa302|0);
 L97: do {
  if ($260) {
   $261 = (($$pre$phi297298Z2D) + 8)|0;
   $262 = ($16|0)==(0);
   $263 = (($1) + 2)|0;
   if ($262) {
    $$0422503$us$i = $$0225;$$0447501$us$i = $2;$$3502$us$i = $$2430$lcssa$i;$277 = $259;
    while(1) {
     $264 = (($$0) - ($$3502$us$i))|0;
     $265 = HEAP32[$$pre$phi295300Z2D>>2]|0;
     $266 = (($265) + ($$0447501$us$i<<1)|0);
     $267 = HEAP16[$266>>1]|0;
     $268 = $267 << 16 >> 16;
     $269 = (($265) + ($1<<1)|0);
     $270 = HEAP16[$269>>1]|0;
     $271 = $270 << 16 >> 16;
     $272 = (($268) - ($271))|0;
     $273 = (($264>>>0) / ($272>>>0))&-1;
     $274 = Math_imul($272, $273)|0;
     $275 = (($264) - ($274))|0;
     $276 = (($265) + ($277<<1)|0);
     $278 = HEAP16[$276>>1]|0;
     $279 = $278 << 16 >> 16;
     $280 = (($271) - ($279))|0;
     $281 = (($275) + ($280))|0;
     $282 = ($281|0)>(0);
     $spec$select457$us$i = $282 ? $281 : 0;
     $283 = (($268) - ($279))|0;
     $284 = (($10) + ($277<<2)|0);
     $285 = HEAP32[$284>>2]|0;
     $286 = Math_imul($283, $273)|0;
     $287 = (($286) + ($285))|0;
     $288 = (($287) + ($spec$select457$us$i))|0;
     $289 = (($38) + ($277<<2)|0);
     $290 = HEAP32[$289>>2]|0;
     $291 = ($290|0)>($261|0);
     $292 = $291 ? $290 : $261;
     $293 = ($288|0)<($292|0);
     if ($293) {
      $$0448$us$i = $288;$$4$us$i = $$3502$us$i;$305 = $285;
     } else {
      $294 = (_ec_dec_bit_logp($15,1)|0);
      $295 = ($294|0)==(0);
      if (!($295)) {
       $$0422478$i = $$0422503$us$i;$$0447484$i = $$0447501$us$i;$$1$ph$i = $$0;$$3481$i = $$3502$us$i;
       break L97;
      }
      $296 = (($$3502$us$i) + 8)|0;
      $297 = (($288) + -8)|0;
      $$pre547$i = HEAP32[$284>>2]|0;
      $$0448$us$i = $297;$$4$us$i = $296;$305 = $$pre547$i;
     }
     $298 = ($$0422503$us$i|0)>(0);
     if ($298) {
      $299 = (($277) - ($1))|0;
      $300 = (20352 + ($299)|0);
      $301 = HEAP8[$300>>0]|0;
      $302 = $301&255;
      $$1423$us$i = $302;
     } else {
      $$1423$us$i = $$0422503$us$i;
     }
     $303 = ($$0448$us$i|0)<($$pre$phi297298Z2D|0);
     $storemerge$us$i = $303 ? 0 : $$pre$phi297298Z2D;
     $304 = (($305) + ($$0422503$us$i))|0;
     $306 = (($$4$us$i) - ($304))|0;
     $307 = (($306) + ($storemerge$us$i))|0;
     $$5$us$i = (($307) + ($$1423$us$i))|0;
     HEAP32[$284>>2] = $storemerge$us$i;
     $308 = (($277) + -1)|0;
     $309 = ($308|0)>($$0226$lcssa302|0);
     if ($309) {
      $$0447501$us$i$phi = $277;$$0422503$us$i = $$1423$us$i;$$3502$us$i = $$5$us$i;$277 = $308;$$0447501$us$i = $$0447501$us$i$phi;
     } else {
      $$0422$lcssa$i = $$1423$us$i;$$0447$lcssa$i = $277;$$3$lcssa$i = $$5$us$i;
      label = 53;
      break L97;
     }
    }
   }
   $$0422503$i = $$0225;$$0447501$i = $2;$$3502$i = $$2430$lcssa$i;$324 = $259;
   while(1) {
    $311 = (($$0) - ($$3502$i))|0;
    $312 = HEAP32[$$pre$phi295300Z2D>>2]|0;
    $313 = (($312) + ($$0447501$i<<1)|0);
    $314 = HEAP16[$313>>1]|0;
    $315 = $314 << 16 >> 16;
    $316 = (($312) + ($1<<1)|0);
    $317 = HEAP16[$316>>1]|0;
    $318 = $317 << 16 >> 16;
    $319 = (($315) - ($318))|0;
    $320 = (($311>>>0) / ($319>>>0))&-1;
    $321 = Math_imul($319, $320)|0;
    $322 = (($311) - ($321))|0;
    $323 = (($312) + ($324<<1)|0);
    $325 = HEAP16[$323>>1]|0;
    $326 = $325 << 16 >> 16;
    $327 = (($318) - ($326))|0;
    $328 = (($322) + ($327))|0;
    $329 = ($328|0)>(0);
    $spec$select457$i = $329 ? $328 : 0;
    $330 = (($315) - ($326))|0;
    $331 = (($10) + ($324<<2)|0);
    $332 = HEAP32[$331>>2]|0;
    $333 = Math_imul($330, $320)|0;
    $334 = (($333) + ($332))|0;
    $335 = (($334) + ($spec$select457$i))|0;
    $336 = (($38) + ($324<<2)|0);
    $337 = HEAP32[$336>>2]|0;
    $338 = ($337|0)>($261|0);
    $339 = $338 ? $337 : $261;
    $340 = ($335|0)<($339|0);
    if ($340) {
     $$0448$i = $335;$$4$i = $$3502$i;$360 = $332;
    } else {
     $341 = ($$0447501$i|0)>($263|0);
     if (!($341)) {
      break;
     }
     $342 = ($$0447501$i|0)>(17);
     $343 = ($$0447501$i|0)>($17|0);
     $344 = $343 ? 9 : 7;
     $$0444$i = $342 ? $344 : 0;
     $345 = Math_imul($330, $$0444$i)|0;
     $346 = $345 << $14;
     $347 = $346 << 3;
     $348 = $347 >> 4;
     $349 = ($335|0)<=($348|0);
     $350 = ($324|0)>($18|0);
     $or$cond458$i = $350 | $349;
     if (!($or$cond458$i)) {
      break;
     }
     _ec_enc_bit_logp($15,0,1);
     $351 = (($$3502$i) + 8)|0;
     $352 = (($335) + -8)|0;
     $$pre$i = HEAP32[$331>>2]|0;
     $$0448$i = $352;$$4$i = $351;$360 = $$pre$i;
    }
    $353 = ($$0422503$i|0)>(0);
    if ($353) {
     $354 = (($324) - ($1))|0;
     $355 = (20352 + ($354)|0);
     $356 = HEAP8[$355>>0]|0;
     $357 = $356&255;
     $$1423$i = $357;
    } else {
     $$1423$i = $$0422503$i;
    }
    $358 = ($$0448$i|0)<($$pre$phi297298Z2D|0);
    $storemerge$i = $358 ? 0 : $$pre$phi297298Z2D;
    $359 = (($360) + ($$0422503$i))|0;
    $361 = (($$4$i) - ($359))|0;
    $362 = (($361) + ($storemerge$i))|0;
    $$5$i = (($362) + ($$1423$i))|0;
    HEAP32[$331>>2] = $storemerge$i;
    $363 = (($324) + -1)|0;
    $364 = ($363|0)>($$0226$lcssa302|0);
    if ($364) {
     $$0447501$i$phi = $324;$$0422503$i = $$1423$i;$$3502$i = $$5$i;$324 = $363;$$0447501$i = $$0447501$i$phi;
    } else {
     $$0422$lcssa$i = $$1423$i;$$0447$lcssa$i = $324;$$3$lcssa$i = $$5$i;
     label = 53;
     break L97;
    }
   }
   _ec_enc_bit_logp($15,1,1);
   $$0422478$i = $$0422503$i;$$0447484$i = $$0447501$i;$$1$ph$i = $$0;$$3481$i = $$3502$i;
  } else {
   $$0422$lcssa$i = $$0225;$$0447$lcssa$i = $2;$$3$lcssa$i = $$2430$lcssa$i;
   label = 53;
  }
 } while(0);
 if ((label|0) == 53) {
  $310 = (($$0) + ($24))|0;
  $$0422478$i = $$0422$lcssa$i;$$0447484$i = $$0447$lcssa$i;$$1$ph$i = $310;$$3481$i = $$3$lcssa$i;
 }
 $365 = ($$0422478$i|0)>(0);
 do {
  if ($365) {
   $366 = ($16|0)==(0);
   if ($366) {
    $372 = (($$0447484$i) + 1)|0;
    $373 = (($372) - ($1))|0;
    $374 = (_ec_dec_uint($15,$373)|0);
    $375 = (($374) + ($1))|0;
    HEAP32[$6>>2] = $375;
    $377 = $375;
    break;
   } else {
    $367 = HEAP32[$6>>2]|0;
    $368 = ($367|0)<($$0447484$i|0);
    $$$0447$i = $368 ? $367 : $$0447484$i;
    HEAP32[$6>>2] = $$$0447$i;
    $369 = (($$$0447$i) - ($1))|0;
    $370 = (($$0447484$i) + 1)|0;
    $371 = (($370) - ($1))|0;
    _ec_enc_uint($15,$369,$371);
    $$pre548$i = HEAP32[$6>>2]|0;
    $377 = $$pre548$i;
    break;
   }
  } else {
   HEAP32[$6>>2] = 0;
   $377 = 0;
  }
 } while(0);
 $376 = ($377|0)>($1|0);
 $378 = $376 ? 0 : $$0224;
 $379 = ($$0224|0)>(0);
 $380 = $379 & $376;
 do {
  if ($380) {
   $381 = ($16|0)==(0);
   if ($381) {
    $383 = (_ec_dec_bit_logp($15,1)|0);
    HEAP32[$7>>2] = $383;
    break;
   } else {
    $382 = HEAP32[$7>>2]|0;
    _ec_enc_bit_logp($15,$382,1);
    break;
   }
  } else {
   HEAP32[$7>>2] = 0;
  }
 } while(0);
 $spec$select460$i = (($$1$ph$i) - ($$3481$i))|0;
 $384 = (($378) + ($spec$select460$i))|0;
 $385 = HEAP32[$$pre$phi295300Z2D>>2]|0;
 $386 = (($385) + ($$0447484$i<<1)|0);
 $387 = HEAP16[$386>>1]|0;
 $388 = $387 << 16 >> 16;
 $389 = (($385) + ($1<<1)|0);
 $390 = HEAP16[$389>>1]|0;
 $391 = $390 << 16 >> 16;
 $392 = (($388) - ($391))|0;
 $393 = (($384>>>0) / ($392>>>0))&-1;
 $394 = Math_imul($392, $393)|0;
 $395 = (($384) - ($394))|0;
 $396 = ($$0447484$i|0)>($1|0);
 if ($396) {
  $$2440497$i = $1;$402 = $390;
  while(1) {
   $397 = (($$2440497$i) + 1)|0;
   $398 = (($385) + ($397<<1)|0);
   $399 = HEAP16[$398>>1]|0;
   $400 = $399 << 16 >> 16;
   $401 = $402 << 16 >> 16;
   $403 = (($400) - ($401))|0;
   $404 = Math_imul($403, $393)|0;
   $405 = (($10) + ($$2440497$i<<2)|0);
   $406 = HEAP32[$405>>2]|0;
   $407 = (($404) + ($406))|0;
   HEAP32[$405>>2] = $407;
   $exitcond543$i = ($397|0)==($$0447484$i|0);
   if ($exitcond543$i) {
    break;
   } else {
    $$2440497$i = $397;$402 = $399;
   }
  }
  $$0449492$i = $395;$$3441493$i = $1;$413 = $390;
  while(1) {
   $408 = (($$3441493$i) + 1)|0;
   $409 = (($385) + ($408<<1)|0);
   $410 = HEAP16[$409>>1]|0;
   $411 = $410 << 16 >> 16;
   $412 = $413 << 16 >> 16;
   $414 = (($411) - ($412))|0;
   $415 = ($$0449492$i|0)<($414|0);
   $$0449$$i = $415 ? $$0449492$i : $414;
   $416 = (($10) + ($$3441493$i<<2)|0);
   $417 = HEAP32[$416>>2]|0;
   $418 = (($$0449$$i) + ($417))|0;
   HEAP32[$416>>2] = $418;
   $419 = (($$0449492$i) - ($$0449$$i))|0;
   $exitcond542$i = ($408|0)==($$0447484$i|0);
   if ($exitcond542$i) {
    break;
   } else {
    $$0449492$i = $419;$$3441493$i = $408;$413 = $410;
   }
  }
  $420 = ((($0)) + 56|0);
  $421 = $422 ? 4 : 3;
  $$0455486$i = 0;$$4442487$i = $1;$428 = $390;
  while(1) {
   $423 = (($$4442487$i) + 1)|0;
   $424 = (($385) + ($423<<1)|0);
   $425 = HEAP16[$424>>1]|0;
   $426 = $425 << 16 >> 16;
   $427 = $428 << 16 >> 16;
   $429 = (($426) - ($427))|0;
   $430 = $429 << $14;
   $431 = (($10) + ($$4442487$i<<2)|0);
   $432 = HEAP32[$431>>2]|0;
   $433 = (($432) + ($$0455486$i))|0;
   $434 = ($430|0)>(1);
   if ($434) {
    $435 = (($4) + ($$4442487$i<<2)|0);
    $436 = HEAP32[$435>>2]|0;
    $437 = (($433) - ($436))|0;
    $438 = ($437|0)>(0);
    $spec$select461$i = $438 ? $437 : 0;
    $439 = (($433) - ($spec$select461$i))|0;
    HEAP32[$431>>2] = $439;
    $440 = Math_imul($430, $13)|0;
    $441 = ($430|0)!=(2);
    $or$cond5$i = $26 & $441;
    if ($or$cond5$i) {
     $442 = HEAP32[$7>>2]|0;
     $443 = ($442|0)==(0);
     if ($443) {
      $444 = HEAP32[$6>>2]|0;
      $445 = ($$4442487$i|0)<($444|0);
      $447 = $445;
     } else {
      $447 = 0;
     }
    } else {
     $447 = 0;
    }
    $446 = $447&1;
    $448 = (($440) + ($446))|0;
    $449 = HEAP32[$420>>2]|0;
    $450 = (($449) + ($$4442487$i<<1)|0);
    $451 = HEAP16[$450>>1]|0;
    $452 = $451 << 16 >> 16;
    $453 = (($454) + ($452))|0;
    $455 = Math_imul($453, $448)|0;
    $456 = $455 >> 1;
    $457 = Math_imul($448, -21)|0;
    $458 = ($430|0)==(2);
    $459 = $448 << 3;
    $460 = $459 >> 2;
    $461 = $458 ? $460 : 0;
    $462 = (($461) + ($457))|0;
    $spec$select472$i = (($462) + ($456))|0;
    $463 = (($spec$select472$i) + ($439))|0;
    $464 = $448 << 4;
    $465 = ($463|0)<($464|0);
    if ($465) {
     $466 = $455 >> 2;
     $$pn$i = $466;
    } else {
     $467 = ($448*24)|0;
     $468 = ($463|0)<($467|0);
     $469 = $455 >> 3;
     $470 = $468 ? $469 : 0;
     $$pn$i = $470;
    }
    $$1432$i = (($$pn$i) + ($spec$select472$i))|0;
    $471 = $448 << 2;
    $472 = (($471) + ($439))|0;
    $473 = (($472) + ($$1432$i))|0;
    $474 = ($473|0)>(0);
    $spec$select462$i = $474 ? $473 : 0;
    $475 = (($11) + ($$4442487$i<<2)|0);
    $476 = (($spec$select462$i>>>0) / ($448>>>0))&-1;
    $477 = $476 >>> 3;
    HEAP32[$475>>2] = $477;
    $478 = Math_imul($477, $13)|0;
    $479 = HEAP32[$431>>2]|0;
    $480 = $479 >> 3;
    $481 = ($478|0)>($480|0);
    $482 = $479 >> $483;
    $484 = $482 >> 3;
    $spec$select236 = $481 ? $484 : $477;
    $485 = ($spec$select236|0)<(8);
    $spec$select463$i = $485 ? $spec$select236 : 8;
    HEAP32[$475>>2] = $spec$select463$i;
    $486 = Math_imul($spec$select463$i, $459)|0;
    $487 = HEAP32[$431>>2]|0;
    $488 = (($487) + ($$1432$i))|0;
    $489 = ($486|0)>=($488|0);
    $490 = $489&1;
    $491 = (($12) + ($$4442487$i<<2)|0);
    HEAP32[$491>>2] = $490;
    $492 = HEAP32[$475>>2]|0;
    $493 = Math_imul($492, $$pre$phi297298Z2D)|0;
    $494 = HEAP32[$431>>2]|0;
    $495 = (($494) - ($493))|0;
    HEAP32[$431>>2] = $495;
    $$0426$i = $spec$select461$i;
   } else {
    $496 = (($433) - ($$pre$phi297298Z2D))|0;
    $497 = ($496|0)>(0);
    $spec$select464$i = $497 ? $496 : 0;
    $498 = (($433) - ($spec$select464$i))|0;
    HEAP32[$431>>2] = $498;
    $499 = (($11) + ($$4442487$i<<2)|0);
    HEAP32[$499>>2] = 0;
    $500 = (($12) + ($$4442487$i<<2)|0);
    HEAP32[$500>>2] = 1;
    $$0426$i = $spec$select464$i;
   }
   $501 = ($$0426$i|0)==(0);
   if ($501) {
    $$1427$i = 0;
   } else {
    $502 = $$0426$i >>> $421;
    $503 = (($11) + ($$4442487$i<<2)|0);
    $504 = HEAP32[$503>>2]|0;
    $505 = (8 - ($504))|0;
    $506 = ($502|0)<($505|0);
    $$465$i = $506 ? $502 : $505;
    $507 = (($$465$i) + ($504))|0;
    HEAP32[$503>>2] = $507;
    $508 = Math_imul($$465$i, $$pre$phi297298Z2D)|0;
    $509 = (($$0426$i) - ($$0455486$i))|0;
    $510 = ($508|0)>=($509|0);
    $511 = $510&1;
    $512 = (($12) + ($$4442487$i<<2)|0);
    HEAP32[$512>>2] = $511;
    $513 = (($$0426$i) - ($508))|0;
    $$1427$i = $513;
   }
   $exitcond541$i = ($423|0)==($$0447484$i|0);
   if ($exitcond541$i) {
    $$0455$lcssa$i = $$1427$i;$$4442$lcssa$i = $$0447484$i;
    break;
   } else {
    $$0455486$i = $$1427$i;$$4442487$i = $423;$428 = $425;
   }
  }
 } else {
  $$0455$lcssa$i = 0;$$4442$lcssa$i = $1;
 }
 HEAP32[$9>>2] = $$0455$lcssa$i;
 $514 = ($$4442$lcssa$i|0)<($2|0);
 if (!($514)) {
  STACKTOP = sp;return ($$0447484$i|0);
 }
 $$5443485$i = $$4442$lcssa$i;
 while(1) {
  $515 = (($10) + ($$5443485$i<<2)|0);
  $516 = HEAP32[$515>>2]|0;
  $517 = $516 >> $483;
  $518 = $517 >> 3;
  $519 = (($11) + ($$5443485$i<<2)|0);
  HEAP32[$519>>2] = $518;
  HEAP32[$515>>2] = 0;
  $520 = HEAP32[$519>>2]|0;
  $521 = ($520|0)<(1);
  $522 = $521&1;
  $523 = (($12) + ($$5443485$i<<2)|0);
  HEAP32[$523>>2] = $522;
  $524 = (($$5443485$i) + 1)|0;
  $exitcond$i = ($524|0)==($2|0);
  if ($exitcond$i) {
   break;
  } else {
   $$5443485$i = $524;
  }
 }
 STACKTOP = sp;return ($$0447484$i|0);
}
function _exp_rotation($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$05357$i = 0, $$05357$i71 = 0, $$05357$i80 = 0, $$05357$i89 = 0, $$058$i = 0, $$058$i70 = 0, $$058$i79 = 0, $$058$i88 = 0, $$06898 = 0, $$1 = 0, $$15455$i = 0, $$15455$i76 = 0, $$15455$i85 = 0, $$15455$i94 = 0, $$156$i = 0, $$156$i75 = 0, $$156$i84 = 0, $$156$i93 = 0, $$pre = Math_fround(0);
 var $$pre101 = Math_fround(0), $$pre102 = 0, $$pre103 = 0, $10 = 0, $100 = 0, $101 = Math_fround(0), $102 = Math_fround(0), $103 = Math_fround(0), $104 = Math_fround(0), $105 = Math_fround(0), $106 = Math_fround(0), $107 = Math_fround(0), $108 = Math_fround(0), $109 = 0, $11 = 0, $110 = 0, $111 = Math_fround(0), $112 = 0, $113 = Math_fround(0), $114 = Math_fround(0);
 var $115 = Math_fround(0), $116 = Math_fround(0), $117 = Math_fround(0), $118 = Math_fround(0), $119 = Math_fround(0), $12 = Math_fround(0), $120 = 0, $121 = 0, $122 = 0, $123 = Math_fround(0), $124 = 0, $125 = Math_fround(0), $126 = Math_fround(0), $127 = Math_fround(0), $128 = Math_fround(0), $129 = Math_fround(0), $13 = 0, $130 = Math_fround(0), $131 = Math_fround(0), $132 = 0;
 var $133 = 0, $134 = 0, $135 = Math_fround(0), $136 = 0, $137 = Math_fround(0), $138 = Math_fround(0), $139 = Math_fround(0), $14 = 0, $140 = Math_fround(0), $141 = Math_fround(0), $142 = Math_fround(0), $143 = Math_fround(0), $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = Math_fround(0), $16 = Math_fround(0), $17 = Math_fround(0), $18 = Math_fround(0);
 var $19 = Math_fround(0), $20 = 0.0, $21 = 0.0, $22 = Math_fround(0), $23 = Math_fround(0), $24 = Math_fround(0), $25 = 0.0, $26 = 0.0, $27 = Math_fround(0), $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $40 = 0, $41 = Math_fround(0), $42 = 0, $43 = 0, $44 = Math_fround(0), $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = Math_fround(0), $54 = 0, $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = Math_fround(0);
 var $59 = Math_fround(0), $6 = 0, $60 = Math_fround(0), $61 = Math_fround(0), $62 = 0, $63 = 0, $64 = 0, $65 = Math_fround(0), $66 = 0, $67 = Math_fround(0), $68 = Math_fround(0), $69 = Math_fround(0), $7 = 0, $70 = Math_fround(0), $71 = Math_fround(0), $72 = Math_fround(0), $73 = Math_fround(0), $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = Math_fround(0), $79 = Math_fround(0), $8 = 0, $80 = Math_fround(0), $81 = Math_fround(0), $82 = Math_fround(0), $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = 0, $87 = 0, $88 = Math_fround(0), $89 = 0, $9 = 0, $90 = Math_fround(0), $91 = Math_fround(0), $92 = Math_fround(0), $93 = Math_fround(0), $94 = Math_fround(0);
 var $95 = Math_fround(0), $96 = Math_fround(0), $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i72 = 0, $exitcond$i81 = 0, $exitcond$i90 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = $4 << 1;
 $7 = ($6|0)>=($1|0);
 $8 = ($5|0)==(0);
 $or$cond = $7 | $8;
 if ($or$cond) {
  return;
 }
 $9 = (($5) + -1)|0;
 $10 = (36692 + ($9<<2)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (Math_fround(($1|0)));
 $13 = Math_imul($11, $4)|0;
 $14 = (($13) + ($1))|0;
 $15 = (Math_fround(($14|0)));
 $16 = Math_fround($12 / $15);
 $17 = Math_fround($16 * $16);
 $18 = Math_fround($17 * Math_fround(0.5));
 $19 = Math_fround($18 * Math_fround(1.57079637));
 $20 = +$19;
 $21 = (+_cos($20));
 $22 = Math_fround($21);
 $23 = Math_fround(Math_fround(1.0) - $18);
 $24 = Math_fround($23 * Math_fround(1.57079637));
 $25 = +$24;
 $26 = (+_cos($25));
 $27 = Math_fround($26);
 $28 = $3 << 3;
 $29 = ($28|0)>($1|0);
 if ($29) {
  $$1 = 0;
 } else {
  $30 = $3 >> 2;
  $$0 = 1;
  while(1) {
   $31 = Math_imul($$0, $$0)|0;
   $32 = (($31) + ($$0))|0;
   $33 = Math_imul($32, $3)|0;
   $34 = (($33) + ($30))|0;
   $35 = ($34|0)<($1|0);
   $36 = (($$0) + 1)|0;
   if ($35) {
    $$0 = $36;
   } else {
    $$1 = $$0;
    break;
   }
  }
 }
 $37 = (($1>>>0) / ($3>>>0))&-1;
 $38 = ($3|0)>(0);
 if (!($38)) {
  return;
 }
 $39 = ($2|0)<(0);
 $40 = ($$1|0)==(0);
 $41 = Math_fround(- $27);
 $42 = (($37) + -1)|0;
 $43 = ($37|0)>(1);
 $44 = Math_fround(- $22);
 $45 = (($37) - ($$1))|0;
 $46 = ($45|0)>(0);
 $47 = (($37) + -3)|0;
 $48 = ($37|0)>(2);
 $49 = $$1 << 1;
 $50 = (($37) - ($49))|0;
 $51 = (($50) + -1)|0;
 $52 = ($50|0)>(0);
 $$06898 = 0;
 while(1) {
  $$pre102 = Math_imul($$06898, $37)|0;
  $$pre103 = (($0) + ($$pre102<<2)|0);
  if ($39) {
   if (!($40)) {
    if ($46) {
     $$05357$i89 = $$pre103;$$058$i88 = 0;
     while(1) {
      $53 = Math_fround(HEAPF32[$$05357$i89>>2]);
      $54 = (($$05357$i89) + ($$1<<2)|0);
      $55 = Math_fround(HEAPF32[$54>>2]);
      $56 = Math_fround($55 * $27);
      $57 = Math_fround($53 * $22);
      $58 = Math_fround($57 + $56);
      HEAPF32[$54>>2] = $58;
      $59 = Math_fround($53 * $27);
      $60 = Math_fround($55 * $44);
      $61 = Math_fround($59 + $60);
      $62 = ((($$05357$i89)) + 4|0);
      HEAPF32[$$05357$i89>>2] = $61;
      $63 = (($$058$i88) + 1)|0;
      $exitcond$i90 = ($63|0)==($45|0);
      if ($exitcond$i90) {
       break;
      } else {
       $$05357$i89 = $62;$$058$i88 = $63;
      }
     }
    }
    if ($52) {
     $64 = (($$pre103) + ($51<<2)|0);
     $$15455$i94 = $64;$$156$i93 = $51;
     while(1) {
      $65 = Math_fround(HEAPF32[$$15455$i94>>2]);
      $66 = (($$15455$i94) + ($$1<<2)|0);
      $67 = Math_fround(HEAPF32[$66>>2]);
      $68 = Math_fround($67 * $27);
      $69 = Math_fround($65 * $22);
      $70 = Math_fround($69 + $68);
      HEAPF32[$66>>2] = $70;
      $71 = Math_fround($65 * $27);
      $72 = Math_fround($67 * $44);
      $73 = Math_fround($71 + $72);
      $74 = ((($$15455$i94)) + -4|0);
      HEAPF32[$$15455$i94>>2] = $73;
      $75 = (($$156$i93) + -1)|0;
      $76 = ($$156$i93|0)>(0);
      if ($76) {
       $$15455$i94 = $74;$$156$i93 = $75;
      } else {
       break;
      }
     }
    }
   }
   if ($43) {
    $$pre101 = Math_fround(HEAPF32[$$pre103>>2]);
    $$05357$i80 = $$pre103;$$058$i79 = 0;$81 = $$pre101;
    while(1) {
     $77 = ((($$05357$i80)) + 4|0);
     $78 = Math_fround(HEAPF32[$77>>2]);
     $79 = Math_fround($78 * $22);
     $80 = Math_fround($81 * $27);
     $82 = Math_fround($80 + $79);
     HEAPF32[$77>>2] = $82;
     $83 = Math_fround($81 * $22);
     $84 = Math_fround($78 * $41);
     $85 = Math_fround($83 + $84);
     HEAPF32[$$05357$i80>>2] = $85;
     $86 = (($$058$i79) + 1)|0;
     $exitcond$i81 = ($86|0)==($42|0);
     if ($exitcond$i81) {
      break;
     } else {
      $$05357$i80 = $77;$$058$i79 = $86;$81 = $82;
     }
    }
   }
   if ($48) {
    $87 = (($$pre103) + ($47<<2)|0);
    $$15455$i85 = $87;$$156$i84 = $47;
    while(1) {
     $88 = Math_fround(HEAPF32[$$15455$i85>>2]);
     $89 = ((($$15455$i85)) + 4|0);
     $90 = Math_fround(HEAPF32[$89>>2]);
     $91 = Math_fround($90 * $22);
     $92 = Math_fround($88 * $27);
     $93 = Math_fround($92 + $91);
     HEAPF32[$89>>2] = $93;
     $94 = Math_fround($88 * $22);
     $95 = Math_fround($90 * $41);
     $96 = Math_fround($94 + $95);
     $97 = ((($$15455$i85)) + -4|0);
     HEAPF32[$$15455$i85>>2] = $96;
     $98 = (($$156$i84) + -1)|0;
     $99 = ($$156$i84|0)>(0);
     if ($99) {
      $$15455$i85 = $97;$$156$i84 = $98;
     } else {
      break;
     }
    }
   }
  } else {
   if ($43) {
    $$pre = Math_fround(HEAPF32[$$pre103>>2]);
    $$05357$i71 = $$pre103;$$058$i70 = 0;$104 = $$pre;
    while(1) {
     $100 = ((($$05357$i71)) + 4|0);
     $101 = Math_fround(HEAPF32[$100>>2]);
     $102 = Math_fround($101 * $22);
     $103 = Math_fround($104 * $41);
     $105 = Math_fround($103 + $102);
     HEAPF32[$100>>2] = $105;
     $106 = Math_fround($104 * $22);
     $107 = Math_fround($101 * $27);
     $108 = Math_fround($106 + $107);
     HEAPF32[$$05357$i71>>2] = $108;
     $109 = (($$058$i70) + 1)|0;
     $exitcond$i72 = ($109|0)==($42|0);
     if ($exitcond$i72) {
      break;
     } else {
      $$05357$i71 = $100;$$058$i70 = $109;$104 = $105;
     }
    }
   }
   if ($48) {
    $110 = (($$pre103) + ($47<<2)|0);
    $$15455$i76 = $110;$$156$i75 = $47;
    while(1) {
     $111 = Math_fround(HEAPF32[$$15455$i76>>2]);
     $112 = ((($$15455$i76)) + 4|0);
     $113 = Math_fround(HEAPF32[$112>>2]);
     $114 = Math_fround($113 * $22);
     $115 = Math_fround($111 * $41);
     $116 = Math_fround($115 + $114);
     HEAPF32[$112>>2] = $116;
     $117 = Math_fround($111 * $22);
     $118 = Math_fround($113 * $27);
     $119 = Math_fround($117 + $118);
     $120 = ((($$15455$i76)) + -4|0);
     HEAPF32[$$15455$i76>>2] = $119;
     $121 = (($$156$i75) + -1)|0;
     $122 = ($$156$i75|0)>(0);
     if ($122) {
      $$15455$i76 = $120;$$156$i75 = $121;
     } else {
      break;
     }
    }
   }
   if (!($40)) {
    if ($46) {
     $$05357$i = $$pre103;$$058$i = 0;
     while(1) {
      $123 = Math_fround(HEAPF32[$$05357$i>>2]);
      $124 = (($$05357$i) + ($$1<<2)|0);
      $125 = Math_fround(HEAPF32[$124>>2]);
      $126 = Math_fround($125 * $27);
      $127 = Math_fround($123 * $44);
      $128 = Math_fround($127 + $126);
      HEAPF32[$124>>2] = $128;
      $129 = Math_fround($123 * $27);
      $130 = Math_fround($125 * $22);
      $131 = Math_fround($129 + $130);
      $132 = ((($$05357$i)) + 4|0);
      HEAPF32[$$05357$i>>2] = $131;
      $133 = (($$058$i) + 1)|0;
      $exitcond$i = ($133|0)==($45|0);
      if ($exitcond$i) {
       break;
      } else {
       $$05357$i = $132;$$058$i = $133;
      }
     }
    }
    if ($52) {
     $134 = (($$pre103) + ($51<<2)|0);
     $$15455$i = $134;$$156$i = $51;
     while(1) {
      $135 = Math_fround(HEAPF32[$$15455$i>>2]);
      $136 = (($$15455$i) + ($$1<<2)|0);
      $137 = Math_fround(HEAPF32[$136>>2]);
      $138 = Math_fround($137 * $27);
      $139 = Math_fround($135 * $44);
      $140 = Math_fround($139 + $138);
      HEAPF32[$136>>2] = $140;
      $141 = Math_fround($135 * $27);
      $142 = Math_fround($137 * $22);
      $143 = Math_fround($141 + $142);
      $144 = ((($$15455$i)) + -4|0);
      HEAPF32[$$15455$i>>2] = $143;
      $145 = (($$156$i) + -1)|0;
      $146 = ($$156$i|0)>(0);
      if ($146) {
       $$15455$i = $144;$$156$i = $145;
      } else {
       break;
      }
     }
    }
   }
  }
  $147 = (($$06898) + 1)|0;
  $exitcond = ($147|0)==($3|0);
  if ($exitcond) {
   break;
  } else {
   $$06898 = $147;
  }
 }
 return;
}
function _op_pvq_search_c($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = Math_fround(0), $$0133 = Math_fround(0), $$0135 = 0, $$0137158 = 0, $$0138 = 0, $$0140 = 0, $$0143 = Math_fround(0), $$0147 = Math_fround(0), $$0150 = Math_fround(0), $$1 = Math_fround(0), $$1134 = Math_fround(0), $$1136 = 0, $$1139 = 0, $$1141 = 0, $$1144 = Math_fround(0), $$1148 = Math_fround(0), $$1151 = Math_fround(0), $$2149156 = Math_fround(0), $$3 = 0, $$3146$lcssa = Math_fround(0);
 var $$3146157 = Math_fround(0), $$4 = 0, $$5 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $10 = Math_fround(0), $11 = 0, $12 = 0, $13 = 0, $14 = Math_fround(0), $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = Math_fround(0), $22 = Math_fround(0), $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = Math_fround(0), $31 = Math_fround(0), $32 = Math_fround(0), $33 = Math_fround(0), $34 = 0, $35 = Math_fround(0), $36 = Math_fround(0), $37 = Math_fround(0), $38 = 0, $39 = 0, $40 = Math_fround(0), $41 = 0, $42 = Math_fround(0), $43 = Math_fround(0), $44 = Math_fround(0);
 var $45 = Math_fround(0), $46 = Math_fround(0), $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = Math_fround(0), $53 = Math_fround(0), $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = Math_fround(0), $62 = Math_fround(0);
 var $63 = Math_fround(0), $64 = Math_fround(0), $65 = Math_fround(0), $66 = Math_fround(0), $67 = 0, $68 = Math_fround(0), $69 = Math_fround(0), $7 = 0, $70 = 0, $71 = Math_fround(0), $72 = Math_fround(0), $73 = Math_fround(0), $74 = Math_fround(0), $75 = Math_fround(0), $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = Math_fround(0);
 var $81 = Math_fround(0), $82 = 0, $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $exitcond = 0;
 var $or$cond = 0, $scevgep = 0, $smax = 0, $smax164 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$alloca_mul = $3<<2;
 $5 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $$alloca_mul1 = $3<<2;
 $6 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $7 = ($3|0)>(1);
 $smax164 = $7 ? $3 : 1;
 $8 = $smax164 << 2;
 _memset(($5|0),0,($8|0))|0;
 $$0138 = 0;
 while(1) {
  $9 = (($0) + ($$0138<<2)|0);
  $10 = Math_fround(HEAPF32[$9>>2]);
  $11 = $10 < Math_fround(0.0);
  $12 = $11&1;
  $13 = (($6) + ($$0138<<2)|0);
  HEAP32[$13>>2] = $12;
  $14 = (Math_fround(Math_abs((Math_fround($10)))));
  HEAPF32[$9>>2] = $14;
  $15 = (($1) + ($$0138<<2)|0);
  HEAP32[$15>>2] = 0;
  $16 = (($$0138) + 1)|0;
  $17 = ($16|0)<($3|0);
  if ($17) {
   $$0138 = $16;
  } else {
   break;
  }
 }
 $18 = $3 >> 1;
 $19 = ($18|0)<($2|0);
 if ($19) {
  $$0150 = Math_fround(0.0);$$1139 = 0;
  while(1) {
   $20 = (($0) + ($$1139<<2)|0);
   $21 = Math_fround(HEAPF32[$20>>2]);
   $22 = Math_fround($$0150 + $21);
   $23 = (($$1139) + 1)|0;
   $24 = ($23|0)<($3|0);
   if ($24) {
    $$0150 = $22;$$1139 = $23;
   } else {
    break;
   }
  }
  $25 = $22 > Math_fround(1.0E-15);
  $26 = $22 < Math_fround(64.0);
  $or$cond = $25 & $26;
  if ($or$cond) {
   $$1151 = $22;
  } else {
   HEAPF32[$0>>2] = Math_fround(1.0);
   $scevgep = ((($0)) + 4|0);
   $27 = ($3|0)>(2);
   $smax = $27 ? $3 : 2;
   $28 = $smax << 2;
   $29 = (($28) + -4)|0;
   _memset(($scevgep|0),0,($29|0))|0;
   $$1151 = Math_fround(1.0);
  }
  $30 = (Math_fround(($2|0)));
  $31 = Math_fround($30 + Math_fround(0.800000011));
  $32 = Math_fround(Math_fround(1.0) / $$1151);
  $33 = Math_fround($31 * $32);
  $$0140 = $2;$$0143 = Math_fround(0.0);$$0147 = Math_fround(0.0);$$3 = 0;
  while(1) {
   $34 = (($0) + ($$3<<2)|0);
   $35 = Math_fround(HEAPF32[$34>>2]);
   $36 = Math_fround($33 * $35);
   $37 = (Math_fround(Math_floor((Math_fround($36)))));
   $38 = (~~(($37)));
   $39 = (($1) + ($$3<<2)|0);
   HEAP32[$39>>2] = $38;
   $40 = (Math_fround(($38|0)));
   $41 = (($5) + ($$3<<2)|0);
   $42 = Math_fround($40 * $40);
   $43 = Math_fround($$0143 + $42);
   $44 = Math_fround($35 * $40);
   $45 = Math_fround($$0147 + $44);
   $46 = Math_fround($40 * Math_fround(2.0));
   HEAPF32[$41>>2] = $46;
   $47 = (($$0140) - ($38))|0;
   $48 = (($$3) + 1)|0;
   $49 = ($48|0)<($3|0);
   if ($49) {
    $$0140 = $47;$$0143 = $43;$$0147 = $45;$$3 = $48;
   } else {
    $$1141 = $47;$$1144 = $43;$$1148 = $45;
    break;
   }
  }
 } else {
  $$1141 = $2;$$1144 = Math_fround(0.0);$$1148 = Math_fround(0.0);
 }
 $50 = (($3) + 3)|0;
 $51 = ($$1141|0)>($50|0);
 if ($51) {
  $52 = (Math_fround(($$1141|0)));
  $53 = Math_fround($52 * $52);
  $54 = Math_fround($$1144 + $53);
  $55 = Math_fround(HEAPF32[$5>>2]);
  $56 = Math_fround($55 * $52);
  $57 = Math_fround($54 + $56);
  $58 = HEAP32[$1>>2]|0;
  $59 = (($58) + ($$1141))|0;
  HEAP32[$1>>2] = $59;
  $$3146$lcssa = $57;
 } else {
  $60 = ($$1141|0)>(0);
  if ($60) {
   $61 = Math_fround(HEAPF32[$0>>2]);
   $$0137158 = 0;$$2149156 = $$1148;$$3146157 = $$1144;
   while(1) {
    $62 = Math_fround($$3146157 + Math_fround(1.0));
    $63 = Math_fround($$2149156 + $61);
    $64 = Math_fround(HEAPF32[$5>>2]);
    $65 = Math_fround($62 + $64);
    $66 = Math_fround($63 * $63);
    $$0 = $65;$$0133 = $66;$$0135 = 0;$$4 = 1;
    while(1) {
     $67 = (($0) + ($$4<<2)|0);
     $68 = Math_fround(HEAPF32[$67>>2]);
     $69 = Math_fround($$2149156 + $68);
     $70 = (($5) + ($$4<<2)|0);
     $71 = Math_fround(HEAPF32[$70>>2]);
     $72 = Math_fround($62 + $71);
     $73 = Math_fround($69 * $69);
     $74 = Math_fround($$0 * $73);
     $75 = Math_fround($$0133 * $72);
     $76 = $74 > $75;
     $$1136 = $76 ? $$4 : $$0135;
     $$1134 = $76 ? $73 : $$0133;
     $$1 = $76 ? $72 : $$0;
     $77 = (($$4) + 1)|0;
     $78 = ($77|0)<($3|0);
     if ($78) {
      $$0 = $$1;$$0133 = $$1134;$$0135 = $$1136;$$4 = $77;
     } else {
      break;
     }
    }
    $79 = (($0) + ($$1136<<2)|0);
    $80 = Math_fround(HEAPF32[$79>>2]);
    $81 = Math_fround($$2149156 + $80);
    $82 = (($5) + ($$1136<<2)|0);
    $83 = Math_fround(HEAPF32[$82>>2]);
    $84 = Math_fround($62 + $83);
    $85 = Math_fround($83 + Math_fround(2.0));
    HEAPF32[$82>>2] = $85;
    $86 = (($1) + ($$1136<<2)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = (($87) + 1)|0;
    HEAP32[$86>>2] = $88;
    $89 = (($$0137158) + 1)|0;
    $exitcond = ($89|0)==($$1141|0);
    if ($exitcond) {
     $$3146$lcssa = $84;
     break;
    } else {
     $$0137158 = $89;$$2149156 = $81;$$3146157 = $84;
    }
   }
  } else {
   $$3146$lcssa = $$1144;
  }
 }
 $$5 = 0;
 while(1) {
  $90 = (($1) + ($$5<<2)|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = (($6) + ($$5<<2)|0);
  $93 = HEAP32[$92>>2]|0;
  $94 = (0 - ($93))|0;
  $95 = $91 ^ $94;
  $96 = (($95) + ($93))|0;
  HEAP32[$90>>2] = $96;
  $97 = (($$5) + 1)|0;
  $98 = ($97|0)<($3|0);
  if ($98) {
   $$5 = $97;
  } else {
   break;
  }
 }
 STACKTOP = sp;return (Math_fround($$3146$lcssa));
}
function _alg_quant($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = Math_fround($6);
 $7 = $7|0;
 $8 = $8|0;
 var $$0$i = 0, $$0$i29 = 0, $$025$i = 0, $$026$i = 0, $$027$i = 0, $$028$i = 0, $$alloca_mul = 0, $10 = 0, $11 = Math_fround(0), $12 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15 = Math_fround(0), $16 = 0, $17 = 0, $18 = Math_fround(0), $19 = Math_fround(0), $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $9 = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $9 = (($1) + 3)|0;
 $$alloca_mul = $9<<2;
 $10 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 _exp_rotation($0,$1,1,$4,$2,$3);
 $11 = (Math_fround(_op_pvq_search_c($0,$10,$2,$1,0)));
 _encode_pulses($10,$1,$2,$5);
 $12 = ($7|0)==(0);
 if (!($12)) {
  $13 = (Math_fround(Math_sqrt((Math_fround($11)))));
  $14 = Math_fround(Math_fround(1.0) / $13);
  $15 = Math_fround($14 * $6);
  $$0$i = 0;
  while(1) {
   $16 = (($10) + ($$0$i<<2)|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (Math_fround(($17|0)));
   $19 = Math_fround($15 * $18);
   $20 = (($0) + ($$0$i<<2)|0);
   HEAPF32[$20>>2] = $19;
   $21 = (($$0$i) + 1)|0;
   $22 = ($21|0)<($1|0);
   if ($22) {
    $$0$i = $21;
   } else {
    break;
   }
  }
  _exp_rotation($0,$1,-1,$4,$2,$3);
 }
 $23 = ($4|0)<(2);
 if ($23) {
  $$027$i = 1;
  STACKTOP = sp;return ($$027$i|0);
 }
 $24 = (($1>>>0) / ($4>>>0))&-1;
 $$026$i = 0;$$028$i = 0;
 while(1) {
  $25 = Math_imul($$026$i, $24)|0;
  $$0$i29 = 0;$$025$i = 0;
  while(1) {
   $26 = (($$025$i) + ($25))|0;
   $27 = (($10) + ($26<<2)|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = $28 | $$0$i29;
   $30 = (($$025$i) + 1)|0;
   $31 = ($30|0)<($24|0);
   if ($31) {
    $$0$i29 = $29;$$025$i = $30;
   } else {
    break;
   }
  }
  $32 = ($29|0)!=(0);
  $33 = $32&1;
  $34 = $33 << $$026$i;
  $35 = $34 | $$028$i;
  $36 = (($$026$i) + 1)|0;
  $exitcond$i = ($36|0)==($4|0);
  if ($exitcond$i) {
   $$027$i = $35;
   break;
  } else {
   $$026$i = $36;$$028$i = $35;
  }
 }
 STACKTOP = sp;return ($$027$i|0);
}
function _alg_unquant($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = Math_fround($6);
 var $$0$i = 0, $$0$i19 = 0, $$025$i = 0, $$026$i = 0, $$027$i = 0, $$028$i = 0, $$alloca_mul = 0, $10 = Math_fround(0), $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = Math_fround(0), $15 = Math_fround(0), $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $7 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$alloca_mul = $1<<2;
 $7 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $8 = (Math_fround(_decode_pulses($7,$1,$2,$5)));
 $9 = (Math_fround(Math_sqrt((Math_fround($8)))));
 $10 = Math_fround(Math_fround(1.0) / $9);
 $11 = Math_fround($10 * $6);
 $$0$i = 0;
 while(1) {
  $12 = (($7) + ($$0$i<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (Math_fround(($13|0)));
  $15 = Math_fround($11 * $14);
  $16 = (($0) + ($$0$i<<2)|0);
  HEAPF32[$16>>2] = $15;
  $17 = (($$0$i) + 1)|0;
  $18 = ($17|0)<($1|0);
  if ($18) {
   $$0$i = $17;
  } else {
   break;
  }
 }
 _exp_rotation($0,$1,-1,$4,$2,$3);
 $19 = ($4|0)<(2);
 if ($19) {
  $$027$i = 1;
  STACKTOP = sp;return ($$027$i|0);
 }
 $20 = (($1>>>0) / ($4>>>0))&-1;
 $$026$i = 0;$$028$i = 0;
 while(1) {
  $21 = Math_imul($$026$i, $20)|0;
  $$0$i19 = 0;$$025$i = 0;
  while(1) {
   $22 = (($$025$i) + ($21))|0;
   $23 = (($7) + ($22<<2)|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = $24 | $$0$i19;
   $26 = (($$025$i) + 1)|0;
   $27 = ($26|0)<($20|0);
   if ($27) {
    $$0$i19 = $25;$$025$i = $26;
   } else {
    break;
   }
  }
  $28 = ($25|0)!=(0);
  $29 = $28&1;
  $30 = $29 << $$026$i;
  $31 = $30 | $$028$i;
  $32 = (($$026$i) + 1)|0;
  $exitcond$i = ($32|0)==($4|0);
  if ($exitcond$i) {
   $$027$i = $31;
   break;
  } else {
   $$026$i = $32;$$028$i = $31;
  }
 }
 STACKTOP = sp;return ($$027$i|0);
}
function _renormalise_vector($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = Math_fround($2);
 $3 = $3|0;
 var $$01011$i = 0, $$012$i = Math_fround(0), $$02324 = 0, $$025 = 0, $10 = Math_fround(0), $11 = Math_fround(0), $12 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = Math_fround(0), $7 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $exitcond = 0, $exitcond$i = 0, $phitmp = Math_fround(0);
 var label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($1|0)>(0);
 if (!($4)) {
  return;
 }
 $$01011$i = 0;$$012$i = Math_fround(0.0);
 while(1) {
  $5 = (($0) + ($$01011$i<<2)|0);
  $6 = Math_fround(HEAPF32[$5>>2]);
  $7 = Math_fround($6 * $6);
  $8 = Math_fround($$012$i + $7);
  $9 = (($$01011$i) + 1)|0;
  $exitcond$i = ($9|0)==($1|0);
  if ($exitcond$i) {
   break;
  } else {
   $$01011$i = $9;$$012$i = $8;
  }
 }
 $phitmp = Math_fround($8 + Math_fround(1.0E-15));
 $10 = (Math_fround(Math_sqrt((Math_fround($phitmp)))));
 $11 = Math_fround(Math_fround(1.0) / $10);
 $12 = Math_fround($11 * $2);
 if (!($4)) {
  return;
 }
 $$02324 = 0;$$025 = $0;
 while(1) {
  $13 = Math_fround(HEAPF32[$$025>>2]);
  $14 = Math_fround($12 * $13);
  HEAPF32[$$025>>2] = $14;
  $15 = ((($$025)) + 4|0);
  $16 = (($$02324) + 1)|0;
  $exitcond = ($16|0)==($1|0);
  if ($exitcond) {
   break;
  } else {
   $$02324 = $16;$$025 = $15;
  }
 }
 return;
}
function _stereo_itheta($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i = Math_fround(0), $$01011$i = 0, $$01011$i52 = 0, $$012$i = Math_fround(0), $$012$i51 = Math_fround(0), $$04758 = Math_fround(0), $$04857 = Math_fround(0), $$059 = 0, $$1 = Math_fround(0), $$149 = Math_fround(0), $10 = Math_fround(0), $11 = Math_fround(0), $12 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15 = Math_fround(0), $16 = Math_fround(0), $17 = 0, $18 = 0, $19 = Math_fround(0);
 var $20 = Math_fround(0), $21 = Math_fround(0), $22 = 0, $23 = Math_fround(0), $24 = 0, $25 = Math_fround(0), $26 = Math_fround(0), $27 = Math_fround(0), $28 = 0, $29 = Math_fround(0), $30 = Math_fround(0), $31 = Math_fround(0), $32 = Math_fround(0), $33 = Math_fround(0), $34 = 0, $35 = 0, $36 = Math_fround(0), $37 = Math_fround(0), $38 = Math_fround(0), $39 = Math_fround(0);
 var $40 = Math_fround(0), $41 = Math_fround(0), $42 = Math_fround(0), $43 = Math_fround(0), $44 = Math_fround(0), $45 = Math_fround(0), $46 = Math_fround(0), $47 = Math_fround(0), $48 = Math_fround(0), $49 = Math_fround(0), $5 = 0, $50 = Math_fround(0), $51 = Math_fround(0), $52 = Math_fround(0), $53 = Math_fround(0), $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = Math_fround(0);
 var $59 = Math_fround(0), $6 = 0, $60 = Math_fround(0), $61 = Math_fround(0), $62 = Math_fround(0), $63 = 0, $7 = 0, $8 = Math_fround(0), $9 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i53 = 0, $phitmp = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($2|0)==(0);
 $6 = ($3|0)>(0);
 if ($5) {
  if ($6) {
   $$01011$i = 0;$$012$i = Math_fround(0.0);
   while(1) {
    $18 = (($0) + ($$01011$i<<2)|0);
    $19 = Math_fround(HEAPF32[$18>>2]);
    $20 = Math_fround($19 * $19);
    $21 = Math_fround($$012$i + $20);
    $22 = (($$01011$i) + 1)|0;
    $exitcond$i = ($22|0)==($3|0);
    if ($exitcond$i) {
     break;
    } else {
     $$01011$i = $22;$$012$i = $21;
    }
   }
   $23 = Math_fround($21 + Math_fround(1.0E-15));
   $$01011$i52 = 0;$$012$i51 = Math_fround(0.0);
   while(1) {
    $24 = (($1) + ($$01011$i52<<2)|0);
    $25 = Math_fround(HEAPF32[$24>>2]);
    $26 = Math_fround($25 * $25);
    $27 = Math_fround($$012$i51 + $26);
    $28 = (($$01011$i52) + 1)|0;
    $exitcond$i53 = ($28|0)==($3|0);
    if ($exitcond$i53) {
     break;
    } else {
     $$01011$i52 = $28;$$012$i51 = $27;
    }
   }
   $phitmp = Math_fround($27 + Math_fround(1.0E-15));
   $$1 = $23;$$149 = $phitmp;
  } else {
   $$1 = Math_fround(1.0E-15);$$149 = Math_fround(1.0E-15);
  }
 } else {
  if ($6) {
   $$04758 = Math_fround(1.0E-15);$$04857 = Math_fround(1.0E-15);$$059 = 0;
   while(1) {
    $7 = (($0) + ($$059<<2)|0);
    $8 = Math_fround(HEAPF32[$7>>2]);
    $9 = (($1) + ($$059<<2)|0);
    $10 = Math_fround(HEAPF32[$9>>2]);
    $11 = Math_fround($8 + $10);
    $12 = Math_fround($8 - $10);
    $13 = Math_fround($11 * $11);
    $14 = Math_fround($$04758 + $13);
    $15 = Math_fround($12 * $12);
    $16 = Math_fround($$04857 + $15);
    $17 = (($$059) + 1)|0;
    $exitcond = ($17|0)==($3|0);
    if ($exitcond) {
     $$1 = $14;$$149 = $16;
     break;
    } else {
     $$04758 = $14;$$04857 = $16;$$059 = $17;
    }
   }
  } else {
   $$1 = Math_fround(1.0E-15);$$149 = Math_fround(1.0E-15);
  }
 }
 $29 = (Math_fround(Math_sqrt((Math_fround($$1)))));
 $30 = (Math_fround(Math_sqrt((Math_fround($$149)))));
 $31 = Math_fround($29 * $29);
 $32 = Math_fround($30 * $30);
 $33 = Math_fround($32 + $31);
 $34 = $33 < Math_fround(1.00000005E-18);
 if ($34) {
  $$0$i = Math_fround(0.0);
  $60 = Math_fround($$0$i * Math_fround(10430.3818));
  $61 = Math_fround($60 + Math_fround(0.5));
  $62 = (Math_fround(Math_floor((Math_fround($61)))));
  $63 = (~~(($62)));
  return ($63|0);
 }
 $35 = $31 < $32;
 if ($35) {
  $36 = Math_fround($31 * Math_fround(0.678484022));
  $37 = Math_fround($32 + $36);
  $38 = Math_fround($31 * Math_fround(0.0859554186));
  $39 = Math_fround($32 + $38);
  $40 = Math_fround($37 * $39);
  $41 = Math_fround($30 * $29);
  $42 = Math_fround($31 * Math_fround(0.431579739));
  $43 = Math_fround($32 + $42);
  $44 = Math_fround($41 * $43);
  $45 = Math_fround(- $44);
  $46 = Math_fround($45 / $40);
  $47 = Math_fround($46 + Math_fround(1.57079637));
  $$0$i = $47;
  $60 = Math_fround($$0$i * Math_fround(10430.3818));
  $61 = Math_fround($60 + Math_fround(0.5));
  $62 = (Math_fround(Math_floor((Math_fround($61)))));
  $63 = (~~(($62)));
  return ($63|0);
 } else {
  $48 = Math_fround($32 * Math_fround(0.678484022));
  $49 = Math_fround($31 + $48);
  $50 = Math_fround($32 * Math_fround(0.0859554186));
  $51 = Math_fround($31 + $50);
  $52 = Math_fround($49 * $51);
  $53 = Math_fround($30 * $29);
  $54 = Math_fround($32 * Math_fround(0.431579739));
  $55 = Math_fround($31 + $54);
  $56 = Math_fround($53 * $55);
  $57 = Math_fround($56 / $52);
  $58 = Math_fround($57 + Math_fround(1.57079637));
  $59 = Math_fround($58 + Math_fround(-1.57079637));
  $$0$i = $59;
  $60 = Math_fround($$0$i * Math_fround(10430.3818));
  $61 = Math_fround($60 + Math_fround(0.5));
  $62 = (Math_fround(Math_floor((Math_fround($61)))));
  $63 = (~~(($62)));
  return ($63|0);
 }
 return (0)|0;
}
function _silk_Get_Decoder_Size($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 8552;
 return 0;
}
function _silk_InitDecoder($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_silk_init_decoder($0)|0);
 $1 = ((($0)) + 4264|0);
 $2 = (_silk_init_decoder($1)|0);
 $3 = ((($0)) + 8528|0);
 ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
 $4 = ((($0)) + 8548|0);
 HEAP32[$4>>2] = 0;
 return ($2|0);
}
function _silk_Decode($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$ = 0, $$0$us = 0, $$0$us385 = 0, $$0321408 = 0, $$0326423 = 0, $$0333 = 0, $$0341 = 0, $$0342$in = 0, $$0342$in$ph = 0, $$1322398 = 0, $$1327419 = 0, $$1334418 = 0, $$2 = 0, $$2323393 = 0, $$2328413 = 0, $$3329401 = 0, $$3336 = 0, $$3366 = 0, $$368 = 0, $$4330388 = 0;
 var $$4330388$us = 0, $$4337$lcssa = 0, $$4337$lcssa463 = 0, $$4337$lcssa464 = 0, $$4337376 = 0, $$4337376$us = 0, $$4337376$us384 = 0, $$4362 = 0, $$5338 = 0, $$5338$us386 = 0, $$5364 = 0, $$6332377 = 0, $$6332377$us = 0, $$6332377$us383 = 0, $$6339$lcssa = 0, $$6339369 = 0, $$6361 = 0, $$7340 = 0, $$7370 = 0, $$alloca_mul = 0;
 var $$alloca_mul6 = 0, $$alloca_mul8 = 0, $$lcssa = 0, $$lcssa356 = 0, $$lcssa357 = 0, $$lcssa358 = 0, $$lcssa359 = 0, $$off = 0, $$phi$trans$insert = 0, $$phi$trans$insert453 = 0, $$pr = 0, $$pr461 = 0, $$pre = 0, $$pre$phi459Z2D = 0, $$pre442 = 0, $$pre443 = 0, $$pre444 = 0, $$pre445 = 0, $$pre447 = 0, $$pre450 = 0;
 var $$pre454 = 0, $$pre455 = 0, $$pre456 = 0, $$sink = 0, $$sink441 = 0, $$sink506 = 0, $$sink508 = 0, $$sink510 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond343 = 0, $or$cond348 = 0, $or$cond484 = 0;
 var $or$cond5 = 0, $or$cond5$us = 0, $or$cond7 = 0, $or$cond9 = 0, $sext = 0, $spec$select = 0, $spec$select485 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 672|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(672|0);
 $8 = sp + 660|0;
 $9 = sp + 656|0;
 $10 = sp + 648|0;
 $11 = sp + 640|0;
 $12 = sp;
 HEAP32[$8>>2] = 0;
 $13 = $11;
 $14 = $13;
 HEAP32[$14>>2] = 0;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = 0;
 $17 = ($3|0)!=(0);
 $$phi$trans$insert = ((($1)) + 4|0);
 $$pre = HEAP32[$$phi$trans$insert>>2]|0;
 $18 = ($$pre|0)>(0);
 $or$cond = $17 & $18;
 if ($or$cond) {
  $$0326423 = 0;
  while(1) {
   $19 = (((($0) + (($$0326423*4264)|0)|0)) + 2388|0);
   HEAP32[$19>>2] = 0;
   $20 = (($$0326423) + 1)|0;
   $21 = ($20|0)<($$pre|0);
   if ($21) {
    $$0326423 = $20;
   } else {
    break;
   }
  }
 }
 $22 = ((($0)) + 8544|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($$pre|0)>($23|0);
 if ($24) {
  $25 = ((($0)) + 4264|0);
  $26 = (_silk_init_decoder($25)|0);
  $$pr = HEAP32[$$phi$trans$insert>>2]|0;
  $$0333 = $26;$28 = $$pr;
 } else {
  $$0333 = 0;$28 = $$pre;
 }
 $27 = ($28|0)==(1);
 if ($27) {
  $29 = HEAP32[$22>>2]|0;
  $30 = ($29|0)==(2);
  if ($30) {
   $31 = ((($1)) + 12|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ((($0)) + 2316|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ($34*1000)|0;
   $36 = ($32|0)==($35|0);
   $412 = $36;
  } else {
   $412 = 0;
  }
 } else {
  $412 = 0;
 }
 $37 = ((($0)) + 2388|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38|0)==(0);
 $40 = ($28|0)>(0);
 $or$cond484 = $39 & $40;
 L13: do {
  if ($or$cond484) {
   $41 = ((($1)) + 16|0);
   $42 = ((($1)) + 12|0);
   $43 = ((($1)) + 8|0);
   $$1327419 = 0;$$1334418 = $$0333;
   L15: while(1) {
    $44 = HEAP32[$41>>2]|0;
    switch ($44|0) {
    case 10: case 0:  {
     $$sink = 2;$$sink506 = 1;
     break;
    }
    case 20:  {
     $$sink = 4;$$sink506 = 1;
     break;
    }
    case 40:  {
     $$sink = 4;$$sink506 = 2;
     break;
    }
    case 60:  {
     $$sink = 4;$$sink506 = 3;
     break;
    }
    default: {
     $$2 = -203;
     label = 134;
     break L15;
    }
    }
    $45 = (((($0) + (($$1327419*4264)|0)|0)) + 2392|0);
    HEAP32[$45>>2] = $$sink506;
    $46 = (((($0) + (($$1327419*4264)|0)|0)) + 2324|0);
    HEAP32[$46>>2] = $$sink;
    $47 = HEAP32[$42>>2]|0;
    $48 = $47 >> 10;
    switch ($48|0) {
    case 7: case 11: case 15:  {
     break;
    }
    default: {
     $$2 = -200;
     label = 134;
     break L15;
    }
    }
    $49 = (($48) + 1)|0;
    $50 = (($0) + (($$1327419*4264)|0)|0);
    $51 = HEAP32[$43>>2]|0;
    $52 = (_silk_decoder_set_fs($50,$49,$51)|0);
    $53 = (($52) + ($$1334418))|0;
    $54 = (($$1327419) + 1)|0;
    $55 = HEAP32[$$phi$trans$insert>>2]|0;
    $56 = ($54|0)<($55|0);
    if ($56) {
     $$1327419 = $54;$$1334418 = $53;
    } else {
     $$3336 = $53;$60 = $55;
     break L13;
    }
   }
   if ((label|0) == 134) {
    STACKTOP = sp;return ($$2|0);
   }
  } else {
   $$3336 = $$0333;$60 = $28;
  }
 } while(0);
 $57 = HEAP32[$1>>2]|0;
 $58 = ($57|0)==(2);
 do {
  if ($58) {
   $59 = ($60|0)==(2);
   if ($59) {
    $61 = ((($0)) + 8540|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = ($62|0)==(1);
    if (!($63)) {
     $64 = HEAP32[$22>>2]|0;
     $65 = ($64|0)==(1);
     if (!($65)) {
      $71 = 2;$72 = 2;
      break;
     }
    }
    $66 = ((($0)) + 8528|0);
    HEAP32[$66>>2] = 0;
    $67 = ((($0)) + 8536|0);
    HEAP32[$67>>2] = 0;
    $68 = ((($0)) + 6696|0);
    $69 = ((($0)) + 2432|0);
    _memcpy(($68|0),($69|0),300)|0;
    $$pre442 = HEAP32[$1>>2]|0;
    $$pre443 = HEAP32[$$phi$trans$insert>>2]|0;
    $71 = $$pre442;$72 = $$pre443;
   } else {
    $71 = 2;$72 = $60;
   }
  } else {
   $71 = $57;$72 = $60;
  }
 } while(0);
 $70 = ((($0)) + 8540|0);
 HEAP32[$70>>2] = $71;
 HEAP32[$22>>2] = $72;
 $73 = ((($1)) + 8|0);
 $74 = HEAP32[$73>>2]|0;
 $$off = (($74) + -8000)|0;
 $75 = ($$off>>>0)>(40000);
 if ($75) {
  $$2 = -200;
  STACKTOP = sp;return ($$2|0);
 }
 $76 = ($2|0)==(1);
 if ($76) {
  $174 = $72;
 } else {
  $77 = HEAP32[$37>>2]|0;
  $78 = ($77|0)==(0);
  if ($78) {
   $79 = ($72|0)>(0);
   if ($79) {
    $$2328413 = 0;
    while(1) {
     $80 = (((($0) + (($$2328413*4264)|0)|0)) + 2392|0);
     $81 = HEAP32[$80>>2]|0;
     $82 = ($81|0)>(0);
     $83 = (_ec_dec_bit_logp($4,1)|0);
     if ($82) {
      $$0321408 = 0;$85 = $83;
      while(1) {
       $84 = ((((($0) + (($$2328413*4264)|0)|0)) + 2404|0) + ($$0321408<<2)|0);
       HEAP32[$84>>2] = $85;
       $86 = (($$0321408) + 1)|0;
       $87 = HEAP32[$80>>2]|0;
       $88 = ($86|0)<($87|0);
       $89 = (_ec_dec_bit_logp($4,1)|0);
       if ($88) {
        $$0321408 = $86;$85 = $89;
       } else {
        $$lcssa359 = $89;
        break;
       }
      }
     } else {
      $$lcssa359 = $83;
     }
     $90 = (((($0) + (($$2328413*4264)|0)|0)) + 2416|0);
     HEAP32[$90>>2] = $$lcssa359;
     $91 = (($$2328413) + 1)|0;
     $92 = HEAP32[$$phi$trans$insert>>2]|0;
     $93 = ($91|0)<($92|0);
     if ($93) {
      $$2328413 = $91;
     } else {
      break;
     }
    }
    $94 = ($92|0)>(0);
    if ($94) {
     $$3329401 = 0;
     while(1) {
      $95 = (((($0) + (($$3329401*4264)|0)|0)) + 2420|0);
      ;HEAP32[$95>>2]=0|0;HEAP32[$95+4>>2]=0|0;HEAP32[$95+8>>2]=0|0;
      $96 = (((($0) + (($$3329401*4264)|0)|0)) + 2416|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = ($97|0)==(0);
      do {
       if (!($98)) {
        $99 = (((($0) + (($$3329401*4264)|0)|0)) + 2392|0);
        $100 = HEAP32[$99>>2]|0;
        $101 = ($100|0)==(1);
        if ($101) {
         HEAP32[$95>>2] = 1;
         break;
        }
        $102 = (($100) + -2)|0;
        $103 = (36764 + ($102<<2)|0);
        $104 = HEAP32[$103>>2]|0;
        $105 = (_ec_dec_icdf($4,$104,8)|0);
        $106 = (($105) + 1)|0;
        $107 = HEAP32[$99>>2]|0;
        $108 = ($107|0)>(0);
        if ($108) {
         $$1322398 = 0;
         while(1) {
          $109 = $106 >>> $$1322398;
          $110 = $109 & 1;
          $111 = ((((($0) + (($$3329401*4264)|0)|0)) + 2420|0) + ($$1322398<<2)|0);
          HEAP32[$111>>2] = $110;
          $112 = (($$1322398) + 1)|0;
          $113 = ($112|0)<($107|0);
          if ($113) {
           $$1322398 = $112;
          } else {
           break;
          }
         }
        }
       }
      } while(0);
      $114 = (($$3329401) + 1)|0;
      $115 = HEAP32[$$phi$trans$insert>>2]|0;
      $116 = ($114|0)<($115|0);
      if ($116) {
       $$3329401 = $114;
      } else {
       $$lcssa358 = $115;
       break;
      }
     }
    } else {
     $$lcssa358 = $92;
    }
   } else {
    $$lcssa358 = $72;
   }
   $117 = ($2|0)==(0);
   if ($117) {
    $118 = ((($0)) + 2392|0);
    $119 = HEAP32[$118>>2]|0;
    $120 = ($119|0)>(0);
    if ($120) {
     $121 = ((($0)) + 6684|0);
     $$2323393 = 0;$123 = $$lcssa358;
     while(1) {
      $122 = ($123|0)>(0);
      if ($122) {
       $124 = (($121) + ($$2323393<<2)|0);
       $125 = ($$2323393|0)==(0);
       $126 = (($$2323393) + -1)|0;
       if ($125) {
        $$4330388$us = 0;$132 = $123;
        while(1) {
         $127 = (($0) + (($$4330388$us*4264)|0)|0);
         $128 = (((($0) + (($$4330388$us*4264)|0)|0)) + 2420|0);
         $129 = HEAP32[$128>>2]|0;
         $130 = ($129|0)==(0);
         if ($130) {
          $146 = $132;
         } else {
          $131 = ($132|0)==(2);
          $133 = ($$4330388$us|0)==(0);
          $or$cond5$us = $133 & $131;
          do {
           if ($or$cond5$us) {
            _silk_stereo_decode_pred($4,$11);
            $134 = HEAP32[$124>>2]|0;
            $135 = ($134|0)==(0);
            if (!($135)) {
             break;
            }
            _silk_stereo_decode_mid_only($4,$8);
           }
          } while(0);
          _silk_decode_indices($127,$4,0,1,0);
          $136 = (((($0) + (($$4330388$us*4264)|0)|0)) + 2765|0);
          $137 = HEAP8[$136>>0]|0;
          $138 = $137 << 24 >> 24;
          $139 = (((($0) + (($$4330388$us*4264)|0)|0)) + 2766|0);
          $140 = HEAP8[$139>>0]|0;
          $141 = $140 << 24 >> 24;
          $142 = (((($0) + (($$4330388$us*4264)|0)|0)) + 2328|0);
          $143 = HEAP32[$142>>2]|0;
          _silk_decode_pulses($4,$12,$138,$141,$143);
          $$pre445 = HEAP32[$$phi$trans$insert>>2]|0;
          $146 = $$pre445;
         }
         $144 = (($$4330388$us) + 1)|0;
         $145 = ($144|0)<($146|0);
         if ($145) {
          $$4330388$us = $144;$132 = $146;
         } else {
          $413 = $146;
          break;
         }
        }
       } else {
        $$4330388 = 0;$152 = $123;
        while(1) {
         $147 = (($0) + (($$4330388*4264)|0)|0);
         $148 = ((((($0) + (($$4330388*4264)|0)|0)) + 2420|0) + ($$2323393<<2)|0);
         $149 = HEAP32[$148>>2]|0;
         $150 = ($149|0)==(0);
         if ($150) {
          $169 = $152;
         } else {
          $151 = ($152|0)==(2);
          $153 = ($$4330388|0)==(0);
          $or$cond5 = $153 & $151;
          do {
           if ($or$cond5) {
            _silk_stereo_decode_pred($4,$11);
            $154 = HEAP32[$124>>2]|0;
            $155 = ($154|0)==(0);
            if (!($155)) {
             break;
            }
            _silk_stereo_decode_mid_only($4,$8);
           }
          } while(0);
          $156 = ((((($0) + (($$4330388*4264)|0)|0)) + 2420|0) + ($126<<2)|0);
          $157 = HEAP32[$156>>2]|0;
          $158 = ($157|0)==(0);
          $spec$select = $158 ? 0 : 2;
          _silk_decode_indices($147,$4,$$2323393,1,$spec$select);
          $159 = (((($0) + (($$4330388*4264)|0)|0)) + 2765|0);
          $160 = HEAP8[$159>>0]|0;
          $161 = $160 << 24 >> 24;
          $162 = (((($0) + (($$4330388*4264)|0)|0)) + 2766|0);
          $163 = HEAP8[$162>>0]|0;
          $164 = $163 << 24 >> 24;
          $165 = (((($0) + (($$4330388*4264)|0)|0)) + 2328|0);
          $166 = HEAP32[$165>>2]|0;
          _silk_decode_pulses($4,$12,$161,$164,$166);
          $$pre444 = HEAP32[$$phi$trans$insert>>2]|0;
          $169 = $$pre444;
         }
         $167 = (($$4330388) + 1)|0;
         $168 = ($167|0)<($169|0);
         if ($168) {
          $$4330388 = $167;$152 = $169;
         } else {
          $413 = $169;
          break;
         }
        }
       }
      } else {
       $413 = $123;
      }
      $170 = (($$2323393) + 1)|0;
      $171 = HEAP32[$118>>2]|0;
      $172 = ($170|0)<($171|0);
      if ($172) {
       $$2323393 = $170;$123 = $413;
      } else {
       $174 = $413;
       break;
      }
     }
    } else {
     $174 = $$lcssa358;
    }
   } else {
    $174 = $$lcssa358;
   }
  } else {
   $174 = $72;
  }
 }
 $173 = ($174|0)==(2);
 do {
  if ($173) {
   switch ($2|0) {
   case 0:  {
    _silk_stereo_decode_pred($4,$11);
    $180 = ((($0)) + 6668|0);
    $181 = HEAP32[$37>>2]|0;
    $182 = (($180) + ($181<<2)|0);
    $183 = HEAP32[$182>>2]|0;
    $184 = ($183|0)==(0);
    if ($184) {
     label = 65;
    } else {
     label = 66;
    }
    break;
   }
   case 2:  {
    $175 = ((($0)) + 2420|0);
    $176 = HEAP32[$37>>2]|0;
    $177 = (($175) + ($176<<2)|0);
    $178 = HEAP32[$177>>2]|0;
    $179 = ($178|0)==(1);
    if ($179) {
     _silk_stereo_decode_pred($4,$11);
     $185 = ((($0)) + 6684|0);
     $186 = HEAP32[$37>>2]|0;
     $187 = (($185) + ($186<<2)|0);
     $188 = HEAP32[$187>>2]|0;
     $189 = ($188|0)==(0);
     if ($189) {
      label = 65;
     } else {
      label = 66;
     }
    } else {
     label = 67;
    }
    break;
   }
   default: {
    label = 67;
   }
   }
   if ((label|0) == 65) {
    _silk_stereo_decode_mid_only($4,$8);
    break;
   }
   else if ((label|0) == 66) {
    HEAP32[$8>>2] = 0;
    break;
   }
   else if ((label|0) == 67) {
    $190 = ((($0)) + 8528|0);
    $191 = HEAP16[$190>>1]|0;
    $192 = $191 << 16 >> 16;
    HEAP32[$11>>2] = $192;
    $193 = ((($0)) + 8530|0);
    $194 = HEAP16[$193>>1]|0;
    $195 = $194 << 16 >> 16;
    $196 = ((($11)) + 4|0);
    HEAP32[$196>>2] = $195;
    break;
   }
  }
 } while(0);
 $197 = HEAP32[$$phi$trans$insert>>2]|0;
 $198 = ($197|0)==(2);
 $199 = HEAP32[$8>>2]|0;
 $200 = ($199|0)==(0);
 $or$cond7 = $198 & $200;
 if ($or$cond7) {
  $201 = ((($0)) + 8548|0);
  $202 = HEAP32[$201>>2]|0;
  $203 = ($202|0)==(1);
  if ($203) {
   $204 = ((($0)) + 5548|0);
   $205 = ((($0)) + 6572|0);
   _memset(($204|0),0,1024)|0;
   HEAP32[$205>>2] = 100;
   $206 = ((($0)) + 6576|0);
   HEAP8[$206>>0] = 10;
   $207 = ((($0)) + 8428|0);
   HEAP32[$207>>2] = 0;
   $208 = ((($0)) + 6640|0);
   HEAP32[$208>>2] = 1;
   $$pre447 = HEAP32[$$phi$trans$insert>>2]|0;
   $212 = $$pre447;
  } else {
   $212 = 2;
  }
 } else {
  $212 = $197;
 }
 $209 = ((($1)) + 12|0);
 $210 = HEAP32[$209>>2]|0;
 $211 = Math_imul($212, $210)|0;
 $213 = HEAP32[$73>>2]|0;
 $214 = HEAP32[$1>>2]|0;
 $215 = Math_imul($214, $213)|0;
 $216 = ($211|0)<($215|0);
 if ($216) {
  $217 = (_llvm_stacksave()|0);
  HEAP32[$10>>2] = $5;
  $218 = ((($0)) + 2328|0);
  $$sink508 = $5;$$sink510 = $218;$314 = $10;$411 = $217;
 } else {
  $219 = ((($0)) + 2328|0);
  $220 = HEAP32[$219>>2]|0;
  $221 = (($220) + 2)|0;
  $222 = Math_imul($221, $212)|0;
  $223 = (_llvm_stacksave()|0);
  $$alloca_mul = $222<<1;
  $224 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
  HEAP32[$10>>2] = $224;
  $$sink508 = $224;$$sink510 = $219;$314 = $10;$411 = $223;
 }
 $225 = HEAP32[$$sink510>>2]|0;
 $226 = (($$sink508) + ($225<<1)|0);
 $227 = ((($226)) + 4|0);
 $228 = ((($10)) + 4|0);
 HEAP32[$228>>2] = $227;
 $229 = ($2|0)==(0);
 if ($229) {
  $230 = HEAP32[$8>>2]|0;
  $231 = ($230|0)==(0);
  $$0342$in$ph = $231;
  label = 79;
 } else {
  $232 = ((($0)) + 8548|0);
  $233 = HEAP32[$232>>2]|0;
  $234 = ($233|0)==(0);
  if ($234) {
   $$0342$in$ph = 1;
   label = 79;
  } else {
   $235 = HEAP32[$$phi$trans$insert>>2]|0;
   $236 = ($235|0)==(2);
   $237 = ($2|0)==(2);
   $or$cond9 = $237 & $236;
   if ($or$cond9) {
    $238 = ((($0)) + 6684|0);
    $239 = ((($0)) + 6652|0);
    $240 = HEAP32[$239>>2]|0;
    $241 = (($238) + ($240<<2)|0);
    $242 = HEAP32[$241>>2]|0;
    $243 = ($242|0)==(1);
    $$0342$in$ph = $243;
    label = 79;
   } else {
    $$0342$in = 0;$245 = $235;
   }
  }
 }
 if ((label|0) == 79) {
  $$pr461 = HEAP32[$$phi$trans$insert>>2]|0;
  $$0342$in = $$0342$in$ph;$245 = $$pr461;
 }
 $244 = ($245|0)>(0);
 if ($244) {
  $246 = ($2|0)==(2);
  $247 = ((($0)) + 8548|0);
  L121: do {
   if ($$0342$in) {
    $$4337376$us = $$3336;$$6332377$us = 0;
    while(1) {
     $248 = ($$6332377$us|0)==(0);
     $249 = HEAP32[$37>>2]|0;
     $250 = (($249) - ($$6332377$us))|0;
     $251 = ($250|0)<(1);
     do {
      if ($251) {
       $$0$us = 0;
      } else {
       if ($246) {
        $254 = (($250) + -1)|0;
        $255 = ((((($0) + (($$6332377$us*4264)|0)|0)) + 2420|0) + ($254<<2)|0);
        $256 = HEAP32[$255>>2]|0;
        $257 = ($256|0)==(0);
        $258 = $257 ? 0 : 2;
        $$0$us = $258;
        break;
       }
       if (!($248)) {
        $252 = HEAP32[$247>>2]|0;
        $253 = ($252|0)==(0);
        if (!($253)) {
         $$0$us = 1;
         break;
        }
       }
       $$0$us = 2;
      }
     } while(0);
     $259 = (($0) + (($$6332377$us*4264)|0)|0);
     $260 = (($10) + ($$6332377$us<<2)|0);
     $261 = HEAP32[$260>>2]|0;
     $262 = ((($261)) + 4|0);
     $263 = (_silk_decode_frame($259,$4,$262,$9,$2,$$0$us,$7)|0);
     $264 = (($263) + ($$4337376$us))|0;
     $265 = (((($0) + (($$6332377$us*4264)|0)|0)) + 2388|0);
     $266 = HEAP32[$265>>2]|0;
     $267 = (($266) + 1)|0;
     HEAP32[$265>>2] = $267;
     $268 = (($$6332377$us) + 1)|0;
     $269 = HEAP32[$$phi$trans$insert>>2]|0;
     $270 = ($268|0)<($269|0);
     if ($270) {
      $$4337376$us = $264;$$6332377$us = $268;
     } else {
      $$4337$lcssa = $264;$$lcssa357 = $269;
      break;
     }
    }
   } else {
    $271 = ((($$sink508)) + 4|0);
    if (!($246)) {
     $$4337376 = $$3336;$$6332377 = 0;
     while(1) {
      $293 = ($$6332377|0)==(0);
      if ($293) {
       $294 = HEAP32[$37>>2]|0;
       $295 = ($294|0)>(0);
       $spec$select485 = $295 ? 2 : 0;
       $296 = (_silk_decode_frame($0,$4,$271,$9,$2,$spec$select485,$7)|0);
       $297 = (($296) + ($$4337376))|0;
       $$5338 = $297;
      } else {
       $298 = (($10) + ($$6332377<<2)|0);
       $299 = HEAP32[$298>>2]|0;
       $300 = ((($299)) + 4|0);
       $301 = HEAP32[$9>>2]|0;
       $302 = $301 << 1;
       _memset(($300|0),0,($302|0))|0;
       $$5338 = $$4337376;
      }
      $303 = (((($0) + (($$6332377*4264)|0)|0)) + 2388|0);
      $304 = HEAP32[$303>>2]|0;
      $305 = (($304) + 1)|0;
      HEAP32[$303>>2] = $305;
      $306 = (($$6332377) + 1)|0;
      $307 = HEAP32[$$phi$trans$insert>>2]|0;
      $308 = ($306|0)<($307|0);
      if ($308) {
       $$4337376 = $$5338;$$6332377 = $306;
      } else {
       $$4337$lcssa = $$5338;$$lcssa357 = $307;
       break L121;
      }
     }
    }
    $$4337376$us384 = $$3336;$$6332377$us383 = 0;
    while(1) {
     $272 = ($$6332377$us383|0)==(0);
     if ($272) {
      $278 = HEAP32[$37>>2]|0;
      $279 = ($278|0)<(1);
      if ($279) {
       $$0$us385 = 0;
      } else {
       $280 = (($278) + -1)|0;
       $281 = (((($0)) + 2420|0) + ($280<<2)|0);
       $282 = HEAP32[$281>>2]|0;
       $283 = ($282|0)==(0);
       $284 = $283 ? 0 : 2;
       $$0$us385 = $284;
      }
      $285 = (_silk_decode_frame($0,$4,$271,$9,2,$$0$us385,$7)|0);
      $286 = (($285) + ($$4337376$us384))|0;
      $$5338$us386 = $286;
     } else {
      $273 = (($10) + ($$6332377$us383<<2)|0);
      $274 = HEAP32[$273>>2]|0;
      $275 = ((($274)) + 4|0);
      $276 = HEAP32[$9>>2]|0;
      $277 = $276 << 1;
      _memset(($275|0),0,($277|0))|0;
      $$5338$us386 = $$4337376$us384;
     }
     $287 = (((($0) + (($$6332377$us383*4264)|0)|0)) + 2388|0);
     $288 = HEAP32[$287>>2]|0;
     $289 = (($288) + 1)|0;
     HEAP32[$287>>2] = $289;
     $290 = (($$6332377$us383) + 1)|0;
     $291 = HEAP32[$$phi$trans$insert>>2]|0;
     $292 = ($290|0)<($291|0);
     if ($292) {
      $$4337376$us384 = $$5338$us386;$$6332377$us383 = $290;
     } else {
      $$4337$lcssa = $$5338$us386;$$lcssa357 = $291;
      break;
     }
    }
   }
  } while(0);
  $309 = HEAP32[$1>>2]|0;
  $310 = ($309|0)==(2);
  $311 = ($$lcssa357|0)==(2);
  $or$cond343 = $311 & $310;
  if ($or$cond343) {
   $312 = ((($0)) + 8528|0);
   $313 = HEAP32[$314>>2]|0;
   $315 = ((($0)) + 2316|0);
   $316 = HEAP32[$315>>2]|0;
   $317 = HEAP32[$9>>2]|0;
   _silk_stereo_MS_to_LR($312,$313,$227,$11,$316,$317);
   $$pre450 = HEAP32[$9>>2]|0;
   $$4337$lcssa463 = $$4337$lcssa;$$pre$phi459Z2D = $315;$325 = $$pre450;$414 = $313;
  } else {
   $$4337$lcssa464 = $$4337$lcssa;
   label = 105;
  }
 } else {
  $$4337$lcssa464 = $$3336;
  label = 105;
 }
 if ((label|0) == 105) {
  $318 = ((($0)) + 8532|0);
  $319 = HEAPU16[$318>>1]|(HEAPU16[$318+2>>1]<<16);
  HEAP16[$$sink508>>1]=$319&65535;HEAP16[$$sink508+2>>1]=$319>>>16;
  $320 = HEAP32[$9>>2]|0;
  $321 = (($$sink508) + ($320<<1)|0);
  $322 = HEAPU16[$321>>1]|(HEAPU16[$321+2>>1]<<16);
  HEAP16[$318>>1]=$322&65535;HEAP16[$318+2>>1]=$322>>>16;
  $$pre456 = ((($0)) + 2316|0);
  $$4337$lcssa463 = $$4337$lcssa464;$$pre$phi459Z2D = $$pre456;$325 = $320;$414 = $$sink508;
 }
 $323 = HEAP32[$73>>2]|0;
 $324 = Math_imul($323, $325)|0;
 $326 = HEAP32[$$pre$phi459Z2D>>2]|0;
 $sext = $326 << 16;
 $327 = $sext >> 16;
 $328 = ($327*1000)|0;
 $329 = (($324|0) / ($328|0))&-1;
 HEAP32[$6>>2] = $329;
 $330 = HEAP32[$1>>2]|0;
 $331 = ($330|0)==(2);
 if ($331) {
  $$alloca_mul6 = $329<<1;
  $332 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
  $$0341 = $332;
 } else {
  $$0341 = $5;
 }
 $333 = HEAP32[$$phi$trans$insert>>2]|0;
 if ($216) {
  $334 = ((($0)) + 2328|0);
  $335 = HEAP32[$334>>2]|0;
  $336 = (($335) + 2)|0;
  $337 = Math_imul($336, $333)|0;
  $$alloca_mul8 = $337<<1;
  $338 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul8)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul8)|0)+15)&-16)|0);;
  $339 = $333 << 1;
  $340 = Math_imul($339, $336)|0;
  _memcpy(($338|0),($5|0),($340|0))|0;
  HEAP32[$314>>2] = $338;
  $341 = (($338) + ($335<<1)|0);
  $342 = ((($341)) + 4|0);
  HEAP32[$228>>2] = $342;
  $415 = $338;
 } else {
  $415 = $414;
 }
 $343 = ($330|0)<($333|0);
 $$368 = $343 ? $330 : $333;
 $344 = ($$368|0)>(0);
 L164: do {
  if ($344) {
   $$6339369 = $$4337$lcssa463;$$7370 = 0;$347 = $415;$348 = $325;
   while(1) {
    $345 = (((($0) + (($$7370*4264)|0)|0)) + 2432|0);
    $346 = ((($347)) + 2|0);
    $349 = (_silk_resampler($345,$$0341,$346,$348)|0);
    $350 = (($349) + ($$6339369))|0;
    $351 = HEAP32[$1>>2]|0;
    $352 = ($351|0)==(2);
    if ($352) {
     $353 = HEAP32[$6>>2]|0;
     $354 = ($353|0)>(0);
     if ($354) {
      $$3366 = 0;
      while(1) {
       $355 = (($$0341) + ($$3366<<1)|0);
       $356 = HEAP16[$355>>1]|0;
       $357 = $$3366 << 1;
       $358 = (($357) + ($$7370))|0;
       $359 = (($5) + ($358<<1)|0);
       HEAP16[$359>>1] = $356;
       $360 = (($$3366) + 1)|0;
       $361 = ($360|0)<($353|0);
       if ($361) {
        $$3366 = $360;
       } else {
        break;
       }
      }
     }
    }
    $362 = (($$7370) + 1)|0;
    $363 = HEAP32[$$phi$trans$insert>>2]|0;
    $364 = ($351|0)<($363|0);
    $$ = $364 ? $351 : $363;
    $365 = ($362|0)<($$|0);
    if (!($365)) {
     $$6339$lcssa = $350;$$lcssa = $363;$$lcssa356 = $351;
     break L164;
    }
    $$phi$trans$insert453 = (($10) + ($362<<2)|0);
    $$pre454 = HEAP32[$$phi$trans$insert453>>2]|0;
    $$pre455 = HEAP32[$9>>2]|0;
    $$6339369 = $350;$$7370 = $362;$347 = $$pre454;$348 = $$pre455;
   }
  } else {
   $$6339$lcssa = $$4337$lcssa463;$$lcssa = $333;$$lcssa356 = $330;
  }
 } while(0);
 $366 = ($$lcssa356|0)==(2);
 $367 = ($$lcssa|0)==(1);
 $or$cond348 = $366 & $367;
 do {
  if ($or$cond348) {
   if ($412) {
    $368 = ((($0)) + 6696|0);
    $369 = HEAP32[$314>>2]|0;
    $370 = ((($369)) + 2|0);
    $371 = HEAP32[$9>>2]|0;
    $372 = (_silk_resampler($368,$$0341,$370,$371)|0);
    $373 = (($372) + ($$6339$lcssa))|0;
    $374 = HEAP32[$6>>2]|0;
    $375 = ($374|0)>(0);
    if (!($375)) {
     $$7340 = $373;
     break;
    }
    $$4362 = 0;
    while(1) {
     $376 = (($$0341) + ($$4362<<1)|0);
     $377 = HEAP16[$376>>1]|0;
     $378 = $$4362 << 1;
     $379 = $378 | 1;
     $380 = (($5) + ($379<<1)|0);
     HEAP16[$380>>1] = $377;
     $381 = (($$4362) + 1)|0;
     $382 = ($381|0)<($374|0);
     if ($382) {
      $$4362 = $381;
     } else {
      $$7340 = $373;
      break;
     }
    }
   } else {
    $383 = HEAP32[$6>>2]|0;
    $384 = ($383|0)>(0);
    if (!($384)) {
     $$7340 = $$6339$lcssa;
     break;
    }
    $$5364 = 0;
    while(1) {
     $385 = $$5364 << 1;
     $386 = (($5) + ($385<<1)|0);
     $387 = HEAP16[$386>>1]|0;
     $388 = $385 | 1;
     $389 = (($5) + ($388<<1)|0);
     HEAP16[$389>>1] = $387;
     $390 = (($$5364) + 1)|0;
     $391 = ($390|0)<($383|0);
     if ($391) {
      $$5364 = $390;
     } else {
      $$7340 = $$6339$lcssa;
      break;
     }
    }
   }
  } else {
   $$7340 = $$6339$lcssa;
  }
 } while(0);
 $392 = ((($0)) + 4164|0);
 $393 = HEAP32[$392>>2]|0;
 $394 = ($393|0)==(2);
 if ($394) {
  $395 = ((($0)) + 2308|0);
  $396 = HEAP32[$395>>2]|0;
  $397 = HEAP32[$$pre$phi459Z2D>>2]|0;
  $398 = (($397) + -8)|0;
  $399 = $398 >> 2;
  $400 = (36704 + ($399<<2)|0);
  $401 = HEAP32[$400>>2]|0;
  $402 = Math_imul($401, $396)|0;
  $$sink441 = $402;
 } else {
  $$sink441 = 0;
 }
 $403 = ((($1)) + 20|0);
 HEAP32[$403>>2] = $$sink441;
 if ($76) {
  $404 = HEAP32[$22>>2]|0;
  $405 = ($404|0)>(0);
  if ($405) {
   $$6361 = 0;
   while(1) {
    $406 = (((($0) + (($$6361*4264)|0)|0)) + 2312|0);
    HEAP8[$406>>0] = 10;
    $407 = (($$6361) + 1)|0;
    $408 = ($407|0)<($404|0);
    if ($408) {
     $$6361 = $407;
    } else {
     break;
    }
   }
  }
 } else {
  $409 = HEAP32[$8>>2]|0;
  $410 = ((($0)) + 8548|0);
  HEAP32[$410>>2] = $409;
 }
 _llvm_stackrestore(($411|0));
 $$2 = $$7340;
 STACKTOP = sp;return ($$2|0);
}
function _silk_Get_Encoder_Size($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 20208;
 return 0;
}
function _silk_InitEncoder($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, $sext$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _memset(($0|0),0,20208)|0;
 $3 = (_silk_init_encoder($0,$1)|0);
 $4 = ((($0)) + 10060|0);
 $5 = (_silk_init_encoder($4,$1)|0);
 $6 = (($5) + ($3))|0;
 $7 = ((($0)) + 20184|0);
 HEAP32[$7>>2] = 1;
 $8 = ((($0)) + 20188|0);
 HEAP32[$8>>2] = 1;
 HEAP32[$2>>2] = 1;
 $9 = ((($2)) + 4|0);
 HEAP32[$9>>2] = 1;
 $10 = ((($0)) + 4552|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 8|0);
 HEAP32[$12>>2] = $11;
 $13 = ((($0)) + 4560|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($2)) + 12|0);
 HEAP32[$15>>2] = $14;
 $16 = ((($0)) + 4564|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($2)) + 16|0);
 HEAP32[$18>>2] = $17;
 $19 = ((($0)) + 4568|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($2)) + 20|0);
 HEAP32[$21>>2] = $20;
 $22 = ((($0)) + 4608|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($2)) + 24|0);
 HEAP32[$24>>2] = $23;
 $25 = ((($0)) + 4604|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($2)) + 28|0);
 HEAP32[$27>>2] = $26;
 $28 = ((($0)) + 4612|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ((($2)) + 32|0);
 HEAP32[$30>>2] = $29;
 $31 = ((($0)) + 4620|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ((($2)) + 36|0);
 HEAP32[$33>>2] = $32;
 $34 = ((($0)) + 6084|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = ((($2)) + 40|0);
 HEAP32[$36>>2] = $35;
 $37 = ((($0)) + 6072|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ((($2)) + 48|0);
 HEAP32[$39>>2] = $38;
 $40 = ((($0)) + 4672|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($2)) + 52|0);
 HEAP32[$42>>2] = $41;
 $43 = ((($0)) + 4572|0);
 $44 = HEAP32[$43>>2]|0;
 $sext$i = $44 << 16;
 $45 = $sext$i >> 16;
 $46 = ($45*1000)|0;
 $47 = ((($2)) + 72|0);
 HEAP32[$47>>2] = $46;
 $48 = ((($0)) + 4532|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ((($2)) + 76|0);
 HEAP32[$50>>2] = $49;
 $51 = ($44|0)==(16);
 if (!($51)) {
  $56 = 0;
  $55 = ((($2)) + 80|0);
  HEAP32[$55>>2] = $56;
  return ($6|0);
 }
 $52 = ((($0)) + 28|0);
 $53 = HEAP32[$52>>2]|0;
 $54 = ($53|0)==(0);
 $phitmp$i = $54&1;
 $56 = $phitmp$i;
 $55 = ((($2)) + 80|0);
 HEAP32[$55>>2] = $56;
 return ($6|0);
}
function _silk_Encode($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$ = 0, $$$1558 = 0, $$0 = 0, $$0$us = 0, $$0535 = 0, $$0535$us = 0, $$0536 = 0, $$0540 = 0, $$0541 = 0, $$0542663 = 0, $$0546650 = 0, $$0546650$us = 0, $$0550 = 0, $$0551 = 0, $$0552$lcssa = 0, $$0552642 = 0, $$0554 = 0, $$0554718 = 0, $$0554719 = 0, $$0555$lcssa = 0;
 var $$0555604 = 0, $$0556 = 0, $$0556$us = 0, $$0557 = 0, $$0557$v = 0, $$0559 = 0, $$0559716 = 0, $$0559717 = 0, $$0560 = 0, $$1 = 0, $$1$us = 0, $$10631 = 0, $$10631$us = 0, $$11643 = 0, $$12590 = 0, $$1543660 = 0, $$1547605 = 0, $$1558 = 0, $$2 = 0, $$2544653 = 0;
 var $$2544653$us = 0, $$2548620 = 0, $$2562 = 0, $$2562715 = 0, $$3549637 = 0, $$3563$lcssa = 0, $$3596 = 0, $$4564 = 0, $$4600 = 0, $$5565 = 0, $$5591 = 0, $$6566 = 0, $$6593 = 0, $$7567$lcssa = 0, $$7567630 = 0, $$7567630$us = 0, $$7610 = 0, $$8568 = 0, $$8568$us = 0, $$8615 = 0;
 var $$8615$us = 0, $$9569 = 0, $$9626 = 0, $$alloca_mul = 0, $$idx$val = 0, $$idx572$val = 0, $$idx573 = 0, $$idx573$val = 0, $$idx574 = 0, $$idx574$val = 0, $$lcssa584 = 0, $$lcssa585 = 0, $$pre = 0, $$pre$phi706Z2D = 0, $$pre$phi710Z2D = 0, $$pre$phi714Z2D = 0, $$pre695 = 0, $$pre696 = 0, $$pre697 = 0, $$pre698 = 0;
 var $$pre699 = 0, $$pre700 = 0, $$pre701 = 0, $$pre703 = 0, $$pre704 = 0, $$pre707 = 0, $$pre711 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0;
 var $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0;
 var $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0;
 var $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0;
 var $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0;
 var $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond689 = 0, $exitcond690 = 0, $exitcond691 = 0, $exitcond692 = 0, $exitcond693 = 0;
 var $or$cond = 0, $or$cond11 = 0, $or$cond5 = 0, $or$cond578 = 0, $or$cond671 = 0, $or$cond673 = 0, $or$cond9 = 0, $or$cond9$us = 0, $phitmp = 0, $sext = 0, $sext570 = 0, $sext571 = 0, $spec$select = 0, $spec$select576 = 0, $spec$select577 = 0, $spec$select669 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $7 = sp;
 $8 = sp + 8|0;
 $9 = ((($1)) + 68|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0);
 if (!($11)) {
  $12 = ((($0)) + 4660|0);
  HEAP32[$12>>2] = 1;
  $13 = ((($0)) + 14720|0);
  HEAP32[$13>>2] = 1;
 }
 $14 = ((($0)) + 10060|0);
 $15 = ((($0)) + 15804|0);
 HEAP32[$15>>2] = 0;
 $16 = ((($0)) + 5744|0);
 HEAP32[$16>>2] = 0;
 $17 = (_check_control_input($1)|0);
 $18 = ($17|0)==(0);
 if (!($18)) {
  $$2 = $17;
  STACKTOP = sp;return ($$2|0);
 }
 $19 = ((($1)) + 88|0);
 HEAP32[$19>>2] = 0;
 $20 = ((($1)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($0)) + 20188|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($21|0)>($23|0);
 if ($24) {
  $25 = ((($0)) + 5088|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = (_silk_init_encoder($14,$26)|0);
  $28 = ((($0)) + 20120|0);
  HEAP32[$28>>2] = 0;
  $29 = ((($0)) + 20128|0);
  HEAP32[$29>>2] = 0;
  $30 = ((($0)) + 20132|0);
  HEAP32[$30>>2] = 0;
  $31 = ((($0)) + 20136|0);
  HEAP32[$31>>2] = 1;
  $32 = ((($0)) + 20140|0);
  HEAP32[$32>>2] = 0;
  $33 = ((($0)) + 20144|0);
  HEAP32[$33>>2] = 1;
  $34 = ((($0)) + 20150|0);
  HEAP16[$34>>1] = 0;
  $35 = ((($0)) + 20148|0);
  HEAP16[$35>>1] = 16384;
  $36 = ((($0)) + 20184|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ($37|0)==(2);
  if ($38) {
   $39 = ((($0)) + 15832|0);
   $40 = ((($0)) + 5772|0);
   _memcpy(($39|0),($40|0),300)|0;
   $41 = $0;
   $42 = $41;
   $43 = HEAP32[$42>>2]|0;
   $44 = (($41) + 4)|0;
   $45 = $44;
   $46 = HEAP32[$45>>2]|0;
   $47 = $14;
   $48 = $47;
   HEAP32[$48>>2] = $43;
   $49 = (($47) + 4)|0;
   $50 = $49;
   HEAP32[$50>>2] = $46;
   $$0560 = $27;
  } else {
   $$0560 = $27;
  }
 } else {
  $$0560 = 0;
 }
 $51 = ((($1)) + 24|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = ((($0)) + 4608|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = ($52|0)==($54|0);
 if ($55) {
  $56 = HEAP32[$22>>2]|0;
  $57 = HEAP32[$20>>2]|0;
  $58 = ($56|0)!=($57|0);
  $61 = $57;$630 = $58;
 } else {
  $$pre = HEAP32[$20>>2]|0;
  $61 = $$pre;$630 = 1;
 }
 $59 = HEAP32[$1>>2]|0;
 $60 = ((($0)) + 20184|0);
 HEAP32[$60>>2] = $59;
 HEAP32[$22>>2] = $61;
 $62 = ($3*100)|0;
 $63 = ((($1)) + 8|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = (($62|0) / ($64|0))&-1;
 $66 = ($65|0)>(1);
 $67 = $65 >> 1;
 $68 = $66 ? $67 : 1;
 $69 = ($6|0)!=(0);
 do {
  if ($69) {
   $70 = ($65|0)==(1);
   if (!($70)) {
    $$2 = -101;
    STACKTOP = sp;return ($$2|0);
   }
   $71 = ($61|0)>(0);
   if (!($71)) {
    HEAP32[$51>>2] = 10;
    $72 = ((($1)) + 36|0);
    $73 = HEAP32[$72>>2]|0;
    HEAP32[$72>>2] = 0;
    $$0554719 = $52;$$0559717 = $73;$$2562715 = $$0560;
    label = 22;
    break;
   }
   $$0542663 = 0;
   while(1) {
    $74 = (($0) + (($$0542663*10060)|0)|0);
    $75 = (((($0) + (($$0542663*10060)|0)|0)) + 5088|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = (_silk_init_encoder($74,$76)|0);
    $78 = (($$0542663) + 1)|0;
    $79 = HEAP32[$20>>2]|0;
    $80 = ($78|0)<($79|0);
    if ($80) {
     $$0542663 = $78;
    } else {
     break;
    }
   }
   $$pre695 = HEAP32[$51>>2]|0;
   HEAP32[$51>>2] = 10;
   $81 = ((($1)) + 36|0);
   $82 = HEAP32[$81>>2]|0;
   HEAP32[$81>>2] = 0;
   $83 = ($79|0)>(0);
   if ($83) {
    $$1543660 = 0;
    while(1) {
     $84 = (((($0) + (($$1543660*10060)|0)|0)) + 4664|0);
     HEAP32[$84>>2] = 0;
     $85 = (((($0) + (($$1543660*10060)|0)|0)) + 4676|0);
     HEAP32[$85>>2] = 1;
     $86 = (($$1543660) + 1)|0;
     $exitcond693 = ($86|0)==($79|0);
     if ($exitcond693) {
      $$0554 = $$pre695;$$0559 = $82;$$2562 = $77;$94 = $79;
      label = 21;
      break;
     } else {
      $$1543660 = $86;
     }
    }
   } else {
    $$0554719 = $$pre695;$$0559717 = $82;$$2562715 = $77;
    label = 22;
   }
  } else {
   $87 = Math_imul($65, $64)|0;
   $88 = ($87|0)!=($62|0);
   $89 = ($3|0)<(0);
   $or$cond = $89 | $88;
   if ($or$cond) {
    $$2 = -101;
    STACKTOP = sp;return ($$2|0);
   }
   $90 = ($3*1000)|0;
   $91 = Math_imul($64, $52)|0;
   $92 = ($90|0)>($91|0);
   if ($92) {
    $$2 = -101;
    STACKTOP = sp;return ($$2|0);
   } else {
    $$0554 = 0;$$0559 = 0;$$2562 = $$0560;$94 = $61;
    label = 21;
   }
  }
 } while(0);
 L34: do {
  if ((label|0) == 21) {
   $93 = ($94|0)>(0);
   if ($93) {
    $95 = ((($0)) + 4572|0);
    $96 = ((($0)) + 20200|0);
    $97 = ((($0)) + 5740|0);
    if ($630) {
     $$2544653$us = 0;
     while(1) {
      $98 = ($$2544653$us|0)==(1);
      if ($98) {
       $99 = HEAP32[$95>>2]|0;
       $102 = $99;
      } else {
       $102 = 0;
      }
      $100 = (($0) + (($$2544653$us*10060)|0)|0);
      $101 = HEAP32[$96>>2]|0;
      $103 = (_silk_control_encoder($100,$1,$101,$$2544653$us,$102)|0);
      $104 = ($103|0)==(0);
      if (!($104)) {
       $$2 = $103;
       break;
      }
      $105 = HEAP32[$97>>2]|0;
      $106 = ($105|0)>(0);
      if ($106) {
       $$0546650$us = 0;
       while(1) {
        $107 = ((((($0) + (($$2544653$us*10060)|0)|0)) + 4720|0) + ($$0546650$us<<2)|0);
        HEAP32[$107>>2] = 0;
        $108 = (($$0546650$us) + 1)|0;
        $109 = HEAP32[$97>>2]|0;
        $110 = ($108|0)<($109|0);
        if ($110) {
         $$0546650$us = $108;
        } else {
         break;
        }
       }
      }
      $111 = (((($0) + (($$2544653$us*10060)|0)|0)) + 6072|0);
      $112 = HEAP32[$111>>2]|0;
      $113 = (((($0) + (($$2544653$us*10060)|0)|0)) + 6076|0);
      HEAP32[$113>>2] = $112;
      $114 = (($$2544653$us) + 1)|0;
      $115 = HEAP32[$20>>2]|0;
      $116 = ($114|0)<($115|0);
      if ($116) {
       $$2544653$us = $114;
      } else {
       $$0554718 = $$0554;$$0559716 = $$0559;$$3563$lcssa = 0;$$pre$phi706Z2D = $95;$$pre$phi710Z2D = $96;$$pre$phi714Z2D = $97;
       break L34;
      }
     }
     STACKTOP = sp;return ($$2|0);
    }
    $$2544653 = 0;
    while(1) {
     $117 = ($$2544653|0)==(1);
     if ($117) {
      $118 = HEAP32[$95>>2]|0;
      $121 = $118;
     } else {
      $121 = 0;
     }
     $119 = (($0) + (($$2544653*10060)|0)|0);
     $120 = HEAP32[$96>>2]|0;
     $122 = (_silk_control_encoder($119,$1,$120,$$2544653,$121)|0);
     $123 = ($122|0)==(0);
     if (!($123)) {
      $$2 = $122;
      break;
     }
     $124 = (((($0) + (($$2544653*10060)|0)|0)) + 4660|0);
     $125 = HEAP32[$124>>2]|0;
     $126 = ($125|0)==(0);
     if (!($126)) {
      $127 = HEAP32[$97>>2]|0;
      $128 = ($127|0)>(0);
      if ($128) {
       $$0546650 = 0;
       while(1) {
        $129 = ((((($0) + (($$2544653*10060)|0)|0)) + 4720|0) + ($$0546650<<2)|0);
        HEAP32[$129>>2] = 0;
        $130 = (($$0546650) + 1)|0;
        $131 = HEAP32[$97>>2]|0;
        $132 = ($130|0)<($131|0);
        if ($132) {
         $$0546650 = $130;
        } else {
         break;
        }
       }
      }
     }
     $133 = (((($0) + (($$2544653*10060)|0)|0)) + 6072|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (((($0) + (($$2544653*10060)|0)|0)) + 6076|0);
     HEAP32[$135>>2] = $134;
     $136 = (($$2544653) + 1)|0;
     $137 = HEAP32[$20>>2]|0;
     $138 = ($136|0)<($137|0);
     if ($138) {
      $$2544653 = $136;
     } else {
      $$0554718 = $$0554;$$0559716 = $$0559;$$3563$lcssa = 0;$$pre$phi706Z2D = $95;$$pre$phi710Z2D = $96;$$pre$phi714Z2D = $97;
      break L34;
     }
    }
    STACKTOP = sp;return ($$2|0);
   } else {
    $$0554719 = $$0554;$$0559717 = $$0559;$$2562715 = $$2562;
    label = 22;
   }
  }
 } while(0);
 if ((label|0) == 22) {
  $$pre704 = ((($0)) + 4572|0);
  $$pre707 = ((($0)) + 20200|0);
  $$pre711 = ((($0)) + 5740|0);
  $$0554718 = $$0554719;$$0559716 = $$0559717;$$3563$lcssa = $$2562715;$$pre$phi706Z2D = $$pre704;$$pre$phi710Z2D = $$pre707;$$pre$phi714Z2D = $$pre711;
 }
 $139 = ($65*10)|0;
 $140 = HEAP32[$$pre$phi706Z2D>>2]|0;
 $141 = Math_imul($140, $139)|0;
 $142 = ((($0)) + 4552|0);
 $143 = HEAP32[$142>>2]|0;
 $144 = Math_imul($141, $143)|0;
 $145 = ($140*1000)|0;
 $146 = (($144|0) / ($145|0))&-1;
 $147 = (_llvm_stacksave()|0);
 $$alloca_mul = $146<<1;
 $148 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $149 = ((($0)) + 4580|0);
 $150 = ((($0)) + 5736|0);
 $151 = ((($0)) + 5772|0);
 $152 = ((($0)) + 5092|0);
 $153 = ((($0)) + 20192|0);
 $154 = ((($1)) + 28|0);
 $155 = ((($0)) + 15832|0);
 $156 = ((($0)) + 14640|0);
 $157 = ((($0)) + 15796|0);
 $158 = ((($0)) + 14632|0);
 $159 = ((($0)) + 20180|0);
 $160 = ((($0)) + 20176|0);
 $161 = ((($0)) + 15152|0);
 $162 = ((($0)) + 20154|0);
 $163 = ((($0)) + 14780|0);
 $164 = ((($0)) + 20172|0);
 $$idx573 = ((($4)) + 20|0);
 $$idx574 = ((($4)) + 28|0);
 $165 = ((($0)) + 20120|0);
 $166 = ((($0)) + 5096|0);
 $167 = ((($0)) + 15156|0);
 $168 = ((($0)) + 4528|0);
 $169 = ((($1)) + 60|0);
 $170 = ((($0)) + 20124|0);
 $171 = ((($0)) + 20204|0);
 $172 = ((($0)) + 14776|0);
 $173 = ((($1)) + 56|0);
 $174 = ($68|0)==(2);
 $175 = ((($1)) + 52|0);
 $176 = (($68) + -1)|0;
 $177 = ($68|0)==(3);
 $178 = ((($7)) + 4|0);
 $179 = $68 << 1;
 $180 = ((($0)) + 17224|0);
 $181 = ((($0)) + 10204|0);
 $182 = ((($0)) + 10076|0);
 $183 = ((($0)) + 14600|0);
 $184 = ((($0)) + 14532|0);
 $185 = ((($0)) + 14597|0);
 $186 = ((($0)) + 14548|0);
 $187 = ((($0)) + 14720|0);
 $188 = ((($0)) + 6076|0);
 $189 = ((($0)) + 20196|0);
 $190 = ((($0)) + 16136|0);
 $$0540 = $2;$$0541 = $3;$$0550 = 0;$$4564 = $$3563$lcssa;
 while(1) {
  $191 = HEAP32[$149>>2]|0;
  $192 = HEAP32[$150>>2]|0;
  $193 = (($191) - ($192))|0;
  $194 = ($193|0)<($141|0);
  $195 = $194 ? $193 : $141;
  $196 = HEAP32[$142>>2]|0;
  $197 = Math_imul($195, $196)|0;
  $198 = HEAP32[$$pre$phi706Z2D>>2]|0;
  $199 = ($198*1000)|0;
  $200 = (($197|0) / ($199|0))&-1;
  $201 = HEAP32[$1>>2]|0;
  $202 = ($201|0)==(2);
  L70: do {
   if ($202) {
    $203 = HEAP32[$20>>2]|0;
    switch ($203|0) {
    case 2:  {
     $204 = HEAP32[$16>>2]|0;
     $205 = ($200|0)>(0);
     if ($205) {
      $$3596 = 0;
      while(1) {
       $206 = $$3596 << 1;
       $207 = (($$0540) + ($206<<1)|0);
       $208 = HEAP16[$207>>1]|0;
       $209 = (($148) + ($$3596<<1)|0);
       HEAP16[$209>>1] = $208;
       $210 = (($$3596) + 1)|0;
       $exitcond690 = ($210|0)==($200|0);
       if ($exitcond690) {
        break;
       } else {
        $$3596 = $210;
       }
      }
     }
     $211 = HEAP32[$153>>2]|0;
     $212 = ($211|0)==(1);
     $213 = ($204|0)==(0);
     $or$cond5 = $213 & $212;
     if ($or$cond5) {
      _memcpy(($155|0),($151|0),300)|0;
     }
     $214 = (($192) + 2)|0;
     $215 = (($152) + ($214<<1)|0);
     $216 = (_silk_resampler($151,$215,$148,$200)|0);
     $217 = (($216) + ($$4564))|0;
     $218 = HEAP32[$150>>2]|0;
     $219 = (($218) + ($195))|0;
     HEAP32[$150>>2] = $219;
     $220 = HEAP32[$156>>2]|0;
     $221 = HEAP32[$157>>2]|0;
     $222 = (($220) - ($221))|0;
     $223 = HEAP32[$158>>2]|0;
     $224 = Math_imul($223, $139)|0;
     $225 = ($222|0)<($224|0);
     $$ = $225 ? $222 : $224;
     if ($205) {
      $$4600 = 0;
      while(1) {
       $226 = $$4600 << 1;
       $227 = $226 | 1;
       $228 = (($$0540) + ($227<<1)|0);
       $229 = HEAP16[$228>>1]|0;
       $230 = (($148) + ($$4600<<1)|0);
       HEAP16[$230>>1] = $229;
       $231 = (($$4600) + 1)|0;
       $exitcond691 = ($231|0)==($200|0);
       if ($exitcond691) {
        break;
       } else {
        $$4600 = $231;
       }
      }
     }
     $232 = (($221) + 2)|0;
     $233 = (($161) + ($232<<1)|0);
     $234 = (_silk_resampler($155,$233,$148,$200)|0);
     $235 = (($217) + ($234))|0;
     $236 = HEAP32[$157>>2]|0;
     $237 = (($236) + ($$))|0;
     HEAP32[$157>>2] = $237;
     $$pre696 = HEAP32[$150>>2]|0;
     $$6566 = $235;$300 = $$pre696;
     break L70;
     break;
    }
    case 1:  {
     $238 = ($200|0)>(0);
     if ($238) {
      $$5591 = 0;
      while(1) {
       $239 = $$5591 << 1;
       $240 = (($$0540) + ($239<<1)|0);
       $241 = HEAP16[$240>>1]|0;
       $242 = $241 << 16 >> 16;
       $243 = $239 | 1;
       $244 = (($$0540) + ($243<<1)|0);
       $245 = HEAP16[$244>>1]|0;
       $246 = $245 << 16 >> 16;
       $247 = (($246) + ($242))|0;
       $248 = $247 >>> 1;
       $249 = $247 & 1;
       $250 = (($248) + ($249))|0;
       $251 = $250&65535;
       $252 = (($148) + ($$5591<<1)|0);
       HEAP16[$252>>1] = $251;
       $253 = (($$5591) + 1)|0;
       $exitcond689 = ($253|0)==($200|0);
       if ($exitcond689) {
        break;
       } else {
        $$5591 = $253;
       }
      }
     }
     $254 = (($192) + 2)|0;
     $255 = (($152) + ($254<<1)|0);
     $256 = (_silk_resampler($151,$255,$148,$200)|0);
     $257 = (($256) + ($$4564))|0;
     $258 = HEAP32[$153>>2]|0;
     $259 = ($258|0)==(2);
     if ($259) {
      $260 = HEAP32[$16>>2]|0;
      $261 = ($260|0)==(0);
      if ($261) {
       $262 = HEAP32[$157>>2]|0;
       $263 = (($262) + 2)|0;
       $264 = (($161) + ($263<<1)|0);
       $265 = (_silk_resampler($155,$264,$148,$200)|0);
       $266 = (($265) + ($257))|0;
       $267 = HEAP32[$149>>2]|0;
       $268 = ($267|0)>(0);
       if ($268) {
        $269 = HEAP32[$150>>2]|0;
        $270 = HEAP32[$157>>2]|0;
        $$6593 = 0;
        while(1) {
         $271 = (($$6593) + 2)|0;
         $272 = (($271) + ($269))|0;
         $273 = (($152) + ($272<<1)|0);
         $274 = HEAP16[$273>>1]|0;
         $275 = $274 << 16 >> 16;
         $276 = (($271) + ($270))|0;
         $277 = (($161) + ($276<<1)|0);
         $278 = HEAP16[$277>>1]|0;
         $279 = $278 << 16 >> 16;
         $280 = (($279) + ($275))|0;
         $281 = $280 >>> 1;
         $282 = $281&65535;
         HEAP16[$273>>1] = $282;
         $283 = (($$6593) + 1)|0;
         $284 = ($283|0)<($267|0);
         if ($284) {
          $$6593 = $283;
         } else {
          $$5565 = $266;
          break;
         }
        }
       } else {
        $$5565 = $266;
       }
      } else {
       $$5565 = $257;
      }
     } else {
      $$5565 = $257;
     }
     $285 = HEAP32[$150>>2]|0;
     $286 = (($285) + ($195))|0;
     HEAP32[$150>>2] = $286;
     $$6566 = $$5565;$300 = $286;
     break L70;
     break;
    }
    default: {
     label = 62;
     break L70;
    }
    }
   } else {
    label = 62;
   }
  } while(0);
  if ((label|0) == 62) {
   label = 0;
   $287 = $200 << 1;
   _memcpy(($148|0),($$0540|0),($287|0))|0;
   $288 = (($192) + 2)|0;
   $289 = (($152) + ($288<<1)|0);
   $290 = (_silk_resampler($151,$289,$148,$200)|0);
   $291 = (($290) + ($$4564))|0;
   $292 = HEAP32[$150>>2]|0;
   $293 = (($292) + ($195))|0;
   HEAP32[$150>>2] = $293;
   $$6566 = $291;$300 = $293;
  }
  $294 = HEAP32[$1>>2]|0;
  $295 = Math_imul($294, $200)|0;
  $296 = (($$0540) + ($295<<1)|0);
  $297 = (($$0541) - ($200))|0;
  HEAP32[$$pre$phi710Z2D>>2] = 0;
  $298 = HEAP32[$149>>2]|0;
  $299 = ($300|0)<($298|0);
  if ($299) {
   $$9569 = $$6566;$595 = 0;
   break;
  }
  $301 = HEAP32[$16>>2]|0;
  $302 = $301 | $6;
  $303 = ($302|0)==(0);
  if ($303) {
   HEAP16[$8>>1] = 0;
   $304 = HEAP32[$$pre$phi714Z2D>>2]|0;
   $305 = (($304) + 1)|0;
   $306 = HEAP32[$20>>2]|0;
   $307 = Math_imul($305, $306)|0;
   $308 = 256 >>> $307;
   $309 = (0 - ($308))|0;
   $310 = $309&255;
   HEAP8[$8>>0] = $310;
   _ec_enc_icdf($4,0,$8,8);
   $311 = HEAP32[$20>>2]|0;
   $312 = ($311|0)>(0);
   if ($312) {
    $$7610 = 0;$632 = $311;
    while(1) {
     $313 = (((($0) + (($$7610*10060)|0)|0)) + 5740|0);
     $314 = HEAP32[$313>>2]|0;
     $315 = ($314|0)>(0);
     if ($315) {
      $$0555604 = 0;$$1547605 = 0;
      while(1) {
       $316 = ((((($0) + (($$7610*10060)|0)|0)) + 4720|0) + ($$1547605<<2)|0);
       $317 = HEAP32[$316>>2]|0;
       $318 = $317 << $$1547605;
       $319 = $318 | $$0555604;
       $320 = (($$1547605) + 1)|0;
       $321 = ($320|0)<($314|0);
       if ($321) {
        $$0555604 = $319;$$1547605 = $320;
       } else {
        $$0555$lcssa = $319;
        break;
       }
      }
     } else {
      $$0555$lcssa = 0;
     }
     $322 = ($$0555$lcssa|0)>(0);
     $323 = $322&1;
     $324 = (((($0) + (($$7610*10060)|0)|0)) + 4719|0);
     HEAP8[$324>>0] = $323;
     $325 = ($$0555$lcssa|0)!=(0);
     $326 = ($314|0)>(1);
     $or$cond578 = $325 & $326;
     if ($or$cond578) {
      $327 = (($314) + -2)|0;
      $328 = (36764 + ($327<<2)|0);
      $329 = (($$0555$lcssa) + -1)|0;
      $330 = HEAP32[$328>>2]|0;
      _ec_enc_icdf($4,$329,$330,8);
      $$pre697 = HEAP32[$20>>2]|0;
      $333 = $$pre697;
     } else {
      $333 = $632;
     }
     $331 = (($$7610) + 1)|0;
     $332 = ($331|0)<($333|0);
     if ($332) {
      $$7610 = $331;$632 = $333;
     } else {
      $631 = $333;
      break;
     }
    }
   } else {
    $631 = $311;
   }
   $334 = HEAP32[$$pre$phi714Z2D>>2]|0;
   $335 = ($334|0)>(0);
   if ($335) {
    $$2548620 = 0;$337 = $631;
    while(1) {
     $336 = ($337|0)>(0);
     if ($336) {
      $338 = (($162) + (($$2548620*6)|0)|0);
      $339 = (($163) + ($$2548620<<2)|0);
      $340 = ($$2548620|0)==(0);
      $341 = (($164) + ($$2548620)|0);
      $342 = (($$2548620) + -1)|0;
      if ($340) {
       $$8615$us = 0;$348 = $337;
       while(1) {
        $343 = (($0) + (($$8615$us*10060)|0)|0);
        $344 = (((($0) + (($$8615$us*10060)|0)|0)) + 4720|0);
        $345 = HEAP32[$344>>2]|0;
        $346 = ($345|0)==(0);
        if ($346) {
         $364 = $348;
        } else {
         $347 = ($348|0)==(2);
         $349 = ($$8615$us|0)==(0);
         $or$cond9$us = $349 & $347;
         do {
          if ($or$cond9$us) {
           _silk_stereo_encode_pred($4,$338);
           $350 = HEAP32[$339>>2]|0;
           $351 = ($350|0)==(0);
           if (!($351)) {
            break;
           }
           $352 = HEAP8[$341>>0]|0;
           _silk_stereo_encode_mid_only($4,$352);
          }
         } while(0);
         _silk_encode_indices($343,$4,0,1,0);
         $353 = (((($0) + (($$8615$us*10060)|0)|0)) + 6125|0);
         $354 = HEAP8[$353>>0]|0;
         $355 = $354 << 24 >> 24;
         $356 = (((($0) + (($$8615$us*10060)|0)|0)) + 6126|0);
         $357 = HEAP8[$356>>0]|0;
         $358 = $357 << 24 >> 24;
         $359 = (((($0) + (($$8615$us*10060)|0)|0)) + 6204|0);
         $360 = (((($0) + (($$8615$us*10060)|0)|0)) + 4580|0);
         $361 = HEAP32[$360>>2]|0;
         _silk_encode_pulses($4,$355,$358,$359,$361);
         $$pre699 = HEAP32[$20>>2]|0;
         $364 = $$pre699;
        }
        $362 = (($$8615$us) + 1)|0;
        $363 = ($362|0)<($364|0);
        if ($363) {
         $$8615$us = $362;$348 = $364;
        } else {
         $633 = $364;
         break;
        }
       }
      } else {
       $$8615 = 0;$370 = $337;
       while(1) {
        $365 = (($0) + (($$8615*10060)|0)|0);
        $366 = ((((($0) + (($$8615*10060)|0)|0)) + 4720|0) + ($$2548620<<2)|0);
        $367 = HEAP32[$366>>2]|0;
        $368 = ($367|0)==(0);
        if ($368) {
         $389 = $370;
        } else {
         $369 = ($370|0)==(2);
         $371 = ($$8615|0)==(0);
         $or$cond9 = $371 & $369;
         do {
          if ($or$cond9) {
           _silk_stereo_encode_pred($4,$338);
           $372 = HEAP32[$339>>2]|0;
           $373 = ($372|0)==(0);
           if (!($373)) {
            break;
           }
           $374 = HEAP8[$341>>0]|0;
           _silk_stereo_encode_mid_only($4,$374);
          }
         } while(0);
         $375 = ((((($0) + (($$8615*10060)|0)|0)) + 4720|0) + ($342<<2)|0);
         $376 = HEAP32[$375>>2]|0;
         $377 = ($376|0)==(0);
         $spec$select669 = $377 ? 0 : 2;
         _silk_encode_indices($365,$4,$$2548620,1,$spec$select669);
         $378 = ((((((($0) + (($$8615*10060)|0)|0)) + 6096|0) + (($$2548620*36)|0)|0)) + 29|0);
         $379 = HEAP8[$378>>0]|0;
         $380 = $379 << 24 >> 24;
         $381 = ((((((($0) + (($$8615*10060)|0)|0)) + 6096|0) + (($$2548620*36)|0)|0)) + 30|0);
         $382 = HEAP8[$381>>0]|0;
         $383 = $382 << 24 >> 24;
         $384 = ((((($0) + (($$8615*10060)|0)|0)) + 6204|0) + (($$2548620*320)|0)|0);
         $385 = (((($0) + (($$8615*10060)|0)|0)) + 4580|0);
         $386 = HEAP32[$385>>2]|0;
         _silk_encode_pulses($4,$380,$383,$384,$386);
         $$pre698 = HEAP32[$20>>2]|0;
         $389 = $$pre698;
        }
        $387 = (($$8615) + 1)|0;
        $388 = ($387|0)<($389|0);
        if ($388) {
         $$8615 = $387;$370 = $389;
        } else {
         $633 = $389;
         break;
        }
       }
      }
     } else {
      $633 = $337;
     }
     $390 = (($$2548620) + 1)|0;
     $391 = HEAP32[$$pre$phi714Z2D>>2]|0;
     $392 = ($390|0)<($391|0);
     if ($392) {
      $$2548620 = $390;$337 = $633;
     } else {
      $394 = $633;
      break;
     }
    }
   } else {
    $394 = $631;
   }
   $393 = ($394|0)>(0);
   if ($393) {
    $$9626 = 0;
    while(1) {
     $395 = (((($0) + (($$9626*10060)|0)|0)) + 4720|0);
     ;HEAP32[$395>>2]=0|0;HEAP32[$395+4>>2]=0|0;HEAP32[$395+8>>2]=0|0;
     $396 = (($$9626) + 1)|0;
     $397 = HEAP32[$20>>2]|0;
     $398 = ($396|0)<($397|0);
     if ($398) {
      $$9626 = $396;
     } else {
      break;
     }
    }
   }
   $$idx573$val = HEAP32[$$idx573>>2]|0;
   $$idx574$val = HEAP32[$$idx574>>2]|0;
   $399 = (Math_clz32(($$idx574$val|0))|0);
   $400 = (($$idx573$val) + -32)|0;
   $401 = (($400) + ($399))|0;
   HEAP32[$160>>2] = $401;
  }
  _silk_HP_variable_cutoff($0);
  $402 = HEAP32[$154>>2]|0;
  $403 = HEAP32[$51>>2]|0;
  $404 = Math_imul($403, $402)|0;
  $405 = (($404|0) / 1000)&-1;
  if ($69) {
   $$0551 = $405;
  } else {
   $406 = HEAP32[$160>>2]|0;
   $407 = (($405) - ($406))|0;
   $$0551 = $407;
  }
  $408 = HEAP32[$$pre$phi714Z2D>>2]|0;
  $409 = (($$0551|0) / ($408|0))&-1;
  $410 = ($403|0)==(10);
  $sext570 = $409 << 16;
  $411 = $sext570 >> 16;
  $$0557$v = $410 ? 100 : 50;
  $$0557 = Math_imul($411, $$0557$v)|0;
  $412 = HEAP32[$159>>2]|0;
  $413 = $412 << 1;
  $414 = (($$0557) - ($413))|0;
  if ($69) {
   $$1558 = $414;
  } else {
   $415 = HEAP32[$16>>2]|0;
   $416 = ($415|0)>(0);
   if ($416) {
    $$idx$val = HEAP32[$$idx573>>2]|0;
    $$idx572$val = HEAP32[$$idx574>>2]|0;
    $417 = (Math_clz32(($$idx572$val|0))|0);
    $418 = HEAP32[$160>>2]|0;
    $419 = Math_imul($415, $409)|0;
    $420 = (-32 - ($419))|0;
    $421 = (($420) + ($$idx$val))|0;
    $422 = (($421) + ($417))|0;
    $423 = (($422) - ($418))|0;
    $424 = $423 << 1;
    $425 = (($414) - ($424))|0;
    $$1558 = $425;
   } else {
    $$1558 = $414;
   }
  }
  $426 = ($402|0)>(5000);
  if ($426) {
   $427 = ($$1558|0)>($402|0);
   $428 = ($$1558|0)>(5000);
   $429 = $428 ? $$1558 : 5000;
   $spec$select576 = $427 ? $402 : $429;
   $441 = $spec$select576;
  } else {
   $430 = ($$1558|0)>(5000);
   $431 = ($$1558|0)<($402|0);
   $$$1558 = $431 ? $402 : $$1558;
   $spec$select577 = $430 ? 5000 : $$$1558;
   $441 = $spec$select577;
  }
  $432 = HEAP32[$20>>2]|0;
  $433 = ($432|0)==(2);
  if ($433) {
   $434 = HEAP32[$16>>2]|0;
   $435 = (($162) + (($434*6)|0)|0);
   $436 = (($164) + ($434)|0);
   $437 = HEAP32[$168>>2]|0;
   $438 = HEAP32[$169>>2]|0;
   $439 = HEAP32[$$pre$phi706Z2D>>2]|0;
   $440 = HEAP32[$149>>2]|0;
   _silk_stereo_LR_to_MS($165,$166,$167,$435,$436,$7,$441,$437,$438,$439,$440);
   $442 = HEAP32[$16>>2]|0;
   $443 = (($164) + ($442)|0);
   $444 = HEAP8[$443>>0]|0;
   $445 = ($444<<24>>24)==(0);
   if ($445) {
    $446 = HEAP32[$171>>2]|0;
    $447 = ($446|0)==(1);
    if ($447) {
     ;HEAP32[$180>>2]=0|0;HEAP32[$180+4>>2]=0|0;HEAP32[$180+8>>2]=0|0;
     $448 = $182;
     $449 = $448;
     HEAP32[$449>>2] = 0;
     $450 = (($448) + 4)|0;
     $451 = $450;
     HEAP32[$451>>2] = 0;
     _memset(($181|0),0,4384)|0;
     HEAP32[$183>>2] = 100;
     HEAP32[$184>>2] = 100;
     HEAP8[$180>>0] = 10;
     HEAP8[$185>>0] = 0;
     HEAP32[$186>>2] = 65536;
     HEAP32[$187>>2] = 1;
    }
    _silk_encode_do_VAD_FLP($14);
   } else {
    $452 = (($172) + ($442)|0);
    HEAP8[$452>>0] = 0;
   }
   if (!($69)) {
    $453 = HEAP32[$16>>2]|0;
    $454 = (($162) + (($453*6)|0)|0);
    _silk_stereo_encode_pred($4,$454);
    $455 = HEAP32[$16>>2]|0;
    $456 = (($172) + ($455)|0);
    $457 = HEAP8[$456>>0]|0;
    $458 = ($457<<24>>24)==(0);
    if ($458) {
     $459 = (($164) + ($455)|0);
     $460 = HEAP8[$459>>0]|0;
     _silk_stereo_encode_mid_only($4,$460);
    }
   }
  } else {
   $461 = HEAP32[$170>>2]|0;
   HEAP32[$152>>2] = $461;
   $462 = HEAP32[$149>>2]|0;
   $463 = (($152) + ($462<<1)|0);
   $464 = HEAPU16[$463>>1]|(HEAPU16[$463+2>>1]<<16);
   HEAP16[$170>>1]=$464&65535;HEAP16[$170+2>>1]=$464>>>16;
  }
  _silk_encode_do_VAD_FLP($0);
  $465 = HEAP32[$20>>2]|0;
  $466 = ($465|0)>(0);
  L178: do {
   if ($466) {
    $467 = ($$0550|0)==(0);
    $or$cond11 = $174 & $467;
    $468 = ($$0550|0)==($176|0);
    $469 = ($$0550|0)==(1);
    if ($or$cond11) {
     $$10631$us = 0;$$7567630$us = $$6566;$478 = $465;
     while(1) {
      $470 = HEAP32[$173>>2]|0;
      $471 = ($470*3)|0;
      $472 = (($471|0) / 5)&-1;
      $473 = HEAP32[$175>>2]|0;
      $474 = ($473|0)!=(0);
      $475 = $468 & $474;
      $476 = $475&1;
      $477 = ($478|0)==(1);
      do {
       if ($477) {
        $$0535$us = $476;$$0556$us = $441;$$1$us = $472;
       } else {
        $479 = (($7) + ($$10631$us<<2)|0);
        $480 = HEAP32[$479>>2]|0;
        $481 = ($$10631$us|0)==(0);
        $482 = HEAP32[$178>>2]|0;
        $483 = ($482|0)>(0);
        $or$cond671 = $481 & $483;
        if (!($or$cond671)) {
         $$0535$us = $476;$$0556$us = $480;$$1$us = $472;
         break;
        }
        $484 = (($470|0) / ($179|0))&-1;
        $485 = (($472) - ($484))|0;
        $$0535$us = 0;$$0556$us = $480;$$1$us = $485;
       }
      } while(0);
      $486 = ($$0556$us|0)>(0);
      if ($486) {
       $487 = (($0) + (($$10631$us*10060)|0)|0);
       (_silk_control_SNR($487,$$0556$us)|0);
       $488 = HEAP32[$16>>2]|0;
       $489 = ($488|0)>($$10631$us|0);
       do {
        if ($489) {
         $490 = ($$10631$us|0)==(0);
         if (!($490)) {
          $491 = HEAP32[$171>>2]|0;
          $492 = ($491|0)==(0);
          if (!($492)) {
           $$0$us = 1;
           break;
          }
         }
         $$0$us = 2;
        } else {
         $$0$us = 0;
        }
       } while(0);
       $493 = (_silk_encode_frame_FLP($487,$5,$4,$$0$us,$$1$us,$$0535$us)|0);
       $$pre701 = HEAP32[$20>>2]|0;
       $$8568$us = $493;$501 = $$pre701;
      } else {
       $$8568$us = $$7567630$us;$501 = $478;
      }
      $494 = (((($0) + (($$10631$us*10060)|0)|0)) + 4664|0);
      HEAP32[$494>>2] = 0;
      $495 = (((($0) + (($$10631$us*10060)|0)|0)) + 5736|0);
      HEAP32[$495>>2] = 0;
      $496 = (((($0) + (($$10631$us*10060)|0)|0)) + 5744|0);
      $497 = HEAP32[$496>>2]|0;
      $498 = (($497) + 1)|0;
      HEAP32[$496>>2] = $498;
      $499 = (($$10631$us) + 1)|0;
      $500 = ($499|0)<($501|0);
      if ($500) {
       $$10631$us = $499;$$7567630$us = $$8568$us;$478 = $501;
      } else {
       $$7567$lcssa = $$8568$us;$$lcssa584 = $501;
       break L178;
      }
     }
    }
    $$10631 = 0;$$7567630 = $$6566;$512 = $465;
    while(1) {
     $502 = HEAP32[$173>>2]|0;
     do {
      if ($177) {
       if ($467) {
        $503 = $502 << 1;
        $504 = (($503|0) / 5)&-1;
        $$0536 = $504;
        break;
       }
       if (!($469)) {
        $$0536 = $502;
        break;
       }
       $505 = ($502*3)|0;
       $506 = (($505|0) / 4)&-1;
       $$0536 = $506;
      } else {
       $$0536 = $502;
      }
     } while(0);
     $507 = HEAP32[$175>>2]|0;
     $508 = ($507|0)!=(0);
     $509 = $468 & $508;
     $510 = $509&1;
     $511 = ($512|0)==(1);
     do {
      if ($511) {
       $$0535 = $510;$$0556 = $441;$$1 = $$0536;
      } else {
       $513 = (($7) + ($$10631<<2)|0);
       $514 = HEAP32[$513>>2]|0;
       $515 = ($$10631|0)==(0);
       $516 = HEAP32[$178>>2]|0;
       $517 = ($516|0)>(0);
       $or$cond673 = $515 & $517;
       if (!($or$cond673)) {
        $$0535 = $510;$$0556 = $514;$$1 = $$0536;
        break;
       }
       $518 = (($502|0) / ($179|0))&-1;
       $519 = (($$0536) - ($518))|0;
       $$0535 = 0;$$0556 = $514;$$1 = $519;
      }
     } while(0);
     $520 = ($$0556|0)>(0);
     if ($520) {
      $521 = (($0) + (($$10631*10060)|0)|0);
      (_silk_control_SNR($521,$$0556)|0);
      $522 = HEAP32[$16>>2]|0;
      $523 = ($522|0)>($$10631|0);
      do {
       if ($523) {
        $524 = ($$10631|0)==(0);
        if (!($524)) {
         $525 = HEAP32[$171>>2]|0;
         $526 = ($525|0)==(0);
         if (!($526)) {
          $$0 = 1;
          break;
         }
        }
        $$0 = 2;
       } else {
        $$0 = 0;
       }
      } while(0);
      $527 = (_silk_encode_frame_FLP($521,$5,$4,$$0,$$1,$$0535)|0);
      $$pre700 = HEAP32[$20>>2]|0;
      $$8568 = $527;$535 = $$pre700;
     } else {
      $$8568 = $$7567630;$535 = $512;
     }
     $528 = (((($0) + (($$10631*10060)|0)|0)) + 4664|0);
     HEAP32[$528>>2] = 0;
     $529 = (((($0) + (($$10631*10060)|0)|0)) + 5736|0);
     HEAP32[$529>>2] = 0;
     $530 = (((($0) + (($$10631*10060)|0)|0)) + 5744|0);
     $531 = HEAP32[$530>>2]|0;
     $532 = (($531) + 1)|0;
     HEAP32[$530>>2] = $532;
     $533 = (($$10631) + 1)|0;
     $534 = ($533|0)<($535|0);
     if ($534) {
      $$10631 = $533;$$7567630 = $$8568;$512 = $535;
     } else {
      $$7567$lcssa = $$8568;$$lcssa584 = $535;
      break;
     }
    }
   } else {
    $$7567$lcssa = $$6566;$$lcssa584 = $465;
   }
  } while(0);
  $536 = HEAP32[$16>>2]|0;
  $537 = (($536) + -1)|0;
  $538 = (($164) + ($537)|0);
  $539 = HEAP8[$538>>0]|0;
  $540 = $539 << 24 >> 24;
  HEAP32[$171>>2] = $540;
  $541 = HEAP32[$5>>2]|0;
  $542 = ($541|0)>(0);
  do {
   if ($542) {
    $543 = HEAP32[$$pre$phi714Z2D>>2]|0;
    $544 = ($536|0)==($543|0);
    if ($544) {
     $545 = ($$lcssa584|0)>(0);
     if ($545) {
      $$0552642 = 0;$$11643 = 0;
      while(1) {
       $546 = (((($0) + (($$11643*10060)|0)|0)) + 5740|0);
       $547 = HEAP32[$546>>2]|0;
       $548 = ($547|0)>(0);
       $549 = $$0552642 << 1;
       if ($548) {
        $$3549637 = 0;$554 = $549;
        while(1) {
         $550 = ((((($0) + (($$11643*10060)|0)|0)) + 4716|0) + ($$3549637)|0);
         $551 = HEAP8[$550>>0]|0;
         $552 = $551 << 24 >> 24;
         $553 = $554 | $552;
         $555 = (($$3549637) + 1)|0;
         $556 = ($555|0)<($547|0);
         $557 = $553 << 1;
         if ($556) {
          $$3549637 = $555;$554 = $557;
         } else {
          $$lcssa585 = $557;
          break;
         }
        }
       } else {
        $$lcssa585 = $549;
       }
       $558 = (((($0) + (($$11643*10060)|0)|0)) + 4719|0);
       $559 = HEAP8[$558>>0]|0;
       $560 = $559 << 24 >> 24;
       $561 = $$lcssa585 | $560;
       $562 = (($$11643) + 1)|0;
       $exitcond692 = ($562|0)==($$lcssa584|0);
       if ($exitcond692) {
        $$0552$lcssa = $561;
        break;
       } else {
        $$0552642 = $561;$$11643 = $562;
       }
      }
     } else {
      $$0552$lcssa = 0;
     }
     if (!($69)) {
      $563 = (($536) + 1)|0;
      $564 = Math_imul($563, $$lcssa584)|0;
      _ec_enc_patch_initial_bits($4,$$0552$lcssa,$564);
     }
     $565 = HEAP32[$188>>2]|0;
     $566 = ($565|0)==(0);
     do {
      if (!($566)) {
       $567 = HEAP32[$20>>2]|0;
       $568 = ($567|0)==(1);
       if (!($568)) {
        $569 = HEAP32[$190>>2]|0;
        $570 = ($569|0)==(0);
        if ($570) {
         break;
        }
       }
       HEAP32[$5>>2] = 0;
      }
     } while(0);
     $571 = HEAP32[$5>>2]|0;
     $572 = $571 << 3;
     $573 = HEAP32[$159>>2]|0;
     $574 = (($573) + ($572))|0;
     $575 = HEAP32[$154>>2]|0;
     $576 = HEAP32[$51>>2]|0;
     $577 = Math_imul($576, $575)|0;
     $578 = (($577|0) / 1000)&-1;
     $579 = (($574) - ($578))|0;
     $580 = ($579|0)>(0);
     $spec$select = $580 ? $579 : 0;
     $581 = ($spec$select|0)<(10000);
     $582 = $581 ? $spec$select : 10000;
     HEAP32[$159>>2] = $582;
     $583 = HEAP32[$189>>2]|0;
     $sext571 = $583 << 16;
     $584 = $sext571 >> 16;
     $585 = ($584*3188)|0;
     $586 = $585 >> 16;
     $587 = (($586) + 13)|0;
     $588 = HEAP32[$168>>2]|0;
     $589 = ($588|0)<($587|0);
     if ($589) {
      HEAP32[$$pre$phi710Z2D>>2] = 1;
      HEAP32[$189>>2] = 0;
      break;
     } else {
      HEAP32[$$pre$phi710Z2D>>2] = 0;
      $590 = (($583) + ($576))|0;
      HEAP32[$189>>2] = $590;
      break;
     }
    }
   }
  } while(0);
  $591 = ($297|0)==(0);
  $592 = (($$0550) + 1)|0;
  if ($591) {
   label = 161;
   break;
  } else {
   $$0540 = $296;$$0541 = $297;$$0550 = $592;$$4564 = $$7567$lcssa;
  }
 }
 if ((label|0) == 161) {
  $$pre703 = HEAP32[$$pre$phi710Z2D>>2]|0;
  $$9569 = $$7567$lcssa;$595 = $$pre703;
 }
 $593 = HEAP32[$20>>2]|0;
 HEAP32[$153>>2] = $593;
 $594 = ((($1)) + 76|0);
 HEAP32[$594>>2] = $595;
 $596 = HEAP32[$$pre$phi706Z2D>>2]|0;
 $597 = ($596|0)==(16);
 if ($597) {
  $598 = ((($0)) + 28|0);
  $599 = HEAP32[$598>>2]|0;
  $600 = ($599|0)==(0);
  $phitmp = $600&1;
  $602 = $phitmp;
 } else {
  $602 = 0;
 }
 $601 = ((($1)) + 80|0);
 HEAP32[$601>>2] = $602;
 $sext = $596 << 16;
 $603 = $sext >> 16;
 $604 = ($603*1000)|0;
 $605 = ((($1)) + 72|0);
 HEAP32[$605>>2] = $604;
 $606 = HEAP32[$169>>2]|0;
 $607 = ($606|0)==(0);
 if ($607) {
  $608 = ((($0)) + 20148|0);
  $609 = HEAP16[$608>>1]|0;
  $610 = $609 << 16 >> 16;
  $612 = $610;
 } else {
  $612 = 0;
 }
 $611 = ((($1)) + 84|0);
 HEAP32[$611>>2] = $612;
 if ($69) {
  HEAP32[$51>>2] = $$0554718;
  $613 = ((($1)) + 36|0);
  HEAP32[$613>>2] = $$0559716;
  $614 = ($593|0)>(0);
  if ($614) {
   $$12590 = 0;
   while(1) {
    $615 = (((($0) + (($$12590*10060)|0)|0)) + 4664|0);
    HEAP32[$615>>2] = 0;
    $616 = (((($0) + (($$12590*10060)|0)|0)) + 4676|0);
    HEAP32[$616>>2] = 0;
    $617 = (($$12590) + 1)|0;
    $exitcond = ($617|0)==($593|0);
    if ($exitcond) {
     break;
    } else {
     $$12590 = $617;
    }
   }
  }
 }
 $618 = ((($0)) + 4761|0);
 $619 = HEAP8[$618>>0]|0;
 $620 = $619 << 24 >> 24;
 $621 = ((($1)) + 92|0);
 HEAP32[$621>>2] = $620;
 $622 = $620 >> 1;
 $623 = ((($0)) + 4762|0);
 $624 = HEAP8[$623>>0]|0;
 $625 = $624 << 24 >> 24;
 $626 = ((37356 + ($622<<2)|0) + ($625<<1)|0);
 $627 = HEAP16[$626>>1]|0;
 $628 = $627 << 16 >> 16;
 $629 = ((($1)) + 96|0);
 HEAP32[$629>>2] = $628;
 _llvm_stackrestore(($147|0));
 $$2 = $$9569;
 STACKTOP = sp;return ($$2|0);
}
function _silk_encode_indices($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0111117 = 0, $$0112 = 0, $$0113 = 0, $$0122 = 0, $$1118 = 0, $$off = 0, $$pre = 0, $$pre$phi126Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $sext = 0, $sext116 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $5 = sp + 16|0;
 $6 = sp;
 $7 = ($3|0)!=(0);
 $8 = (((($0)) + 6096|0) + (($2*36)|0)|0);
 $9 = ((($0)) + 4732|0);
 $$0112 = $7 ? $8 : $9;
 $10 = ((($$0112)) + 29|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11 << 24 >> 24;
 $13 = $12 << 1;
 $14 = ((($$0112)) + 30|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = $15 << 24 >> 24;
 $17 = (($13) + ($16))|0;
 $18 = ($17|0)>(1);
 $or$cond = $7 | $18;
 if ($or$cond) {
  $19 = (($17) + -2)|0;
  _ec_enc_icdf($1,$19,37817,8);
 } else {
  _ec_enc_icdf($1,$17,37821,8);
 }
 $20 = ($4|0)==(2);
 $21 = HEAP8[$$0112>>0]|0;
 $22 = $21 << 24 >> 24;
 if ($20) {
  _ec_enc_icdf($1,$22,20416,8);
 } else {
  $23 = $22 >> 3;
  $24 = HEAP8[$10>>0]|0;
  $25 = $24 << 24 >> 24;
  $26 = (20384 + ($25<<3)|0);
  _ec_enc_icdf($1,$23,$26,8);
  $27 = HEAP8[$$0112>>0]|0;
  $28 = $27 & 7;
  $29 = $28&255;
  _ec_enc_icdf($1,$29,37846,8);
 }
 $30 = ((($0)) + 4576|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)>(1);
 if ($32) {
  $$0122 = 1;
  while(1) {
   $33 = (($$0112) + ($$0122)|0);
   $34 = HEAP8[$33>>0]|0;
   $35 = $34 << 24 >> 24;
   _ec_enc_icdf($1,$35,20416,8);
   $36 = (($$0122) + 1)|0;
   $37 = HEAP32[$30>>2]|0;
   $38 = ($36|0)<($37|0);
   if ($38) {
    $$0122 = $36;
   } else {
    break;
   }
  }
 }
 $39 = ((($$0112)) + 8|0);
 $40 = HEAP8[$39>>0]|0;
 $41 = $40 << 24 >> 24;
 $42 = ((($0)) + 4688|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = ((($43)) + 16|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = HEAP8[$10>>0]|0;
 $47 = $46 << 24 >> 24;
 $48 = $47 >> 1;
 $49 = HEAP16[$43>>1]|0;
 $50 = $49 << 16 >> 16;
 $51 = Math_imul($48, $50)|0;
 $52 = (($45) + ($51)|0);
 _ec_enc_icdf($1,$41,$52,8);
 $53 = HEAP32[$42>>2]|0;
 $54 = HEAP8[$39>>0]|0;
 $55 = $54 << 24 >> 24;
 _silk_NLSF_unpack($5,$6,$53,$55);
 $56 = HEAP32[$42>>2]|0;
 $57 = ((($56)) + 2|0);
 $58 = HEAP16[$57>>1]|0;
 $59 = ($58<<16>>16)>(0);
 if ($59) {
  $$1118 = 0;$66 = $56;
  while(1) {
   $60 = (($$1118) + 1)|0;
   $61 = (((($$0112)) + 8|0) + ($60)|0);
   $62 = HEAP8[$61>>0]|0;
   $63 = $62 << 24 >> 24;
   $64 = ($62<<24>>24)>(3);
   do {
    if ($64) {
     $65 = ((($66)) + 28|0);
     $67 = HEAP32[$65>>2]|0;
     $68 = (($5) + ($$1118<<1)|0);
     $69 = HEAP16[$68>>1]|0;
     $70 = $69 << 16 >> 16;
     $71 = (($67) + ($70)|0);
     _ec_enc_icdf($1,8,$71,8);
     $72 = HEAP8[$61>>0]|0;
     $73 = $72 << 24 >> 24;
     $74 = (($73) + -4)|0;
     _ec_enc_icdf($1,$74,37854,8);
    } else {
     $75 = ($62<<24>>24)<(-3);
     if ($75) {
      $76 = ((($66)) + 28|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (($5) + ($$1118<<1)|0);
      $79 = HEAP16[$78>>1]|0;
      $80 = $79 << 16 >> 16;
      $81 = (($77) + ($80)|0);
      _ec_enc_icdf($1,0,$81,8);
      $82 = HEAP8[$61>>0]|0;
      $83 = $82 << 24 >> 24;
      $84 = (-4 - ($83))|0;
      _ec_enc_icdf($1,$84,37854,8);
      break;
     } else {
      $85 = (($63) + 4)|0;
      $86 = ((($66)) + 28|0);
      $87 = HEAP32[$86>>2]|0;
      $88 = (($5) + ($$1118<<1)|0);
      $89 = HEAP16[$88>>1]|0;
      $90 = $89 << 16 >> 16;
      $91 = (($87) + ($90)|0);
      _ec_enc_icdf($1,$85,$91,8);
      break;
     }
    }
   } while(0);
   $92 = HEAP32[$42>>2]|0;
   $93 = ((($92)) + 2|0);
   $94 = HEAP16[$93>>1]|0;
   $95 = $94 << 16 >> 16;
   $96 = ($60|0)<($95|0);
   if ($96) {
    $$1118 = $60;$66 = $92;
   } else {
    break;
   }
  }
 }
 $97 = HEAP32[$30>>2]|0;
 $98 = ($97|0)==(4);
 if ($98) {
  $99 = ((($$0112)) + 31|0);
  $100 = HEAP8[$99>>0]|0;
  $101 = $100 << 24 >> 24;
  _ec_enc_icdf($1,$101,37823,8);
 }
 $102 = HEAP8[$10>>0]|0;
 $103 = ($102<<24>>24)==(2);
 if (!($103)) {
  $154 = HEAP8[$10>>0]|0;
  $155 = $154 << 24 >> 24;
  $156 = ((($0)) + 5764|0);
  HEAP32[$156>>2] = $155;
  $157 = ((($$0112)) + 34|0);
  $158 = HEAP8[$157>>0]|0;
  $159 = $158 << 24 >> 24;
  _ec_enc_icdf($1,$159,37831,8);
  STACKTOP = sp;return;
 }
 if ($20) {
  $104 = ((($0)) + 5764|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ($105|0)==(2);
  if ($106) {
   $107 = ((($$0112)) + 26|0);
   $108 = HEAP16[$107>>1]|0;
   $109 = $108 << 16 >> 16;
   $110 = ((($0)) + 5768|0);
   $111 = HEAP16[$110>>1]|0;
   $112 = $111 << 16 >> 16;
   $113 = (($109) - ($112))|0;
   $$off = (($113) + 8)|0;
   $114 = ($$off>>>0)>(19);
   $115 = (($113) + 9)|0;
   $$0113 = $114 ? 0 : $115;
   _ec_enc_icdf($1,$$0113,21216,8);
   if ($114) {
    label = 24;
   } else {
    $$pre$phi126Z2D = $110;$$pre$phiZ2D = $107;
   }
  } else {
   label = 24;
  }
 } else {
  label = 24;
 }
 if ((label|0) == 24) {
  $116 = ((($$0112)) + 26|0);
  $117 = HEAP16[$116>>1]|0;
  $118 = $117 << 16 >> 16;
  $119 = ((($0)) + 4572|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = $120 >> 1;
  $122 = (($118|0) / ($121|0))&-1;
  $sext = $122 << 16;
  $123 = $sext >> 16;
  $sext116 = $121 << 16;
  $124 = $sext116 >> 16;
  $125 = Math_imul($123, $124)|0;
  $126 = (($118) - ($125))|0;
  _ec_enc_icdf($1,$122,21184,8);
  $127 = ((($0)) + 4680|0);
  $128 = HEAP32[$127>>2]|0;
  _ec_enc_icdf($1,$126,$128,8);
  $$pre = ((($0)) + 5768|0);
  $$pre$phi126Z2D = $$pre;$$pre$phiZ2D = $116;
 }
 $129 = HEAP16[$$pre$phiZ2D>>1]|0;
 HEAP16[$$pre$phi126Z2D>>1] = $129;
 $130 = ((($$0112)) + 28|0);
 $131 = HEAP8[$130>>0]|0;
 $132 = $131 << 24 >> 24;
 $133 = ((($0)) + 4684|0);
 $134 = HEAP32[$133>>2]|0;
 _ec_enc_icdf($1,$132,$134,8);
 $135 = ((($$0112)) + 32|0);
 $136 = HEAP8[$135>>0]|0;
 $137 = $136 << 24 >> 24;
 _ec_enc_icdf($1,$137,37770,8);
 $138 = HEAP32[$30>>2]|0;
 $139 = ($138|0)>(0);
 if ($139) {
  $$0111117 = 0;
  while(1) {
   $140 = (((($$0112)) + 4|0) + ($$0111117)|0);
   $141 = HEAP8[$140>>0]|0;
   $142 = $141 << 24 >> 24;
   $143 = HEAP8[$135>>0]|0;
   $144 = $143 << 24 >> 24;
   $145 = (36716 + ($144<<2)|0);
   $146 = HEAP32[$145>>2]|0;
   _ec_enc_icdf($1,$142,$146,8);
   $147 = (($$0111117) + 1)|0;
   $148 = HEAP32[$30>>2]|0;
   $149 = ($147|0)<($148|0);
   if ($149) {
    $$0111117 = $147;
   } else {
    break;
   }
  }
 }
 $150 = ($4|0)==(0);
 if (!($150)) {
  $154 = HEAP8[$10>>0]|0;
  $155 = $154 << 24 >> 24;
  $156 = ((($0)) + 5764|0);
  HEAP32[$156>>2] = $155;
  $157 = ((($$0112)) + 34|0);
  $158 = HEAP8[$157>>0]|0;
  $159 = $158 << 24 >> 24;
  _ec_enc_icdf($1,$159,37831,8);
  STACKTOP = sp;return;
 }
 $151 = ((($$0112)) + 33|0);
 $152 = HEAP8[$151>>0]|0;
 $153 = $152 << 24 >> 24;
 _ec_enc_icdf($1,$153,37814,8);
 $154 = HEAP8[$10>>0]|0;
 $155 = $154 << 24 >> 24;
 $156 = ((($0)) + 5764|0);
 HEAP32[$156>>2] = $155;
 $157 = ((($$0112)) + 34|0);
 $158 = HEAP8[$157>>0]|0;
 $159 = $158 << 24 >> 24;
 _ec_enc_icdf($1,$159,37831,8);
 STACKTOP = sp;return;
}
function _silk_encode_pulses($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i = 0, $$0$i161 = 0, $$0$i164 = 0, $$0$i167 = 0, $$0150170$us = 0, $$0150170$us$in = 0, $$0151 = 0, $$0152199 = 0, $$0153189$us = 0, $$0153189$us$1 = 0, $$0153189$us$2 = 0, $$0153189$us$3 = 0, $$0153189$us$4 = 0, $$0153189$us$5 = 0, $$0153189$us$6 = 0, $$0153189$us$7 = 0, $$0153189$us$8 = 0, $$0204 = 0, $$1154$us = 0, $$1154$us$1 = 0;
 var $$1154$us$2 = 0, $$1154$us$3 = 0, $$1154$us$4 = 0, $$1154$us$5 = 0, $$1154$us$6 = 0, $$1154$us$7 = 0, $$1154$us$8 = 0, $$1200 = 0, $$2148180 = 0, $$2190$us = 0, $$2190$us$1 = 0, $$2190$us$2 = 0, $$2190$us$3 = 0, $$2190$us$4 = 0, $$2190$us$5 = 0, $$2190$us$6 = 0, $$2190$us$7 = 0, $$2190$us$8 = 0, $$3149171$us = 0, $$3184 = 0;
 var $$4176 = 0, $$5172 = 0, $$alloca_mul = 0, $$alloca_mul2 = 0, $$alloca_mul4 = 0, $$alloca_mul6 = 0, $$lcssa228232 = 0, $$lcssa230233 = 0, $$ph222 = 0, $$phi$trans$insert = 0, $$pn$us = 0, $$pn$us$1 = 0, $$pn$us$2 = 0, $$pn$us$3 = 0, $$pn$us$4 = 0, $$pn$us$5 = 0, $$pn$us$6 = 0, $$pn$us$7 = 0, $$pn$us$8 = 0, $$pre = 0;
 var $$pre221 = 0, $$promoted = 0, $$promoted231 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0;
 var $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0;
 var $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0;
 var $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond211 = 0, $exitcond212 = 0, $exitcond213 = 0, $exitcond214 = 0, $exitcond215 = 0, $exitcond215$1 = 0, $exitcond215$2 = 0, $exitcond215$3 = 0, $exitcond215$4 = 0, $exitcond215$5 = 0, $exitcond215$6 = 0;
 var $exitcond215$7 = 0, $exitcond215$8 = 0, $exitcond220 = 0, $sext$us = 0, $spec$select = 0, $spec$select$1 = 0, $spec$select$2 = 0, $spec$select$3 = 0, $spec$select$4 = 0, $spec$select$5 = 0, $spec$select$6 = 0, $spec$select$7 = 0, $spec$select$8 = 0, $spec$select$us$1 = 0, $spec$select$us$2 = 0, $spec$select$us$3 = 0, $spec$select$us$4 = 0, $spec$select$us$5 = 0, $spec$select$us$6 = 0, $spec$select$us$7 = 0;
 var $spec$select$us$8 = 0, $spec$select159$1$v = 0, $spec$select159$2$v = 0, $spec$select159$3$v = 0, $spec$select159$4$v = 0, $spec$select159$5$v = 0, $spec$select159$6$v = 0, $spec$select159$7$v = 0, $spec$select159$us$1 = 0, $spec$select159$us$2 = 0, $spec$select159$us$3 = 0, $spec$select159$us$4 = 0, $spec$select159$us$5 = 0, $spec$select159$us$6 = 0, $spec$select159$us$7 = 0, $spec$select234 = 0, $spec$select235 = 0, dest = 0, label = 0, sp = 0;
 var stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP32[$5+16>>2]=0|0;HEAP32[$5+20>>2]=0|0;HEAP32[$5+24>>2]=0|0;HEAP32[$5+28>>2]=0|0;
 $6 = $4 >> 4;
 $7 = $4 & -16;
 $8 = ($7|0)<($4|0);
 if ($8) {
  $9 = (($3) + ($4)|0);
  $10 = (($6) + 1)|0;
  dest=$9; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $$0151 = $10;
 } else {
  $$0151 = $6;
 }
 $11 = $$0151 << 4;
 $12 = (_llvm_stacksave()|0);
 $$alloca_mul = $11<<2;
 $13 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $14 = ($$0151|0)>(0);
 if ($14) {
  $$0204 = 0;
  while(1) {
   $16 = (($3) + ($$0204)|0);
   $17 = HEAP8[$16>>0]|0;
   $18 = $17 << 24 >> 24;
   $19 = ($18|0)>(0);
   $20 = (0 - ($18))|0;
   $21 = $19 ? $18 : $20;
   $22 = (($13) + ($$0204<<2)|0);
   HEAP32[$22>>2] = $21;
   $23 = $$0204 | 1;
   $24 = (($3) + ($23)|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = $25 << 24 >> 24;
   $27 = ($26|0)>(0);
   $28 = (0 - ($26))|0;
   $29 = $27 ? $26 : $28;
   $30 = (($13) + ($23<<2)|0);
   HEAP32[$30>>2] = $29;
   $31 = $$0204 | 2;
   $32 = (($3) + ($31)|0);
   $33 = HEAP8[$32>>0]|0;
   $34 = $33 << 24 >> 24;
   $35 = ($34|0)>(0);
   $36 = (0 - ($34))|0;
   $37 = $35 ? $34 : $36;
   $38 = (($13) + ($31<<2)|0);
   HEAP32[$38>>2] = $37;
   $39 = $$0204 | 3;
   $40 = (($3) + ($39)|0);
   $41 = HEAP8[$40>>0]|0;
   $42 = $41 << 24 >> 24;
   $43 = ($42|0)>(0);
   $44 = (0 - ($42))|0;
   $45 = $43 ? $42 : $44;
   $46 = (($13) + ($39<<2)|0);
   HEAP32[$46>>2] = $45;
   $47 = (($$0204) + 4)|0;
   $48 = ($47|0)<($11|0);
   if ($48) {
    $$0204 = $47;
   } else {
    break;
   }
  }
  $$alloca_mul4 = $$0151<<2;
  $49 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul4)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul4)|0)+15)&-16)|0);;
  $$alloca_mul6 = $$0151<<2;
  $50 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
  if ($14) {
   $51 = HEAP8[37887]|0;
   $52 = $51&255;
   $53 = HEAP8[(37888)>>0]|0;
   $54 = $53&255;
   $55 = HEAP8[(37889)>>0]|0;
   $56 = $55&255;
   $57 = HEAP8[(37890)>>0]|0;
   $58 = $57&255;
   $59 = ((($5)) + 4|0);
   $60 = ((($5)) + 8|0);
   $61 = ((($5)) + 12|0);
   $62 = ((($5)) + 8|0);
   $63 = ((($5)) + 12|0);
   $64 = ((($5)) + 16|0);
   $65 = ((($5)) + 20|0);
   $66 = ((($5)) + 8|0);
   $67 = ((($5)) + 24|0);
   $68 = ((($5)) + 28|0);
   $69 = ((($5)) + 12|0);
   $70 = ((($5)) + 16|0);
   $71 = ((($5)) + 20|0);
   $72 = ((($5)) + 24|0);
   $73 = ((($5)) + 28|0);
   $$promoted231 = HEAP32[$5>>2]|0;
   $$promoted = HEAP32[$59>>2]|0;
   $$0152199 = $13;$$1200 = 0;$$lcssa228232 = $$promoted231;$$lcssa230233 = $$promoted;$520 = 0;$521 = 0;
   while(1) {
    $74 = (($50) + ($$1200<<2)|0);
    HEAP32[$74>>2] = 0;
    $75 = (($49) + ($$1200<<2)|0);
    $$pre = HEAP32[$$0152199>>2]|0;
    $$phi$trans$insert = ((($$0152199)) + 4|0);
    $$pre221 = HEAP32[$$phi$trans$insert>>2]|0;
    $76 = ((($$0152199)) + 8|0);
    $77 = ((($$0152199)) + 12|0);
    $78 = ((($$0152199)) + 16|0);
    $79 = ((($$0152199)) + 20|0);
    $80 = ((($$0152199)) + 24|0);
    $81 = ((($$0152199)) + 28|0);
    $82 = ((($$0152199)) + 32|0);
    $83 = ((($$0152199)) + 36|0);
    $84 = ((($$0152199)) + 8|0);
    $85 = ((($$0152199)) + 12|0);
    $86 = ((($$0152199)) + 16|0);
    $87 = ((($$0152199)) + 20|0);
    $88 = ((($$0152199)) + 24|0);
    $89 = ((($$0152199)) + 28|0);
    $90 = ((($$0152199)) + 32|0);
    $91 = ((($$0152199)) + 36|0);
    $92 = ((($$0152199)) + 40|0);
    $93 = ((($$0152199)) + 44|0);
    $94 = ((($$0152199)) + 48|0);
    $95 = ((($$0152199)) + 52|0);
    $96 = ((($$0152199)) + 56|0);
    $97 = ((($$0152199)) + 60|0);
    $98 = ((($$0152199)) + 40|0);
    $99 = ((($$0152199)) + 44|0);
    $100 = ((($$0152199)) + 48|0);
    $101 = ((($$0152199)) + 52|0);
    $102 = ((($$0152199)) + 56|0);
    $103 = ((($$0152199)) + 60|0);
    $105 = $$pre221;$106 = $$pre;$522 = $$lcssa230233;$523 = $$lcssa228232;$524 = $520;$525 = $521;
    while(1) {
     $104 = (($105) + ($106))|0;
     $107 = ($104|0)>($52|0);
     if ($107) {
      $$0$i = 1;$113 = $524;$114 = $525;$526 = $522;$527 = $523;
     } else {
      $108 = HEAP32[$76>>2]|0;
      $109 = HEAP32[$77>>2]|0;
      $110 = (($109) + ($108))|0;
      $111 = ($110|0)>($52|0);
      if ($111) {
       $$0$i = 1;$113 = $524;$114 = $104;$526 = $522;$527 = $104;
      } else {
       $488 = HEAP32[$78>>2]|0;
       $489 = HEAP32[$79>>2]|0;
       $490 = (($489) + ($488))|0;
       $491 = ($490|0)>($52|0);
       if ($491) {
        $$0$i = 1;$113 = $110;$114 = $104;$526 = $110;$527 = $104;
       } else {
        HEAP32[$66>>2] = $490;
        $492 = HEAP32[$80>>2]|0;
        $493 = HEAP32[$81>>2]|0;
        $494 = (($493) + ($492))|0;
        $495 = ($494|0)>($52|0);
        if ($495) {
         $$0$i = 1;$113 = $110;$114 = $104;$526 = $110;$527 = $104;
        } else {
         HEAP32[$69>>2] = $494;
         $496 = HEAP32[$82>>2]|0;
         $497 = HEAP32[$83>>2]|0;
         $498 = (($497) + ($496))|0;
         $499 = ($498|0)>($52|0);
         if ($499) {
          $$0$i = 1;$113 = $110;$114 = $104;$526 = $110;$527 = $104;
         } else {
          HEAP32[$70>>2] = $498;
          $500 = HEAP32[$98>>2]|0;
          $501 = HEAP32[$99>>2]|0;
          $502 = (($501) + ($500))|0;
          $503 = ($502|0)>($52|0);
          if ($503) {
           $$0$i = 1;$113 = $110;$114 = $104;$526 = $110;$527 = $104;
          } else {
           HEAP32[$71>>2] = $502;
           $504 = HEAP32[$100>>2]|0;
           $505 = HEAP32[$101>>2]|0;
           $506 = (($505) + ($504))|0;
           $507 = ($506|0)>($52|0);
           if ($507) {
            $$0$i = 1;$113 = $110;$114 = $104;$526 = $110;$527 = $104;
           } else {
            HEAP32[$72>>2] = $506;
            $508 = HEAP32[$102>>2]|0;
            $509 = HEAP32[$103>>2]|0;
            $510 = (($509) + ($508))|0;
            $511 = ($510|0)>($52|0);
            if ($511) {
             $$0$i = 1;$113 = $110;$114 = $104;$526 = $110;$527 = $104;
            } else {
             HEAP32[$73>>2] = $510;
             $$0$i = 0;$113 = $110;$114 = $104;$526 = $110;$527 = $104;
            }
           }
          }
         }
        }
       }
      }
     }
     $112 = (($113) + ($114))|0;
     $115 = ($112|0)>($54|0);
     if ($115) {
      $$0$i167 = 1;$122 = $113;$123 = $114;$129 = $526;$528 = $527;
     } else {
      $116 = HEAP32[$60>>2]|0;
      $117 = HEAP32[$61>>2]|0;
      $118 = (($117) + ($116))|0;
      $119 = ($118|0)>($54|0);
      if ($119) {
       $$0$i167 = 1;$122 = $113;$123 = $112;$129 = $526;$528 = $112;
      } else {
       $512 = HEAP32[$64>>2]|0;
       $513 = HEAP32[$65>>2]|0;
       $514 = (($513) + ($512))|0;
       $515 = ($514|0)>($54|0);
       if ($515) {
        $$0$i167 = 1;$122 = $118;$123 = $112;$129 = $118;$528 = $112;
       } else {
        HEAP32[$60>>2] = $514;
        $516 = HEAP32[$67>>2]|0;
        $517 = HEAP32[$68>>2]|0;
        $518 = (($517) + ($516))|0;
        $519 = ($518|0)>($54|0);
        if ($519) {
         $$0$i167 = 1;$122 = $118;$123 = $112;$129 = $118;$528 = $112;
        } else {
         HEAP32[$61>>2] = $518;
         $$0$i167 = 0;$122 = $118;$123 = $112;$129 = $118;$528 = $112;
        }
       }
      }
     }
     $120 = (($$0$i167) + ($$0$i))|0;
     $121 = (($122) + ($123))|0;
     $124 = ($121|0)>($56|0);
     if ($124) {
      $$0$i164 = 1;$132 = $122;$133 = $123;$173 = $528;$174 = $129;
     } else {
      $125 = HEAP32[$62>>2]|0;
      $126 = HEAP32[$63>>2]|0;
      $127 = (($126) + ($125))|0;
      $128 = ($127|0)>($56|0);
      $spec$select = $128 ? $129 : $127;
      $spec$select234 = $128 ? $122 : $127;
      $spec$select235 = $128&1;
      $$0$i164 = $spec$select235;$132 = $spec$select234;$133 = $121;$173 = $121;$174 = $spec$select;
     }
     $130 = (($120) + ($$0$i164))|0;
     $131 = (($132) + ($133))|0;
     $134 = ($131|0)>($58|0);
     if ($134) {
      $$0$i161 = -1;
     } else {
      HEAP32[$75>>2] = $131;
      $$0$i161 = 0;
     }
     $135 = ($130|0)==($$0$i161|0);
     if ($135) {
      break;
     }
     $136 = HEAP32[$74>>2]|0;
     $137 = (($136) + 1)|0;
     HEAP32[$74>>2] = $137;
     $138 = HEAP32[$$0152199>>2]|0;
     $139 = $138 >> 1;
     HEAP32[$$0152199>>2] = $139;
     $140 = HEAP32[$$phi$trans$insert>>2]|0;
     $141 = $140 >> 1;
     HEAP32[$$phi$trans$insert>>2] = $141;
     $142 = HEAP32[$84>>2]|0;
     $143 = $142 >> 1;
     HEAP32[$84>>2] = $143;
     $144 = HEAP32[$85>>2]|0;
     $145 = $144 >> 1;
     HEAP32[$85>>2] = $145;
     $146 = HEAP32[$86>>2]|0;
     $147 = $146 >> 1;
     HEAP32[$86>>2] = $147;
     $148 = HEAP32[$87>>2]|0;
     $149 = $148 >> 1;
     HEAP32[$87>>2] = $149;
     $150 = HEAP32[$88>>2]|0;
     $151 = $150 >> 1;
     HEAP32[$88>>2] = $151;
     $152 = HEAP32[$89>>2]|0;
     $153 = $152 >> 1;
     HEAP32[$89>>2] = $153;
     $154 = HEAP32[$90>>2]|0;
     $155 = $154 >> 1;
     HEAP32[$90>>2] = $155;
     $156 = HEAP32[$91>>2]|0;
     $157 = $156 >> 1;
     HEAP32[$91>>2] = $157;
     $158 = HEAP32[$92>>2]|0;
     $159 = $158 >> 1;
     HEAP32[$92>>2] = $159;
     $160 = HEAP32[$93>>2]|0;
     $161 = $160 >> 1;
     HEAP32[$93>>2] = $161;
     $162 = HEAP32[$94>>2]|0;
     $163 = $162 >> 1;
     HEAP32[$94>>2] = $163;
     $164 = HEAP32[$95>>2]|0;
     $165 = $164 >> 1;
     HEAP32[$95>>2] = $165;
     $166 = HEAP32[$96>>2]|0;
     $167 = $166 >> 1;
     HEAP32[$96>>2] = $167;
     $168 = HEAP32[$97>>2]|0;
     $169 = $168 >> 1;
     HEAP32[$97>>2] = $169;
     $105 = $141;$106 = $139;$522 = $174;$523 = $173;$524 = $132;$525 = $133;
    }
    $170 = ((($$0152199)) + 64|0);
    $171 = (($$1200) + 1)|0;
    $exitcond220 = ($171|0)==($$0151|0);
    if ($exitcond220) {
     break;
    } else {
     $$0152199 = $170;$$1200 = $171;$$lcssa228232 = $173;$$lcssa230233 = $174;$520 = $132;$521 = $133;
    }
   }
   HEAP32[$5>>2] = $173;
   HEAP32[$59>>2] = $174;
   $175 = $1 >> 1;
   if ($14) {
    $176 = (21696 + (($175*9)|0)|0);
    $177 = HEAP8[$176>>0]|0;
    $178 = $177&255;
    $179 = HEAP8[(21505)>>0]|0;
    $180 = $179&255;
    $$0153189$us = $178;$$2190$us = 0;
    while(1) {
     $181 = (($50) + ($$2190$us<<2)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = ($182|0)>(0);
     if ($183) {
      $$pn$us = $180;
     } else {
      $184 = (($49) + ($$2190$us<<2)|0);
      $185 = HEAP32[$184>>2]|0;
      $186 = (21488 + ($185)|0);
      $187 = HEAP8[$186>>0]|0;
      $188 = $187&255;
      $$pn$us = $188;
     }
     $$1154$us = (($$pn$us) + ($$0153189$us))|0;
     $189 = (($$2190$us) + 1)|0;
     $exitcond215 = ($189|0)==($$0151|0);
     if ($exitcond215) {
      break;
     } else {
      $$0153189$us = $$1154$us;$$2190$us = $189;
     }
    }
    $190 = (((21696 + (($175*9)|0)|0)) + 1|0);
    $191 = HEAP8[$190>>0]|0;
    $192 = $191&255;
    $193 = HEAP8[(21523)>>0]|0;
    $194 = $193&255;
    $$0153189$us$1 = $192;$$2190$us$1 = 0;
    while(1) {
     $374 = (($50) + ($$2190$us$1<<2)|0);
     $375 = HEAP32[$374>>2]|0;
     $376 = ($375|0)>(0);
     if ($376) {
      $$pn$us$1 = $194;
     } else {
      $377 = (($49) + ($$2190$us$1<<2)|0);
      $378 = HEAP32[$377>>2]|0;
      $379 = (21506 + ($378)|0);
      $380 = HEAP8[$379>>0]|0;
      $381 = $380&255;
      $$pn$us$1 = $381;
     }
     $$1154$us$1 = (($$pn$us$1) + ($$0153189$us$1))|0;
     $382 = (($$2190$us$1) + 1)|0;
     $exitcond215$1 = ($382|0)==($$0151|0);
     if ($exitcond215$1) {
      break;
     } else {
      $$0153189$us$1 = $$1154$us$1;$$2190$us$1 = $382;
     }
    }
    $383 = ($$1154$us$1>>>0)<($$1154$us>>>0);
    $spec$select$us$1 = $383&1;
    $spec$select159$us$1 = $383 ? $$1154$us$1 : $$1154$us;
    $384 = (((21696 + (($175*9)|0)|0)) + 2|0);
    $385 = HEAP8[$384>>0]|0;
    $386 = $385&255;
    $387 = HEAP8[(21541)>>0]|0;
    $388 = $387&255;
    $$0153189$us$2 = $386;$$2190$us$2 = 0;
    while(1) {
     $389 = (($50) + ($$2190$us$2<<2)|0);
     $390 = HEAP32[$389>>2]|0;
     $391 = ($390|0)>(0);
     if ($391) {
      $$pn$us$2 = $388;
     } else {
      $392 = (($49) + ($$2190$us$2<<2)|0);
      $393 = HEAP32[$392>>2]|0;
      $394 = (21524 + ($393)|0);
      $395 = HEAP8[$394>>0]|0;
      $396 = $395&255;
      $$pn$us$2 = $396;
     }
     $$1154$us$2 = (($$pn$us$2) + ($$0153189$us$2))|0;
     $397 = (($$2190$us$2) + 1)|0;
     $exitcond215$2 = ($397|0)==($$0151|0);
     if ($exitcond215$2) {
      break;
     } else {
      $$0153189$us$2 = $$1154$us$2;$$2190$us$2 = $397;
     }
    }
    $398 = ($$1154$us$2|0)<($spec$select159$us$1|0);
    $spec$select$us$2 = $398 ? 2 : $spec$select$us$1;
    $spec$select159$us$2 = $398 ? $$1154$us$2 : $spec$select159$us$1;
    $399 = (((21696 + (($175*9)|0)|0)) + 3|0);
    $400 = HEAP8[$399>>0]|0;
    $401 = $400&255;
    $402 = HEAP8[(21559)>>0]|0;
    $403 = $402&255;
    $$0153189$us$3 = $401;$$2190$us$3 = 0;
    while(1) {
     $404 = (($50) + ($$2190$us$3<<2)|0);
     $405 = HEAP32[$404>>2]|0;
     $406 = ($405|0)>(0);
     if ($406) {
      $$pn$us$3 = $403;
     } else {
      $407 = (($49) + ($$2190$us$3<<2)|0);
      $408 = HEAP32[$407>>2]|0;
      $409 = (21542 + ($408)|0);
      $410 = HEAP8[$409>>0]|0;
      $411 = $410&255;
      $$pn$us$3 = $411;
     }
     $$1154$us$3 = (($$pn$us$3) + ($$0153189$us$3))|0;
     $412 = (($$2190$us$3) + 1)|0;
     $exitcond215$3 = ($412|0)==($$0151|0);
     if ($exitcond215$3) {
      break;
     } else {
      $$0153189$us$3 = $$1154$us$3;$$2190$us$3 = $412;
     }
    }
    $413 = ($$1154$us$3|0)<($spec$select159$us$2|0);
    $spec$select$us$3 = $413 ? 3 : $spec$select$us$2;
    $spec$select159$us$3 = $413 ? $$1154$us$3 : $spec$select159$us$2;
    $414 = (((21696 + (($175*9)|0)|0)) + 4|0);
    $415 = HEAP8[$414>>0]|0;
    $416 = $415&255;
    $417 = HEAP8[(21577)>>0]|0;
    $418 = $417&255;
    $$0153189$us$4 = $416;$$2190$us$4 = 0;
    while(1) {
     $419 = (($50) + ($$2190$us$4<<2)|0);
     $420 = HEAP32[$419>>2]|0;
     $421 = ($420|0)>(0);
     if ($421) {
      $$pn$us$4 = $418;
     } else {
      $422 = (($49) + ($$2190$us$4<<2)|0);
      $423 = HEAP32[$422>>2]|0;
      $424 = (21560 + ($423)|0);
      $425 = HEAP8[$424>>0]|0;
      $426 = $425&255;
      $$pn$us$4 = $426;
     }
     $$1154$us$4 = (($$pn$us$4) + ($$0153189$us$4))|0;
     $427 = (($$2190$us$4) + 1)|0;
     $exitcond215$4 = ($427|0)==($$0151|0);
     if ($exitcond215$4) {
      break;
     } else {
      $$0153189$us$4 = $$1154$us$4;$$2190$us$4 = $427;
     }
    }
    $428 = ($$1154$us$4|0)<($spec$select159$us$3|0);
    $spec$select$us$4 = $428 ? 4 : $spec$select$us$3;
    $spec$select159$us$4 = $428 ? $$1154$us$4 : $spec$select159$us$3;
    $429 = (((21696 + (($175*9)|0)|0)) + 5|0);
    $430 = HEAP8[$429>>0]|0;
    $431 = $430&255;
    $432 = HEAP8[(21595)>>0]|0;
    $433 = $432&255;
    $$0153189$us$5 = $431;$$2190$us$5 = 0;
    while(1) {
     $434 = (($50) + ($$2190$us$5<<2)|0);
     $435 = HEAP32[$434>>2]|0;
     $436 = ($435|0)>(0);
     if ($436) {
      $$pn$us$5 = $433;
     } else {
      $437 = (($49) + ($$2190$us$5<<2)|0);
      $438 = HEAP32[$437>>2]|0;
      $439 = (21578 + ($438)|0);
      $440 = HEAP8[$439>>0]|0;
      $441 = $440&255;
      $$pn$us$5 = $441;
     }
     $$1154$us$5 = (($$pn$us$5) + ($$0153189$us$5))|0;
     $442 = (($$2190$us$5) + 1)|0;
     $exitcond215$5 = ($442|0)==($$0151|0);
     if ($exitcond215$5) {
      break;
     } else {
      $$0153189$us$5 = $$1154$us$5;$$2190$us$5 = $442;
     }
    }
    $443 = ($$1154$us$5|0)<($spec$select159$us$4|0);
    $spec$select$us$5 = $443 ? 5 : $spec$select$us$4;
    $spec$select159$us$5 = $443 ? $$1154$us$5 : $spec$select159$us$4;
    $444 = (((21696 + (($175*9)|0)|0)) + 6|0);
    $445 = HEAP8[$444>>0]|0;
    $446 = $445&255;
    $447 = HEAP8[(21613)>>0]|0;
    $448 = $447&255;
    $$0153189$us$6 = $446;$$2190$us$6 = 0;
    while(1) {
     $449 = (($50) + ($$2190$us$6<<2)|0);
     $450 = HEAP32[$449>>2]|0;
     $451 = ($450|0)>(0);
     if ($451) {
      $$pn$us$6 = $448;
     } else {
      $452 = (($49) + ($$2190$us$6<<2)|0);
      $453 = HEAP32[$452>>2]|0;
      $454 = (21596 + ($453)|0);
      $455 = HEAP8[$454>>0]|0;
      $456 = $455&255;
      $$pn$us$6 = $456;
     }
     $$1154$us$6 = (($$pn$us$6) + ($$0153189$us$6))|0;
     $457 = (($$2190$us$6) + 1)|0;
     $exitcond215$6 = ($457|0)==($$0151|0);
     if ($exitcond215$6) {
      break;
     } else {
      $$0153189$us$6 = $$1154$us$6;$$2190$us$6 = $457;
     }
    }
    $458 = ($$1154$us$6|0)<($spec$select159$us$5|0);
    $spec$select$us$6 = $458 ? 6 : $spec$select$us$5;
    $spec$select159$us$6 = $458 ? $$1154$us$6 : $spec$select159$us$5;
    $459 = (((21696 + (($175*9)|0)|0)) + 7|0);
    $460 = HEAP8[$459>>0]|0;
    $461 = $460&255;
    $462 = HEAP8[(21631)>>0]|0;
    $463 = $462&255;
    $$0153189$us$7 = $461;$$2190$us$7 = 0;
    while(1) {
     $464 = (($50) + ($$2190$us$7<<2)|0);
     $465 = HEAP32[$464>>2]|0;
     $466 = ($465|0)>(0);
     if ($466) {
      $$pn$us$7 = $463;
     } else {
      $467 = (($49) + ($$2190$us$7<<2)|0);
      $468 = HEAP32[$467>>2]|0;
      $469 = (21614 + ($468)|0);
      $470 = HEAP8[$469>>0]|0;
      $471 = $470&255;
      $$pn$us$7 = $471;
     }
     $$1154$us$7 = (($$pn$us$7) + ($$0153189$us$7))|0;
     $472 = (($$2190$us$7) + 1)|0;
     $exitcond215$7 = ($472|0)==($$0151|0);
     if ($exitcond215$7) {
      break;
     } else {
      $$0153189$us$7 = $$1154$us$7;$$2190$us$7 = $472;
     }
    }
    $473 = ($$1154$us$7|0)<($spec$select159$us$6|0);
    $spec$select$us$7 = $473 ? 7 : $spec$select$us$6;
    $spec$select159$us$7 = $473 ? $$1154$us$7 : $spec$select159$us$6;
    $474 = (((21696 + (($175*9)|0)|0)) + 8|0);
    $475 = HEAP8[$474>>0]|0;
    $476 = $475&255;
    $477 = HEAP8[(21649)>>0]|0;
    $478 = $477&255;
    $$0153189$us$8 = $476;$$2190$us$8 = 0;
    while(1) {
     $479 = (($50) + ($$2190$us$8<<2)|0);
     $480 = HEAP32[$479>>2]|0;
     $481 = ($480|0)>(0);
     if ($481) {
      $$pn$us$8 = $478;
     } else {
      $482 = (($49) + ($$2190$us$8<<2)|0);
      $483 = HEAP32[$482>>2]|0;
      $484 = (21632 + ($483)|0);
      $485 = HEAP8[$484>>0]|0;
      $486 = $485&255;
      $$pn$us$8 = $486;
     }
     $$1154$us$8 = (($$pn$us$8) + ($$0153189$us$8))|0;
     $487 = (($$2190$us$8) + 1)|0;
     $exitcond215$8 = ($487|0)==($$0151|0);
     if ($exitcond215$8) {
      break;
     } else {
      $$0153189$us$8 = $$1154$us$8;$$2190$us$8 = $487;
     }
    }
    $223 = ($$1154$us$8|0)<($spec$select159$us$7|0);
    $spec$select$us$8 = $223 ? 8 : $spec$select$us$7;
    $224 = (21664 + (($175*9)|0)|0);
    _ec_enc_icdf($0,$spec$select$us$8,$224,8);
    $225 = (21296 + (($spec$select$us$8*18)|0)|0);
    if (!($14)) {
     $373 = $49;
     _silk_encode_signs($0,$3,$4,$1,$2,$373);
     _llvm_stackrestore(($12|0));
     STACKTOP = sp;return;
    }
    $$3184 = 0;
    while(1) {
     $226 = (($50) + ($$3184<<2)|0);
     $227 = HEAP32[$226>>2]|0;
     $228 = ($227|0)==(0);
     if ($228) {
      $229 = (($49) + ($$3184<<2)|0);
      $230 = HEAP32[$229>>2]|0;
      _ec_enc_icdf($0,$230,$225,8);
     } else {
      _ec_enc_icdf($0,17,$225,8);
      $231 = (($227) + -1)|0;
      $232 = ($227|0)>(1);
      if ($232) {
       $$2148180 = 0;
       while(1) {
        _ec_enc_icdf($0,17,(21458),8);
        $233 = (($$2148180) + 1)|0;
        $exitcond213 = ($233|0)==($231|0);
        if ($exitcond213) {
         break;
        } else {
         $$2148180 = $233;
        }
       }
      }
      $234 = (($49) + ($$3184<<2)|0);
      $235 = HEAP32[$234>>2]|0;
      _ec_enc_icdf($0,$235,(21458),8);
     }
     $236 = (($$3184) + 1)|0;
     $exitcond214 = ($236|0)==($$0151|0);
     if ($exitcond214) {
      break;
     } else {
      $$3184 = $236;
     }
    }
    if (!($14)) {
     $373 = $49;
     _silk_encode_signs($0,$3,$4,$1,$2,$373);
     _llvm_stackrestore(($12|0));
     STACKTOP = sp;return;
    }
    $$4176 = 0;
    while(1) {
     $237 = (($49) + ($$4176<<2)|0);
     $238 = HEAP32[$237>>2]|0;
     $239 = ($238|0)>(0);
     if ($239) {
      $240 = $$4176 << 4;
      $241 = (($13) + ($240<<2)|0);
      _silk_shell_encoder($0,$241);
     }
     $242 = (($$4176) + 1)|0;
     $exitcond212 = ($242|0)==($$0151|0);
     if ($exitcond212) {
      break;
     } else {
      $$4176 = $242;
     }
    }
    if (!($14)) {
     $373 = $49;
     _silk_encode_signs($0,$3,$4,$1,$2,$373);
     _llvm_stackrestore(($12|0));
     STACKTOP = sp;return;
    }
    $$5172 = 0;
    while(1) {
     $243 = (($50) + ($$5172<<2)|0);
     $244 = HEAP32[$243>>2]|0;
     $245 = ($244|0)>(0);
     do {
      if ($245) {
       $246 = $$5172 << 4;
       $247 = (($3) + ($246)|0);
       $248 = ($244|0)==(1);
       if ($248) {
        $261 = HEAP8[$247>>0]|0;
        $262 = $261 << 24 >> 24;
        $263 = ($262|0)>(0);
        $264 = (0 - ($262))|0;
        $265 = $263 ? $262 : $264;
        $266 = $265 & 1;
        _ec_enc_icdf($0,$266,37812,8);
        $267 = ((($247)) + 1|0);
        $268 = HEAP8[$267>>0]|0;
        $269 = $268 << 24 >> 24;
        $270 = ($269|0)>(0);
        $271 = (0 - ($269))|0;
        $272 = $270 ? $269 : $271;
        $273 = $272 & 1;
        _ec_enc_icdf($0,$273,37812,8);
        $274 = ((($247)) + 2|0);
        $275 = HEAP8[$274>>0]|0;
        $276 = $275 << 24 >> 24;
        $277 = ($276|0)>(0);
        $278 = (0 - ($276))|0;
        $279 = $277 ? $276 : $278;
        $280 = $279 & 1;
        _ec_enc_icdf($0,$280,37812,8);
        $281 = ((($247)) + 3|0);
        $282 = HEAP8[$281>>0]|0;
        $283 = $282 << 24 >> 24;
        $284 = ($283|0)>(0);
        $285 = (0 - ($283))|0;
        $286 = $284 ? $283 : $285;
        $287 = $286 & 1;
        _ec_enc_icdf($0,$287,37812,8);
        $288 = ((($247)) + 4|0);
        $289 = HEAP8[$288>>0]|0;
        $290 = $289 << 24 >> 24;
        $291 = ($290|0)>(0);
        $292 = (0 - ($290))|0;
        $293 = $291 ? $290 : $292;
        $294 = $293 & 1;
        _ec_enc_icdf($0,$294,37812,8);
        $295 = ((($247)) + 5|0);
        $296 = HEAP8[$295>>0]|0;
        $297 = $296 << 24 >> 24;
        $298 = ($297|0)>(0);
        $299 = (0 - ($297))|0;
        $300 = $298 ? $297 : $299;
        $301 = $300 & 1;
        _ec_enc_icdf($0,$301,37812,8);
        $302 = ((($247)) + 6|0);
        $303 = HEAP8[$302>>0]|0;
        $304 = $303 << 24 >> 24;
        $305 = ($304|0)>(0);
        $306 = (0 - ($304))|0;
        $307 = $305 ? $304 : $306;
        $308 = $307 & 1;
        _ec_enc_icdf($0,$308,37812,8);
        $309 = ((($247)) + 7|0);
        $310 = HEAP8[$309>>0]|0;
        $311 = $310 << 24 >> 24;
        $312 = ($311|0)>(0);
        $313 = (0 - ($311))|0;
        $314 = $312 ? $311 : $313;
        $315 = $314 & 1;
        _ec_enc_icdf($0,$315,37812,8);
        $316 = ((($247)) + 8|0);
        $317 = HEAP8[$316>>0]|0;
        $318 = $317 << 24 >> 24;
        $319 = ($318|0)>(0);
        $320 = (0 - ($318))|0;
        $321 = $319 ? $318 : $320;
        $322 = $321 & 1;
        _ec_enc_icdf($0,$322,37812,8);
        $323 = ((($247)) + 9|0);
        $324 = HEAP8[$323>>0]|0;
        $325 = $324 << 24 >> 24;
        $326 = ($325|0)>(0);
        $327 = (0 - ($325))|0;
        $328 = $326 ? $325 : $327;
        $329 = $328 & 1;
        _ec_enc_icdf($0,$329,37812,8);
        $330 = ((($247)) + 10|0);
        $331 = HEAP8[$330>>0]|0;
        $332 = $331 << 24 >> 24;
        $333 = ($332|0)>(0);
        $334 = (0 - ($332))|0;
        $335 = $333 ? $332 : $334;
        $336 = $335 & 1;
        _ec_enc_icdf($0,$336,37812,8);
        $337 = ((($247)) + 11|0);
        $338 = HEAP8[$337>>0]|0;
        $339 = $338 << 24 >> 24;
        $340 = ($339|0)>(0);
        $341 = (0 - ($339))|0;
        $342 = $340 ? $339 : $341;
        $343 = $342 & 1;
        _ec_enc_icdf($0,$343,37812,8);
        $344 = ((($247)) + 12|0);
        $345 = HEAP8[$344>>0]|0;
        $346 = $345 << 24 >> 24;
        $347 = ($346|0)>(0);
        $348 = (0 - ($346))|0;
        $349 = $347 ? $346 : $348;
        $350 = $349 & 1;
        _ec_enc_icdf($0,$350,37812,8);
        $351 = ((($247)) + 13|0);
        $352 = HEAP8[$351>>0]|0;
        $353 = $352 << 24 >> 24;
        $354 = ($353|0)>(0);
        $355 = (0 - ($353))|0;
        $356 = $354 ? $353 : $355;
        $357 = $356 & 1;
        _ec_enc_icdf($0,$357,37812,8);
        $358 = ((($247)) + 14|0);
        $359 = HEAP8[$358>>0]|0;
        $360 = $359 << 24 >> 24;
        $361 = ($360|0)>(0);
        $362 = (0 - ($360))|0;
        $363 = $361 ? $360 : $362;
        $364 = $363 & 1;
        _ec_enc_icdf($0,$364,37812,8);
        $365 = ((($247)) + 15|0);
        $366 = HEAP8[$365>>0]|0;
        $367 = $366 << 24 >> 24;
        $368 = ($367|0)>(0);
        $369 = (0 - ($367))|0;
        $370 = $368 ? $367 : $369;
        $371 = $370 & 1;
        _ec_enc_icdf($0,$371,37812,8);
        break;
       }
       $$3149171$us = 0;
       while(1) {
        $249 = (($247) + ($$3149171$us)|0);
        $250 = HEAP8[$249>>0]|0;
        $251 = $250 << 24 >> 24;
        $252 = ($251|0)>(0);
        $253 = (0 - ($251))|0;
        $254 = $252 ? $251 : $253;
        $sext$us = $254 << 24;
        $255 = $sext$us >> 24;
        $$0150170$us$in = $244;
        while(1) {
         $$0150170$us = (($$0150170$us$in) + -1)|0;
         $256 = $255 >>> $$0150170$us;
         $257 = $256 & 1;
         _ec_enc_icdf($0,$257,37812,8);
         $258 = ($$0150170$us$in|0)>(2);
         if ($258) {
          $$0150170$us$in = $$0150170$us;
         } else {
          break;
         }
        }
        $259 = $255 & 1;
        _ec_enc_icdf($0,$259,37812,8);
        $260 = (($$3149171$us) + 1)|0;
        $exitcond = ($260|0)==(16);
        if ($exitcond) {
         break;
        } else {
         $$3149171$us = $260;
        }
       }
      }
     } while(0);
     $372 = (($$5172) + 1)|0;
     $exitcond211 = ($372|0)==($$0151|0);
     if ($exitcond211) {
      $373 = $49;
      break;
     } else {
      $$5172 = $372;
     }
    }
    _silk_encode_signs($0,$3,$4,$1,$2,$373);
    _llvm_stackrestore(($12|0));
    STACKTOP = sp;return;
   } else {
    $196 = $175;$529 = $49;
   }
  } else {
   $$ph222 = $49;
   label = 21;
  }
 } else {
  $$alloca_mul2 = $$0151<<2;
  $15 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul2)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul2)|0)+15)&-16)|0);;
  $$ph222 = $15;
  label = 21;
 }
 if ((label|0) == 21) {
  $172 = $1 >> 1;
  $196 = $172;$529 = $$ph222;
 }
 $195 = (21696 + (($196*9)|0)|0);
 $197 = HEAP8[$195>>0]|0;
 $198 = (((21696 + (($196*9)|0)|0)) + 1|0);
 $199 = HEAP8[$198>>0]|0;
 $200 = ($197&255)>($199&255);
 $spec$select$1 = $200&1;
 $spec$select159$1$v = $200 ? $199 : $197;
 $201 = (((21696 + (($196*9)|0)|0)) + 2|0);
 $202 = HEAP8[$201>>0]|0;
 $203 = ($spec$select159$1$v&255)>($202&255);
 $spec$select$2 = $203 ? 2 : $spec$select$1;
 $spec$select159$2$v = $203 ? $202 : $spec$select159$1$v;
 $204 = (((21696 + (($196*9)|0)|0)) + 3|0);
 $205 = HEAP8[$204>>0]|0;
 $206 = ($spec$select159$2$v&255)>($205&255);
 $spec$select$3 = $206 ? 3 : $spec$select$2;
 $spec$select159$3$v = $206 ? $205 : $spec$select159$2$v;
 $207 = (((21696 + (($196*9)|0)|0)) + 4|0);
 $208 = HEAP8[$207>>0]|0;
 $209 = ($spec$select159$3$v&255)>($208&255);
 $spec$select$4 = $209 ? 4 : $spec$select$3;
 $spec$select159$4$v = $209 ? $208 : $spec$select159$3$v;
 $210 = (((21696 + (($196*9)|0)|0)) + 5|0);
 $211 = HEAP8[$210>>0]|0;
 $212 = ($spec$select159$4$v&255)>($211&255);
 $spec$select$5 = $212 ? 5 : $spec$select$4;
 $spec$select159$5$v = $212 ? $211 : $spec$select159$4$v;
 $213 = (((21696 + (($196*9)|0)|0)) + 6|0);
 $214 = HEAP8[$213>>0]|0;
 $215 = ($spec$select159$5$v&255)>($214&255);
 $spec$select$6 = $215 ? 6 : $spec$select$5;
 $spec$select159$6$v = $215 ? $214 : $spec$select159$5$v;
 $216 = (((21696 + (($196*9)|0)|0)) + 7|0);
 $217 = HEAP8[$216>>0]|0;
 $218 = ($spec$select159$6$v&255)>($217&255);
 $spec$select$7 = $218 ? 7 : $spec$select$6;
 $spec$select159$7$v = $218 ? $217 : $spec$select159$6$v;
 $219 = (((21696 + (($196*9)|0)|0)) + 8|0);
 $220 = HEAP8[$219>>0]|0;
 $221 = ($spec$select159$7$v&255)>($220&255);
 $spec$select$8 = $221 ? 8 : $spec$select$7;
 $222 = (21664 + (($196*9)|0)|0);
 _ec_enc_icdf($0,$spec$select$8,$222,8);
 $373 = $529;
 _silk_encode_signs($0,$3,$4,$1,$2,$373);
 _llvm_stackrestore(($12|0));
 STACKTOP = sp;return;
}
function _silk_shell_encoder($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($1)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + ($2))|0;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + ($7))|0;
 $11 = ((($1)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($1)) + 20|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($14) + ($12))|0;
 $16 = ((($1)) + 24|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($1)) + 28|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (($19) + ($17))|0;
 $21 = ((($1)) + 32|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($1)) + 36|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (($24) + ($22))|0;
 $26 = ((($1)) + 40|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($1)) + 44|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = (($29) + ($27))|0;
 $31 = ((($1)) + 48|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ((($1)) + 52|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (($34) + ($32))|0;
 $36 = ((($1)) + 56|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ((($1)) + 60|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = (($39) + ($37))|0;
 $41 = (($10) + ($5))|0;
 $42 = (($20) + ($15))|0;
 $43 = (($30) + ($25))|0;
 $44 = (($40) + ($35))|0;
 $45 = (($42) + ($41))|0;
 $46 = (($44) + ($43))|0;
 $47 = (($46) + ($45))|0;
 $48 = ($47|0)>(0);
 if ($48) {
  $49 = (22368 + ($47)|0);
  $50 = HEAP8[$49>>0]|0;
  $51 = $50&255;
  $52 = (22208 + ($51)|0);
  _ec_enc_icdf($0,$45,$52,8);
 }
 $53 = ($45|0)>(0);
 if ($53) {
  $54 = (22368 + ($45)|0);
  $55 = HEAP8[$54>>0]|0;
  $56 = $55&255;
  $57 = (22048 + ($56)|0);
  _ec_enc_icdf($0,$41,$57,8);
 }
 $58 = ($41|0)>(0);
 if ($58) {
  $59 = (22368 + ($41)|0);
  $60 = HEAP8[$59>>0]|0;
  $61 = $60&255;
  $62 = (21888 + ($61)|0);
  _ec_enc_icdf($0,$5,$62,8);
 }
 $63 = ($5|0)>(0);
 if ($63) {
  $64 = (22368 + ($5)|0);
  $65 = HEAP32[$1>>2]|0;
  $66 = HEAP8[$64>>0]|0;
  $67 = $66&255;
  $68 = (21728 + ($67)|0);
  _ec_enc_icdf($0,$65,$68,8);
 }
 $69 = ($10|0)>(0);
 if ($69) {
  $70 = (22368 + ($10)|0);
  $71 = HEAP32[$6>>2]|0;
  $72 = HEAP8[$70>>0]|0;
  $73 = $72&255;
  $74 = (21728 + ($73)|0);
  _ec_enc_icdf($0,$71,$74,8);
 }
 $75 = ($42|0)>(0);
 if ($75) {
  $76 = (22368 + ($42)|0);
  $77 = HEAP8[$76>>0]|0;
  $78 = $77&255;
  $79 = (21888 + ($78)|0);
  _ec_enc_icdf($0,$15,$79,8);
 }
 $80 = ($15|0)>(0);
 if ($80) {
  $81 = (22368 + ($15)|0);
  $82 = HEAP32[$11>>2]|0;
  $83 = HEAP8[$81>>0]|0;
  $84 = $83&255;
  $85 = (21728 + ($84)|0);
  _ec_enc_icdf($0,$82,$85,8);
 }
 $86 = ($20|0)>(0);
 if ($86) {
  $87 = (22368 + ($20)|0);
  $88 = HEAP32[$16>>2]|0;
  $89 = HEAP8[$87>>0]|0;
  $90 = $89&255;
  $91 = (21728 + ($90)|0);
  _ec_enc_icdf($0,$88,$91,8);
 }
 $92 = ($46|0)>(0);
 if ($92) {
  $93 = (22368 + ($46)|0);
  $94 = HEAP8[$93>>0]|0;
  $95 = $94&255;
  $96 = (22048 + ($95)|0);
  _ec_enc_icdf($0,$43,$96,8);
 }
 $97 = ($43|0)>(0);
 if ($97) {
  $98 = (22368 + ($43)|0);
  $99 = HEAP8[$98>>0]|0;
  $100 = $99&255;
  $101 = (21888 + ($100)|0);
  _ec_enc_icdf($0,$25,$101,8);
 }
 $102 = ($25|0)>(0);
 if ($102) {
  $103 = (22368 + ($25)|0);
  $104 = HEAP32[$21>>2]|0;
  $105 = HEAP8[$103>>0]|0;
  $106 = $105&255;
  $107 = (21728 + ($106)|0);
  _ec_enc_icdf($0,$104,$107,8);
 }
 $108 = ($30|0)>(0);
 if ($108) {
  $109 = (22368 + ($30)|0);
  $110 = HEAP32[$26>>2]|0;
  $111 = HEAP8[$109>>0]|0;
  $112 = $111&255;
  $113 = (21728 + ($112)|0);
  _ec_enc_icdf($0,$110,$113,8);
 }
 $114 = ($44|0)>(0);
 if ($114) {
  $115 = (22368 + ($44)|0);
  $116 = HEAP8[$115>>0]|0;
  $117 = $116&255;
  $118 = (21888 + ($117)|0);
  _ec_enc_icdf($0,$35,$118,8);
 }
 $119 = ($35|0)>(0);
 if ($119) {
  $120 = (22368 + ($35)|0);
  $121 = HEAP32[$31>>2]|0;
  $122 = HEAP8[$120>>0]|0;
  $123 = $122&255;
  $124 = (21728 + ($123)|0);
  _ec_enc_icdf($0,$121,$124,8);
 }
 $125 = ($40|0)>(0);
 if (!($125)) {
  return;
 }
 $126 = (22368 + ($40)|0);
 $127 = HEAP32[$36>>2]|0;
 $128 = HEAP8[$126>>0]|0;
 $129 = $128&255;
 $130 = (21728 + ($129)|0);
 _ec_enc_icdf($0,$127,$130,8);
 return;
}
function _silk_shell_decoder($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = 0, $phitmp100 = 0, $phitmp102 = 0;
 var $phitmp103 = 0, $phitmp105 = 0, $phitmp106 = 0, $phitmp108 = 0, $phitmp109 = 0, $phitmp111 = 0, $phitmp112 = 0, $phitmp82 = 0, $phitmp84 = 0, $phitmp85 = 0, $phitmp87 = 0, $phitmp88 = 0, $phitmp90 = 0, $phitmp91 = 0, $phitmp93 = 0, $phitmp94 = 0, $phitmp96 = 0, $phitmp97 = 0, $phitmp99 = 0, $sext = 0;
 var $sext79 = 0, $sext80 = 0, $storemerge$i114116$ph = 0, $storemerge$i114116121 = 0, $storemerge$i114116122 = 0, $storemerge$i31117$ph = 0, $storemerge$i31117119 = 0, $storemerge$i31117120 = 0, $storemerge$i33123 = 0, $storemerge$i33124 = 0, $storemerge$i35 = 0, $storemerge$i37 = 0, $storemerge$i39125 = 0, $storemerge$i39126 = 0, $storemerge$i41 = 0, $storemerge$i43 = 0, $storemerge$i45127$ph = 0, $storemerge$i45127128 = 0, $storemerge$i45127129 = 0, $storemerge$i47130 = 0;
 var $storemerge$i47131 = 0, $storemerge$i49 = 0, $storemerge$i51 = 0, $storemerge$i53132 = 0, $storemerge$i53133 = 0, $storemerge$i55 = 0, $storemerge$i57 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)>(0);
 if ($3) {
  $4 = (22368 + ($2)|0);
  $5 = HEAP8[$4>>0]|0;
  $6 = $5&255;
  $7 = (22208 + ($6)|0);
  $8 = (_ec_dec_icdf($1,$7,8)|0);
  $9 = (($2) - ($8))|0;
  $phitmp93 = $9 << 16;
  $phitmp94 = $phitmp93 >> 16;
  $sext = $8 << 16;
  $10 = $sext >> 16;
  $11 = ($sext|0)>(0);
  if ($11) {
   $12 = (22368 + ($10)|0);
   $13 = HEAP8[$12>>0]|0;
   $14 = $13&255;
   $15 = (22048 + ($14)|0);
   $16 = (_ec_dec_icdf($1,$15,8)|0);
   $17 = (($10) - ($16))|0;
   $phitmp84 = $17 << 16;
   $phitmp85 = $phitmp84 >> 16;
   $sext79 = $16 << 16;
   $18 = $sext79 >> 16;
   $19 = ($sext79|0)>(0);
   if ($19) {
    $21 = (22368 + ($18)|0);
    $22 = HEAP8[$21>>0]|0;
    $23 = $22&255;
    $24 = (21888 + ($23)|0);
    $25 = (_ec_dec_icdf($1,$24,8)|0);
    $26 = (($18) - ($25))|0;
    $phitmp = $26 << 16;
    $phitmp82 = $phitmp >> 16;
    $27 = ((($0)) + 2|0);
    $sext80 = $25 << 16;
    $28 = $sext80 >> 16;
    $29 = ($sext80|0)>(0);
    if ($29) {
     $30 = (22368 + ($28)|0);
     $31 = HEAP8[$30>>0]|0;
     $32 = $31&255;
     $33 = (21728 + ($32)|0);
     $34 = (_ec_dec_icdf($1,$33,8)|0);
     $35 = $34&65535;
     HEAP16[$0>>1] = $35;
     $36 = (($28) - ($34))|0;
     $37 = $36&65535;
     $38 = $27;$storemerge$i114116121 = $phitmp94;$storemerge$i31117119 = $phitmp85;$storemerge$i33123 = $phitmp82;$storemerge$i35 = $37;
    } else {
     $156 = $27;$storemerge$i114116122 = $phitmp94;$storemerge$i31117120 = $phitmp85;$storemerge$i33124 = $phitmp82;
     label = 7;
    }
   } else {
    $storemerge$i114116$ph = $phitmp94;$storemerge$i31117$ph = $phitmp85;
    label = 4;
   }
  } else {
   $storemerge$i114116$ph = $phitmp94;$storemerge$i31117$ph = 0;
   label = 4;
  }
 } else {
  $storemerge$i114116$ph = 0;$storemerge$i31117$ph = 0;
  label = 4;
 }
 if ((label|0) == 4) {
  $20 = ((($0)) + 2|0);
  $156 = $20;$storemerge$i114116122 = $storemerge$i114116$ph;$storemerge$i31117120 = $storemerge$i31117$ph;$storemerge$i33124 = 0;
  label = 7;
 }
 if ((label|0) == 7) {
  HEAP16[$0>>1] = 0;
  $38 = $156;$storemerge$i114116121 = $storemerge$i114116122;$storemerge$i31117119 = $storemerge$i31117120;$storemerge$i33123 = $storemerge$i33124;$storemerge$i35 = 0;
 }
 HEAP16[$38>>1] = $storemerge$i35;
 $39 = ((($0)) + 4|0);
 $40 = ((($0)) + 6|0);
 $41 = ($storemerge$i33123|0)>(0);
 if ($41) {
  $42 = (22368 + ($storemerge$i33123)|0);
  $43 = HEAP8[$42>>0]|0;
  $44 = $43&255;
  $45 = (21728 + ($44)|0);
  $46 = (_ec_dec_icdf($1,$45,8)|0);
  $47 = $46&65535;
  HEAP16[$39>>1] = $47;
  $48 = (($storemerge$i33123) - ($46))|0;
  $49 = $48&65535;
  $storemerge$i37 = $49;
 } else {
  HEAP16[$39>>1] = 0;
  $storemerge$i37 = 0;
 }
 HEAP16[$40>>1] = $storemerge$i37;
 $50 = ($storemerge$i31117119|0)>(0);
 if ($50) {
  $53 = (22368 + ($storemerge$i31117119)|0);
  $54 = HEAP8[$53>>0]|0;
  $55 = $54&255;
  $56 = (21888 + ($55)|0);
  $57 = (_ec_dec_icdf($1,$56,8)|0);
  $58 = (($storemerge$i31117119) - ($57))|0;
  $phitmp87 = $57 << 16;
  $phitmp88 = $phitmp87 >> 16;
  $phitmp90 = $58 << 16;
  $phitmp91 = $phitmp90 >> 16;
  $59 = ((($0)) + 8|0);
  $60 = ((($0)) + 10|0);
  $61 = ($phitmp87|0)>(0);
  if ($61) {
   $62 = (22368 + ($phitmp88)|0);
   $63 = HEAP8[$62>>0]|0;
   $64 = $63&255;
   $65 = (21728 + ($64)|0);
   $66 = (_ec_dec_icdf($1,$65,8)|0);
   $67 = $66&65535;
   HEAP16[$59>>1] = $67;
   $68 = (($phitmp88) - ($66))|0;
   $69 = $68&65535;
   $71 = $60;$storemerge$i39125 = $phitmp91;$storemerge$i41 = $69;
  } else {
   $157 = $60;$70 = $59;$storemerge$i39126 = $phitmp91;
   label = 15;
  }
 } else {
  $51 = ((($0)) + 8|0);
  $52 = ((($0)) + 10|0);
  $157 = $52;$70 = $51;$storemerge$i39126 = 0;
  label = 15;
 }
 if ((label|0) == 15) {
  HEAP16[$70>>1] = 0;
  $71 = $157;$storemerge$i39125 = $storemerge$i39126;$storemerge$i41 = 0;
 }
 HEAP16[$71>>1] = $storemerge$i41;
 $72 = ((($0)) + 12|0);
 $73 = ((($0)) + 14|0);
 $74 = ($storemerge$i39125|0)>(0);
 if ($74) {
  $75 = (22368 + ($storemerge$i39125)|0);
  $76 = HEAP8[$75>>0]|0;
  $77 = $76&255;
  $78 = (21728 + ($77)|0);
  $79 = (_ec_dec_icdf($1,$78,8)|0);
  $80 = $79&65535;
  HEAP16[$72>>1] = $80;
  $81 = (($storemerge$i39125) - ($79))|0;
  $82 = $81&65535;
  $storemerge$i43 = $82;
 } else {
  HEAP16[$72>>1] = 0;
  $storemerge$i43 = 0;
 }
 HEAP16[$73>>1] = $storemerge$i43;
 $83 = ($storemerge$i114116121|0)>(0);
 if ($83) {
  $84 = (22368 + ($storemerge$i114116121)|0);
  $85 = HEAP8[$84>>0]|0;
  $86 = $85&255;
  $87 = (22048 + ($86)|0);
  $88 = (_ec_dec_icdf($1,$87,8)|0);
  $89 = (($storemerge$i114116121) - ($88))|0;
  $phitmp96 = $88 << 16;
  $phitmp97 = $phitmp96 >> 16;
  $phitmp105 = $89 << 16;
  $phitmp106 = $phitmp105 >> 16;
  $90 = ($phitmp96|0)>(0);
  if ($90) {
   $93 = (22368 + ($phitmp97)|0);
   $94 = HEAP8[$93>>0]|0;
   $95 = $94&255;
   $96 = (21888 + ($95)|0);
   $97 = (_ec_dec_icdf($1,$96,8)|0);
   $98 = (($phitmp97) - ($97))|0;
   $phitmp99 = $97 << 16;
   $phitmp100 = $phitmp99 >> 16;
   $phitmp102 = $98 << 16;
   $phitmp103 = $phitmp102 >> 16;
   $99 = ((($0)) + 16|0);
   $100 = ((($0)) + 18|0);
   $101 = ($phitmp99|0)>(0);
   if ($101) {
    $102 = (22368 + ($phitmp100)|0);
    $103 = HEAP8[$102>>0]|0;
    $104 = $103&255;
    $105 = (21728 + ($104)|0);
    $106 = (_ec_dec_icdf($1,$105,8)|0);
    $107 = $106&65535;
    HEAP16[$99>>1] = $107;
    $108 = (($phitmp100) - ($106))|0;
    $109 = $108&65535;
    $111 = $100;$storemerge$i45127128 = $phitmp106;$storemerge$i47130 = $phitmp103;$storemerge$i49 = $109;
   } else {
    $110 = $99;$158 = $100;$storemerge$i45127129 = $phitmp106;$storemerge$i47131 = $phitmp103;
    label = 24;
   }
  } else {
   $storemerge$i45127$ph = $phitmp106;
   label = 21;
  }
 } else {
  $storemerge$i45127$ph = 0;
  label = 21;
 }
 if ((label|0) == 21) {
  $91 = ((($0)) + 16|0);
  $92 = ((($0)) + 18|0);
  $110 = $91;$158 = $92;$storemerge$i45127129 = $storemerge$i45127$ph;$storemerge$i47131 = 0;
  label = 24;
 }
 if ((label|0) == 24) {
  HEAP16[$110>>1] = 0;
  $111 = $158;$storemerge$i45127128 = $storemerge$i45127129;$storemerge$i47130 = $storemerge$i47131;$storemerge$i49 = 0;
 }
 HEAP16[$111>>1] = $storemerge$i49;
 $112 = ((($0)) + 20|0);
 $113 = ((($0)) + 22|0);
 $114 = ($storemerge$i47130|0)>(0);
 if ($114) {
  $115 = (22368 + ($storemerge$i47130)|0);
  $116 = HEAP8[$115>>0]|0;
  $117 = $116&255;
  $118 = (21728 + ($117)|0);
  $119 = (_ec_dec_icdf($1,$118,8)|0);
  $120 = $119&65535;
  HEAP16[$112>>1] = $120;
  $121 = (($storemerge$i47130) - ($119))|0;
  $122 = $121&65535;
  $storemerge$i51 = $122;
 } else {
  HEAP16[$112>>1] = 0;
  $storemerge$i51 = 0;
 }
 HEAP16[$113>>1] = $storemerge$i51;
 $123 = ($storemerge$i45127128|0)>(0);
 if ($123) {
  $126 = (22368 + ($storemerge$i45127128)|0);
  $127 = HEAP8[$126>>0]|0;
  $128 = $127&255;
  $129 = (21888 + ($128)|0);
  $130 = (_ec_dec_icdf($1,$129,8)|0);
  $131 = (($storemerge$i45127128) - ($130))|0;
  $phitmp108 = $130 << 16;
  $phitmp109 = $phitmp108 >> 16;
  $phitmp111 = $131 << 16;
  $phitmp112 = $phitmp111 >> 16;
  $132 = ((($0)) + 24|0);
  $133 = ((($0)) + 26|0);
  $134 = ($phitmp108|0)>(0);
  if ($134) {
   $135 = (22368 + ($phitmp109)|0);
   $136 = HEAP8[$135>>0]|0;
   $137 = $136&255;
   $138 = (21728 + ($137)|0);
   $139 = (_ec_dec_icdf($1,$138,8)|0);
   $140 = $139&65535;
   HEAP16[$132>>1] = $140;
   $141 = (($phitmp109) - ($139))|0;
   $142 = $141&65535;
   $144 = $133;$storemerge$i53132 = $phitmp112;$storemerge$i55 = $142;
  } else {
   $143 = $132;$159 = $133;$storemerge$i53133 = $phitmp112;
   label = 32;
  }
 } else {
  $124 = ((($0)) + 24|0);
  $125 = ((($0)) + 26|0);
  $143 = $124;$159 = $125;$storemerge$i53133 = 0;
  label = 32;
 }
 if ((label|0) == 32) {
  HEAP16[$143>>1] = 0;
  $144 = $159;$storemerge$i53132 = $storemerge$i53133;$storemerge$i55 = 0;
 }
 HEAP16[$144>>1] = $storemerge$i55;
 $145 = ((($0)) + 28|0);
 $146 = ((($0)) + 30|0);
 $147 = ($storemerge$i53132|0)>(0);
 if ($147) {
  $148 = (22368 + ($storemerge$i53132)|0);
  $149 = HEAP8[$148>>0]|0;
  $150 = $149&255;
  $151 = (21728 + ($150)|0);
  $152 = (_ec_dec_icdf($1,$151,8)|0);
  $153 = $152&65535;
  HEAP16[$145>>1] = $153;
  $154 = (($storemerge$i53132) - ($152))|0;
  $155 = $154&65535;
  $storemerge$i57 = $155;
  HEAP16[$146>>1] = $storemerge$i57;
  return;
 } else {
  HEAP16[$145>>1] = 0;
  $storemerge$i57 = 0;
  HEAP16[$146>>1] = $storemerge$i57;
  return;
 }
}
function _silk_HP_variable_cutoff($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $phitmp = 0, $phitmp48 = 0, $sext = 0, $sext44 = 0, $sext45 = 0, $sext46 = 0, $spec$select = 0, $spec$select49 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4537|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)==(2);
 if (!($3)) {
  return;
 }
 $4 = ((($0)) + 4572|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = Math_imul($5, 65536000)|0;
 $7 = ((($0)) + 4540|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6|0) / ($8|0))&-1;
 $10 = (_silk_lin2log($9)|0);
 $11 = (($10) + -2048)|0;
 $12 = ((($0)) + 4692|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13 << 2;
 $15 = (0 - ($14))|0;
 $16 = $15 >> 16;
 $sext = $13 << 16;
 $17 = $sext >> 16;
 $18 = Math_imul($16, $17)|0;
 $19 = $15 & 65532;
 $20 = Math_imul($19, $17)|0;
 $21 = $20 >> 16;
 $22 = (($21) + ($18))|0;
 $23 = $22 >> 16;
 $24 = (_silk_lin2log(3932160)|0);
 $25 = (($10) - ($24))|0;
 $sext44 = $25 << 16;
 $26 = $sext44 >> 16;
 $27 = Math_imul($23, $26)|0;
 $28 = $22 & 65535;
 $29 = (_silk_lin2log(3932160)|0);
 $30 = (($10) - ($29))|0;
 $sext45 = $30 << 16;
 $31 = $sext45 >> 16;
 $32 = Math_imul($28, $31)|0;
 $33 = $32 >> 16;
 $34 = ((($0)) + 8|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = $35 >> 8;
 $37 = (($11) - ($36))|0;
 $38 = (($37) + ($27))|0;
 $39 = (($38) + ($33))|0;
 $40 = ($39|0)<(0);
 $41 = ($39*3)|0;
 $spec$select = $40 ? $41 : $39;
 $42 = ($spec$select|0)>(51);
 $43 = ($spec$select|0)>(-51);
 $44 = $43 ? $spec$select : -51;
 $phitmp = $44 << 16;
 $phitmp48 = $phitmp >> 16;
 $spec$select49 = $42 ? 51 : $phitmp48;
 $45 = ((($0)) + 4528|0);
 $46 = HEAP32[$45>>2]|0;
 $sext46 = $46 << 16;
 $47 = $sext46 >> 16;
 $48 = Math_imul($spec$select49, $47)|0;
 $49 = $48 >> 16;
 $50 = ($49*6554)|0;
 $51 = $48 & 65535;
 $52 = ($51*6554)|0;
 $53 = $52 >>> 16;
 $54 = (($50) + ($35))|0;
 $55 = (($54) + ($53))|0;
 HEAP32[$34>>2] = $55;
 $56 = (_silk_lin2log(60)|0);
 $57 = $56 << 8;
 $58 = (_silk_lin2log(100)|0);
 $59 = $58 << 8;
 $60 = ($57|0)>($59|0);
 $61 = HEAP32[$34>>2]|0;
 do {
  if ($60) {
   $62 = (_silk_lin2log(60)|0);
   $63 = $62 << 8;
   $64 = ($61|0)>($63|0);
   if ($64) {
    $65 = (_silk_lin2log(60)|0);
    $66 = $65 << 8;
    $86 = $66;
    break;
   }
   $67 = HEAP32[$34>>2]|0;
   $68 = (_silk_lin2log(100)|0);
   $69 = $68 << 8;
   $70 = ($67|0)<($69|0);
   if ($70) {
    $71 = (_silk_lin2log(100)|0);
    $72 = $71 << 8;
    $86 = $72;
    break;
   } else {
    $73 = HEAP32[$34>>2]|0;
    $86 = $73;
    break;
   }
  } else {
   $74 = (_silk_lin2log(100)|0);
   $75 = $74 << 8;
   $76 = ($61|0)>($75|0);
   if ($76) {
    $77 = (_silk_lin2log(100)|0);
    $78 = $77 << 8;
    $86 = $78;
    break;
   }
   $79 = HEAP32[$34>>2]|0;
   $80 = (_silk_lin2log(60)|0);
   $81 = $80 << 8;
   $82 = ($79|0)<($81|0);
   if ($82) {
    $83 = (_silk_lin2log(60)|0);
    $84 = $83 << 8;
    $86 = $84;
    break;
   } else {
    $85 = HEAP32[$34>>2]|0;
    $86 = $85;
    break;
   }
  }
 } while(0);
 HEAP32[$34>>2] = $86;
 return;
}
function _silk_NLSF_unpack($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$02728 = 0, $$029 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $mulconv = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($2)) + 2|0);
 $5 = HEAP16[$4>>1]|0;
 $6 = ($5<<16>>16)>(0);
 if (!($6)) {
  return;
 }
 $7 = ((($2)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $5 << 16 >> 16;
 $10 = Math_imul($9, $3)|0;
 $11 = (($10|0) / 2)&-1;
 $12 = (($8) + ($11)|0);
 $13 = ((($2)) + 20|0);
 $$02728 = 0;$$029 = $12;
 while(1) {
  $14 = ((($$029)) + 1|0);
  $15 = HEAP8[$$029>>0]|0;
  $16 = $15&255;
  $17 = $16 >>> 1;
  $18 = $17 & 7;
  $19 = ($18*9)|0;
  $20 = $19&65535;
  $21 = (($0) + ($$02728<<1)|0);
  HEAP16[$21>>1] = $20;
  $22 = HEAP32[$13>>2]|0;
  $23 = $16 & 1;
  $24 = HEAP16[$4>>1]|0;
  $25 = $24 << 16 >> 16;
  $26 = (($25) + -1)|0;
  $27 = (0 - ($23))|0;
  $28 = $26 & $27;
  $29 = (($28) + ($$02728))|0;
  $30 = (($22) + ($29)|0);
  $31 = HEAP8[$30>>0]|0;
  $32 = (($1) + ($$02728)|0);
  HEAP8[$32>>0] = $31;
  $33 = ($15&255) >>> 5;
  $mulconv = ($33*9)|0;
  $34 = $mulconv&255;
  $35 = $$02728 | 1;
  $36 = (($0) + ($35<<1)|0);
  HEAP16[$36>>1] = $34;
  $37 = HEAP32[$13>>2]|0;
  $38 = $16 >>> 4;
  $39 = $38 & 1;
  $40 = HEAP16[$4>>1]|0;
  $41 = $40 << 16 >> 16;
  $42 = (($41) + -1)|0;
  $43 = (0 - ($39))|0;
  $44 = $42 & $43;
  $45 = (($35) + ($44))|0;
  $46 = (($37) + ($45)|0);
  $47 = HEAP8[$46>>0]|0;
  $48 = (($1) + ($35)|0);
  HEAP8[$48>>0] = $47;
  $49 = (($$02728) + 2)|0;
  $50 = HEAP16[$4>>1]|0;
  $51 = $50 << 16 >> 16;
  $52 = ($49|0)<($51|0);
  if ($52) {
   $$02728 = $49;$$029 = $14;
  } else {
   break;
  }
 }
 return;
}
function _silk_stereo_LR_to_MS($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 var $$ = 0, $$0279322 = 0, $$0280 = 0, $$0282321 = 0, $$0283320 = 0, $$0335 = 0, $$1281$ph = 0, $$1281313$ph = 0, $$1281313317 = 0, $$1281313318 = 0, $$1281314 = 0, $$1331 = 0, $$2327 = 0, $$3323 = 0, $$359 = 0, $$360 = 0, $$361 = 0, $$4319 = 0, $$56$i = 0, $$56$i308 = 0;
 var $$alloca_mul = 0, $$alloca_mul10 = 0, $$alloca_mul12 = 0, $$alloca_mul14 = 0, $$alloca_mul4 = 0, $$alloca_mul6 = 0, $$alloca_mul8 = 0, $$neg$i = 0, $$neg$i305 = 0, $$pr = 0, $$pr315 = 0, $$pre = 0, $$pre$phi348Z2D = 0, $$pre$phiZ2D = 0, $$pre343 = 0, $$pre344 = 0, $$pre346 = 0, $$pre347 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0;
 var $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0;
 var $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0;
 var $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0;
 var $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $83$phi = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond339 = 0, $exitcond340 = 0, $sext = 0;
 var $sext$i = 0, $sext$i304 = 0, $sext284 = 0, $sext285 = 0, $sext286 = 0, $sext287 = 0, $sext288 = 0, $sext289 = 0, $sext290 = 0, $sext291 = 0, $sext292 = 0, $sext293 = 0, $sext294 = 0, $sext295 = 0, $sext296 = 0, $sext297 = 0, $sext298 = 0, $sext299 = 0, $sext300 = 0, $sext301 = 0;
 var $spec$select = 0, $spec$select$i = 0, $spec$select$i310 = 0, $spec$select58$i = 0, $spec$select58$i309 = 0, $spec$store$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $11 = sp + 8|0;
 $12 = sp + 4|0;
 $13 = sp;
 $14 = ((($1)) + -4|0);
 $15 = (($10) + 2)|0;
 $16 = (_llvm_stacksave()|0);
 $$alloca_mul = $15<<1;
 $17 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $18 = ($10|0)>(-2);
 if ($18) {
  $$0335 = 0;
  while(1) {
   $19 = (($$0335) + -2)|0;
   $20 = (($1) + ($19<<1)|0);
   $21 = HEAP16[$20>>1]|0;
   $22 = $21 << 16 >> 16;
   $23 = (($2) + ($19<<1)|0);
   $24 = HEAP16[$23>>1]|0;
   $25 = $24 << 16 >> 16;
   $26 = (($25) + ($22))|0;
   $27 = (($22) - ($25))|0;
   $28 = $26 >>> 1;
   $29 = $26 & 1;
   $30 = (($28) + ($29))|0;
   $31 = $30&65535;
   $32 = (($14) + ($$0335<<1)|0);
   HEAP16[$32>>1] = $31;
   $33 = $27 >> 1;
   $34 = $27 & 1;
   $35 = (($33) + ($34))|0;
   $36 = ($35|0)>(-32768);
   $spec$select = $36 ? $35 : -32768;
   $37 = ($spec$select|0)<(32767);
   $38 = $37 ? $spec$select : 32767;
   $39 = $38&65535;
   $40 = (($17) + ($$0335<<1)|0);
   HEAP16[$40>>1] = $39;
   $41 = (($$0335) + 1)|0;
   $42 = ($41|0)<($15|0);
   if ($42) {
    $$0335 = $41;
   } else {
    break;
   }
  }
 }
 $43 = ((($0)) + 4|0);
 $44 = HEAPU16[$43>>1]|(HEAPU16[$43+2>>1]<<16);
 HEAP16[$14>>1]=$44&65535;HEAP16[$14+2>>1]=$44>>>16;
 $45 = ((($0)) + 8|0);
 $46 = HEAP32[$45>>2]|0;
 HEAP32[$17>>2] = $46;
 $47 = (($14) + ($10<<1)|0);
 $48 = HEAPU16[$47>>1]|(HEAPU16[$47+2>>1]<<16);
 HEAP16[$43>>1]=$48&65535;HEAP16[$43+2>>1]=$48>>>16;
 $49 = (($17) + ($10<<1)|0);
 $50 = HEAPU16[$49>>1]|(HEAPU16[$49+2>>1]<<16);
 HEAP16[$45>>1]=$50&65535;HEAP16[$45+2>>1]=$50>>>16;
 $$alloca_mul4 = $10<<1;
 $51 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul4)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul4)|0)+15)&-16)|0);;
 $$alloca_mul6 = $10<<1;
 $52 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 $53 = ($10|0)>(0);
 $54 = $46&65535;
 $55 = $46 >>> 16;
 $56 = $55&65535;
 if ($53) {
  $$pre = HEAP16[$14>>1]|0;
  $$1331 = 0;$60 = $$pre;
  while(1) {
   $59 = $60 << 16 >> 16;
   $61 = (($1) + ($$1331<<1)|0);
   $62 = HEAP16[$61>>1]|0;
   $63 = $62 << 16 >> 16;
   $64 = (($63) + ($59))|0;
   $65 = (($$1331) + 1)|0;
   $66 = (($14) + ($65<<1)|0);
   $67 = HEAP16[$66>>1]|0;
   $68 = $67 << 16 >> 16;
   $69 = $68 << 1;
   $70 = (($64) + ($69))|0;
   $71 = $70 >> 1;
   $72 = (($71) + 1)|0;
   $73 = $72 >> 1;
   $74 = $73&65535;
   $75 = (($51) + ($$1331<<1)|0);
   HEAP16[$75>>1] = $74;
   $76 = $67&65535;
   $77 = (($76) - ($73))|0;
   $78 = $77&65535;
   $79 = (($52) + ($$1331<<1)|0);
   HEAP16[$79>>1] = $78;
   $exitcond340 = ($65|0)==($10|0);
   if ($exitcond340) {
    break;
   } else {
    $$1331 = $65;$60 = $67;
   }
  }
  $$alloca_mul12 = $10<<1;
  $80 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul12)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul12)|0)+15)&-16)|0);;
  $$alloca_mul14 = $10<<1;
  $81 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul14)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul14)|0)+15)&-16)|0);;
  if ($53) {
   $$2327 = 0;$83 = $54;$91 = $56;
   while(1) {
    $82 = $83 << 16 >> 16;
    $84 = (($$2327) + 2)|0;
    $85 = (($17) + ($84<<1)|0);
    $86 = HEAP16[$85>>1]|0;
    $87 = $86 << 16 >> 16;
    $88 = (($87) + ($82))|0;
    $89 = (($$2327) + 1)|0;
    $90 = $91 << 16 >> 16;
    $92 = $90 << 1;
    $93 = (($88) + ($92))|0;
    $94 = $93 >> 1;
    $95 = (($94) + 1)|0;
    $96 = $95 >> 1;
    $97 = $96&65535;
    $98 = (($80) + ($$2327<<1)|0);
    HEAP16[$98>>1] = $97;
    $99 = $91&65535;
    $100 = (($99) - ($96))|0;
    $101 = $100&65535;
    $102 = (($81) + ($$2327<<1)|0);
    HEAP16[$102>>1] = $101;
    $exitcond339 = ($89|0)==($10|0);
    if ($exitcond339) {
     $115 = $80;$118 = $81;
     break;
    } else {
     $83$phi = $91;$$2327 = $89;$91 = $86;$83 = $83$phi;
    }
   }
  } else {
   $115 = $80;$118 = $81;
  }
 } else {
  $$alloca_mul8 = $10<<1;
  $57 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul8)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul8)|0)+15)&-16)|0);;
  $$alloca_mul10 = $10<<1;
  $58 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul10)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul10)|0)+15)&-16)|0);;
  $115 = $57;$118 = $58;
 }
 $103 = ($9*10)|0;
 $104 = ($103|0)==($10|0);
 $sext = $7 << 16;
 $105 = $sext >> 16;
 $106 = Math_imul($105, $105)|0;
 $107 = $106 >>> 16;
 $108 = $104 ? 328 : 655;
 $109 = Math_imul($108, $107)|0;
 $110 = $106 & 65535;
 $111 = Math_imul($108, $110)|0;
 $112 = $111 >>> 16;
 $113 = (($112) + ($109))|0;
 $114 = ((($0)) + 12|0);
 $116 = (_silk_stereo_find_predictor($12,$51,$115,$114,$10,$113)|0);
 HEAP32[$11>>2] = $116;
 $117 = ((($0)) + 20|0);
 $119 = (_silk_stereo_find_predictor($13,$52,$118,$117,$10,$113)|0);
 $120 = ((($11)) + 4|0);
 HEAP32[$120>>2] = $119;
 $121 = HEAP32[$13>>2]|0;
 $122 = HEAP32[$12>>2]|0;
 $sext284 = $122 << 16;
 $123 = $sext284 >> 16;
 $124 = ($123*3)|0;
 $125 = (($124) + ($121))|0;
 $126 = ($125|0)<(65536);
 $127 = $126 ? $125 : 65536;
 $128 = $104 ? 1200 : 600;
 $129 = (($6) - ($128))|0;
 $130 = ($129|0)>(1);
 $spec$store$select = $130 ? $129 : 1;
 $sext285 = $9 << 16;
 $131 = $sext285 >> 16;
 $132 = ($131*900)|0;
 $133 = (($132) + 2000)|0;
 $134 = ($127*3)|0;
 $135 = (($134) + 851968)|0;
 $136 = ($spec$store$select|0)>(0);
 $137 = (0 - ($spec$store$select))|0;
 $138 = $136 ? $spec$store$select : $137;
 $139 = (Math_clz32(($138|0))|0);
 $140 = (($139) + -1)|0;
 $141 = $spec$store$select << $140;
 $142 = ($134|0)>(-851968);
 $143 = (-851968 - ($134))|0;
 $144 = $142 ? $135 : $143;
 $145 = (Math_clz32(($144|0))|0);
 $146 = (($145) + -1)|0;
 $147 = $135 << $146;
 $148 = $147 >> 16;
 $149 = (536870911 / ($148|0))&-1;
 $150 = $141 >> 16;
 $sext$i = $149 << 16;
 $151 = $sext$i >> 16;
 $152 = Math_imul($151, $150)|0;
 $153 = $141 & 65535;
 $154 = Math_imul($151, $153)|0;
 $155 = $154 >> 16;
 $156 = (($155) + ($152))|0;
 $157 = ($147|0)<(0);
 $158 = $157 << 31 >> 31;
 $159 = ($156|0)<(0);
 $160 = $159 << 31 >> 31;
 $161 = (___muldi3(($147|0),($158|0),($156|0),($160|0))|0);
 $162 = tempRet0;
 $163 = (_bitshift64Lshr(($161|0),($162|0),29)|0);
 $164 = tempRet0;
 $165 = $163 & -8;
 $166 = (($141) - ($165))|0;
 $167 = $166 >> 16;
 $168 = Math_imul($167, $151)|0;
 $169 = $166 & 65535;
 $170 = Math_imul($169, $151)|0;
 $171 = $170 >> 16;
 $172 = (($168) + ($156))|0;
 $173 = (($172) + ($171))|0;
 $$neg$i = (1 - ($145))|0;
 $174 = (($139) + 9)|0;
 $175 = (($174) + ($$neg$i))|0;
 $176 = ($175|0)<(0);
 if ($176) {
  $177 = (0 - ($175))|0;
  $178 = -2147483648 >> $177;
  $179 = 2147483647 >>> $177;
  $180 = ($178|0)>($179|0);
  $$ = $180 ? $178 : $179;
  $$359 = $180 ? $179 : $178;
  $181 = ($173|0)>($$|0);
  $182 = ($173|0)<($$359|0);
  $$56$i = $182 ? $$359 : $173;
  $spec$select58$i = $181 ? $$ : $$56$i;
  $183 = $spec$select58$i << $177;
  $186 = $183;
 } else {
  $184 = ($175|0)<(32);
  $185 = $173 >> $175;
  $spec$select$i = $184 ? $185 : 0;
  $186 = $spec$select$i;
 }
 HEAP32[$5>>2] = $186;
 $187 = ($186|0)<($133|0);
 if ($187) {
  HEAP32[$5>>2] = $133;
  $188 = (($spec$store$select) - ($133))|0;
  $189 = ((($5)) + 4|0);
  HEAP32[$189>>2] = $188;
  $190 = $188 << 1;
  $191 = (($190) - ($133))|0;
  $192 = (($134) + 65536)|0;
  $193 = $192 >> 16;
  $sext301 = $133 << 16;
  $194 = $sext301 >> 16;
  $195 = Math_imul($193, $194)|0;
  $196 = $192 & 65535;
  $197 = Math_imul($196, $194)|0;
  $198 = $197 >> 16;
  $199 = (($198) + ($195))|0;
  $200 = ($191|0)>(0);
  $201 = (0 - ($191))|0;
  $202 = $200 ? $191 : $201;
  $203 = (Math_clz32(($202|0))|0);
  $204 = (($203) + -1)|0;
  $205 = $191 << $204;
  $206 = ($199|0)>(0);
  $207 = (0 - ($199))|0;
  $208 = $206 ? $199 : $207;
  $209 = (Math_clz32(($208|0))|0);
  $210 = (($209) + -1)|0;
  $211 = $199 << $210;
  $212 = $211 >> 16;
  $213 = (536870911 / ($212|0))&-1;
  $214 = $205 >> 16;
  $sext$i304 = $213 << 16;
  $215 = $sext$i304 >> 16;
  $216 = Math_imul($215, $214)|0;
  $217 = $205 & 65535;
  $218 = Math_imul($215, $217)|0;
  $219 = $218 >> 16;
  $220 = (($219) + ($216))|0;
  $221 = ($211|0)<(0);
  $222 = $221 << 31 >> 31;
  $223 = ($220|0)<(0);
  $224 = $223 << 31 >> 31;
  $225 = (___muldi3(($220|0),($224|0),($211|0),($222|0))|0);
  $226 = tempRet0;
  $227 = (_bitshift64Lshr(($225|0),($226|0),29)|0);
  $228 = tempRet0;
  $229 = $227 & -8;
  $230 = (($205) - ($229))|0;
  $231 = $230 >> 16;
  $232 = Math_imul($231, $215)|0;
  $233 = $230 & 65535;
  $234 = Math_imul($233, $215)|0;
  $235 = $234 >> 16;
  $236 = (($232) + ($220))|0;
  $237 = (($236) + ($235))|0;
  $$neg$i305 = (1 - ($209))|0;
  $238 = (($203) + 12)|0;
  $239 = (($238) + ($$neg$i305))|0;
  $240 = ($239|0)<(0);
  if ($240) {
   $241 = (0 - ($239))|0;
   $242 = -2147483648 >> $241;
   $243 = 2147483647 >>> $241;
   $244 = ($242|0)>($243|0);
   $$360 = $244 ? $242 : $243;
   $$361 = $244 ? $243 : $242;
   $245 = ($237|0)>($$360|0);
   $246 = ($237|0)<($$361|0);
   $$56$i308 = $246 ? $$361 : $237;
   $spec$select58$i309 = $245 ? $$360 : $$56$i308;
   $247 = $spec$select58$i309 << $241;
   $251 = $247;
  } else {
   $248 = ($239|0)<(32);
   $249 = $237 >> $239;
   $spec$select$i310 = $248 ? $249 : 0;
   $251 = $spec$select$i310;
  }
  $250 = ($251|0)>(0);
  $252 = $250 ? $251 : 0;
  $253 = ($252|0)<(16384);
  $254 = $253 ? $252 : 16384;
  $$0280 = $254;
 } else {
  $255 = (($spec$store$select) - ($186))|0;
  $256 = ((($5)) + 4|0);
  HEAP32[$256>>2] = $255;
  $$0280 = 16384;
 }
 $257 = ((($0)) + 28|0);
 $258 = HEAP16[$257>>1]|0;
 $259 = $258 << 16 >> 16;
 $260 = (($$0280) - ($259))|0;
 $261 = $260 >> 16;
 $sext286 = $113 << 16;
 $262 = $sext286 >> 16;
 $263 = Math_imul($261, $262)|0;
 $264 = $260 & 65535;
 $265 = Math_imul($264, $262)|0;
 $266 = $265 >>> 16;
 $267 = (($263) + ($259))|0;
 $268 = (($267) + ($266))|0;
 $269 = $268&65535;
 HEAP16[$257>>1] = $269;
 HEAP8[$4>>0] = 0;
 $270 = ($8|0)==(0);
 L28: do {
  if ($270) {
   $271 = ((($0)) + 30|0);
   $272 = HEAP16[$271>>1]|0;
   $273 = ($272<<16>>16)==(0);
   $274 = $spec$store$select << 3;
   do {
    if ($273) {
     $275 = ($133*13)|0;
     $276 = ($274|0)<($275|0);
     if ($276) {
      $$pre344 = HEAP16[$257>>1]|0;
      $$pre346 = $$pre344 << 16 >> 16;
      $$pre$phiZ2D = $$pre346;
     } else {
      $277 = $127 >> 16;
      $278 = HEAP16[$257>>1]|0;
      $279 = $278 << 16 >> 16;
      $280 = Math_imul($277, $279)|0;
      $281 = $127 & 65535;
      $282 = Math_imul($281, $279)|0;
      $283 = $282 >> 16;
      $284 = (($283) + ($280))|0;
      $285 = ($284|0)<(819);
      if ($285) {
       $$pre$phiZ2D = $279;
      } else {
       $311 = $278;
       break;
      }
     }
     $sext299 = $116 << 16;
     $286 = $sext299 >> 16;
     $287 = Math_imul($286, $$pre$phiZ2D)|0;
     $288 = $287 >> 14;
     HEAP32[$11>>2] = $288;
     $sext300 = $119 << 16;
     $289 = $sext300 >> 16;
     $290 = Math_imul($289, $$pre$phiZ2D)|0;
     $291 = $290 >> 14;
     HEAP32[$120>>2] = $291;
     _silk_stereo_quant_pred($11,$3);
     HEAP32[$11>>2] = 0;
     HEAP32[$120>>2] = 0;
     HEAP32[$5>>2] = $spec$store$select;
     $292 = ((($5)) + 4|0);
     HEAP32[$292>>2] = 0;
     HEAP8[$4>>0] = 1;
     $$1281314 = 0;
     label = 35;
     break L28;
    } else {
     $293 = ($133*11)|0;
     $294 = ($274|0)<($293|0);
     if ($294) {
      $$pre343 = HEAP16[$257>>1]|0;
      $$pre347 = $$pre343 << 16 >> 16;
      $$pre$phi348Z2D = $$pre347;
     } else {
      $295 = $127 >> 16;
      $296 = HEAP16[$257>>1]|0;
      $297 = $296 << 16 >> 16;
      $298 = Math_imul($295, $297)|0;
      $299 = $127 & 65535;
      $300 = Math_imul($299, $297)|0;
      $301 = $300 >> 16;
      $302 = (($301) + ($298))|0;
      $303 = ($302|0)<(328);
      if ($303) {
       $$pre$phi348Z2D = $297;
      } else {
       $311 = $296;
       break;
      }
     }
     $sext297 = $116 << 16;
     $304 = $sext297 >> 16;
     $305 = Math_imul($304, $$pre$phi348Z2D)|0;
     $306 = $305 >> 14;
     HEAP32[$11>>2] = $306;
     $sext298 = $119 << 16;
     $307 = $sext298 >> 16;
     $308 = Math_imul($307, $$pre$phi348Z2D)|0;
     $309 = $308 >> 14;
     HEAP32[$120>>2] = $309;
     _silk_stereo_quant_pred($11,$3);
     HEAP32[$11>>2] = 0;
     HEAP32[$120>>2] = 0;
     $$1281$ph = 0;
     label = 34;
     break L28;
    }
   } while(0);
   $310 = ($311<<16>>16)>(15565);
   if ($310) {
    _silk_stereo_quant_pred($11,$3);
    $$1281$ph = 16384;
    label = 34;
    break;
   } else {
    $312 = $311 << 16 >> 16;
    $sext287 = $116 << 16;
    $313 = $sext287 >> 16;
    $314 = Math_imul($313, $312)|0;
    $315 = $314 >> 14;
    HEAP32[$11>>2] = $315;
    $sext288 = $119 << 16;
    $316 = $sext288 >> 16;
    $317 = Math_imul($316, $312)|0;
    $318 = $317 >> 14;
    HEAP32[$120>>2] = $318;
    _silk_stereo_quant_pred($11,$3);
    $319 = HEAP16[$257>>1]|0;
    $320 = $319 << 16 >> 16;
    $$1281$ph = $320;
    label = 34;
    break;
   }
  } else {
   HEAP32[$11>>2] = 0;
   HEAP32[$120>>2] = 0;
   _silk_stereo_quant_pred($11,$3);
   $$1281$ph = 0;
   label = 34;
  }
 } while(0);
 if ((label|0) == 34) {
  $$pr = HEAP8[$4>>0]|0;
  $321 = ($$pr<<24>>24)==(1);
  if ($321) {
   $$1281314 = $$1281$ph;
   label = 35;
  } else {
   $332 = ((($0)) + 32|0);
   HEAP16[$332>>1] = 0;
   $$1281313$ph = $$1281$ph;
   label = 39;
  }
 }
 do {
  if ((label|0) == 35) {
   $322 = $9 << 3;
   $323 = (($10) - ($322))|0;
   $324 = ((($0)) + 32|0);
   $325 = HEAP16[$324>>1]|0;
   $326 = $325&65535;
   $327 = (($323) + ($326))|0;
   $328 = $327&65535;
   HEAP16[$324>>1] = $328;
   $sext296 = $327 << 16;
   $329 = $sext296 >> 16;
   $330 = ($9*5)|0;
   $331 = ($329|0)<($330|0);
   if ($331) {
    HEAP8[$4>>0] = 0;
    $$1281313318 = $$1281314;
    label = 40;
    break;
   } else {
    HEAP16[$324>>1] = 10000;
    $$1281313$ph = $$1281314;
    label = 39;
    break;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $$pr315 = HEAP8[$4>>0]|0;
  $333 = ($$pr315<<24>>24)==(0);
  if ($333) {
   $$1281313318 = $$1281313$ph;
   label = 40;
  } else {
   $$1281313317 = $$1281313$ph;
  }
 }
 if ((label|0) == 40) {
  $334 = ((($5)) + 4|0);
  $335 = HEAP32[$334>>2]|0;
  $336 = ($335|0)<(1);
  $337 = (($spec$store$select) + -1)|0;
  if ($336) {
   $338 = ($337|0)>(1);
   $339 = $338 ? $337 : 1;
   HEAP32[$334>>2] = 1;
   HEAP32[$5>>2] = $339;
   $$1281313317 = $$1281313318;
  } else {
   $$1281313317 = $$1281313318;
  }
 }
 $340 = HEAP16[$0>>1]|0;
 $341 = $340 << 16 >> 16;
 $342 = ((($0)) + 2|0);
 $343 = HEAP16[$342>>1]|0;
 $344 = $343 << 16 >> 16;
 $345 = ((($0)) + 30|0);
 $346 = HEAP16[$345>>1]|0;
 $347 = $346 << 16 >> 16;
 $348 = $9 << 3;
 $349 = (65536 / ($348|0))&-1;
 $350 = HEAP32[$11>>2]|0;
 $351 = (($350) - ($341))|0;
 $sext289 = $351 << 16;
 $352 = $sext289 >> 16;
 $sext290 = $349 << 16;
 $353 = $sext290 >> 16;
 $354 = Math_imul($352, $353)|0;
 $355 = $354 >> 15;
 $356 = (($355) + 1)|0;
 $357 = $356 >> 1;
 $358 = HEAP32[$120>>2]|0;
 $359 = (($358) - ($344))|0;
 $sext291 = $359 << 16;
 $360 = $sext291 >> 16;
 $361 = Math_imul($360, $353)|0;
 $362 = $361 >> 15;
 $363 = (($362) + 1)|0;
 $364 = $363 >> 1;
 $365 = (($$1281313317) - ($347))|0;
 $366 = $365 >> 16;
 $367 = Math_imul($366, $353)|0;
 $368 = $365 & 65535;
 $369 = Math_imul($368, $353)|0;
 $370 = $369 >> 16;
 $371 = (($370) + ($367))|0;
 $372 = $371 << 10;
 $373 = ($9|0)>(0);
 if ($373) {
  $374 = $347 << 10;
  $375 = (0 - ($344))|0;
  $376 = (0 - ($341))|0;
  $$0279322 = $374;$$0282321 = $376;$$0283320 = $375;$$3323 = 0;
  while(1) {
   $377 = (($$0282321) - ($357))|0;
   $378 = (($$0283320) - ($364))|0;
   $379 = (($$0279322) + ($372))|0;
   $380 = (($14) + ($$3323<<1)|0);
   $381 = HEAP16[$380>>1]|0;
   $382 = $381 << 16 >> 16;
   $383 = (($1) + ($$3323<<1)|0);
   $384 = HEAP16[$383>>1]|0;
   $385 = $384 << 16 >> 16;
   $386 = (($385) + ($382))|0;
   $387 = (($$3323) + 1)|0;
   $388 = (($14) + ($387<<1)|0);
   $389 = HEAP16[$388>>1]|0;
   $390 = $389 << 16 >> 16;
   $391 = $390 << 1;
   $392 = (($386) + ($391))|0;
   $393 = $392 << 9;
   $394 = $379 >> 16;
   $395 = (($17) + ($387<<1)|0);
   $396 = HEAP16[$395>>1]|0;
   $397 = $396 << 16 >> 16;
   $398 = Math_imul($394, $397)|0;
   $399 = $379 & 64512;
   $400 = Math_imul($399, $397)|0;
   $401 = $400 >> 16;
   $402 = $392 >> 7;
   $sext294 = $377 << 16;
   $403 = $sext294 >> 16;
   $404 = Math_imul($402, $403)|0;
   $405 = $393 & 65024;
   $406 = Math_imul($405, $403)|0;
   $407 = $406 >> 16;
   $408 = $390 << 11;
   $409 = $390 >> 5;
   $sext295 = $378 << 16;
   $410 = $sext295 >> 16;
   $411 = Math_imul($409, $410)|0;
   $412 = $408 & 63488;
   $413 = Math_imul($412, $410)|0;
   $414 = $413 >> 16;
   $415 = (($398) + ($411))|0;
   $416 = (($415) + ($401))|0;
   $417 = (($416) + ($414))|0;
   $418 = (($417) + ($404))|0;
   $419 = (($418) + ($407))|0;
   $420 = $419 >>> 7;
   $421 = (($420) + 1)|0;
   $422 = $421 >>> 1;
   $423 = ($419|0)>(8388479);
   $424 = ($419|0)<(-8388736);
   $425 = $422&65535;
   $426 = $424 ? -32768 : $425;
   $427 = $423 ? 32767 : $426;
   $428 = (($$3323) + -1)|0;
   $429 = (($2) + ($428<<1)|0);
   HEAP16[$429>>1] = $427;
   $430 = ($387|0)<($348|0);
   if ($430) {
    $$0279322 = $379;$$0282321 = $377;$$0283320 = $378;$$3323 = $387;
   } else {
    break;
   }
  }
 }
 $431 = ($348|0)<($10|0);
 if (!($431)) {
  $485 = $350&65535;
  HEAP16[$0>>1] = $485;
  $486 = $358&65535;
  HEAP16[$342>>1] = $486;
  $487 = $$1281313317&65535;
  HEAP16[$345>>1] = $487;
  _llvm_stackrestore(($16|0));
  STACKTOP = sp;return;
 }
 $432 = $$1281313317 << 10;
 $433 = $$1281313317 >> 6;
 $434 = $432 & 64512;
 $435 = $350 << 16;
 $sext292 = (0 - ($435))|0;
 $436 = $sext292 >> 16;
 $437 = $358 << 16;
 $sext293 = (0 - ($437))|0;
 $438 = $sext293 >> 16;
 $$4319 = $348;
 while(1) {
  $439 = (($14) + ($$4319<<1)|0);
  $440 = HEAP16[$439>>1]|0;
  $441 = $440 << 16 >> 16;
  $442 = (($1) + ($$4319<<1)|0);
  $443 = HEAP16[$442>>1]|0;
  $444 = $443 << 16 >> 16;
  $445 = (($444) + ($441))|0;
  $446 = (($$4319) + 1)|0;
  $447 = (($14) + ($446<<1)|0);
  $448 = HEAP16[$447>>1]|0;
  $449 = $448 << 16 >> 16;
  $450 = $449 << 1;
  $451 = (($445) + ($450))|0;
  $452 = $451 << 9;
  $453 = (($17) + ($446<<1)|0);
  $454 = HEAP16[$453>>1]|0;
  $455 = $454 << 16 >> 16;
  $456 = Math_imul($433, $455)|0;
  $457 = Math_imul($434, $455)|0;
  $458 = $457 >> 16;
  $459 = $451 >> 7;
  $460 = Math_imul($459, $436)|0;
  $461 = $452 & 65024;
  $462 = Math_imul($461, $436)|0;
  $463 = $462 >> 16;
  $464 = $449 << 11;
  $465 = $449 >> 5;
  $466 = Math_imul($465, $438)|0;
  $467 = $464 & 63488;
  $468 = Math_imul($467, $438)|0;
  $469 = $468 >> 16;
  $470 = (($456) + ($466))|0;
  $471 = (($470) + ($458))|0;
  $472 = (($471) + ($469))|0;
  $473 = (($472) + ($460))|0;
  $474 = (($473) + ($463))|0;
  $475 = $474 >>> 7;
  $476 = (($475) + 1)|0;
  $477 = $476 >>> 1;
  $478 = ($474|0)>(8388479);
  $479 = ($474|0)<(-8388736);
  $480 = $477&65535;
  $481 = $479 ? -32768 : $480;
  $482 = $478 ? 32767 : $481;
  $483 = (($$4319) + -1)|0;
  $484 = (($2) + ($483<<1)|0);
  HEAP16[$484>>1] = $482;
  $exitcond = ($446|0)==($10|0);
  if ($exitcond) {
   break;
  } else {
   $$4319 = $446;
  }
 }
 $485 = $350&65535;
 HEAP16[$0>>1] = $485;
 $486 = $358&65535;
 HEAP16[$342>>1] = $486;
 $487 = $$1281313317&65535;
 HEAP16[$345>>1] = $487;
 _llvm_stackrestore(($16|0));
 STACKTOP = sp;return;
}
function _silk_stereo_MS_to_LR($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0119134 = 0, $$0120133 = 0, $$0135 = 0, $$1129 = 0, $$2128 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond139 = 0, $sext = 0, $sext121 = 0, $sext122 = 0, $sext123 = 0, $sext124 = 0, $sext125 = 0, $sext126 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($0)) + 4|0);
 $7 = HEAPU16[$6>>1]|(HEAPU16[$6+2>>1]<<16);
 HEAP16[$1>>1]=$7&65535;HEAP16[$1+2>>1]=$7>>>16;
 $8 = ((($0)) + 8|0);
 $9 = HEAPU16[$8>>1]|(HEAPU16[$8+2>>1]<<16);
 HEAP16[$2>>1]=$9&65535;HEAP16[$2+2>>1]=$9>>>16;
 $10 = (($1) + ($5<<1)|0);
 $11 = HEAPU16[$10>>1]|(HEAPU16[$10+2>>1]<<16);
 HEAP16[$6>>1]=$11&65535;HEAP16[$6+2>>1]=$11>>>16;
 $12 = (($2) + ($5<<1)|0);
 $13 = HEAPU16[$12>>1]|(HEAPU16[$12+2>>1]<<16);
 HEAP16[$8>>1]=$13&65535;HEAP16[$8+2>>1]=$13>>>16;
 $14 = HEAP16[$0>>1]|0;
 $15 = $14 << 16 >> 16;
 $16 = ((($0)) + 2|0);
 $17 = HEAP16[$16>>1]|0;
 $18 = $17 << 16 >> 16;
 $19 = $4 << 3;
 $20 = (65536 / ($19|0))&-1;
 $21 = HEAP32[$3>>2]|0;
 $22 = (($21) - ($15))|0;
 $sext = $22 << 16;
 $23 = $sext >> 16;
 $sext121 = $20 << 16;
 $24 = $sext121 >> 16;
 $25 = Math_imul($23, $24)|0;
 $26 = $25 >> 15;
 $27 = (($26) + 1)|0;
 $28 = $27 >> 1;
 $29 = ((($3)) + 4|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = (($30) - ($18))|0;
 $sext122 = $31 << 16;
 $32 = $sext122 >> 16;
 $33 = Math_imul($32, $24)|0;
 $34 = $33 >> 15;
 $35 = (($34) + 1)|0;
 $36 = $35 >> 1;
 $37 = ($4|0)>(0);
 if ($37) {
  $$0119134 = $15;$$0120133 = 0;$$0135 = $18;
  while(1) {
   $38 = (($$0119134) + ($28))|0;
   $39 = (($$0135) + ($36))|0;
   $40 = (($1) + ($$0120133<<1)|0);
   $41 = HEAP16[$40>>1]|0;
   $42 = $41 << 16 >> 16;
   $43 = (($$0120133) + 2)|0;
   $44 = (($1) + ($43<<1)|0);
   $45 = HEAP16[$44>>1]|0;
   $46 = $45 << 16 >> 16;
   $47 = (($46) + ($42))|0;
   $48 = (($$0120133) + 1)|0;
   $49 = (($1) + ($48<<1)|0);
   $50 = HEAP16[$49>>1]|0;
   $51 = $50 << 16 >> 16;
   $52 = $51 << 1;
   $53 = (($47) + ($52))|0;
   $54 = $53 << 9;
   $55 = (($2) + ($48<<1)|0);
   $56 = HEAP16[$55>>1]|0;
   $57 = $56 << 16 >> 16;
   $58 = $57 << 8;
   $59 = $53 >> 7;
   $sext125 = $38 << 16;
   $60 = $sext125 >> 16;
   $61 = Math_imul($59, $60)|0;
   $62 = $54 & 65024;
   $63 = Math_imul($62, $60)|0;
   $64 = $63 >> 16;
   $65 = $51 << 11;
   $66 = $51 >> 5;
   $sext126 = $39 << 16;
   $67 = $sext126 >> 16;
   $68 = Math_imul($66, $67)|0;
   $69 = $65 & 63488;
   $70 = Math_imul($69, $67)|0;
   $71 = $70 >> 16;
   $72 = (($58) + ($68))|0;
   $73 = (($72) + ($71))|0;
   $74 = (($73) + ($61))|0;
   $75 = (($74) + ($64))|0;
   $76 = $75 >>> 7;
   $77 = (($76) + 1)|0;
   $78 = $77 >>> 1;
   $79 = ($75|0)>(8388479);
   $80 = ($75|0)<(-8388736);
   $81 = $78&65535;
   $82 = $80 ? -32768 : $81;
   $83 = $79 ? 32767 : $82;
   HEAP16[$55>>1] = $83;
   $84 = ($48|0)<($19|0);
   if ($84) {
    $$0119134 = $38;$$0120133 = $48;$$0135 = $39;
   } else {
    break;
   }
  }
 }
 $85 = ($19|0)<($5|0);
 if ($85) {
  $sext123 = $21 << 16;
  $86 = $sext123 >> 16;
  $sext124 = $30 << 16;
  $87 = $sext124 >> 16;
  $$1129 = $19;
  while(1) {
   $88 = (($1) + ($$1129<<1)|0);
   $89 = HEAP16[$88>>1]|0;
   $90 = $89 << 16 >> 16;
   $91 = (($$1129) + 2)|0;
   $92 = (($1) + ($91<<1)|0);
   $93 = HEAP16[$92>>1]|0;
   $94 = $93 << 16 >> 16;
   $95 = (($94) + ($90))|0;
   $96 = (($$1129) + 1)|0;
   $97 = (($1) + ($96<<1)|0);
   $98 = HEAP16[$97>>1]|0;
   $99 = $98 << 16 >> 16;
   $100 = $99 << 1;
   $101 = (($95) + ($100))|0;
   $102 = $101 << 9;
   $103 = (($2) + ($96<<1)|0);
   $104 = HEAP16[$103>>1]|0;
   $105 = $104 << 16 >> 16;
   $106 = $105 << 8;
   $107 = $101 >> 7;
   $108 = Math_imul($107, $86)|0;
   $109 = $102 & 65024;
   $110 = Math_imul($109, $86)|0;
   $111 = $110 >> 16;
   $112 = $99 << 11;
   $113 = $99 >> 5;
   $114 = Math_imul($113, $87)|0;
   $115 = $112 & 63488;
   $116 = Math_imul($115, $87)|0;
   $117 = $116 >> 16;
   $118 = (($106) + ($114))|0;
   $119 = (($118) + ($117))|0;
   $120 = (($119) + ($108))|0;
   $121 = (($120) + ($111))|0;
   $122 = $121 >>> 7;
   $123 = (($122) + 1)|0;
   $124 = $123 >>> 1;
   $125 = ($121|0)>(8388479);
   $126 = ($121|0)<(-8388736);
   $127 = $124&65535;
   $128 = $126 ? -32768 : $127;
   $129 = $125 ? 32767 : $128;
   HEAP16[$103>>1] = $129;
   $exitcond139 = ($96|0)==($5|0);
   if ($exitcond139) {
    break;
   } else {
    $$1129 = $96;
   }
  }
 }
 $130 = $21&65535;
 HEAP16[$0>>1] = $130;
 $131 = $30&65535;
 HEAP16[$16>>1] = $131;
 $132 = ($5|0)>(0);
 if (!($132)) {
  return;
 }
 $$2128 = 0;
 while(1) {
  $133 = (($$2128) + 1)|0;
  $134 = (($1) + ($133<<1)|0);
  $135 = HEAP16[$134>>1]|0;
  $136 = $135 << 16 >> 16;
  $137 = (($2) + ($133<<1)|0);
  $138 = HEAP16[$137>>1]|0;
  $139 = $138 << 16 >> 16;
  $140 = (($139) + ($136))|0;
  $141 = (($136) - ($139))|0;
  $142 = ($140|0)>(-32768);
  $143 = $142 ? $140 : -32768;
  $144 = ($143|0)<(32767);
  $145 = $144 ? $143 : 32767;
  $146 = $145&65535;
  HEAP16[$134>>1] = $146;
  $147 = ($141|0)>(-32768);
  $148 = $147 ? $141 : -32768;
  $149 = ($148|0)<(32767);
  $150 = $149 ? $148 : 32767;
  $151 = $150&65535;
  HEAP16[$137>>1] = $151;
  $exitcond = ($133|0)==($5|0);
  if ($exitcond) {
   break;
  } else {
   $$2128 = $133;
  }
 }
 return;
}
function _check_control_input($0) {
 $0 = $0|0;
 var $$0 = 0, $$off = 0, $$off50 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond49 = 0, $spec$select = 0;
 var $switch$split102D = 0, $switch$split12D = 0, $switch$split132D = 0, $switch$split162D = 0, $switch$split192D = 0, $switch$split222D = 0, $switch$split252D = 0, $switch$split282D = 0, $switch$split2D = 0, $switch$split312D = 0, $switch$split42D = 0, $switch$split72D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $switch$split2D = ($2|0)<(24000);
 L1: do {
  if ($switch$split2D) {
   $switch$split102D = ($2|0)<(12000);
   if ($switch$split102D) {
    switch ($2|0) {
    case 8000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     $$0 = -102;
     break L1;
    }
    }
   }
   $switch$split252D = ($2|0)<(16000);
   if ($switch$split252D) {
    switch ($2|0) {
    case 12000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     $$0 = -102;
     break L1;
    }
    }
   } else {
    switch ($2|0) {
    case 16000:  {
     label = 2;
     break L1;
     break;
    }
    default: {
     $$0 = -102;
     break L1;
    }
    }
   }
  } else {
   $switch$split132D = ($2|0)<(44100);
   if ($switch$split132D) {
    $switch$split282D = ($2|0)<(32000);
    if ($switch$split282D) {
     switch ($2|0) {
     case 24000:  {
      label = 2;
      break L1;
      break;
     }
     default: {
      $$0 = -102;
      break L1;
     }
     }
    } else {
     switch ($2|0) {
     case 32000:  {
      label = 2;
      break L1;
      break;
     }
     default: {
      $$0 = -102;
      break L1;
     }
     }
    }
   } else {
    $switch$split312D = ($2|0)<(48000);
    if ($switch$split312D) {
     switch ($2|0) {
     case 44100:  {
      label = 2;
      break L1;
      break;
     }
     default: {
      $$0 = -102;
      break L1;
     }
     }
    } else {
     switch ($2|0) {
     case 48000:  {
      label = 2;
      break L1;
      break;
     }
     default: {
      $$0 = -102;
      break L1;
     }
     }
    }
   }
  }
 } while(0);
 L19: do {
  if ((label|0) == 2) {
   $3 = ((($0)) + 20|0);
   $4 = HEAP32[$3>>2]|0;
   $switch$split12D = ($4|0)<(12000);
   L21: do {
    if ($switch$split12D) {
     switch ($4|0) {
     case 8000:  {
      break;
     }
     default: {
      $$0 = -102;
      break L19;
     }
     }
    } else {
     $switch$split162D = ($4|0)<(16000);
     if ($switch$split162D) {
      switch ($4|0) {
      case 12000:  {
       break L21;
       break;
      }
      default: {
       $$0 = -102;
       break L19;
      }
      }
     } else {
      switch ($4|0) {
      case 16000:  {
       break L21;
       break;
      }
      default: {
       $$0 = -102;
       break L19;
      }
      }
     }
    }
   } while(0);
   $5 = ((($0)) + 12|0);
   $6 = HEAP32[$5>>2]|0;
   $switch$split42D = ($6|0)<(12000);
   L28: do {
    if ($switch$split42D) {
     switch ($6|0) {
     case 8000:  {
      break;
     }
     default: {
      $$0 = -102;
      break L19;
     }
     }
    } else {
     $switch$split192D = ($6|0)<(16000);
     if ($switch$split192D) {
      switch ($6|0) {
      case 12000:  {
       break L28;
       break;
      }
      default: {
       $$0 = -102;
       break L19;
      }
      }
     } else {
      switch ($6|0) {
      case 16000:  {
       break L28;
       break;
      }
      default: {
       $$0 = -102;
       break L19;
      }
      }
     }
    }
   } while(0);
   $7 = ((($0)) + 16|0);
   $8 = HEAP32[$7>>2]|0;
   $switch$split72D = ($8|0)<(12000);
   L35: do {
    if ($switch$split72D) {
     switch ($8|0) {
     case 8000:  {
      break;
     }
     default: {
      $$0 = -102;
      break L19;
     }
     }
    } else {
     $switch$split222D = ($8|0)<(16000);
     if ($switch$split222D) {
      switch ($8|0) {
      case 12000:  {
       break L35;
       break;
      }
      default: {
       $$0 = -102;
       break L19;
      }
      }
     } else {
      switch ($8|0) {
      case 16000:  {
       break L35;
       break;
      }
      default: {
       $$0 = -102;
       break L19;
      }
      }
     }
    }
   } while(0);
   $9 = ($8|0)>($4|0);
   if ($9) {
    $$0 = -102;
   } else {
    $10 = ($6|0)<($4|0);
    $11 = ($8|0)>($6|0);
    $or$cond = $10 | $11;
    if ($or$cond) {
     $$0 = -102;
    } else {
     $12 = ((($0)) + 24|0);
     $13 = HEAP32[$12>>2]|0;
     switch ($13|0) {
     case 60: case 40: case 20: case 10:  {
      break;
     }
     default: {
      $$0 = -103;
      break L19;
     }
     }
     $14 = ((($0)) + 32|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15>>>0)>(100);
     if ($16) {
      $$0 = -105;
     } else {
      $17 = ((($0)) + 48|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = ($18>>>0)>(1);
      if ($19) {
       $$0 = -108;
      } else {
       $20 = ((($0)) + 52|0);
       $21 = HEAP32[$20>>2]|0;
       $22 = ($21>>>0)>(1);
       if ($22) {
        $$0 = -109;
       } else {
        $23 = ((($0)) + 40|0);
        $24 = HEAP32[$23>>2]|0;
        $25 = ($24>>>0)>(1);
        if ($25) {
         $$0 = -107;
        } else {
         $26 = HEAP32[$0>>2]|0;
         $$off = (($26) + -1)|0;
         $27 = ($$off>>>0)>(1);
         if ($27) {
          $$0 = -111;
         } else {
          $28 = ((($0)) + 4|0);
          $29 = HEAP32[$28>>2]|0;
          $$off50 = (($29) + -1)|0;
          $30 = ($$off50>>>0)>(1);
          $31 = ($29|0)>($26|0);
          $or$cond49 = $31 | $30;
          if ($or$cond49) {
           $$0 = -111;
          } else {
           $32 = ((($0)) + 36|0);
           $33 = HEAP32[$32>>2]|0;
           $34 = ($33>>>0)>(10);
           $spec$select = $34 ? -106 : 0;
           return ($spec$select|0);
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _silk_control_SNR($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$03640$lcssa = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $switch$select = 0, $switch$select38 = 0, $switch$selectcmp = 0, $switch$selectcmp37 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(5000);
 $3 = $2 ? $1 : 5000;
 $4 = ($3|0)<(80000);
 $5 = $4 ? $3 : 80000;
 $6 = ((($0)) + 4604|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5|0)==($7|0);
 if ($8) {
  return 0;
 }
 HEAP32[$6>>2] = $5;
 $9 = ((($0)) + 4572|0);
 $10 = HEAP32[$9>>2]|0;
 $switch$selectcmp = ($10|0)==(12);
 $switch$select = $switch$selectcmp ? 20928 : 20960;
 $switch$selectcmp37 = ($10|0)==(8);
 $switch$select38 = $switch$selectcmp37 ? 20896 : $switch$select;
 $11 = ((($0)) + 4576|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(2);
 $14 = (($5) + -2200)|0;
 $spec$select = $13 ? $14 : $5;
 $15 = ((($switch$select38)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($spec$select|0)>($16|0);
 if ($17) {
  $36 = ((($switch$select38)) + 8|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ($spec$select|0)>($37|0);
  if ($38) {
   $39 = ((($switch$select38)) + 12|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ($spec$select|0)>($40|0);
   if ($41) {
    $42 = ((($switch$select38)) + 16|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = ($spec$select|0)>($43|0);
    if ($44) {
     $45 = ((($switch$select38)) + 20|0);
     $46 = HEAP32[$45>>2]|0;
     $47 = ($spec$select|0)>($46|0);
     if ($47) {
      $48 = ((($switch$select38)) + 24|0);
      $49 = HEAP32[$48>>2]|0;
      $50 = ($spec$select|0)>($49|0);
      if ($50) {
       $51 = ((($switch$select38)) + 28|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = ($spec$select|0)>($52|0);
       if ($53) {
        return 0;
       } else {
        $$03640$lcssa = 7;$$lcssa = $52;
       }
      } else {
       $$03640$lcssa = 6;$$lcssa = $49;
      }
     } else {
      $$03640$lcssa = 5;$$lcssa = $46;
     }
    } else {
     $$03640$lcssa = 4;$$lcssa = $43;
    }
   } else {
    $$03640$lcssa = 3;$$lcssa = $40;
   }
  } else {
   $$03640$lcssa = 2;$$lcssa = $37;
  }
 } else {
  $$03640$lcssa = 1;$$lcssa = $16;
 }
 $18 = (($$03640$lcssa) + -1)|0;
 $19 = (($switch$select38) + ($18<<2)|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($spec$select) - ($20))|0;
 $22 = $21 << 6;
 $23 = (($$lcssa) - ($20))|0;
 $24 = (($22|0) / ($23|0))&-1;
 $25 = (20992 + ($18<<1)|0);
 $26 = HEAP16[$25>>1]|0;
 $27 = $26 << 16 >> 16;
 $28 = $27 << 6;
 $29 = (20992 + ($$03640$lcssa<<1)|0);
 $30 = HEAP16[$29>>1]|0;
 $31 = $30 << 16 >> 16;
 $32 = (($31) - ($27))|0;
 $33 = Math_imul($32, $24)|0;
 $34 = (($33) + ($28))|0;
 $35 = ((($0)) + 4712|0);
 HEAP32[$35>>2] = $34;
 return 0;
}
function _silk_init_encoder($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _memset(($0|0),0,10060)|0;
 $2 = ((($0)) + 5088|0);
 HEAP32[$2>>2] = $1;
 $3 = (_silk_lin2log(3932160)|0);
 $4 = $3 << 8;
 $5 = (($4) + -524288)|0;
 $6 = ((($0)) + 8|0);
 HEAP32[$6>>2] = $5;
 $7 = ((($0)) + 12|0);
 HEAP32[$7>>2] = $5;
 $8 = ((($0)) + 4660|0);
 HEAP32[$8>>2] = 1;
 $9 = ((($0)) + 32|0);
 $10 = (_silk_VAD_Init($9)|0);
 return ($10|0);
}
function _silk_control_encoder($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$$i = 0, $$0$i = 0, $$056 = 0, $$1$i = 0, $$idx = 0, $$idx$val = 0, $$neg$i = 0, $$neg2$i = 0, $$phi$trans$insert$i = 0, $$pre$i = 0, $$pre$phi$i57Z2D = 0, $$pre$phi$iZ2D = 0, $$pre84$pre$phi$iZZ2D = 0, $$sink$i = 0, $$sink$v$i = 0, $$sink59 = 0, $$sink61 = 0, $$sink63 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond$i = 0, $sext$i = 0, $sext79$i = 0, $sext80$i = 0, $sext81$i = 0;
 var $sext82$i = 0, $sext83$i = 0, $silk_NLSF_CB_WB$sink = 0, $spec$select = 0, $spec$select65 = 0, $spec$select66 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 6072|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($1)) + 52|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 4672|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($1)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($0)) + 4552|0);
 HEAP32[$13>>2] = $12;
 $14 = ((($1)) + 12|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($0)) + 4560|0);
 HEAP32[$16>>2] = $15;
 $17 = ((($1)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($0)) + 4564|0);
 HEAP32[$19>>2] = $18;
 $20 = ((($1)) + 20|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($0)) + 4568|0);
 HEAP32[$22>>2] = $21;
 $23 = ((($1)) + 40|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ((($0)) + 6084|0);
 HEAP32[$25>>2] = $24;
 $26 = HEAP32[$1>>2]|0;
 $27 = ((($0)) + 5748|0);
 HEAP32[$27>>2] = $26;
 $28 = ((($1)) + 4|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ((($0)) + 5752|0);
 HEAP32[$30>>2] = $29;
 $31 = ((($0)) + 4532|0);
 HEAP32[$31>>2] = $2;
 $32 = ((($0)) + 5756|0);
 HEAP32[$32>>2] = $3;
 $33 = ((($0)) + 4664|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ($34|0)==(0);
 if (!($35)) {
  $36 = ((($0)) + 4676|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ($37|0)==(0);
  if ($38) {
   $39 = ((($0)) + 4556|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ($12|0)==($40|0);
   if ($41) {
    $$056 = 0;
    return ($$056|0);
   }
   $42 = ((($0)) + 4572|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ($43|0)>(0);
   if (!($44)) {
    $$056 = 0;
    return ($$056|0);
   }
   $45 = (_silk_setup_resamplers($0,$43)|0);
   $$056 = $45;
   return ($$056|0);
  }
 }
 $46 = (_silk_control_audio_bandwidth($0,$1)|0);
 $47 = ($4|0)==(0);
 $spec$select = $47 ? $46 : $4;
 $48 = (_silk_setup_resamplers($0,$spec$select)|0);
 $49 = ((($1)) + 24|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = ((($0)) + 4608|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = ($52|0)==($50|0);
 if ($53) {
  $$phi$trans$insert$i = ((($0)) + 4572|0);
  $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
  $$1$i = 0;$$pre$phi$iZ2D = $$phi$trans$insert$i;$83 = $$pre$i;
 } else {
  switch ($50|0) {
  case 10: case 20: case 40: case 60:  {
   $$0$i = 0;
   break;
  }
  default: {
   $$0$i = -103;
  }
  }
  $54 = ($50|0)<(11);
  do {
   if ($54) {
    $55 = ((($0)) + 5740|0);
    HEAP32[$55>>2] = 1;
    $56 = ($50|0)==(10);
    $57 = $56 ? 2 : 1;
    $58 = ((($0)) + 4576|0);
    HEAP32[$58>>2] = $57;
    $sext82$i = $50 << 16;
    $59 = $sext82$i >> 16;
    $sext83$i = $spec$select << 16;
    $60 = $sext83$i >> 16;
    $61 = Math_imul($59, $60)|0;
    $62 = ((($0)) + 4580|0);
    HEAP32[$62>>2] = $61;
    $63 = ($60*14)|0;
    $64 = ((($0)) + 4544|0);
    HEAP32[$64>>2] = $63;
    $65 = ((($0)) + 4572|0);
    $66 = HEAP32[$65>>2]|0;
    $67 = ($66|0)==(8);
    $68 = ((($0)) + 4684|0);
    if ($67) {
     HEAP32[$68>>2] = 37884;
     $$pre84$pre$phi$iZZ2D = $65;$240 = 8;
     break;
    } else {
     HEAP32[$68>>2] = 37872;
     $$pre84$pre$phi$iZZ2D = $65;$240 = $66;
     break;
    }
   } else {
    $69 = (($50>>>0) / 20)&-1;
    $70 = ((($0)) + 5740|0);
    HEAP32[$70>>2] = $69;
    $71 = ((($0)) + 4576|0);
    HEAP32[$71>>2] = 4;
    $sext81$i = $spec$select << 16;
    $72 = $sext81$i >> 16;
    $73 = ($72*20)|0;
    $74 = ((($0)) + 4580|0);
    HEAP32[$74>>2] = $73;
    $75 = ($72*24)|0;
    $76 = ((($0)) + 4544|0);
    HEAP32[$76>>2] = $75;
    $77 = ((($0)) + 4572|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = ($78|0)==(8);
    $80 = ((($0)) + 4684|0);
    if ($79) {
     HEAP32[$80>>2] = 37861;
     $$pre84$pre$phi$iZZ2D = $77;$240 = 8;
     break;
    } else {
     HEAP32[$80>>2] = 21248;
     $$pre84$pre$phi$iZZ2D = $77;$240 = $78;
     break;
    }
   }
  } while(0);
  HEAP32[$51>>2] = $50;
  $81 = ((($0)) + 4604|0);
  HEAP32[$81>>2] = 0;
  $$1$i = $$0$i;$$pre$phi$iZ2D = $$pre84$pre$phi$iZZ2D;$83 = $240;
 }
 $82 = ($83|0)==($spec$select|0);
 do {
  if (!($82)) {
   $84 = ((($0)) + 7164|0);
   ;HEAP32[$84>>2]=0|0;HEAP32[$84+4>>2]=0|0;HEAP32[$84+8>>2]=0|0;
   $85 = ((($0)) + 144|0);
   $86 = ((($0)) + 16|0);
   $87 = $86;
   $88 = $87;
   HEAP32[$88>>2] = 0;
   $89 = (($87) + 4)|0;
   $90 = $89;
   HEAP32[$90>>2] = 0;
   $91 = ((($0)) + 5736|0);
   HEAP32[$91>>2] = 0;
   $92 = ((($0)) + 5744|0);
   HEAP32[$92>>2] = 0;
   $93 = ((($0)) + 4604|0);
   HEAP32[$93>>2] = 0;
   $94 = ((($0)) + 4540|0);
   _memset(($85|0),0,4384)|0;
   HEAP32[$94>>2] = 100;
   $95 = ((($0)) + 4660|0);
   HEAP32[$95>>2] = 1;
   HEAP8[$84>>0] = 10;
   $96 = ((($0)) + 4472|0);
   HEAP32[$96>>2] = 100;
   $97 = ((($0)) + 4488|0);
   HEAP32[$97>>2] = 65536;
   $98 = ((($0)) + 4537|0);
   HEAP8[$98>>0] = 0;
   HEAP32[$$pre$phi$iZ2D>>2] = $spec$select;
   $99 = ($spec$select|0)==(8);
   $100 = ((($0)) + 4576|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = ($101|0)==(4);
   $103 = ((($0)) + 4684|0);
   if ($99) {
    $$ = $102 ? 37861 : 37884;
    HEAP32[$103>>2] = $$;
    $$sink59 = 10;$silk_NLSF_CB_WB$sink = 36772;
   } else {
    $$$i = $102 ? 21248 : 37872;
    HEAP32[$103>>2] = $$$i;
    $cond$i = ($spec$select|0)==(12);
    $spec$select65 = $cond$i ? 10 : 16;
    $spec$select66 = $cond$i ? 36772 : 36812;
    $$sink59 = $spec$select65;$silk_NLSF_CB_WB$sink = $spec$select66;
   }
   $104 = ((($0)) + 4636|0);
   HEAP32[$104>>2] = $$sink59;
   $105 = ((($0)) + 4688|0);
   HEAP32[$105>>2] = $silk_NLSF_CB_WB$sink;
   $106 = ($spec$select*5)|0;
   $107 = ((($0)) + 4584|0);
   HEAP32[$107>>2] = $106;
   $sext$i = ($spec$select*327680)|0;
   $108 = $sext$i >> 16;
   $sext79$i = $101 << 16;
   $109 = $sext79$i >> 16;
   $110 = Math_imul($109, $108)|0;
   $111 = ((($0)) + 4580|0);
   HEAP32[$111>>2] = $110;
   $sext80$i = $spec$select << 16;
   $112 = $sext80$i >> 16;
   $113 = ($112*20)|0;
   $114 = ((($0)) + 4588|0);
   HEAP32[$114>>2] = $113;
   $115 = $sext80$i >> 15;
   $116 = ((($0)) + 4592|0);
   HEAP32[$116>>2] = $115;
   $117 = ($112*18)|0;
   $118 = ((($0)) + 4548|0);
   HEAP32[$118>>2] = $117;
   $$sink$v$i = $102 ? 24 : 14;
   $$sink$i = Math_imul($$sink$v$i, $112)|0;
   $119 = ((($0)) + 4544|0);
   HEAP32[$119>>2] = $$sink$i;
   $120 = ($spec$select|0)==(16);
   if ($120) {
    $121 = ((($0)) + 4680|0);
    HEAP32[$121>>2] = 37846;
    break;
   }
   $122 = ($spec$select|0)==(12);
   $123 = ((($0)) + 4680|0);
   if ($122) {
    HEAP32[$123>>2] = 37840;
    break;
   } else {
    HEAP32[$123>>2] = 37831;
    break;
   }
  }
 } while(0);
 $124 = ((($1)) + 36|0);
 $125 = HEAP32[$124>>2]|0;
 $126 = ($125|0)<(1);
 do {
  if ($126) {
   $127 = ((($0)) + 4640|0);
   HEAP32[$127>>2] = 0;
   $128 = ((($0)) + 4648|0);
   HEAP32[$128>>2] = 52429;
   $129 = ((($0)) + 4644|0);
   HEAP32[$129>>2] = 6;
   $130 = ((($0)) + 4632|0);
   HEAP32[$130>>2] = 12;
   $131 = ((($0)) + 4572|0);
   $132 = HEAP32[$131>>2]|0;
   $133 = ($132*3)|0;
   $134 = ((($0)) + 4596|0);
   HEAP32[$134>>2] = $133;
   $135 = ((($0)) + 4624|0);
   HEAP32[$135>>2] = 1;
   $136 = ((($0)) + 4628|0);
   HEAP32[$136>>2] = 0;
   $137 = ((($0)) + 4656|0);
   HEAP32[$137>>2] = 2;
   $$pre$phi$i57Z2D = $129;$$sink61 = 0;$215 = 6;$218 = $132;$220 = $133;
  } else {
   $138 = ($125|0)==(1);
   if ($138) {
    $139 = ((($0)) + 4640|0);
    HEAP32[$139>>2] = 1;
    $140 = ((($0)) + 4648|0);
    HEAP32[$140>>2] = 49807;
    $141 = ((($0)) + 4644|0);
    HEAP32[$141>>2] = 8;
    $142 = ((($0)) + 4632|0);
    HEAP32[$142>>2] = 14;
    $143 = ((($0)) + 4572|0);
    $144 = HEAP32[$143>>2]|0;
    $145 = ($144*5)|0;
    $146 = ((($0)) + 4596|0);
    HEAP32[$146>>2] = $145;
    $147 = ((($0)) + 4624|0);
    HEAP32[$147>>2] = 1;
    $148 = ((($0)) + 4628|0);
    HEAP32[$148>>2] = 0;
    $149 = ((($0)) + 4656|0);
    HEAP32[$149>>2] = 3;
    $$pre$phi$i57Z2D = $141;$$sink61 = 0;$215 = 8;$218 = $144;$220 = $145;
    break;
   }
   $150 = ($125|0)<(3);
   if ($150) {
    $151 = ((($0)) + 4640|0);
    HEAP32[$151>>2] = 0;
    $152 = ((($0)) + 4648|0);
    HEAP32[$152>>2] = 52429;
    $153 = ((($0)) + 4644|0);
    HEAP32[$153>>2] = 6;
    $154 = ((($0)) + 4632|0);
    HEAP32[$154>>2] = 12;
    $155 = ((($0)) + 4572|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156*3)|0;
    $158 = ((($0)) + 4596|0);
    HEAP32[$158>>2] = $157;
    $159 = ((($0)) + 4624|0);
    HEAP32[$159>>2] = 2;
    $160 = ((($0)) + 4628|0);
    HEAP32[$160>>2] = 0;
    $161 = ((($0)) + 4656|0);
    HEAP32[$161>>2] = 2;
    $$pre$phi$i57Z2D = $153;$$sink61 = 0;$215 = 6;$218 = $156;$220 = $157;
    break;
   }
   $162 = ($125|0)==(3);
   if ($162) {
    $163 = ((($0)) + 4640|0);
    HEAP32[$163>>2] = 1;
    $164 = ((($0)) + 4648|0);
    HEAP32[$164>>2] = 49807;
    $165 = ((($0)) + 4644|0);
    HEAP32[$165>>2] = 8;
    $166 = ((($0)) + 4632|0);
    HEAP32[$166>>2] = 14;
    $167 = ((($0)) + 4572|0);
    $168 = HEAP32[$167>>2]|0;
    $169 = ($168*5)|0;
    $170 = ((($0)) + 4596|0);
    HEAP32[$170>>2] = $169;
    $171 = ((($0)) + 4624|0);
    HEAP32[$171>>2] = 2;
    $172 = ((($0)) + 4628|0);
    HEAP32[$172>>2] = 0;
    $173 = ((($0)) + 4656|0);
    HEAP32[$173>>2] = 4;
    $$pre$phi$i57Z2D = $165;$$sink61 = 0;$215 = 8;$218 = $168;$220 = $169;
    break;
   }
   $174 = ($125|0)<(6);
   if ($174) {
    $175 = ((($0)) + 4640|0);
    HEAP32[$175>>2] = 1;
    $176 = ((($0)) + 4648|0);
    HEAP32[$176>>2] = 48497;
    $177 = ((($0)) + 4644|0);
    HEAP32[$177>>2] = 10;
    $178 = ((($0)) + 4632|0);
    HEAP32[$178>>2] = 16;
    $179 = ((($0)) + 4572|0);
    $180 = HEAP32[$179>>2]|0;
    $181 = ($180*5)|0;
    $182 = ((($0)) + 4596|0);
    HEAP32[$182>>2] = $181;
    $183 = ((($0)) + 4624|0);
    HEAP32[$183>>2] = 2;
    $184 = ((($0)) + 4628|0);
    HEAP32[$184>>2] = 1;
    $185 = ((($0)) + 4656|0);
    HEAP32[$185>>2] = 6;
    $186 = ($180*983)|0;
    $$pre$phi$i57Z2D = $177;$$sink61 = $186;$215 = 10;$218 = $180;$220 = $181;
    break;
   }
   $187 = ($125|0)<(8);
   $188 = ((($0)) + 4640|0);
   if ($187) {
    HEAP32[$188>>2] = 1;
    $189 = ((($0)) + 4648|0);
    HEAP32[$189>>2] = 47186;
    $190 = ((($0)) + 4644|0);
    HEAP32[$190>>2] = 12;
    $191 = ((($0)) + 4632|0);
    HEAP32[$191>>2] = 20;
    $192 = ((($0)) + 4572|0);
    $193 = HEAP32[$192>>2]|0;
    $194 = ($193*5)|0;
    $195 = ((($0)) + 4596|0);
    HEAP32[$195>>2] = $194;
    $196 = ((($0)) + 4624|0);
    HEAP32[$196>>2] = 3;
    $197 = ((($0)) + 4628|0);
    HEAP32[$197>>2] = 1;
    $198 = ((($0)) + 4656|0);
    HEAP32[$198>>2] = 8;
    $199 = ($193*983)|0;
    $$pre$phi$i57Z2D = $190;$$sink61 = $199;$215 = 12;$218 = $193;$220 = $194;
    break;
   } else {
    HEAP32[$188>>2] = 2;
    $200 = ((($0)) + 4648|0);
    HEAP32[$200>>2] = 45875;
    $201 = ((($0)) + 4644|0);
    HEAP32[$201>>2] = 16;
    $202 = ((($0)) + 4632|0);
    HEAP32[$202>>2] = 24;
    $203 = ((($0)) + 4572|0);
    $204 = HEAP32[$203>>2]|0;
    $205 = ($204*5)|0;
    $206 = ((($0)) + 4596|0);
    HEAP32[$206>>2] = $205;
    $207 = ((($0)) + 4624|0);
    HEAP32[$207>>2] = 4;
    $208 = ((($0)) + 4628|0);
    HEAP32[$208>>2] = 1;
    $209 = ((($0)) + 4656|0);
    HEAP32[$209>>2] = 16;
    $210 = ($204*983)|0;
    $$pre$phi$i57Z2D = $201;$$sink61 = $210;$215 = 16;$218 = $204;$220 = $205;
    break;
   }
  }
 } while(0);
 $211 = ((($0)) + 4668|0);
 HEAP32[$211>>2] = $$sink61;
 $212 = ((($0)) + 4636|0);
 $213 = HEAP32[$212>>2]|0;
 $214 = ($215|0)<($213|0);
 $216 = $214 ? $215 : $213;
 HEAP32[$$pre$phi$i57Z2D>>2] = $216;
 $217 = ($218*5)|0;
 $219 = $220 << 1;
 $221 = (($217) + ($219))|0;
 $222 = ((($0)) + 4600|0);
 HEAP32[$222>>2] = $221;
 $223 = ((($0)) + 4620|0);
 HEAP32[$223>>2] = $125;
 $224 = ((($1)) + 32|0);
 $225 = HEAP32[$224>>2]|0;
 $226 = ((($0)) + 4612|0);
 HEAP32[$226>>2] = $225;
 $$idx = ((($1)) + 44|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $227 = ((($0)) + 6088|0);
 $228 = HEAP32[$227>>2]|0;
 HEAP32[$227>>2] = $$idx$val;
 $229 = ($$idx$val|0)==(0);
 if (!($229)) {
  $230 = ($228|0)==(0);
  if ($230) {
   $$sink63 = 7;
  } else {
   $231 = $225 >> 16;
   $232 = $225 & 65535;
   $233 = ($232*26214)|0;
   $234 = $233 >>> 16;
   $$neg$i = Math_imul($231, -26214)|0;
   $$neg2$i = (($$neg$i) + 7)|0;
   $235 = (($$neg2$i) - ($234))|0;
   $236 = ($235|0)>(2);
   $237 = $236 ? $235 : 2;
   $$sink63 = $237;
  }
  $238 = ((($0)) + 6092|0);
  HEAP32[$238>>2] = $$sink63;
 }
 $239 = (($$1$i) + ($48))|0;
 HEAP32[$33>>2] = 1;
 $$056 = $239;
 return ($$056|0);
}
function _silk_setup_resamplers($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$012$i = 0, $$012$in$i = 0, $$08$i = 0, $$08$in$i = 0, $$alloca_mul = 0, $$alloca_mul2 = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = Math_fround(0), $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = Math_fround(0), $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $sext = 0, $sext49 = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $2 = sp;
 $3 = ((($0)) + 4572|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==($1|0);
 if ($5) {
  $6 = ((($0)) + 4556|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ((($0)) + 4552|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($7|0)==($9|0);
  if ($10) {
   $$0 = 0;$$pre$phiZ2D = $8;
   $63 = HEAP32[$$pre$phiZ2D>>2]|0;
   $64 = ((($0)) + 4556|0);
   HEAP32[$64>>2] = $63;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $11 = ($4|0)==(0);
 if ($11) {
  $12 = ((($0)) + 5772|0);
  $13 = ((($0)) + 4552|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ($1*1000)|0;
  $16 = (_silk_resampler_init($12,$14,$15,1)|0);
  $$0 = $16;$$pre$phiZ2D = $13;
  $63 = HEAP32[$$pre$phiZ2D>>2]|0;
  $64 = ((($0)) + 4556|0);
  HEAP32[$64>>2] = $63;
  STACKTOP = sp;return ($$0|0);
 }
 $17 = ((($0)) + 4576|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18*10)|0;
 $20 = (($19) + 5)|0;
 $21 = Math_imul($20, $4)|0;
 $22 = Math_imul($20, $1)|0;
 $23 = ($21|0)>($22|0);
 $24 = $23 ? $21 : $22;
 $25 = (_llvm_stacksave()|0);
 $$alloca_mul = $24<<1;
 $26 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $27 = ($21|0)>(0);
 if ($27) {
  $$012$in$i = $21;
  while(1) {
   $$012$i = (($$012$in$i) + -1)|0;
   $28 = (((($0)) + 7176|0) + ($$012$i<<2)|0);
   $29 = Math_fround(HEAPF32[$28>>2]);
   $30 = (_lrintf($29)|0);
   $31 = ($30|0)>(-32768);
   $spec$select$i = $31 ? $30 : -32768;
   $32 = ($spec$select$i|0)<(32767);
   $33 = $32 ? $spec$select$i : 32767;
   $34 = $33&65535;
   $35 = (($26) + ($$012$i<<1)|0);
   HEAP16[$35>>1] = $34;
   $36 = ($$012$in$i|0)>(1);
   if ($36) {
    $$012$in$i = $$012$i;
   } else {
    break;
   }
  }
 }
 $37 = HEAP32[$3>>2]|0;
 $sext = $37 << 16;
 $38 = $sext >> 16;
 $39 = ($38*1000)|0;
 $40 = ((($0)) + 4552|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = (_silk_resampler_init($2,$39,$41,0)|0);
 $43 = HEAP32[$40>>2]|0;
 $44 = (($43|0) / 1000)&-1;
 $45 = Math_imul($44, $20)|0;
 $$alloca_mul2 = $45<<1;
 $46 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul2)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul2)|0)+15)&-16)|0);;
 $47 = (_silk_resampler($2,$46,$26,$21)|0);
 $48 = (($47) + ($42))|0;
 $49 = ((($0)) + 5772|0);
 $50 = HEAP32[$40>>2]|0;
 $sext49 = $1 << 16;
 $51 = $sext49 >> 16;
 $52 = ($51*1000)|0;
 $53 = (_silk_resampler_init($49,$50,$52,1)|0);
 $54 = (($48) + ($53))|0;
 $55 = (_silk_resampler($49,$26,$46,$45)|0);
 $56 = (($54) + ($55))|0;
 $57 = ($22|0)>(0);
 if ($57) {
  $$08$in$i = $22;
  while(1) {
   $$08$i = (($$08$in$i) + -1)|0;
   $58 = (($26) + ($$08$i<<1)|0);
   $59 = HEAP16[$58>>1]|0;
   $60 = (Math_fround(($59<<16>>16)));
   $61 = (((($0)) + 7176|0) + ($$08$i<<2)|0);
   HEAPF32[$61>>2] = $60;
   $62 = ($$08$in$i|0)>(1);
   if ($62) {
    $$08$in$i = $$08$i;
   } else {
    break;
   }
  }
 }
 _llvm_stackrestore(($25|0));
 $$0 = $56;$$pre$phiZ2D = $40;
 $63 = HEAP32[$$pre$phiZ2D>>2]|0;
 $64 = ((($0)) + 4556|0);
 HEAP32[$64>>2] = $63;
 STACKTOP = sp;return ($$0|0);
}
function _silk_lin2log($0) {
 $0 = $0|0;
 var $$0$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (Math_clz32(($0|0))|0);
 $2 = (24 - ($1))|0;
 $3 = (0 - ($2))|0;
 $4 = ($2|0)==(0);
 do {
  if ($4) {
   $$0$i$i = $0;
  } else {
   $5 = ($2|0)<(0);
   if ($5) {
    $6 = $0 << $3;
    $7 = (($2) + 32)|0;
    $8 = $0 >>> $7;
    $9 = $8 | $6;
    $$0$i$i = $9;
    break;
   } else {
    $10 = (32 - ($2))|0;
    $11 = $0 << $10;
    $12 = $0 >>> $2;
    $13 = $11 | $12;
    $$0$i$i = $13;
    break;
   }
  }
 } while(0);
 $14 = $$0$i$i & 127;
 $15 = (128 - ($14))|0;
 $16 = ($14*179)|0;
 $17 = Math_imul($16, $15)|0;
 $18 = $17 >>> 16;
 $19 = $1 << 7;
 $20 = (3968 - ($19))|0;
 $21 = $20 | $14;
 $22 = (($21) + ($18))|0;
 return ($22|0);
}
function _silk_log2lin($0) {
 $0 = $0|0;
 var $$0 = 0, $$022 = 0, $$pn = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = 0;
  return ($$0|0);
 }
 $2 = ($0|0)>(3966);
 if ($2) {
  $$0 = 2147483647;
  return ($$0|0);
 }
 $3 = $0 >>> 7;
 $4 = 1 << $3;
 $5 = $0 & 127;
 $6 = ($0|0)<(2048);
 if ($6) {
  $7 = (128 - ($5))|0;
  $8 = Math_imul($5, -174)|0;
  $9 = Math_imul($8, $7)|0;
  $10 = $9 >> 16;
  $11 = (($10) + ($5))|0;
  $12 = $11 << $3;
  $13 = $12 >> 7;
  $$pn = $13;
 } else {
  $14 = $4 >> 7;
  $15 = (128 - ($5))|0;
  $16 = Math_imul($5, -174)|0;
  $17 = Math_imul($16, $15)|0;
  $18 = $17 >> 16;
  $19 = (($18) + ($5))|0;
  $20 = Math_imul($19, $14)|0;
  $$pn = $20;
 }
 $$022 = (($$pn) + ($4))|0;
 $$0 = $$022;
 return ($$0|0);
}
function _silk_resampler_init($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0108 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $sext = 0, $storemerge = 0, $switch$split102D = 0, $switch$split12D = 0, $switch$split132D = 0, $switch$split162D = 0, $switch$split192D = 0, $switch$split222D = 0, $switch$split252D = 0;
 var $switch$split282D = 0, $switch$split2D = 0, $switch$split312D = 0, $switch$split42D = 0, $switch$split72D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _memset(($0|0),0,300)|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $switch$split42D = ($1|0)<(12000);
  L3: do {
   if ($switch$split42D) {
    switch ($1|0) {
    case 8000:  {
     break L3;
     break;
    }
    default: {
     $$0108 = -1;
    }
    }
    return ($$0108|0);
   } else {
    $switch$split192D = ($1|0)<(16000);
    if ($switch$split192D) {
     switch ($1|0) {
     case 12000:  {
      break L3;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    } else {
     switch ($1|0) {
     case 16000:  {
      break L3;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    }
   }
  } while(0);
  $switch$split72D = ($2|0)<(16000);
  L13: do {
   if ($switch$split72D) {
    $switch$split222D = ($2|0)<(12000);
    if ($switch$split222D) {
     switch ($2|0) {
     case 8000:  {
      break L13;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    } else {
     switch ($2|0) {
     case 12000:  {
      break L13;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    }
   } else {
    $switch$split252D = ($2|0)<(24000);
    if ($switch$split252D) {
     switch ($2|0) {
     case 16000:  {
      break L13;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    }
    $switch$split312D = ($2|0)<(48000);
    if ($switch$split312D) {
     switch ($2|0) {
     case 24000:  {
      break L13;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    } else {
     switch ($2|0) {
     case 48000:  {
      break L13;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    }
   }
  } while(0);
  $16 = $1 >>> 12;
  $17 = (($16) + -1)|0;
  $18 = $2 >>> 12;
  $19 = ($2|0)>(16000);
  $20 = $19&1;
  $21 = (($18) - ($20))|0;
  $22 = ($2|0)>(24000);
  $23 = $22&1;
  $24 = $21 >> $23;
  $25 = (($24) + -1)|0;
  $26 = ((37906 + (($17*5)|0)|0) + ($25)|0);
  $$sink = $26;
 } else {
  $switch$split2D = ($1|0)<(16000);
  L32: do {
   if ($switch$split2D) {
    $switch$split102D = ($1|0)<(12000);
    if ($switch$split102D) {
     switch ($1|0) {
     case 8000:  {
      break L32;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    } else {
     switch ($1|0) {
     case 12000:  {
      break L32;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    }
   } else {
    $switch$split132D = ($1|0)<(24000);
    if ($switch$split132D) {
     switch ($1|0) {
     case 16000:  {
      break L32;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    }
    $switch$split282D = ($1|0)<(48000);
    if ($switch$split282D) {
     switch ($1|0) {
     case 24000:  {
      break L32;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    } else {
     switch ($1|0) {
     case 48000:  {
      break L32;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    }
   }
  } while(0);
  $switch$split12D = ($2|0)<(12000);
  L50: do {
   if ($switch$split12D) {
    switch ($2|0) {
    case 8000:  {
     break L50;
     break;
    }
    default: {
     $$0108 = -1;
    }
    }
    return ($$0108|0);
   } else {
    $switch$split162D = ($2|0)<(16000);
    if ($switch$split162D) {
     switch ($2|0) {
     case 12000:  {
      break L50;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    } else {
     switch ($2|0) {
     case 16000:  {
      break L50;
      break;
     }
     default: {
      $$0108 = -1;
     }
     }
     return ($$0108|0);
    }
   }
  } while(0);
  $5 = $1 >>> 12;
  $6 = ($1|0)>(16000);
  $7 = $6&1;
  $8 = (($5) - ($7))|0;
  $9 = ($1|0)>(24000);
  $10 = $9&1;
  $11 = $8 >> $10;
  $12 = (($11) + -1)|0;
  $13 = $2 >>> 12;
  $14 = (($13) + -1)|0;
  $15 = ((37891 + (($12*3)|0)|0) + ($14)|0);
  $$sink = $15;
 }
 $27 = HEAP8[$$sink>>0]|0;
 $28 = $27 << 24 >> 24;
 $29 = ((($0)) + 292|0);
 HEAP32[$29>>2] = $28;
 $30 = (($1>>>0) / 1000)&-1;
 $31 = ((($0)) + 284|0);
 HEAP32[$31>>2] = $30;
 $32 = (($2>>>0) / 1000)&-1;
 $33 = ((($0)) + 288|0);
 HEAP32[$33>>2] = $32;
 $34 = ($30*10)|0;
 $35 = ((($0)) + 268|0);
 HEAP32[$35>>2] = $34;
 $36 = ($2|0)>($1|0);
 do {
  if ($36) {
   $37 = $1 << 1;
   $38 = ($37|0)==($2|0);
   $39 = ((($0)) + 264|0);
   if ($38) {
    HEAP32[$39>>2] = 1;
    $$0 = 0;
    break;
   } else {
    HEAP32[$39>>2] = 2;
    $$0 = 1;
    break;
   }
  } else {
   $40 = ($2|0)<($1|0);
   $41 = ((($0)) + 264|0);
   if (!($40)) {
    HEAP32[$41>>2] = 0;
    $$0 = 0;
    break;
   }
   HEAP32[$41>>2] = 3;
   $42 = $2 << 2;
   $43 = ($1*3)|0;
   $44 = ($42|0)==($43|0);
   if ($44) {
    $45 = ((($0)) + 280|0);
    HEAP32[$45>>2] = 3;
    $46 = ((($0)) + 276|0);
    HEAP32[$46>>2] = 18;
    $47 = ((($0)) + 296|0);
    HEAP32[$47>>2] = 22448;
    $$0 = 0;
    break;
   }
   $48 = ($2*3)|0;
   $49 = $1 << 1;
   $50 = ($48|0)==($49|0);
   if ($50) {
    $51 = ((($0)) + 280|0);
    HEAP32[$51>>2] = 2;
    $52 = ((($0)) + 276|0);
    HEAP32[$52>>2] = 18;
    $53 = ((($0)) + 296|0);
    HEAP32[$53>>2] = 22512;
    $$0 = 0;
    break;
   }
   $54 = $2 << 1;
   $55 = ($54|0)==($1|0);
   if ($55) {
    $56 = ((($0)) + 280|0);
    HEAP32[$56>>2] = 1;
    $57 = ((($0)) + 276|0);
    HEAP32[$57>>2] = 24;
    $58 = ((($0)) + 296|0);
    HEAP32[$58>>2] = 22560;
    $$0 = 0;
    break;
   }
   $59 = ($48|0)==($1|0);
   if ($59) {
    $60 = ((($0)) + 280|0);
    HEAP32[$60>>2] = 1;
    $61 = ((($0)) + 276|0);
    HEAP32[$61>>2] = 36;
    $62 = ((($0)) + 296|0);
    HEAP32[$62>>2] = 22592;
    $$0 = 0;
    break;
   }
   $63 = ($42|0)==($1|0);
   if ($63) {
    $64 = ((($0)) + 280|0);
    HEAP32[$64>>2] = 1;
    $65 = ((($0)) + 276|0);
    HEAP32[$65>>2] = 36;
    $66 = ((($0)) + 296|0);
    HEAP32[$66>>2] = 22640;
    $$0 = 0;
    break;
   }
   $67 = ($2*6)|0;
   $68 = ($67|0)==($1|0);
   if ($68) {
    $69 = ((($0)) + 280|0);
    HEAP32[$69>>2] = 1;
    $70 = ((($0)) + 276|0);
    HEAP32[$70>>2] = 36;
    $71 = ((($0)) + 296|0);
    HEAP32[$71>>2] = 22688;
    $$0 = 0;
    break;
   } else {
    $$0108 = -1;
    return ($$0108|0);
   }
  }
 } while(0);
 $72 = $$0 | 14;
 $73 = $1 << $72;
 $74 = (($73|0) / ($2|0))&-1;
 $75 = $74 << 2;
 $sext = $2 << 16;
 $76 = $sext >> 16;
 $77 = $2 >>> 15;
 $78 = (($77) + 1)|0;
 $79 = $78 >>> 1;
 $80 = $1 << $$0;
 $storemerge = $75;
 while(1) {
  $81 = $storemerge >> 16;
  $82 = Math_imul($81, $76)|0;
  $83 = $storemerge & 65535;
  $84 = Math_imul($83, $76)|0;
  $85 = $84 >> 16;
  $86 = Math_imul($storemerge, $79)|0;
  $87 = (($82) + ($86))|0;
  $88 = (($87) + ($85))|0;
  $89 = ($88|0)<($80|0);
  $90 = (($storemerge) + 1)|0;
  if ($89) {
   $storemerge = $90;
  } else {
   break;
  }
 }
 $91 = ((($0)) + 272|0);
 HEAP32[$91>>2] = $storemerge;
 $$0108 = 0;
 return ($$0108|0);
}
function _silk_resampler($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 284|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 292|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) - ($7))|0;
 $9 = ((($0)) + 168|0);
 $10 = (((($0)) + 168|0) + ($7<<1)|0);
 $11 = $8 << 1;
 _memcpy(($10|0),($2|0),($11|0))|0;
 $12 = ((($0)) + 264|0);
 $13 = HEAP32[$12>>2]|0;
 switch ($13|0) {
 case 1:  {
  $14 = HEAP32[$4>>2]|0;
  _silk_resampler_private_up2_HQ_wrapper($0,$1,$9,$14);
  $15 = ((($0)) + 288|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = (($1) + ($16<<1)|0);
  $18 = (($2) + ($8<<1)|0);
  $19 = HEAP32[$4>>2]|0;
  $20 = (($3) - ($19))|0;
  _silk_resampler_private_up2_HQ_wrapper($0,$17,$18,$20);
  break;
 }
 case 2:  {
  $21 = HEAP32[$4>>2]|0;
  _silk_resampler_private_IIR_FIR($0,$1,$9,$21);
  $22 = ((($0)) + 288|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = (($1) + ($23<<1)|0);
  $25 = (($2) + ($8<<1)|0);
  $26 = HEAP32[$4>>2]|0;
  $27 = (($3) - ($26))|0;
  _silk_resampler_private_IIR_FIR($0,$24,$25,$27);
  break;
 }
 case 3:  {
  $28 = HEAP32[$4>>2]|0;
  _silk_resampler_private_down_FIR($0,$1,$9,$28);
  $29 = ((($0)) + 288|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = (($1) + ($30<<1)|0);
  $32 = (($2) + ($8<<1)|0);
  $33 = HEAP32[$4>>2]|0;
  $34 = (($3) - ($33))|0;
  _silk_resampler_private_down_FIR($0,$31,$32,$34);
  break;
 }
 default: {
  $35 = HEAP32[$4>>2]|0;
  $36 = $35 << 1;
  _memcpy(($1|0),($9|0),($36|0))|0;
  $37 = ((($0)) + 288|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = (($1) + ($38<<1)|0);
  $40 = (($2) + ($8<<1)|0);
  $41 = HEAP32[$4>>2]|0;
  $42 = (($3) - ($41))|0;
  $43 = $42 << 1;
  _memcpy(($39|0),($40|0),($43|0))|0;
 }
 }
 $44 = HEAP32[$6>>2]|0;
 $45 = (($3) - ($44))|0;
 $46 = (($2) + ($45<<1)|0);
 $47 = $44 << 1;
 _memcpy(($9|0),($46|0),($47|0))|0;
 return 0;
}
function _silk_resampler_private_down_FIR($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0346353$i = 0, $$0354$i = 0, $$042 = 0, $$043 = 0, $$043$ = 0, $$1347355$i = 0, $$1356$i = 0, $$2348359$i = 0, $$2360$i = 0, $$3$i = 0, $$alloca_mul = 0, $$pre = 0, $$pre54 = 0, $$pre55 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0;
 var $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0;
 var $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0;
 var $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0;
 var $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0;
 var $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0;
 var $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0;
 var $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0;
 var $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0;
 var $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0;
 var $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0;
 var $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0;
 var $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0;
 var $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0;
 var $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0;
 var $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0;
 var $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0;
 var $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0;
 var $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0;
 var $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0;
 var $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0;
 var $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0;
 var $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $sext$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 268|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 276|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7) + ($5))|0;
 $$alloca_mul = $8<<2;
 $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $10 = ((($0)) + 24|0);
 $11 = $7 << 2;
 _memcpy(($9|0),($10|0),($11|0))|0;
 $12 = ((($0)) + 296|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($13)) + 4|0);
 $15 = ((($0)) + 272|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 280|0);
 $18 = ((($13)) + 6|0);
 $19 = ((($13)) + 8|0);
 $20 = ((($13)) + 10|0);
 $21 = ((($13)) + 12|0);
 $22 = ((($13)) + 14|0);
 $23 = ((($13)) + 16|0);
 $24 = ((($13)) + 18|0);
 $25 = ((($13)) + 20|0);
 $26 = ((($13)) + 22|0);
 $27 = ((($13)) + 24|0);
 $28 = ((($13)) + 26|0);
 $29 = ((($13)) + 28|0);
 $30 = ((($13)) + 30|0);
 $31 = ((($13)) + 32|0);
 $32 = ((($13)) + 34|0);
 $33 = ((($13)) + 36|0);
 $34 = ((($13)) + 38|0);
 $$0 = $1;$$042 = $2;$$043 = $3;$36 = $5;$38 = $7;$39 = $13;
 while(1) {
  $35 = ($$043|0)<($36|0);
  $$043$ = $35 ? $$043 : $36;
  $37 = (($9) + ($38<<2)|0);
  _silk_resampler_private_AR2($0,$37,$$042,$39,$$043$);
  $40 = $$043$ << 16;
  $41 = HEAP32[$6>>2]|0;
  $42 = HEAP32[$17>>2]|0;
  switch ($41|0) {
  case 18:  {
   $43 = ($40|0)>(0);
   if ($43) {
    $sext$i = $42 << 16;
    $44 = $sext$i >> 16;
    $45 = (($42) + -1)|0;
    $$0346353$i = 0;$$0354$i = $$0;
    while(1) {
     $46 = $$0346353$i >> 16;
     $47 = (($9) + ($46<<2)|0);
     $48 = $$0346353$i & 65535;
     $49 = Math_imul($48, $44)|0;
     $50 = $49 >> 16;
     $51 = ($50*9)|0;
     $52 = (($14) + ($51<<1)|0);
     $53 = HEAP32[$47>>2]|0;
     $54 = $53 >> 16;
     $55 = HEAP16[$52>>1]|0;
     $56 = $55 << 16 >> 16;
     $57 = Math_imul($54, $56)|0;
     $58 = $53 & 65535;
     $59 = Math_imul($58, $56)|0;
     $60 = $59 >> 16;
     $61 = ((($47)) + 4|0);
     $62 = HEAP32[$61>>2]|0;
     $63 = $62 >> 16;
     $64 = ((($52)) + 2|0);
     $65 = HEAP16[$64>>1]|0;
     $66 = $65 << 16 >> 16;
     $67 = Math_imul($63, $66)|0;
     $68 = $62 & 65535;
     $69 = Math_imul($68, $66)|0;
     $70 = $69 >> 16;
     $71 = ((($47)) + 8|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = $72 >> 16;
     $74 = ((($52)) + 4|0);
     $75 = HEAP16[$74>>1]|0;
     $76 = $75 << 16 >> 16;
     $77 = Math_imul($73, $76)|0;
     $78 = $72 & 65535;
     $79 = Math_imul($78, $76)|0;
     $80 = $79 >> 16;
     $81 = ((($47)) + 12|0);
     $82 = HEAP32[$81>>2]|0;
     $83 = $82 >> 16;
     $84 = ((($52)) + 6|0);
     $85 = HEAP16[$84>>1]|0;
     $86 = $85 << 16 >> 16;
     $87 = Math_imul($83, $86)|0;
     $88 = $82 & 65535;
     $89 = Math_imul($88, $86)|0;
     $90 = $89 >> 16;
     $91 = ((($47)) + 16|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = $92 >> 16;
     $94 = ((($52)) + 8|0);
     $95 = HEAP16[$94>>1]|0;
     $96 = $95 << 16 >> 16;
     $97 = Math_imul($93, $96)|0;
     $98 = $92 & 65535;
     $99 = Math_imul($98, $96)|0;
     $100 = $99 >> 16;
     $101 = ((($47)) + 20|0);
     $102 = HEAP32[$101>>2]|0;
     $103 = $102 >> 16;
     $104 = ((($52)) + 10|0);
     $105 = HEAP16[$104>>1]|0;
     $106 = $105 << 16 >> 16;
     $107 = Math_imul($103, $106)|0;
     $108 = $102 & 65535;
     $109 = Math_imul($108, $106)|0;
     $110 = $109 >> 16;
     $111 = ((($47)) + 24|0);
     $112 = HEAP32[$111>>2]|0;
     $113 = $112 >> 16;
     $114 = ((($52)) + 12|0);
     $115 = HEAP16[$114>>1]|0;
     $116 = $115 << 16 >> 16;
     $117 = Math_imul($113, $116)|0;
     $118 = $112 & 65535;
     $119 = Math_imul($118, $116)|0;
     $120 = $119 >> 16;
     $121 = ((($47)) + 28|0);
     $122 = HEAP32[$121>>2]|0;
     $123 = $122 >> 16;
     $124 = ((($52)) + 14|0);
     $125 = HEAP16[$124>>1]|0;
     $126 = $125 << 16 >> 16;
     $127 = Math_imul($123, $126)|0;
     $128 = $122 & 65535;
     $129 = Math_imul($128, $126)|0;
     $130 = $129 >> 16;
     $131 = ((($47)) + 32|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = $132 >> 16;
     $134 = ((($52)) + 16|0);
     $135 = HEAP16[$134>>1]|0;
     $136 = $135 << 16 >> 16;
     $137 = Math_imul($133, $136)|0;
     $138 = $132 & 65535;
     $139 = Math_imul($138, $136)|0;
     $140 = $139 >> 16;
     $141 = (($45) - ($50))|0;
     $142 = ($141*9)|0;
     $143 = (($14) + ($142<<1)|0);
     $144 = ((($47)) + 68|0);
     $145 = HEAP32[$144>>2]|0;
     $146 = $145 >> 16;
     $147 = HEAP16[$143>>1]|0;
     $148 = $147 << 16 >> 16;
     $149 = Math_imul($146, $148)|0;
     $150 = $145 & 65535;
     $151 = Math_imul($150, $148)|0;
     $152 = $151 >> 16;
     $153 = ((($47)) + 64|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = $154 >> 16;
     $156 = ((($143)) + 2|0);
     $157 = HEAP16[$156>>1]|0;
     $158 = $157 << 16 >> 16;
     $159 = Math_imul($155, $158)|0;
     $160 = $154 & 65535;
     $161 = Math_imul($160, $158)|0;
     $162 = $161 >> 16;
     $163 = ((($47)) + 60|0);
     $164 = HEAP32[$163>>2]|0;
     $165 = $164 >> 16;
     $166 = ((($143)) + 4|0);
     $167 = HEAP16[$166>>1]|0;
     $168 = $167 << 16 >> 16;
     $169 = Math_imul($165, $168)|0;
     $170 = $164 & 65535;
     $171 = Math_imul($170, $168)|0;
     $172 = $171 >> 16;
     $173 = ((($47)) + 56|0);
     $174 = HEAP32[$173>>2]|0;
     $175 = $174 >> 16;
     $176 = ((($143)) + 6|0);
     $177 = HEAP16[$176>>1]|0;
     $178 = $177 << 16 >> 16;
     $179 = Math_imul($175, $178)|0;
     $180 = $174 & 65535;
     $181 = Math_imul($180, $178)|0;
     $182 = $181 >> 16;
     $183 = ((($47)) + 52|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = $184 >> 16;
     $186 = ((($143)) + 8|0);
     $187 = HEAP16[$186>>1]|0;
     $188 = $187 << 16 >> 16;
     $189 = Math_imul($185, $188)|0;
     $190 = $184 & 65535;
     $191 = Math_imul($190, $188)|0;
     $192 = $191 >> 16;
     $193 = ((($47)) + 48|0);
     $194 = HEAP32[$193>>2]|0;
     $195 = $194 >> 16;
     $196 = ((($143)) + 10|0);
     $197 = HEAP16[$196>>1]|0;
     $198 = $197 << 16 >> 16;
     $199 = Math_imul($195, $198)|0;
     $200 = $194 & 65535;
     $201 = Math_imul($200, $198)|0;
     $202 = $201 >> 16;
     $203 = ((($47)) + 44|0);
     $204 = HEAP32[$203>>2]|0;
     $205 = $204 >> 16;
     $206 = ((($143)) + 12|0);
     $207 = HEAP16[$206>>1]|0;
     $208 = $207 << 16 >> 16;
     $209 = Math_imul($205, $208)|0;
     $210 = $204 & 65535;
     $211 = Math_imul($210, $208)|0;
     $212 = $211 >> 16;
     $213 = ((($47)) + 40|0);
     $214 = HEAP32[$213>>2]|0;
     $215 = $214 >> 16;
     $216 = ((($143)) + 14|0);
     $217 = HEAP16[$216>>1]|0;
     $218 = $217 << 16 >> 16;
     $219 = Math_imul($215, $218)|0;
     $220 = $214 & 65535;
     $221 = Math_imul($220, $218)|0;
     $222 = $221 >> 16;
     $223 = ((($47)) + 36|0);
     $224 = HEAP32[$223>>2]|0;
     $225 = $224 >> 16;
     $226 = ((($143)) + 16|0);
     $227 = HEAP16[$226>>1]|0;
     $228 = $227 << 16 >> 16;
     $229 = Math_imul($225, $228)|0;
     $230 = $224 & 65535;
     $231 = Math_imul($230, $228)|0;
     $232 = $231 >> 16;
     $233 = (($60) + ($57))|0;
     $234 = (($233) + ($67))|0;
     $235 = (($234) + ($70))|0;
     $236 = (($235) + ($77))|0;
     $237 = (($236) + ($80))|0;
     $238 = (($237) + ($87))|0;
     $239 = (($238) + ($90))|0;
     $240 = (($239) + ($97))|0;
     $241 = (($240) + ($100))|0;
     $242 = (($241) + ($107))|0;
     $243 = (($242) + ($110))|0;
     $244 = (($243) + ($117))|0;
     $245 = (($244) + ($120))|0;
     $246 = (($245) + ($127))|0;
     $247 = (($246) + ($130))|0;
     $248 = (($247) + ($137))|0;
     $249 = (($248) + ($140))|0;
     $250 = (($249) + ($149))|0;
     $251 = (($250) + ($152))|0;
     $252 = (($251) + ($159))|0;
     $253 = (($252) + ($162))|0;
     $254 = (($253) + ($169))|0;
     $255 = (($254) + ($172))|0;
     $256 = (($255) + ($179))|0;
     $257 = (($256) + ($182))|0;
     $258 = (($257) + ($189))|0;
     $259 = (($258) + ($192))|0;
     $260 = (($259) + ($199))|0;
     $261 = (($260) + ($202))|0;
     $262 = (($261) + ($209))|0;
     $263 = (($262) + ($212))|0;
     $264 = (($263) + ($219))|0;
     $265 = (($264) + ($222))|0;
     $266 = (($265) + ($229))|0;
     $267 = (($266) + ($232))|0;
     $268 = $267 >>> 5;
     $269 = (($268) + 1)|0;
     $270 = $269 >>> 1;
     $271 = ($267|0)>(2097119);
     $272 = ($267|0)<(-2097184);
     $273 = $270&65535;
     $274 = $272 ? -32768 : $273;
     $275 = $271 ? 32767 : $274;
     $276 = ((($$0354$i)) + 2|0);
     HEAP16[$$0354$i>>1] = $275;
     $277 = (($$0346353$i) + ($16))|0;
     $278 = ($277|0)<($40|0);
     if ($278) {
      $$0346353$i = $277;$$0354$i = $276;
     } else {
      $$3$i = $276;
      break;
     }
    }
   } else {
    $$3$i = $$0;
   }
   break;
  }
  case 24:  {
   $279 = ($40|0)>(0);
   if ($279) {
    $$1347355$i = 0;$$1356$i = $$0;
    while(1) {
     $280 = $$1347355$i >> 16;
     $281 = (($9) + ($280<<2)|0);
     $282 = HEAP32[$281>>2]|0;
     $283 = ((($281)) + 92|0);
     $284 = HEAP32[$283>>2]|0;
     $285 = (($284) + ($282))|0;
     $286 = $285 >> 16;
     $287 = HEAP16[$14>>1]|0;
     $288 = $287 << 16 >> 16;
     $289 = Math_imul($286, $288)|0;
     $290 = $285 & 65535;
     $291 = Math_imul($290, $288)|0;
     $292 = $291 >> 16;
     $293 = ((($281)) + 4|0);
     $294 = HEAP32[$293>>2]|0;
     $295 = ((($281)) + 88|0);
     $296 = HEAP32[$295>>2]|0;
     $297 = (($296) + ($294))|0;
     $298 = $297 >> 16;
     $299 = HEAP16[$18>>1]|0;
     $300 = $299 << 16 >> 16;
     $301 = Math_imul($298, $300)|0;
     $302 = $297 & 65535;
     $303 = Math_imul($302, $300)|0;
     $304 = $303 >> 16;
     $305 = ((($281)) + 8|0);
     $306 = HEAP32[$305>>2]|0;
     $307 = ((($281)) + 84|0);
     $308 = HEAP32[$307>>2]|0;
     $309 = (($308) + ($306))|0;
     $310 = $309 >> 16;
     $311 = HEAP16[$19>>1]|0;
     $312 = $311 << 16 >> 16;
     $313 = Math_imul($310, $312)|0;
     $314 = $309 & 65535;
     $315 = Math_imul($314, $312)|0;
     $316 = $315 >> 16;
     $317 = ((($281)) + 12|0);
     $318 = HEAP32[$317>>2]|0;
     $319 = ((($281)) + 80|0);
     $320 = HEAP32[$319>>2]|0;
     $321 = (($320) + ($318))|0;
     $322 = $321 >> 16;
     $323 = HEAP16[$20>>1]|0;
     $324 = $323 << 16 >> 16;
     $325 = Math_imul($322, $324)|0;
     $326 = $321 & 65535;
     $327 = Math_imul($326, $324)|0;
     $328 = $327 >> 16;
     $329 = ((($281)) + 16|0);
     $330 = HEAP32[$329>>2]|0;
     $331 = ((($281)) + 76|0);
     $332 = HEAP32[$331>>2]|0;
     $333 = (($332) + ($330))|0;
     $334 = $333 >> 16;
     $335 = HEAP16[$21>>1]|0;
     $336 = $335 << 16 >> 16;
     $337 = Math_imul($334, $336)|0;
     $338 = $333 & 65535;
     $339 = Math_imul($338, $336)|0;
     $340 = $339 >> 16;
     $341 = ((($281)) + 20|0);
     $342 = HEAP32[$341>>2]|0;
     $343 = ((($281)) + 72|0);
     $344 = HEAP32[$343>>2]|0;
     $345 = (($344) + ($342))|0;
     $346 = $345 >> 16;
     $347 = HEAP16[$22>>1]|0;
     $348 = $347 << 16 >> 16;
     $349 = Math_imul($346, $348)|0;
     $350 = $345 & 65535;
     $351 = Math_imul($350, $348)|0;
     $352 = $351 >> 16;
     $353 = ((($281)) + 24|0);
     $354 = HEAP32[$353>>2]|0;
     $355 = ((($281)) + 68|0);
     $356 = HEAP32[$355>>2]|0;
     $357 = (($356) + ($354))|0;
     $358 = $357 >> 16;
     $359 = HEAP16[$23>>1]|0;
     $360 = $359 << 16 >> 16;
     $361 = Math_imul($358, $360)|0;
     $362 = $357 & 65535;
     $363 = Math_imul($362, $360)|0;
     $364 = $363 >> 16;
     $365 = ((($281)) + 28|0);
     $366 = HEAP32[$365>>2]|0;
     $367 = ((($281)) + 64|0);
     $368 = HEAP32[$367>>2]|0;
     $369 = (($368) + ($366))|0;
     $370 = $369 >> 16;
     $371 = HEAP16[$24>>1]|0;
     $372 = $371 << 16 >> 16;
     $373 = Math_imul($370, $372)|0;
     $374 = $369 & 65535;
     $375 = Math_imul($374, $372)|0;
     $376 = $375 >> 16;
     $377 = ((($281)) + 32|0);
     $378 = HEAP32[$377>>2]|0;
     $379 = ((($281)) + 60|0);
     $380 = HEAP32[$379>>2]|0;
     $381 = (($380) + ($378))|0;
     $382 = $381 >> 16;
     $383 = HEAP16[$25>>1]|0;
     $384 = $383 << 16 >> 16;
     $385 = Math_imul($382, $384)|0;
     $386 = $381 & 65535;
     $387 = Math_imul($386, $384)|0;
     $388 = $387 >> 16;
     $389 = ((($281)) + 36|0);
     $390 = HEAP32[$389>>2]|0;
     $391 = ((($281)) + 56|0);
     $392 = HEAP32[$391>>2]|0;
     $393 = (($392) + ($390))|0;
     $394 = $393 >> 16;
     $395 = HEAP16[$26>>1]|0;
     $396 = $395 << 16 >> 16;
     $397 = Math_imul($394, $396)|0;
     $398 = $393 & 65535;
     $399 = Math_imul($398, $396)|0;
     $400 = $399 >> 16;
     $401 = ((($281)) + 40|0);
     $402 = HEAP32[$401>>2]|0;
     $403 = ((($281)) + 52|0);
     $404 = HEAP32[$403>>2]|0;
     $405 = (($404) + ($402))|0;
     $406 = $405 >> 16;
     $407 = HEAP16[$27>>1]|0;
     $408 = $407 << 16 >> 16;
     $409 = Math_imul($406, $408)|0;
     $410 = $405 & 65535;
     $411 = Math_imul($410, $408)|0;
     $412 = $411 >> 16;
     $413 = ((($281)) + 44|0);
     $414 = HEAP32[$413>>2]|0;
     $415 = ((($281)) + 48|0);
     $416 = HEAP32[$415>>2]|0;
     $417 = (($416) + ($414))|0;
     $418 = $417 >> 16;
     $419 = HEAP16[$28>>1]|0;
     $420 = $419 << 16 >> 16;
     $421 = Math_imul($418, $420)|0;
     $422 = $417 & 65535;
     $423 = Math_imul($422, $420)|0;
     $424 = $423 >> 16;
     $425 = (($292) + ($289))|0;
     $426 = (($425) + ($301))|0;
     $427 = (($426) + ($304))|0;
     $428 = (($427) + ($313))|0;
     $429 = (($428) + ($316))|0;
     $430 = (($429) + ($325))|0;
     $431 = (($430) + ($328))|0;
     $432 = (($431) + ($337))|0;
     $433 = (($432) + ($340))|0;
     $434 = (($433) + ($349))|0;
     $435 = (($434) + ($352))|0;
     $436 = (($435) + ($361))|0;
     $437 = (($436) + ($364))|0;
     $438 = (($437) + ($373))|0;
     $439 = (($438) + ($376))|0;
     $440 = (($439) + ($385))|0;
     $441 = (($440) + ($388))|0;
     $442 = (($441) + ($397))|0;
     $443 = (($442) + ($400))|0;
     $444 = (($443) + ($409))|0;
     $445 = (($444) + ($412))|0;
     $446 = (($445) + ($421))|0;
     $447 = (($446) + ($424))|0;
     $448 = $447 >>> 5;
     $449 = (($448) + 1)|0;
     $450 = $449 >>> 1;
     $451 = ($447|0)>(2097119);
     $452 = ($447|0)<(-2097184);
     $453 = $450&65535;
     $454 = $452 ? -32768 : $453;
     $455 = $451 ? 32767 : $454;
     $456 = ((($$1356$i)) + 2|0);
     HEAP16[$$1356$i>>1] = $455;
     $457 = (($$1347355$i) + ($16))|0;
     $458 = ($457|0)<($40|0);
     if ($458) {
      $$1347355$i = $457;$$1356$i = $456;
     } else {
      $$3$i = $456;
      break;
     }
    }
   } else {
    $$3$i = $$0;
   }
   break;
  }
  case 36:  {
   $459 = ($40|0)>(0);
   if ($459) {
    $$2348359$i = 0;$$2360$i = $$0;
    while(1) {
     $460 = $$2348359$i >> 16;
     $461 = (($9) + ($460<<2)|0);
     $462 = HEAP32[$461>>2]|0;
     $463 = ((($461)) + 140|0);
     $464 = HEAP32[$463>>2]|0;
     $465 = (($464) + ($462))|0;
     $466 = $465 >> 16;
     $467 = HEAP16[$14>>1]|0;
     $468 = $467 << 16 >> 16;
     $469 = Math_imul($466, $468)|0;
     $470 = $465 & 65535;
     $471 = Math_imul($470, $468)|0;
     $472 = $471 >> 16;
     $473 = ((($461)) + 4|0);
     $474 = HEAP32[$473>>2]|0;
     $475 = ((($461)) + 136|0);
     $476 = HEAP32[$475>>2]|0;
     $477 = (($476) + ($474))|0;
     $478 = $477 >> 16;
     $479 = HEAP16[$18>>1]|0;
     $480 = $479 << 16 >> 16;
     $481 = Math_imul($478, $480)|0;
     $482 = $477 & 65535;
     $483 = Math_imul($482, $480)|0;
     $484 = $483 >> 16;
     $485 = ((($461)) + 8|0);
     $486 = HEAP32[$485>>2]|0;
     $487 = ((($461)) + 132|0);
     $488 = HEAP32[$487>>2]|0;
     $489 = (($488) + ($486))|0;
     $490 = $489 >> 16;
     $491 = HEAP16[$19>>1]|0;
     $492 = $491 << 16 >> 16;
     $493 = Math_imul($490, $492)|0;
     $494 = $489 & 65535;
     $495 = Math_imul($494, $492)|0;
     $496 = $495 >> 16;
     $497 = ((($461)) + 12|0);
     $498 = HEAP32[$497>>2]|0;
     $499 = ((($461)) + 128|0);
     $500 = HEAP32[$499>>2]|0;
     $501 = (($500) + ($498))|0;
     $502 = $501 >> 16;
     $503 = HEAP16[$20>>1]|0;
     $504 = $503 << 16 >> 16;
     $505 = Math_imul($502, $504)|0;
     $506 = $501 & 65535;
     $507 = Math_imul($506, $504)|0;
     $508 = $507 >> 16;
     $509 = ((($461)) + 16|0);
     $510 = HEAP32[$509>>2]|0;
     $511 = ((($461)) + 124|0);
     $512 = HEAP32[$511>>2]|0;
     $513 = (($512) + ($510))|0;
     $514 = $513 >> 16;
     $515 = HEAP16[$21>>1]|0;
     $516 = $515 << 16 >> 16;
     $517 = Math_imul($514, $516)|0;
     $518 = $513 & 65535;
     $519 = Math_imul($518, $516)|0;
     $520 = $519 >> 16;
     $521 = ((($461)) + 20|0);
     $522 = HEAP32[$521>>2]|0;
     $523 = ((($461)) + 120|0);
     $524 = HEAP32[$523>>2]|0;
     $525 = (($524) + ($522))|0;
     $526 = $525 >> 16;
     $527 = HEAP16[$22>>1]|0;
     $528 = $527 << 16 >> 16;
     $529 = Math_imul($526, $528)|0;
     $530 = $525 & 65535;
     $531 = Math_imul($530, $528)|0;
     $532 = $531 >> 16;
     $533 = ((($461)) + 24|0);
     $534 = HEAP32[$533>>2]|0;
     $535 = ((($461)) + 116|0);
     $536 = HEAP32[$535>>2]|0;
     $537 = (($536) + ($534))|0;
     $538 = $537 >> 16;
     $539 = HEAP16[$23>>1]|0;
     $540 = $539 << 16 >> 16;
     $541 = Math_imul($538, $540)|0;
     $542 = $537 & 65535;
     $543 = Math_imul($542, $540)|0;
     $544 = $543 >> 16;
     $545 = ((($461)) + 28|0);
     $546 = HEAP32[$545>>2]|0;
     $547 = ((($461)) + 112|0);
     $548 = HEAP32[$547>>2]|0;
     $549 = (($548) + ($546))|0;
     $550 = $549 >> 16;
     $551 = HEAP16[$24>>1]|0;
     $552 = $551 << 16 >> 16;
     $553 = Math_imul($550, $552)|0;
     $554 = $549 & 65535;
     $555 = Math_imul($554, $552)|0;
     $556 = $555 >> 16;
     $557 = ((($461)) + 32|0);
     $558 = HEAP32[$557>>2]|0;
     $559 = ((($461)) + 108|0);
     $560 = HEAP32[$559>>2]|0;
     $561 = (($560) + ($558))|0;
     $562 = $561 >> 16;
     $563 = HEAP16[$25>>1]|0;
     $564 = $563 << 16 >> 16;
     $565 = Math_imul($562, $564)|0;
     $566 = $561 & 65535;
     $567 = Math_imul($566, $564)|0;
     $568 = $567 >> 16;
     $569 = ((($461)) + 36|0);
     $570 = HEAP32[$569>>2]|0;
     $571 = ((($461)) + 104|0);
     $572 = HEAP32[$571>>2]|0;
     $573 = (($572) + ($570))|0;
     $574 = $573 >> 16;
     $575 = HEAP16[$26>>1]|0;
     $576 = $575 << 16 >> 16;
     $577 = Math_imul($574, $576)|0;
     $578 = $573 & 65535;
     $579 = Math_imul($578, $576)|0;
     $580 = $579 >> 16;
     $581 = ((($461)) + 40|0);
     $582 = HEAP32[$581>>2]|0;
     $583 = ((($461)) + 100|0);
     $584 = HEAP32[$583>>2]|0;
     $585 = (($584) + ($582))|0;
     $586 = $585 >> 16;
     $587 = HEAP16[$27>>1]|0;
     $588 = $587 << 16 >> 16;
     $589 = Math_imul($586, $588)|0;
     $590 = $585 & 65535;
     $591 = Math_imul($590, $588)|0;
     $592 = $591 >> 16;
     $593 = ((($461)) + 44|0);
     $594 = HEAP32[$593>>2]|0;
     $595 = ((($461)) + 96|0);
     $596 = HEAP32[$595>>2]|0;
     $597 = (($596) + ($594))|0;
     $598 = $597 >> 16;
     $599 = HEAP16[$28>>1]|0;
     $600 = $599 << 16 >> 16;
     $601 = Math_imul($598, $600)|0;
     $602 = $597 & 65535;
     $603 = Math_imul($602, $600)|0;
     $604 = $603 >> 16;
     $605 = ((($461)) + 48|0);
     $606 = HEAP32[$605>>2]|0;
     $607 = ((($461)) + 92|0);
     $608 = HEAP32[$607>>2]|0;
     $609 = (($608) + ($606))|0;
     $610 = $609 >> 16;
     $611 = HEAP16[$29>>1]|0;
     $612 = $611 << 16 >> 16;
     $613 = Math_imul($610, $612)|0;
     $614 = $609 & 65535;
     $615 = Math_imul($614, $612)|0;
     $616 = $615 >> 16;
     $617 = ((($461)) + 52|0);
     $618 = HEAP32[$617>>2]|0;
     $619 = ((($461)) + 88|0);
     $620 = HEAP32[$619>>2]|0;
     $621 = (($620) + ($618))|0;
     $622 = $621 >> 16;
     $623 = HEAP16[$30>>1]|0;
     $624 = $623 << 16 >> 16;
     $625 = Math_imul($622, $624)|0;
     $626 = $621 & 65535;
     $627 = Math_imul($626, $624)|0;
     $628 = $627 >> 16;
     $629 = ((($461)) + 56|0);
     $630 = HEAP32[$629>>2]|0;
     $631 = ((($461)) + 84|0);
     $632 = HEAP32[$631>>2]|0;
     $633 = (($632) + ($630))|0;
     $634 = $633 >> 16;
     $635 = HEAP16[$31>>1]|0;
     $636 = $635 << 16 >> 16;
     $637 = Math_imul($634, $636)|0;
     $638 = $633 & 65535;
     $639 = Math_imul($638, $636)|0;
     $640 = $639 >> 16;
     $641 = ((($461)) + 60|0);
     $642 = HEAP32[$641>>2]|0;
     $643 = ((($461)) + 80|0);
     $644 = HEAP32[$643>>2]|0;
     $645 = (($644) + ($642))|0;
     $646 = $645 >> 16;
     $647 = HEAP16[$32>>1]|0;
     $648 = $647 << 16 >> 16;
     $649 = Math_imul($646, $648)|0;
     $650 = $645 & 65535;
     $651 = Math_imul($650, $648)|0;
     $652 = $651 >> 16;
     $653 = ((($461)) + 64|0);
     $654 = HEAP32[$653>>2]|0;
     $655 = ((($461)) + 76|0);
     $656 = HEAP32[$655>>2]|0;
     $657 = (($656) + ($654))|0;
     $658 = $657 >> 16;
     $659 = HEAP16[$33>>1]|0;
     $660 = $659 << 16 >> 16;
     $661 = Math_imul($658, $660)|0;
     $662 = $657 & 65535;
     $663 = Math_imul($662, $660)|0;
     $664 = $663 >> 16;
     $665 = ((($461)) + 68|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ((($461)) + 72|0);
     $668 = HEAP32[$667>>2]|0;
     $669 = (($668) + ($666))|0;
     $670 = $669 >> 16;
     $671 = HEAP16[$34>>1]|0;
     $672 = $671 << 16 >> 16;
     $673 = Math_imul($670, $672)|0;
     $674 = $669 & 65535;
     $675 = Math_imul($674, $672)|0;
     $676 = $675 >> 16;
     $677 = (($472) + ($469))|0;
     $678 = (($677) + ($481))|0;
     $679 = (($678) + ($484))|0;
     $680 = (($679) + ($493))|0;
     $681 = (($680) + ($496))|0;
     $682 = (($681) + ($505))|0;
     $683 = (($682) + ($508))|0;
     $684 = (($683) + ($517))|0;
     $685 = (($684) + ($520))|0;
     $686 = (($685) + ($529))|0;
     $687 = (($686) + ($532))|0;
     $688 = (($687) + ($541))|0;
     $689 = (($688) + ($544))|0;
     $690 = (($689) + ($553))|0;
     $691 = (($690) + ($556))|0;
     $692 = (($691) + ($565))|0;
     $693 = (($692) + ($568))|0;
     $694 = (($693) + ($577))|0;
     $695 = (($694) + ($580))|0;
     $696 = (($695) + ($589))|0;
     $697 = (($696) + ($592))|0;
     $698 = (($697) + ($601))|0;
     $699 = (($698) + ($604))|0;
     $700 = (($699) + ($613))|0;
     $701 = (($700) + ($616))|0;
     $702 = (($701) + ($625))|0;
     $703 = (($702) + ($628))|0;
     $704 = (($703) + ($637))|0;
     $705 = (($704) + ($640))|0;
     $706 = (($705) + ($649))|0;
     $707 = (($706) + ($652))|0;
     $708 = (($707) + ($661))|0;
     $709 = (($708) + ($664))|0;
     $710 = (($709) + ($673))|0;
     $711 = (($710) + ($676))|0;
     $712 = $711 >>> 5;
     $713 = (($712) + 1)|0;
     $714 = $713 >>> 1;
     $715 = ($711|0)>(2097119);
     $716 = ($711|0)<(-2097184);
     $717 = $714&65535;
     $718 = $716 ? -32768 : $717;
     $719 = $715 ? 32767 : $718;
     $720 = ((($$2360$i)) + 2|0);
     HEAP16[$$2360$i>>1] = $719;
     $721 = (($$2348359$i) + ($16))|0;
     $722 = ($721|0)<($40|0);
     if ($722) {
      $$2348359$i = $721;$$2360$i = $720;
     } else {
      $$3$i = $720;
      break;
     }
    }
   } else {
    $$3$i = $$0;
   }
   break;
  }
  default: {
   $$3$i = $$0;
  }
  }
  $723 = (($$043) - ($$043$))|0;
  $724 = ($723|0)>(1);
  if (!($724)) {
   break;
  }
  $725 = (($$042) + ($$043$<<1)|0);
  $726 = (($9) + ($$043$<<2)|0);
  $727 = $41 << 2;
  _memcpy(($9|0),($726|0),($727|0))|0;
  $$pre = HEAP32[$4>>2]|0;
  $$pre54 = HEAP32[$6>>2]|0;
  $$pre55 = HEAP32[$12>>2]|0;
  $$0 = $$3$i;$$042 = $725;$$043 = $723;$36 = $$pre;$38 = $$pre54;$39 = $$pre55;
 }
 $728 = (($9) + ($$043$<<2)|0);
 $729 = $41 << 2;
 _memcpy(($10|0),($728|0),($729|0))|0;
 STACKTOP = sp;return;
}
function _silk_resampler_private_IIR_FIR($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$lcssa$i = 0, $$030 = 0, $$031 = 0, $$031$ = 0, $$04243$i = 0, $$044$i = 0, $$alloca_mul = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 268|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 << 1;
 $7 = (($6) + 8)|0;
 $$alloca_mul = $7<<1;
 $8 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $9 = ((($0)) + 24|0);
 ;HEAP32[$8>>2]=HEAP32[$9>>2]|0;HEAP32[$8+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$9+8>>2]|0;HEAP32[$8+12>>2]=HEAP32[$9+12>>2]|0;
 $10 = ((($0)) + 272|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($8)) + 16|0);
 $$0 = $1;$$030 = $2;$$031 = $3;$14 = $5;
 while(1) {
  $13 = ($$031|0)<($14|0);
  $$031$ = $13 ? $$031 : $14;
  _silk_resampler_private_up2_HQ($0,$12,$$030,$$031$);
  $15 = $$031$ << 17;
  $16 = ($15|0)>(0);
  if ($16) {
   $$04243$i = 0;$$044$i = $$0;
   while(1) {
    $17 = $$04243$i & 65535;
    $18 = ($17*12)|0;
    $19 = $18 >>> 16;
    $20 = $$04243$i >> 16;
    $21 = (($8) + ($20<<1)|0);
    $22 = HEAP16[$21>>1]|0;
    $23 = $22 << 16 >> 16;
    $24 = (22736 + ($19<<3)|0);
    $25 = HEAP16[$24>>1]|0;
    $26 = $25 << 16 >> 16;
    $27 = Math_imul($26, $23)|0;
    $28 = ((($21)) + 2|0);
    $29 = HEAP16[$28>>1]|0;
    $30 = $29 << 16 >> 16;
    $31 = (((22736 + ($19<<3)|0)) + 2|0);
    $32 = HEAP16[$31>>1]|0;
    $33 = $32 << 16 >> 16;
    $34 = Math_imul($33, $30)|0;
    $35 = (($34) + ($27))|0;
    $36 = ((($21)) + 4|0);
    $37 = HEAP16[$36>>1]|0;
    $38 = $37 << 16 >> 16;
    $39 = (((22736 + ($19<<3)|0)) + 4|0);
    $40 = HEAP16[$39>>1]|0;
    $41 = $40 << 16 >> 16;
    $42 = Math_imul($41, $38)|0;
    $43 = (($35) + ($42))|0;
    $44 = ((($21)) + 6|0);
    $45 = HEAP16[$44>>1]|0;
    $46 = $45 << 16 >> 16;
    $47 = (((22736 + ($19<<3)|0)) + 6|0);
    $48 = HEAP16[$47>>1]|0;
    $49 = $48 << 16 >> 16;
    $50 = Math_imul($49, $46)|0;
    $51 = (($43) + ($50))|0;
    $52 = ((($21)) + 8|0);
    $53 = HEAP16[$52>>1]|0;
    $54 = $53 << 16 >> 16;
    $55 = (11 - ($19))|0;
    $56 = (((22736 + ($55<<3)|0)) + 6|0);
    $57 = HEAP16[$56>>1]|0;
    $58 = $57 << 16 >> 16;
    $59 = Math_imul($58, $54)|0;
    $60 = (($51) + ($59))|0;
    $61 = ((($21)) + 10|0);
    $62 = HEAP16[$61>>1]|0;
    $63 = $62 << 16 >> 16;
    $64 = (((22736 + ($55<<3)|0)) + 4|0);
    $65 = HEAP16[$64>>1]|0;
    $66 = $65 << 16 >> 16;
    $67 = Math_imul($66, $63)|0;
    $68 = (($60) + ($67))|0;
    $69 = ((($21)) + 12|0);
    $70 = HEAP16[$69>>1]|0;
    $71 = $70 << 16 >> 16;
    $72 = (((22736 + ($55<<3)|0)) + 2|0);
    $73 = HEAP16[$72>>1]|0;
    $74 = $73 << 16 >> 16;
    $75 = Math_imul($74, $71)|0;
    $76 = (($68) + ($75))|0;
    $77 = ((($21)) + 14|0);
    $78 = HEAP16[$77>>1]|0;
    $79 = $78 << 16 >> 16;
    $80 = (22736 + ($55<<3)|0);
    $81 = HEAP16[$80>>1]|0;
    $82 = $81 << 16 >> 16;
    $83 = Math_imul($82, $79)|0;
    $84 = (($76) + ($83))|0;
    $85 = $84 >>> 14;
    $86 = (($85) + 1)|0;
    $87 = $86 >>> 1;
    $88 = ($84|0)>(1073725439);
    $89 = ($84|0)<(-1073758208);
    $90 = $87&65535;
    $91 = $89 ? -32768 : $90;
    $92 = $88 ? 32767 : $91;
    $93 = ((($$044$i)) + 2|0);
    HEAP16[$$044$i>>1] = $92;
    $94 = (($$04243$i) + ($11))|0;
    $95 = ($94|0)<($15|0);
    if ($95) {
     $$04243$i = $94;$$044$i = $93;
    } else {
     $$0$lcssa$i = $93;
     break;
    }
   }
  } else {
   $$0$lcssa$i = $$0;
  }
  $96 = (($$031) - ($$031$))|0;
  $97 = ($96|0)>(0);
  if (!($97)) {
   break;
  }
  $98 = (($$030) + ($$031$<<1)|0);
  $99 = $$031$ << 1;
  $100 = (($8) + ($99<<1)|0);
  ;HEAP32[$8>>2]=HEAP32[$100>>2]|0;HEAP32[$8+4>>2]=HEAP32[$100+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$100+8>>2]|0;HEAP32[$8+12>>2]=HEAP32[$100+12>>2]|0;
  $$pre = HEAP32[$4>>2]|0;
  $$0 = $$0$lcssa$i;$$030 = $98;$$031 = $96;$14 = $$pre;
 }
 $101 = $$031$ << 1;
 $102 = (($8) + ($101<<1)|0);
 ;HEAP16[$9>>1]=HEAP16[$102>>1]|0;HEAP16[$9+2>>1]=HEAP16[$102+2>>1]|0;HEAP16[$9+4>>1]=HEAP16[$102+4>>1]|0;HEAP16[$9+6>>1]=HEAP16[$102+6>>1]|0;HEAP16[$9+8>>1]=HEAP16[$102+8>>1]|0;HEAP16[$9+10>>1]=HEAP16[$102+10>>1]|0;HEAP16[$9+12>>1]=HEAP16[$102+12>>1]|0;HEAP16[$9+14>>1]=HEAP16[$102+14>>1]|0;
 STACKTOP = sp;return;
}
function _silk_resampler_private_up2_HQ($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$082 = 0, $$promoted = 0, $$promoted83 = 0, $$promoted85 = 0, $$promoted87 = 0, $$promoted89 = 0, $$promoted91 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $exitcond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($3|0)>(0);
 if (!($4)) {
  return;
 }
 $5 = ((($0)) + 4|0);
 $6 = ((($0)) + 8|0);
 $7 = ((($0)) + 12|0);
 $8 = ((($0)) + 16|0);
 $9 = ((($0)) + 20|0);
 $$promoted = HEAP32[$0>>2]|0;
 $$promoted83 = HEAP32[$5>>2]|0;
 $$promoted85 = HEAP32[$6>>2]|0;
 $$promoted87 = HEAP32[$7>>2]|0;
 $$promoted89 = HEAP32[$8>>2]|0;
 $$promoted91 = HEAP32[$9>>2]|0;
 $$082 = 0;$15 = $$promoted;$25 = $$promoted83;$35 = $$promoted85;$55 = $$promoted87;$65 = $$promoted89;$75 = $$promoted91;
 while(1) {
  $10 = (($2) + ($$082<<1)|0);
  $11 = HEAP16[$10>>1]|0;
  $12 = $11 << 16 >> 16;
  $13 = $12 << 10;
  $14 = (($13) - ($15))|0;
  $16 = $14 >> 16;
  $17 = ($16*1746)|0;
  $18 = $14 & 65535;
  $19 = ($18*1746)|0;
  $20 = $19 >>> 16;
  $21 = (($20) + ($17))|0;
  $22 = (($21) + ($15))|0;
  $23 = (($21) + ($13))|0;
  $24 = (($22) - ($25))|0;
  $26 = $24 >> 16;
  $27 = ($26*14986)|0;
  $28 = $24 & 65535;
  $29 = ($28*14986)|0;
  $30 = $29 >>> 16;
  $31 = (($30) + ($27))|0;
  $32 = (($31) + ($25))|0;
  $33 = (($31) + ($22))|0;
  $34 = (($32) - ($35))|0;
  $36 = $34 >> 16;
  $37 = Math_imul($36, -26453)|0;
  $38 = $34 & 65535;
  $39 = Math_imul($38, -26453)|0;
  $40 = $39 >> 16;
  $41 = (($40) + ($37))|0;
  $42 = (($41) + ($32))|0;
  $43 = (($42) + ($34))|0;
  $44 = $42 >>> 9;
  $45 = (($44) + 1)|0;
  $46 = $45 >>> 1;
  $47 = ($42|0)>(33553919);
  $48 = ($42|0)<(-33554944);
  $49 = $46&65535;
  $50 = $48 ? -32768 : $49;
  $51 = $47 ? 32767 : $50;
  $52 = $$082 << 1;
  $53 = (($1) + ($52<<1)|0);
  HEAP16[$53>>1] = $51;
  $54 = (($13) - ($55))|0;
  $56 = $54 >> 16;
  $57 = ($56*6854)|0;
  $58 = $54 & 65535;
  $59 = ($58*6854)|0;
  $60 = $59 >>> 16;
  $61 = (($60) + ($57))|0;
  $62 = (($61) + ($55))|0;
  $63 = (($61) + ($13))|0;
  $64 = (($62) - ($65))|0;
  $66 = $64 >> 16;
  $67 = ($66*25769)|0;
  $68 = $64 & 65535;
  $69 = ($68*25769)|0;
  $70 = $69 >>> 16;
  $71 = (($70) + ($67))|0;
  $72 = (($71) + ($65))|0;
  $73 = (($71) + ($62))|0;
  $74 = (($72) - ($75))|0;
  $76 = $74 >> 16;
  $77 = Math_imul($76, -9994)|0;
  $78 = $74 & 65535;
  $79 = Math_imul($78, -9994)|0;
  $80 = $79 >> 16;
  $81 = (($80) + ($77))|0;
  $82 = (($81) + ($72))|0;
  $83 = (($82) + ($74))|0;
  $84 = $82 >>> 9;
  $85 = (($84) + 1)|0;
  $86 = $85 >>> 1;
  $87 = ($82|0)>(33553919);
  $88 = ($82|0)<(-33554944);
  $89 = $86&65535;
  $90 = $88 ? -32768 : $89;
  $91 = $87 ? 32767 : $90;
  $92 = $52 | 1;
  $93 = (($1) + ($92<<1)|0);
  HEAP16[$93>>1] = $91;
  $94 = (($$082) + 1)|0;
  $exitcond = ($94|0)==($3|0);
  if ($exitcond) {
   break;
  } else {
   $$082 = $94;$15 = $23;$25 = $33;$35 = $43;$55 = $63;$65 = $73;$75 = $83;
  }
 }
 HEAP32[$0>>2] = $23;
 HEAP32[$5>>2] = $33;
 HEAP32[$6>>2] = $43;
 HEAP32[$7>>2] = $63;
 HEAP32[$8>>2] = $73;
 HEAP32[$9>>2] = $83;
 return;
}
function _silk_resampler_private_up2_HQ_wrapper($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _silk_resampler_private_up2_HQ($0,$1,$2,$3);
 return;
}
function _silk_stereo_decode_pred($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_ec_dec_icdf($0,21040,8)|0);
 $3 = (($2|0) / 5)&-1;
 $4 = Math_imul($3, -5)|0;
 $5 = (($4) + ($2))|0;
 $6 = (_ec_dec_icdf($0,37828,8)|0);
 $7 = (_ec_dec_icdf($0,37835,8)|0);
 $8 = (_ec_dec_icdf($0,37828,8)|0);
 $9 = (_ec_dec_icdf($0,37835,8)|0);
 $10 = ($3*3)|0;
 $11 = (($6) + ($10))|0;
 $12 = (21008 + ($11<<1)|0);
 $13 = HEAP16[$12>>1]|0;
 $14 = $13 << 16 >> 16;
 $15 = (($11) + 1)|0;
 $16 = (21008 + ($15<<1)|0);
 $17 = HEAP16[$16>>1]|0;
 $18 = $17 << 16 >> 16;
 $19 = (($18) - ($14))|0;
 $20 = $19 >> 16;
 $21 = ($20*6554)|0;
 $22 = $19 & 65535;
 $23 = ($22*6554)|0;
 $24 = $23 >>> 16;
 $25 = (($24) + ($21))|0;
 $26 = $7 << 17;
 $27 = $26 >> 16;
 $28 = $27 | 1;
 $29 = Math_imul($25, $28)|0;
 $30 = (($29) + ($14))|0;
 $31 = ($5*3)|0;
 $32 = (($8) + ($31))|0;
 $33 = (21008 + ($32<<1)|0);
 $34 = HEAP16[$33>>1]|0;
 $35 = $34 << 16 >> 16;
 $36 = (($32) + 1)|0;
 $37 = (21008 + ($36<<1)|0);
 $38 = HEAP16[$37>>1]|0;
 $39 = $38 << 16 >> 16;
 $40 = (($39) - ($35))|0;
 $41 = $40 >> 16;
 $42 = ($41*6554)|0;
 $43 = $40 & 65535;
 $44 = ($43*6554)|0;
 $45 = $44 >>> 16;
 $46 = (($45) + ($42))|0;
 $47 = $9 << 17;
 $48 = $47 >> 16;
 $49 = $48 | 1;
 $50 = Math_imul($46, $49)|0;
 $51 = (($50) + ($35))|0;
 $52 = ((($1)) + 4|0);
 HEAP32[$52>>2] = $51;
 $53 = (($30) - ($51))|0;
 HEAP32[$1>>2] = $53;
 return;
}
function _silk_stereo_decode_mid_only($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_ec_dec_icdf($0,37800,8)|0);
 HEAP32[$1>>2] = $2;
 return;
}
function _silk_stereo_encode_pred($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 2|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = $3 << 24 >> 24;
 $5 = ($4*5)|0;
 $6 = ((($1)) + 5|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = $7 << 24 >> 24;
 $9 = (($5) + ($8))|0;
 _ec_enc_icdf($0,$9,21040,8);
 $10 = HEAP8[$1>>0]|0;
 $11 = $10 << 24 >> 24;
 _ec_enc_icdf($0,$11,37828,8);
 $12 = ((($1)) + 1|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $13 << 24 >> 24;
 _ec_enc_icdf($0,$14,37835,8);
 $15 = ((($1)) + 3|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = $16 << 24 >> 24;
 _ec_enc_icdf($0,$17,37828,8);
 $18 = ((($1)) + 4|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = $19 << 24 >> 24;
 _ec_enc_icdf($0,$20,37835,8);
 return;
}
function _silk_stereo_encode_mid_only($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 << 24 >> 24;
 _ec_enc_icdf($0,$2,37800,8);
 return;
}
function _silk_stereo_find_predictor($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$$i67 = 0, $$$i81 = 0, $$0$i$i$i = 0, $$0$i$i$i66 = 0, $$0$i$i$i73 = 0, $$0$i$i$i80 = 0, $$09$i = 0, $$09$i78 = 0, $$107 = 0, $$108 = 0, $$109 = 0, $$56$i = 0, $$56$i91 = 0, $$neg$i = 0, $$neg$i88 = 0, $$pn = 0, $$pn$in = 0, $$pn96 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $sext = 0, $sext$i = 0, $sext$i65 = 0, $sext$i68 = 0, $sext$i75 = 0, $sext$i82 = 0, $sext$i87 = 0, $sext10$i = 0;
 var $sext10$i69 = 0, $sext10$i76 = 0, $sext10$i83 = 0, $sext61 = 0, $sext6195 = 0, $sext62 = 0, $spec$select = 0, $spec$select$i = 0, $spec$select$i93 = 0, $spec$select58$i = 0, $spec$select58$i92 = 0, $spec$select63 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp + 12|0;
 $7 = sp + 8|0;
 $8 = sp + 4|0;
 $9 = sp;
 _silk_sum_sqr_shift($8,$6,$1,$4);
 _silk_sum_sqr_shift($9,$7,$2,$4);
 $10 = HEAP32[$6>>2]|0;
 $11 = HEAP32[$7>>2]|0;
 $12 = ($10|0)>($11|0);
 $13 = $12 ? $10 : $11;
 $14 = $13 & 1;
 $15 = (($14) + ($13))|0;
 $16 = HEAP32[$9>>2]|0;
 $17 = (($15) - ($11))|0;
 $18 = $16 >> $17;
 HEAP32[$9>>2] = $18;
 $19 = HEAP32[$8>>2]|0;
 $20 = (($15) - ($10))|0;
 $21 = $19 >> $20;
 $22 = ($21|0)>(1);
 $23 = $22 ? $21 : 1;
 HEAP32[$8>>2] = $23;
 $24 = (_silk_inner_prod_aligned_scale($1,$2,$15,$4)|0);
 $25 = HEAP32[$8>>2]|0;
 $26 = ($24|0)>(0);
 $27 = (0 - ($24))|0;
 $28 = $26 ? $24 : $27;
 $29 = (Math_clz32(($28|0))|0);
 $30 = (($29) + -1)|0;
 $31 = $24 << $30;
 $32 = ($25|0)>(0);
 $33 = (0 - ($25))|0;
 $34 = $32 ? $25 : $33;
 $35 = (Math_clz32(($34|0))|0);
 $36 = (($35) + -1)|0;
 $37 = $25 << $36;
 $38 = $37 >> 16;
 $39 = (536870911 / ($38|0))&-1;
 $40 = $31 >> 16;
 $sext$i87 = $39 << 16;
 $41 = $sext$i87 >> 16;
 $42 = Math_imul($40, $41)|0;
 $43 = $31 & 65535;
 $44 = Math_imul($43, $41)|0;
 $45 = $44 >> 16;
 $46 = (($45) + ($42))|0;
 $47 = ($37|0)<(0);
 $48 = $47 << 31 >> 31;
 $49 = ($46|0)<(0);
 $50 = $49 << 31 >> 31;
 $51 = (___muldi3(($46|0),($50|0),($37|0),($48|0))|0);
 $52 = tempRet0;
 $53 = (_bitshift64Lshr(($51|0),($52|0),29)|0);
 $54 = tempRet0;
 $55 = $53 & -8;
 $56 = (($31) - ($55))|0;
 $57 = $56 >> 16;
 $58 = Math_imul($57, $41)|0;
 $59 = $56 & 65535;
 $60 = Math_imul($59, $41)|0;
 $61 = $60 >> 16;
 $62 = (($58) + ($46))|0;
 $63 = (($62) + ($61))|0;
 $$neg$i88 = (1 - ($35))|0;
 $64 = (($29) + 15)|0;
 $65 = (($64) + ($$neg$i88))|0;
 $66 = ($65|0)<(0);
 if ($66) {
  $67 = (0 - ($65))|0;
  $68 = -2147483648 >> $67;
  $69 = 2147483647 >>> $67;
  $70 = ($68|0)>($69|0);
  $$ = $70 ? $68 : $69;
  $$107 = $70 ? $69 : $68;
  $71 = ($63|0)>($$|0);
  $72 = ($63|0)<($$107|0);
  $$56$i91 = $72 ? $$107 : $63;
  $spec$select58$i92 = $71 ? $$ : $$56$i91;
  $73 = $spec$select58$i92 << $67;
  $77 = $73;
 } else {
  $74 = ($65|0)<(32);
  $75 = $63 >> $65;
  $spec$select$i93 = $74 ? $75 : 0;
  $77 = $spec$select$i93;
 }
 $76 = ($77|0)>(-16384);
 $78 = $76 ? $77 : -16384;
 $79 = ($78|0)<(16384);
 $80 = $79 ? $78 : 16384;
 $81 = $80 >> 16;
 $sext = $80 << 16;
 $82 = $sext >> 16;
 $83 = Math_imul($82, $81)|0;
 $84 = $80 & 65535;
 $85 = Math_imul($82, $84)|0;
 $86 = $85 >> 16;
 $87 = (($86) + ($83))|0;
 $88 = ($87|0)>(0);
 $89 = (0 - ($87))|0;
 $90 = $88 ? $87 : $89;
 $91 = ($90|0)<($5|0);
 $92 = $91 ? $5 : $90;
 $93 = $15 >> 1;
 $94 = HEAP32[$3>>2]|0;
 $95 = ($25|0)<(1);
 if ($95) {
  $96 = (0 - ($94))|0;
  $97 = $96 >> 16;
  $sext6195 = $92 << 16;
  $98 = $sext6195 >> 16;
  $99 = Math_imul($98, $97)|0;
  $$09$i78 = 0;$149 = $98;$152 = $99;
 } else {
  $100 = (Math_clz32(($25|0))|0);
  $101 = (24 - ($100))|0;
  $102 = (0 - ($101))|0;
  $103 = ($101|0)==(0);
  do {
   if ($103) {
    $$0$i$i$i80 = $25;
   } else {
    $104 = ($101|0)<(0);
    if ($104) {
     $105 = $25 << $102;
     $106 = (($101) + 32)|0;
     $107 = $25 >>> $106;
     $108 = $107 | $105;
     $$0$i$i$i80 = $108;
     break;
    } else {
     $109 = (32 - ($101))|0;
     $110 = $25 << $109;
     $111 = $25 >>> $101;
     $112 = $110 | $111;
     $$0$i$i$i80 = $112;
     break;
    }
   }
  } while(0);
  $113 = $100 & 1;
  $114 = ($113|0)==(0);
  $$$i81 = $114 ? 46214 : 32768;
  $115 = $100 >>> 1;
  $116 = $$$i81 >>> $115;
  $117 = $116 >> 16;
  $sext$i82 = $$0$i$i$i80 & 127;
  $sext10$i83 = Math_imul($sext$i82, 13959168)|0;
  $118 = $sext10$i83 >>> 16;
  $119 = Math_imul($118, $117)|0;
  $120 = $116 & 65535;
  $121 = Math_imul($118, $120)|0;
  $122 = $121 >>> 16;
  $123 = (($119) + ($116))|0;
  $124 = (($123) + ($122))|0;
  $125 = $124 << $93;
  $126 = (($125) - ($94))|0;
  $127 = $126 >> 16;
  $sext61 = $92 << 16;
  $128 = $sext61 >> 16;
  $129 = Math_imul($127, $128)|0;
  do {
   if ($103) {
    $$0$i$i$i73 = $25;
   } else {
    $130 = ($101|0)<(0);
    if ($130) {
     $131 = $25 << $102;
     $132 = (($101) + 32)|0;
     $133 = $25 >>> $132;
     $134 = $133 | $131;
     $$0$i$i$i73 = $134;
     break;
    } else {
     $135 = (32 - ($101))|0;
     $136 = $25 << $135;
     $137 = $25 >>> $101;
     $138 = $136 | $137;
     $$0$i$i$i73 = $138;
     break;
    }
   }
  } while(0);
  $sext$i75 = $$0$i$i$i73 & 127;
  $sext10$i76 = Math_imul($sext$i75, 13959168)|0;
  $139 = $sext10$i76 >>> 16;
  $140 = Math_imul($139, $117)|0;
  $141 = Math_imul($139, $120)|0;
  $142 = $141 >>> 16;
  $143 = (($140) + ($116))|0;
  $144 = (($143) + ($142))|0;
  $$09$i78 = $144;$149 = $128;$152 = $129;
 }
 $145 = $$09$i78 << $93;
 $146 = (($145) - ($94))|0;
 $147 = $146 & 65535;
 $148 = Math_imul($147, $149)|0;
 $150 = $148 >> 16;
 $151 = (($152) + ($94))|0;
 $153 = (($151) + ($150))|0;
 HEAP32[$3>>2] = $153;
 $154 = HEAP32[$9>>2]|0;
 $155 = $24 >> 16;
 $156 = Math_imul($82, $155)|0;
 $157 = $24 & 65535;
 $158 = Math_imul($82, $157)|0;
 $159 = $158 >> 16;
 $160 = (($159) + ($156))|0;
 $161 = $160 << 4;
 $162 = (($154) - ($161))|0;
 $163 = $25 >> 16;
 $sext62 = $87 << 16;
 $164 = $sext62 >> 16;
 $165 = Math_imul($164, $163)|0;
 $166 = $25 & 65535;
 $167 = Math_imul($164, $166)|0;
 $168 = $167 >> 16;
 $169 = (($168) + ($165))|0;
 $170 = $169 << 6;
 $171 = (($162) + ($170))|0;
 HEAP32[$9>>2] = $171;
 $172 = ((($3)) + 4|0);
 $173 = HEAP32[$172>>2]|0;
 $174 = ($171|0)<(1);
 if ($174) {
  $$09$i = 0;$$pn96 = 0;
 } else {
  $175 = (Math_clz32(($171|0))|0);
  $176 = (24 - ($175))|0;
  $177 = (0 - ($176))|0;
  $178 = ($176|0)==(0);
  do {
   if ($178) {
    $$0$i$i$i66 = $171;
   } else {
    $179 = ($176|0)<(0);
    if ($179) {
     $180 = $171 << $177;
     $181 = (($176) + 32)|0;
     $182 = $171 >>> $181;
     $183 = $182 | $180;
     $$0$i$i$i66 = $183;
     break;
    } else {
     $184 = (32 - ($176))|0;
     $185 = $171 << $184;
     $186 = $171 >>> $176;
     $187 = $185 | $186;
     $$0$i$i$i66 = $187;
     break;
    }
   }
  } while(0);
  $188 = $175 & 1;
  $189 = ($188|0)==(0);
  $$$i67 = $189 ? 46214 : 32768;
  $190 = $175 >>> 1;
  $191 = $$$i67 >>> $190;
  $192 = $191 >> 16;
  $sext$i68 = $$0$i$i$i66 & 127;
  $sext10$i69 = Math_imul($sext$i68, 13959168)|0;
  $193 = $sext10$i69 >>> 16;
  $194 = Math_imul($193, $192)|0;
  $195 = $191 & 65535;
  $196 = Math_imul($193, $195)|0;
  $197 = $196 >>> 16;
  $198 = (($194) + ($191))|0;
  $199 = (($198) + ($197))|0;
  $200 = $199 << $93;
  do {
   if ($178) {
    $$0$i$i$i = $171;
   } else {
    $201 = ($176|0)<(0);
    if ($201) {
     $202 = $171 << $177;
     $203 = (($176) + 32)|0;
     $204 = $171 >>> $203;
     $205 = $204 | $202;
     $$0$i$i$i = $205;
     break;
    } else {
     $206 = (32 - ($176))|0;
     $207 = $171 << $206;
     $208 = $171 >>> $176;
     $209 = $207 | $208;
     $$0$i$i$i = $209;
     break;
    }
   }
  } while(0);
  $sext$i65 = $$0$i$i$i & 127;
  $sext10$i = Math_imul($sext$i65, 13959168)|0;
  $210 = $sext10$i >>> 16;
  $211 = Math_imul($210, $192)|0;
  $212 = Math_imul($210, $195)|0;
  $213 = $212 >>> 16;
  $214 = (($211) + ($191))|0;
  $215 = (($214) + ($213))|0;
  $$09$i = $215;$$pn96 = $200;
 }
 $$pn$in = (($$pn96) - ($173))|0;
 $$pn = $$pn$in >> 16;
 $216 = Math_imul($$pn, $149)|0;
 $217 = $$09$i << $93;
 $218 = (($217) - ($173))|0;
 $219 = $218 & 65535;
 $220 = Math_imul($219, $149)|0;
 $221 = $220 >> 16;
 $222 = (($216) + ($173))|0;
 $223 = (($222) + ($221))|0;
 HEAP32[$172>>2] = $223;
 $224 = ($153|0)>(1);
 $spec$select = $224 ? $153 : 1;
 $225 = ($223|0)>(0);
 $226 = (0 - ($223))|0;
 $227 = $225 ? $223 : $226;
 $228 = (Math_clz32(($227|0))|0);
 $229 = (($228) + -1)|0;
 $230 = $223 << $229;
 $231 = ($spec$select|0)>(0);
 $232 = (0 - ($spec$select))|0;
 $233 = $231 ? $spec$select : $232;
 $234 = (Math_clz32(($233|0))|0);
 $235 = (($234) + -1)|0;
 $236 = $spec$select << $235;
 $237 = $236 >> 16;
 $238 = (536870911 / ($237|0))&-1;
 $239 = $230 >> 16;
 $sext$i = $238 << 16;
 $240 = $sext$i >> 16;
 $241 = Math_imul($239, $240)|0;
 $242 = $230 & 65535;
 $243 = Math_imul($242, $240)|0;
 $244 = $243 >> 16;
 $245 = (($244) + ($241))|0;
 $246 = ($236|0)<(0);
 $247 = $246 << 31 >> 31;
 $248 = ($245|0)<(0);
 $249 = $248 << 31 >> 31;
 $250 = (___muldi3(($245|0),($249|0),($236|0),($247|0))|0);
 $251 = tempRet0;
 $252 = (_bitshift64Lshr(($250|0),($251|0),29)|0);
 $253 = tempRet0;
 $254 = $252 & -8;
 $255 = (($230) - ($254))|0;
 $256 = $255 >> 16;
 $257 = Math_imul($256, $240)|0;
 $258 = $255 & 65535;
 $259 = Math_imul($258, $240)|0;
 $260 = $259 >> 16;
 $261 = (($257) + ($245))|0;
 $262 = (($261) + ($260))|0;
 $$neg$i = (1 - ($234))|0;
 $263 = (($$neg$i) + 14)|0;
 $264 = (($263) + ($228))|0;
 $265 = ($264|0)<(0);
 if ($265) {
  $266 = (0 - ($264))|0;
  $267 = -2147483648 >> $266;
  $268 = 2147483647 >>> $266;
  $269 = ($267|0)>($268|0);
  $$108 = $269 ? $267 : $268;
  $$109 = $269 ? $268 : $267;
  $270 = ($262|0)>($$108|0);
  $271 = ($262|0)<($$109|0);
  $$56$i = $271 ? $$109 : $262;
  $spec$select58$i = $270 ? $$108 : $$56$i;
  $272 = $spec$select58$i << $266;
  $276 = $272;
  $275 = ($276|0)>(0);
  $spec$select63 = $275 ? $276 : 0;
  $277 = ($spec$select63|0)<(32767);
  $278 = $277 ? $spec$select63 : 32767;
  HEAP32[$0>>2] = $278;
  STACKTOP = sp;return ($80|0);
 } else {
  $273 = ($264|0)<(32);
  $274 = $262 >> $264;
  $spec$select$i = $273 ? $274 : 0;
  $276 = $spec$select$i;
  $275 = ($276|0)>(0);
  $spec$select63 = $275 ? $276 : 0;
  $277 = ($spec$select63|0)<(32767);
  $278 = $277 ? $spec$select63 : 32767;
  HEAP32[$0>>2] = $278;
  STACKTOP = sp;return ($80|0);
 }
 return (0)|0;
}
function _silk_stereo_quant_pred($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$05972 = 0, $$05972$1 = 0, $$06071 = 0, $$06071$1 = 0, $$173 = 0, $$173$1 = 0, $$3 = 0, $$3$1 = 0, $$pre = 0, $$pre81$pre = 0, $$pre82$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 1|0);
 $$pre = HEAP16[10504]|0;
 $$05972 = 0;$$06071 = 2147483647;$$173 = 0;$4 = $$pre;
 while(1) {
  $3 = $4 << 16 >> 16;
  $5 = (($$05972) + 1)|0;
  $6 = (21008 + ($5<<1)|0);
  $7 = HEAP16[$6>>1]|0;
  $8 = $7 << 16 >> 16;
  $9 = (($8) - ($3))|0;
  $10 = $9 >> 16;
  $11 = ($10*6554)|0;
  $12 = $9 & 65535;
  $13 = ($12*6554)|0;
  $14 = $13 >>> 16;
  $15 = (($14) + ($11))|0;
  $16 = $$05972&255;
  $17 = (($15) + ($3))|0;
  $18 = HEAP32[$0>>2]|0;
  $19 = (($18) - ($17))|0;
  $20 = ($19|0)>(0);
  $21 = (0 - ($19))|0;
  $22 = $20 ? $19 : $21;
  $23 = ($22|0)<($$06071|0);
  if (!($23)) {
   label = 3;
   break;
  }
  HEAP8[$1>>0] = $16;
  HEAP8[$2>>0] = 0;
  $24 = ($15*3)|0;
  $25 = (($24) + ($3))|0;
  $26 = HEAP32[$0>>2]|0;
  $27 = (($26) - ($25))|0;
  $28 = ($27|0)>(0);
  $29 = (0 - ($27))|0;
  $30 = $28 ? $27 : $29;
  $31 = ($30|0)<($22|0);
  if (!($31)) {
   $$3 = $17;$33 = $16;
   break;
  }
  HEAP8[$1>>0] = $16;
  HEAP8[$2>>0] = 1;
  $43 = ($15*5)|0;
  $44 = (($43) + ($3))|0;
  $45 = HEAP32[$0>>2]|0;
  $46 = (($45) - ($44))|0;
  $47 = ($46|0)>(0);
  $48 = (0 - ($46))|0;
  $49 = $47 ? $46 : $48;
  $50 = ($49|0)<($30|0);
  if (!($50)) {
   $$3 = $25;$33 = $16;
   break;
  }
  HEAP8[$1>>0] = $16;
  HEAP8[$2>>0] = 2;
  $51 = ($15*7)|0;
  $52 = (($51) + ($3))|0;
  $53 = HEAP32[$0>>2]|0;
  $54 = (($53) - ($52))|0;
  $55 = ($54|0)>(0);
  $56 = (0 - ($54))|0;
  $57 = $55 ? $54 : $56;
  $58 = ($57|0)<($49|0);
  if (!($58)) {
   $$3 = $44;$33 = $16;
   break;
  }
  HEAP8[$1>>0] = $16;
  HEAP8[$2>>0] = 3;
  $59 = ($15*9)|0;
  $60 = (($59) + ($3))|0;
  $61 = HEAP32[$0>>2]|0;
  $62 = (($61) - ($60))|0;
  $63 = ($62|0)>(0);
  $64 = (0 - ($62))|0;
  $65 = $63 ? $62 : $64;
  $66 = ($65|0)<($57|0);
  if (!($66)) {
   $$3 = $52;$33 = $16;
   break;
  }
  HEAP8[$1>>0] = $16;
  HEAP8[$2>>0] = 4;
  $67 = ($5>>>0)<(15);
  if ($67) {
   $$05972 = $5;$$06071 = $65;$$173 = $60;$4 = $7;
  } else {
   $$3 = $60;$33 = $16;
   break;
  }
 }
 if ((label|0) == 3) {
  $$pre81$pre = HEAP8[$1>>0]|0;
  $$3 = $$173;$33 = $$pre81$pre;
 }
 $32 = (($33<<24>>24) / 3)&-1;
 $34 = ((($1)) + 2|0);
 HEAP8[$34>>0] = $32;
 $35 = $32 << 24 >> 24;
 $36 = $33&255;
 $37 = Math_imul($35, -3)|0;
 $38 = (($37) + ($36))|0;
 $39 = $38&255;
 HEAP8[$1>>0] = $39;
 HEAP32[$0>>2] = $$3;
 $40 = ((($0)) + 4|0);
 $41 = ((($1)) + 3|0);
 $42 = ((($1)) + 4|0);
 $$05972$1 = 0;$$06071$1 = 2147483647;$$173$1 = $$3;$69 = $$pre;
 while(1) {
  $68 = $69 << 16 >> 16;
  $70 = (($$05972$1) + 1)|0;
  $71 = (21008 + ($70<<1)|0);
  $72 = HEAP16[$71>>1]|0;
  $73 = $72 << 16 >> 16;
  $74 = (($73) - ($68))|0;
  $75 = $74 >> 16;
  $76 = ($75*6554)|0;
  $77 = $74 & 65535;
  $78 = ($77*6554)|0;
  $79 = $78 >>> 16;
  $80 = (($79) + ($76))|0;
  $81 = $$05972$1&255;
  $82 = (($80) + ($68))|0;
  $83 = HEAP32[$40>>2]|0;
  $84 = (($83) - ($82))|0;
  $85 = ($84|0)>(0);
  $86 = (0 - ($84))|0;
  $87 = $85 ? $84 : $86;
  $88 = ($87|0)<($$06071$1|0);
  if (!($88)) {
   label = 11;
   break;
  }
  HEAP8[$41>>0] = $81;
  HEAP8[$42>>0] = 0;
  $89 = ($80*3)|0;
  $90 = (($89) + ($68))|0;
  $91 = HEAP32[$40>>2]|0;
  $92 = (($91) - ($90))|0;
  $93 = ($92|0)>(0);
  $94 = (0 - ($92))|0;
  $95 = $93 ? $92 : $94;
  $96 = ($95|0)<($87|0);
  if (!($96)) {
   $$3$1 = $82;$123 = $81;
   break;
  }
  HEAP8[$41>>0] = $81;
  HEAP8[$42>>0] = 1;
  $97 = ($80*5)|0;
  $98 = (($97) + ($68))|0;
  $99 = HEAP32[$40>>2]|0;
  $100 = (($99) - ($98))|0;
  $101 = ($100|0)>(0);
  $102 = (0 - ($100))|0;
  $103 = $101 ? $100 : $102;
  $104 = ($103|0)<($95|0);
  if (!($104)) {
   $$3$1 = $90;$123 = $81;
   break;
  }
  HEAP8[$41>>0] = $81;
  HEAP8[$42>>0] = 2;
  $105 = ($80*7)|0;
  $106 = (($105) + ($68))|0;
  $107 = HEAP32[$40>>2]|0;
  $108 = (($107) - ($106))|0;
  $109 = ($108|0)>(0);
  $110 = (0 - ($108))|0;
  $111 = $109 ? $108 : $110;
  $112 = ($111|0)<($103|0);
  if (!($112)) {
   $$3$1 = $98;$123 = $81;
   break;
  }
  HEAP8[$41>>0] = $81;
  HEAP8[$42>>0] = 3;
  $113 = ($80*9)|0;
  $114 = (($113) + ($68))|0;
  $115 = HEAP32[$40>>2]|0;
  $116 = (($115) - ($114))|0;
  $117 = ($116|0)>(0);
  $118 = (0 - ($116))|0;
  $119 = $117 ? $116 : $118;
  $120 = ($119|0)<($111|0);
  if (!($120)) {
   $$3$1 = $106;$123 = $81;
   break;
  }
  HEAP8[$41>>0] = $81;
  HEAP8[$42>>0] = 4;
  $121 = ($70>>>0)<(15);
  if ($121) {
   $$05972$1 = $70;$$06071$1 = $119;$$173$1 = $114;$69 = $72;
  } else {
   $$3$1 = $114;$123 = $81;
   break;
  }
 }
 if ((label|0) == 11) {
  $$pre82$pre = HEAP8[$41>>0]|0;
  $$3$1 = $$173$1;$123 = $$pre82$pre;
 }
 $122 = (($123<<24>>24) / 3)&-1;
 $124 = ((($1)) + 5|0);
 HEAP8[$124>>0] = $122;
 $125 = $122 << 24 >> 24;
 $126 = $123&255;
 $127 = Math_imul($125, -3)|0;
 $128 = (($127) + ($126))|0;
 $129 = $128&255;
 HEAP8[$41>>0] = $129;
 HEAP32[$40>>2] = $$3$1;
 $130 = HEAP32[$0>>2]|0;
 $131 = (($130) - ($$3$1))|0;
 HEAP32[$0>>2] = $131;
 return;
}
function _silk_encode_do_VAD_FLP($0) {
 $0 = $0|0;
 var $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 5094|0);
 (_silk_VAD_GetSA_Q8_c($0,$1)|0);
 $2 = ((($0)) + 4528|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)<(13);
 do {
  if ($4) {
   $5 = ((($0)) + 4761|0);
   HEAP8[$5>>0] = 0;
   $6 = ((($0)) + 6080|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = (($7) + 1)|0;
   HEAP32[$6>>2] = $8;
   $9 = ($7|0)<(9);
   if (!($9)) {
    $10 = ($7|0)>(29);
    if (!($10)) {
     $$sink = 0;
     break;
    }
    HEAP32[$6>>2] = 10;
   }
   $11 = ((($0)) + 6076|0);
   HEAP32[$11>>2] = 0;
   $$sink = 0;
  } else {
   $12 = ((($0)) + 6080|0);
   HEAP32[$12>>2] = 0;
   $13 = ((($0)) + 6076|0);
   HEAP32[$13>>2] = 0;
   $14 = ((($0)) + 4761|0);
   HEAP8[$14>>0] = 1;
   $$sink = 1;
  }
 } while(0);
 $15 = ((($0)) + 5744|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (((($0)) + 4716|0) + ($16)|0);
 HEAP8[$17>>0] = $$sink;
 return;
}
function _silk_encode_frame_FLP($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0345$lcssa = 0, $$0345$lcssa$us = 0, $$0345422 = 0, $$0345422$us = 0, $$0346421 = 0, $$0346421$us = 0, $$0347 = 0, $$0350 = 0, $$0351 = 0, $$0353 = 0, $$0355 = 0, $$0357 = 0, $$0358 = 0, $$0360 = 0, $$0362 = 0, $$0364 = 0, $$0366 = 0, $$0368 = 0, $$0370 = 0;
 var $$047$i = 0, $$08$i = 0, $$08$in$i = 0, $$1352 = 0, $$1354409 = 0, $$1354457 = 0, $$1356408 = 0, $$1359407 = 0, $$1359456 = 0, $$1361406 = 0, $$1363405 = 0, $$1363455 = 0, $$1365404 = 0, $$1367 = 0, $$1369403 = 0, $$1369454 = 0, $$1371401 = 0, $$1410 = 0, $$3427 = 0, $$3427$us = 0;
 var $$4430 = 0, $$5435 = 0, $$idx = 0, $$idx$val = 0, $$idx378 = 0, $$idx378$val = 0, $$idx379$val = 0, $$idx380$val = 0, $$idx381 = 0, $$idx381$val = 0, $$idx382 = 0, $$idx382$val = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $$pre49$i = 0, $$sroa$0 = 0, $$sroa$6$0 = 0, $$sroa$6$0$$sroa_idx123 = 0, $$sroa$6$0$copyload = 0, $$sroa$6$0$copyload129 = 0;
 var $$sroa$6$1 = 0, $$sroa$6$2 = 0, $$sroa$6$3402 = 0, $$sroa$7 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = Math_fround(0), $129 = Math_fround(0), $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = Math_fround(0), $195 = Math_fround(0), $196 = 0, $197 = Math_fround(0), $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = Math_fround(0), $303 = Math_fround(0), $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = Math_fround(0), $44 = 0, $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = Math_fround(0), $49 = 0, $50 = 0, $51 = Math_fround(0), $52 = Math_fround(0), $53 = 0, $54 = 0;
 var $55 = 0, $56 = Math_fround(0), $57 = Math_fround(0), $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = Math_fround(0), $62 = Math_fround(0), $63 = 0, $64 = 0, $65 = 0, $66 = Math_fround(0), $67 = Math_fround(0), $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = Math_fround(0), $72 = Math_fround(0);
 var $73 = 0, $74 = 0, $75 = 0, $76 = Math_fround(0), $77 = Math_fround(0), $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = Math_fround(0), $82 = Math_fround(0), $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond450 = 0, $exitcond451 = 0, $indvars$iv = 0, $indvars$iv$next = 0, $indvars$iv$next449 = 0, $indvars$iv448 = 0, $ispos = 0, $ispos$us = 0, $neg = 0, $neg$us = 0;
 var $or$cond = 0, $or$cond$not = 0, $or$cond$not$demorgan = 0, $or$cond372 = 0, $or$cond373 = 0, $or$cond374 = 0, $or$cond377 = 0, $or$cond7 = 0, $scevgep = 0, $sext = 0, $sext$i = 0, $spec$select = 0, $spec$select$v = 0, $spec$select376 = 0, $storemerge = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 17968|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(17968|0);
 $6 = sp + 4032|0;
 $7 = sp + 4016|0;
 $8 = sp + 13600|0;
 $9 = sp + 12848|0;
 $10 = sp + 1328|0;
 $11 = sp + 12800|0;
 $$sroa$0 = sp + 4072|0;
 $$sroa$7 = sp + 4048|0;
 $12 = sp + 8448|0;
 $13 = sp + 4096|0;
 $14 = sp + 1312|0;
 $15 = sp + 32|0;
 $16 = sp + 16|0;
 $17 = sp + 17952|0;
 $18 = sp;
 ;HEAP32[$16>>2]=0|0;HEAP32[$16+4>>2]=0|0;HEAP32[$16+8>>2]=0|0;HEAP32[$16+12>>2]=0|0;
 $19 = ((($0)) + 4616|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($20) + 1)|0;
 HEAP32[$19>>2] = $21;
 $22 = $20 & 3;
 $23 = $22&255;
 $24 = ((($0)) + 4732|0);
 $25 = ((($0)) + 4766|0);
 HEAP8[$25>>0] = $23;
 $26 = ((($0)) + 7176|0);
 $27 = ((($0)) + 4588|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (((($0)) + 7176|0) + ($28<<2)|0);
 $30 = (($10) + ($28<<2)|0);
 $31 = ((($0)) + 16|0);
 $32 = ((($0)) + 5094|0);
 $33 = ((($0)) + 4580|0);
 $34 = HEAP32[$33>>2]|0;
 _silk_LP_variable_cutoff($31,$32,$34);
 $35 = ((($0)) + 4572|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ($36*5)|0;
 $38 = (($29) + ($37<<2)|0);
 $39 = HEAP32[$33>>2]|0;
 $40 = ($39|0)>(0);
 if ($40) {
  $$08$in$i = $39;
  while(1) {
   $$08$i = (($$08$in$i) + -1)|0;
   $41 = (((($0)) + 5092|0) + ($$08$in$i<<1)|0);
   $42 = HEAP16[$41>>1]|0;
   $43 = (Math_fround(($42<<16>>16)));
   $44 = (($38) + ($$08$i<<2)|0);
   HEAPF32[$44>>2] = $43;
   $45 = ($$08$in$i|0)>(1);
   if ($45) {
    $$08$in$i = $$08$i;
   } else {
    break;
   }
  }
 }
 $46 = $39 >> 3;
 $47 = Math_fround(HEAPF32[$38>>2]);
 $48 = Math_fround($47 + Math_fround(9.99999997E-7));
 HEAPF32[$38>>2] = $48;
 $49 = (($46) + ($37))|0;
 $50 = (($29) + ($49<<2)|0);
 $51 = Math_fround(HEAPF32[$50>>2]);
 $52 = Math_fround($51 + Math_fround(9.99999997E-7));
 HEAPF32[$50>>2] = $52;
 $53 = $46 << 1;
 $54 = (($53) + ($37))|0;
 $55 = (($29) + ($54<<2)|0);
 $56 = Math_fround(HEAPF32[$55>>2]);
 $57 = Math_fround($56 + Math_fround(-9.99999997E-7));
 HEAPF32[$55>>2] = $57;
 $58 = ($46*3)|0;
 $59 = (($58) + ($37))|0;
 $60 = (($29) + ($59<<2)|0);
 $61 = Math_fround(HEAPF32[$60>>2]);
 $62 = Math_fround($61 + Math_fround(-9.99999997E-7));
 HEAPF32[$60>>2] = $62;
 $63 = $46 << 2;
 $64 = (($63) + ($37))|0;
 $65 = (($29) + ($64<<2)|0);
 $66 = Math_fround(HEAPF32[$65>>2]);
 $67 = Math_fround($66 + Math_fround(9.99999997E-7));
 HEAPF32[$65>>2] = $67;
 $68 = ($46*5)|0;
 $69 = (($68) + ($37))|0;
 $70 = (($29) + ($69<<2)|0);
 $71 = Math_fround(HEAPF32[$70>>2]);
 $72 = Math_fround($71 + Math_fround(9.99999997E-7));
 HEAPF32[$70>>2] = $72;
 $73 = ($46*6)|0;
 $74 = (($73) + ($37))|0;
 $75 = (($29) + ($74<<2)|0);
 $76 = Math_fround(HEAPF32[$75>>2]);
 $77 = Math_fround($76 + Math_fround(-9.99999997E-7));
 HEAPF32[$75>>2] = $77;
 $78 = ($46*7)|0;
 $79 = (($78) + ($37))|0;
 $80 = (($29) + ($79<<2)|0);
 $81 = Math_fround(HEAPF32[$80>>2]);
 $82 = Math_fround($81 + Math_fround(-9.99999997E-7));
 HEAPF32[$80>>2] = $82;
 $83 = ((($0)) + 4676|0);
 $84 = HEAP32[$83>>2]|0;
 $85 = ($84|0)==(0);
 L6: do {
  if ($85) {
   $86 = ((($0)) + 5088|0);
   $87 = HEAP32[$86>>2]|0;
   _silk_find_pitch_lags_FLP($0,$9,$10,$29,$87);
   _silk_noise_shape_analysis_FLP($0,$9,$30,$29);
   _silk_find_pred_coefs_FLP($0,$9,$30,$29,$3);
   _silk_process_gains_FLP($0,$9,$3);
   $88 = ((($0)) + 5744|0);
   $89 = HEAP32[$88>>2]|0;
   $90 = (((($0)) + 6096|0) + (($89*36)|0)|0);
   $91 = ((($0)) + 6088|0);
   $92 = HEAP32[$91>>2]|0;
   $93 = ($92|0)==(0);
   if (!($93)) {
    $94 = ((($0)) + 4528|0);
    $95 = HEAP32[$94>>2]|0;
    $96 = ($95|0)>(77);
    if ($96) {
     $97 = (((($0)) + 4720|0) + ($89<<2)|0);
     HEAP32[$97>>2] = 1;
     $98 = ((($0)) + 144|0);
     _memcpy(($8|0),($98|0),4352)|0;
     $99 = ((($0)) + 4732|0);
     dest=$90; src=$99; stop=dest+36|0; do { HEAP16[dest>>1]=HEAP16[src>>1]|0; dest=dest+2|0; src=src+2|0; } while ((dest|0) < (stop|0));
     $100 = ((($0)) + 4576|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = $101 << 2;
     _memcpy(($7|0),($9|0),($102|0))|0;
     $103 = HEAP32[$88>>2]|0;
     $104 = ($103|0)==(0);
     if ($104) {
      label = 10;
     } else {
      $105 = (($103) + -1)|0;
      $106 = (((($0)) + 4720|0) + ($105<<2)|0);
      $107 = HEAP32[$106>>2]|0;
      $108 = ($107|0)==(0);
      if ($108) {
       label = 10;
      } else {
       $$pre49$i = ((($0)) + 4536|0);
       $$pre$phi$iZ2D = $$pre49$i;$123 = $101;
      }
     }
     if ((label|0) == 10) {
      $109 = ((($0)) + 7164|0);
      $110 = HEAP8[$109>>0]|0;
      $111 = ((($0)) + 4536|0);
      HEAP8[$111>>0] = $110;
      $112 = ((($0)) + 6092|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = HEAP8[$90>>0]|0;
      $115 = $114&255;
      $116 = (($113) + ($115))|0;
      $sext$i = $116 << 24;
      $117 = $sext$i >> 24;
      $118 = ($117|0)<(63);
      $119 = $118 ? $117 : 63;
      $120 = $119&255;
      HEAP8[$90>>0] = $120;
      $$pre$i = HEAP32[$100>>2]|0;
      $$pre$phi$iZ2D = $111;$123 = $$pre$i;
     }
     $121 = ($3|0)==(2);
     $122 = $121&1;
     _silk_gains_dequant($6,$90,$$pre$phi$iZ2D,$122,$123);
     $124 = HEAP32[$100>>2]|0;
     $125 = ($124|0)>(0);
     if ($125) {
      $$047$i = 0;
      while(1) {
       $126 = (($6) + ($$047$i<<2)|0);
       $127 = HEAP32[$126>>2]|0;
       $128 = (Math_fround(($127|0)));
       $129 = Math_fround($128 * Math_fround(1.52587891E-5));
       $130 = (($9) + ($$047$i<<2)|0);
       HEAPF32[$130>>2] = $129;
       $131 = (($$047$i) + 1)|0;
       $exitcond451 = ($131|0)==($124|0);
       if ($exitcond451) {
        break;
       } else {
        $$047$i = $131;
       }
      }
     }
     $132 = HEAP32[$88>>2]|0;
     $133 = (((($0)) + 6204|0) + (($132*320)|0)|0);
     _silk_NSQ_wrapper_FLP($0,$9,$90,$8,$133,$29);
     $134 = HEAP32[$100>>2]|0;
     $135 = $134 << 2;
     _memcpy(($9|0),($7|0),($135|0))|0;
    }
   }
   $136 = ((($0)) + 4576|0);
   $137 = HEAP32[$136>>2]|0;
   $138 = (_silk_gains_ID($24,$137)|0);
   dest=$11; src=$2; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $139 = ((($0)) + 144|0);
   _memcpy(($12|0),($139|0),4352)|0;
   $140 = HEAP8[$25>>0]|0;
   $141 = ((($0)) + 5768|0);
   $142 = HEAP16[$141>>1]|0;
   $143 = ((($0)) + 5764|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = (($4) + -5)|0;
   $146 = ((($0)) + 4768|0);
   $147 = ((($9)) + 692|0);
   $148 = ((($0)) + 4762|0);
   $149 = ((($0)) + 4761|0);
   $$idx381 = ((($2)) + 20|0);
   $$idx382 = ((($2)) + 28|0);
   $$sroa$6$0$$sroa_idx123 = ((($2)) + 24|0);
   $150 = ((($9)) + 744|0);
   $151 = ((($0)) + 7164|0);
   $152 = ($3|0)==(2);
   $153 = $152&1;
   $154 = ((($0)) + 4584|0);
   $scevgep = ((($0)) + 4732|0);
   $$0347 = 0;$$0350 = 0;$$0351 = 256;$$0353 = -1;$$0355 = -1;$$0357 = $138;$$0358 = 0;$$0360 = 0;$$0362 = 0;$$0364 = 0;$$0368 = 0;$$0370 = 0;$$sroa$6$0 = 0;
   while(1) {
    $155 = ($$0357|0)==($$0355|0);
    if ($155) {
     $$1367 = $$0364;$$sroa$6$2 = $$sroa$6$0;
    } else {
     $156 = ($$0357|0)==($$0353|0);
     if ($156) {
      $$1367 = $$0362;$$sroa$6$2 = $$sroa$6$0;
     } else {
      $157 = ($$0350|0)==(0);
      if (!($157)) {
       dest=$2; src=$11; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
       _memcpy(($139|0),($12|0),4352)|0;
       HEAP8[$25>>0] = $140;
       HEAP16[$141>>1] = $142;
       HEAP32[$143>>2] = $144;
      }
      _silk_NSQ_wrapper_FLP($0,$9,$24,$139,$146,$29);
      $158 = ($$0350|0)!=(6);
      $159 = ($$0370|0)!=(0);
      $or$cond = $159 | $158;
      if ($or$cond) {
       $$sroa$6$1 = $$sroa$6$0;
      } else {
       ;HEAP32[$$sroa$0>>2]=HEAP32[$2>>2]|0;HEAP32[$$sroa$0+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$$sroa$0+8>>2]=HEAP32[$2+8>>2]|0;HEAP32[$$sroa$0+12>>2]=HEAP32[$2+12>>2]|0;HEAP32[$$sroa$0+16>>2]=HEAP32[$2+16>>2]|0;HEAP32[$$sroa$0+20>>2]=HEAP32[$2+20>>2]|0;
       $$sroa$6$0$copyload = HEAP32[$$sroa$6$0$$sroa_idx123>>2]|0;
       ;HEAP32[$$sroa$7>>2]=HEAP32[$$idx382>>2]|0;HEAP32[$$sroa$7+4>>2]=HEAP32[$$idx382+4>>2]|0;HEAP32[$$sroa$7+8>>2]=HEAP32[$$idx382+8>>2]|0;HEAP32[$$sroa$7+12>>2]=HEAP32[$$idx382+12>>2]|0;HEAP32[$$sroa$7+16>>2]=HEAP32[$$idx382+16>>2]|0;
       $$sroa$6$1 = $$sroa$6$0$copyload;
      }
      $160 = HEAP32[$88>>2]|0;
      _silk_encode_indices($0,$2,$160,0,$3);
      $161 = HEAP8[$149>>0]|0;
      $162 = $161 << 24 >> 24;
      $163 = HEAP8[$148>>0]|0;
      $164 = $163 << 24 >> 24;
      $165 = HEAP32[$33>>2]|0;
      _silk_encode_pulses($2,$162,$164,$146,$165);
      $$idx381$val = HEAP32[$$idx381>>2]|0;
      $$idx382$val = HEAP32[$$idx382>>2]|0;
      $166 = (Math_clz32(($$idx382$val|0))|0);
      $167 = (($$idx381$val) + -32)|0;
      $168 = (($167) + ($166))|0;
      $or$cond$not$demorgan = $159 | $158;
      $or$cond$not = $or$cond$not$demorgan ^ 1;
      $169 = ($168|0)>($4|0);
      $or$cond372 = $169 & $or$cond$not;
      if ($or$cond372) {
       ;HEAP32[$2>>2]=HEAP32[$$sroa$0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$$sroa$0+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$$sroa$0+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[$$sroa$0+12>>2]|0;HEAP32[$2+16>>2]=HEAP32[$$sroa$0+16>>2]|0;HEAP32[$2+20>>2]=HEAP32[$$sroa$0+20>>2]|0;
       HEAP32[$$sroa$6$0$$sroa_idx123>>2] = $$sroa$6$1;
       ;HEAP32[$$idx382>>2]=HEAP32[$$sroa$7>>2]|0;HEAP32[$$idx382+4>>2]=HEAP32[$$sroa$7+4>>2]|0;HEAP32[$$idx382+8>>2]=HEAP32[$$sroa$7+8>>2]|0;HEAP32[$$idx382+12>>2]=HEAP32[$$sroa$7+12>>2]|0;HEAP32[$$idx382+16>>2]=HEAP32[$$sroa$7+16>>2]|0;
       $170 = HEAP8[$150>>0]|0;
       HEAP8[$151>>0] = $170;
       $171 = HEAP32[$136>>2]|0;
       $172 = ($171|0)>(0);
       if ($172) {
        _memset(($scevgep|0),4,($171|0))|0;
       }
       if (!($152)) {
        HEAP8[$24>>0] = $170;
       }
       HEAP16[$141>>1] = $142;
       HEAP32[$143>>2] = $144;
       $173 = HEAP32[$33>>2]|0;
       $174 = ($173|0)>(0);
       if ($174) {
        _memset(($146|0),0,($173|0))|0;
       }
       $175 = HEAP32[$88>>2]|0;
       _silk_encode_indices($0,$2,$175,0,$3);
       $176 = HEAP8[$149>>0]|0;
       $177 = $176 << 24 >> 24;
       $178 = HEAP8[$148>>0]|0;
       $179 = $178 << 24 >> 24;
       $180 = HEAP32[$33>>2]|0;
       _silk_encode_pulses($2,$177,$179,$146,$180);
       $$idx379$val = HEAP32[$$idx381>>2]|0;
       $$idx380$val = HEAP32[$$idx382>>2]|0;
       $181 = (Math_clz32(($$idx380$val|0))|0);
       $182 = (($$idx379$val) + -32)|0;
       $183 = (($182) + ($181))|0;
       $$0366 = $183;
      } else {
       $$0366 = $168;
      }
      $184 = $$0350 | $5;
      $185 = ($184|0)!=(0);
      $186 = ($$0366|0)>($4|0);
      $or$cond373 = $185 | $186;
      if ($or$cond373) {
       $$1367 = $$0366;$$sroa$6$2 = $$sroa$6$1;
      } else {
       break L6;
      }
     }
    }
    $187 = ($$0350|0)==(6);
    if ($187) {
     break;
    }
    $191 = ($$1367|0)>($4|0);
    L48: do {
     if ($191) {
      $192 = ($$0370|0)==(0);
      $193 = ($$0350>>>0)>(1);
      $or$cond7 = $192 & $193;
      if ($or$cond7) {
       $194 = Math_fround(HEAPF32[$147>>2]);
       $195 = Math_fround($194 * Math_fround(1.5));
       $196 = $195 > Math_fround(1.5);
       $197 = $196 ? $195 : Math_fround(1.5);
       HEAPF32[$147>>2] = $197;
       HEAP8[$148>>0] = 0;
       $$1354457 = -1;$$1359456 = $$0358;$$1363455 = $$0362;$$1369454 = 0;
      } else {
       $202 = $$0351 << 16 >> 16;
       $203 = ($$0370|0)==(0);
       if ($203) {
        $$1354457 = $$0357;$$1359456 = $202;$$1363455 = $$1367;$$1369454 = 1;
       } else {
        $$1354409 = $$0357;$$1356408 = $$0355;$$1359407 = $202;$$1361406 = $$0360;$$1363405 = $$1367;$$1365404 = $$0364;$$1369403 = 1;$$1371401 = $$0370;$$1410 = $$0347;$$sroa$6$3402 = $$sroa$6$2;
        break;
       }
      }
      $204 = HEAP32[$136>>2]|0;
      $205 = ($204|0)>(0);
      if ($205) {
       $206 = HEAP32[$154>>2]|0;
       $207 = ($$0350|0)==(0);
       if ($207) {
        $$3427$us = 0;$indvars$iv448 = $206;
        while(1) {
         $208 = Math_imul($206, $$3427$us)|0;
         $209 = (($$3427$us) + 1)|0;
         $210 = Math_imul($206, $209)|0;
         $211 = ($208|0)<($210|0);
         if ($211) {
          $$0345422$us = 0;$$0346421$us = $208;
          while(1) {
           $215 = (((($0)) + 4768|0) + ($$0346421$us)|0);
           $216 = HEAP8[$215>>0]|0;
           $217 = $216 << 24 >> 24;
           $ispos$us = ($217|0)>(-1);
           $neg$us = (0 - ($217))|0;
           $218 = $ispos$us ? $217 : $neg$us;
           $219 = (($218) + ($$0345422$us))|0;
           $220 = (($$0346421$us) + 1)|0;
           $exitcond450 = ($220|0)==($indvars$iv448|0);
           if ($exitcond450) {
            $$0345$lcssa$us = $219;
            break;
           } else {
            $$0345422$us = $219;$$0346421$us = $220;
           }
          }
         } else {
          $$0345$lcssa$us = 0;
         }
         $212 = (($18) + ($$3427$us<<2)|0);
         HEAP32[$212>>2] = $$0345$lcssa$us;
         $213 = (($17) + ($$3427$us<<1)|0);
         HEAP16[$213>>1] = $$0351;
         $214 = ($209|0)<($204|0);
         $indvars$iv$next449 = (($indvars$iv448) + ($206))|0;
         if ($214) {
          $$3427$us = $209;$indvars$iv448 = $indvars$iv$next449;
         } else {
          $$1354409 = $$1354457;$$1356408 = $$0355;$$1359407 = $$1359456;$$1361406 = $$0360;$$1363405 = $$1363455;$$1365404 = $$0364;$$1369403 = $$1369454;$$1371401 = 0;$$1410 = $$0347;$$sroa$6$3402 = $$sroa$6$2;
          break L48;
         }
        }
       }
       $$3427 = 0;$indvars$iv = $206;
       while(1) {
        $221 = Math_imul($206, $$3427)|0;
        $222 = (($$3427) + 1)|0;
        $223 = Math_imul($206, $222)|0;
        $224 = ($221|0)<($223|0);
        if ($224) {
         $$0345422 = 0;$$0346421 = $221;
         while(1) {
          $225 = (((($0)) + 4768|0) + ($$0346421)|0);
          $226 = HEAP8[$225>>0]|0;
          $227 = $226 << 24 >> 24;
          $ispos = ($227|0)>(-1);
          $neg = (0 - ($227))|0;
          $228 = $ispos ? $227 : $neg;
          $229 = (($228) + ($$0345422))|0;
          $230 = (($$0346421) + 1)|0;
          $exitcond = ($230|0)==($indvars$iv|0);
          if ($exitcond) {
           $$0345$lcssa = $229;
           break;
          } else {
           $$0345422 = $229;$$0346421 = $230;
          }
         }
        } else {
         $$0345$lcssa = 0;
        }
        $231 = (($18) + ($$3427<<2)|0);
        $232 = HEAP32[$231>>2]|0;
        $233 = ($$0345$lcssa|0)<($232|0);
        $234 = (($16) + ($$3427<<2)|0);
        if ($233) {
         $235 = HEAP32[$234>>2]|0;
         $236 = ($235|0)==(0);
         if ($236) {
          HEAP32[$231>>2] = $$0345$lcssa;
          $237 = (($17) + ($$3427<<1)|0);
          HEAP16[$237>>1] = $$0351;
         } else {
          label = 55;
         }
        } else {
         label = 55;
        }
        if ((label|0) == 55) {
         label = 0;
         HEAP32[$234>>2] = 1;
        }
        $238 = ($222|0)<($204|0);
        $indvars$iv$next = (($indvars$iv) + ($206))|0;
        if ($238) {
         $$3427 = $222;$indvars$iv = $indvars$iv$next;
        } else {
         $$1354409 = $$1354457;$$1356408 = $$0355;$$1359407 = $$1359456;$$1361406 = $$0360;$$1363405 = $$1363455;$$1365404 = $$0364;$$1369403 = $$1369454;$$1371401 = 0;$$1410 = $$0347;$$sroa$6$3402 = $$sroa$6$2;
         break;
        }
       }
      } else {
       $$1354409 = $$1354457;$$1356408 = $$0355;$$1359407 = $$1359456;$$1361406 = $$0360;$$1363405 = $$1363455;$$1365404 = $$0364;$$1369403 = $$1369454;$$1371401 = 0;$$1410 = $$0347;$$sroa$6$3402 = $$sroa$6$2;
      }
     } else {
      $198 = ($$1367|0)<($145|0);
      if (!($198)) {
       break L6;
      }
      $199 = $$0351 << 16 >> 16;
      if ($155) {
       $$1354409 = $$0353;$$1356408 = $$0357;$$1359407 = $$0358;$$1361406 = $199;$$1363405 = $$0362;$$1365404 = $$1367;$$1369403 = $$0368;$$1371401 = 1;$$1410 = $$0347;$$sroa$6$3402 = $$sroa$6$2;
      } else {
       ;HEAP32[$$sroa$0>>2]=HEAP32[$2>>2]|0;HEAP32[$$sroa$0+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$$sroa$0+8>>2]=HEAP32[$2+8>>2]|0;HEAP32[$$sroa$0+12>>2]=HEAP32[$2+12>>2]|0;HEAP32[$$sroa$0+16>>2]=HEAP32[$2+16>>2]|0;HEAP32[$$sroa$0+20>>2]=HEAP32[$2+20>>2]|0;
       $$sroa$6$0$copyload129 = HEAP32[$$sroa$6$0$$sroa_idx123>>2]|0;
       ;HEAP32[$$sroa$7>>2]=HEAP32[$$idx382>>2]|0;HEAP32[$$sroa$7+4>>2]=HEAP32[$$idx382+4>>2]|0;HEAP32[$$sroa$7+8>>2]=HEAP32[$$idx382+8>>2]|0;HEAP32[$$sroa$7+12>>2]=HEAP32[$$idx382+12>>2]|0;HEAP32[$$sroa$7+16>>2]=HEAP32[$$idx382+16>>2]|0;
       $200 = HEAP32[$2>>2]|0;
       _memcpy(($15|0),($200|0),($$sroa$6$0$copyload129|0))|0;
       _memcpy(($13|0),($139|0),4352)|0;
       $201 = HEAP8[$151>>0]|0;
       $$1354409 = $$0353;$$1356408 = $$0357;$$1359407 = $$0358;$$1361406 = $199;$$1363405 = $$0362;$$1365404 = $$1367;$$1369403 = $$0368;$$1371401 = 1;$$1410 = $201;$$sroa$6$3402 = $$sroa$6$0$copyload129;
      }
     }
    } while(0);
    $239 = $$1371401 & $$1369403;
    $240 = ($239|0)==(0);
    do {
     if ($240) {
      if (!($191)) {
       $245 = (($$1367) - ($4))|0;
       $246 = $245 << 7;
       $247 = HEAP32[$33>>2]|0;
       $248 = (($246|0) / ($247|0))&-1;
       $249 = (($248) + 2048)|0;
       $250 = (_silk_log2lin($249)|0);
       $251 = $250 >> 16;
       $252 = $$0351 << 16 >> 16;
       $253 = Math_imul($251, $252)|0;
       $254 = $250 & 65535;
       $255 = Math_imul($254, $252)|0;
       $256 = $255 >>> 16;
       $257 = (($256) + ($253))|0;
       $258 = $257&65535;
       $$1352 = $258;
       break;
      }
      $241 = ($$0351<<16>>16)<(16384);
      if ($241) {
       $242 = $$0351 << 16 >> 16;
       $243 = $242 << 1;
       $244 = $243&65535;
       $$1352 = $244;
      } else {
       $$1352 = 32767;
      }
     } else {
      $259 = (($$1359407) - ($$1361406))|0;
      $260 = (($4) - ($$1365404))|0;
      $261 = Math_imul($260, $259)|0;
      $262 = (($$1363405) - ($$1365404))|0;
      $263 = (($261|0) / ($262|0))&-1;
      $264 = (($263) + ($$1361406))|0;
      $sext = $264 << 16;
      $265 = $sext >> 16;
      $266 = $259 >> 2;
      $267 = (($266) + ($$1361406))|0;
      $268 = ($265|0)>($267|0);
      if ($268) {
       $269 = $267&65535;
       $$1352 = $269;
       break;
      } else {
       $270 = (($$1359407) - ($266))|0;
       $271 = ($265|0)<($270|0);
       $spec$select$v = $271 ? $270 : $264;
       $spec$select = $spec$select$v&65535;
       $$1352 = $spec$select;
       break;
      }
     }
    } while(0);
    $272 = HEAP32[$136>>2]|0;
    $273 = ($272|0)>(0);
    if ($273) {
     $$4430 = 0;
     while(1) {
      $274 = (($16) + ($$4430<<2)|0);
      $275 = HEAP32[$274>>2]|0;
      $276 = ($275|0)==(0);
      if ($276) {
       $$0 = $$1352;
      } else {
       $277 = (($17) + ($$4430<<1)|0);
       $278 = HEAP16[$277>>1]|0;
       $$0 = $278;
      }
      $279 = (((($9)) + 728|0) + ($$4430<<2)|0);
      $280 = HEAP32[$279>>2]|0;
      $281 = $280 >> 16;
      $282 = $$0 << 16 >> 16;
      $283 = Math_imul($281, $282)|0;
      $284 = $280 & 65535;
      $285 = Math_imul($284, $282)|0;
      $286 = $285 >> 16;
      $287 = (($286) + ($283))|0;
      $288 = ($287|0)>(-8388608);
      $spec$select376 = $288 ? $287 : -8388608;
      $289 = ($spec$select376|0)<(8388607);
      $290 = $289 ? $spec$select376 : 8388607;
      $291 = $290 << 8;
      $292 = (($14) + ($$4430<<2)|0);
      HEAP32[$292>>2] = $291;
      $293 = (($$4430) + 1)|0;
      $294 = ($293|0)<($272|0);
      if ($294) {
       $$4430 = $293;
      } else {
       break;
      }
     }
    }
    $295 = HEAP8[$150>>0]|0;
    HEAP8[$151>>0] = $295;
    _silk_gains_quant($24,$14,$151,$153,$272);
    $296 = HEAP32[$136>>2]|0;
    $297 = (_silk_gains_ID($24,$296)|0);
    $298 = HEAP32[$136>>2]|0;
    $299 = ($298|0)>(0);
    if ($299) {
     $$5435 = 0;
     while(1) {
      $300 = (($14) + ($$5435<<2)|0);
      $301 = HEAP32[$300>>2]|0;
      $302 = (Math_fround(($301|0)));
      $303 = Math_fround($302 * Math_fround(1.52587891E-5));
      $304 = (($9) + ($$5435<<2)|0);
      HEAPF32[$304>>2] = $303;
      $305 = (($$5435) + 1)|0;
      $306 = ($305|0)<($298|0);
      if ($306) {
       $$5435 = $305;
      } else {
       break;
      }
     }
    }
    $307 = (($$0350) + 1)|0;
    $$0347 = $$1410;$$0350 = $307;$$0351 = $$1352;$$0353 = $$1354409;$$0355 = $$1356408;$$0357 = $297;$$0358 = $$1359407;$$0360 = $$1361406;$$0362 = $$1363405;$$0364 = $$1365404;$$0368 = $$1369403;$$0370 = $$1371401;$$sroa$6$0 = $$sroa$6$3402;
   }
   $188 = ($$0370|0)!=(0);
   $189 = ($$1367|0)>($4|0);
   $or$cond374 = $155 | $189;
   $or$cond377 = $188 & $or$cond374;
   if ($or$cond377) {
    ;HEAP32[$2>>2]=HEAP32[$$sroa$0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$$sroa$0+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$$sroa$0+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[$$sroa$0+12>>2]|0;HEAP32[$2+16>>2]=HEAP32[$$sroa$0+16>>2]|0;HEAP32[$2+20>>2]=HEAP32[$$sroa$0+20>>2]|0;
    HEAP32[$$sroa$6$0$$sroa_idx123>>2] = $$sroa$6$2;
    ;HEAP32[$$idx382>>2]=HEAP32[$$sroa$7>>2]|0;HEAP32[$$idx382+4>>2]=HEAP32[$$sroa$7+4>>2]|0;HEAP32[$$idx382+8>>2]=HEAP32[$$sroa$7+8>>2]|0;HEAP32[$$idx382+12>>2]=HEAP32[$$sroa$7+12>>2]|0;HEAP32[$$idx382+16>>2]=HEAP32[$$sroa$7+16>>2]|0;
    $190 = HEAP32[$2>>2]|0;
    _memcpy(($190|0),($15|0),($$sroa$6$2|0))|0;
    _memcpy(($139|0),($13|0),4352)|0;
    HEAP8[$151>>0] = $$0347;
   }
  }
 } while(0);
 $308 = HEAP32[$33>>2]|0;
 $309 = (((($0)) + 7176|0) + ($308<<2)|0);
 $310 = HEAP32[$27>>2]|0;
 $311 = HEAP32[$35>>2]|0;
 $312 = ($311*5)|0;
 $313 = (($312) + ($310))|0;
 $314 = $313 << 2;
 _memmove(($26|0),($309|0),($314|0))|0;
 $315 = HEAP32[$83>>2]|0;
 $316 = ($315|0)==(0);
 if (!($316)) {
  $storemerge = 0;
  HEAP32[$1>>2] = $storemerge;
  STACKTOP = sp;return 0;
 }
 $317 = ((($0)) + 4576|0);
 $318 = HEAP32[$317>>2]|0;
 $319 = (($318) + -1)|0;
 $320 = (((($9)) + 228|0) + ($319<<2)|0);
 $321 = HEAP32[$320>>2]|0;
 $322 = ((($0)) + 4540|0);
 HEAP32[$322>>2] = $321;
 $323 = ((($0)) + 4761|0);
 $324 = HEAP8[$323>>0]|0;
 $325 = ((($0)) + 4537|0);
 HEAP8[$325>>0] = $324;
 $326 = ((($0)) + 4660|0);
 HEAP32[$326>>2] = 0;
 $$idx = ((($2)) + 20|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx378 = ((($2)) + 28|0);
 $$idx378$val = HEAP32[$$idx378>>2]|0;
 $327 = (Math_clz32(($$idx378$val|0))|0);
 $328 = (($$idx$val) + -25)|0;
 $329 = (($328) + ($327))|0;
 $330 = $329 >> 3;
 $storemerge = $330;
 HEAP32[$1>>2] = $storemerge;
 STACKTOP = sp;return 0;
}
function _silk_find_pitch_lags_FLP($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = Math_fround(0), $38 = Math_fround(0), $39 = Math_fround(0), $40 = Math_fround(0), $41 = 0, $42 = Math_fround(0), $43 = Math_fround(0), $44 = 0, $45 = Math_fround(0), $46 = Math_fround(0), $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = Math_fround(0), $59 = Math_fround(0), $6 = 0, $60 = Math_fround(0), $61 = 0, $62 = 0, $63 = Math_fround(0), $64 = Math_fround(0), $65 = Math_fround(0);
 var $66 = Math_fround(0), $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = Math_fround(0), $72 = Math_fround(0), $73 = Math_fround(0), $74 = 0, $75 = 0, $76 = Math_fround(0), $77 = Math_fround(0), $78 = Math_fround(0), $79 = Math_fround(0), $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = Math_fround(0), $89 = Math_fround(0), $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1744|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1744|0);
 $5 = sp + 1664|0;
 $6 = sp + 1600|0;
 $7 = sp + 1536|0;
 $8 = sp;
 $9 = ((($0)) + 4592|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 4580|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + ($10))|0;
 $14 = ((($0)) + 4588|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($13) + ($15))|0;
 $17 = (0 - ($15))|0;
 $18 = (($3) + ($17<<2)|0);
 $19 = (($3) + ($13<<2)|0);
 $20 = ((($0)) + 4544|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = (0 - ($21))|0;
 $23 = (($19) + ($22<<2)|0);
 _silk_apply_sine_window_FLP($8,$23,1,$10);
 $24 = HEAP32[$9>>2]|0;
 $25 = (($8) + ($24<<2)|0);
 $26 = (($23) + ($24<<2)|0);
 $27 = HEAP32[$20>>2]|0;
 $28 = $24 << 1;
 $29 = (($27) - ($28))|0;
 $30 = $29 << 2;
 _memcpy(($25|0),($26|0),($30|0))|0;
 $31 = (($25) + ($29<<2)|0);
 $32 = (($26) + ($29<<2)|0);
 _silk_apply_sine_window_FLP($31,$32,2,$24);
 $33 = HEAP32[$20>>2]|0;
 $34 = ((($0)) + 4644|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = (($35) + 1)|0;
 _silk_autocorrelation_FLP($5,$8,$33,$36);
 $37 = Math_fround(HEAPF32[$5>>2]);
 $38 = Math_fround($37 * Math_fround(0.00100000005));
 $39 = Math_fround($38 + Math_fround(1.0));
 $40 = Math_fround($37 + $39);
 HEAPF32[$5>>2] = $40;
 $41 = HEAP32[$34>>2]|0;
 $42 = (Math_fround(_silk_schur_FLP($7,$5,$41)));
 $43 = Math_fround(HEAPF32[$5>>2]);
 $44 = $42 > Math_fround(1.0);
 $45 = $44 ? $42 : Math_fround(1.0);
 $46 = Math_fround($43 / $45);
 $47 = ((($1)) + 704|0);
 HEAPF32[$47>>2] = $46;
 $48 = HEAP32[$34>>2]|0;
 _silk_k2a_FLP($6,$7,$48);
 $49 = HEAP32[$34>>2]|0;
 _silk_bwexpander_FLP($6,$49,Math_fround(0.990000009));
 $50 = HEAP32[$34>>2]|0;
 _silk_LPC_analysis_filter_FLP($2,$6,$18,$16,$50);
 $51 = ((($0)) + 4761|0);
 $52 = HEAP8[$51>>0]|0;
 $53 = ($52<<24>>24)==(0);
 if (!($53)) {
  $54 = ((($0)) + 4660|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ($55|0)==(0);
  if ($56) {
   $57 = HEAP32[$34>>2]|0;
   $58 = (Math_fround(($57|0)));
   $59 = Math_fround($58 * Math_fround(0.00400000019));
   $60 = Math_fround(Math_fround(0.600000024) - $59);
   $61 = ((($0)) + 4528|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (Math_fround(($62|0)));
   $64 = Math_fround($63 * Math_fround(0.100000001));
   $65 = Math_fround($64 * Math_fround(0.00390625));
   $66 = Math_fround($60 - $65);
   $67 = ((($0)) + 4537|0);
   $68 = HEAP8[$67>>0]|0;
   $69 = $68 << 24 >> 24;
   $70 = $69 >> 1;
   $71 = (Math_fround(($70|0)));
   $72 = Math_fround($71 * Math_fround(0.150000006));
   $73 = Math_fround($66 - $72);
   $74 = ((($0)) + 4708|0);
   $75 = HEAP32[$74>>2]|0;
   $76 = (Math_fround(($75|0)));
   $77 = Math_fround($76 * Math_fround(0.100000001));
   $78 = Math_fround($77 * Math_fround(3.05175781E-5));
   $79 = Math_fround($73 - $78);
   $80 = ((($1)) + 228|0);
   $81 = ((($0)) + 4758|0);
   $82 = ((($0)) + 4760|0);
   $83 = ((($0)) + 10056|0);
   $84 = ((($0)) + 4540|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = ((($0)) + 4648|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (Math_fround(($87|0)));
   $89 = Math_fround($88 * Math_fround(1.52587891E-5));
   $90 = ((($0)) + 4572|0);
   $91 = HEAP32[$90>>2]|0;
   $92 = ((($0)) + 4640|0);
   $93 = HEAP32[$92>>2]|0;
   $94 = ((($0)) + 4576|0);
   $95 = HEAP32[$94>>2]|0;
   $96 = (_silk_pitch_analysis_core_FLP($2,$80,$81,$82,$83,$85,$89,$79,$91,$93,$95,$4)|0);
   $97 = ($96|0)==(0);
   if ($97) {
    HEAP8[$51>>0] = 2;
    STACKTOP = sp;return;
   } else {
    HEAP8[$51>>0] = 1;
    STACKTOP = sp;return;
   }
  }
 }
 $98 = ((($1)) + 228|0);
 ;HEAP32[$98>>2]=0|0;HEAP32[$98+4>>2]=0|0;HEAP32[$98+8>>2]=0|0;HEAP32[$98+12>>2]=0|0;
 $99 = ((($0)) + 4758|0);
 HEAP16[$99>>1] = 0;
 $100 = ((($0)) + 4760|0);
 HEAP8[$100>>0] = 0;
 $101 = ((($0)) + 10056|0);
 HEAPF32[$101>>2] = Math_fround(0.0);
 STACKTOP = sp;return;
}
function _silk_find_pred_coefs_FLP($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = Math_fround(0), $$07078 = 0, $$07177 = 0, $$07279 = 0, $$176 = 0, $$lcssa = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = Math_fround(0), $15 = Math_fround(0), $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = Math_fround(0), $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = Math_fround(0), $67 = Math_fround(0), $68 = 0.0, $69 = Math_fround(0), $7 = 0, $70 = Math_fround(0), $71 = 0, $72 = Math_fround(0), $73 = Math_fround(0), $74 = Math_fround(0), $75 = Math_fround(0), $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $exp2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2064|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2064|0);
 $5 = sp + 1664|0;
 $6 = sp + 1584|0;
 $7 = sp + 1568|0;
 $8 = sp + 1536|0;
 $9 = sp;
 $10 = ((($0)) + 4576|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)>(0);
 if ($12) {
  $$07279 = 0;
  while(1) {
   $13 = (($1) + ($$07279<<2)|0);
   $14 = Math_fround(HEAPF32[$13>>2]);
   $15 = Math_fround(Math_fround(1.0) / $14);
   $16 = (($7) + ($$07279<<2)|0);
   HEAPF32[$16>>2] = $15;
   $17 = (($$07279) + 1)|0;
   $18 = ($17|0)<($11|0);
   if ($18) {
    $$07279 = $17;
   } else {
    break;
   }
  }
 }
 $19 = ((($0)) + 4761|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)==(2);
 if ($21) {
  $22 = ((($1)) + 228|0);
  $23 = ((($0)) + 4584|0);
  $24 = HEAP32[$23>>2]|0;
  _silk_find_LTP_FLP($5,$6,$2,$22,$24,$11);
  $25 = ((($1)) + 144|0);
  $26 = ((($0)) + 4736|0);
  $27 = ((($0)) + 4764|0);
  $28 = ((($0)) + 4652|0);
  $29 = ((($1)) + 708|0);
  $30 = HEAP32[$23>>2]|0;
  $31 = HEAP32[$10>>2]|0;
  $32 = ((($0)) + 5088|0);
  $33 = HEAP32[$32>>2]|0;
  _silk_quant_LTP_gains_FLP($25,$26,$27,$28,$29,$5,$6,$30,$31,$33);
  _silk_LTP_scale_ctrl_FLP($0,$1,$4);
  $34 = ((($0)) + 4636|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = (0 - ($35))|0;
  $37 = (($3) + ($36<<2)|0);
  $38 = HEAP32[$23>>2]|0;
  $39 = HEAP32[$10>>2]|0;
  _silk_LTP_analysis_filter_FLP($9,$37,$25,$22,$7,$38,$39,$35);
 } else {
  $40 = ((($0)) + 4636|0);
  if ($12) {
   $41 = HEAP32[$40>>2]|0;
   $42 = (0 - ($41))|0;
   $43 = (($3) + ($42<<2)|0);
   $44 = ((($0)) + 4584|0);
   $$pre = HEAP32[$44>>2]|0;
   $$07078 = $9;$$07177 = $43;$$176 = 0;$48 = $41;$49 = $$pre;
   while(1) {
    $45 = (($7) + ($$176<<2)|0);
    $46 = Math_fround(HEAPF32[$45>>2]);
    $47 = (($48) + ($49))|0;
    _silk_scale_copy_vector_FLP($$07078,$$07177,$46,$47);
    $50 = HEAP32[$44>>2]|0;
    $51 = HEAP32[$40>>2]|0;
    $52 = (($51) + ($50))|0;
    $53 = (($$07078) + ($52<<2)|0);
    $54 = (($$07177) + ($50<<2)|0);
    $55 = (($$176) + 1)|0;
    $56 = HEAP32[$10>>2]|0;
    $57 = ($55|0)<($56|0);
    if ($57) {
     $$07078 = $53;$$07177 = $54;$$176 = $55;$48 = $51;$49 = $50;
    } else {
     $$lcssa = $56;
     break;
    }
   }
  } else {
   $$lcssa = $11;
  }
  $58 = ((($1)) + 144|0);
  $59 = ($$lcssa*20)|0;
  _memset(($58|0),0,($59|0))|0;
  $60 = ((($1)) + 708|0);
  HEAPF32[$60>>2] = Math_fround(0.0);
  $61 = ((($0)) + 4652|0);
  HEAP32[$61>>2] = 0;
 }
 $62 = ((($0)) + 4660|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = ($63|0)==(0);
 if ($64) {
  $65 = ((($1)) + 708|0);
  $66 = Math_fround(HEAPF32[$65>>2]);
  $67 = Math_fround($66 / Math_fround(3.0));
  $68 = +$67;
  $exp2 = (+_llvm_exp2_f64((+$68)));
  $69 = Math_fround($exp2);
  $70 = Math_fround($69 / Math_fround(1.0E+4));
  $71 = ((($1)) + 700|0);
  $72 = Math_fround(HEAPF32[$71>>2]);
  $73 = Math_fround($72 * Math_fround(0.75));
  $74 = Math_fround($73 + Math_fround(0.25));
  $75 = Math_fround($70 / $74);
  $$0 = $75;
 } else {
  $$0 = Math_fround(0.00999999977);
 }
 _silk_find_LPC_FLP($0,$8,$9,$$0);
 $76 = ((($1)) + 16|0);
 $77 = ((($0)) + 4496|0);
 _silk_process_NLSFs_FLP($0,$76,$8,$77);
 $78 = ((($1)) + 712|0);
 $79 = ((($0)) + 4584|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = HEAP32[$10>>2]|0;
 $82 = ((($0)) + 4636|0);
 $83 = HEAP32[$82>>2]|0;
 _silk_residual_energy_FLP($78,$9,$76,$1,$80,$81,$83);
 ;HEAP32[$77>>2]=HEAP32[$8>>2]|0;HEAP32[$77+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$77+8>>2]=HEAP32[$8+8>>2]|0;HEAP32[$77+12>>2]=HEAP32[$8+12>>2]|0;HEAP32[$77+16>>2]=HEAP32[$8+16>>2]|0;HEAP32[$77+20>>2]=HEAP32[$8+20>>2]|0;HEAP32[$77+24>>2]=HEAP32[$8+24>>2]|0;HEAP32[$77+28>>2]=HEAP32[$8+28>>2]|0;
 STACKTOP = sp;return;
}
function _silk_LPC_analysis_filter_FLP($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$025$i = 0, $$029$i = 0, $$033$i = 0, $$037$i = 0, $$045$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = Math_fround(0), $112 = Math_fround(0);
 var $113 = Math_fround(0), $114 = 0, $115 = Math_fround(0), $116 = Math_fround(0), $117 = Math_fround(0), $118 = Math_fround(0), $119 = 0, $12 = 0, $120 = Math_fround(0), $121 = Math_fround(0), $122 = Math_fround(0), $123 = Math_fround(0), $124 = 0, $125 = Math_fround(0), $126 = Math_fround(0), $127 = Math_fround(0), $128 = Math_fround(0), $129 = 0, $13 = Math_fround(0), $130 = Math_fround(0);
 var $131 = Math_fround(0), $132 = Math_fround(0), $133 = Math_fround(0), $134 = 0, $135 = Math_fround(0), $136 = Math_fround(0), $137 = Math_fround(0), $138 = Math_fround(0), $139 = 0, $14 = Math_fround(0), $140 = Math_fround(0), $141 = Math_fround(0), $142 = Math_fround(0), $143 = Math_fround(0), $144 = 0, $145 = Math_fround(0), $146 = Math_fround(0), $147 = Math_fround(0), $148 = Math_fround(0), $149 = 0;
 var $15 = Math_fround(0), $150 = Math_fround(0), $151 = Math_fround(0), $152 = Math_fround(0), $153 = Math_fround(0), $154 = 0, $155 = Math_fround(0), $156 = Math_fround(0), $157 = Math_fround(0), $158 = Math_fround(0), $159 = 0, $16 = 0, $160 = Math_fround(0), $161 = Math_fround(0), $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = Math_fround(0), $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = Math_fround(0), $179 = Math_fround(0), $18 = Math_fround(0), $180 = Math_fround(0), $181 = 0, $182 = Math_fround(0), $183 = Math_fround(0), $184 = Math_fround(0), $185 = Math_fround(0);
 var $186 = 0, $187 = Math_fround(0), $188 = Math_fround(0), $189 = Math_fround(0), $19 = Math_fround(0), $190 = Math_fround(0), $191 = 0, $192 = Math_fround(0), $193 = Math_fround(0), $194 = Math_fround(0), $195 = Math_fround(0), $196 = 0, $197 = Math_fround(0), $198 = Math_fround(0), $199 = Math_fround(0), $20 = Math_fround(0), $200 = Math_fround(0), $201 = 0, $202 = Math_fround(0), $203 = Math_fround(0);
 var $204 = Math_fround(0), $205 = Math_fround(0), $206 = 0, $207 = Math_fround(0), $208 = Math_fround(0), $209 = Math_fround(0), $21 = 0, $210 = Math_fround(0), $211 = 0, $212 = Math_fround(0), $213 = Math_fround(0), $214 = Math_fround(0), $215 = Math_fround(0), $216 = 0, $217 = Math_fround(0), $218 = Math_fround(0), $219 = Math_fround(0), $22 = Math_fround(0), $220 = Math_fround(0), $221 = 0;
 var $222 = Math_fround(0), $223 = Math_fround(0), $224 = Math_fround(0), $225 = Math_fround(0), $226 = 0, $227 = Math_fround(0), $228 = Math_fround(0), $229 = Math_fround(0), $23 = Math_fround(0), $230 = Math_fround(0), $231 = 0, $232 = Math_fround(0), $233 = Math_fround(0), $234 = Math_fround(0), $235 = Math_fround(0), $236 = 0, $237 = Math_fround(0), $238 = Math_fround(0), $239 = 0, $24 = Math_fround(0);
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = Math_fround(0), $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = Math_fround(0), $26 = 0, $260 = Math_fround(0), $261 = Math_fround(0), $262 = 0, $263 = Math_fround(0), $264 = Math_fround(0), $265 = Math_fround(0), $266 = Math_fround(0), $267 = 0, $268 = Math_fround(0), $269 = Math_fround(0), $27 = Math_fround(0), $270 = Math_fround(0), $271 = Math_fround(0), $272 = 0, $273 = Math_fround(0), $274 = Math_fround(0), $275 = Math_fround(0), $276 = Math_fround(0);
 var $277 = 0, $278 = Math_fround(0), $279 = Math_fround(0), $28 = Math_fround(0), $280 = Math_fround(0), $281 = Math_fround(0), $282 = 0, $283 = Math_fround(0), $284 = Math_fround(0), $285 = Math_fround(0), $286 = Math_fround(0), $287 = 0, $288 = Math_fround(0), $289 = Math_fround(0), $29 = Math_fround(0), $290 = Math_fround(0), $291 = Math_fround(0), $292 = 0, $293 = Math_fround(0), $294 = Math_fround(0);
 var $295 = Math_fround(0), $296 = Math_fround(0), $297 = 0, $298 = Math_fround(0), $299 = Math_fround(0), $30 = Math_fround(0), $300 = Math_fround(0), $301 = Math_fround(0), $302 = 0, $303 = Math_fround(0), $304 = Math_fround(0), $305 = Math_fround(0), $306 = Math_fround(0), $307 = 0, $308 = Math_fround(0), $309 = Math_fround(0), $31 = 0, $310 = Math_fround(0), $311 = Math_fround(0), $312 = 0;
 var $313 = Math_fround(0), $314 = Math_fround(0), $315 = Math_fround(0), $316 = Math_fround(0), $317 = 0, $318 = Math_fround(0), $319 = Math_fround(0), $32 = Math_fround(0), $320 = Math_fround(0), $321 = Math_fround(0), $322 = 0, $323 = Math_fround(0), $324 = Math_fround(0), $325 = Math_fround(0), $326 = Math_fround(0), $327 = 0, $328 = Math_fround(0), $329 = Math_fround(0), $33 = Math_fround(0), $330 = Math_fround(0);
 var $331 = Math_fround(0), $332 = 0, $333 = Math_fround(0), $334 = Math_fround(0), $335 = Math_fround(0), $336 = Math_fround(0), $337 = 0, $338 = Math_fround(0), $339 = Math_fround(0), $34 = Math_fround(0), $340 = 0, $341 = 0, $342 = 0, $35 = Math_fround(0), $36 = 0, $37 = Math_fround(0), $38 = Math_fround(0), $39 = Math_fround(0), $40 = Math_fround(0), $41 = 0;
 var $42 = Math_fround(0), $43 = Math_fround(0), $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = Math_fround(0), $57 = Math_fround(0), $58 = Math_fround(0), $59 = 0, $6 = 0;
 var $60 = Math_fround(0), $61 = Math_fround(0), $62 = Math_fround(0), $63 = Math_fround(0), $64 = 0, $65 = Math_fround(0), $66 = Math_fround(0), $67 = Math_fround(0), $68 = Math_fround(0), $69 = 0, $7 = 0, $70 = Math_fround(0), $71 = Math_fround(0), $72 = Math_fround(0), $73 = Math_fround(0), $74 = 0, $75 = Math_fround(0), $76 = Math_fround(0), $77 = Math_fround(0), $78 = Math_fround(0);
 var $79 = 0, $8 = 0, $80 = Math_fround(0), $81 = Math_fround(0), $82 = Math_fround(0), $83 = Math_fround(0), $84 = 0, $85 = Math_fround(0), $86 = Math_fround(0), $87 = Math_fround(0), $88 = Math_fround(0), $89 = 0, $9 = 0, $90 = Math_fround(0), $91 = Math_fround(0), $92 = Math_fround(0), $93 = Math_fround(0), $94 = 0, $95 = Math_fround(0), $96 = Math_fround(0);
 var $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i23 = 0, $exitcond$i25 = 0, $exitcond$i27 = 0, $exitcond$i29 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($4|0) {
 case 6:  {
  $5 = ($3|0)>(6);
  if (!($5)) {
   $342 = $4 << 2;
   _memset(($0|0),0,($342|0))|0;
   return;
  }
  $6 = ((($1)) + 4|0);
  $7 = ((($1)) + 8|0);
  $8 = ((($1)) + 12|0);
  $9 = ((($1)) + 16|0);
  $10 = ((($1)) + 20|0);
  $$025$i = 6;
  while(1) {
   $11 = (($$025$i) + -1)|0;
   $12 = (($2) + ($11<<2)|0);
   $13 = Math_fround(HEAPF32[$12>>2]);
   $14 = Math_fround(HEAPF32[$1>>2]);
   $15 = Math_fround($13 * $14);
   $16 = ((($12)) + -4|0);
   $17 = Math_fround(HEAPF32[$16>>2]);
   $18 = Math_fround(HEAPF32[$6>>2]);
   $19 = Math_fround($17 * $18);
   $20 = Math_fround($15 + $19);
   $21 = ((($12)) + -8|0);
   $22 = Math_fround(HEAPF32[$21>>2]);
   $23 = Math_fround(HEAPF32[$7>>2]);
   $24 = Math_fround($22 * $23);
   $25 = Math_fround($20 + $24);
   $26 = ((($12)) + -12|0);
   $27 = Math_fround(HEAPF32[$26>>2]);
   $28 = Math_fround(HEAPF32[$8>>2]);
   $29 = Math_fround($27 * $28);
   $30 = Math_fround($25 + $29);
   $31 = ((($12)) + -16|0);
   $32 = Math_fround(HEAPF32[$31>>2]);
   $33 = Math_fround(HEAPF32[$9>>2]);
   $34 = Math_fround($32 * $33);
   $35 = Math_fround($30 + $34);
   $36 = ((($12)) + -20|0);
   $37 = Math_fround(HEAPF32[$36>>2]);
   $38 = Math_fround(HEAPF32[$10>>2]);
   $39 = Math_fround($37 * $38);
   $40 = Math_fround($35 + $39);
   $41 = (($2) + ($$025$i<<2)|0);
   $42 = Math_fround(HEAPF32[$41>>2]);
   $43 = Math_fround($42 - $40);
   $44 = (($0) + ($$025$i<<2)|0);
   HEAPF32[$44>>2] = $43;
   $45 = (($$025$i) + 1)|0;
   $exitcond$i = ($45|0)==($3|0);
   if ($exitcond$i) {
    break;
   } else {
    $$025$i = $45;
   }
  }
  $342 = $4 << 2;
  _memset(($0|0),0,($342|0))|0;
  return;
  break;
 }
 case 8:  {
  $46 = ($3|0)>(8);
  if (!($46)) {
   $342 = $4 << 2;
   _memset(($0|0),0,($342|0))|0;
   return;
  }
  $47 = ((($1)) + 4|0);
  $48 = ((($1)) + 8|0);
  $49 = ((($1)) + 12|0);
  $50 = ((($1)) + 16|0);
  $51 = ((($1)) + 20|0);
  $52 = ((($1)) + 24|0);
  $53 = ((($1)) + 28|0);
  $$029$i = 8;
  while(1) {
   $54 = (($$029$i) + -1)|0;
   $55 = (($2) + ($54<<2)|0);
   $56 = Math_fround(HEAPF32[$55>>2]);
   $57 = Math_fround(HEAPF32[$1>>2]);
   $58 = Math_fround($56 * $57);
   $59 = ((($55)) + -4|0);
   $60 = Math_fround(HEAPF32[$59>>2]);
   $61 = Math_fround(HEAPF32[$47>>2]);
   $62 = Math_fround($60 * $61);
   $63 = Math_fround($58 + $62);
   $64 = ((($55)) + -8|0);
   $65 = Math_fround(HEAPF32[$64>>2]);
   $66 = Math_fround(HEAPF32[$48>>2]);
   $67 = Math_fround($65 * $66);
   $68 = Math_fround($63 + $67);
   $69 = ((($55)) + -12|0);
   $70 = Math_fround(HEAPF32[$69>>2]);
   $71 = Math_fround(HEAPF32[$49>>2]);
   $72 = Math_fround($70 * $71);
   $73 = Math_fround($68 + $72);
   $74 = ((($55)) + -16|0);
   $75 = Math_fround(HEAPF32[$74>>2]);
   $76 = Math_fround(HEAPF32[$50>>2]);
   $77 = Math_fround($75 * $76);
   $78 = Math_fround($73 + $77);
   $79 = ((($55)) + -20|0);
   $80 = Math_fround(HEAPF32[$79>>2]);
   $81 = Math_fround(HEAPF32[$51>>2]);
   $82 = Math_fround($80 * $81);
   $83 = Math_fround($78 + $82);
   $84 = ((($55)) + -24|0);
   $85 = Math_fround(HEAPF32[$84>>2]);
   $86 = Math_fround(HEAPF32[$52>>2]);
   $87 = Math_fround($85 * $86);
   $88 = Math_fround($83 + $87);
   $89 = ((($55)) + -28|0);
   $90 = Math_fround(HEAPF32[$89>>2]);
   $91 = Math_fround(HEAPF32[$53>>2]);
   $92 = Math_fround($90 * $91);
   $93 = Math_fround($88 + $92);
   $94 = (($2) + ($$029$i<<2)|0);
   $95 = Math_fround(HEAPF32[$94>>2]);
   $96 = Math_fround($95 - $93);
   $97 = (($0) + ($$029$i<<2)|0);
   HEAPF32[$97>>2] = $96;
   $98 = (($$029$i) + 1)|0;
   $exitcond$i29 = ($98|0)==($3|0);
   if ($exitcond$i29) {
    break;
   } else {
    $$029$i = $98;
   }
  }
  $342 = $4 << 2;
  _memset(($0|0),0,($342|0))|0;
  return;
  break;
 }
 case 10:  {
  $99 = ($3|0)>(10);
  if (!($99)) {
   $342 = $4 << 2;
   _memset(($0|0),0,($342|0))|0;
   return;
  }
  $100 = ((($1)) + 4|0);
  $101 = ((($1)) + 8|0);
  $102 = ((($1)) + 12|0);
  $103 = ((($1)) + 16|0);
  $104 = ((($1)) + 20|0);
  $105 = ((($1)) + 24|0);
  $106 = ((($1)) + 28|0);
  $107 = ((($1)) + 32|0);
  $108 = ((($1)) + 36|0);
  $$033$i = 10;
  while(1) {
   $109 = (($$033$i) + -1)|0;
   $110 = (($2) + ($109<<2)|0);
   $111 = Math_fround(HEAPF32[$110>>2]);
   $112 = Math_fround(HEAPF32[$1>>2]);
   $113 = Math_fround($111 * $112);
   $114 = ((($110)) + -4|0);
   $115 = Math_fround(HEAPF32[$114>>2]);
   $116 = Math_fround(HEAPF32[$100>>2]);
   $117 = Math_fround($115 * $116);
   $118 = Math_fround($113 + $117);
   $119 = ((($110)) + -8|0);
   $120 = Math_fround(HEAPF32[$119>>2]);
   $121 = Math_fround(HEAPF32[$101>>2]);
   $122 = Math_fround($120 * $121);
   $123 = Math_fround($118 + $122);
   $124 = ((($110)) + -12|0);
   $125 = Math_fround(HEAPF32[$124>>2]);
   $126 = Math_fround(HEAPF32[$102>>2]);
   $127 = Math_fround($125 * $126);
   $128 = Math_fround($123 + $127);
   $129 = ((($110)) + -16|0);
   $130 = Math_fround(HEAPF32[$129>>2]);
   $131 = Math_fround(HEAPF32[$103>>2]);
   $132 = Math_fround($130 * $131);
   $133 = Math_fround($128 + $132);
   $134 = ((($110)) + -20|0);
   $135 = Math_fround(HEAPF32[$134>>2]);
   $136 = Math_fround(HEAPF32[$104>>2]);
   $137 = Math_fround($135 * $136);
   $138 = Math_fround($133 + $137);
   $139 = ((($110)) + -24|0);
   $140 = Math_fround(HEAPF32[$139>>2]);
   $141 = Math_fround(HEAPF32[$105>>2]);
   $142 = Math_fround($140 * $141);
   $143 = Math_fround($138 + $142);
   $144 = ((($110)) + -28|0);
   $145 = Math_fround(HEAPF32[$144>>2]);
   $146 = Math_fround(HEAPF32[$106>>2]);
   $147 = Math_fround($145 * $146);
   $148 = Math_fround($143 + $147);
   $149 = ((($110)) + -32|0);
   $150 = Math_fround(HEAPF32[$149>>2]);
   $151 = Math_fround(HEAPF32[$107>>2]);
   $152 = Math_fround($150 * $151);
   $153 = Math_fround($148 + $152);
   $154 = ((($110)) + -36|0);
   $155 = Math_fround(HEAPF32[$154>>2]);
   $156 = Math_fround(HEAPF32[$108>>2]);
   $157 = Math_fround($155 * $156);
   $158 = Math_fround($153 + $157);
   $159 = (($2) + ($$033$i<<2)|0);
   $160 = Math_fround(HEAPF32[$159>>2]);
   $161 = Math_fround($160 - $158);
   $162 = (($0) + ($$033$i<<2)|0);
   HEAPF32[$162>>2] = $161;
   $163 = (($$033$i) + 1)|0;
   $exitcond$i27 = ($163|0)==($3|0);
   if ($exitcond$i27) {
    break;
   } else {
    $$033$i = $163;
   }
  }
  $342 = $4 << 2;
  _memset(($0|0),0,($342|0))|0;
  return;
  break;
 }
 case 12:  {
  $164 = ($3|0)>(12);
  if (!($164)) {
   $342 = $4 << 2;
   _memset(($0|0),0,($342|0))|0;
   return;
  }
  $165 = ((($1)) + 4|0);
  $166 = ((($1)) + 8|0);
  $167 = ((($1)) + 12|0);
  $168 = ((($1)) + 16|0);
  $169 = ((($1)) + 20|0);
  $170 = ((($1)) + 24|0);
  $171 = ((($1)) + 28|0);
  $172 = ((($1)) + 32|0);
  $173 = ((($1)) + 36|0);
  $174 = ((($1)) + 40|0);
  $175 = ((($1)) + 44|0);
  $$037$i = 12;
  while(1) {
   $176 = (($$037$i) + -1)|0;
   $177 = (($2) + ($176<<2)|0);
   $178 = Math_fround(HEAPF32[$177>>2]);
   $179 = Math_fround(HEAPF32[$1>>2]);
   $180 = Math_fround($178 * $179);
   $181 = ((($177)) + -4|0);
   $182 = Math_fround(HEAPF32[$181>>2]);
   $183 = Math_fround(HEAPF32[$165>>2]);
   $184 = Math_fround($182 * $183);
   $185 = Math_fround($180 + $184);
   $186 = ((($177)) + -8|0);
   $187 = Math_fround(HEAPF32[$186>>2]);
   $188 = Math_fround(HEAPF32[$166>>2]);
   $189 = Math_fround($187 * $188);
   $190 = Math_fround($185 + $189);
   $191 = ((($177)) + -12|0);
   $192 = Math_fround(HEAPF32[$191>>2]);
   $193 = Math_fround(HEAPF32[$167>>2]);
   $194 = Math_fround($192 * $193);
   $195 = Math_fround($190 + $194);
   $196 = ((($177)) + -16|0);
   $197 = Math_fround(HEAPF32[$196>>2]);
   $198 = Math_fround(HEAPF32[$168>>2]);
   $199 = Math_fround($197 * $198);
   $200 = Math_fround($195 + $199);
   $201 = ((($177)) + -20|0);
   $202 = Math_fround(HEAPF32[$201>>2]);
   $203 = Math_fround(HEAPF32[$169>>2]);
   $204 = Math_fround($202 * $203);
   $205 = Math_fround($200 + $204);
   $206 = ((($177)) + -24|0);
   $207 = Math_fround(HEAPF32[$206>>2]);
   $208 = Math_fround(HEAPF32[$170>>2]);
   $209 = Math_fround($207 * $208);
   $210 = Math_fround($205 + $209);
   $211 = ((($177)) + -28|0);
   $212 = Math_fround(HEAPF32[$211>>2]);
   $213 = Math_fround(HEAPF32[$171>>2]);
   $214 = Math_fround($212 * $213);
   $215 = Math_fround($210 + $214);
   $216 = ((($177)) + -32|0);
   $217 = Math_fround(HEAPF32[$216>>2]);
   $218 = Math_fround(HEAPF32[$172>>2]);
   $219 = Math_fround($217 * $218);
   $220 = Math_fround($215 + $219);
   $221 = ((($177)) + -36|0);
   $222 = Math_fround(HEAPF32[$221>>2]);
   $223 = Math_fround(HEAPF32[$173>>2]);
   $224 = Math_fround($222 * $223);
   $225 = Math_fround($220 + $224);
   $226 = ((($177)) + -40|0);
   $227 = Math_fround(HEAPF32[$226>>2]);
   $228 = Math_fround(HEAPF32[$174>>2]);
   $229 = Math_fround($227 * $228);
   $230 = Math_fround($225 + $229);
   $231 = ((($177)) + -44|0);
   $232 = Math_fround(HEAPF32[$231>>2]);
   $233 = Math_fround(HEAPF32[$175>>2]);
   $234 = Math_fround($232 * $233);
   $235 = Math_fround($230 + $234);
   $236 = (($2) + ($$037$i<<2)|0);
   $237 = Math_fround(HEAPF32[$236>>2]);
   $238 = Math_fround($237 - $235);
   $239 = (($0) + ($$037$i<<2)|0);
   HEAPF32[$239>>2] = $238;
   $240 = (($$037$i) + 1)|0;
   $exitcond$i25 = ($240|0)==($3|0);
   if ($exitcond$i25) {
    break;
   } else {
    $$037$i = $240;
   }
  }
  $342 = $4 << 2;
  _memset(($0|0),0,($342|0))|0;
  return;
  break;
 }
 case 16:  {
  $241 = ($3|0)>(16);
  if (!($241)) {
   $342 = $4 << 2;
   _memset(($0|0),0,($342|0))|0;
   return;
  }
  $242 = ((($1)) + 4|0);
  $243 = ((($1)) + 8|0);
  $244 = ((($1)) + 12|0);
  $245 = ((($1)) + 16|0);
  $246 = ((($1)) + 20|0);
  $247 = ((($1)) + 24|0);
  $248 = ((($1)) + 28|0);
  $249 = ((($1)) + 32|0);
  $250 = ((($1)) + 36|0);
  $251 = ((($1)) + 40|0);
  $252 = ((($1)) + 44|0);
  $253 = ((($1)) + 48|0);
  $254 = ((($1)) + 52|0);
  $255 = ((($1)) + 56|0);
  $256 = ((($1)) + 60|0);
  $$045$i = 16;
  while(1) {
   $257 = (($$045$i) + -1)|0;
   $258 = (($2) + ($257<<2)|0);
   $259 = Math_fround(HEAPF32[$258>>2]);
   $260 = Math_fround(HEAPF32[$1>>2]);
   $261 = Math_fround($259 * $260);
   $262 = ((($258)) + -4|0);
   $263 = Math_fround(HEAPF32[$262>>2]);
   $264 = Math_fround(HEAPF32[$242>>2]);
   $265 = Math_fround($263 * $264);
   $266 = Math_fround($261 + $265);
   $267 = ((($258)) + -8|0);
   $268 = Math_fround(HEAPF32[$267>>2]);
   $269 = Math_fround(HEAPF32[$243>>2]);
   $270 = Math_fround($268 * $269);
   $271 = Math_fround($266 + $270);
   $272 = ((($258)) + -12|0);
   $273 = Math_fround(HEAPF32[$272>>2]);
   $274 = Math_fround(HEAPF32[$244>>2]);
   $275 = Math_fround($273 * $274);
   $276 = Math_fround($271 + $275);
   $277 = ((($258)) + -16|0);
   $278 = Math_fround(HEAPF32[$277>>2]);
   $279 = Math_fround(HEAPF32[$245>>2]);
   $280 = Math_fround($278 * $279);
   $281 = Math_fround($276 + $280);
   $282 = ((($258)) + -20|0);
   $283 = Math_fround(HEAPF32[$282>>2]);
   $284 = Math_fround(HEAPF32[$246>>2]);
   $285 = Math_fround($283 * $284);
   $286 = Math_fround($281 + $285);
   $287 = ((($258)) + -24|0);
   $288 = Math_fround(HEAPF32[$287>>2]);
   $289 = Math_fround(HEAPF32[$247>>2]);
   $290 = Math_fround($288 * $289);
   $291 = Math_fround($286 + $290);
   $292 = ((($258)) + -28|0);
   $293 = Math_fround(HEAPF32[$292>>2]);
   $294 = Math_fround(HEAPF32[$248>>2]);
   $295 = Math_fround($293 * $294);
   $296 = Math_fround($291 + $295);
   $297 = ((($258)) + -32|0);
   $298 = Math_fround(HEAPF32[$297>>2]);
   $299 = Math_fround(HEAPF32[$249>>2]);
   $300 = Math_fround($298 * $299);
   $301 = Math_fround($296 + $300);
   $302 = ((($258)) + -36|0);
   $303 = Math_fround(HEAPF32[$302>>2]);
   $304 = Math_fround(HEAPF32[$250>>2]);
   $305 = Math_fround($303 * $304);
   $306 = Math_fround($301 + $305);
   $307 = ((($258)) + -40|0);
   $308 = Math_fround(HEAPF32[$307>>2]);
   $309 = Math_fround(HEAPF32[$251>>2]);
   $310 = Math_fround($308 * $309);
   $311 = Math_fround($306 + $310);
   $312 = ((($258)) + -44|0);
   $313 = Math_fround(HEAPF32[$312>>2]);
   $314 = Math_fround(HEAPF32[$252>>2]);
   $315 = Math_fround($313 * $314);
   $316 = Math_fround($311 + $315);
   $317 = ((($258)) + -48|0);
   $318 = Math_fround(HEAPF32[$317>>2]);
   $319 = Math_fround(HEAPF32[$253>>2]);
   $320 = Math_fround($318 * $319);
   $321 = Math_fround($316 + $320);
   $322 = ((($258)) + -52|0);
   $323 = Math_fround(HEAPF32[$322>>2]);
   $324 = Math_fround(HEAPF32[$254>>2]);
   $325 = Math_fround($323 * $324);
   $326 = Math_fround($321 + $325);
   $327 = ((($258)) + -56|0);
   $328 = Math_fround(HEAPF32[$327>>2]);
   $329 = Math_fround(HEAPF32[$255>>2]);
   $330 = Math_fround($328 * $329);
   $331 = Math_fround($326 + $330);
   $332 = ((($258)) + -60|0);
   $333 = Math_fround(HEAPF32[$332>>2]);
   $334 = Math_fround(HEAPF32[$256>>2]);
   $335 = Math_fround($333 * $334);
   $336 = Math_fround($331 + $335);
   $337 = (($2) + ($$045$i<<2)|0);
   $338 = Math_fround(HEAPF32[$337>>2]);
   $339 = Math_fround($338 - $336);
   $340 = (($0) + ($$045$i<<2)|0);
   HEAPF32[$340>>2] = $339;
   $341 = (($$045$i) + 1)|0;
   $exitcond$i23 = ($341|0)==($3|0);
   if ($exitcond$i23) {
    break;
   } else {
    $$045$i = $341;
   }
  }
  $342 = $4 << 2;
  _memset(($0|0),0,($342|0))|0;
  return;
  break;
 }
 default: {
  $342 = $4 << 2;
  _memset(($0|0),0,($342|0))|0;
  return;
 }
 }
}
function _silk_LTP_analysis_filter_FLP($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$05363 = 0, $$05363$us = 0, $$05462$us = 0, $$05561$us = 0, $$05659$us = 0, $$160$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = Math_fround(0), $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = Math_fround(0), $27 = 0, $28 = Math_fround(0), $29 = Math_fround(0), $30 = Math_fround(0), $31 = Math_fround(0), $32 = Math_fround(0), $33 = 0, $34 = Math_fround(0), $35 = Math_fround(0), $36 = Math_fround(0), $37 = Math_fround(0), $38 = Math_fround(0), $39 = Math_fround(0), $40 = Math_fround(0), $41 = Math_fround(0), $42 = 0, $43 = Math_fround(0);
 var $44 = Math_fround(0), $45 = Math_fround(0), $46 = Math_fround(0), $47 = 0, $48 = Math_fround(0), $49 = Math_fround(0), $50 = Math_fround(0), $51 = Math_fround(0), $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond71 = 0, $exitcond75 = 0, $scevgep = 0;
 var $scevgep73 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp;
 $9 = ($6|0)>(0);
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = (($7) + ($5))|0;
 $11 = ($10|0)>(0);
 if (!($11)) {
  $$05363 = 0;
  while(1) {
   $56 = ($$05363*5)|0;
   $scevgep73 = (($2) + ($56<<2)|0);
   ;HEAP32[$8>>2]=HEAP32[$scevgep73>>2]|0;HEAP32[$8+4>>2]=HEAP32[$scevgep73+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$scevgep73+8>>2]|0;HEAP32[$8+12>>2]=HEAP32[$scevgep73+12>>2]|0;HEAP32[$8+16>>2]=HEAP32[$scevgep73+16>>2]|0;
   $57 = (($$05363) + 1)|0;
   $exitcond75 = ($57|0)==($6|0);
   if ($exitcond75) {
    break;
   } else {
    $$05363 = $57;
   }
  }
  STACKTOP = sp;return;
 }
 $12 = ((($8)) + 4|0);
 $13 = ((($8)) + 8|0);
 $14 = ((($8)) + 12|0);
 $15 = ((($8)) + 16|0);
 $$05363$us = 0;$$05462$us = $1;$$05561$us = $0;
 while(1) {
  $16 = ($$05363$us*5)|0;
  $scevgep = (($2) + ($16<<2)|0);
  $17 = (($3) + ($$05363$us<<2)|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (0 - ($18))|0;
  $20 = (($4) + ($$05363$us<<2)|0);
  $21 = Math_fround(HEAPF32[$20>>2]);
  ;HEAP32[$8>>2]=HEAP32[$scevgep>>2]|0;HEAP32[$8+4>>2]=HEAP32[$scevgep+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$scevgep+8>>2]|0;HEAP32[$8+12>>2]=HEAP32[$scevgep+12>>2]|0;HEAP32[$8+16>>2]=HEAP32[$scevgep+16>>2]|0;
  $22 = (($$05462$us) + ($19<<2)|0);
  $$05659$us = $22;$$160$us = 0;
  while(1) {
   $23 = (($$05462$us) + ($$160$us<<2)|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (($$05561$us) + ($$160$us<<2)|0);
   HEAP32[$25>>2] = $24;
   $26 = Math_fround(HEAPF32[$8>>2]);
   $27 = ((($$05659$us)) + 8|0);
   $28 = Math_fround(HEAPF32[$27>>2]);
   $29 = Math_fround($26 * $28);
   $30 = (HEAP32[tempDoublePtr>>2]=$24,Math_fround(HEAPF32[tempDoublePtr>>2]));
   $31 = Math_fround($30 - $29);
   HEAPF32[$25>>2] = $31;
   $32 = Math_fround(HEAPF32[$12>>2]);
   $33 = ((($$05659$us)) + 4|0);
   $34 = Math_fround(HEAPF32[$33>>2]);
   $35 = Math_fround($32 * $34);
   $36 = Math_fround($31 - $35);
   HEAPF32[$25>>2] = $36;
   $37 = Math_fround(HEAPF32[$13>>2]);
   $38 = Math_fround(HEAPF32[$$05659$us>>2]);
   $39 = Math_fround($37 * $38);
   $40 = Math_fround($36 - $39);
   HEAPF32[$25>>2] = $40;
   $41 = Math_fround(HEAPF32[$14>>2]);
   $42 = ((($$05659$us)) + -4|0);
   $43 = Math_fround(HEAPF32[$42>>2]);
   $44 = Math_fround($41 * $43);
   $45 = Math_fround($40 - $44);
   HEAPF32[$25>>2] = $45;
   $46 = Math_fround(HEAPF32[$15>>2]);
   $47 = ((($$05659$us)) + -8|0);
   $48 = Math_fround(HEAPF32[$47>>2]);
   $49 = Math_fround($46 * $48);
   $50 = Math_fround($45 - $49);
   $51 = Math_fround($21 * $50);
   HEAPF32[$25>>2] = $51;
   $52 = (($$160$us) + 1)|0;
   $exitcond = ($52|0)==($10|0);
   if ($exitcond) {
    break;
   } else {
    $$05659$us = $33;$$160$us = $52;
   }
  }
  $53 = (($$05561$us) + ($10<<2)|0);
  $54 = (($$05462$us) + ($5<<2)|0);
  $55 = (($$05363$us) + 1)|0;
  $exitcond71 = ($55|0)==($6|0);
  if ($exitcond71) {
   break;
  } else {
   $$05363$us = $55;$$05462$us = $54;$$05561$us = $53;
  }
 }
 STACKTOP = sp;return;
}
function _silk_LTP_scale_ctrl_FLP($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $10 = 0, $11 = Math_fround(0), $12 = Math_fround(0), $13 = Math_fround(0), $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = Math_fround(0), $21 = Math_fround(0), $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = Math_fround(0), $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($0)) + 4612|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($0)) + 5740|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (($7) + ($5))|0;
  $9 = (Math_fround(($8|0)));
  $10 = ((($1)) + 708|0);
  $11 = Math_fround(HEAPF32[$10>>2]);
  $12 = Math_fround($11 * $9);
  $13 = Math_fround($12 * Math_fround(0.100000001));
  $14 = $13 > Math_fround(2.0);
  if ($14) {
   $$sink = 2;
  } else {
   $15 = $13 < Math_fround(0.0);
   if ($15) {
    $$sink = 0;
   } else {
    $phitmp = (~~(($13)));
    $$sink = $phitmp;
   }
  }
 } else {
  $$sink = 0;
 }
 $16 = ((($0)) + 4765|0);
 HEAP8[$16>>0] = $$sink;
 $17 = $$sink << 24 >> 24;
 $18 = (37364 + ($17<<1)|0);
 $19 = HEAP16[$18>>1]|0;
 $20 = (Math_fround(($19<<16>>16)));
 $21 = Math_fround($20 * Math_fround(6.10351563E-5));
 $22 = ((($1)) + 224|0);
 HEAPF32[$22>>2] = $21;
 return;
}
function _silk_noise_shape_analysis_FLP($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$01213$i = 0, $$0205 = Math_fround(0), $$0207 = Math_fround(0), $$0208245 = 0, $$0209238 = 0, $$0210 = Math_fround(0), $$0210264 = Math_fround(0), $$0211244 = Math_fround(0), $$0212$lcssa = Math_fround(0), $$0212243 = Math_fround(0), $$023$us$i = Math_fround(0), $$023$us$i$us = Math_fround(0), $$0246 = 0, $$03$us$i = 0, $$0312$us$i = Math_fround(0), $$0326$us$i = 0, $$0335$us$i = 0, $$08228$i = 0, $$0832$us$i = Math_fround(0), $$0832$us$i$us = Math_fround(0);
 var $$08522$us$i = 0, $$08522$us$i$us = 0, $$08621$us$i = 0, $$08621$us$i$us = 0, $$1$us$i = Math_fround(0), $$1206 = Math_fround(0), $$1206219 = Math_fround(0), $$1206220 = Math_fround(0), $$1239 = 0, $$1341$us$i = 0, $$184$us$i = Math_fround(0), $$184$us$i$us = Math_fround(0), $$1871$us$i = 0, $$1871$us$i$us = 0, $$2$us$i = 0, $$2232 = 0, $$23$us$i = 0, $$23$us$i$us = 0, $$288$us$i = 0, $$288$us$i$us = 0;
 var $$3225 = 0, $$35$us$i$us = 0, $$49$us$i = 0, $$49$us$i$us = 0, $$513$us$i$us = 0, $$5224 = 0, $$lcssa$i = Math_fround(0), $$lcssa223263 = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert37$i = 0, $$phi$trans$insert40$i = 0, $$phi$trans$insert43$i = 0, $$phi$trans$insert43$i$us = 0, $$pre$i = Math_fround(0), $$pre$phiZ2D = 0, $$pre260 = 0, $$pre261 = 0, $$pre38$i = Math_fround(0), $$pre39$i$us = Math_fround(0), $$pre41$i$us = Math_fround(0);
 var $$pre44$i = Math_fround(0), $$pre44$i$us = Math_fround(0), $10 = 0, $100 = Math_fround(0), $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = Math_fround(0), $108 = Math_fround(0), $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = Math_fround(0), $128 = Math_fround(0), $129 = Math_fround(0), $13 = Math_fround(0), $130 = Math_fround(0), $131 = 0, $132 = Math_fround(0), $133 = 0;
 var $134 = 0, $135 = 0, $136 = Math_fround(0), $137 = 0, $138 = 0, $139 = 0, $14 = Math_fround(0), $140 = 0, $141 = 0, $142 = 0, $143 = Math_fround(0), $144 = 0, $145 = Math_fround(0), $146 = 0, $147 = 0, $148 = Math_fround(0), $149 = Math_fround(0), $15 = 0, $150 = Math_fround(0), $151 = 0;
 var $152 = 0, $153 = Math_fround(0), $154 = Math_fround(0), $155 = Math_fround(0), $156 = Math_fround(0), $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = Math_fround(0), $163 = Math_fround(0), $164 = 0, $165 = 0, $166 = Math_fround(0), $167 = Math_fround(0), $168 = 0, $169 = Math_fround(0), $17 = 0;
 var $170 = Math_fround(0), $171 = Math_fround(0), $172 = Math_fround(0), $173 = 0, $174 = Math_fround(0), $175 = 0, $176 = Math_fround(0), $177 = 0, $178 = 0, $179 = Math_fround(0), $18 = 0, $180 = Math_fround(0), $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = Math_fround(0), $186 = Math_fround(0), $187 = 0, $188 = 0;
 var $189 = Math_fround(0), $19 = 0, $190 = Math_fround(0), $191 = 0, $192 = 0, $193 = Math_fround(0), $194 = Math_fround(0), $195 = Math_fround(0), $196 = 0, $197 = Math_fround(0), $198 = Math_fround(0), $199 = Math_fround(0), $20 = Math_fround(0), $200 = Math_fround(0), $201 = Math_fround(0), $202 = 0, $203 = Math_fround(0), $204 = Math_fround(0), $205 = Math_fround(0), $206 = Math_fround(0);
 var $207 = Math_fround(0), $208 = Math_fround(0), $209 = 0, $21 = Math_fround(0), $210 = 0, $211 = Math_fround(0), $212 = Math_fround(0), $213 = 0, $214 = 0, $215 = Math_fround(0), $216 = Math_fround(0), $217 = 0, $218 = 0, $219 = 0, $22 = Math_fround(0), $220 = Math_fround(0), $221 = Math_fround(0), $222 = Math_fround(0), $223 = Math_fround(0), $224 = Math_fround(0);
 var $225 = Math_fround(0), $226 = Math_fround(0), $227 = Math_fround(0), $228 = Math_fround(0), $229 = 0, $23 = 0, $230 = Math_fround(0), $231 = Math_fround(0), $232 = Math_fround(0), $233 = Math_fround(0), $234 = Math_fround(0), $235 = Math_fround(0), $236 = Math_fround(0), $237 = Math_fround(0), $238 = Math_fround(0), $239 = 0, $24 = Math_fround(0), $240 = 0, $241 = 0, $242 = Math_fround(0);
 var $243 = 0, $244 = 0, $245 = Math_fround(0), $246 = Math_fround(0), $247 = Math_fround(0), $248 = 0, $249 = 0, $25 = Math_fround(0), $250 = Math_fround(0), $251 = Math_fround(0), $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = Math_fround(0), $257 = Math_fround(0), $258 = Math_fround(0), $259 = Math_fround(0), $26 = Math_fround(0), $260 = Math_fround(0);
 var $261 = 0, $262 = Math_fround(0), $263 = Math_fround(0), $264 = Math_fround(0), $265 = Math_fround(0), $266 = 0, $267 = 0, $268 = 0, $269 = Math_fround(0), $27 = 0.0, $270 = Math_fround(0), $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = Math_fround(0), $278 = 0.0, $279 = Math_fround(0);
 var $28 = 0.0, $280 = 0, $281 = 0, $282 = Math_fround(0), $283 = Math_fround(0), $284 = Math_fround(0), $285 = 0, $286 = 0, $287 = Math_fround(0), $288 = Math_fround(0), $289 = Math_fround(0), $29 = 0.0, $290 = Math_fround(0), $291 = Math_fround(0), $292 = Math_fround(0), $293 = 0, $294 = 0, $295 = Math_fround(0), $296 = Math_fround(0), $297 = Math_fround(0);
 var $298 = 0, $299 = 0, $30 = 0.0, $300 = 0, $301 = 0, $302 = Math_fround(0), $303 = Math_fround(0), $304 = 0, $305 = 0, $306 = Math_fround(0), $307 = Math_fround(0), $308 = Math_fround(0), $309 = Math_fround(0), $31 = Math_fround(0), $310 = 0, $311 = Math_fround(0), $312 = Math_fround(0), $313 = Math_fround(0), $314 = 0, $315 = 0;
 var $316 = Math_fround(0), $317 = Math_fround(0), $318 = Math_fround(0), $319 = 0, $32 = 0, $320 = 0, $321 = Math_fround(0), $322 = Math_fround(0), $323 = Math_fround(0), $324 = 0, $325 = Math_fround(0), $326 = Math_fround(0), $327 = Math_fround(0), $328 = Math_fround(0), $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = Math_fround(0), $34 = 0, $340 = Math_fround(0), $341 = Math_fround(0), $342 = Math_fround(0), $343 = Math_fround(0), $344 = Math_fround(0), $345 = Math_fround(0), $346 = 0, $347 = Math_fround(0), $348 = Math_fround(0), $349 = Math_fround(0), $35 = 0, $350 = 0, $351 = 0;
 var $352 = Math_fround(0), $353 = Math_fround(0), $354 = Math_fround(0), $355 = Math_fround(0), $356 = 0, $357 = Math_fround(0), $358 = Math_fround(0), $359 = Math_fround(0), $36 = 0, $360 = Math_fround(0), $361 = 0, $362 = 0, $363 = 0, $37 = 0, $38 = Math_fround(0), $39 = Math_fround(0), $4 = 0, $40 = Math_fround(0), $41 = Math_fround(0), $42 = Math_fround(0);
 var $43 = Math_fround(0), $44 = Math_fround(0), $45 = Math_fround(0), $46 = Math_fround(0), $47 = Math_fround(0), $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = Math_fround(0), $53 = Math_fround(0), $54 = 0, $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = Math_fround(0), $59 = Math_fround(0), $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = Math_fround(0), $7 = 0, $70 = 0.0, $71 = Math_fround(0), $72 = Math_fround(0), $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = Math_fround(0), $77 = 0, $78 = Math_fround(0), $79 = Math_fround(0);
 var $8 = 0, $80 = Math_fround(0), $81 = 0, $82 = 0, $83 = 0, $84 = Math_fround(0), $85 = Math_fround(0), $86 = 0, $87 = 0, $88 = 0, $89 = Math_fround(0), $9 = 0, $90 = Math_fround(0), $91 = Math_fround(0), $92 = Math_fround(0), $93 = Math_fround(0), $94 = 0, $95 = 0, $96 = Math_fround(0), $97 = Math_fround(0);
 var $98 = Math_fround(0), $99 = Math_fround(0), $exitcond = 0, $exitcond$i = 0, $exitcond$i216 = 0, $exitcond$i216$us = 0, $exitcond254 = 0, $exitcond255 = 0, $exitcond255271 = 0, $exitcond256 = 0, $exitcond257 = 0, $exitcond33$i$us = 0, $exitcond34$i = 0, $exitcond34$i$us = 0, $exitcond35$i = 0, $exitcond35$i$us = 0, $exitcond36$i = 0, $exitcond36$i236 = 0, $exp2 = 0.0, $sext = 0;
 var $spec$select = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1184|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1184|0);
 $4 = sp + 224|0;
 $5 = sp + 112|0;
 $6 = sp;
 $7 = ((($0)) + 4596|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (0 - ($8))|0;
 $10 = (($3) + ($9<<2)|0);
 $11 = ((($0)) + 4712|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (Math_fround(($12|0)));
 $14 = Math_fround($13 * Math_fround(0.0078125));
 $15 = ((($0)) + 4692|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 4696|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (($18) + ($16))|0;
 $20 = (Math_fround(($19|0)));
 $21 = Math_fround($20 * Math_fround(0.5));
 $22 = Math_fround($21 * Math_fround(3.05175781E-5));
 $23 = ((($1)) + 696|0);
 HEAPF32[$23>>2] = $22;
 $24 = Math_fround($14 + Math_fround(-20.0));
 $25 = Math_fround($24 * Math_fround(0.25));
 $26 = Math_fround(- $25);
 $27 = +$26;
 $28 = (+_exp($27));
 $29 = $28 + 1.0;
 $30 = 1.0 / $29;
 $31 = Math_fround($30);
 $32 = ((($1)) + 700|0);
 HEAPF32[$32>>2] = $31;
 $33 = ((($0)) + 4672|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ($34|0)==(0);
 if ($35) {
  $36 = ((($0)) + 4528|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = (Math_fround(($37|0)));
  $39 = Math_fround($38 * Math_fround(0.00390625));
  $40 = Math_fround(Math_fround(1.0) - $39);
  $41 = Math_fround($31 * Math_fround(2.0));
  $42 = Math_fround($22 * Math_fround(0.5));
  $43 = Math_fround($42 + Math_fround(0.5));
  $44 = Math_fround($43 * $41);
  $45 = Math_fround($44 * $40);
  $46 = Math_fround($40 * $45);
  $47 = Math_fround($14 - $46);
  $$0205 = $47;
 } else {
  $$0205 = $14;
 }
 $48 = ((($0)) + 4761|0);
 $49 = HEAP8[$48>>0]|0;
 $50 = ($49<<24>>24)==(2);
 do {
  if ($50) {
   $51 = ((($0)) + 10056|0);
   $52 = Math_fround(HEAPF32[$51>>2]);
   $53 = Math_fround($52 * Math_fround(2.0));
   $$1206219 = Math_fround($$0205 + $53);
   $54 = ((($0)) + 4762|0);
   HEAP8[$54>>0] = 0;
   $$pre261 = ((($0)) + 4576|0);
   $$1206220 = $$1206219;$$pre$phiZ2D = $$pre261;
  } else {
   $55 = Math_fround($13 * Math_fround(-0.400000006));
   $56 = Math_fround($55 * Math_fround(0.0078125));
   $57 = Math_fround($56 + Math_fround(6.0));
   $58 = Math_fround(Math_fround(1.0) - $22);
   $59 = Math_fround($57 * $58);
   $$1206 = Math_fround($59 + $$0205);
   $60 = ((($0)) + 4572|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 << 1;
   $63 = ((($0)) + 4576|0);
   $64 = HEAP32[$63>>2]|0;
   $sext = $64 << 16;
   $65 = $sext >> 16;
   $66 = ($65*5)|0;
   $67 = (($66|0) / 2)&-1;
   $68 = ($66|0)>(1);
   if ($68) {
    $69 = (Math_fround(($62|0)));
    $$0208245 = $2;$$0211244 = Math_fround(0.0);$$0212243 = Math_fround(0.0);$$0246 = 0;
    while(1) {
     $70 = (+_silk_energy_FLP($$0208245,$62));
     $71 = Math_fround($70);
     $72 = Math_fround($69 + $71);
     $73 = +$72;
     $74 = (+_llvm_log10_f64((+$73)));
     $75 = $74 * 3.32192809488736;
     $76 = Math_fround($75);
     $77 = ($$0246|0)==(0);
     $78 = Math_fround($76 - $$0211244);
     $79 = (Math_fround(Math_abs((Math_fround($78)))));
     $80 = Math_fround($$0212243 + $79);
     $spec$select = $77 ? $$0212243 : $80;
     $81 = (($$0208245) + ($62<<2)|0);
     $82 = (($$0246) + 1)|0;
     $exitcond257 = ($82|0)==($67|0);
     if ($exitcond257) {
      $$0212$lcssa = $spec$select;
      break;
     } else {
      $$0208245 = $81;$$0211244 = $76;$$0212243 = $spec$select;$$0246 = $82;
     }
    }
   } else {
    $$0212$lcssa = Math_fround(0.0);
   }
   $83 = (($67) + -1)|0;
   $84 = (Math_fround(($83|0)));
   $85 = Math_fround($84 * Math_fround(0.600000024));
   $86 = $$0212$lcssa > $85;
   $87 = ((($0)) + 4762|0);
   if ($86) {
    HEAP8[$87>>0] = 0;
    $$1206220 = $$1206;$$pre$phiZ2D = $63;
    break;
   } else {
    HEAP8[$87>>0] = 1;
    $$1206220 = $$1206;$$pre$phiZ2D = $63;
    break;
   }
  }
 } while(0);
 $88 = ((($1)) + 704|0);
 $89 = Math_fround(HEAPF32[$88>>2]);
 $90 = Math_fround($89 * Math_fround(0.00100000005));
 $91 = Math_fround($90 * $90);
 $92 = Math_fround($91 + Math_fround(1.0));
 $93 = Math_fround(Math_fround(0.939999997) / $92);
 $94 = ((($0)) + 4668|0);
 $95 = HEAP32[$94>>2]|0;
 $96 = (Math_fround(($95|0)));
 $97 = Math_fround($96 * Math_fround(1.52587891E-5));
 $98 = Math_fround(HEAPF32[$32>>2]);
 $99 = Math_fround($98 * Math_fround(0.00999999977));
 $100 = Math_fround($97 + $99);
 $101 = HEAP32[$$pre$phiZ2D>>2]|0;
 $102 = ($101|0)>(0);
 if ($102) {
  $103 = ((($0)) + 4572|0);
  $104 = ((($0)) + 4600|0);
  $105 = ((($0)) + 4584|0);
  $106 = ((($0)) + 4632|0);
  $107 = Math_fround($100 * $100);
  $108 = Math_fround(Math_fround(1.0) - $107);
  $$0209238 = $10;$$1239 = 0;
  while(1) {
   $109 = HEAP32[$103>>2]|0;
   $110 = ($109*3)|0;
   $111 = HEAP32[$104>>2]|0;
   $112 = (($111) - ($110))|0;
   $113 = (($112|0) / 2)&-1;
   _silk_apply_sine_window_FLP($4,$$0209238,1,$113);
   $114 = (($4) + ($113<<2)|0);
   $115 = (($$0209238) + ($113<<2)|0);
   $116 = ($109*12)|0;
   _memcpy(($114|0),($115|0),($116|0))|0;
   $117 = (($113) + ($110))|0;
   $118 = (($4) + ($117<<2)|0);
   $119 = (($$0209238) + ($117<<2)|0);
   _silk_apply_sine_window_FLP($118,$119,2,$113);
   $120 = HEAP32[$105>>2]|0;
   $121 = (($$0209238) + ($120<<2)|0);
   $122 = HEAP32[$94>>2]|0;
   $123 = ($122|0)>(0);
   $124 = HEAP32[$104>>2]|0;
   $125 = HEAP32[$106>>2]|0;
   if ($123) {
    _silk_warped_autocorrelation_FLP($5,$4,$100,$124,$125);
   } else {
    $126 = (($125) + 1)|0;
    _silk_autocorrelation_FLP($5,$4,$124,$126);
   }
   $127 = Math_fround(HEAPF32[$5>>2]);
   $128 = Math_fround($127 * Math_fround(2.99999992E-5));
   $129 = Math_fround($128 + Math_fround(1.0));
   $130 = Math_fround($127 + $129);
   HEAPF32[$5>>2] = $130;
   $131 = HEAP32[$106>>2]|0;
   $132 = (Math_fround(_silk_schur_FLP($6,$5,$131)));
   $133 = ($$1239*24)|0;
   $134 = (((($1)) + 244|0) + ($133<<2)|0);
   $135 = HEAP32[$106>>2]|0;
   _silk_k2a_FLP($134,$6,$135);
   $136 = (Math_fround(Math_sqrt((Math_fround($132)))));
   $137 = (($1) + ($$1239<<2)|0);
   HEAPF32[$137>>2] = $136;
   $138 = HEAP32[$94>>2]|0;
   $139 = ($138|0)>(0);
   $140 = HEAP32[$106>>2]|0;
   if ($139) {
    $141 = (($140) + -1)|0;
    $142 = (($134) + ($141<<2)|0);
    $143 = Math_fround(HEAPF32[$142>>2]);
    $144 = ($140|0)>(1);
    $145 = Math_fround($100 * $143);
    if ($144) {
     $146 = (($140) + -2)|0;
     $$01213$i = $146;$150 = $145;
     while(1) {
      $147 = (($134) + ($$01213$i<<2)|0);
      $148 = Math_fround(HEAPF32[$147>>2]);
      $149 = Math_fround($148 - $150);
      $151 = (($$01213$i) + -1)|0;
      $152 = ($$01213$i|0)>(0);
      $153 = Math_fround($100 * $149);
      if ($152) {
       $$01213$i = $151;$150 = $153;
      } else {
       $$lcssa$i = $153;
       break;
      }
     }
    } else {
     $$lcssa$i = $145;
    }
    $154 = Math_fround($$lcssa$i + Math_fround(1.0));
    $155 = Math_fround(Math_fround(1.0) / $154);
    $156 = Math_fround($136 * $155);
    HEAPF32[$137>>2] = $156;
   }
   _silk_bwexpander_FLP($134,$140,$93);
   $157 = HEAP32[$94>>2]|0;
   $158 = ($157|0)>(0);
   $159 = HEAP32[$106>>2]|0;
   L32: do {
    if ($158) {
     $160 = (($159) + -1)|0;
     $161 = ($159|0)>(1);
     if ($161) {
      $$phi$trans$insert$i = (($134) + ($160<<2)|0);
      $$pre$i = Math_fround(HEAPF32[$$phi$trans$insert$i>>2]);
      $$08228$i = $160;$163 = $$pre$i;
      while(1) {
       $162 = Math_fround($100 * $163);
       $164 = (($$08228$i) + -1)|0;
       $165 = (($134) + ($164<<2)|0);
       $166 = Math_fround(HEAPF32[$165>>2]);
       $167 = Math_fround($166 - $162);
       HEAPF32[$165>>2] = $167;
       $168 = ($$08228$i|0)>(1);
       if ($168) {
        $$08228$i = $164;$163 = $167;
       } else {
        break;
       }
      }
     }
     $169 = Math_fround(HEAPF32[$134>>2]);
     $170 = Math_fround($100 * $169);
     $171 = Math_fround($170 + Math_fround(1.0));
     $172 = Math_fround($108 / $171);
     $173 = ($159|0)>(0);
     if ($173) {
      $174 = Math_fround($172 * $169);
      HEAPF32[$134>>2] = $174;
      $exitcond36$i236 = ($159|0)==(1);
      if (!($exitcond36$i236)) {
       $175 = 1;
       while(1) {
        $$phi$trans$insert37$i = (($134) + ($175<<2)|0);
        $$pre38$i = Math_fround(HEAPF32[$$phi$trans$insert37$i>>2]);
        $176 = Math_fround($172 * $$pre38$i);
        HEAPF32[$$phi$trans$insert37$i>>2] = $176;
        $177 = (($175) + 1)|0;
        $exitcond36$i = ($177|0)==($159|0);
        if ($exitcond36$i) {
         break;
        } else {
         $175 = $177;
        }
       }
      }
      $$phi$trans$insert40$i = (($134) + ($160<<2)|0);
      if (!($161)) {
       $$023$us$i = $172;$$08522$us$i = 0;$$08621$us$i = 0;
       while(1) {
        $$0832$us$i = Math_fround(-1.0);$$1871$us$i = $$08621$us$i;$$23$us$i = 0;
        while(1) {
         $249 = (($134) + ($$23$us$i<<2)|0);
         $250 = Math_fround(HEAPF32[$249>>2]);
         $251 = (Math_fround(Math_abs((Math_fround($250)))));
         $252 = $251 > $$0832$us$i;
         $$288$us$i = $252 ? $$23$us$i : $$1871$us$i;
         $$184$us$i = $252 ? $251 : $$0832$us$i;
         $253 = (($$23$us$i) + 1)|0;
         $exitcond$i216 = ($253|0)==($159|0);
         if ($exitcond$i216) {
          break;
         } else {
          $$0832$us$i = $$184$us$i;$$1871$us$i = $$288$us$i;$$23$us$i = $253;
         }
        }
        $254 = !($$184$us$i <= Math_fround(3.99900007));
        if (!($254)) {
         break L32;
        }
        $247 = Math_fround(Math_fround(1.0) / $$023$us$i);
        $$49$us$i = 0;
        while(1) {
         $244 = (($134) + ($$49$us$i<<2)|0);
         $245 = Math_fround(HEAPF32[$244>>2]);
         $246 = Math_fround($247 * $245);
         HEAPF32[$244>>2] = $246;
         $248 = (($$49$us$i) + 1)|0;
         $exitcond34$i = ($248|0)==($159|0);
         if ($exitcond34$i) {
          break;
         } else {
          $$49$us$i = $248;
         }
        }
        $224 = (Math_fround(($$08522$us$i|0)));
        $225 = Math_fround($224 * Math_fround(0.100000001));
        $226 = Math_fround($225 + Math_fround(0.800000011));
        $227 = Math_fround($$184$us$i + Math_fround(-3.99900007));
        $228 = Math_fround($226 * $227);
        $229 = (($$288$us$i) + 1)|0;
        $230 = (Math_fround(($229|0)));
        $231 = Math_fround($$184$us$i * $230);
        $232 = Math_fround($228 / $231);
        $233 = Math_fround(Math_fround(0.990000009) - $232);
        _silk_bwexpander_FLP($134,$159,$233);
        $234 = Math_fround(HEAPF32[$134>>2]);
        $235 = Math_fround($100 * $234);
        $236 = Math_fround($235 + Math_fround(1.0));
        $237 = Math_fround($108 / $236);
        $238 = Math_fround($237 * $234);
        HEAPF32[$134>>2] = $238;
        if (!($exitcond36$i236)) {
         $241 = 1;
         while(1) {
          $$phi$trans$insert43$i = (($134) + ($241<<2)|0);
          $$pre44$i = Math_fround(HEAPF32[$$phi$trans$insert43$i>>2]);
          $242 = Math_fround($237 * $$pre44$i);
          HEAPF32[$$phi$trans$insert43$i>>2] = $242;
          $243 = (($241) + 1)|0;
          $exitcond35$i = ($243|0)==($159|0);
          if ($exitcond35$i) {
           break;
          } else {
           $241 = $243;
          }
         }
        }
        $239 = (($$08522$us$i) + 1)|0;
        $240 = ($239>>>0)<(10);
        if ($240) {
         $$023$us$i = $237;$$08522$us$i = $239;$$08621$us$i = $$288$us$i;
        } else {
         break L32;
        }
       }
      }
      $$023$us$i$us = $172;$$08522$us$i$us = 0;$$08621$us$i$us = 0;
      while(1) {
       $$0832$us$i$us = Math_fround(-1.0);$$1871$us$i$us = $$08621$us$i$us;$$23$us$i$us = 0;
       while(1) {
        $178 = (($134) + ($$23$us$i$us<<2)|0);
        $179 = Math_fround(HEAPF32[$178>>2]);
        $180 = (Math_fround(Math_abs((Math_fround($179)))));
        $181 = $180 > $$0832$us$i$us;
        $$288$us$i$us = $181 ? $$23$us$i$us : $$1871$us$i$us;
        $$184$us$i$us = $181 ? $180 : $$0832$us$i$us;
        $182 = (($$23$us$i$us) + 1)|0;
        $exitcond$i216$us = ($182|0)==($159|0);
        if ($exitcond$i216$us) {
         break;
        } else {
         $$0832$us$i$us = $$184$us$i$us;$$1871$us$i$us = $$288$us$i$us;$$23$us$i$us = $182;
        }
       }
       $183 = !($$184$us$i$us <= Math_fround(3.99900007));
       if (!($183)) {
        break L32;
       }
       $$pre39$i$us = Math_fround(HEAPF32[$134>>2]);
       $$35$us$i$us = 1;$190 = $$pre39$i$us;
       while(1) {
        $184 = (($134) + ($$35$us$i$us<<2)|0);
        $185 = Math_fround(HEAPF32[$184>>2]);
        $186 = Math_fround($100 * $185);
        $187 = (($$35$us$i$us) + -1)|0;
        $188 = (($134) + ($187<<2)|0);
        $189 = Math_fround($190 + $186);
        HEAPF32[$188>>2] = $189;
        $191 = (($$35$us$i$us) + 1)|0;
        $exitcond33$i$us = ($191|0)==($159|0);
        if ($exitcond33$i$us) {
         break;
        } else {
         $$35$us$i$us = $191;$190 = $185;
        }
       }
       $195 = Math_fround(Math_fround(1.0) / $$023$us$i$us);
       $$49$us$i$us = 0;
       while(1) {
        $192 = (($134) + ($$49$us$i$us<<2)|0);
        $193 = Math_fround(HEAPF32[$192>>2]);
        $194 = Math_fround($195 * $193);
        HEAPF32[$192>>2] = $194;
        $196 = (($$49$us$i$us) + 1)|0;
        $exitcond34$i$us = ($196|0)==($159|0);
        if ($exitcond34$i$us) {
         break;
        } else {
         $$49$us$i$us = $196;
        }
       }
       $197 = (Math_fround(($$08522$us$i$us|0)));
       $198 = Math_fround($197 * Math_fround(0.100000001));
       $199 = Math_fround($198 + Math_fround(0.800000011));
       $200 = Math_fround($$184$us$i$us + Math_fround(-3.99900007));
       $201 = Math_fround($199 * $200);
       $202 = (($$288$us$i$us) + 1)|0;
       $203 = (Math_fround(($202|0)));
       $204 = Math_fround($$184$us$i$us * $203);
       $205 = Math_fround($201 / $204);
       $206 = Math_fround(Math_fround(0.990000009) - $205);
       _silk_bwexpander_FLP($134,$159,$206);
       $$pre41$i$us = Math_fround(HEAPF32[$$phi$trans$insert40$i>>2]);
       $$513$us$i$us = $160;$208 = $$pre41$i$us;
       while(1) {
        $207 = Math_fround($100 * $208);
        $209 = (($$513$us$i$us) + -1)|0;
        $210 = (($134) + ($209<<2)|0);
        $211 = Math_fround(HEAPF32[$210>>2]);
        $212 = Math_fround($211 - $207);
        HEAPF32[$210>>2] = $212;
        $213 = ($$513$us$i$us|0)>(1);
        if ($213) {
         $$513$us$i$us = $209;$208 = $212;
        } else {
         break;
        }
       }
       $220 = Math_fround(HEAPF32[$134>>2]);
       $221 = Math_fround($100 * $220);
       $222 = Math_fround($221 + Math_fround(1.0));
       $216 = Math_fround($108 / $222);
       $223 = Math_fround($216 * $220);
       HEAPF32[$134>>2] = $223;
       if (!($exitcond36$i236)) {
        $214 = 1;
        while(1) {
         $$phi$trans$insert43$i$us = (($134) + ($214<<2)|0);
         $$pre44$i$us = Math_fround(HEAPF32[$$phi$trans$insert43$i$us>>2]);
         $215 = Math_fround($216 * $$pre44$i$us);
         HEAPF32[$$phi$trans$insert43$i$us>>2] = $215;
         $217 = (($214) + 1)|0;
         $exitcond35$i$us = ($217|0)==($159|0);
         if ($exitcond35$i$us) {
          break;
         } else {
          $214 = $217;
         }
        }
       }
       $218 = (($$08522$us$i$us) + 1)|0;
       $219 = ($218>>>0)<(10);
       if ($219) {
        $$023$us$i$us = $216;$$08522$us$i$us = $218;$$08621$us$i$us = $$288$us$i$us;
       } else {
        break;
       }
      }
     }
    } else {
     $255 = ($159|0)>(0);
     if ($255) {
      $$0326$us$i = 0;$$0335$us$i = 0;
      while(1) {
       $$03$us$i = 0;$$0312$us$i = Math_fround(-1.0);$$1341$us$i = $$0335$us$i;
       while(1) {
        $268 = (($134) + ($$03$us$i<<2)|0);
        $269 = Math_fround(HEAPF32[$268>>2]);
        $270 = (Math_fround(Math_abs((Math_fround($269)))));
        $271 = $270 > $$0312$us$i;
        $$2$us$i = $271 ? $$03$us$i : $$1341$us$i;
        $$1$us$i = $271 ? $270 : $$0312$us$i;
        $272 = (($$03$us$i) + 1)|0;
        $exitcond$i = ($272|0)==($159|0);
        if ($exitcond$i) {
         break;
        } else {
         $$03$us$i = $272;$$0312$us$i = $$1$us$i;$$1341$us$i = $$2$us$i;
        }
       }
       $273 = !($$1$us$i <= Math_fround(3.99900007));
       if (!($273)) {
        break L32;
       }
       $256 = (Math_fround(($$0326$us$i|0)));
       $257 = Math_fround($256 * Math_fround(0.100000001));
       $258 = Math_fround($257 + Math_fround(0.800000011));
       $259 = Math_fround($$1$us$i + Math_fround(-3.99900007));
       $260 = Math_fround($258 * $259);
       $261 = (($$2$us$i) + 1)|0;
       $262 = (Math_fround(($261|0)));
       $263 = Math_fround($$1$us$i * $262);
       $264 = Math_fround($260 / $263);
       $265 = Math_fround(Math_fround(0.990000009) - $264);
       _silk_bwexpander_FLP($134,$159,$265);
       $266 = (($$0326$us$i) + 1)|0;
       $267 = ($266>>>0)<(10);
       if ($267) {
        $$0326$us$i = $266;$$0335$us$i = $$2$us$i;
       } else {
        break;
       }
      }
     }
    }
   } while(0);
   $274 = (($$1239) + 1)|0;
   $275 = HEAP32[$$pre$phiZ2D>>2]|0;
   $276 = ($274|0)<($275|0);
   if ($276) {
    $$0209238 = $121;$$1239 = $274;
   } else {
    break;
   }
  }
  $277 = Math_fround($$1206220 * Math_fround(-0.159999996));
  $278 = +$277;
  $exp2 = (+_llvm_exp2_f64((+$278)));
  $279 = Math_fround($exp2);
  $280 = ($275|0)>(0);
  if ($280) {
   $$2232 = 0;
   while(1) {
    $281 = (($1) + ($$2232<<2)|0);
    $282 = Math_fround(HEAPF32[$281>>2]);
    $283 = Math_fround($282 * $279);
    $284 = Math_fround($283 + Math_fround(1.24833059));
    HEAPF32[$281>>2] = $284;
    $285 = (($$2232) + 1)|0;
    $exitcond256 = ($285|0)==($275|0);
    if ($exitcond256) {
     $$lcssa223263 = $275;$363 = $280;
     break;
    } else {
     $$2232 = $285;
    }
   }
  } else {
   $$lcssa223263 = $275;$363 = 0;
  }
 } else {
  $$lcssa223263 = $101;$363 = 0;
 }
 $286 = HEAP32[$15>>2]|0;
 $287 = (Math_fround(($286|0)));
 $288 = Math_fround($287 * Math_fround(3.05175781E-5));
 $289 = Math_fround($288 + Math_fround(-1.0));
 $290 = Math_fround($289 * Math_fround(0.5));
 $291 = Math_fround($290 + Math_fround(1.0));
 $292 = Math_fround($291 * Math_fround(4.0));
 $293 = ((($0)) + 4528|0);
 $294 = HEAP32[$293>>2]|0;
 $295 = (Math_fround(($294|0)));
 $296 = Math_fround($295 * Math_fround(0.00390625));
 $297 = Math_fround($296 * $292);
 $298 = HEAP8[$48>>0]|0;
 $299 = ($298<<24>>24)==(2);
 if ($299) {
  if ($363) {
   $300 = ((($0)) + 4572|0);
   $301 = HEAP32[$300>>2]|0;
   $302 = (Math_fround(($301|0)));
   $303 = Math_fround(Math_fround(0.200000003) / $302);
   $$3225 = 0;
   while(1) {
    $304 = (((($1)) + 228|0) + ($$3225<<2)|0);
    $305 = HEAP32[$304>>2]|0;
    $306 = (Math_fround(($305|0)));
    $307 = Math_fround(Math_fround(3.0) / $306);
    $308 = Math_fround($303 + $307);
    $309 = Math_fround($308 + Math_fround(-1.0));
    $310 = (((($1)) + 628|0) + ($$3225<<2)|0);
    HEAPF32[$310>>2] = $309;
    $311 = Math_fround(Math_fround(1.0) - $308);
    $312 = Math_fround($297 * $308);
    $313 = Math_fround($311 - $312);
    $314 = (((($1)) + 644|0) + ($$3225<<2)|0);
    HEAPF32[$314>>2] = $313;
    $315 = (($$3225) + 1)|0;
    $exitcond254 = ($315|0)==($$lcssa223263|0);
    if ($exitcond254) {
     break;
    } else {
     $$3225 = $315;
    }
   }
  }
  $316 = Math_fround($295 * Math_fround(0.262499988));
  $317 = Math_fround($316 * Math_fround(0.00390625));
  $318 = Math_fround(Math_fround(-0.25) - $317);
  $$0210 = $318;
  label = 73;
 } else {
  $319 = ((($0)) + 4572|0);
  $320 = HEAP32[$319>>2]|0;
  $321 = (Math_fround(($320|0)));
  $322 = Math_fround(Math_fround(1.29999995) / $321);
  $323 = Math_fround($322 + Math_fround(-1.0));
  $324 = ((($1)) + 628|0);
  HEAPF32[$324>>2] = $323;
  $325 = Math_fround(Math_fround(1.0) - $322);
  $326 = Math_fround($297 * $322);
  $327 = Math_fround($326 * Math_fround(0.600000024));
  $328 = Math_fround($325 - $327);
  $329 = ((($1)) + 644|0);
  HEAPF32[$329>>2] = $328;
  $330 = ($$lcssa223263|0)>(1);
  if ($330) {
   $331 = ((($1)) + 632|0);
   HEAPF32[$331>>2] = $323;
   $332 = HEAP32[$329>>2]|0;
   $333 = ((($1)) + 648|0);
   HEAP32[$333>>2] = $332;
   $exitcond255271 = ($$lcssa223263|0)==(2);
   if ($exitcond255271) {
    $$0210 = Math_fround(-0.25);
    label = 73;
   } else {
    $335 = 2;
    while(1) {
     $$pre260 = HEAP32[$324>>2]|0;
     $334 = (((($1)) + 628|0) + ($335<<2)|0);
     HEAP32[$334>>2] = $$pre260;
     $336 = HEAP32[$329>>2]|0;
     $337 = (((($1)) + 644|0) + ($335<<2)|0);
     HEAP32[$337>>2] = $336;
     $338 = (($335) + 1)|0;
     $exitcond255 = ($338|0)==($$lcssa223263|0);
     if ($exitcond255) {
      $$0210 = Math_fround(-0.25);
      label = 73;
      break;
     } else {
      $335 = $338;
     }
    }
   }
  } else {
   $$0207 = Math_fround(0.0);$$0210264 = Math_fround(-0.25);
  }
 }
 if ((label|0) == 73) {
  if ($299) {
   $339 = Math_fround(HEAPF32[$32>>2]);
   $340 = Math_fround(Math_fround(1.0) - $339);
   $341 = Math_fround(HEAPF32[$23>>2]);
   $342 = Math_fround($340 * $341);
   $343 = Math_fround(Math_fround(1.0) - $342);
   $344 = Math_fround($343 * Math_fround(0.200000003));
   $345 = Math_fround($344 + Math_fround(0.300000012));
   $346 = ((($0)) + 10056|0);
   $347 = Math_fround(HEAPF32[$346>>2]);
   $348 = (Math_fround(Math_sqrt((Math_fround($347)))));
   $349 = Math_fround($348 * $345);
   $$0207 = $349;$$0210264 = $$0210;
  } else {
   $$0207 = Math_fround(0.0);$$0210264 = $$0210;
  }
 }
 if (!($363)) {
  STACKTOP = sp;return;
 }
 $350 = ((($0)) + 7168|0);
 $351 = ((($0)) + 7172|0);
 $$5224 = 0;
 while(1) {
  $352 = Math_fround(HEAPF32[$350>>2]);
  $353 = Math_fround($$0207 - $352);
  $354 = Math_fround($353 * Math_fround(0.400000006));
  $355 = Math_fround($352 + $354);
  HEAPF32[$350>>2] = $355;
  $356 = (((($1)) + 676|0) + ($$5224<<2)|0);
  HEAPF32[$356>>2] = $355;
  $357 = Math_fround(HEAPF32[$351>>2]);
  $358 = Math_fround($$0210264 - $357);
  $359 = Math_fround($358 * Math_fround(0.400000006));
  $360 = Math_fround($357 + $359);
  HEAPF32[$351>>2] = $360;
  $361 = (((($1)) + 660|0) + ($$5224<<2)|0);
  HEAPF32[$361>>2] = $360;
  $362 = (($$5224) + 1)|0;
  $exitcond = ($362|0)==($$lcssa223263|0);
  if ($exitcond) {
   break;
  } else {
   $$5224 = $362;
  }
 }
 STACKTOP = sp;return;
}
function _silk_process_gains_FLP($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$077 = 0, $$172 = 0, $$268 = 0, $$367 = 0, $$phi$trans$insert = 0, $$phi$trans$insert80 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre81 = 0, $10 = Math_fround(0), $100 = Math_fround(0), $101 = 0, $102 = 0, $103 = Math_fround(0), $104 = Math_fround(0), $105 = Math_fround(0), $106 = Math_fround(0), $107 = 0, $108 = Math_fround(0), $109 = Math_fround(0);
 var $11 = Math_fround(0), $110 = Math_fround(0), $111 = 0, $112 = Math_fround(0), $113 = Math_fround(0), $114 = Math_fround(0), $115 = Math_fround(0), $116 = Math_fround(0), $117 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = Math_fround(0), $17 = Math_fround(0), $18 = Math_fround(0), $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = Math_fround(0), $24 = Math_fround(0), $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = Math_fround(0), $3 = 0, $30 = Math_fround(0), $31 = Math_fround(0), $32 = Math_fround(0), $33 = 0.0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = Math_fround(0), $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = Math_fround(0), $43 = Math_fround(0), $44 = 0, $45 = Math_fround(0), $46 = Math_fround(0), $47 = Math_fround(0), $48 = Math_fround(0), $49 = 0, $5 = 0, $50 = Math_fround(0), $51 = 0, $52 = 0, $53 = 0, $54 = Math_fround(0), $55 = Math_fround(0), $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = Math_fround(0), $73 = Math_fround(0), $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = Math_fround(0), $80 = Math_fround(0), $81 = 0, $82 = 0, $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = Math_fround(0), $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = Math_fround(0), $95 = Math_fround(0);
 var $96 = 0, $97 = 0, $98 = Math_fround(0), $99 = Math_fround(0), $exitcond = 0, $exp2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ((($0)) + 4761|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)==(2);
 if ($6) {
  $7 = ((($1)) + 708|0);
  $8 = Math_fround(HEAPF32[$7>>2]);
  $9 = Math_fround($8 + Math_fround(-12.0));
  $10 = Math_fround($9 * Math_fround(0.25));
  $11 = Math_fround(- $10);
  $12 = +$11;
  $13 = (+_exp($12));
  $14 = $13 + 1.0;
  $15 = 1.0 / $14;
  $16 = Math_fround($15);
  $17 = Math_fround($16 * Math_fround(0.5));
  $18 = Math_fround(Math_fround(1.0) - $17);
  $19 = ((($0)) + 4576|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)>(0);
  if ($21) {
   $$077 = 0;
   while(1) {
    $22 = (($1) + ($$077<<2)|0);
    $23 = Math_fround(HEAPF32[$22>>2]);
    $24 = Math_fround($18 * $23);
    HEAPF32[$22>>2] = $24;
    $25 = (($$077) + 1)|0;
    $26 = ($25|0)<($20|0);
    if ($26) {
     $$077 = $25;
    } else {
     $$pre$phiZ2D = $19;$40 = $20;
     break;
    }
   }
  } else {
   $$pre$phiZ2D = $19;$40 = $20;
  }
 } else {
  $$phi$trans$insert = ((($0)) + 4576|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$pre$phiZ2D = $$phi$trans$insert;$40 = $$pre;
 }
 $27 = ((($0)) + 4712|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (Math_fround(($28|0)));
 $30 = Math_fround($29 * Math_fround(0.0078125));
 $31 = Math_fround(Math_fround(21.0) - $30);
 $32 = Math_fround($31 * Math_fround(0.330000013));
 $33 = +$32;
 $exp2 = (+_llvm_exp2_f64((+$33)));
 $34 = ((($0)) + 4584|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = (+($35|0));
 $37 = $exp2 / $36;
 $38 = Math_fround($37);
 $39 = ($40|0)>(0);
 if ($39) {
  $$172 = 0;
  while(1) {
   $41 = (($1) + ($$172<<2)|0);
   $42 = Math_fround(HEAPF32[$41>>2]);
   $43 = Math_fround($42 * $42);
   $44 = (((($1)) + 712|0) + ($$172<<2)|0);
   $45 = Math_fround(HEAPF32[$44>>2]);
   $46 = Math_fround($45 * $38);
   $47 = Math_fround($43 + $46);
   $48 = (Math_fround(Math_sqrt((Math_fround($47)))));
   $49 = $48 < Math_fround(32767.0);
   $50 = $49 ? $48 : Math_fround(32767.0);
   HEAPF32[$41>>2] = $50;
   $51 = (($$172) + 1)|0;
   $52 = ($51|0)<($40|0);
   if ($52) {
    $$172 = $51;
   } else {
    break;
   }
  }
  if ($39) {
   $$268 = 0;
   while(1) {
    $53 = (($1) + ($$268<<2)|0);
    $54 = Math_fround(HEAPF32[$53>>2]);
    $55 = Math_fround($54 * Math_fround(65536.0));
    $56 = (~~(($55)));
    $57 = (($3) + ($$268<<2)|0);
    HEAP32[$57>>2] = $56;
    $58 = (($$268) + 1)|0;
    $exitcond = ($58|0)==($40|0);
    if ($exitcond) {
     break;
    } else {
     $$268 = $58;
    }
   }
  }
 }
 $59 = ((($1)) + 728|0);
 $60 = $40 << 2;
 _memcpy(($59|0),($3|0),($60|0))|0;
 $61 = ((($0)) + 7164|0);
 $62 = HEAP8[$61>>0]|0;
 $63 = ((($1)) + 744|0);
 HEAP8[$63>>0] = $62;
 $64 = ((($0)) + 4732|0);
 $65 = ($2|0)==(2);
 $66 = $65&1;
 $67 = HEAP32[$$pre$phiZ2D>>2]|0;
 _silk_gains_quant($64,$3,$61,$66,$67);
 $68 = HEAP32[$$pre$phiZ2D>>2]|0;
 $69 = ($68|0)>(0);
 if ($69) {
  $$367 = 0;
  while(1) {
   $70 = (($3) + ($$367<<2)|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = (Math_fround(($71|0)));
   $73 = Math_fround($72 * Math_fround(1.52587891E-5));
   $74 = (($1) + ($$367<<2)|0);
   HEAPF32[$74>>2] = $73;
   $75 = (($$367) + 1)|0;
   $76 = ($75|0)<($68|0);
   if ($76) {
    $$367 = $75;
   } else {
    break;
   }
  }
 }
 $77 = HEAP8[$4>>0]|0;
 $78 = ($77<<24>>24)==(2);
 do {
  if ($78) {
   $79 = ((($1)) + 708|0);
   $80 = Math_fround(HEAPF32[$79>>2]);
   $81 = ((($0)) + 4708|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = (Math_fround(($82|0)));
   $84 = Math_fround($83 * Math_fround(3.05175781E-5));
   $85 = Math_fround($80 + $84);
   $86 = $85 > Math_fround(1.0);
   $87 = ((($0)) + 4762|0);
   if ($86) {
    HEAP8[$87>>0] = 0;
    $91 = 0;
    break;
   } else {
    HEAP8[$87>>0] = 1;
    $91 = 1;
    break;
   }
  } else {
   $$phi$trans$insert80 = ((($0)) + 4762|0);
   $$pre81 = HEAP8[$$phi$trans$insert80>>0]|0;
   $91 = $$pre81;
  }
 } while(0);
 $88 = $77 << 24 >> 24;
 $89 = $88 >> 1;
 $90 = $91 << 24 >> 24;
 $92 = ((37356 + ($89<<2)|0) + ($90<<1)|0);
 $93 = HEAP16[$92>>1]|0;
 $94 = (Math_fround(($93<<16>>16)));
 $95 = Math_fround($94 * Math_fround(9.765625E-4));
 $96 = ((($0)) + 4624|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = (Math_fround(($97|0)));
 $99 = Math_fround($98 * Math_fround(0.0500000007));
 $100 = Math_fround(Math_fround(1.20000005) - $99);
 $101 = ((($0)) + 4528|0);
 $102 = HEAP32[$101>>2]|0;
 $103 = (Math_fround(($102|0)));
 $104 = Math_fround($103 * Math_fround(-0.200000003));
 $105 = Math_fround($104 * Math_fround(0.00390625));
 $106 = Math_fround($100 + $105);
 $107 = ((($1)) + 696|0);
 $108 = Math_fround(HEAPF32[$107>>2]);
 $109 = Math_fround($108 * Math_fround(0.100000001));
 $110 = Math_fround($106 - $109);
 $111 = ((($1)) + 700|0);
 $112 = Math_fround(HEAPF32[$111>>2]);
 $113 = Math_fround($112 * Math_fround(0.200000003));
 $114 = Math_fround($110 - $113);
 $115 = Math_fround($95 * Math_fround(0.800000011));
 $116 = Math_fround($115 + $114);
 $117 = ((($1)) + 692|0);
 HEAPF32[$117>>2] = $116;
 STACKTOP = sp;return;
}
function _silk_residual_energy_FLP($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = Math_fround(0), $12 = Math_fround(0), $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = Math_fround(0), $17 = 0, $18 = Math_fround(0), $19 = Math_fround(0), $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = Math_fround(0), $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = Math_fround(0), $31 = Math_fround(0), $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = Math_fround(0), $36 = 0, $37 = 0, $38 = Math_fround(0), $39 = Math_fround(0), $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = Math_fround(0), $44 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 768|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(768|0);
 $7 = sp;
 $8 = (($7) + ($6<<2)|0);
 $9 = (($6) + ($4))|0;
 $10 = $9 << 1;
 _silk_LPC_analysis_filter_FLP($7,$2,$1,$10,$6);
 $11 = Math_fround(HEAPF32[$3>>2]);
 $12 = Math_fround($11 * $11);
 $13 = +$12;
 $14 = (+_silk_energy_FLP($8,$4));
 $15 = $14 * $13;
 $16 = Math_fround($15);
 HEAPF32[$0>>2] = $16;
 $17 = ((($3)) + 4|0);
 $18 = Math_fround(HEAPF32[$17>>2]);
 $19 = Math_fround($18 * $18);
 $20 = +$19;
 $21 = (($8) + ($9<<2)|0);
 $22 = (+_silk_energy_FLP($21,$4));
 $23 = $22 * $20;
 $24 = Math_fround($23);
 $25 = ((($0)) + 4|0);
 HEAPF32[$25>>2] = $24;
 $26 = ($5|0)==(4);
 if (!($26)) {
  STACKTOP = sp;return;
 }
 $27 = ((($2)) + 64|0);
 $28 = (($1) + ($10<<2)|0);
 _silk_LPC_analysis_filter_FLP($7,$27,$28,$10,$6);
 $29 = ((($3)) + 8|0);
 $30 = Math_fround(HEAPF32[$29>>2]);
 $31 = Math_fround($30 * $30);
 $32 = +$31;
 $33 = (+_silk_energy_FLP($8,$4));
 $34 = $33 * $32;
 $35 = Math_fround($34);
 $36 = ((($0)) + 8|0);
 HEAPF32[$36>>2] = $35;
 $37 = ((($3)) + 12|0);
 $38 = Math_fround(HEAPF32[$37>>2]);
 $39 = Math_fround($38 * $38);
 $40 = +$39;
 $41 = (+_silk_energy_FLP($21,$4));
 $42 = $41 * $40;
 $43 = Math_fround($42);
 $44 = ((($0)) + 12|0);
 HEAPF32[$44>>2] = $43;
 STACKTOP = sp;return;
}
function _silk_warped_autocorrelation_FLP($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = Math_fround($2);
 $3 = $3|0;
 $4 = $4|0;
 var $$04044$us = 0.0, $$04143$us = 0, $$048 = 0, $$048$us = 0, $$142 = 0, $$pre = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = Math_fround(0), $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0;
 var $24 = 0.0, $25 = 0, $26 = 0.0, $27 = 0.0, $28 = 0, $29 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0;
 var $44 = 0, $45 = Math_fround(0), $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = Math_fround(0), $56 = 0, $57 = 0, $58 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0;
 var $exitcond = 0, $exitcond53 = 0, $exitcond54 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(416|0);
 $5 = sp + 208|0;
 $6 = sp;
 _memset(($5|0),0,200)|0;
 _memset(($6|0),0,200)|0;
 $7 = ($3|0)>(0);
 do {
  if ($7) {
   $8 = ($4|0)>(0);
   $9 = +$2;
   $10 = (($5) + ($4<<3)|0);
   $11 = (($6) + ($4<<3)|0);
   if (!($8)) {
    $$pre = +HEAPF64[$11>>3];
    $$048 = 0;$50 = $$pre;
    while(1) {
     $44 = (($1) + ($$048<<2)|0);
     $45 = Math_fround(HEAPF32[$44>>2]);
     $46 = +$45;
     HEAPF64[$10>>3] = $46;
     $47 = +HEAPF64[$5>>3];
     $48 = $47 * $46;
     $49 = $50 + $48;
     $51 = (($$048) + 1)|0;
     $exitcond54 = ($51|0)==($3|0);
     if ($exitcond54) {
      break;
     } else {
      $$048 = $51;$50 = $49;
     }
    }
    HEAPF64[$11>>3] = $49;
    break;
   }
   $$048$us = 0;$58 = 0.0;
   while(1) {
    $12 = (($1) + ($$048$us<<2)|0);
    $13 = Math_fround(HEAPF32[$12>>2]);
    $14 = +$13;
    $$04044$us = $14;$$04143$us = 0;$22 = $58;
    while(1) {
     $15 = (($5) + ($$04143$us<<3)|0);
     $16 = $$04143$us | 1;
     $17 = (($5) + ($16<<3)|0);
     $18 = +HEAPF64[$17>>3];
     $19 = $18 - $$04044$us;
     $20 = $19 * $9;
     $21 = $22 + $20;
     HEAPF64[$15>>3] = $$04044$us;
     $23 = +HEAPF64[$5>>3];
     $24 = $$04044$us * $23;
     $25 = (($6) + ($$04143$us<<3)|0);
     $26 = +HEAPF64[$25>>3];
     $27 = $26 + $24;
     HEAPF64[$25>>3] = $27;
     $28 = (($$04143$us) + 2)|0;
     $29 = (($5) + ($28<<3)|0);
     $30 = +HEAPF64[$29>>3];
     $31 = $30 - $21;
     $32 = $31 * $9;
     $33 = $18 + $32;
     HEAPF64[$17>>3] = $21;
     $34 = $23 * $21;
     $35 = (($6) + ($16<<3)|0);
     $36 = +HEAPF64[$35>>3];
     $37 = $34 + $36;
     HEAPF64[$35>>3] = $37;
     $38 = ($28|0)<($4|0);
     if ($38) {
      $$04044$us = $33;$$04143$us = $28;$22 = $30;
     } else {
      break;
     }
    }
    HEAPF64[$10>>3] = $33;
    $39 = +HEAPF64[$5>>3];
    $40 = $33 * $39;
    $41 = +HEAPF64[$11>>3];
    $42 = $41 + $40;
    HEAPF64[$11>>3] = $42;
    $43 = (($$048$us) + 1)|0;
    $exitcond53 = ($43|0)==($3|0);
    if ($exitcond53) {
     break;
    } else {
     $$048$us = $43;$58 = $39;
    }
   }
  }
 } while(0);
 $52 = ($4|0)<(0);
 if ($52) {
  STACKTOP = sp;return;
 }
 $$142 = 0;
 while(1) {
  $53 = (($6) + ($$142<<3)|0);
  $54 = +HEAPF64[$53>>3];
  $55 = Math_fround($54);
  $56 = (($0) + ($$142<<2)|0);
  HEAPF32[$56>>2] = $55;
  $57 = (($$142) + 1)|0;
  $exitcond = ($$142|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$142 = $57;
  }
 }
 STACKTOP = sp;return;
}
function _silk_A2NLSF_FLP($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$08 = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = Math_fround(0), $7 = Math_fround(0), $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $3 = sp;
 $4 = ($2|0)>(0);
 if (!($4)) {
  _silk_A2NLSF($0,$3,$2);
  STACKTOP = sp;return;
 }
 $$08 = 0;
 while(1) {
  $5 = (($1) + ($$08<<2)|0);
  $6 = Math_fround(HEAPF32[$5>>2]);
  $7 = Math_fround($6 * Math_fround(65536.0));
  $8 = (_lrintf($7)|0);
  $9 = (($3) + ($$08<<2)|0);
  HEAP32[$9>>2] = $8;
  $10 = (($$08) + 1)|0;
  $exitcond = ($10|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $$08 = $10;
  }
 }
 _silk_A2NLSF($0,$3,$2);
 STACKTOP = sp;return;
}
function _silk_NLSF2A_FLP($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$09 = 0, $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 _silk_NLSF2A($4,$1,$2,$3);
 $5 = ($2|0)>(0);
 if (!($5)) {
  STACKTOP = sp;return;
 }
 $$09 = 0;
 while(1) {
  $6 = (($4) + ($$09<<1)|0);
  $7 = HEAP16[$6>>1]|0;
  $8 = (Math_fround(($7<<16>>16)));
  $9 = Math_fround($8 * Math_fround(2.44140625E-4));
  $10 = (($0) + ($$09<<2)|0);
  HEAPF32[$10>>2] = $9;
  $11 = (($$09) + 1)|0;
  $exitcond = ($11|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $$09 = $11;
  }
 }
 STACKTOP = sp;return;
}
function _silk_process_NLSFs_FLP($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$01415$us = 0, $$01415$us$1 = 0, $10 = Math_fround(0), $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = Math_fround(0), $18 = Math_fround(0), $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp;
 _silk_process_NLSFs($0,$4,$2,$3);
 $5 = ((($0)) + 4636|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)>(0);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $$01415$us = 0;
 while(1) {
  $8 = (($4) + ($$01415$us<<1)|0);
  $9 = HEAP16[$8>>1]|0;
  $10 = (Math_fround(($9<<16>>16)));
  $11 = Math_fround($10 * Math_fround(2.44140625E-4));
  $12 = (($1) + ($$01415$us<<2)|0);
  HEAPF32[$12>>2] = $11;
  $13 = (($$01415$us) + 1)|0;
  $14 = ($13|0)<($6|0);
  if ($14) {
   $$01415$us = $13;
  } else {
   break;
  }
 }
 $$01415$us$1 = 0;
 while(1) {
  $15 = (((($4)) + 32|0) + ($$01415$us$1<<1)|0);
  $16 = HEAP16[$15>>1]|0;
  $17 = (Math_fround(($16<<16>>16)));
  $18 = Math_fround($17 * Math_fround(2.44140625E-4));
  $19 = (((($1)) + 64|0) + ($$01415$us$1<<2)|0);
  HEAPF32[$19>>2] = $18;
  $20 = (($$01415$us$1) + 1)|0;
  $21 = ($20|0)<($6|0);
  if ($21) {
   $$01415$us$1 = $20;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _silk_NSQ_wrapper_FLP($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0106$us = 0, $$079 = 0, $$080102$us = 0, $$198 = 0, $$294 = 0, $$388$us = 0, $$388$us$1 = 0, $$484 = 0, $$583 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = Math_fround(0), $114 = Math_fround(0), $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = Math_fround(0), $24 = Math_fround(0), $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = Math_fround(0), $34 = Math_fround(0), $35 = 0, $36 = 0, $37 = 0, $38 = Math_fround(0), $39 = Math_fround(0), $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = Math_fround(0), $46 = Math_fround(0), $47 = 0, $48 = 0, $49 = 0, $50 = Math_fround(0), $51 = Math_fround(0), $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = Math_fround(0), $57 = Math_fround(0), $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = Math_fround(0), $62 = Math_fround(0), $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = Math_fround(0), $73 = Math_fround(0), $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = Math_fround(0), $81 = Math_fround(0), $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = Math_fround(0), $99 = 0, $exitcond = 0, $exitcond115 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1008|0);
 $6 = sp + 368|0;
 $7 = sp + 352|0;
 $8 = sp + 288|0;
 $9 = sp + 240|0;
 $10 = sp + 48|0;
 $11 = sp + 32|0;
 $12 = sp + 16|0;
 $13 = sp;
 $14 = ((($0)) + 4576|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)>(0);
 do {
  if ($16) {
   $17 = ((($0)) + 4632|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($18|0)>(0);
   if ($19) {
    $$0106$us = 0;
    while(1) {
     $20 = ($$0106$us*24)|0;
     $$080102$us = 0;
     while(1) {
      $21 = (($$080102$us) + ($20))|0;
      $22 = (((($1)) + 244|0) + ($21<<2)|0);
      $23 = Math_fround(HEAPF32[$22>>2]);
      $24 = Math_fround($23 * Math_fround(8192.0));
      $25 = (_lrintf($24)|0);
      $26 = $25&65535;
      $27 = (($10) + ($21<<1)|0);
      HEAP16[$27>>1] = $26;
      $28 = (($$080102$us) + 1)|0;
      $29 = ($28|0)<($18|0);
      if ($29) {
       $$080102$us = $28;
      } else {
       break;
      }
     }
     $30 = (($$0106$us) + 1)|0;
     $31 = ($30|0)<($15|0);
     if ($31) {
      $$0106$us = $30;
     } else {
      break;
     }
    }
    if (!($16)) {
     break;
    }
   }
   $$198 = 0;
   while(1) {
    $32 = (((($1)) + 644|0) + ($$198<<2)|0);
    $33 = Math_fround(HEAPF32[$32>>2]);
    $34 = Math_fround($33 * Math_fround(16384.0));
    $35 = (_lrintf($34)|0);
    $36 = $35 << 16;
    $37 = (((($1)) + 628|0) + ($$198<<2)|0);
    $38 = Math_fround(HEAPF32[$37>>2]);
    $39 = Math_fround($38 * Math_fround(16384.0));
    $40 = (_lrintf($39)|0);
    $41 = $40 & 65535;
    $42 = $41 | $36;
    $43 = (($11) + ($$198<<2)|0);
    HEAP32[$43>>2] = $42;
    $44 = (((($1)) + 660|0) + ($$198<<2)|0);
    $45 = Math_fround(HEAPF32[$44>>2]);
    $46 = Math_fround($45 * Math_fround(16384.0));
    $47 = (_lrintf($46)|0);
    $48 = (($12) + ($$198<<2)|0);
    HEAP32[$48>>2] = $47;
    $49 = (((($1)) + 676|0) + ($$198<<2)|0);
    $50 = Math_fround(HEAPF32[$49>>2]);
    $51 = Math_fround($50 * Math_fround(16384.0));
    $52 = (_lrintf($51)|0);
    $53 = (($13) + ($$198<<2)|0);
    HEAP32[$53>>2] = $52;
    $54 = (($$198) + 1)|0;
    $exitcond115 = ($54|0)==($15|0);
    if ($exitcond115) {
     break;
    } else {
     $$198 = $54;
    }
   }
  }
 } while(0);
 $55 = ((($1)) + 692|0);
 $56 = Math_fround(HEAPF32[$55>>2]);
 $57 = Math_fround($56 * Math_fround(1024.0));
 $58 = (_lrintf($57)|0);
 $59 = ($15*5)|0;
 if ($16) {
  $$294 = 0;
  while(1) {
   $60 = (((($1)) + 144|0) + ($$294<<2)|0);
   $61 = Math_fround(HEAPF32[$60>>2]);
   $62 = Math_fround($61 * Math_fround(16384.0));
   $63 = (_lrintf($62)|0);
   $64 = $63&65535;
   $65 = (($9) + ($$294<<1)|0);
   HEAP16[$65>>1] = $64;
   $66 = (($$294) + 1)|0;
   $67 = ($66|0)<($59|0);
   if ($67) {
    $$294 = $66;
   } else {
    break;
   }
  }
 }
 $68 = ((($0)) + 4636|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = ($69|0)>(0);
 if ($70) {
  $$388$us = 0;
  while(1) {
   $71 = (((($1)) + 16|0) + ($$388$us<<2)|0);
   $72 = Math_fround(HEAPF32[$71>>2]);
   $73 = Math_fround($72 * Math_fround(4096.0));
   $74 = (_lrintf($73)|0);
   $75 = $74&65535;
   $76 = (($8) + ($$388$us<<1)|0);
   HEAP16[$76>>1] = $75;
   $77 = (($$388$us) + 1)|0;
   $78 = ($77|0)<($69|0);
   if ($78) {
    $$388$us = $77;
   } else {
    break;
   }
  }
  $$388$us$1 = 0;
  while(1) {
   $112 = (((($1)) + 80|0) + ($$388$us$1<<2)|0);
   $113 = Math_fround(HEAPF32[$112>>2]);
   $114 = Math_fround($113 * Math_fround(4096.0));
   $115 = (_lrintf($114)|0);
   $116 = $115&65535;
   $117 = (((($8)) + 32|0) + ($$388$us$1<<1)|0);
   HEAP16[$117>>1] = $116;
   $118 = (($$388$us$1) + 1)|0;
   $119 = ($118|0)<($69|0);
   if ($119) {
    $$388$us$1 = $118;
   } else {
    break;
   }
  }
 }
 if ($16) {
  $$484 = 0;
  while(1) {
   $79 = (($1) + ($$484<<2)|0);
   $80 = Math_fround(HEAPF32[$79>>2]);
   $81 = Math_fround($80 * Math_fround(65536.0));
   $82 = (_lrintf($81)|0);
   $83 = (($7) + ($$484<<2)|0);
   HEAP32[$83>>2] = $82;
   $84 = (($$484) + 1)|0;
   $exitcond = ($84|0)==($15|0);
   if ($exitcond) {
    break;
   } else {
    $$484 = $84;
   }
  }
 }
 $85 = ((($2)) + 29|0);
 $86 = HEAP8[$85>>0]|0;
 $87 = ($86<<24>>24)==(2);
 if ($87) {
  $88 = ((($2)) + 33|0);
  $89 = HEAP8[$88>>0]|0;
  $90 = $89 << 24 >> 24;
  $91 = (37364 + ($90<<1)|0);
  $92 = HEAP16[$91>>1]|0;
  $93 = $92 << 16 >> 16;
  $$079 = $93;
 } else {
  $$079 = 0;
 }
 $94 = ((($0)) + 4580|0);
 $95 = HEAP32[$94>>2]|0;
 $96 = ($95|0)>(0);
 if ($96) {
  $$583 = 0;
  while(1) {
   $97 = (($5) + ($$583<<2)|0);
   $98 = Math_fround(HEAPF32[$97>>2]);
   $99 = (_lrintf($98)|0);
   $100 = $99&65535;
   $101 = (($6) + ($$583<<1)|0);
   HEAP16[$101>>1] = $100;
   $102 = (($$583) + 1)|0;
   $103 = ($102|0)<($95|0);
   if ($103) {
    $$583 = $102;
   } else {
    break;
   }
  }
 }
 $104 = ((($0)) + 4624|0);
 $105 = HEAP32[$104>>2]|0;
 $106 = ($105|0)>(1);
 if (!($106)) {
  $107 = ((($0)) + 4668|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($108|0)>(0);
  if (!($109)) {
   $111 = ((($1)) + 228|0);
   _silk_NSQ_c($0,$3,$2,$6,$4,$8,$9,$10,$13,$12,$11,$7,$111,$58,$$079);
   STACKTOP = sp;return;
  }
 }
 $110 = ((($1)) + 228|0);
 _silk_NSQ_del_dec_c($0,$3,$2,$6,$4,$8,$9,$10,$13,$12,$11,$7,$110,$58,$$079);
 STACKTOP = sp;return;
}
function _silk_quant_LTP_gains_FLP($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$030 = 0, $$126 = 0, $$225 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = Math_fround(0), $19 = Math_fround(0), $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = Math_fround(0), $26 = Math_fround(0);
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = Math_fround(0), $34 = Math_fround(0), $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = Math_fround(0), $40 = Math_fround(0), $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 528|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(528|0);
 $10 = sp + 520|0;
 $11 = sp + 480|0;
 $12 = sp + 80|0;
 $13 = sp;
 $14 = ($8*5)|0;
 $15 = ($8*25)|0;
 $16 = ($15|0)>(0);
 if ($16) {
  $$030 = 0;
  while(1) {
   $17 = (($5) + ($$030<<2)|0);
   $18 = Math_fround(HEAPF32[$17>>2]);
   $19 = Math_fround($18 * Math_fround(131072.0));
   $20 = (_lrintf($19)|0);
   $21 = (($12) + ($$030<<2)|0);
   HEAP32[$21>>2] = $20;
   $22 = (($$030) + 1)|0;
   $exitcond = ($22|0)==($15|0);
   if ($exitcond) {
    break;
   } else {
    $$030 = $22;
   }
  }
 }
 $23 = ($8|0)>(0);
 if ($23) {
  $$126 = 0;
  while(1) {
   $24 = (($6) + ($$126<<2)|0);
   $25 = Math_fround(HEAPF32[$24>>2]);
   $26 = Math_fround($25 * Math_fround(131072.0));
   $27 = (_lrintf($26)|0);
   $28 = (($13) + ($$126<<2)|0);
   HEAP32[$28>>2] = $27;
   $29 = (($$126) + 1)|0;
   $30 = ($29|0)<($14|0);
   if ($30) {
    $$126 = $29;
   } else {
    break;
   }
  }
  _silk_quant_LTP_gains($11,$1,$2,$3,$10,$12,$13,$7,$8,$9);
  if ($23) {
   $$225 = 0;
   while(1) {
    $31 = (($11) + ($$225<<1)|0);
    $32 = HEAP16[$31>>1]|0;
    $33 = (Math_fround(($32<<16>>16)));
    $34 = Math_fround($33 * Math_fround(6.10351563E-5));
    $35 = (($0) + ($$225<<2)|0);
    HEAPF32[$35>>2] = $34;
    $36 = (($$225) + 1)|0;
    $37 = ($36|0)<($14|0);
    if ($37) {
     $$225 = $36;
    } else {
     break;
    }
   }
  }
 } else {
  _silk_quant_LTP_gains($11,$1,$2,$3,$10,$12,$13,$7,$8,$9);
 }
 $38 = HEAP32[$10>>2]|0;
 $39 = (Math_fround(($38|0)));
 $40 = Math_fround($39 * Math_fround(0.0078125));
 HEAPF32[$4>>2] = $40;
 STACKTOP = sp;return;
}
function _silk_autocorrelation_FLP($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$014 = 0, $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = Math_fround(0), $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($3|0)>($2|0);
 $spec$select = $4 ? $2 : $3;
 $5 = ($spec$select|0)>(0);
 if (!($5)) {
  return;
 }
 $$014 = 0;
 while(1) {
  $6 = (($1) + ($$014<<2)|0);
  $7 = (($2) - ($$014))|0;
  $8 = (+_silk_inner_product_FLP($1,$6,$7));
  $9 = Math_fround($8);
  $10 = (($0) + ($$014<<2)|0);
  HEAPF32[$10>>2] = $9;
  $11 = (($$014) + 1)|0;
  $12 = ($11|0)<($spec$select|0);
  if ($12) {
   $$014 = $11;
  } else {
   break;
  }
 }
 return;
}
function _silk_bwexpander_FLP($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = Math_fround($2);
 var $$0$lcssa = Math_fround(0), $$01213 = 0, $$014 = Math_fround(0), $10 = 0, $11 = Math_fround(0), $12 = Math_fround(0), $3 = 0, $4 = 0, $5 = 0, $6 = Math_fround(0), $7 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($1) + -1)|0;
 $4 = ($1|0)>(1);
 if ($4) {
  $$01213 = 0;$$014 = $2;
  while(1) {
   $5 = (($0) + ($$01213<<2)|0);
   $6 = Math_fround(HEAPF32[$5>>2]);
   $7 = Math_fround($$014 * $6);
   HEAPF32[$5>>2] = $7;
   $8 = Math_fround($$014 * $2);
   $9 = (($$01213) + 1)|0;
   $exitcond = ($9|0)==($3|0);
   if ($exitcond) {
    $$0$lcssa = $8;
    break;
   } else {
    $$01213 = $9;$$014 = $8;
   }
  }
 } else {
  $$0$lcssa = $2;
 }
 $10 = (($0) + ($3<<2)|0);
 $11 = Math_fround(HEAPF32[$10>>2]);
 $12 = Math_fround($$0$lcssa * $11);
 HEAPF32[$10>>2] = $12;
 return;
}
function _silk_energy_FLP($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0.0, $$031$lcssa = 0, $$03135 = 0, $$036 = 0.0, $$1$lcssa = 0.0, $$13233 = 0, $$134 = 0.0, $10 = Math_fround(0), $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0, $16 = Math_fround(0), $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = Math_fround(0), $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = Math_fround(0), $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $4 = 0, $5 = Math_fround(0), $6 = 0.0, $7 = 0.0;
 var $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1) + -3)|0;
 $3 = ($1|0)>(3);
 if ($3) {
  $$03135 = 0;$$036 = 0.0;
  while(1) {
   $4 = (($0) + ($$03135<<2)|0);
   $5 = Math_fround(HEAPF32[$4>>2]);
   $6 = +$5;
   $7 = $6 * $6;
   $8 = $$03135 | 1;
   $9 = (($0) + ($8<<2)|0);
   $10 = Math_fround(HEAPF32[$9>>2]);
   $11 = +$10;
   $12 = $11 * $11;
   $13 = $7 + $12;
   $14 = $$03135 | 2;
   $15 = (($0) + ($14<<2)|0);
   $16 = Math_fround(HEAPF32[$15>>2]);
   $17 = +$16;
   $18 = $17 * $17;
   $19 = $13 + $18;
   $20 = $$03135 | 3;
   $21 = (($0) + ($20<<2)|0);
   $22 = Math_fround(HEAPF32[$21>>2]);
   $23 = +$22;
   $24 = $23 * $23;
   $25 = $19 + $24;
   $26 = $$036 + $25;
   $27 = (($$03135) + 4)|0;
   $28 = ($27|0)<($2|0);
   if ($28) {
    $$03135 = $27;$$036 = $26;
   } else {
    break;
   }
  }
  $29 = $1 & -4;
  $$0$lcssa = $26;$$031$lcssa = $29;
 } else {
  $$0$lcssa = 0.0;$$031$lcssa = 0;
 }
 $30 = ($$031$lcssa|0)<($1|0);
 if (!($30)) {
  $$1$lcssa = $$0$lcssa;
  return (+$$1$lcssa);
 }
 $$13233 = $$031$lcssa;$$134 = $$0$lcssa;
 while(1) {
  $31 = (($0) + ($$13233<<2)|0);
  $32 = Math_fround(HEAPF32[$31>>2]);
  $33 = +$32;
  $34 = $33 * $33;
  $35 = $$134 + $34;
  $36 = (($$13233) + 1)|0;
  $exitcond = ($36|0)==($1|0);
  if ($exitcond) {
   $$1$lcssa = $35;
   break;
  } else {
   $$13233 = $36;$$134 = $35;
  }
 }
 return (+$$1$lcssa);
}
function _silk_inner_product_FLP($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0.0, $$031$lcssa = 0, $$03135 = 0, $$036 = 0.0, $$1$lcssa = 0.0, $$13233 = 0, $$134 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0, $13 = 0, $14 = Math_fround(0), $15 = 0.0, $16 = 0, $17 = Math_fround(0), $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0, $22 = 0;
 var $23 = Math_fround(0), $24 = 0.0, $25 = 0, $26 = Math_fround(0), $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = Math_fround(0), $33 = 0.0, $34 = 0, $35 = Math_fround(0), $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = Math_fround(0), $46 = 0.0, $47 = 0, $48 = Math_fround(0), $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $6 = Math_fround(0), $7 = 0.0, $8 = 0, $9 = Math_fround(0), $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($2) + -3)|0;
 $4 = ($2|0)>(3);
 if ($4) {
  $$03135 = 0;$$036 = 0.0;
  while(1) {
   $5 = (($0) + ($$03135<<2)|0);
   $6 = Math_fround(HEAPF32[$5>>2]);
   $7 = +$6;
   $8 = (($1) + ($$03135<<2)|0);
   $9 = Math_fround(HEAPF32[$8>>2]);
   $10 = +$9;
   $11 = $7 * $10;
   $12 = $$03135 | 1;
   $13 = (($0) + ($12<<2)|0);
   $14 = Math_fround(HEAPF32[$13>>2]);
   $15 = +$14;
   $16 = (($1) + ($12<<2)|0);
   $17 = Math_fround(HEAPF32[$16>>2]);
   $18 = +$17;
   $19 = $15 * $18;
   $20 = $11 + $19;
   $21 = $$03135 | 2;
   $22 = (($0) + ($21<<2)|0);
   $23 = Math_fround(HEAPF32[$22>>2]);
   $24 = +$23;
   $25 = (($1) + ($21<<2)|0);
   $26 = Math_fround(HEAPF32[$25>>2]);
   $27 = +$26;
   $28 = $24 * $27;
   $29 = $20 + $28;
   $30 = $$03135 | 3;
   $31 = (($0) + ($30<<2)|0);
   $32 = Math_fround(HEAPF32[$31>>2]);
   $33 = +$32;
   $34 = (($1) + ($30<<2)|0);
   $35 = Math_fround(HEAPF32[$34>>2]);
   $36 = +$35;
   $37 = $33 * $36;
   $38 = $29 + $37;
   $39 = $$036 + $38;
   $40 = (($$03135) + 4)|0;
   $41 = ($40|0)<($3|0);
   if ($41) {
    $$03135 = $40;$$036 = $39;
   } else {
    break;
   }
  }
  $42 = $2 & -4;
  $$0$lcssa = $39;$$031$lcssa = $42;
 } else {
  $$0$lcssa = 0.0;$$031$lcssa = 0;
 }
 $43 = ($$031$lcssa|0)<($2|0);
 if (!($43)) {
  $$1$lcssa = $$0$lcssa;
  return (+$$1$lcssa);
 }
 $$13233 = $$031$lcssa;$$134 = $$0$lcssa;
 while(1) {
  $44 = (($0) + ($$13233<<2)|0);
  $45 = Math_fround(HEAPF32[$44>>2]);
  $46 = +$45;
  $47 = (($1) + ($$13233<<2)|0);
  $48 = Math_fround(HEAPF32[$47>>2]);
  $49 = +$48;
  $50 = $46 * $49;
  $51 = $$134 + $50;
  $52 = (($$13233) + 1)|0;
  $exitcond = ($52|0)==($2|0);
  if ($exitcond) {
   $$1$lcssa = $51;
   break;
  } else {
   $$13233 = $52;$$134 = $51;
  }
 }
 return (+$$1$lcssa);
}
function _silk_k2a_FLP($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$03536 = 0, $$037 = 0, $$mask = 0, $10 = 0, $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = Math_fround(0), $15 = Math_fround(0), $16 = Math_fround(0), $17 = Math_fround(0), $18 = Math_fround(0), $19 = 0, $20 = Math_fround(0), $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = Math_fround(0), $7 = 0;
 var $8 = 0, $9 = 0, $exitcond = 0, $exitcond41 = 0, $indvars$iv = 0, $indvars$iv$next = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)>(0);
 if (!($3)) {
  return;
 }
 $$037 = 0;$indvars$iv = 1;
 while(1) {
  $4 = $indvars$iv >>> 1;
  $5 = (($1) + ($$037<<2)|0);
  $6 = Math_fround(HEAPF32[$5>>2]);
  $7 = (($$037) + 1)|0;
  $$mask = $7 & 2147483646;
  $8 = ($$mask|0)==(0);
  if (!($8)) {
   $9 = (($$037) + -1)|0;
   $$03536 = 0;
   while(1) {
    $10 = (($0) + ($$03536<<2)|0);
    $11 = Math_fround(HEAPF32[$10>>2]);
    $12 = (($9) - ($$03536))|0;
    $13 = (($0) + ($12<<2)|0);
    $14 = Math_fround(HEAPF32[$13>>2]);
    $15 = Math_fround($6 * $14);
    $16 = Math_fround($11 + $15);
    HEAPF32[$10>>2] = $16;
    $17 = Math_fround($6 * $11);
    $18 = Math_fround($14 + $17);
    HEAPF32[$13>>2] = $18;
    $19 = (($$03536) + 1)|0;
    $exitcond = ($19|0)==($4|0);
    if ($exitcond) {
     break;
    } else {
     $$03536 = $19;
    }
   }
  }
  $20 = Math_fround(- $6);
  $21 = (($0) + ($$037<<2)|0);
  HEAPF32[$21>>2] = $20;
  $indvars$iv$next = (($indvars$iv) + 1)|0;
  $exitcond41 = ($7|0)==($2|0);
  if ($exitcond41) {
   break;
  } else {
   $$037 = $7;$indvars$iv = $indvars$iv$next;
  }
 }
 return;
}
function _silk_pitch_analysis_core_FLP($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = Math_fround($6);
 $7 = Math_fround($7);
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 var $$0103104$i = 0, $$012$i = 0, $$012$i544 = 0, $$012$i555 = 0, $$012$in$i = 0, $$012$in$i543 = 0, $$012$in$i554 = 0, $$0121122$i = 0, $$0471 = 0, $$0472 = 0, $$0474674 = 0, $$0474674$in = 0, $$0476668 = 0, $$0482666 = 0, $$0484635$us = 0, $$0487667 = 0, $$0490665 = 0, $$0491581$us = 0.0, $$0492664 = 0.0, $$0493580$us = 0.0;
 var $$0494600 = 0, $$0495 = 0, $$0498 = Math_fround(0), $$0499645 = 0, $$0503$lcssa = 0, $$0503599 = 0, $$0506627 = Math_fround(0), $$0511626 = Math_fround(0), $$0513625 = 0, $$0516622 = 0, $$0518624 = 0, $$0523621 = Math_fround(0), $$0526 = Math_fround(0), $$072102105$i = 0, $$073101106$i = 0, $$07489$us$i = 0, $$07583$us$i = 0, $$076100107$i = 0, $$07781$i = 0, $$07781$i$1 = 0;
 var $$07781$i$2 = 0, $$07781$i$3 = 0, $$07781$us$i = 0, $$07887$us$i = 0, $$07980$i = 0, $$07980$i$1 = 0, $$07980$i$2 = 0, $$07980$i$3 = 0, $$07980$us$i = 0, $$08$i = 0, $$08$i550 = 0, $$08$i561 = 0, $$08$in$i = 0, $$08$in$i549 = 0, $$08$in$i560 = 0, $$085120123$i = 0, $$086104$us$i = 0, $$087119124$i = 0, $$08896$i = 0.0, $$08896$i$1 = 0.0;
 var $$08896$i$2 = 0.0, $$08896$i$3 = 0.0, $$08896$us$i = 0.0, $$089102$us$i = 0, $$090118125$i = 0, $$09195$i = 0, $$09195$i$1 = 0, $$09195$i$2 = 0, $$09195$i$3 = 0, $$09195$us$i = 0, $$1 = 0, $$10623 = 0, $$1470 = 0, $$1473 = 0, $$1475663 = 0, $$1477640 = 0, $$1477640$us = 0, $$1483603 = 0, $$1485619$us = 0, $$1488 = 0;
 var $$1496648 = 0, $$1500 = 0, $$1502 = 0, $$1504$lcssa = 0, $$1504589 = 0, $$1504589$us = 0, $$1517 = 0, $$1524 = Math_fround(0), $$198$us$i = 0, $$2478628 = 0, $$2486590 = 0, $$2486590$us = 0, $$2489639 = 0, $$2489639$us = 0, $$2497 = 0, $$2505 = 0, $$2505$us = 0, $$2508598 = Math_fround(0), $$2515 = 0, $$2520$lcssa = 0;
 var $$2520597 = 0, $$2525$us = Math_fround(0), $$2656725 = 0, $$3479582$us = 0, $$3509$lcssa = Math_fround(0), $$3509588 = Math_fround(0), $$3509588$us = Math_fround(0), $$3521$lcssa = 0, $$3521587 = 0, $$3521587$us = 0, $$4480579 = 0, $$4480579$us = 0, $$4510 = Math_fround(0), $$4510$us = Math_fround(0), $$4522 = 0, $$4522$us = 0, $$4651 = 0, $$533$us = 0, $$534 = 0, $$535 = 0;
 var $$5481611 = 0, $$5650 = 0, $$6649 = 0, $$7647 = 0, $$8646 = 0, $$9615$us = 0, $$phi$trans$insert$phi$trans$insert = 0, $$phi$trans$insert$pre$phiZZZZ2D = 0, $$phi$trans$insert706 = 0, $$pre = 0, $$pre$pre = 0, $$pre705 = 0, $$pre707 = 0, $$pre709 = 0, $$sink = Math_fround(0), $100 = 0, $101 = Math_fround(0), $102 = Math_fround(0), $103 = 0, $104 = 0;
 var $105 = 0, $106 = Math_fround(0), $107 = Math_fround(0), $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = Math_fround(0), $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0;
 var $124 = 0.0, $125 = 0.0, $126 = Math_fround(0), $127 = Math_fround(0), $128 = Math_fround(0), $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = Math_fround(0), $133 = 0.0, $134 = Math_fround(0), $135 = 0.0, $136 = 0.0, $137 = 0, $138 = Math_fround(0), $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0;
 var $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = Math_fround(0), $146 = 0, $147 = Math_fround(0), $148 = Math_fround(0), $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = Math_fround(0), $155 = Math_fround(0), $156 = Math_fround(0), $157 = Math_fround(0), $158 = Math_fround(0), $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = Math_fround(0), $165 = 0, $166 = Math_fround(0), $167 = 0, $168 = 0, $169 = Math_fround(0), $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = Math_fround(0), $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $208$phi = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0.0, $237 = 0.0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0.0, $244 = 0, $245 = 0.0, $246 = 0.0, $247 = 0.0, $248 = 0.0, $249 = Math_fround(0), $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = Math_fround(0), $262 = 0.0, $263 = 0.0, $264 = 0.0, $265 = Math_fround(0), $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = Math_fround(0), $271 = Math_fround(0), $272 = 0, $273 = Math_fround(0), $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = Math_fround(0), $286 = Math_fround(0);
 var $287 = Math_fround(0), $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = Math_fround(0), $292 = 0, $293 = 0, $294 = Math_fround(0), $295 = 0.0, $296 = 0.0, $297 = 0.0, $298 = Math_fround(0), $299 = Math_fround(0), $30 = 0, $300 = Math_fround(0), $301 = Math_fround(0), $302 = Math_fround(0), $303 = Math_fround(0), $304 = Math_fround(0);
 var $305 = Math_fround(0), $306 = Math_fround(0), $307 = Math_fround(0), $308 = Math_fround(0), $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = Math_fround(0), $314 = Math_fround(0), $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = Math_fround(0), $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = Math_fround(0), $413 = Math_fround(0);
 var $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0.0;
 var $432 = 0.0, $433 = Math_fround(0), $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = Math_fround(0), $442 = 0.0, $443 = 0.0, $444 = 0.0, $445 = 0, $446 = 0, $447 = Math_fround(0), $448 = 0.0, $449 = 0.0, $45 = 0;
 var $450 = 0.0, $451 = Math_fround(0), $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0;
 var $469 = 0, $47 = 0, $470 = 0, $471 = 0.0, $472 = 0.0, $473 = Math_fround(0), $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = Math_fround(0), $483 = 0.0, $484 = 0.0, $485 = 0.0, $486 = 0;
 var $487 = 0, $488 = Math_fround(0), $489 = 0.0, $49 = 0, $490 = 0.0, $491 = 0.0, $492 = Math_fround(0), $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0.0, $503 = 0.0, $504 = Math_fround(0);
 var $505 = 0, $506 = 0, $507 = 0, $508 = Math_fround(0), $509 = Math_fround(0), $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0.0, $517 = 0.0, $518 = 0, $519 = 0, $52 = 0, $520 = 0.0, $521 = 0.0, $522 = 0.0;
 var $523 = 0.0, $524 = Math_fround(0), $525 = Math_fround(0), $526 = Math_fround(0), $527 = Math_fround(0), $528 = Math_fround(0), $529 = Math_fround(0), $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = Math_fround(0), $539 = 0.0, $54 = 0, $540 = 0;
 var $541 = Math_fround(0), $542 = 0.0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = Math_fround(0), $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0;
 var $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0;
 var $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = Math_fround(0), $595 = 0.0;
 var $596 = 0.0, $597 = 0.0, $598 = 0, $599 = 0, $60 = 0, $600 = Math_fround(0), $601 = 0.0, $602 = 0.0, $603 = 0.0, $604 = Math_fround(0), $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = Math_fround(0), $610 = 0, $611 = 0, $612 = 0, $613 = 0;
 var $614 = 0.0, $615 = 0.0, $616 = Math_fround(0), $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = Math_fround(0), $626 = 0.0, $627 = 0.0, $628 = 0.0, $629 = 0, $63 = 0, $630 = 0, $631 = Math_fround(0);
 var $632 = 0.0, $633 = 0.0, $634 = 0.0, $635 = Math_fround(0), $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0.0, $646 = 0.0, $647 = Math_fround(0), $648 = 0, $649 = 0, $65 = 0;
 var $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = Math_fround(0), $657 = 0.0, $658 = 0.0, $659 = 0.0, $66 = 0, $660 = 0, $661 = 0, $662 = Math_fround(0), $663 = 0.0, $664 = 0.0, $665 = 0.0, $666 = Math_fround(0), $667 = 0, $668 = 0;
 var $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0;
 var $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0;
 var $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $72 = Math_fround(0), $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = Math_fround(0);
 var $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = Math_fround(0), $93 = 0, $94 = 0, $95 = 0, $96 = Math_fround(0), $97 = 0;
 var $98 = Math_fround(0), $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i565 = 0, $exitcond114$i = 0, $exitcond115$i = 0, $exitcond116$i = 0, $exitcond116$i$1 = 0, $exitcond116$i$2 = 0, $exitcond116$i$3 = 0, $exitcond685 = 0, $exitcond686 = 0, $exitcond687 = 0, $exitcond688 = 0, $exitcond689 = 0, $exitcond691 = 0, $exitcond692 = 0, $exitcond693 = 0, $exitcond694 = 0;
 var $exitcond695 = 0, $exitcond696 = 0, $exitcond697 = 0, $exitcond698 = 0, $exitcond699 = 0, $exitcond700 = 0, $exitcond703 = 0, $exitcond98$i = 0, $or$cond = 0, $or$cond529 = 0, $scevgep = 0, $scevgep$i = 0, $scevgep$i564 = 0, $scevgep111$i = 0, $scevgep112$i = 0, $scevgep95$i = 0, $scevgep96$i = 0, $sext = 0, $spec$select = 0, $spec$select$i = 0;
 var $spec$select$i545 = 0, $spec$select$i556 = 0, $spec$select530 = 0, $spec$select530$us = 0, $spec$select531 = Math_fround(0), $spec$select531$us = Math_fround(0), $spec$select532 = 0, $spec$select532$us = 0, $spec$select536 = 0, $spec$select537 = 0, $spec$select538 = Math_fround(0), $spec$select539 = Math_fround(0), $spec$select569 = 0, $spec$select570 = 0, $spec$select571 = 0, $spec$select572 = 0, $spec$select573 = 0, $spec$select574$us = 0, $spec$select575 = 0, $storemerge = 0;
 var $storemerge$in = 0, $storemerge$sink = 0, $storemerge527 = 0, $storemerge527$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 13888|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(13888|0);
 $12 = sp + 13792|0;
 $13 = sp + 13696|0;
 $14 = sp + 12416|0;
 $15 = sp + 11776|0;
 $16 = sp + 11136|0;
 $17 = sp + 10816|0;
 $18 = sp + 10784|0;
 $19 = sp + 8400|0;
 $20 = sp + 8128|0;
 $21 = sp + 8080|0;
 $22 = sp + 7984|0;
 $23 = sp + 7680|0;
 $24 = sp + 4960|0;
 $25 = sp + 2240|0;
 $26 = sp + 960|0;
 $27 = sp;
 $28 = ($10*5)|0;
 $29 = (($28) + 20)|0;
 $30 = Math_imul($29, $8)|0;
 $31 = $29 << 2;
 $32 = $29 << 3;
 $33 = ($8*5)|0;
 $34 = $8 << 1;
 $35 = ($8*18)|0;
 $36 = (($35) + -1)|0;
 $37 = ($8|0)==(16);
 L1: do {
  if ($37) {
   $38 = ($30|0)>(0);
   if ($38) {
    $$012$in$i = $30;
    while(1) {
     $$012$i = (($$012$in$i) + -1)|0;
     $39 = (($0) + ($$012$i<<2)|0);
     $40 = Math_fround(HEAPF32[$39>>2]);
     $41 = (_lrintf($40)|0);
     $42 = ($41|0)>(-32768);
     $spec$select$i = $42 ? $41 : -32768;
     $43 = ($spec$select$i|0)<(32767);
     $44 = $43 ? $spec$select$i : 32767;
     $45 = $44&65535;
     $46 = (($26) + ($$012$i<<1)|0);
     HEAP16[$46>>1] = $45;
     $47 = ($$012$in$i|0)>(1);
     if ($47) {
      $$012$in$i = $$012$i;
     } else {
      break;
     }
    }
   }
   $48 = $18;
   $49 = $48;
   HEAP32[$49>>2] = 0;
   $50 = (($48) + 4)|0;
   $51 = $50;
   HEAP32[$51>>2] = 0;
   _silk_resampler_down2($18,$16,$26,$30);
   $52 = ($28|0)>(-20);
   if ($52) {
    $$08$in$i = $32;
    while(1) {
     $$08$i = (($$08$in$i) + -1)|0;
     $53 = (($16) + ($$08$i<<1)|0);
     $54 = HEAP16[$53>>1]|0;
     $55 = (Math_fround(($54<<16>>16)));
     $56 = (($14) + ($$08$i<<2)|0);
     HEAPF32[$56>>2] = $55;
     $57 = ($$08$in$i|0)>(1);
     if ($57) {
      $$08$in$i = $$08$i;
     } else {
      break;
     }
    }
   }
  } else {
   $58 = ($8|0)==(12);
   if (!($58)) {
    $75 = ($28|0)>(-20);
    if (!($75)) {
     break;
    }
    $$012$in$i554 = $32;
    while(1) {
     $$012$i555 = (($$012$in$i554) + -1)|0;
     $76 = (($0) + ($$012$i555<<2)|0);
     $77 = Math_fround(HEAPF32[$76>>2]);
     $78 = (_lrintf($77)|0);
     $79 = ($78|0)>(-32768);
     $spec$select$i556 = $79 ? $78 : -32768;
     $80 = ($spec$select$i556|0)<(32767);
     $81 = $80 ? $spec$select$i556 : 32767;
     $82 = $81&65535;
     $83 = (($16) + ($$012$i555<<1)|0);
     HEAP16[$83>>1] = $82;
     $84 = ($$012$in$i554|0)>(1);
     if ($84) {
      $$012$in$i554 = $$012$i555;
     } else {
      break L1;
     }
    }
   }
   $59 = ($30|0)>(0);
   if ($59) {
    $$012$in$i543 = $30;
    while(1) {
     $$012$i544 = (($$012$in$i543) + -1)|0;
     $60 = (($0) + ($$012$i544<<2)|0);
     $61 = Math_fround(HEAPF32[$60>>2]);
     $62 = (_lrintf($61)|0);
     $63 = ($62|0)>(-32768);
     $spec$select$i545 = $63 ? $62 : -32768;
     $64 = ($spec$select$i545|0)<(32767);
     $65 = $64 ? $spec$select$i545 : 32767;
     $66 = $65&65535;
     $67 = (($27) + ($$012$i544<<1)|0);
     HEAP16[$67>>1] = $66;
     $68 = ($$012$in$i543|0)>(1);
     if ($68) {
      $$012$in$i543 = $$012$i544;
     } else {
      break;
     }
    }
   }
   ;HEAP32[$18>>2]=0|0;HEAP32[$18+4>>2]=0|0;HEAP32[$18+8>>2]=0|0;HEAP32[$18+12>>2]=0|0;HEAP32[$18+16>>2]=0|0;HEAP32[$18+20>>2]=0|0;
   _silk_resampler_down2_3($18,$16,$27,$30);
   $69 = ($28|0)>(-20);
   if ($69) {
    $$08$in$i549 = $32;
    while(1) {
     $$08$i550 = (($$08$in$i549) + -1)|0;
     $70 = (($16) + ($$08$i550<<1)|0);
     $71 = HEAP16[$70>>1]|0;
     $72 = (Math_fround(($71<<16>>16)));
     $73 = (($14) + ($$08$i550<<2)|0);
     HEAPF32[$73>>2] = $72;
     $74 = ($$08$in$i549|0)>(1);
     if ($74) {
      $$08$in$i549 = $$08$i550;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 $85 = $18;
 $86 = $85;
 HEAP32[$86>>2] = 0;
 $87 = (($85) + 4)|0;
 $88 = $87;
 HEAP32[$88>>2] = 0;
 _silk_resampler_down2($18,$17,$16,$32);
 $89 = ($28|0)>(-20);
 if ($89) {
  $$08$in$i560 = $31;
  while(1) {
   $$08$i561 = (($$08$in$i560) + -1)|0;
   $90 = (($17) + ($$08$i561<<1)|0);
   $91 = HEAP16[$90>>1]|0;
   $92 = (Math_fround(($91<<16>>16)));
   $93 = (($15) + ($$08$i561<<2)|0);
   HEAPF32[$93>>2] = $92;
   $94 = ($$08$in$i560|0)>(1);
   if ($94) {
    $$08$in$i560 = $$08$i561;
   } else {
    break;
   }
  }
  if ($89) {
   $$0474674$in = $31;
   while(1) {
    $$0474674 = (($$0474674$in) + -1)|0;
    $95 = (($15) + ($$0474674<<2)|0);
    $96 = Math_fround(HEAPF32[$95>>2]);
    $97 = (~~(($96)));
    $98 = (Math_fround(($97|0)));
    $99 = (($$0474674$in) + -2)|0;
    $100 = (($15) + ($99<<2)|0);
    $101 = Math_fround(HEAPF32[$100>>2]);
    $102 = Math_fround($101 + $98);
    $103 = $102 > Math_fround(32767.0);
    if ($103) {
     $106 = Math_fround(32767.0);
    } else {
     $104 = $102 < Math_fround(-32768.0);
     if ($104) {
      $106 = Math_fround(-32768.0);
     } else {
      $106 = $102;
     }
    }
    $105 = (~~(($106)));
    $107 = (Math_fround(($105<<16>>16)));
    HEAPF32[$95>>2] = $107;
    $108 = ($$0474674$in|0)>(2);
    if ($108) {
     $$0474674$in = $$0474674;
    } else {
     break;
    }
   }
  }
 }
 $109 = $10 << 2;
 $110 = ($10*596)|0;
 _memset(($19|0),0,($110|0))|0;
 $111 = $10 >> 1;
 $112 = ($10|0)>(1);
 if ($112) {
  $113 = ((($15)) + 320|0);
  $114 = ((($20)) + 256|0);
  $115 = ((($19)) + 32|0);
  $$0476668 = 0;$$0487667 = $113;
  while(1) {
   $116 = ((($$0487667)) + -32|0);
   $117 = ((($$0487667)) + -288|0);
   _celt_pitch_xcorr_c($$0487667,$117,$20,40,65,$11);
   $118 = Math_fround(HEAPF32[$114>>2]);
   $119 = +$118;
   $120 = (+_silk_energy_FLP($$0487667,40));
   $121 = (+_silk_energy_FLP($116,40));
   $122 = $120 + $121;
   $123 = $122 + 1.6E+5;
   $124 = $119 * 2.0;
   $125 = $124 / $123;
   $126 = Math_fround($125);
   $127 = Math_fround(HEAPF32[$115>>2]);
   $128 = Math_fround($127 + $126);
   HEAPF32[$115>>2] = $128;
   $$0482666 = 9;$$0490665 = $116;$$0492664 = $123;
   while(1) {
    $129 = ((($$0490665)) + -4|0);
    $130 = (72 - ($$0482666))|0;
    $131 = (($20) + ($130<<2)|0);
    $132 = Math_fround(HEAPF32[$131>>2]);
    $133 = +$132;
    $134 = Math_fround(HEAPF32[$129>>2]);
    $135 = +$134;
    $136 = $135 * $135;
    $137 = ((($$0490665)) + 156|0);
    $138 = Math_fround(HEAPF32[$137>>2]);
    $139 = +$138;
    $140 = $139 * $139;
    $141 = $136 - $140;
    $142 = $$0492664 + $141;
    $143 = $133 * 2.0;
    $144 = $143 / $142;
    $145 = Math_fround($144);
    $146 = (($19) + ($$0482666<<2)|0);
    $147 = Math_fround(HEAPF32[$146>>2]);
    $148 = Math_fround($147 + $145);
    HEAPF32[$146>>2] = $148;
    $149 = (($$0482666) + 1)|0;
    $exitcond703 = ($149|0)==(73);
    if ($exitcond703) {
     break;
    } else {
     $$0482666 = $149;$$0490665 = $129;$$0492664 = $142;
    }
   }
   $150 = ((($$0487667)) + 160|0);
   $151 = (($$0476668) + 1)|0;
   $152 = ($151|0)<($111|0);
   if ($152) {
    $$0476668 = $151;$$0487667 = $150;
   } else {
    break;
   }
  }
 }
 $$1475663 = 72;
 while(1) {
  $153 = (($19) + ($$1475663<<2)|0);
  $154 = Math_fround(HEAPF32[$153>>2]);
  $155 = (Math_fround(($$1475663|0)));
  $156 = Math_fround($154 * $155);
  $157 = Math_fround($156 * Math_fround(2.44140625E-4));
  $158 = Math_fround($154 - $157);
  HEAPF32[$153>>2] = $158;
  $159 = (($$1475663) + -1)|0;
  $160 = ($$1475663>>>0)>(8);
  if ($160) {
   $$1475663 = $159;
  } else {
   break;
  }
 }
 $161 = $9 << 1;
 $162 = (($161) + 4)|0;
 $163 = ((($19)) + 32|0);
 _silk_insertion_sort_decreasing_FLP($163,$22,65,$162);
 $164 = Math_fround(HEAPF32[$163>>2]);
 $165 = $164 < Math_fround(0.200000003);
 if ($165) {
  _memset(($1|0),0,($109|0))|0;
  HEAPF32[$4>>2] = Math_fround(0.0);
  HEAP16[$2>>1] = 0;
  $$0471 = 1;$storemerge$sink = 0;
  HEAP8[$3>>0] = $storemerge$sink;
  STACKTOP = sp;return ($$0471|0);
 }
 $166 = Math_fround($164 * $6);
 $167 = ($9|0)>(-2);
 L59: do {
  if ($167) {
   $168 = ((($19)) + 32|0);
   $169 = Math_fround(HEAPF32[$168>>2]);
   $170 = $169 > $166;
   if ($170) {
    $$2656725 = 0;
    while(1) {
     $175 = (($22) + ($$2656725<<2)|0);
     $176 = HEAP32[$175>>2]|0;
     $177 = $176 << 1;
     $178 = (($177) + 16)|0;
     HEAP32[$175>>2] = $178;
     $179 = (($$2656725) + 1)|0;
     $180 = ($179|0)<($162|0);
     if (!($180)) {
      $$0495 = $162;
      break L59;
     }
     $171 = (($$2656725) + 9)|0;
     $172 = (($19) + ($171<<2)|0);
     $173 = Math_fround(HEAPF32[$172>>2]);
     $174 = $173 > $166;
     if ($174) {
      $$2656725 = $179;
     } else {
      $$0495 = $179;
      break;
     }
    }
   } else {
    $$0495 = 0;
   }
  } else {
   $$0495 = $162;
  }
 } while(0);
 $scevgep = ((($23)) + 22|0);
 _memset(($scevgep|0),0,274)|0;
 $181 = ($$0495|0)>(0);
 if ($181) {
  $$4651 = 0;
  while(1) {
   $182 = (($22) + ($$4651<<2)|0);
   $183 = HEAP32[$182>>2]|0;
   $184 = (($23) + ($183<<1)|0);
   HEAP16[$184>>1] = 1;
   $185 = (($$4651) + 1)|0;
   $exitcond700 = ($185|0)==($$0495|0);
   if ($exitcond700) {
    break;
   } else {
    $$4651 = $185;
   }
  }
  $$phi$trans$insert$phi$trans$insert = ((($23)) + 290|0);
  $$pre$pre = HEAP16[$$phi$trans$insert$phi$trans$insert>>1]|0;
  $$phi$trans$insert$pre$phiZZZZ2D = $$phi$trans$insert$phi$trans$insert;$$pre = $$pre$pre;
 } else {
  $$pre709 = ((($23)) + 290|0);
  $$phi$trans$insert$pre$phiZZZZ2D = $$pre709;$$pre = 0;
 }
 $$5650 = 146;$188 = $$pre;
 while(1) {
  $186 = (($$5650) + -1)|0;
  $187 = $188&65535;
  $189 = (($$5650) + -2)|0;
  $190 = (($23) + ($189<<1)|0);
  $191 = HEAP16[$190>>1]|0;
  $192 = $191&65535;
  $193 = (($192) + ($187))|0;
  $194 = (($23) + ($$5650<<1)|0);
  $195 = HEAP16[$194>>1]|0;
  $196 = $195&65535;
  $197 = (($193) + ($196))|0;
  $198 = $197&65535;
  HEAP16[$194>>1] = $198;
  $199 = ($$5650>>>0)>(16);
  if ($199) {
   $$5650 = $186;$188 = $191;
  } else {
   break;
  }
 }
 $$1496648 = 0;$$6649 = 16;
 while(1) {
  $200 = (($$6649) + 1)|0;
  $201 = (($23) + ($200<<1)|0);
  $202 = HEAP16[$201>>1]|0;
  $203 = ($202<<16>>16)>(0);
  if ($203) {
   $204 = (($$1496648) + 1)|0;
   $205 = (($22) + ($$1496648<<2)|0);
   HEAP32[$205>>2] = $$6649;
   $$2497 = $204;
  } else {
   $$2497 = $$1496648;
  }
  $exitcond699 = ($200|0)==(144);
  if ($exitcond699) {
   break;
  } else {
   $$1496648 = $$2497;$$6649 = $200;
  }
 }
 $$pre705 = HEAP16[$$phi$trans$insert$pre$phiZZZZ2D>>1]|0;
 $$phi$trans$insert706 = ((($23)) + 288|0);
 $$pre707 = HEAP16[$$phi$trans$insert706>>1]|0;
 $$7647 = 146;$208 = $$pre705;$210 = $$pre707;
 while(1) {
  $206 = (($$7647) + -1)|0;
  $207 = $208&65535;
  $209 = $210&65535;
  $211 = (($209) + ($207))|0;
  $212 = (($$7647) + -3)|0;
  $213 = (($23) + ($212<<1)|0);
  $214 = HEAP16[$213>>1]|0;
  $215 = $214&65535;
  $216 = (($211) + ($215))|0;
  $217 = (($23) + ($$7647<<1)|0);
  $218 = HEAP16[$217>>1]|0;
  $219 = $218&65535;
  $220 = (($216) + ($219))|0;
  $221 = $220&65535;
  HEAP16[$217>>1] = $221;
  $222 = ($$7647>>>0)>(16);
  if ($222) {
   $208$phi = $210;$$7647 = $206;$210 = $214;$208 = $208$phi;
  } else {
   break;
  }
 }
 $$0499645 = 0;$$8646 = 16;
 while(1) {
  $223 = (($23) + ($$8646<<1)|0);
  $224 = HEAP16[$223>>1]|0;
  $225 = ($224<<16>>16)>(0);
  if ($225) {
   $226 = (($$0499645) + 1)|0;
   $227 = (($23) + ($$0499645<<1)|0);
   $228 = (($$8646) + 65534)|0;
   $229 = $228&65535;
   HEAP16[$227>>1] = $229;
   $$1500 = $226;
  } else {
   $$1500 = $$0499645;
  }
  $230 = (($$8646) + 1)|0;
  $exitcond698 = ($230|0)==(147);
  if ($exitcond698) {
   break;
  } else {
   $$0499645 = $$1500;$$8646 = $230;
  }
 }
 _memset(($19|0),0,2384)|0;
 $231 = ($8|0)==(8);
 $232 = ((($0)) + 640|0);
 $233 = ((($14)) + 640|0);
 $$1488 = $231 ? $232 : $233;
 $234 = ($10|0)>(0);
 L91: do {
  if ($234) {
   $235 = ($$1500|0)>(0);
   if (!($235)) {
    $$1477640 = 0;$$2489639 = $$1488;
    while(1) {
     $254 = ((($$2489639)) + 160|0);
     $255 = (($$1477640) + 1)|0;
     $exitcond697 = ($255|0)==($10|0);
     if ($exitcond697) {
      break L91;
     } else {
      $$1477640 = $255;$$2489639 = $254;
     }
    }
   }
   $$1477640$us = 0;$$2489639$us = $$1488;
   while(1) {
    $236 = (+_silk_energy_FLP($$2489639$us,40));
    $237 = $236 + 1.0;
    $$0484635$us = 0;
    while(1) {
     $238 = (($23) + ($$0484635$us<<1)|0);
     $239 = HEAP16[$238>>1]|0;
     $240 = $239 << 16 >> 16;
     $241 = (0 - ($240))|0;
     $242 = (($$2489639$us) + ($241<<2)|0);
     $243 = (+_silk_inner_product_FLP($242,$$2489639$us,40));
     $244 = $243 > 0.0;
     if ($244) {
      $245 = (+_silk_energy_FLP($242,40));
      $246 = $243 * 2.0;
      $247 = $237 + $245;
      $248 = $246 / $247;
      $249 = Math_fround($248);
      $$sink = $249;
     } else {
      $$sink = Math_fround(0.0);
     }
     $250 = ((($19) + (($$1477640$us*596)|0)|0) + ($240<<2)|0);
     HEAPF32[$250>>2] = $$sink;
     $251 = (($$0484635$us) + 1)|0;
     $exitcond695 = ($251|0)==($$1500|0);
     if ($exitcond695) {
      break;
     } else {
      $$0484635$us = $251;
     }
    }
    $252 = ((($$2489639$us)) + 160|0);
    $253 = (($$1477640$us) + 1)|0;
    $exitcond696 = ($253|0)==($10|0);
    if ($exitcond696) {
     break;
    } else {
     $$1477640$us = $253;$$2489639$us = $252;
    }
   }
  }
 } while(0);
 $256 = ($5|0)>(0);
 if ($256) {
  $257 = ($8|0)==(12);
  if ($257) {
   $258 = $5 << 1;
   $259 = (($258|0) / 3)&-1;
   $$0472 = $259;
  } else {
   $260 = $37&1;
   $spec$select = $5 >>> $260;
   $$0472 = $spec$select;
  }
  $261 = (Math_fround(($$0472|0)));
  $262 = +$261;
  $263 = (+_llvm_log10_f64((+$262)));
  $264 = $263 * 3.32192809488736;
  $265 = Math_fround($264);
  $$0498 = $265;$$1473 = $$0472;
 } else {
  $$0498 = Math_fround(0.0);$$1473 = $5;
 }
 $266 = ($10|0)==(4);
 $267 = ($9|0)>(0);
 $or$cond = $231 & $267;
 $spec$select569 = $266 ? 11 : 3;
 $268 = $266 & $or$cond;
 $spec$select570 = $268 ? 11 : 3;
 $spec$select571 = $266 ? 32000 : 37931;
 $269 = ($$2497|0)>(0);
 if ($269) {
  $270 = (Math_fround(($10|0)));
  $271 = Math_fround($270 * Math_fround(0.200000003));
  $272 = ($$1473|0)>(0);
  $273 = Math_fround($270 * $7);
  $274 = $spec$select570 << 2;
  $$0506627 = Math_fround(0.0);$$0511626 = Math_fround(-1000.0);$$0513625 = -1;$$0518624 = 0;$$2478628 = 0;
  while(1) {
   $275 = (($22) + ($$2478628<<2)|0);
   $276 = HEAP32[$275>>2]|0;
   if ($234) {
    $$1485619$us = 0;
    while(1) {
     $277 = (($21) + ($$1485619$us<<2)|0);
     HEAPF32[$277>>2] = Math_fround(0.0);
     $$9615$us = 0;$287 = Math_fround(0.0);
     while(1) {
      $278 = Math_imul($$9615$us, $spec$select569)|0;
      $279 = (($278) + ($$1485619$us))|0;
      $280 = (($spec$select571) + ($279)|0);
      $281 = HEAP8[$280>>0]|0;
      $282 = $281 << 24 >> 24;
      $283 = (($276) + ($282))|0;
      $284 = ((($19) + (($$9615$us*596)|0)|0) + ($283<<2)|0);
      $285 = Math_fround(HEAPF32[$284>>2]);
      $286 = Math_fround($285 + $287);
      $288 = (($$9615$us) + 1)|0;
      $exitcond691 = ($288|0)==($10|0);
      if ($exitcond691) {
       break;
      } else {
       $$9615$us = $288;$287 = $286;
      }
     }
     HEAPF32[$277>>2] = $286;
     $289 = (($$1485619$us) + 1)|0;
     $exitcond692 = ($289|0)==($spec$select570|0);
     if ($exitcond692) {
      break;
     } else {
      $$1485619$us = $289;
     }
    }
   } else {
    _memset(($21|0),0,($274|0))|0;
   }
   $$0516622 = 0;$$0523621 = Math_fround(-1000.0);$$10623 = 0;
   while(1) {
    $290 = (($21) + ($$10623<<2)|0);
    $291 = Math_fround(HEAPF32[$290>>2]);
    $292 = $291 > $$0523621;
    $$1524 = $292 ? $291 : $$0523621;
    $$1517 = $292 ? $$10623 : $$0516622;
    $293 = (($$10623) + 1)|0;
    $exitcond693 = ($293|0)==($spec$select570|0);
    if ($exitcond693) {
     break;
    } else {
     $$0516622 = $$1517;$$0523621 = $$1524;$$10623 = $293;
    }
   }
   $294 = (Math_fround(($276|0)));
   $295 = +$294;
   $296 = (+_llvm_log10_f64((+$295)));
   $297 = $296 * 3.32192809488736;
   $298 = Math_fround($297);
   $299 = Math_fround($271 * $298);
   $300 = Math_fround($$1524 - $299);
   if ($272) {
    $301 = Math_fround($298 - $$0498);
    $302 = Math_fround($301 * $301);
    $303 = Math_fround(HEAPF32[$4>>2]);
    $304 = Math_fround($271 * $303);
    $305 = Math_fround($302 * $304);
    $306 = Math_fround($302 + Math_fround(0.5));
    $307 = Math_fround($305 / $306);
    $308 = Math_fround($300 - $307);
    $$0526 = $308;
   } else {
    $$0526 = $300;
   }
   $309 = $$0526 > $$0511626;
   $310 = $$1524 > $273;
   $or$cond529 = $310 & $309;
   $spec$select536 = $or$cond529 ? $$1517 : $$0518624;
   $spec$select537 = $or$cond529 ? $276 : $$0513625;
   $spec$select538 = $or$cond529 ? $$0526 : $$0511626;
   $spec$select539 = $or$cond529 ? $$1524 : $$0506627;
   $311 = (($$2478628) + 1)|0;
   $exitcond694 = ($311|0)==($$2497|0);
   if ($exitcond694) {
    break;
   } else {
    $$0506627 = $spec$select539;$$0511626 = $spec$select538;$$0513625 = $spec$select537;$$0518624 = $spec$select536;$$2478628 = $311;
   }
  }
  $312 = ($spec$select537|0)==(-1);
  if (!($312)) {
   $313 = (Math_fround(($10|0)));
   $314 = Math_fround($spec$select539 / $313);
   HEAPF32[$4>>2] = $314;
   $315 = ($8|0)>(8);
   if ($315) {
    $316 = ($8|0)==(12);
    if ($316) {
     $sext = $spec$select537 << 16;
     $317 = $sext >> 16;
     $318 = ($317*3)|0;
     $319 = $318 >> 1;
     $320 = $318 & 1;
     $321 = (($319) + ($320))|0;
     $$2515 = $321;
    } else {
     $322 = $spec$select537 << 1;
     $$2515 = $322;
    }
    $323 = ($34|0)<($35|0);
    if ($323) {
     $327 = ($$2515|0)<($35|0);
     $328 = ($$2515|0)<($34|0);
     $329 = $328 ? $34 : $$2515;
     $spec$select573 = $327 ? $329 : $36;
     $331 = $spec$select573;
    } else {
     $324 = ($$2515|0)>($34|0);
     $325 = ($$2515|0)<($36|0);
     $326 = $325 ? $36 : $$2515;
     $spec$select572 = $324 ? $34 : $326;
     $331 = $spec$select572;
    }
    $330 = (($331) + -2)|0;
    $332 = ($330|0)>($34|0);
    $333 = $332 ? $330 : $34;
    $334 = (($331) + 2)|0;
    $335 = ($334|0)<($36|0);
    $336 = $335 ? $334 : $36;
    do {
     if ($266) {
      $340 = (37941 + ($9)|0);
      $341 = (32192 + ($9<<3)|0);
      $342 = HEAP8[$340>>0]|0;
      $343 = $342 << 24 >> 24;
      $344 = ($8*20)|0;
      $345 = (($0) + ($344<<2)|0);
      $346 = (0 - ($333))|0;
      $347 = ($342<<24>>24)>(0);
      if ($347) {
       $$0103104$i = 32048;$$072102105$i = $341;$$073101106$i = 34;$$076100107$i = $343;$358 = $346;$363 = $12;$716 = $345;
       label = 102;
      } else {
       $380 = (32192 + ($9<<3)|0);
       $381 = HEAP8[$380>>0]|0;
       $382 = $381 << 24 >> 24;
       $383 = (((32192 + ($9<<3)|0)) + 1|0);
       $384 = HEAP8[$383>>0]|0;
       $385 = $384 << 24 >> 24;
       $386 = (($345) + ($346<<2)|0);
       $387 = (0 - ($385))|0;
       $388 = (($386) + ($387<<2)|0);
       $389 = (1 - ($382))|0;
       $390 = (($389) + ($385))|0;
       _celt_pitch_xcorr_c($345,$388,$12,$33,$390,$11);
       $391 = ($381<<24>>24)>($384<<24>>24);
       if (!($391)) {
        $$07781$i = $382;$$07980$i = 0;
        while(1) {
         $392 = (($385) - ($$07781$i))|0;
         $393 = (($12) + ($392<<2)|0);
         $394 = HEAP32[$393>>2]|0;
         $395 = (($13) + ($$07980$i<<2)|0);
         HEAP32[$395>>2] = $394;
         $396 = (($$07980$i) + 1)|0;
         $397 = (($$07781$i) + 1)|0;
         $398 = ($$07781$i|0)<($385|0);
         if ($398) {
          $$07781$i = $397;$$07980$i = $396;
         } else {
          break;
         }
        }
       }
       $399 = (($345) + ($33<<2)|0);
       $400 = (((32192 + ($9<<3)|0)) + 2|0);
       $401 = HEAP8[$400>>0]|0;
       $402 = $401 << 24 >> 24;
       $403 = (((32192 + ($9<<3)|0)) + 3|0);
       $404 = HEAP8[$403>>0]|0;
       $405 = $404 << 24 >> 24;
       $406 = (($399) + ($346<<2)|0);
       $407 = (0 - ($405))|0;
       $408 = (($406) + ($407<<2)|0);
       $409 = (1 - ($402))|0;
       $410 = (($409) + ($405))|0;
       _celt_pitch_xcorr_c($399,$408,$12,$33,$410,$11);
       $411 = ($401<<24>>24)>($404<<24>>24);
       if (!($411)) {
        $$07781$i$1 = $402;$$07980$i$1 = 0;
        while(1) {
         $669 = (($405) - ($$07781$i$1))|0;
         $670 = (($12) + ($669<<2)|0);
         $671 = HEAP32[$670>>2]|0;
         $672 = (($13) + ($$07980$i$1<<2)|0);
         HEAP32[$672>>2] = $671;
         $673 = (($$07980$i$1) + 1)|0;
         $674 = (($$07781$i$1) + 1)|0;
         $675 = ($$07781$i$1|0)<($405|0);
         if ($675) {
          $$07781$i$1 = $674;$$07980$i$1 = $673;
         } else {
          break;
         }
        }
       }
       $676 = (($399) + ($33<<2)|0);
       $677 = (((32192 + ($9<<3)|0)) + 4|0);
       $678 = HEAP8[$677>>0]|0;
       $679 = $678 << 24 >> 24;
       $680 = (((32192 + ($9<<3)|0)) + 5|0);
       $681 = HEAP8[$680>>0]|0;
       $682 = $681 << 24 >> 24;
       $683 = (($676) + ($346<<2)|0);
       $684 = (0 - ($682))|0;
       $685 = (($683) + ($684<<2)|0);
       $686 = (1 - ($679))|0;
       $687 = (($686) + ($682))|0;
       _celt_pitch_xcorr_c($676,$685,$12,$33,$687,$11);
       $688 = ($678<<24>>24)>($681<<24>>24);
       if (!($688)) {
        $$07781$i$2 = $679;$$07980$i$2 = 0;
        while(1) {
         $689 = (($682) - ($$07781$i$2))|0;
         $690 = (($12) + ($689<<2)|0);
         $691 = HEAP32[$690>>2]|0;
         $692 = (($13) + ($$07980$i$2<<2)|0);
         HEAP32[$692>>2] = $691;
         $693 = (($$07980$i$2) + 1)|0;
         $694 = (($$07781$i$2) + 1)|0;
         $695 = ($$07781$i$2|0)<($682|0);
         if ($695) {
          $$07781$i$2 = $694;$$07980$i$2 = $693;
         } else {
          break;
         }
        }
       }
       $696 = (($676) + ($33<<2)|0);
       $697 = (((32192 + ($9<<3)|0)) + 6|0);
       $698 = HEAP8[$697>>0]|0;
       $699 = $698 << 24 >> 24;
       $700 = (((32192 + ($9<<3)|0)) + 7|0);
       $701 = HEAP8[$700>>0]|0;
       $702 = $701 << 24 >> 24;
       $703 = (($696) + ($346<<2)|0);
       $704 = (0 - ($702))|0;
       $705 = (($703) + ($704<<2)|0);
       $706 = (1 - ($699))|0;
       $707 = (($706) + ($702))|0;
       _celt_pitch_xcorr_c($696,$705,$12,$33,$707,$11);
       $708 = ($698<<24>>24)>($701<<24>>24);
       if ($708) {
        label = 113;
        break;
       }
       $$07781$i$3 = $699;$$07980$i$3 = 0;
       while(1) {
        $709 = (($702) - ($$07781$i$3))|0;
        $710 = (($12) + ($709<<2)|0);
        $711 = HEAP32[$710>>2]|0;
        $712 = (($13) + ($$07980$i$3<<2)|0);
        HEAP32[$712>>2] = $711;
        $713 = (($$07980$i$3) + 1)|0;
        $714 = (($$07781$i$3) + 1)|0;
        $715 = ($$07781$i$3|0)<($702|0);
        if ($715) {
         $$07781$i$3 = $714;$$07980$i$3 = $713;
        } else {
         label = 113;
         break;
        }
       }
      }
     } else {
      if ($234) {
       $337 = ($8*20)|0;
       $338 = (($0) + ($337<<2)|0);
       $339 = (0 - ($333))|0;
       $$0103104$i = 31968;$$072102105$i = 37937;$$073101106$i = 12;$$076100107$i = 12;$358 = $339;$363 = $12;$716 = $338;
       label = 102;
       break;
      } else {
       label = 115;
       break;
      }
     }
    } while(0);
    if ((label|0) == 102) {
     $$07489$us$i = $716;$$07887$us$i = 0;
     while(1) {
      $348 = $$07887$us$i << 1;
      $349 = (($$072102105$i) + ($348)|0);
      $350 = HEAP8[$349>>0]|0;
      $351 = $350 << 24 >> 24;
      $352 = (0 - ($351))|0;
      $353 = $348 | 1;
      $354 = (($$072102105$i) + ($353)|0);
      $355 = HEAP8[$354>>0]|0;
      $356 = $355 << 24 >> 24;
      $357 = (($$07489$us$i) + ($358<<2)|0);
      $359 = (0 - ($356))|0;
      $360 = (($357) + ($359<<2)|0);
      $361 = (1 - ($351))|0;
      $362 = (($361) + ($356))|0;
      _celt_pitch_xcorr_c($$07489$us$i,$360,$363,$33,$362,$11);
      $364 = ($350<<24>>24)>($355<<24>>24);
      if (!($364)) {
       $$07781$us$i = $351;$$07980$us$i = 0;
       while(1) {
        $365 = (($356) - ($$07781$us$i))|0;
        $366 = (($12) + ($365<<2)|0);
        $367 = HEAP32[$366>>2]|0;
        $368 = (($13) + ($$07980$us$i<<2)|0);
        HEAP32[$368>>2] = $367;
        $369 = (($$07980$us$i) + 1)|0;
        $370 = (($$07781$us$i) + 1)|0;
        $371 = ($$07781$us$i|0)<($356|0);
        if ($371) {
         $$07781$us$i = $370;$$07980$us$i = $369;
        } else {
         break;
        }
       }
      }
      $373 = Math_imul($$07887$us$i, $$073101106$i)|0;
      $scevgep95$i = (($13) + ($352<<2)|0);
      $$07583$us$i = 0;
      while(1) {
       $scevgep$i564 = ((($25) + (($$07887$us$i*680)|0)|0) + (($$07583$us$i*20)|0)|0);
       $372 = (($$07583$us$i) + ($373))|0;
       $374 = (($$0103104$i) + ($372)|0);
       $375 = HEAP8[$374>>0]|0;
       $376 = $375 << 24 >> 24;
       $scevgep96$i = (($scevgep95$i) + ($376<<2)|0);
       ;HEAP32[$scevgep$i564>>2]=HEAP32[$scevgep96$i>>2]|0;HEAP32[$scevgep$i564+4>>2]=HEAP32[$scevgep96$i+4>>2]|0;HEAP32[$scevgep$i564+8>>2]=HEAP32[$scevgep96$i+8>>2]|0;HEAP32[$scevgep$i564+12>>2]=HEAP32[$scevgep96$i+12>>2]|0;HEAP32[$scevgep$i564+16>>2]=HEAP32[$scevgep96$i+16>>2]|0;
       $377 = (($$07583$us$i) + 1)|0;
       $exitcond$i565 = ($377|0)==($$076100107$i|0);
       if ($exitcond$i565) {
        break;
       } else {
        $$07583$us$i = $377;
       }
      }
      $378 = (($$07489$us$i) + ($33<<2)|0);
      $379 = (($$07887$us$i) + 1)|0;
      $exitcond98$i = ($379|0)==($10|0);
      if ($exitcond98$i) {
       label = 113;
       break;
      } else {
       $$07489$us$i = $378;$$07887$us$i = $379;
      }
     }
    }
    L182: do {
     if ((label|0) == 113) {
      do {
       if ($266) {
        $416 = (37941 + ($9)|0);
        $417 = (32192 + ($9<<3)|0);
        $418 = HEAP8[$416>>0]|0;
        $419 = $418 << 24 >> 24;
        $420 = ($8*20)|0;
        $421 = (($0) + ($420<<2)|0);
        $422 = ($418<<24>>24)>(0);
        if ($422) {
         $$0121122$i = 32048;$$085120123$i = $417;$$087119124$i = 34;$$090118125$i = $419;$434 = $13;$717 = $421;
         label = 118;
        } else {
         $465 = (32192 + ($9<<3)|0);
         $466 = HEAP8[$465>>0]|0;
         $467 = $466 << 24 >> 24;
         $468 = (($333) + ($467))|0;
         $469 = (0 - ($468))|0;
         $470 = (($421) + ($469<<2)|0);
         $471 = (+_silk_energy_FLP($470,$33));
         $472 = $471 + 0.001;
         $473 = Math_fround($472);
         HEAPF32[$13>>2] = $473;
         $474 = (((32192 + ($9<<3)|0)) + 1|0);
         $475 = HEAP8[$474>>0]|0;
         $476 = ($475<<24>>24)>($466<<24>>24);
         if ($476) {
          $477 = $475 << 24 >> 24;
          $478 = (1 - ($467))|0;
          $479 = (($478) + ($477))|0;
          $$08896$i = $472;$$09195$i = 1;
          while(1) {
           $480 = (($33) - ($$09195$i))|0;
           $481 = (($470) + ($480<<2)|0);
           $482 = Math_fround(HEAPF32[$481>>2]);
           $483 = +$482;
           $484 = $483 * $483;
           $485 = $$08896$i - $484;
           $486 = (0 - ($$09195$i))|0;
           $487 = (($470) + ($486<<2)|0);
           $488 = Math_fround(HEAPF32[$487>>2]);
           $489 = +$488;
           $490 = $489 * $489;
           $491 = $485 + $490;
           $492 = Math_fround($491);
           $493 = (($13) + ($$09195$i<<2)|0);
           HEAPF32[$493>>2] = $492;
           $494 = (($$09195$i) + 1)|0;
           $exitcond116$i = ($494|0)==($479|0);
           if ($exitcond116$i) {
            break;
           } else {
            $$08896$i = $491;$$09195$i = $494;
           }
          }
         }
         $495 = (($421) + ($33<<2)|0);
         $496 = (((32192 + ($9<<3)|0)) + 2|0);
         $497 = HEAP8[$496>>0]|0;
         $498 = $497 << 24 >> 24;
         $499 = (($333) + ($498))|0;
         $500 = (0 - ($499))|0;
         $501 = (($495) + ($500<<2)|0);
         $502 = (+_silk_energy_FLP($501,$33));
         $503 = $502 + 0.001;
         $504 = Math_fround($503);
         HEAPF32[$13>>2] = $504;
         $505 = (((32192 + ($9<<3)|0)) + 3|0);
         $506 = HEAP8[$505>>0]|0;
         $507 = ($506<<24>>24)>($497<<24>>24);
         if ($507) {
          $589 = $506 << 24 >> 24;
          $590 = (1 - ($498))|0;
          $591 = (($590) + ($589))|0;
          $$08896$i$1 = $503;$$09195$i$1 = 1;
          while(1) {
           $592 = (($33) - ($$09195$i$1))|0;
           $593 = (($501) + ($592<<2)|0);
           $594 = Math_fround(HEAPF32[$593>>2]);
           $595 = +$594;
           $596 = $595 * $595;
           $597 = $$08896$i$1 - $596;
           $598 = (0 - ($$09195$i$1))|0;
           $599 = (($501) + ($598<<2)|0);
           $600 = Math_fround(HEAPF32[$599>>2]);
           $601 = +$600;
           $602 = $601 * $601;
           $603 = $597 + $602;
           $604 = Math_fround($603);
           $605 = (($13) + ($$09195$i$1<<2)|0);
           HEAPF32[$605>>2] = $604;
           $606 = (($$09195$i$1) + 1)|0;
           $exitcond116$i$1 = ($606|0)==($591|0);
           if ($exitcond116$i$1) {
            break;
           } else {
            $$08896$i$1 = $603;$$09195$i$1 = $606;
           }
          }
         }
         $607 = (($495) + ($33<<2)|0);
         $608 = (((32192 + ($9<<3)|0)) + 4|0);
         $609 = HEAP8[$608>>0]|0;
         $610 = $609 << 24 >> 24;
         $611 = (($333) + ($610))|0;
         $612 = (0 - ($611))|0;
         $613 = (($607) + ($612<<2)|0);
         $614 = (+_silk_energy_FLP($613,$33));
         $615 = $614 + 0.001;
         $616 = Math_fround($615);
         HEAPF32[$13>>2] = $616;
         $617 = (((32192 + ($9<<3)|0)) + 5|0);
         $618 = HEAP8[$617>>0]|0;
         $619 = ($618<<24>>24)>($609<<24>>24);
         if ($619) {
          $620 = $618 << 24 >> 24;
          $621 = (1 - ($610))|0;
          $622 = (($621) + ($620))|0;
          $$08896$i$2 = $615;$$09195$i$2 = 1;
          while(1) {
           $623 = (($33) - ($$09195$i$2))|0;
           $624 = (($613) + ($623<<2)|0);
           $625 = Math_fround(HEAPF32[$624>>2]);
           $626 = +$625;
           $627 = $626 * $626;
           $628 = $$08896$i$2 - $627;
           $629 = (0 - ($$09195$i$2))|0;
           $630 = (($613) + ($629<<2)|0);
           $631 = Math_fround(HEAPF32[$630>>2]);
           $632 = +$631;
           $633 = $632 * $632;
           $634 = $628 + $633;
           $635 = Math_fround($634);
           $636 = (($13) + ($$09195$i$2<<2)|0);
           HEAPF32[$636>>2] = $635;
           $637 = (($$09195$i$2) + 1)|0;
           $exitcond116$i$2 = ($637|0)==($622|0);
           if ($exitcond116$i$2) {
            break;
           } else {
            $$08896$i$2 = $634;$$09195$i$2 = $637;
           }
          }
         }
         $638 = (($607) + ($33<<2)|0);
         $639 = (((32192 + ($9<<3)|0)) + 6|0);
         $640 = HEAP8[$639>>0]|0;
         $641 = $640 << 24 >> 24;
         $642 = (($333) + ($641))|0;
         $643 = (0 - ($642))|0;
         $644 = (($638) + ($643<<2)|0);
         $645 = (+_silk_energy_FLP($644,$33));
         $646 = $645 + 0.001;
         $647 = Math_fround($646);
         HEAPF32[$13>>2] = $647;
         $648 = (((32192 + ($9<<3)|0)) + 7|0);
         $649 = HEAP8[$648>>0]|0;
         $650 = ($649<<24>>24)>($640<<24>>24);
         if (!($650)) {
          break;
         }
         $651 = $649 << 24 >> 24;
         $652 = (1 - ($641))|0;
         $653 = (($652) + ($651))|0;
         $$08896$i$3 = $646;$$09195$i$3 = 1;
         while(1) {
          $654 = (($33) - ($$09195$i$3))|0;
          $655 = (($644) + ($654<<2)|0);
          $656 = Math_fround(HEAPF32[$655>>2]);
          $657 = +$656;
          $658 = $657 * $657;
          $659 = $$08896$i$3 - $658;
          $660 = (0 - ($$09195$i$3))|0;
          $661 = (($644) + ($660<<2)|0);
          $662 = Math_fround(HEAPF32[$661>>2]);
          $663 = +$662;
          $664 = $663 * $663;
          $665 = $659 + $664;
          $666 = Math_fround($665);
          $667 = (($13) + ($$09195$i$3<<2)|0);
          HEAPF32[$667>>2] = $666;
          $668 = (($$09195$i$3) + 1)|0;
          $exitcond116$i$3 = ($668|0)==($653|0);
          if ($exitcond116$i$3) {
           break;
          } else {
           $$08896$i$3 = $665;$$09195$i$3 = $668;
          }
         }
        }
       } else {
        if (!($234)) {
         label = 115;
         break L182;
        }
        $414 = ($8*20)|0;
        $415 = (($0) + ($414<<2)|0);
        $$0121122$i = 31968;$$085120123$i = 37937;$$087119124$i = 12;$$090118125$i = 12;$434 = $13;$717 = $415;
        label = 118;
       }
      } while(0);
      if ((label|0) == 118) {
       $$086104$us$i = $717;$$089102$us$i = 0;
       while(1) {
        $423 = $$089102$us$i << 1;
        $424 = (($$085120123$i) + ($423)|0);
        $425 = HEAP8[$424>>0]|0;
        $426 = $425 << 24 >> 24;
        $427 = (0 - ($426))|0;
        $428 = (($333) + ($426))|0;
        $429 = (0 - ($428))|0;
        $430 = (($$086104$us$i) + ($429<<2)|0);
        $431 = (+_silk_energy_FLP($430,$33));
        $432 = $431 + 0.001;
        $433 = Math_fround($432);
        HEAPF32[$434>>2] = $433;
        $435 = $423 | 1;
        $436 = (($$085120123$i) + ($435)|0);
        $437 = HEAP8[$436>>0]|0;
        $438 = ($437<<24>>24)>($425<<24>>24);
        if ($438) {
         $461 = $437 << 24 >> 24;
         $462 = (1 - ($426))|0;
         $454 = (($462) + ($461))|0;
         $$08896$us$i = $432;$$09195$us$i = 1;
         while(1) {
          $439 = (($33) - ($$09195$us$i))|0;
          $440 = (($430) + ($439<<2)|0);
          $441 = Math_fround(HEAPF32[$440>>2]);
          $442 = +$441;
          $443 = $442 * $442;
          $444 = $$08896$us$i - $443;
          $445 = (0 - ($$09195$us$i))|0;
          $446 = (($430) + ($445<<2)|0);
          $447 = Math_fround(HEAPF32[$446>>2]);
          $448 = +$447;
          $449 = $448 * $448;
          $450 = $444 + $449;
          $451 = Math_fround($450);
          $452 = (($13) + ($$09195$us$i<<2)|0);
          HEAPF32[$452>>2] = $451;
          $453 = (($$09195$us$i) + 1)|0;
          $exitcond$i = ($453|0)==($454|0);
          if ($exitcond$i) {
           break;
          } else {
           $$08896$us$i = $450;$$09195$us$i = $453;
          }
         }
        }
        $456 = Math_imul($$089102$us$i, $$087119124$i)|0;
        $scevgep111$i = (($13) + ($427<<2)|0);
        $$198$us$i = 0;
        while(1) {
         $scevgep$i = ((($24) + (($$089102$us$i*680)|0)|0) + (($$198$us$i*20)|0)|0);
         $455 = (($$198$us$i) + ($456))|0;
         $457 = (($$0121122$i) + ($455)|0);
         $458 = HEAP8[$457>>0]|0;
         $459 = $458 << 24 >> 24;
         $scevgep112$i = (($scevgep111$i) + ($459<<2)|0);
         ;HEAP32[$scevgep$i>>2]=HEAP32[$scevgep112$i>>2]|0;HEAP32[$scevgep$i+4>>2]=HEAP32[$scevgep112$i+4>>2]|0;HEAP32[$scevgep$i+8>>2]=HEAP32[$scevgep112$i+8>>2]|0;HEAP32[$scevgep$i+12>>2]=HEAP32[$scevgep112$i+12>>2]|0;HEAP32[$scevgep$i+16>>2]=HEAP32[$scevgep112$i+16>>2]|0;
         $460 = (($$198$us$i) + 1)|0;
         $exitcond114$i = ($460|0)==($$090118125$i|0);
         if ($exitcond114$i) {
          break;
         } else {
          $$198$us$i = $460;
         }
        }
        $463 = (($$086104$us$i) + ($33<<2)|0);
        $464 = (($$089102$us$i) + 1)|0;
        $exitcond115$i = ($464|0)==($10|0);
        if ($exitcond115$i) {
         break;
        } else {
         $$086104$us$i = $463;$$089102$us$i = $464;
        }
       }
      }
      $508 = (Math_fround(($331|0)));
      $509 = Math_fround(Math_fround(0.0500000007) / $508);
      if ($266) {
       $510 = (37941 + ($9)|0);
       $511 = HEAP8[$510>>0]|0;
       $512 = $511 << 24 >> 24;
       $$1 = 32048;$$1470 = $512;$$1502 = 34;$527 = $509;
      } else {
       $$1 = 31968;$$1470 = 12;$$1502 = 12;$527 = $509;
      }
     }
    } while(0);
    if ((label|0) == 115) {
     $412 = (Math_fround(($331|0)));
     $413 = Math_fround(Math_fround(0.0500000007) / $412);
     $$1 = 31968;$$1470 = 12;$$1502 = 12;$527 = $413;
    }
    $513 = ($8*20)|0;
    $514 = (($0) + ($513<<2)|0);
    $515 = Math_imul($33, $10)|0;
    $516 = (+_silk_energy_FLP($514,$515));
    $517 = $516 + 1.0;
    $518 = ($333|0)>($336|0);
    if ($518) {
     $$0503$lcssa = $331;$$2520$lcssa = 0;
    } else {
     $519 = ($$1470|0)>(0);
     $$0494600 = 0;$$0503599 = $331;$$1483603 = $333;$$2508598 = Math_fround(-1000.0);$$2520597 = 0;
     while(1) {
      L228: do {
       if ($519) {
        if (!($234)) {
         $$1504589 = $$0503599;$$2486590 = 0;$$3509588 = $$2508598;$$3521587 = $$2520597;
         while(1) {
          $545 = $$3509588 < Math_fround(0.0);
          if ($545) {
           $546 = (32048 + ($$2486590)|0);
           $547 = HEAP8[$546>>0]|0;
           $548 = $547 << 24 >> 24;
           $549 = (($$1483603) + ($548))|0;
           $550 = ($549|0)<($35|0);
           $spec$select530 = $550 ? $$2486590 : $$3521587;
           $spec$select531 = $550 ? Math_fround(0.0) : $$3509588;
           $spec$select532 = $550 ? $$1483603 : $$1504589;
           $$2505 = $spec$select532;$$4510 = $spec$select531;$$4522 = $spec$select530;
          } else {
           $$2505 = $$1504589;$$4510 = $$3509588;$$4522 = $$3521587;
          }
          $551 = (($$2486590) + 1)|0;
          $exitcond686 = ($551|0)==($$1470|0);
          if ($exitcond686) {
           $$1504$lcssa = $$2505;$$3509$lcssa = $$4510;$$3521$lcssa = $$4522;
           break L228;
          } else {
           $$1504589 = $$2505;$$2486590 = $551;$$3509588 = $$4510;$$3521587 = $$4522;
          }
         }
        }
        $$1504589$us = $$0503599;$$2486590$us = 0;$$3509588$us = $$2508598;$$3521587$us = $$2520597;
        while(1) {
         $$0491581$us = 0.0;$$0493580$us = $517;$$3479582$us = 0;
         while(1) {
          $537 = (((($25) + (($$3479582$us*680)|0)|0) + (($$2486590$us*20)|0)|0) + ($$0494600<<2)|0);
          $538 = Math_fround(HEAPF32[$537>>2]);
          $539 = +$538;
          $521 = $$0491581$us + $539;
          $540 = (((($24) + (($$3479582$us*680)|0)|0) + (($$2486590$us*20)|0)|0) + ($$0494600<<2)|0);
          $541 = Math_fround(HEAPF32[$540>>2]);
          $542 = +$541;
          $523 = $$0493580$us + $542;
          $543 = (($$3479582$us) + 1)|0;
          $exitcond687 = ($543|0)==($10|0);
          if ($exitcond687) {
           break;
          } else {
           $$0491581$us = $521;$$0493580$us = $523;$$3479582$us = $543;
          }
         }
         $544 = $521 > 0.0;
         if ($544) {
          $520 = $521 * 2.0;
          $522 = $520 / $523;
          $524 = Math_fround($522);
          $525 = (Math_fround(($$2486590$us|0)));
          $526 = Math_fround($527 * $525);
          $528 = Math_fround(Math_fround(1.0) - $526);
          $529 = Math_fround($528 * $524);
          $$2525$us = $529;
         } else {
          $$2525$us = Math_fround(0.0);
         }
         $530 = $$2525$us > $$3509588$us;
         if ($530) {
          $531 = (32048 + ($$2486590$us)|0);
          $532 = HEAP8[$531>>0]|0;
          $533 = $532 << 24 >> 24;
          $534 = (($$1483603) + ($533))|0;
          $535 = ($534|0)<($35|0);
          $spec$select530$us = $535 ? $$2486590$us : $$3521587$us;
          $spec$select531$us = $535 ? $$2525$us : $$3509588$us;
          $spec$select532$us = $535 ? $$1483603 : $$1504589$us;
          $$2505$us = $spec$select532$us;$$4510$us = $spec$select531$us;$$4522$us = $spec$select530$us;
         } else {
          $$2505$us = $$1504589$us;$$4510$us = $$3509588$us;$$4522$us = $$3521587$us;
         }
         $536 = (($$2486590$us) + 1)|0;
         $exitcond688 = ($536|0)==($$1470|0);
         if ($exitcond688) {
          $$1504$lcssa = $$2505$us;$$3509$lcssa = $$4510$us;$$3521$lcssa = $$4522$us;
          break;
         } else {
          $$1504589$us = $$2505$us;$$2486590$us = $536;$$3509588$us = $$4510$us;$$3521587$us = $$4522$us;
         }
        }
       } else {
        $$1504$lcssa = $$0503599;$$3509$lcssa = $$2508598;$$3521$lcssa = $$2520597;
       }
      } while(0);
      $552 = (($$0494600) + 1)|0;
      $553 = (($$1483603) + 1)|0;
      $554 = ($$1483603|0)<($336|0);
      if ($554) {
       $$0494600 = $552;$$0503599 = $$1504$lcssa;$$1483603 = $553;$$2508598 = $$3509$lcssa;$$2520597 = $$3521$lcssa;
      } else {
       $$0503$lcssa = $$1504$lcssa;$$2520$lcssa = $$3521$lcssa;
       break;
      }
     }
    }
    if ($234) {
     $555 = ($34|0)>($35|0);
     if ($555) {
      $$4480579$us = 0;
      while(1) {
       $556 = Math_imul($$4480579$us, $$1502)|0;
       $557 = (($556) + ($$2520$lcssa))|0;
       $558 = (($$1) + ($557)|0);
       $559 = HEAP8[$558>>0]|0;
       $560 = $559 << 24 >> 24;
       $561 = (($$0503$lcssa) + ($560))|0;
       $562 = (($1) + ($$4480579$us<<2)|0);
       $563 = ($561|0)>($34|0);
       $564 = ($561|0)<($35|0);
       $$533$us = $564 ? $35 : $561;
       $spec$select574$us = $563 ? $34 : $$533$us;
       HEAP32[$562>>2] = $spec$select574$us;
       $565 = (($$4480579$us) + 1)|0;
       $exitcond = ($565|0)==($10|0);
       if ($exitcond) {
        break;
       } else {
        $$4480579$us = $565;
       }
      }
     } else {
      $$4480579 = 0;
      while(1) {
       $566 = Math_imul($$4480579, $$1502)|0;
       $567 = (($566) + ($$2520$lcssa))|0;
       $568 = (($$1) + ($567)|0);
       $569 = HEAP8[$568>>0]|0;
       $570 = $569 << 24 >> 24;
       $571 = (($$0503$lcssa) + ($570))|0;
       $572 = (($1) + ($$4480579<<2)|0);
       $573 = ($571|0)>($35|0);
       $574 = ($571|0)<($34|0);
       $$534 = $574 ? $34 : $571;
       $spec$select575 = $573 ? $35 : $$534;
       HEAP32[$572>>2] = $spec$select575;
       $575 = (($$4480579) + 1)|0;
       $exitcond685 = ($575|0)==($10|0);
       if ($exitcond685) {
        break;
       } else {
        $$4480579 = $575;
       }
      }
     }
    }
    $576 = (($$0503$lcssa) - ($34))|0;
    $storemerge$in = $$2520$lcssa;$storemerge527$in = $576;
   } else {
    if ($234) {
     $$5481611 = 0;
     while(1) {
      $577 = Math_imul($$5481611, $spec$select569)|0;
      $578 = (($577) + ($spec$select536))|0;
      $579 = (($spec$select571) + ($578)|0);
      $580 = HEAP8[$579>>0]|0;
      $581 = $580 << 24 >> 24;
      $582 = (($spec$select537) + ($581))|0;
      $583 = (($1) + ($$5481611<<2)|0);
      $584 = ($582|0)>(16);
      $$535 = $584 ? $582 : 16;
      $585 = ($$535|0)<(144);
      $586 = $585 ? $$535 : 144;
      HEAP32[$583>>2] = $586;
      $587 = (($$5481611) + 1)|0;
      $exitcond689 = ($587|0)==($10|0);
      if ($exitcond689) {
       break;
      } else {
       $$5481611 = $587;
      }
     }
    }
    $588 = (($spec$select537) + 65520)|0;
    $storemerge$in = $spec$select536;$storemerge527$in = $588;
   }
   $storemerge527 = $storemerge527$in&65535;
   HEAP16[$2>>1] = $storemerge527;
   $storemerge = $storemerge$in&255;
   $$0471 = 0;$storemerge$sink = $storemerge;
   HEAP8[$3>>0] = $storemerge$sink;
   STACKTOP = sp;return ($$0471|0);
  }
 }
 ;HEAP32[$1>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;
 HEAPF32[$4>>2] = Math_fround(0.0);
 HEAP16[$2>>1] = 0;
 $$0471 = 1;$storemerge$sink = 0;
 HEAP8[$3>>0] = $storemerge$sink;
 STACKTOP = sp;return ($$0471|0);
}
function _silk_scale_copy_vector_FLP($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = Math_fround($2);
 $3 = $3|0;
 var $$0$lcssa = 0, $$035 = 0, $$134 = 0, $10 = 0, $11 = 0, $12 = Math_fround(0), $13 = Math_fround(0), $14 = 0, $15 = 0, $16 = 0, $17 = Math_fround(0), $18 = Math_fround(0), $19 = 0, $20 = 0, $21 = 0, $22 = Math_fround(0), $23 = Math_fround(0), $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = Math_fround(0), $30 = Math_fround(0), $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $3 & 65532;
 $5 = ($4|0)==(0);
 if ($5) {
  $$0$lcssa = 0;
 } else {
  $$035 = 0;
  while(1) {
   $6 = (($1) + ($$035<<2)|0);
   $7 = Math_fround(HEAPF32[$6>>2]);
   $8 = Math_fround($7 * $2);
   $9 = (($0) + ($$035<<2)|0);
   HEAPF32[$9>>2] = $8;
   $10 = $$035 | 1;
   $11 = (($1) + ($10<<2)|0);
   $12 = Math_fround(HEAPF32[$11>>2]);
   $13 = Math_fround($12 * $2);
   $14 = (($0) + ($10<<2)|0);
   HEAPF32[$14>>2] = $13;
   $15 = $$035 | 2;
   $16 = (($1) + ($15<<2)|0);
   $17 = Math_fround(HEAPF32[$16>>2]);
   $18 = Math_fround($17 * $2);
   $19 = (($0) + ($15<<2)|0);
   HEAPF32[$19>>2] = $18;
   $20 = $$035 | 3;
   $21 = (($1) + ($20<<2)|0);
   $22 = Math_fround(HEAPF32[$21>>2]);
   $23 = Math_fround($22 * $2);
   $24 = (($0) + ($20<<2)|0);
   HEAPF32[$24>>2] = $23;
   $25 = (($$035) + 4)|0;
   $26 = ($25>>>0)<($4>>>0);
   if ($26) {
    $$035 = $25;
   } else {
    $$0$lcssa = $4;
    break;
   }
  }
 }
 $27 = ($$0$lcssa|0)<($3|0);
 if (!($27)) {
  return;
 }
 $$134 = $$0$lcssa;
 while(1) {
  $28 = (($1) + ($$134<<2)|0);
  $29 = Math_fround(HEAPF32[$28>>2]);
  $30 = Math_fround($29 * $2);
  $31 = (($0) + ($$134<<2)|0);
  HEAPF32[$31>>2] = $30;
  $32 = (($$134) + 1)|0;
  $exitcond = ($32|0)==($3|0);
  if ($exitcond) {
   break;
  } else {
   $$134 = $32;
  }
 }
 return;
}
function _silk_schur_FLP($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$139 = 0, $$phi$trans$insert = 0, $$pre = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0, $20 = 0.0, $21 = 0.0, $22 = Math_fround(0), $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0.0, $43 = Math_fround(0);
 var $5 = Math_fround(0), $6 = 0.0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond43 = 0, $exitcond46 = 0, $indvars$iv = 0, $indvars$iv$next = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $3 = sp;
 $$0 = 0;
 while(1) {
  $4 = (($1) + ($$0<<2)|0);
  $5 = Math_fround(HEAPF32[$4>>2]);
  $6 = +$5;
  $7 = (((($3) + ($$0<<4)|0)) + 8|0);
  HEAPF64[$7>>3] = $6;
  $8 = (($3) + ($$0<<4)|0);
  HEAPF64[$8>>3] = $6;
  $9 = (($$0) + 1)|0;
  $10 = ($$0|0)<($2|0);
  if ($10) {
   $$0 = $9;
  } else {
   break;
  }
 }
 $11 = ($2|0)>(0);
 $12 = ((($3)) + 8|0);
 if (!($11)) {
  $42 = +HEAPF64[$12>>3];
  $43 = Math_fround($42);
  STACKTOP = sp;return (Math_fround($43));
 }
 $13 = ((($3)) + 8|0);
 $$139 = 0;$indvars$iv = $2;
 while(1) {
  $14 = (($$139) + 1)|0;
  $15 = (($3) + ($14<<4)|0);
  $16 = +HEAPF64[$15>>3];
  $17 = - $16;
  $18 = +HEAPF64[$12>>3];
  $19 = $18 > 9.9999997171806853E-10;
  $20 = $19 ? $18 : 9.9999997171806853E-10;
  $21 = $17 / $20;
  $22 = Math_fround($21);
  $23 = (($0) + ($$139<<2)|0);
  HEAPF32[$23>>2] = $22;
  $24 = ($$139|0)<($2|0);
  if ($24) {
   $25 = (($$139) + 1)|0;
   $26 = (($3) + ($25<<4)|0);
   $27 = +HEAPF64[$26>>3];
   $28 = $21 * $18;
   $29 = $27 + $28;
   HEAPF64[$26>>3] = $29;
   $30 = $21 * $27;
   $31 = $18 + $30;
   HEAPF64[$13>>3] = $31;
   $exitcond46 = ($indvars$iv|0)==(1);
   if (!($exitcond46)) {
    $32 = 1;
    while(1) {
     $$phi$trans$insert = (((($3) + ($32<<4)|0)) + 8|0);
     $$pre = +HEAPF64[$$phi$trans$insert>>3];
     $33 = (($14) + ($32))|0;
     $34 = (($3) + ($33<<4)|0);
     $35 = +HEAPF64[$34>>3];
     $36 = (((($3) + ($32<<4)|0)) + 8|0);
     $37 = $21 * $$pre;
     $38 = $35 + $37;
     HEAPF64[$34>>3] = $38;
     $39 = $21 * $35;
     $40 = $$pre + $39;
     HEAPF64[$36>>3] = $40;
     $41 = (($32) + 1)|0;
     $exitcond = ($41|0)==($indvars$iv|0);
     if ($exitcond) {
      break;
     } else {
      $32 = $41;
     }
    }
   }
  }
  $indvars$iv$next = (($indvars$iv) + -1)|0;
  $exitcond43 = ($14|0)==($2|0);
  if ($exitcond43) {
   break;
  } else {
   $$139 = $14;$indvars$iv = $indvars$iv$next;
  }
 }
 $42 = +HEAPF64[$12>>3];
 $43 = Math_fround($42);
 STACKTOP = sp;return (Math_fround($43));
}
function _silk_insertion_sort_decreasing_FLP($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$06579 = 0, $$074 = 0, $$074$in = 0, $$1$lcssa$us = 0, $$16675 = 0, $$167$us = 0, $$270 = 0, $$270$us = 0, $$pre = Math_fround(0), $$pre$phi89Z2D = 0, $$pre$phiZ2D = 0, $$pre88 = 0, $10 = 0, $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = Math_fround(0), $25 = Math_fround(0), $26 = 0, $27 = 0, $28 = Math_fround(0), $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = Math_fround(0), $44 = 0, $45 = Math_fround(0), $46 = 0, $47 = 0, $48 = Math_fround(0), $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = Math_fround(0), $exitcond = 0, $exitcond84 = 0, $exitcond85 = 0;
 var $exitcond86 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($3|0)>(0);
 if ($4) {
  $$06579 = 0;
  while(1) {
   $5 = (($1) + ($$06579<<2)|0);
   HEAP32[$5>>2] = $$06579;
   $6 = (($$06579) + 1)|0;
   $exitcond86 = ($6|0)==($3|0);
   if ($exitcond86) {
    break;
   } else {
    $$06579 = $6;
   }
  }
  $7 = ($3|0)>(1);
  if ($7) {
   $$16675 = 1;
   while(1) {
    $8 = (($0) + ($$16675<<2)|0);
    $9 = Math_fround(HEAPF32[$8>>2]);
    $$074$in = $$16675;
    while(1) {
     $$074 = (($$074$in) + -1)|0;
     $10 = (($0) + ($$074<<2)|0);
     $11 = Math_fround(HEAPF32[$10>>2]);
     $12 = $9 > $11;
     $13 = (($0) + ($$074$in<<2)|0);
     if (!($12)) {
      label = 8;
      break;
     }
     HEAPF32[$13>>2] = $11;
     $14 = (($1) + ($$074<<2)|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = (($1) + ($$074$in<<2)|0);
     HEAP32[$16>>2] = $15;
     $17 = ($$074$in|0)>(1);
     if ($17) {
      $$074$in = $$074;
     } else {
      $$pre$phi89Z2D = $14;$$pre$phiZ2D = $10;
      break;
     }
    }
    if ((label|0) == 8) {
     label = 0;
     $$pre88 = (($1) + ($$074$in<<2)|0);
     $$pre$phi89Z2D = $$pre88;$$pre$phiZ2D = $13;
    }
    HEAPF32[$$pre$phiZ2D>>2] = $9;
    HEAP32[$$pre$phi89Z2D>>2] = $$16675;
    $18 = (($$16675) + 1)|0;
    $exitcond85 = ($18|0)==($3|0);
    if ($exitcond85) {
     $47 = $7;
     break;
    } else {
     $$16675 = $18;
    }
   }
  } else {
   $47 = 0;
  }
 } else {
  $47 = 0;
 }
 $19 = ($3|0)<($2|0);
 if (!($19)) {
  return;
 }
 $20 = (($3) + -1)|0;
 $21 = (($0) + ($20<<2)|0);
 $22 = (($3) + -2)|0;
 if (!($47)) {
  $$pre = Math_fround(HEAPF32[$21>>2]);
  $41 = (($1) + ($20<<2)|0);
  $$270 = $3;$45 = $$pre;
  while(1) {
   $42 = (($0) + ($$270<<2)|0);
   $43 = Math_fround(HEAPF32[$42>>2]);
   $44 = $43 > $45;
   if ($44) {
    HEAPF32[$21>>2] = $43;
    HEAP32[$41>>2] = $$270;
    $48 = $43;
   } else {
    $48 = $45;
   }
   $46 = (($$270) + 1)|0;
   $exitcond84 = ($46|0)==($2|0);
   if ($exitcond84) {
    break;
   } else {
    $$270 = $46;$45 = $48;
   }
  }
  return;
 }
 $$270$us = $3;
 while(1) {
  $23 = (($0) + ($$270$us<<2)|0);
  $24 = Math_fround(HEAPF32[$23>>2]);
  $25 = Math_fround(HEAPF32[$21>>2]);
  $26 = $24 > $25;
  if ($26) {
   $$167$us = $22;
   while(1) {
    $27 = (($0) + ($$167$us<<2)|0);
    $28 = Math_fround(HEAPF32[$27>>2]);
    $29 = $24 > $28;
    if (!($29)) {
     $$1$lcssa$us = $$167$us;
     break;
    }
    $34 = (($$167$us) + 1)|0;
    $35 = (($0) + ($34<<2)|0);
    HEAPF32[$35>>2] = $28;
    $36 = (($1) + ($$167$us<<2)|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (($1) + ($34<<2)|0);
    HEAP32[$38>>2] = $37;
    $39 = (($$167$us) + -1)|0;
    $40 = ($$167$us|0)>(0);
    if ($40) {
     $$167$us = $39;
    } else {
     $$1$lcssa$us = $39;
     break;
    }
   }
   $30 = (($$1$lcssa$us) + 1)|0;
   $31 = (($0) + ($30<<2)|0);
   HEAPF32[$31>>2] = $24;
   $32 = (($1) + ($30<<2)|0);
   HEAP32[$32>>2] = $$270$us;
  }
  $33 = (($$270$us) + 1)|0;
  $exitcond = ($33|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $$270$us = $33;
  }
 }
 return;
}
function _opus_pcm_soft_clip($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0189239 = 0, $$0190$lcssa = 0, $$0190222 = 0, $$0191$lcssa = Math_fround(0), $$0191221 = Math_fround(0), $$0193$lcssa = 0, $$0193220 = 0, $$0194$lcssa = 0, $$0194214 = 0, $$0195 = 0, $$0197242 = 0, $$0199 = Math_fround(0), $$0236 = Math_fround(0), $$1 = 0, $$1192 = Math_fround(0), $$1198206 = 0, $$1200202 = Math_fround(0), $$2$lcssa = 0, $$2208 = 0, $$3231 = 0;
 var $$4235 = 0, $$mux = Math_fround(0), $$mux204 = Math_fround(0), $10 = 0, $11 = Math_fround(0), $12 = 0, $13 = Math_fround(0), $14 = 0, $15 = Math_fround(0), $16 = 0, $17 = 0, $18 = 0, $19 = Math_fround(0), $20 = 0, $21 = 0, $22 = Math_fround(0), $23 = Math_fround(0), $24 = 0, $25 = Math_fround(0), $26 = Math_fround(0);
 var $27 = 0, $28 = 0, $29 = Math_fround(0), $30 = 0, $31 = 0, $32 = 0, $33 = Math_fround(0), $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = Math_fround(0), $42 = Math_fround(0), $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = Math_fround(0), $49 = Math_fround(0), $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = Math_fround(0), $55 = Math_fround(0), $56 = 0, $57 = Math_fround(0), $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = Math_fround(0), $63 = Math_fround(0);
 var $64 = 0, $65 = Math_fround(0), $66 = Math_fround(0), $67 = Math_fround(0), $68 = Math_fround(0), $69 = Math_fround(0), $7 = 0, $70 = 0, $71 = Math_fround(0), $72 = 0, $73 = 0, $74 = 0, $75 = Math_fround(0), $76 = Math_fround(0), $77 = Math_fround(0), $78 = Math_fround(0), $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = Math_fround(0), $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = 0, $87 = Math_fround(0), $88 = 0, $89 = 0, $9 = 0, $90 = Math_fround(0), $91 = Math_fround(0), $92 = 0, $93 = Math_fround(0), $94 = 0, $95 = Math_fround(0), $96 = 0, $97 = 0, $98 = 0, $brmerge = 0, $brmerge203 = 0;
 var $exitcond = 0, $exitcond246 = 0, $exitcond247 = 0, $exitcond248 = 0, $or$cond = 0, $or$cond$not = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($2|0)>(0);
 $5 = ($1|0)>(0);
 $or$cond$not = $5 & $4;
 $6 = ($0|0)!=(0|0);
 $or$cond3 = $6 & $or$cond$not;
 $7 = ($3|0)!=(0|0);
 $or$cond5 = $7 & $or$cond3;
 if (!($or$cond5)) {
  return;
 }
 $8 = Math_imul($2, $1)|0;
 $9 = ($8|0)>(0);
 if ($9) {
  $$0197242 = 0;
  while(1) {
   $10 = (($0) + ($$0197242<<2)|0);
   $11 = Math_fround(HEAPF32[$10>>2]);
   $12 = $11 > Math_fround(2.0);
   $13 = $12 ? Math_fround(2.0) : $11;
   $14 = $13 < Math_fround(-2.0);
   $brmerge = $12 | $14;
   $$mux = $14 ? Math_fround(-2.0) : Math_fround(2.0);
   $15 = $brmerge ? $$mux : $11;
   HEAPF32[$10>>2] = $15;
   $16 = (($$0197242) + 1)|0;
   $exitcond248 = ($16|0)==($8|0);
   if ($exitcond248) {
    break;
   } else {
    $$0197242 = $16;
   }
  }
 }
 $$0189239 = 0;
 while(1) {
  $17 = (($0) + ($$0189239<<2)|0);
  $18 = (($3) + ($$0189239<<2)|0);
  $19 = Math_fround(HEAPF32[$18>>2]);
  $$1198206 = 0;
  while(1) {
   $20 = Math_imul($$1198206, $2)|0;
   $21 = (($17) + ($20<<2)|0);
   $22 = Math_fround(HEAPF32[$21>>2]);
   $23 = Math_fround($19 * $22);
   $24 = !($23 >= Math_fround(0.0));
   if (!($24)) {
    break;
   }
   $25 = Math_fround($22 * $23);
   $26 = Math_fround($22 + $25);
   HEAPF32[$21>>2] = $26;
   $27 = (($$1198206) + 1)|0;
   $28 = ($27|0)<($1|0);
   if ($28) {
    $$1198206 = $27;
   } else {
    break;
   }
  }
  $29 = Math_fround(HEAPF32[$17>>2]);
  $$0195 = 0;
  while(1) {
   $30 = ($$0195|0)<($1|0);
   L17: do {
    if ($30) {
     $$2208 = $$0195;
     while(1) {
      $31 = Math_imul($$2208, $2)|0;
      $32 = (($17) + ($31<<2)|0);
      $33 = Math_fround(HEAPF32[$32>>2]);
      $34 = $33 > Math_fround(1.0);
      $35 = $33 < Math_fround(-1.0);
      $or$cond = $34 | $35;
      if ($or$cond) {
       $$2$lcssa = $$2208;
       break L17;
      }
      $36 = (($$2208) + 1)|0;
      $37 = ($36|0)<($1|0);
      if ($37) {
       $$2208 = $36;
      } else {
       $$2$lcssa = $36;
       break;
      }
     }
    } else {
     $$2$lcssa = $$0195;
    }
   } while(0);
   $38 = ($$2$lcssa|0)==($1|0);
   if ($38) {
    $$1200202 = Math_fround(0.0);
    break;
   }
   $39 = Math_imul($$2$lcssa, $2)|0;
   $40 = (($17) + ($39<<2)|0);
   $41 = Math_fround(HEAPF32[$40>>2]);
   $42 = (Math_fround(Math_abs((Math_fround($41)))));
   $43 = ($$2$lcssa|0)>(0);
   L24: do {
    if ($43) {
     $$0194214 = $$2$lcssa;
     while(1) {
      $45 = (($$0194214) + -1)|0;
      $46 = Math_imul($45, $2)|0;
      $47 = (($17) + ($46<<2)|0);
      $48 = Math_fround(HEAPF32[$47>>2]);
      $49 = Math_fround($41 * $48);
      $50 = !($49 >= Math_fround(0.0));
      if ($50) {
       $$0194$lcssa = $$0194214;
       break L24;
      }
      $44 = ($$0194214|0)>(1);
      if ($44) {
       $$0194214 = $45;
      } else {
       $$0194$lcssa = $45;
       break;
      }
     }
    } else {
     $$0194$lcssa = $$2$lcssa;
    }
   } while(0);
   $51 = ($$2$lcssa|0)<($1|0);
   L30: do {
    if ($51) {
     $$0190222 = $$2$lcssa;$$0191221 = $42;$$0193220 = $$2$lcssa;
     while(1) {
      $52 = Math_imul($$0193220, $2)|0;
      $53 = (($17) + ($52<<2)|0);
      $54 = Math_fround(HEAPF32[$53>>2]);
      $55 = Math_fround($41 * $54);
      $56 = !($55 >= Math_fround(0.0));
      if ($56) {
       $$0190$lcssa = $$0190222;$$0191$lcssa = $$0191221;$$0193$lcssa = $$0193220;
       break L30;
      }
      $57 = (Math_fround(Math_abs((Math_fround($54)))));
      $58 = $57 > $$0191221;
      $$1192 = $58 ? $57 : $$0191221;
      $$1 = $58 ? $$0193220 : $$0190222;
      $59 = (($$0193220) + 1)|0;
      $60 = ($59|0)<($1|0);
      if ($60) {
       $$0190222 = $$1;$$0191221 = $$1192;$$0193220 = $59;
      } else {
       $$0190$lcssa = $$1;$$0191$lcssa = $$1192;$$0193$lcssa = $59;
       break;
      }
     }
    } else {
     $$0190$lcssa = $$2$lcssa;$$0191$lcssa = $42;$$0193$lcssa = $$2$lcssa;
    }
   } while(0);
   $61 = ($$0194$lcssa|0)==(0);
   if ($61) {
    $62 = Math_fround(HEAPF32[$17>>2]);
    $63 = Math_fround($41 * $62);
    $64 = $63 >= Math_fround(0.0);
    $81 = $64;
   } else {
    $81 = 0;
   }
   $65 = Math_fround($$0191$lcssa + Math_fround(-1.0));
   $66 = Math_fround($$0191$lcssa * $$0191$lcssa);
   $67 = Math_fround($65 / $66);
   $68 = Math_fround($67 * Math_fround(2.39999991E-7));
   $69 = Math_fround($67 + $68);
   $70 = $41 > Math_fround(0.0);
   $71 = Math_fround(- $69);
   $$0199 = $70 ? $71 : $69;
   $72 = ($$0194$lcssa|0)<($$0193$lcssa|0);
   if ($72) {
    $$3231 = $$0194$lcssa;
    while(1) {
     $73 = Math_imul($$3231, $2)|0;
     $74 = (($17) + ($73<<2)|0);
     $75 = Math_fround(HEAPF32[$74>>2]);
     $76 = Math_fround($$0199 * $75);
     $77 = Math_fround($75 * $76);
     $78 = Math_fround($75 + $77);
     HEAPF32[$74>>2] = $78;
     $79 = (($$3231) + 1)|0;
     $exitcond = ($79|0)==($$0193$lcssa|0);
     if ($exitcond) {
      break;
     } else {
      $$3231 = $79;
     }
    }
   }
   $80 = ($$0190$lcssa|0)>(1);
   $or$cond8 = $80 & $81;
   if ($or$cond8) {
    $82 = Math_fround(HEAPF32[$17>>2]);
    $83 = Math_fround($29 - $82);
    $84 = (Math_fround(($$0190$lcssa|0)));
    $85 = Math_fround($83 / $84);
    $86 = ($$0195|0)<($$0190$lcssa|0);
    if ($86) {
     $$0236 = $83;$$4235 = $$0195;
     while(1) {
      $87 = Math_fround($$0236 - $85);
      $88 = Math_imul($$4235, $2)|0;
      $89 = (($17) + ($88<<2)|0);
      $90 = Math_fround(HEAPF32[$89>>2]);
      $91 = Math_fround($87 + $90);
      $92 = $91 > Math_fround(1.0);
      $93 = $92 ? Math_fround(1.0) : $91;
      $94 = $93 < Math_fround(-1.0);
      $brmerge203 = $92 | $94;
      $$mux204 = $94 ? Math_fround(-1.0) : Math_fround(1.0);
      $95 = $brmerge203 ? $$mux204 : $91;
      HEAPF32[$89>>2] = $95;
      $96 = (($$4235) + 1)|0;
      $exitcond246 = ($96|0)==($$0190$lcssa|0);
      if ($exitcond246) {
       break;
      } else {
       $$0236 = $87;$$4235 = $96;
      }
     }
    }
   }
   $97 = ($$0193$lcssa|0)==($1|0);
   if ($97) {
    $$1200202 = $$0199;
    break;
   } else {
    $$0195 = $$0193$lcssa;
   }
  }
  HEAPF32[$18>>2] = $$1200202;
  $98 = (($$0189239) + 1)|0;
  $exitcond247 = ($98|0)==($2|0);
  if ($exitcond247) {
   break;
  } else {
   $$0189239 = $98;
  }
 }
 return;
}
function _encode_size($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)<(252);
 if ($2) {
  $3 = $0&255;
  HEAP8[$1>>0] = $3;
  $$0 = 1;
  return ($$0|0);
 } else {
  $4 = $0 | 252;
  $5 = $4&255;
  HEAP8[$1>>0] = $5;
  $6 = $4 & 255;
  $7 = (($0) - ($6))|0;
  $8 = $7 >>> 2;
  $9 = $8&255;
  $10 = ((($1)) + 1|0);
  HEAP8[$10>>0] = $9;
  $$0 = 2;
  return ($$0|0);
 }
 return (0)|0;
}
function _opus_packet_get_samples_per_frame($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = $2&255;
 $4 = $3 & 128;
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = $3 >>> 3;
  $7 = $6 & 3;
  $8 = $1 << $7;
  $9 = (($8|0) / 400)&-1;
  $$0 = $9;
  return ($$0|0);
 }
 $10 = $3 & 96;
 $11 = ($10|0)==(96);
 if ($11) {
  $12 = $3 & 8;
  $13 = ($12|0)==(0);
  if ($13) {
   $15 = (($1|0) / 100)&-1;
   $$0 = $15;
   return ($$0|0);
  } else {
   $14 = (($1|0) / 50)&-1;
   $$0 = $14;
   return ($$0|0);
  }
 } else {
  $16 = $3 >>> 3;
  $17 = $16 & 3;
  $18 = ($17|0)==(3);
  if ($18) {
   $19 = ($1*60)|0;
   $20 = (($19|0) / 1000)&-1;
   $$0 = $20;
   return ($$0|0);
  } else {
   $21 = $1 << $17;
   $22 = (($21|0) / 100)&-1;
   $$0 = $22;
   return ($$0|0);
  }
 }
 return (0)|0;
}
function _opus_packet_parse_impl($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$0$i = 0, $$0$i190 = 0, $$0$i191 = 0, $$0$i193 = 0, $$0165 = 0, $$0168 = 0, $$0172242 = 0, $$0174 = 0, $$0179240 = 0, $$0183 = 0, $$0183210 = 0, $$0184 = 0, $$0184208 = 0, $$0184209 = 0, $$0184217 = 0, $$1173 = 0, $$1173212 = 0, $$1173218 = 0, $$1180237 = 0, $$2 = 0;
 var $$2167207 = 0, $$2170206 = 0, $$2176205 = 0, $$3171 = 0, $$3171213 = 0, $$3171214 = 0, $$3171219 = 0, $$3177241 = 0, $$3182232 = 0, $$3182232$us = 0, $$3243 = 0, $$4 = 0, $$4178 = 0, $$4178211 = 0, $$4215 = 0, $$4220 = 0, $$5 = 0, $$6$lcssa = 0, $$6233 = 0, $$6233$us = 0;
 var $$lobit = 0, $$neg222 = 0, $$pre = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond = 0, $exitcond260 = 0, $exitcond261 = 0, $exitcond261295 = 0, $exitcond262 = 0, $or$cond = 0, $or$cond187 = 0, $or$cond189 = 0, $spec$select = 0, $storemerge = 0, $storemerge280 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = ($5|0)==(0|0);
 $9 = ($1|0)<(0);
 $or$cond = $9 | $8;
 if ($or$cond) {
  $$2 = -1;
  return ($$2|0);
 }
 $10 = ($1|0)==(0);
 if ($10) {
  $$2 = -4;
  return ($$2|0);
 }
 $trunc = HEAP8[$0>>0]|0;
 $11 = $trunc&255;
 $12 = $11 & 128;
 $13 = ($12|0)==(0);
 do {
  if ($13) {
   $18 = $11 & 96;
   $19 = ($18|0)==(96);
   if ($19) {
    $20 = $11 & 8;
    $21 = ($20|0)==(0);
    $spec$select = $21 ? 480 : 960;
    $$0$i = $spec$select;
    break;
   }
   $22 = $11 >>> 3;
   $23 = $22 & 3;
   $24 = ($23|0)==(3);
   if ($24) {
    $$0$i = 2880;
   } else {
    $25 = 48000 << $23;
    $26 = (($25>>>0) / 100)&-1;
    $$0$i = $26;
   }
  } else {
   $14 = $11 >>> 3;
   $15 = $14 & 3;
   $16 = 48000 << $15;
   $17 = (($16>>>0) / 400)&-1;
   $$0$i = $17;
  }
 } while(0);
 $27 = ((($0)) + 1|0);
 $28 = (($1) + -1)|0;
 $trunc$clear = $trunc & 3;
 L15: do {
  switch ($trunc$clear<<24>>24) {
  case 0:  {
   $$0183 = 0;$$0184 = 1;$$1173 = $28;$$3171 = 0;$$4 = $27;$$4178 = $28;
   label = 47;
   break;
  }
  case 1:  {
   $29 = ($2|0)==(0);
   if ($29) {
    $30 = $28 & 1;
    $31 = ($30|0)==(0);
    if ($31) {
     $32 = $28 >>> 1;
     $33 = $32&65535;
     HEAP16[$5>>1] = $33;
     $$0184217 = 2;$$1173218 = $32;$$3171219 = 0;$$4220 = $27;
     label = 61;
     break L15;
    } else {
     $$2 = -4;
     return ($$2|0);
    }
   } else {
    $$0183210 = 1;$$0184208 = 2;$$1173212 = $28;$$3171214 = 0;$$4178211 = $28;$$4215 = $27;
    label = 48;
   }
   break;
  }
  case 2:  {
   $34 = ($1|0)<(2);
   if ($34) {
    HEAP16[$5>>1] = -1;
    $$2 = -4;
    return ($$2|0);
   }
   $35 = HEAP8[$27>>0]|0;
   $36 = $35&255;
   $37 = ($35&255)<(252);
   do {
    if ($37) {
     $38 = $35&255;
     $$0$i193 = 1;$storemerge = $38;
    } else {
     $39 = ($1|0)<(3);
     if (!($39)) {
      $40 = ((($0)) + 2|0);
      $41 = HEAP8[$40>>0]|0;
      $42 = $41&255;
      $43 = $42 << 2;
      $44 = (($43) + ($36))|0;
      $45 = $44&65535;
      $$0$i193 = 2;$storemerge = $45;
      break;
     }
     HEAP16[$5>>1] = -1;
     $$2 = -4;
     return ($$2|0);
    }
   } while(0);
   HEAP16[$5>>1] = $storemerge;
   $46 = (($28) - ($$0$i193))|0;
   $47 = $storemerge << 16 >> 16;
   $48 = ($46|0)<($47|0);
   if ($48) {
    $$2 = -4;
    return ($$2|0);
   } else {
    $49 = (($27) + ($$0$i193)|0);
    $50 = (($46) - ($47))|0;
    $$0183 = 0;$$0184 = 2;$$1173 = $50;$$3171 = 0;$$4 = $49;$$4178 = $46;
    label = 47;
    break L15;
   }
   break;
  }
  default: {
   $51 = ($1|0)<(2);
   if ($51) {
    $$2 = -4;
    return ($$2|0);
   }
   $52 = ((($0)) + 2|0);
   $53 = HEAP8[$27>>0]|0;
   $54 = $53&255;
   $55 = $54 & 63;
   $56 = ($55|0)==(0);
   $57 = Math_imul($55, $$0$i)|0;
   $58 = ($57>>>0)>(5760);
   $or$cond187 = $56 | $58;
   if ($or$cond187) {
    $$2 = -4;
    return ($$2|0);
   }
   $59 = (($1) + -2)|0;
   $60 = $54 & 64;
   $61 = ($60|0)==(0);
   if ($61) {
    $$2167207 = $52;$$2170206 = 0;$$2176205 = $59;
   } else {
    $$0165 = $52;$$0168 = 0;$$0174 = $59;
    while(1) {
     $62 = ($$0174|0)<(1);
     if ($62) {
      $$2 = -4;
      label = 75;
      break;
     }
     $63 = ((($$0165)) + 1|0);
     $64 = HEAP8[$$0165>>0]|0;
     $65 = $64&255;
     $66 = (($$0174) + -1)|0;
     $67 = ($64<<24>>24)==(-1);
     $68 = $67 ? 254 : $65;
     $69 = (($66) - ($68))|0;
     $70 = (($68) + ($$0168))|0;
     if ($67) {
      $$0165 = $63;$$0168 = $70;$$0174 = $69;
     } else {
      break;
     }
    }
    if ((label|0) == 75) {
     return ($$2|0);
    }
    $71 = ($69|0)<(0);
    if ($71) {
     $$2 = -4;
     return ($$2|0);
    } else {
     $$2167207 = $63;$$2170206 = $70;$$2176205 = $69;
    }
   }
   $72 = $54 & 128;
   $73 = ($72|0)==(0);
   $$lobit = $54 >>> 7;
   $74 = $$lobit ^ 1;
   if ($73) {
    $98 = ($2|0)==(0);
    if (!($98)) {
     $$0183210 = $74;$$0184208 = $55;$$1173212 = $28;$$3171214 = $$2170206;$$4178211 = $$2176205;$$4215 = $$2167207;
     label = 48;
     break L15;
    }
    $99 = (($$2176205|0) / ($55|0))&-1;
    $100 = Math_imul($99, $55)|0;
    $101 = ($100|0)==($$2176205|0);
    if (!($101)) {
     $$2 = -4;
     return ($$2|0);
    }
    $102 = (($55) + -1)|0;
    $103 = ($55>>>0)>(1);
    if (!($103)) {
     $$0184217 = $55;$$1173218 = $99;$$3171219 = $$2170206;$$4220 = $$2167207;
     label = 61;
     break L15;
    }
    $104 = $99&65535;
    $$1180237 = 0;
    while(1) {
     $105 = (($5) + ($$1180237<<1)|0);
     HEAP16[$105>>1] = $104;
     $106 = (($$1180237) + 1)|0;
     $exitcond262 = ($106|0)==($102|0);
     if ($exitcond262) {
      $$0183 = $74;$$0184 = $55;$$1173 = $99;$$3171 = $$2170206;$$4 = $$2167207;$$4178 = $$2176205;
      label = 47;
      break L15;
     } else {
      $$1180237 = $106;
     }
    }
   }
   $75 = (($55) + -1)|0;
   $76 = ($55>>>0)>(1);
   if ($76) {
    $$0172242 = $$2176205;$$0179240 = 0;$$3177241 = $$2176205;$$3243 = $$2167207;
    while(1) {
     $77 = (($5) + ($$0179240<<1)|0);
     $78 = ($$3177241|0)<(1);
     if ($78) {
      label = 33;
      break;
     }
     $79 = HEAP8[$$3243>>0]|0;
     $80 = $79&255;
     $81 = ($79&255)<(252);
     if ($81) {
      $82 = $79&255;
      $$0$i191 = 1;$storemerge280 = $82;
     } else {
      $83 = ($$3177241|0)<(2);
      if ($83) {
       label = 37;
       break;
      }
      $84 = ((($$3243)) + 1|0);
      $85 = HEAP8[$84>>0]|0;
      $86 = $85&255;
      $87 = $86 << 2;
      $88 = (($87) + ($80))|0;
      $89 = $88&65535;
      $$0$i191 = 2;$storemerge280 = $89;
     }
     HEAP16[$77>>1] = $storemerge280;
     $90 = (($$3177241) - ($$0$i191))|0;
     $91 = $storemerge280 << 16 >> 16;
     $92 = ($90|0)<($91|0);
     if ($92) {
      $$2 = -4;
      label = 75;
      break;
     }
     $93 = (($$3243) + ($$0$i191)|0);
     $$neg222 = (($$0172242) - ($$0$i191))|0;
     $94 = (($$neg222) - ($91))|0;
     $95 = (($$0179240) + 1)|0;
     $96 = ($95|0)<($75|0);
     if ($96) {
      $$0172242 = $94;$$0179240 = $95;$$3177241 = $90;$$3243 = $93;
     } else {
      label = 41;
      break;
     }
    }
    if ((label|0) == 33) {
     HEAP16[$77>>1] = -1;
     $$2 = -4;
     return ($$2|0);
    }
    else if ((label|0) == 37) {
     HEAP16[$77>>1] = -1;
     $$2 = -4;
     return ($$2|0);
    }
    else if ((label|0) == 41) {
     $97 = ($94|0)<(0);
     if ($97) {
      $$2 = -4;
     } else {
      $$0183 = $74;$$0184 = $55;$$1173 = $94;$$3171 = $$2170206;$$4 = $93;$$4178 = $90;
      label = 47;
      break L15;
     }
     return ($$2|0);
    }
    else if ((label|0) == 75) {
     return ($$2|0);
    }
   } else {
    $$0183 = $74;$$0184 = $55;$$1173 = $$2176205;$$3171 = $$2170206;$$4 = $$2167207;$$4178 = $$2176205;
    label = 47;
   }
  }
  }
 } while(0);
 if ((label|0) == 47) {
  $107 = ($2|0)==(0);
  if ($107) {
   $$0184217 = $$0184;$$1173218 = $$1173;$$3171219 = $$3171;$$4220 = $$4;
   label = 61;
  } else {
   $$0183210 = $$0183;$$0184208 = $$0184;$$1173212 = $$1173;$$3171214 = $$3171;$$4178211 = $$4178;$$4215 = $$4;
   label = 48;
  }
 }
 do {
  if ((label|0) == 48) {
   $108 = (($5) + ($$0184208<<1)|0);
   $109 = ((($108)) + -2|0);
   $110 = ($$4178211|0)<(1);
   do {
    if ($110) {
     $$0$i190 = -1;$$sink = -1;
    } else {
     $111 = HEAP8[$$4215>>0]|0;
     $112 = $111&255;
     $113 = ($111&255)<(252);
     if ($113) {
      $114 = $111&255;
      $$0$i190 = 1;$$sink = $114;
      break;
     }
     $115 = ($$4178211|0)<(2);
     if ($115) {
      $$0$i190 = -1;$$sink = -1;
     } else {
      $116 = ((($$4215)) + 1|0);
      $117 = HEAP8[$116>>0]|0;
      $118 = $117&255;
      $119 = $118 << 2;
      $120 = (($119) + ($112))|0;
      $121 = $120&65535;
      $$0$i190 = 2;$$sink = $121;
     }
    }
   } while(0);
   HEAP16[$109>>1] = $$sink;
   $122 = (($$4178211) - ($$0$i190))|0;
   $123 = (($$0184208) + -1)|0;
   $124 = (($5) + ($123<<1)|0);
   $125 = $$sink << 16 >> 16;
   $126 = ($$sink<<16>>16)<(0);
   $127 = ($122|0)<($125|0);
   $or$cond189 = $126 | $127;
   if ($or$cond189) {
    $$2 = -4;
    return ($$2|0);
   }
   $128 = (($$4215) + ($$0$i190)|0);
   $129 = ($$0183210|0)==(0);
   if ($129) {
    $136 = (($$0$i190) + ($125))|0;
    $137 = ($136|0)>($$1173212|0);
    if ($137) {
     $$2 = -4;
    } else {
     $$0184209 = $$0184208;$$3171213 = $$3171214;$$5 = $128;
     break;
    }
    return ($$2|0);
   }
   $130 = Math_imul($$0184208, $125)|0;
   $131 = ($130|0)>($122|0);
   if ($131) {
    $$2 = -4;
    return ($$2|0);
   }
   $132 = ($$0184208|0)>(1);
   if ($132) {
    HEAP16[$5>>1] = $$sink;
    $exitcond261295 = ($123|0)==(1);
    if ($exitcond261295) {
     $$0184209 = $$0184208;$$3171213 = $$3171214;$$5 = $128;
    } else {
     $134 = 1;
     while(1) {
      $$pre = HEAP16[$124>>1]|0;
      $133 = (($5) + ($134<<1)|0);
      HEAP16[$133>>1] = $$pre;
      $135 = (($134) + 1)|0;
      $exitcond261 = ($135|0)==($123|0);
      if ($exitcond261) {
       $$0184209 = $$0184208;$$3171213 = $$3171214;$$5 = $128;
       break;
      } else {
       $134 = $135;
      }
     }
    }
   } else {
    $$0184209 = $$0184208;$$3171213 = $$3171214;$$5 = $128;
   }
  }
  else if ((label|0) == 61) {
   $138 = ($$1173218|0)>(1275);
   if ($138) {
    $$2 = -4;
    return ($$2|0);
   } else {
    $139 = $$1173218&65535;
    $140 = (($$0184217) + -1)|0;
    $141 = (($5) + ($140<<1)|0);
    HEAP16[$141>>1] = $139;
    $$0184209 = $$0184217;$$3171213 = $$3171219;$$5 = $$4220;
    break;
   }
  }
 } while(0);
 $142 = ($6|0)==(0|0);
 if (!($142)) {
  $143 = $$5;
  $144 = $0;
  $145 = (($143) - ($144))|0;
  HEAP32[$6>>2] = $145;
 }
 $146 = ($$0184209|0)==(0);
 if ($146) {
  $$6$lcssa = $$5;
 } else {
  $147 = ($4|0)==(0|0);
  if ($147) {
   $$3182232$us = 0;$$6233$us = $$5;
   while(1) {
    $148 = (($5) + ($$3182232$us<<1)|0);
    $149 = HEAP16[$148>>1]|0;
    $150 = $149 << 16 >> 16;
    $151 = (($$6233$us) + ($150)|0);
    $152 = (($$3182232$us) + 1)|0;
    $exitcond = ($152|0)==($$0184209|0);
    if ($exitcond) {
     $$6$lcssa = $151;
     break;
    } else {
     $$3182232$us = $152;$$6233$us = $151;
    }
   }
  } else {
   $$3182232 = 0;$$6233 = $$5;
   while(1) {
    $153 = (($4) + ($$3182232<<2)|0);
    HEAP32[$153>>2] = $$6233;
    $154 = (($5) + ($$3182232<<1)|0);
    $155 = HEAP16[$154>>1]|0;
    $156 = $155 << 16 >> 16;
    $157 = (($$6233) + ($156)|0);
    $158 = (($$3182232) + 1)|0;
    $exitcond260 = ($158|0)==($$0184209|0);
    if ($exitcond260) {
     $$6$lcssa = $157;
     break;
    } else {
     $$3182232 = $158;$$6233 = $157;
    }
   }
  }
 }
 $159 = ($7|0)==(0|0);
 if (!($159)) {
  $160 = $$6$lcssa;
  $161 = $0;
  $162 = (($$3171213) - ($161))|0;
  $163 = (($162) + ($160))|0;
  HEAP32[$7>>2] = $163;
 }
 $164 = ($3|0)==(0|0);
 if ($164) {
  $$2 = $$0184209;
  return ($$2|0);
 }
 HEAP8[$3>>0] = $trunc;
 $$2 = $$0184209;
 return ($$2|0);
}
function _hysteresis_decision($0,$1,$2,$3,$4) {
 $0 = Math_fround($0);
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$023 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = Math_fround(0), $14 = 0, $15 = Math_fround(0), $16 = Math_fround(0), $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = Math_fround(0), $22 = 0, $23 = Math_fround(0), $24 = Math_fround(0), $25 = 0, $5 = 0;
 var $6 = 0, $7 = Math_fround(0), $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($3|0)>(0);
 L1: do {
  if ($5) {
   $$023 = 0;
   while(1) {
    $6 = (($1) + ($$023<<2)|0);
    $7 = Math_fround(HEAPF32[$6>>2]);
    $8 = $7 > $0;
    if ($8) {
     $$0$lcssa = $$023;
     break L1;
    }
    $9 = (($$023) + 1)|0;
    $10 = ($9|0)<($3|0);
    if ($10) {
     $$023 = $9;
    } else {
     $$0$lcssa = $9;
     break;
    }
   }
  } else {
   $$0$lcssa = 0;
  }
 } while(0);
 $11 = ($$0$lcssa|0)>($4|0);
 if ($11) {
  $12 = (($1) + ($4<<2)|0);
  $13 = Math_fround(HEAPF32[$12>>2]);
  $14 = (($2) + ($4<<2)|0);
  $15 = Math_fround(HEAPF32[$14>>2]);
  $16 = Math_fround($13 + $15);
  $17 = $16 > $0;
  if ($17) {
   $$2 = $4;
   return ($$2|0);
  }
 }
 $18 = ($$0$lcssa|0)<($4|0);
 if (!($18)) {
  $$2 = $$0$lcssa;
  return ($$2|0);
 }
 $19 = (($4) + -1)|0;
 $20 = (($1) + ($19<<2)|0);
 $21 = Math_fround(HEAPF32[$20>>2]);
 $22 = (($2) + ($19<<2)|0);
 $23 = Math_fround(HEAPF32[$22>>2]);
 $24 = Math_fround($21 - $23);
 $25 = $24 < $0;
 if (!($25)) {
  $$2 = $$0$lcssa;
  return ($$2|0);
 }
 $$2 = $4;
 return ($$2|0);
}
function _celt_lcg_rand($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = Math_imul($0, 1664525)|0;
 $2 = (($1) + 1013904223)|0;
 return ($2|0);
}
function _compute_band_energies($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0$lcssa$i$us = Math_fround(0), $$01011$i$us = 0, $$012$i$us = Math_fround(0), $$039$us = 0, $$040$us = 0, $$pre = 0, $$pre42$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = Math_fround(0), $30 = Math_fround(0), $31 = Math_fround(0), $32 = 0, $33 = Math_fround(0), $34 = Math_fround(0), $35 = 0, $36 = 0, $37 = 0, $38 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0;
 var $exitcond$i$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = ((($0)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 << $5;
 $12 = ($3|0)>(0);
 if (!($12)) {
  return;
 }
 $13 = ((($0)) + 8|0);
 $$pre = HEAP32[$13>>2]|0;
 $$pre42$pre = HEAP16[$8>>1]|0;
 $$039$us = 0;
 while(1) {
  $14 = Math_imul($$039$us, $11)|0;
  $15 = Math_imul($$pre, $$039$us)|0;
  $$040$us = 0;$17 = $$pre42$pre;
  while(1) {
   $16 = $17 << 16 >> 16;
   $18 = $16 << $5;
   $19 = (($18) + ($14))|0;
   $20 = (($1) + ($19<<2)|0);
   $21 = (($$040$us) + 1)|0;
   $22 = (($8) + ($21<<1)|0);
   $23 = HEAP16[$22>>1]|0;
   $24 = $23 << 16 >> 16;
   $25 = (($24) - ($16))|0;
   $26 = $25 << $5;
   $27 = ($26|0)>(0);
   if ($27) {
    $$01011$i$us = 0;$$012$i$us = Math_fround(0.0);
    while(1) {
     $28 = (($20) + ($$01011$i$us<<2)|0);
     $29 = Math_fround(HEAPF32[$28>>2]);
     $30 = Math_fround($29 * $29);
     $31 = Math_fround($$012$i$us + $30);
     $32 = (($$01011$i$us) + 1)|0;
     $exitcond$i$us = ($32|0)==($26|0);
     if ($exitcond$i$us) {
      $$0$lcssa$i$us = $31;
      break;
     } else {
      $$01011$i$us = $32;$$012$i$us = $31;
     }
    }
   } else {
    $$0$lcssa$i$us = Math_fround(0.0);
   }
   $33 = Math_fround($$0$lcssa$i$us + Math_fround(1.00000003E-27));
   $34 = (Math_fround(Math_sqrt((Math_fround($33)))));
   $35 = (($15) + ($$040$us))|0;
   $36 = (($2) + ($35<<2)|0);
   HEAPF32[$36>>2] = $34;
   $exitcond = ($21|0)==($3|0);
   if ($exitcond) {
    break;
   } else {
    $$040$us = $21;$17 = $23;
   }
  }
  $37 = (($$039$us) + 1)|0;
  $38 = ($37|0)<($4|0);
  if ($38) {
   $$039$us = $37;
  } else {
   break;
  }
 }
 return;
}
function _normalise_bands($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$03941$us = 0, $$040$us = 0, $$042$us = 0, $$pre = 0, $$pre47$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = Math_fround(0), $19 = Math_fround(0), $20 = Math_fround(0), $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = Math_fround(0), $33 = Math_fround(0), $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = ((($0)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = Math_imul($10, $6)|0;
 $12 = ($4|0)>(0);
 if (!($12)) {
  return;
 }
 $13 = ((($0)) + 8|0);
 $$pre = HEAP32[$13>>2]|0;
 $$pre47$pre = HEAP16[$8>>1]|0;
 $$040$us = 0;
 while(1) {
  $14 = Math_imul($$pre, $$040$us)|0;
  $15 = Math_imul($11, $$040$us)|0;
  $$042$us = 0;$22 = $$pre47$pre;
  while(1) {
   $16 = (($14) + ($$042$us))|0;
   $17 = (($3) + ($16<<2)|0);
   $18 = Math_fround(HEAPF32[$17>>2]);
   $19 = Math_fround($18 + Math_fround(1.00000003E-27));
   $20 = Math_fround(Math_fround(1.0) / $19);
   $21 = $22 << 16 >> 16;
   $23 = Math_imul($21, $6)|0;
   $24 = (($$042$us) + 1)|0;
   $25 = (($8) + ($24<<1)|0);
   $26 = HEAP16[$25>>1]|0;
   $27 = $26 << 16 >> 16;
   $28 = Math_imul($27, $6)|0;
   $29 = ($23|0)<($28|0);
   if ($29) {
    $$03941$us = $23;
    while(1) {
     $30 = (($$03941$us) + ($15))|0;
     $31 = (($1) + ($30<<2)|0);
     $32 = Math_fround(HEAPF32[$31>>2]);
     $33 = Math_fround($20 * $32);
     $34 = (($2) + ($30<<2)|0);
     HEAPF32[$34>>2] = $33;
     $35 = (($$03941$us) + 1)|0;
     $36 = ($35|0)<($28|0);
     if ($36) {
      $$03941$us = $35;
     } else {
      break;
     }
    }
   }
   $exitcond = ($24|0)==($4|0);
   if ($exitcond) {
    break;
   } else {
    $$042$us = $24;$22 = $26;
   }
  }
  $37 = (($$040$us) + 1)|0;
  $38 = ($37|0)<($5|0);
  if ($38) {
   $$040$us = $37;
  } else {
   break;
  }
 }
 return;
}
function _denormalise_bands($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$ = 0, $$069 = 0, $$070 = 0, $$07280 = 0, $$074$lcssa = 0, $$173 = 0, $$17579 = 0, $$181 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = Math_fround(0), $40 = 0;
 var $41 = Math_fround(0), $42 = Math_fround(0), $43 = 0, $44 = Math_fround(0), $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = Math_fround(0), $49 = 0, $50 = Math_fround(0), $51 = Math_fround(0), $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $9 = 0, $exitcond = 0, $scevgep = 0;
 var $spec$select = 0, $spec$select76 = 0, $spec$select77 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $9 = ((($0)) + 32|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 44|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = Math_imul($12, $6)|0;
 $14 = (($10) + ($5<<1)|0);
 $15 = HEAP16[$14>>1]|0;
 $16 = $15 << 16 >> 16;
 $17 = Math_imul($16, $6)|0;
 $18 = ($7|0)==(1);
 if ($18) {
  $$070 = $17;
 } else {
  $19 = (($13|0) / ($7|0))&-1;
  $20 = ($17|0)<($19|0);
  $$ = $20 ? $17 : $19;
  $$070 = $$;
 }
 $21 = ($8|0)==(0);
 $spec$select = $21 ? $$070 : 0;
 $spec$select76 = $21 ? $5 : 0;
 $spec$select77 = $21 ? $4 : 0;
 $22 = (($10) + ($spec$select77<<1)|0);
 $23 = HEAP16[$22>>1]|0;
 $24 = $23 << 16 >> 16;
 $25 = Math_imul($24, $6)|0;
 $26 = (($1) + ($25<<2)|0);
 $27 = ($25|0)>(0);
 if ($27) {
  $28 = $25 << 2;
  _memset(($2|0),0,($28|0))|0;
  $scevgep = (($2) + ($25<<2)|0);
  $$074$lcssa = $scevgep;
 } else {
  $$074$lcssa = $2;
 }
 $29 = ($spec$select77|0)<($spec$select76|0);
 if (!($29)) {
  $55 = (($2) + ($spec$select<<2)|0);
  $56 = (($13) - ($spec$select))|0;
  $57 = $56 << 2;
  _memset(($55|0),0,($57|0))|0;
  return;
 }
 $$07280 = $26;$$17579 = $$074$lcssa;$$181 = $spec$select77;$31 = $23;
 while(1) {
  $30 = $31 << 16 >> 16;
  $32 = Math_imul($30, $6)|0;
  $33 = (($$181) + 1)|0;
  $34 = (($10) + ($33<<1)|0);
  $35 = HEAP16[$34>>1]|0;
  $36 = $35 << 16 >> 16;
  $37 = Math_imul($36, $6)|0;
  $38 = (($3) + ($$181<<2)|0);
  $39 = Math_fround(HEAPF32[$38>>2]);
  $40 = (19872 + ($$181<<2)|0);
  $41 = Math_fround(HEAPF32[$40>>2]);
  $42 = Math_fround($39 + $41);
  $43 = $42 > Math_fround(32.0);
  $44 = $43 ? Math_fround(32.0) : $42;
  $45 = +$44;
  $46 = $45 * 0.69314718055994529;
  $47 = (+_exp($46));
  $48 = Math_fround($47);
  $$069 = $32;$$173 = $$07280;$$2 = $$17579;
  while(1) {
   $49 = ((($$173)) + 4|0);
   $50 = Math_fround(HEAPF32[$$173>>2]);
   $51 = Math_fround($50 * $48);
   $52 = ((($$2)) + 4|0);
   HEAPF32[$$2>>2] = $51;
   $53 = (($$069) + 1)|0;
   $54 = ($53|0)<($37|0);
   if ($54) {
    $$069 = $53;$$173 = $49;$$2 = $52;
   } else {
    break;
   }
  }
  $exitcond = ($33|0)==($spec$select76|0);
  if ($exitcond) {
   break;
  } else {
   $$07280 = $49;$$17579 = $52;$$181 = $33;$31 = $35;
  }
 }
 $55 = (($2) + ($spec$select<<2)|0);
 $56 = (($13) - ($spec$select))|0;
 $57 = $56 << 2;
 _memset(($55|0),0,($57|0))|0;
 return;
}
function _anti_collapse($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 $13 = $13|0;
 var $$ = Math_fround(0), $$0$lcssa = 0, $$0120139 = 0, $$0122 = Math_fround(0), $$0123 = Math_fround(0), $$0124 = 0, $$0125138 = 0, $$0126128$us = 0, $$0127130 = 0, $$0127130$us = 0, $$0134 = 0, $$0134$us = 0, $$1 = 0, $$1$us = 0, $$1121 = 0, $$2$lcssa = 0, $$2$lcssa145 = 0, $$2133$us = 0, $$3129$us = 0, $$4$us = 0;
 var $$pre = 0, $100 = 0, $101 = 0, $102 = 0, $103 = Math_fround(0), $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = Math_fround(0);
 var $36 = Math_fround(0), $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = Math_fround(0), $41 = Math_fround(0), $42 = 0, $43 = 0.0, $44 = 0.0, $45 = Math_fround(0), $46 = Math_fround(0), $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = Math_fround(0), $54 = 0, $55 = Math_fround(0);
 var $56 = 0, $57 = 0, $58 = Math_fround(0), $59 = 0, $60 = 0, $61 = Math_fround(0), $62 = 0, $63 = Math_fround(0), $64 = 0, $65 = Math_fround(0), $66 = 0, $67 = Math_fround(0), $68 = Math_fround(0), $69 = 0, $70 = Math_fround(0), $71 = Math_fround(0), $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = Math_fround(0);
 var $76 = Math_fround(0), $77 = Math_fround(0), $78 = 0, $79 = Math_fround(0), $80 = Math_fround(0), $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = Math_fround(0), $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond144 = 0, $spec$select = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 $14 = ($6|0)<($7|0);
 if (!($14)) {
  return;
 }
 $15 = ((($0)) + 32|0);
 $16 = ((($0)) + 8|0);
 $17 = ($4|0)==(1);
 $18 = ($3|0)==(3);
 $19 = 1 << $3;
 $20 = ($3|0)==(31);
 $$0120139 = $12;$$0125138 = $6;
 while(1) {
  $21 = HEAP32[$15>>2]|0;
  $22 = (($$0125138) + 1)|0;
  $23 = (($21) + ($22<<1)|0);
  $24 = HEAP16[$23>>1]|0;
  $25 = $24 << 16 >> 16;
  $26 = (($21) + ($$0125138<<1)|0);
  $27 = HEAP16[$26>>1]|0;
  $28 = $27 << 16 >> 16;
  $29 = (($25) - ($28))|0;
  $30 = (($11) + ($$0125138<<2)|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = (($31) + 1)|0;
  $33 = (($32>>>0) / ($29>>>0))&-1;
  $34 = $33 >>> $3;
  $35 = (Math_fround(($34|0)));
  $36 = Math_fround($35 * Math_fround(-0.125));
  $37 = +$36;
  $38 = $37 * 0.69314718055994529;
  $39 = (+_exp($38));
  $40 = Math_fround($39);
  $41 = Math_fround($40 * Math_fround(0.5));
  $42 = $29 << $3;
  $43 = (+($42|0));
  $44 = (+Math_sqrt((+$43)));
  $45 = Math_fround($44);
  $46 = Math_fround(Math_fround(1.0) / $45);
  $47 = Math_imul($$0125138, $4)|0;
  $48 = ($29|0)>(0);
  $$0124 = 0;$$1121 = $$0120139;
  while(1) {
   $49 = HEAP32[$16>>2]|0;
   $50 = Math_imul($49, $$0124)|0;
   $51 = (($50) + ($$0125138))|0;
   $52 = (($9) + ($51<<2)|0);
   $53 = Math_fround(HEAPF32[$52>>2]);
   $54 = (($10) + ($51<<2)|0);
   $55 = Math_fround(HEAPF32[$54>>2]);
   if ($17) {
    $56 = (($49) + ($$0125138))|0;
    $57 = (($9) + ($56<<2)|0);
    $58 = Math_fround(HEAPF32[$57>>2]);
    $59 = $53 > $58;
    $$ = $59 ? $53 : $58;
    $60 = (($10) + ($56<<2)|0);
    $61 = Math_fround(HEAPF32[$60>>2]);
    $62 = $55 > $61;
    $63 = $62 ? $55 : $61;
    $$0122 = $63;$$0123 = $$;
   } else {
    $$0122 = $55;$$0123 = $53;
   }
   $64 = (($8) + ($51<<2)|0);
   $65 = Math_fround(HEAPF32[$64>>2]);
   $66 = $$0123 < $$0122;
   $67 = $66 ? $$0123 : $$0122;
   $68 = Math_fround($65 - $67);
   $69 = $68 < Math_fround(0.0);
   $70 = $69 ? Math_fround(0.0) : $68;
   $71 = Math_fround(- $70);
   $72 = +$71;
   $73 = $72 * 0.69314718055994529;
   $74 = (+_exp($73));
   $75 = Math_fround($74);
   $76 = Math_fround($75 * Math_fround(2.0));
   $77 = Math_fround($76 * Math_fround(1.41421354));
   $spec$select = $18 ? $77 : $76;
   $78 = $41 < $spec$select;
   $79 = $78 ? $41 : $spec$select;
   $80 = Math_fround($46 * $79);
   $81 = Math_imul($$0124, $5)|0;
   $82 = (($1) + ($81<<2)|0);
   $83 = HEAP32[$15>>2]|0;
   $84 = (($83) + ($$0125138<<1)|0);
   $85 = HEAP16[$84>>1]|0;
   $86 = $85 << 16 >> 16;
   $87 = $86 << $3;
   $88 = (($82) + ($87<<2)|0);
   if ($20) {
    $$2$lcssa145 = $$1121;
   } else {
    $89 = (($$0124) + ($47))|0;
    $90 = (($2) + ($89)|0);
    $91 = Math_fround(- $80);
    if ($48) {
     $$0127130$us = 0;$$0134$us = 0;$$2133$us = $$1121;
     while(1) {
      $92 = HEAP8[$90>>0]|0;
      $93 = $92&255;
      $94 = 1 << $$0127130$us;
      $95 = $94 & $93;
      $96 = ($95|0)==(0);
      if ($96) {
       $$0126128$us = 0;$$3129$us = $$2133$us;
       while(1) {
        $99 = Math_imul($$3129$us, 1664525)|0;
        $100 = (($99) + 1013904223)|0;
        $101 = $100 & 32768;
        $102 = ($101|0)==(0);
        $103 = $102 ? $91 : $80;
        $104 = $$0126128$us << $3;
        $105 = (($104) + ($$0127130$us))|0;
        $106 = (($88) + ($105<<2)|0);
        HEAPF32[$106>>2] = $103;
        $107 = (($$0126128$us) + 1)|0;
        $exitcond = ($107|0)==($29|0);
        if ($exitcond) {
         $$1$us = 1;$$4$us = $100;
         break;
        } else {
         $$0126128$us = $107;$$3129$us = $100;
        }
       }
      } else {
       $$1$us = $$0134$us;$$4$us = $$2133$us;
      }
      $97 = (($$0127130$us) + 1)|0;
      $98 = ($97|0)<($19|0);
      if ($98) {
       $$0127130$us = $97;$$0134$us = $$1$us;$$2133$us = $$4$us;
      } else {
       $$0$lcssa = $$1$us;$$2$lcssa = $$4$us;
       break;
      }
     }
    } else {
     $$pre = HEAP8[$90>>0]|0;
     $108 = $$pre&255;
     $$0127130 = 0;$$0134 = 0;
     while(1) {
      $109 = 1 << $$0127130;
      $110 = $109 & $108;
      $111 = ($110|0)==(0);
      $$1 = $111 ? 1 : $$0134;
      $112 = (($$0127130) + 1)|0;
      $113 = ($112|0)<($19|0);
      if ($113) {
       $$0127130 = $112;$$0134 = $$1;
      } else {
       $$0$lcssa = $$1;$$2$lcssa = $$1121;
       break;
      }
     }
    }
    $114 = ($$0$lcssa|0)==(0);
    if ($114) {
     $$2$lcssa145 = $$2$lcssa;
    } else {
     _renormalise_vector($88,$42,Math_fround(1.0),$13);
     $$2$lcssa145 = $$2$lcssa;
    }
   }
   $115 = (($$0124) + 1)|0;
   $116 = ($115|0)<($4|0);
   if ($116) {
    $$0124 = $115;$$1121 = $$2$lcssa145;
   } else {
    break;
   }
  }
  $exitcond144 = ($22|0)==($7|0);
  if ($exitcond144) {
   break;
  } else {
   $$0120139 = $$2$lcssa145;$$0125138 = $22;
  }
 }
 return;
}
function _spreading_decision($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$ = 0, $$0 = 0, $$0110131$us = 0, $$0111$us = 0, $$0112122$us = 0, $$0114$us = 0, $$0116$us = 0, $$0119$us = 0, $$1$lcssa$lcssa = 0, $$1117$lcssa$lcssa = 0, $$1117129$us = 0, $$1120$lcssa$lcssa = 0, $$1120128$us = 0, $$1130$us = 0, $$141 = 0, $$2$us = 0, $$2118$us = 0, $$2121$us = 0, $$3$us = 0, $$4 = 0;
 var $$5 = 0, $$pre$pre = 0, $$sink = 0, $$sroa$0$0125$us = 0, $$sroa$0$1$us = 0, $$sroa$11$2123$us = 0, $$sroa$11$3$us = 0, $$sroa$7$0124$us = 0, $$sroa$7$1$us = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $60 = 0, $61 = 0, $62 = Math_fround(0), $63 = Math_fround(0), $64 = Math_fround(0), $65 = Math_fround(0), $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond = 0, $exitcond139 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $10 = ((($0)) + 32|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 44|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = Math_imul($13, $9)|0;
 $15 = (($11) + ($7<<1)|0);
 $16 = HEAP16[$15>>1]|0;
 $17 = $16 << 16 >> 16;
 $18 = (($7) + -1)|0;
 $19 = (($11) + ($18<<1)|0);
 $20 = HEAP16[$19>>1]|0;
 $21 = $20 << 16 >> 16;
 $22 = (($17) - ($21))|0;
 $23 = Math_imul($22, $9)|0;
 $24 = ($23|0)<(9);
 if ($24) {
  $$0 = 0;
  return ($$0|0);
 }
 $25 = ($7|0)>(0);
 $26 = ((($0)) + 8|0);
 if ($25) {
  $$pre$pre = HEAP16[$11>>1]|0;
  $$0111$us = 0;$$0114$us = 0;$$0116$us = 0;$$0119$us = 0;
  while(1) {
   $27 = Math_imul($14, $$0111$us)|0;
   $$0110131$us = 0;$$1117129$us = $$0116$us;$$1120128$us = $$0119$us;$$1130$us = $$0114$us;$29 = $$pre$pre;
   while(1) {
    $28 = $29 << 16 >> 16;
    $30 = Math_imul($28, $9)|0;
    $31 = (($1) + ($30<<2)|0);
    $32 = (($31) + ($27<<2)|0);
    $33 = (($$0110131$us) + 1)|0;
    $34 = (($11) + ($33<<1)|0);
    $35 = HEAP16[$34>>1]|0;
    $36 = $35 << 16 >> 16;
    $37 = (($36) - ($28))|0;
    $38 = Math_imul($37, $9)|0;
    $39 = ($38|0)<(9);
    if ($39) {
     $$2118$us = $$1117129$us;$$2121$us = $$1120128$us;$$3$us = $$1130$us;
    } else {
     $65 = (Math_fround(($38|0)));
     $$0112122$us = 0;$$sroa$0$0125$us = 0;$$sroa$11$2123$us = 0;$$sroa$7$0124$us = 0;
     while(1) {
      $61 = (($32) + ($$0112122$us<<2)|0);
      $62 = Math_fround(HEAPF32[$61>>2]);
      $63 = Math_fround($62 * $62);
      $64 = Math_fround($63 * $65);
      $66 = $64 < Math_fround(0.25);
      $67 = $66&1;
      $$sroa$0$1$us = (($$sroa$0$0125$us) + ($67))|0;
      $68 = $64 < Math_fround(0.0625);
      $69 = $68&1;
      $$sroa$7$1$us = (($$sroa$7$0124$us) + ($69))|0;
      $70 = $64 < Math_fround(0.015625);
      $71 = $70&1;
      $$sroa$11$3$us = (($$sroa$11$2123$us) + ($71))|0;
      $72 = (($$0112122$us) + 1)|0;
      $exitcond = ($72|0)==($38|0);
      if ($exitcond) {
       break;
      } else {
       $$0112122$us = $72;$$sroa$0$0125$us = $$sroa$0$1$us;$$sroa$11$2123$us = $$sroa$11$3$us;$$sroa$7$0124$us = $$sroa$7$1$us;
      }
     }
     $40 = HEAP32[$26>>2]|0;
     $41 = (($40) + -4)|0;
     $42 = ($$0110131$us|0)>($41|0);
     if ($42) {
      $43 = (($$sroa$0$1$us) + ($$sroa$7$1$us))|0;
      $44 = $43 << 5;
      $45 = (($44>>>0) / ($38>>>0))&-1;
      $46 = (($45) + ($$1130$us))|0;
      $$2$us = $46;
     } else {
      $$2$us = $$1130$us;
     }
     $47 = $$sroa$11$3$us << 1;
     $48 = ($47|0)>=($38|0);
     $49 = $48&1;
     $50 = $$sroa$7$1$us << 1;
     $51 = ($50|0)>=($38|0);
     $52 = $51&1;
     $53 = (($52) + ($49))|0;
     $54 = $$sroa$0$1$us << 1;
     $55 = ($54|0)>=($38|0);
     $56 = $55&1;
     $57 = (($53) + ($56))|0;
     $58 = $57 << 8;
     $59 = (($58) + ($$1117129$us))|0;
     $60 = (($$1120128$us) + 1)|0;
     $$2118$us = $59;$$2121$us = $60;$$3$us = $$2$us;
    }
    $exitcond139 = ($33|0)==($7|0);
    if ($exitcond139) {
     break;
    } else {
     $$0110131$us = $33;$$1117129$us = $$2118$us;$$1120128$us = $$2121$us;$$1130$us = $$3$us;$29 = $35;
    }
   }
   $73 = (($$0111$us) + 1)|0;
   $74 = ($73|0)<($8|0);
   if ($74) {
    $$0111$us = $73;$$0114$us = $$3$us;$$0116$us = $$2118$us;$$0119$us = $$2121$us;
   } else {
    $$1$lcssa$lcssa = $$3$us;$$1117$lcssa$lcssa = $$2118$us;$$1120$lcssa$lcssa = $$2121$us;
    break;
   }
  }
 } else {
  $$1$lcssa$lcssa = 0;$$1117$lcssa$lcssa = 0;$$1120$lcssa$lcssa = 0;
 }
 $75 = ($6|0)==(0);
 if (!($75)) {
  $76 = ($$1$lcssa$lcssa|0)==(0);
  if ($76) {
   $$4 = 0;
  } else {
   $77 = HEAP32[$26>>2]|0;
   $78 = (($7) + 4)|0;
   $79 = (($78) - ($77))|0;
   $80 = Math_imul($79, $8)|0;
   $81 = (($$1$lcssa$lcssa>>>0) / ($80>>>0))&-1;
   $$4 = $81;
  }
  $82 = HEAP32[$4>>2]|0;
  $83 = (($82) + ($$4))|0;
  $84 = $83 >> 1;
  HEAP32[$4>>2] = $84;
  $85 = HEAP32[$5>>2]|0;
  switch ($85|0) {
  case 2:  {
   $86 = (($84) + 4)|0;
   $$5 = $86;
   break;
  }
  case 0:  {
   $87 = (($84) + -4)|0;
   $$5 = $87;
   break;
  }
  default: {
   $$5 = $84;
  }
  }
  $88 = ($$5|0)>(22);
  $89 = ($$5|0)>(18);
  $$141 = $89&1;
  $$sink = $88 ? 2 : $$141;
  HEAP32[$5>>2] = $$sink;
 }
 $90 = (($$1117$lcssa$lcssa>>>0) / ($$1120$lcssa$lcssa>>>0))&-1;
 $91 = HEAP32[$2>>2]|0;
 $92 = (($91) + ($90))|0;
 $93 = $92 >> 1;
 HEAP32[$2>>2] = $93;
 $94 = ($93*3)|0;
 $95 = $3 << 7;
 $96 = (384 - ($95))|0;
 $97 = $96 | 64;
 $98 = (($94) + ($97))|0;
 $99 = ($98|0)<(318);
 if ($99) {
  $$0 = 3;
  return ($$0|0);
 } else {
  $100 = ($98|0)<(1022);
  $101 = ($98|0)<(1534);
  $$ = $101&1;
  $spec$select = $100 ? 2 : $$;
  return ($spec$select|0);
 }
 return (0)|0;
}
function _haar1($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$03334$us = 0, $$035$us = 0, $10 = Math_fround(0), $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = Math_fround(0), $18 = Math_fround(0), $19 = Math_fround(0), $20 = Math_fround(0), $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 >> 1;
 $4 = ($2|0)>(0);
 if (!($4)) {
  return;
 }
 $5 = ($1|0)>(1);
 $6 = $2 << 1;
 if (!($5)) {
  return;
 }
 $$035$us = 0;
 while(1) {
  $$03334$us = 0;
  while(1) {
   $7 = Math_imul($6, $$03334$us)|0;
   $8 = (($7) + ($$035$us))|0;
   $9 = (($0) + ($8<<2)|0);
   $10 = Math_fround(HEAPF32[$9>>2]);
   $11 = Math_fround($10 * Math_fround(0.707106769));
   $12 = $$03334$us << 1;
   $13 = $12 | 1;
   $14 = Math_imul($13, $2)|0;
   $15 = (($14) + ($$035$us))|0;
   $16 = (($0) + ($15<<2)|0);
   $17 = Math_fround(HEAPF32[$16>>2]);
   $18 = Math_fround($17 * Math_fround(0.707106769));
   $19 = Math_fround($11 + $18);
   HEAPF32[$9>>2] = $19;
   $20 = Math_fround($11 - $18);
   HEAPF32[$16>>2] = $20;
   $21 = (($$03334$us) + 1)|0;
   $22 = ($21|0)<($3|0);
   if ($22) {
    $$03334$us = $21;
   } else {
    break;
   }
  }
  $23 = (($$035$us) + 1)|0;
  $exitcond = ($23|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $$035$us = $23;
  }
 }
 return;
}
function _quant_all_bands($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 $13 = $13|0;
 $14 = $14|0;
 $15 = $15|0;
 $16 = $16|0;
 $17 = $17|0;
 $18 = $18|0;
 $19 = $19|0;
 $20 = $20|0;
 $21 = $21|0;
 $22 = $22|0;
 var $$0$lcssa$i583 = Math_fround(0), $$0$lcssa$i595 = Math_fround(0), $$01011$i = 0, $$01011$i581 = 0, $$01011$i587 = 0, $$01011$i593 = 0, $$012$i = Math_fround(0), $$012$i580 = Math_fround(0), $$012$i586 = Math_fround(0), $$012$i592 = Math_fround(0), $$0537635 = 0, $$0539634 = 0, $$0540612 = 0, $$0541 = 0, $$0543632 = 0, $$0545631 = 0, $$0546 = 0, $$0547 = 0, $$0548 = 0, $$0549 = 0;
 var $$0552630 = 0, $$0553 = 0, $$0554 = 0, $$0555 = 0, $$0556 = 0, $$0559 = 0, $$0636 = 0, $$1542633 = 0, $$1544 = 0, $$1557 = 0, $$1560 = 0, $$1615 = 0, $$2551 = 0, $$2558 = 0, $$2561 = 0, $$4 = 0, $$alloca_mul = 0, $$alloca_mul10 = 0, $$alloca_mul12 = 0, $$alloca_mul14 = 0;
 var $$alloca_mul16 = 0, $$alloca_mul6 = 0, $$alloca_mul8 = 0, $$idx$val = 0, $$not = 0, $$not646 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $$sroa$5$0$$sroa_idx52 = 0, $$sroa$5$0$copyload = 0, $$sroa$6 = 0, $$sroa$6$0$$sroa_idx = 0, $$sroa$661$0$$sroa_idx62 = 0, $$sroa$661$0$copyload = 0, $$sroa$7 = 0, $$sroa$7$0$$sroa_idx = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $191 = Math_fround(0), $192 = 0, $193 = Math_fround(0), $194 = Math_fround(0), $195 = Math_fround(0), $196 = 0, $197 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $220 = 0, $221 = Math_fround(0), $222 = 0, $223 = 0;
 var $224 = 0, $225 = Math_fround(0), $226 = 0, $227 = Math_fround(0), $228 = Math_fround(0), $229 = Math_fround(0), $23 = 0, $230 = Math_fround(0), $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = Math_fround(0), $244 = 0, $245 = Math_fround(0), $246 = 0, $247 = Math_fround(0), $248 = Math_fround(0), $249 = Math_fround(0), $25 = 0, $250 = 0, $251 = Math_fround(0), $252 = 0, $253 = Math_fround(0), $254 = 0, $255 = Math_fround(0), $256 = Math_fround(0), $257 = Math_fround(0), $258 = 0, $259 = Math_fround(0), $26 = 0;
 var $260 = Math_fround(0), $261 = Math_fround(0), $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = Math_fround(0);
 var $297 = 0, $298 = Math_fround(0), $299 = 0, $30 = 0, $300 = Math_fround(0), $301 = Math_fround(0), $302 = Math_fround(0), $303 = 0, $304 = Math_fround(0), $305 = 0, $306 = Math_fround(0), $307 = 0, $308 = Math_fround(0), $309 = Math_fround(0), $31 = 0, $310 = Math_fround(0), $311 = 0, $312 = Math_fround(0), $313 = Math_fround(0), $314 = Math_fround(0);
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i582 = 0, $exitcond$i588 = 0, $exitcond$i594 = 0, $not$ = 0, $not$or$cond3 = 0, $or$cond = 0, $or$cond11 = 0, $or$cond13 = 0;
 var $or$cond15 = 0, $or$cond571$not = 0, $or$cond574 = 0, $or$cond638 = 0, $or$cond9 = 0, $spec$select = 0, $spec$select563 = 0, $spec$select564 = 0, $spec$select567 = 0, $spec$select568 = 0, $spec$select569 = 0, $spec$select570 = 0, $spec$select572 = 0, $spec$select573 = 0, $spec$select573618 = 0, $spec$select573619 = 0, $spec$select575 = 0, $spec$select577 = 0, $spec$select578 = 0, $spec$select620 = 0;
 var $spec$select621 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1552|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1552|0);
 $23 = sp + 1488|0;
 $$sroa$6 = sp + 1304|0;
 $$sroa$7 = sp + 1280|0;
 $24 = sp + 1440|0;
 $25 = sp + 1380|0;
 $26 = sp + 1320|0;
 $27 = sp;
 $28 = ((($1)) + 32|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ($5|0)!=(0|0);
 $31 = $30 ? 2 : 1;
 $32 = ($0|0)!=(0);
 $or$cond = $32 & $30;
 $33 = ($11|0)==(0);
 $34 = ($20|0)>(7);
 $not$or$cond3 = $or$cond & $33;
 $spec$select = $not$or$cond3 & $34;
 $not$ = $32 ^ 1;
 $35 = $spec$select | $not$;
 $36 = $35&1;
 $37 = 1 << $17;
 $38 = ($9|0)==(0);
 $39 = $38 ? 1 : $37;
 $40 = (($29) + ($2<<1)|0);
 $41 = HEAP16[$40>>1]|0;
 $42 = $41 << 16 >> 16;
 $43 = $42 << $17;
 $44 = ((($1)) + 8|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = (($45) + -1)|0;
 $47 = (($29) + ($46<<1)|0);
 $48 = HEAP16[$47>>1]|0;
 $49 = $48 << 16 >> 16;
 $50 = $49 << $17;
 $51 = (($50) - ($43))|0;
 $52 = Math_imul($51, $31)|0;
 $53 = (_llvm_stacksave()|0);
 $$alloca_mul = $52<<2;
 $54 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $55 = HEAP32[$44>>2]|0;
 $56 = (($55) + -1)|0;
 $57 = (($29) + ($56<<1)|0);
 $58 = HEAP16[$57>>1]|0;
 $59 = $58 << 16 >> 16;
 $60 = $59 << $17;
 $61 = (($54) + ($60<<2)|0);
 $62 = (0 - ($43))|0;
 $63 = (($61) + ($62<<2)|0);
 if ($spec$select) {
  $64 = (($29) + ($55<<1)|0);
  $65 = HEAP16[$64>>1]|0;
  $66 = $65 << 16 >> 16;
  $67 = (($66) - ($59))|0;
  $68 = $67 << $17;
  $$alloca_mul6 = $68<<2;
  $69 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
  $$0540612 = $68;$$0541 = $69;
 } else {
  $70 = (($4) + ($60<<2)|0);
  $$0540612 = 1;$$0541 = $70;
 }
 $$alloca_mul8 = $$0540612<<2;
 $71 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul8)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul8)|0)+15)&-16)|0);;
 $$alloca_mul10 = $$0540612<<2;
 $72 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul10)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul10)|0)+15)&-16)|0);;
 $73 = ((($23)) + 36|0);
 HEAP32[$73>>2] = $7;
 $74 = ((($23)) + 28|0);
 HEAP32[$74>>2] = $16;
 HEAP32[$23>>2] = $0;
 $75 = ((($23)) + 16|0);
 HEAP32[$75>>2] = $12;
 $76 = ((($23)) + 8|0);
 HEAP32[$76>>2] = $1;
 $77 = HEAP32[$19>>2]|0;
 $78 = ((($23)) + 40|0);
 HEAP32[$78>>2] = $77;
 $79 = ((($23)) + 20|0);
 HEAP32[$79>>2] = $10;
 $80 = ((($23)) + 44|0);
 HEAP32[$80>>2] = $21;
 $81 = ((($23)) + 52|0);
 HEAP32[$81>>2] = $22;
 $82 = ((($23)) + 4|0);
 HEAP32[$82>>2] = $36;
 $83 = ((($23)) + 48|0);
 HEAP32[$83>>2] = 0;
 $84 = ($39|0)>(1);
 $85 = $84&1;
 $86 = ((($23)) + 56|0);
 HEAP32[$86>>2] = $85;
 $87 = ($2|0)<($3|0);
 if (!($87)) {
  $354 = $77;
  HEAP32[$19>>2] = $354;
  _llvm_stackrestore(($53|0));
  STACKTOP = sp;return;
 }
 $$alloca_mul12 = $$0540612<<2;
 $88 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul12)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul12)|0)+15)&-16)|0);;
 $$alloca_mul14 = $$0540612<<2;
 $89 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul14)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul14)|0)+15)&-16)|0);;
 $$alloca_mul16 = $$0540612<<2;
 $90 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul16)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul16)|0)+15)&-16)|0);;
 $91 = ((($23)) + 12|0);
 $92 = (($3) + -1)|0;
 $93 = ((($23)) + 32|0);
 $94 = ((($23)) + 24|0);
 $95 = ((($1)) + 12|0);
 $spec$select568 = $30 ? $54 : 0;
 $96 = 1 << $39;
 $97 = (($96) + -1)|0;
 $$not = $35 ^ 1;
 $98 = ($10|0)!=(3);
 $or$cond13 = $98 | $84;
 $99 = (($31) + -1)|0;
 $$sroa$5$0$$sroa_idx52 = ((($16)) + 4|0);
 $$sroa$6$0$$sroa_idx = ((($16)) + 8|0);
 $$sroa$661$0$$sroa_idx62 = ((($16)) + 24|0);
 $$sroa$7$0$$sroa_idx = ((($16)) + 28|0);
 $100 = (($2) + 1)|0;
 $101 = (($2) + 2)|0;
 $$0537635 = $15;$$0539634 = $2;$$0543632 = 0;$$0545631 = 1;$$0636 = $11;$$1542633 = $$0541;
 while(1) {
  HEAP32[$91>>2] = $$0539634;
  $102 = ($$0539634|0)==($92|0);
  $103 = (($29) + ($$0539634<<1)|0);
  $104 = HEAP16[$103>>1]|0;
  $105 = $104 << 16 >> 16;
  $106 = $105 << $17;
  $107 = (($4) + ($106<<2)|0);
  $108 = (($5) + ($106<<2)|0);
  $$0549 = $30 ? $108 : 0;
  $109 = (($$0539634) + 1)|0;
  $110 = (($29) + ($109<<1)|0);
  $111 = HEAP16[$110>>1]|0;
  $112 = $111 << 16 >> 16;
  $113 = $112 << $17;
  $114 = (($113) - ($106))|0;
  $115 = (_ec_tell_frac($16)|0);
  $116 = ($$0539634|0)==($2|0);
  $117 = $116 ? 0 : $115;
  $spec$select563 = (($$0537635) - ($117))|0;
  $118 = (($14) - ($115))|0;
  $119 = (($118) + -1)|0;
  HEAP32[$93>>2] = $119;
  $120 = ($$0539634|0)<($18|0);
  if ($120) {
   $121 = (($18) - ($$0539634))|0;
   $122 = ($121|0)<(3);
   $spec$select564 = $122 ? $121 : 3;
   $123 = (($spec$select563|0) / ($spec$select564|0))&-1;
   $124 = (($8) + ($$0539634<<2)|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (($125) + ($123))|0;
   $127 = ($118|0)<($126|0);
   $128 = $127 ? $118 : $126;
   $129 = ($128|0)>(16383);
   if ($129) {
    $$0546 = 16383;
   } else {
    $130 = ($128|0)>(0);
    $spec$select620 = $130 ? $128 : 0;
    $$0546 = $spec$select620;
   }
  } else {
   $$0546 = 0;
  }
  if ($35) {
   $131 = HEAP16[$103>>1]|0;
   $132 = $131 << 16 >> 16;
   $133 = $132 << $17;
   $134 = (($133) - ($114))|0;
   $135 = HEAP16[$40>>1]|0;
   $136 = $135 << 16 >> 16;
   $137 = $136 << $17;
   $138 = ($134|0)<($137|0);
   $139 = ($$0545631|0)!=(0);
   $140 = ($$0543632|0)==(0);
   $or$cond9 = $139 | $140;
   $spec$select567 = $or$cond9 ? $$0539634 : $$0543632;
   $spec$select621 = $138 ? $$0543632 : $spec$select567;
   $$1544 = $spec$select621;
  } else {
   $$1544 = $$0543632;
  }
  $141 = (($13) + ($$0539634<<2)|0);
  $142 = HEAP32[$141>>2]|0;
  HEAP32[$94>>2] = $142;
  $143 = HEAP32[$95>>2]|0;
  $144 = ($$0539634|0)<($143|0);
  $$2551 = $144 ? $$0549 : $spec$select568;
  $$0548 = $144 ? $107 : $54;
  $145 = $102 ^ 1;
  $or$cond11 = $spec$select | $145;
  $146 = $or$cond11 & $144;
  $spec$select569 = $146 ? $$1542633 : 0;
  $147 = ($$1544|0)!=(0);
  $148 = ($142|0)<(0);
  $or$cond15 = $or$cond13 | $148;
  $or$cond638 = $147 & $or$cond15;
  if ($or$cond638) {
   $149 = (($29) + ($$1544<<1)|0);
   $150 = HEAP16[$149>>1]|0;
   $151 = $150 << 16 >> 16;
   $152 = $151 << $17;
   $153 = (($152) - ($43))|0;
   $154 = (($153) - ($114))|0;
   $155 = ($154|0)>(0);
   $spec$select570 = $155 ? $154 : 0;
   $156 = (($spec$select570) + ($43))|0;
   $$0555 = $$1544;
   while(1) {
    $157 = (($$0555) + -1)|0;
    $158 = (($29) + ($157<<1)|0);
    $159 = HEAP16[$158>>1]|0;
    $160 = $159 << 16 >> 16;
    $161 = $160 << $17;
    $162 = ($161|0)>($156|0);
    if ($162) {
     $$0555 = $157;
    } else {
     break;
    }
   }
   $163 = (($$1544) + -1)|0;
   $164 = (($156) + ($114))|0;
   $$0554 = $163;
   while(1) {
    $165 = (($$0554) + 1)|0;
    $166 = (($29) + ($165<<1)|0);
    $167 = HEAP16[$166>>1]|0;
    $168 = $167 << 16 >> 16;
    $169 = $168 << $17;
    $170 = ($169|0)<($164|0);
    if ($170) {
     $$0554 = $165;
    } else {
     break;
    }
   }
   $$0553 = $157;$$0556 = 0;$$0559 = 0;
   while(1) {
    $171 = Math_imul($$0553, $31)|0;
    $172 = (($6) + ($171)|0);
    $173 = HEAP8[$172>>0]|0;
    $174 = $173&255;
    $175 = $$0559 | $174;
    $176 = (($99) + ($171))|0;
    $177 = (($6) + ($176)|0);
    $178 = HEAP8[$177>>0]|0;
    $179 = $178&255;
    $180 = $$0556 | $179;
    $181 = (($$0553) + 1)|0;
    $182 = ($$0553|0)<($$0554|0);
    if ($182) {
     $$0553 = $181;$$0556 = $180;$$0559 = $175;
    } else {
     $$0547 = $spec$select570;$$1557 = $180;$$1560 = $175;
     break;
    }
   }
  } else {
   $$0547 = -1;$$1557 = $97;$$1560 = $97;
  }
  $183 = ($$0636|0)==(0);
  $184 = ($$0539634|0)!=($12|0);
  $or$cond571$not = $184 | $183;
  $brmerge = $or$cond571$not | $$not;
  if ($brmerge) {
   $$not646 = $184 ^ 1;
   $198 = $183 | $$not646;
   if ($198) {
    label = 27;
   } else {
    $199 = $$0546 >>> 1;
    $200 = ($$0547|0)!=(-1);
    $201 = (($54) + ($$0547<<2)|0);
    $spec$select572 = $200 ? $201 : 0;
    if ($102) {
     $202 = (_quant_band($23,$$0548,$114,$199,$39,$spec$select572,$17,0,Math_fround(1.0),$spec$select569,$$1560)|0);
     $203 = (($63) + ($$0547<<2)|0);
     $spec$select573618 = $200 ? $203 : 0;
     $216 = 0;$355 = $202;$spec$select573619 = $spec$select573618;
    } else {
     $204 = HEAP16[$103>>1]|0;
     $205 = $204 << 16 >> 16;
     $206 = $205 << $17;
     $207 = (($54) + ($206<<2)|0);
     $208 = (($207) + ($62<<2)|0);
     $209 = (_quant_band($23,$$0548,$114,$199,$39,$spec$select572,$17,$208,Math_fround(1.0),$spec$select569,$$1560)|0);
     $210 = (($63) + ($$0547<<2)|0);
     $spec$select573 = $200 ? $210 : 0;
     $211 = HEAP16[$103>>1]|0;
     $212 = $211 << 16 >> 16;
     $213 = $212 << $17;
     $214 = (($63) + ($213<<2)|0);
     $215 = (($214) + ($62<<2)|0);
     $216 = $215;$355 = $209;$spec$select573619 = $spec$select573;
    }
    $217 = (_quant_band($23,$$2551,$114,$199,$39,$spec$select573619,$17,$216,Math_fround(1.0),$spec$select569,$$1557)|0);
    $$1615 = $$0636;$$2558 = $217;$$4 = $355;
   }
  } else {
   $185 = HEAP16[$103>>1]|0;
   $186 = $185 << 16 >> 16;
   $187 = $186 << $17;
   $188 = ($187|0)>($43|0);
   if ($188) {
    $189 = (($187) - ($43))|0;
    $$0552630 = 0;
    while(1) {
     $190 = (($54) + ($$0552630<<2)|0);
     $191 = Math_fround(HEAPF32[$190>>2]);
     $192 = (($63) + ($$0552630<<2)|0);
     $193 = Math_fround(HEAPF32[$192>>2]);
     $194 = Math_fround($191 + $193);
     $195 = Math_fround($194 * Math_fround(0.5));
     HEAPF32[$190>>2] = $195;
     $196 = (($$0552630) + 1)|0;
     $197 = ($196|0)<($189|0);
     if ($197) {
      $$0552630 = $196;
     } else {
      label = 27;
      break;
     }
    }
   } else {
    label = 27;
   }
  }
  do {
   if ((label|0) == 27) {
    label = 0;
    $218 = ($$2551|0)==(0|0);
    if ($218) {
     $331 = ($$0547|0)==(-1);
     $332 = (($54) + ($$0547<<2)|0);
     $spec$select578 = $331 ? 0 : $332;
     if ($102) {
      $339 = 0;
     } else {
      $333 = HEAP16[$103>>1]|0;
      $334 = $333 << 16 >> 16;
      $335 = $334 << $17;
      $336 = (($54) + ($335<<2)|0);
      $337 = (($336) + ($62<<2)|0);
      $339 = $337;
     }
     $338 = $$1557 | $$1560;
     $340 = (_quant_band($23,$$0548,$114,$$0546,$39,$spec$select578,$17,$339,Math_fround(1.0),$spec$select569,$338)|0);
     $$1615 = 0;$$2558 = $340;$$4 = $340;
     break;
    }
    $219 = ($$0539634|0)<($12|0);
    $or$cond574 = $spec$select & $219;
    if (!($or$cond574)) {
     HEAP32[$83>>2] = 0;
     $321 = ($$0547|0)==(-1);
     $322 = (($54) + ($$0547<<2)|0);
     $spec$select577 = $321 ? 0 : $322;
     if ($102) {
      $329 = 0;
     } else {
      $323 = HEAP16[$103>>1]|0;
      $324 = $323 << 16 >> 16;
      $325 = $324 << $17;
      $326 = (($54) + ($325<<2)|0);
      $327 = (($326) + ($62<<2)|0);
      $329 = $327;
     }
     $328 = $$1557 | $$1560;
     $330 = (_quant_band_stereo($23,$$0548,$$2551,$114,$$0546,$39,$spec$select577,$17,$329,$spec$select569,$328)|0);
     $$1615 = 0;$$2558 = $330;$$4 = $330;
     break;
    }
    $220 = (($7) + ($$0539634<<2)|0);
    $221 = Math_fround(HEAPF32[$220>>2]);
    $222 = HEAP32[$44>>2]|0;
    $223 = (($222) + ($$0539634))|0;
    $224 = (($7) + ($223<<2)|0);
    $225 = Math_fround(HEAPF32[$224>>2]);
    $226 = $221 < $225;
    $227 = $226 ? $221 : $225;
    $228 = Math_fround($227 / Math_fround(3.0));
    $229 = Math_fround($221 + $228);
    $230 = Math_fround($225 + $228);
    $231 = $$1557 | $$1560;
    $$sroa$0$0$copyload = HEAP32[$16>>2]|0;
    $$sroa$5$0$copyload = HEAP32[$$sroa$5$0$$sroa_idx52>>2]|0;
    ;HEAP32[$$sroa$6>>2]=HEAP32[$$sroa$6$0$$sroa_idx>>2]|0;HEAP32[$$sroa$6+4>>2]=HEAP32[$$sroa$6$0$$sroa_idx+4>>2]|0;HEAP32[$$sroa$6+8>>2]=HEAP32[$$sroa$6$0$$sroa_idx+8>>2]|0;HEAP32[$$sroa$6+12>>2]=HEAP32[$$sroa$6$0$$sroa_idx+12>>2]|0;
    $$sroa$661$0$copyload = HEAP32[$$sroa$661$0$$sroa_idx62>>2]|0;
    ;HEAP32[$$sroa$7>>2]=HEAP32[$$sroa$7$0$$sroa_idx>>2]|0;HEAP32[$$sroa$7+4>>2]=HEAP32[$$sroa$7$0$$sroa_idx+4>>2]|0;HEAP32[$$sroa$7+8>>2]=HEAP32[$$sroa$7$0$$sroa_idx+8>>2]|0;HEAP32[$$sroa$7+12>>2]=HEAP32[$$sroa$7$0$$sroa_idx+12>>2]|0;HEAP32[$$sroa$7+16>>2]=HEAP32[$$sroa$7$0$$sroa_idx+16>>2]|0;
    dest=$25; src=$23; stop=dest+60|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    $232 = $114 << 2;
    _memcpy(($71|0),($$0548|0),($232|0))|0;
    _memcpy(($72|0),($$2551|0),($232|0))|0;
    HEAP32[$83>>2] = -1;
    $233 = ($$0547|0)==(-1);
    $234 = (($54) + ($$0547<<2)|0);
    $spec$select575 = $233 ? 0 : $234;
    if ($102) {
     $240 = 0;
    } else {
     $235 = HEAP16[$103>>1]|0;
     $236 = $235 << 16 >> 16;
     $237 = $236 << $17;
     $238 = (($54) + ($237<<2)|0);
     $239 = (($238) + ($62<<2)|0);
     $240 = $239;
    }
    $241 = (_quant_band_stereo($23,$$0548,$$2551,$114,$$0546,$39,$spec$select575,$17,$240,$spec$select569,$231)|0);
    $242 = ($114|0)>(0);
    if ($242) {
     $$01011$i = 0;$$012$i = Math_fround(0.0);
     while(1) {
      $244 = (($71) + ($$01011$i<<2)|0);
      $245 = Math_fround(HEAPF32[$244>>2]);
      $246 = (($$0548) + ($$01011$i<<2)|0);
      $247 = Math_fround(HEAPF32[$246>>2]);
      $248 = Math_fround($245 * $247);
      $249 = Math_fround($$012$i + $248);
      $250 = (($$01011$i) + 1)|0;
      $exitcond$i = ($250|0)==($114|0);
      if ($exitcond$i) {
       break;
      } else {
       $$01011$i = $250;$$012$i = $249;
      }
     }
     $251 = Math_fround($229 * $249);
     $$01011$i593 = 0;$$012$i592 = Math_fround(0.0);
     while(1) {
      $252 = (($72) + ($$01011$i593<<2)|0);
      $253 = Math_fround(HEAPF32[$252>>2]);
      $254 = (($$2551) + ($$01011$i593<<2)|0);
      $255 = Math_fround(HEAPF32[$254>>2]);
      $256 = Math_fround($253 * $255);
      $257 = Math_fround($$012$i592 + $256);
      $258 = (($$01011$i593) + 1)|0;
      $exitcond$i594 = ($258|0)==($114|0);
      if ($exitcond$i594) {
       $$0$lcssa$i595 = $257;$261 = $251;
       break;
      } else {
       $$01011$i593 = $258;$$012$i592 = $257;
      }
     }
    } else {
     $243 = Math_fround($229 * Math_fround(0.0));
     $$0$lcssa$i595 = Math_fround(0.0);$261 = $243;
    }
    $259 = Math_fround($230 * $$0$lcssa$i595);
    $260 = Math_fround($261 + $259);
    dest=$24; src=$16; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    dest=$26; src=$23; stop=dest+60|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    _memcpy(($90|0),($$0548|0),($232|0))|0;
    _memcpy(($89|0),($$2551|0),($232|0))|0;
    if (!($102)) {
     $262 = HEAP16[$103>>1]|0;
     $263 = $262 << 16 >> 16;
     $264 = $263 << $17;
     $265 = (($54) + ($264<<2)|0);
     $266 = (($265) + ($62<<2)|0);
     _memcpy(($88|0),($266|0),($232|0))|0;
    }
    $267 = (($$sroa$0$0$copyload) + ($$sroa$661$0$copyload)|0);
    $268 = (($$sroa$5$0$copyload) - ($$sroa$661$0$copyload))|0;
    _memcpy(($27|0),($267|0),($268|0))|0;
    HEAP32[$16>>2] = $$sroa$0$0$copyload;
    HEAP32[$$sroa$5$0$$sroa_idx52>>2] = $$sroa$5$0$copyload;
    ;HEAP32[$$sroa$6$0$$sroa_idx>>2]=HEAP32[$$sroa$6>>2]|0;HEAP32[$$sroa$6$0$$sroa_idx+4>>2]=HEAP32[$$sroa$6+4>>2]|0;HEAP32[$$sroa$6$0$$sroa_idx+8>>2]=HEAP32[$$sroa$6+8>>2]|0;HEAP32[$$sroa$6$0$$sroa_idx+12>>2]=HEAP32[$$sroa$6+12>>2]|0;
    HEAP32[$$sroa$661$0$$sroa_idx62>>2] = $$sroa$661$0$copyload;
    ;HEAP32[$$sroa$7$0$$sroa_idx>>2]=HEAP32[$$sroa$7>>2]|0;HEAP32[$$sroa$7$0$$sroa_idx+4>>2]=HEAP32[$$sroa$7+4>>2]|0;HEAP32[$$sroa$7$0$$sroa_idx+8>>2]=HEAP32[$$sroa$7+8>>2]|0;HEAP32[$$sroa$7$0$$sroa_idx+12>>2]=HEAP32[$$sroa$7+12>>2]|0;HEAP32[$$sroa$7$0$$sroa_idx+16>>2]=HEAP32[$$sroa$7+16>>2]|0;
    dest=$23; src=$25; stop=dest+60|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    _memcpy(($$0548|0),($71|0),($232|0))|0;
    _memcpy(($$2551|0),($72|0),($232|0))|0;
    $269 = ($$0539634|0)==($100|0);
    if ($269) {
     $$idx$val = HEAP32[$28>>2]|0;
     $270 = (($$idx$val) + ($100<<1)|0);
     $271 = HEAP16[$270>>1]|0;
     $272 = $271 << 16 >> 16;
     $273 = (($$idx$val) + ($2<<1)|0);
     $274 = HEAP16[$273>>1]|0;
     $275 = $274 << 16 >> 16;
     $276 = (($272) - ($275))|0;
     $277 = $276 << $17;
     $278 = (($$idx$val) + ($101<<1)|0);
     $279 = HEAP16[$278>>1]|0;
     $280 = $279 << 16 >> 16;
     $281 = (($280) - ($272))|0;
     $282 = $281 << $17;
     $283 = (($54) + ($277<<2)|0);
     $284 = $277 << 1;
     $285 = (($284) - ($282))|0;
     $286 = (($54) + ($285<<2)|0);
     $287 = (($282) - ($277))|0;
     $288 = $287 << 2;
     _memcpy(($283|0),($286|0),($288|0))|0;
    }
    HEAP32[$83>>2] = 1;
    if ($102) {
     $294 = 0;
    } else {
     $289 = HEAP16[$103>>1]|0;
     $290 = $289 << 16 >> 16;
     $291 = $290 << $17;
     $292 = (($54) + ($291<<2)|0);
     $293 = (($292) + ($62<<2)|0);
     $294 = $293;
    }
    $295 = (_quant_band_stereo($23,$$0548,$$2551,$114,$$0546,$39,$spec$select575,$17,$294,$spec$select569,$231)|0);
    if ($242) {
     $$01011$i587 = 0;$$012$i586 = Math_fround(0.0);
     while(1) {
      $297 = (($71) + ($$01011$i587<<2)|0);
      $298 = Math_fround(HEAPF32[$297>>2]);
      $299 = (($$0548) + ($$01011$i587<<2)|0);
      $300 = Math_fround(HEAPF32[$299>>2]);
      $301 = Math_fround($298 * $300);
      $302 = Math_fround($$012$i586 + $301);
      $303 = (($$01011$i587) + 1)|0;
      $exitcond$i588 = ($303|0)==($114|0);
      if ($exitcond$i588) {
       break;
      } else {
       $$01011$i587 = $303;$$012$i586 = $302;
      }
     }
     $304 = Math_fround($229 * $302);
     $$01011$i581 = 0;$$012$i580 = Math_fround(0.0);
     while(1) {
      $305 = (($72) + ($$01011$i581<<2)|0);
      $306 = Math_fround(HEAPF32[$305>>2]);
      $307 = (($$2551) + ($$01011$i581<<2)|0);
      $308 = Math_fround(HEAPF32[$307>>2]);
      $309 = Math_fround($306 * $308);
      $310 = Math_fround($$012$i580 + $309);
      $311 = (($$01011$i581) + 1)|0;
      $exitcond$i582 = ($311|0)==($114|0);
      if ($exitcond$i582) {
       $$0$lcssa$i583 = $310;$314 = $304;
       break;
      } else {
       $$01011$i581 = $311;$$012$i580 = $310;
      }
     }
    } else {
     $296 = Math_fround($229 * Math_fround(0.0));
     $$0$lcssa$i583 = Math_fround(0.0);$314 = $296;
    }
    $312 = Math_fround($230 * $$0$lcssa$i583);
    $313 = Math_fround($314 + $312);
    $315 = !($260 >= $313);
    if ($315) {
     $$2561 = $295;
    } else {
     dest=$16; src=$24; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
     dest=$23; src=$26; stop=dest+60|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
     _memcpy(($$0548|0),($90|0),($232|0))|0;
     _memcpy(($$2551|0),($89|0),($232|0))|0;
     if (!($102)) {
      $316 = HEAP16[$103>>1]|0;
      $317 = $316 << 16 >> 16;
      $318 = $317 << $17;
      $319 = (($54) + ($318<<2)|0);
      $320 = (($319) + ($62<<2)|0);
      _memcpy(($320|0),($88|0),($232|0))|0;
     }
     _memcpy(($267|0),($27|0),($268|0))|0;
     $$2561 = $241;
    }
    $$1615 = 0;$$2558 = $$2561;$$4 = $$2561;
   }
  } while(0);
  $341 = $$4&255;
  $342 = Math_imul($$0539634, $31)|0;
  $343 = (($6) + ($342)|0);
  HEAP8[$343>>0] = $341;
  $344 = $$2558&255;
  $345 = (($99) + ($342))|0;
  $346 = (($6) + ($345)|0);
  HEAP8[$346>>0] = $344;
  $347 = (($8) + ($$0539634<<2)|0);
  $348 = HEAP32[$347>>2]|0;
  $349 = (($spec$select563) + ($115))|0;
  $350 = (($349) + ($348))|0;
  $351 = $114 << 3;
  $352 = ($$0546|0)>($351|0);
  $353 = $352&1;
  HEAP32[$86>>2] = 0;
  $exitcond = ($109|0)==($3|0);
  if ($exitcond) {
   break;
  } else {
   $$0537635 = $350;$$0539634 = $109;$$0543632 = $$1544;$$0545631 = $353;$$0636 = $$1615;$$1542633 = $spec$select569;
  }
 }
 $$pre = HEAP32[$78>>2]|0;
 $354 = $$pre;
 HEAP32[$19>>2] = $354;
 _llvm_stackrestore(($53|0));
 STACKTOP = sp;return;
}
function _quant_band($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = Math_fround($8);
 $9 = $9|0;
 $10 = $10|0;
 var $$$peel$i = Math_fround(0), $$$us$peel$i = Math_fround(0), $$0 = 0, $$0163218 = 0, $$0164236 = 0, $$0164236$us = 0, $$0165$lcssa = 0, $$0165234 = 0, $$0165234$us = 0, $$0166245 = 0, $$0166245$us = 0, $$0168$lcssa = 0, $$0168224 = 0, $$0171 = 0, $$0173$lcssa = 0, $$0173233 = 0, $$0173233$us = 0, $$0174$lcssa = 0, $$0174244 = 0, $$0174244$us = 0;
 var $$0176$lcssa = 0, $$0176231 = 0, $$0176231$us = 0, $$03334$us$i = 0, $$03334$us$i182 = 0, $$03334$us$i190 = 0, $$03334$us$i198 = 0, $$03334$us$i198$us = 0, $$03334$us$i206 = 0, $$03334$us$i214 = 0, $$03334$us$i214$us = 0, $$035$us$i = 0, $$035$us$i180 = 0, $$035$us$i188 = 0, $$035$us$i196 = 0, $$035$us$i196$us = 0, $$035$us$i204 = 0, $$035$us$i212 = 0, $$035$us$i212$us = 0, $$1$lcssa = 0;
 var $$1167225 = 0, $$1169$lcssa = 0, $$1169219 = 0, $$1175$lcssa = 0, $$1175232 = 0, $$1175232$us = 0, $$1177223 = 0, $$1226 = 0, $$2220 = 0, $$not = 0, $$not282 = 0, $$pre = 0, $100 = 0, $101 = Math_fround(0), $102 = Math_fround(0), $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = Math_fround(0), $109 = Math_fround(0), $11 = 0, $110 = Math_fround(0), $111 = Math_fround(0), $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = Math_fround(0), $121 = Math_fround(0), $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = Math_fround(0), $128 = Math_fround(0), $129 = Math_fround(0), $13 = 0, $130 = Math_fround(0), $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = Math_fround(0), $161 = Math_fround(0);
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = Math_fround(0), $168 = Math_fround(0), $169 = Math_fround(0), $17 = 0, $170 = Math_fround(0), $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = Math_fround(0), $191 = Math_fround(0), $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = Math_fround(0), $198 = Math_fround(0);
 var $199 = Math_fround(0), $20 = 0, $200 = Math_fround(0), $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = Math_fround(0), $21 = 0, $210 = Math_fround(0), $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = Math_fround(0);
 var $217 = Math_fround(0), $218 = Math_fround(0), $219 = Math_fround(0), $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = Math_fround(0), $258 = Math_fround(0), $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = Math_fround(0), $265 = Math_fround(0), $266 = Math_fround(0), $267 = Math_fround(0), $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = Math_fround(0), $285 = Math_fround(0), $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = Math_fround(0), $292 = Math_fround(0), $293 = Math_fround(0), $294 = Math_fround(0), $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0.0, $304 = 0.0, $305 = Math_fround(0), $306 = 0, $307 = 0;
 var $308 = Math_fround(0), $309 = Math_fround(0), $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $32 = 0, $33 = Math_fround(0), $34 = 0, $35 = 0, $36 = Math_fround(0), $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = Math_fround(0);
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = Math_fround(0), $67 = Math_fround(0), $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = Math_fround(0), $74 = Math_fround(0), $75 = Math_fround(0), $76 = Math_fround(0), $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $brmerge283 = 0, $exitcond = 0, $exitcond$i = 0;
 var $exitcond$i183 = 0, $exitcond$i191 = 0, $exitcond$i199 = 0, $exitcond$i199$us = 0, $exitcond$i207 = 0, $exitcond$i215 = 0, $exitcond$i215$us = 0, $exitcond266 = 0, $or$cond = 0, $or$cond281 = 0, $or$cond3 = 0, $or$cond5 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $11 = HEAP32[$0>>2]|0;
 $12 = ((($0)) + 24|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($4|0)==(1);
 $15 = $14&1;
 $16 = (($2>>>0) / ($4>>>0))&-1;
 $17 = ($2|0)==(1);
 if ($17) {
  $18 = ((($0)) + 28|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($0)) + 32|0);
  $21 = ($11|0)==(0);
  $22 = ((($0)) + 4|0);
  $23 = HEAP32[$20>>2]|0;
  $24 = ($23|0)>(7);
  do {
   if ($21) {
    if ($24) {
     $27 = (_ec_dec_bits($19,1)|0);
     $28 = HEAP32[$20>>2]|0;
     $29 = (($28) + -8)|0;
     HEAP32[$20>>2] = $29;
     $30 = HEAP32[$22>>2]|0;
     $31 = ($30|0)==(0);
     $32 = ($27|0)==(0);
     $$$us$peel$i = $32 ? Math_fround(1.0) : Math_fround(-1.0);
     if ($31) {
      break;
     } else {
      $33 = $$$us$peel$i;
     }
    } else {
     $25 = HEAP32[$22>>2]|0;
     $26 = ($25|0)==(0);
     if ($26) {
      break;
     } else {
      $33 = Math_fround(1.0);
     }
    }
    HEAPF32[$1>>2] = $33;
   } else {
    if ($24) {
     $36 = Math_fround(HEAPF32[$1>>2]);
     $37 = $36 < Math_fround(0.0);
     $38 = $37&1;
     _ec_enc_bits($19,$38,1);
     $39 = HEAP32[$20>>2]|0;
     $40 = (($39) + -8)|0;
     HEAP32[$20>>2] = $40;
     $41 = HEAP32[$22>>2]|0;
     $42 = ($41|0)==(0);
     $$$peel$i = $37 ? Math_fround(-1.0) : Math_fround(1.0);
     if ($42) {
      break;
     } else {
      $43 = $$$peel$i;
     }
    } else {
     $34 = HEAP32[$22>>2]|0;
     $35 = ($34|0)==(0);
     if ($35) {
      break;
     } else {
      $43 = Math_fround(1.0);
     }
    }
    HEAPF32[$1>>2] = $43;
   }
  } while(0);
  $44 = ($7|0)==(0|0);
  if ($44) {
   $$0 = 1;
   return ($$0|0);
  }
  $45 = HEAP32[$1>>2]|0;
  HEAP32[$7>>2] = $45;
  $$0 = 1;
  return ($$0|0);
 }
 $46 = ($13|0)>(0);
 $spec$select = $46 ? $13 : 0;
 $47 = ($9|0)!=(0|0);
 $48 = ($5|0)!=(0|0);
 $or$cond = $48 & $47;
 do {
  if ($or$cond) {
   $49 = ($13|0)<(1);
   if ($49) {
    $50 = $16 & 1;
    $51 = ($50|0)==(0);
    $52 = ($13|0)!=(0);
    $or$cond3 = $52 & $51;
    $53 = ($4|0)>(1);
    $or$cond5 = $53 | $or$cond3;
    if (!($or$cond5)) {
     $$0171 = $5;
     break;
    }
   }
   $54 = $2 << 2;
   _memcpy(($9|0),($5|0),($54|0))|0;
   $$0171 = $9;
  } else {
   $$0171 = $5;
  }
 } while(0);
 L26: do {
  if ($46) {
   $55 = ($11|0)==(0);
   $56 = ($$0171|0)==(0|0);
   if ($55) {
    $$0166245$us = 0;$$0174244$us = $10;
    while(1) {
     if (!($56)) {
      $57 = $2 >> $$0166245$us;
      $58 = 1 << $$0166245$us;
      $59 = $57 >> 1;
      $60 = ($$0166245$us|0)==(31);
      if (!($60)) {
       $61 = ($57|0)>(1);
       $62 = $58 << 1;
       if ($61) {
        $$035$us$i196$us = 0;
        while(1) {
         $$03334$us$i198$us = 0;
         while(1) {
          $63 = Math_imul($62, $$03334$us$i198$us)|0;
          $64 = (($63) + ($$035$us$i196$us))|0;
          $65 = (($$0171) + ($64<<2)|0);
          $66 = Math_fround(HEAPF32[$65>>2]);
          $67 = Math_fround($66 * Math_fround(0.707106769));
          $68 = $$03334$us$i198$us << 1;
          $69 = $68 | 1;
          $70 = $69 << $$0166245$us;
          $71 = (($70) + ($$035$us$i196$us))|0;
          $72 = (($$0171) + ($71<<2)|0);
          $73 = Math_fround(HEAPF32[$72>>2]);
          $74 = Math_fround($73 * Math_fround(0.707106769));
          $75 = Math_fround($67 + $74);
          HEAPF32[$65>>2] = $75;
          $76 = Math_fround($67 - $74);
          HEAPF32[$72>>2] = $76;
          $77 = (($$03334$us$i198$us) + 1)|0;
          $78 = ($77|0)<($59|0);
          if ($78) {
           $$03334$us$i198$us = $77;
          } else {
           break;
          }
         }
         $79 = (($$035$us$i196$us) + 1)|0;
         $exitcond$i199$us = ($79|0)==($58|0);
         if ($exitcond$i199$us) {
          break;
         } else {
          $$035$us$i196$us = $79;
         }
        }
       }
      }
     }
     $80 = $$0174244$us & 15;
     $81 = (22848 + ($80)|0);
     $82 = HEAP8[$81>>0]|0;
     $83 = $82&255;
     $84 = $$0174244$us >> 4;
     $85 = (22848 + ($84)|0);
     $86 = HEAP8[$85>>0]|0;
     $87 = $86&255;
     $88 = $87 << 2;
     $89 = $88 | $83;
     $90 = (($$0166245$us) + 1)|0;
     $91 = ($90>>>0)<($spec$select>>>0);
     if ($91) {
      $$0166245$us = $90;$$0174244$us = $89;
     } else {
      $$0174$lcssa = $89;
      break L26;
     }
    }
   }
   $$0166245 = 0;$$0174244 = $10;
   while(1) {
    $92 = $2 >> $$0166245;
    $93 = 1 << $$0166245;
    $94 = $92 >> 1;
    $95 = ($$0166245|0)==(31);
    if (!($95)) {
     $96 = ($92|0)>(1);
     $97 = $93 << 1;
     if ($96) {
      $$035$us$i188 = 0;
      while(1) {
       $$03334$us$i190 = 0;
       while(1) {
        $98 = Math_imul($97, $$03334$us$i190)|0;
        $99 = (($98) + ($$035$us$i188))|0;
        $100 = (($1) + ($99<<2)|0);
        $101 = Math_fround(HEAPF32[$100>>2]);
        $102 = Math_fround($101 * Math_fround(0.707106769));
        $103 = $$03334$us$i190 << 1;
        $104 = $103 | 1;
        $105 = $104 << $$0166245;
        $106 = (($105) + ($$035$us$i188))|0;
        $107 = (($1) + ($106<<2)|0);
        $108 = Math_fround(HEAPF32[$107>>2]);
        $109 = Math_fround($108 * Math_fround(0.707106769));
        $110 = Math_fround($102 + $109);
        HEAPF32[$100>>2] = $110;
        $111 = Math_fround($102 - $109);
        HEAPF32[$107>>2] = $111;
        $112 = (($$03334$us$i190) + 1)|0;
        $113 = ($112|0)<($94|0);
        if ($113) {
         $$03334$us$i190 = $112;
        } else {
         break;
        }
       }
       $114 = (($$035$us$i188) + 1)|0;
       $exitcond$i191 = ($114|0)==($93|0);
       if ($exitcond$i191) {
        break;
       } else {
        $$035$us$i188 = $114;
       }
      }
     }
    }
    $brmerge = $56 | $95;
    if (!($brmerge)) {
     $115 = ($92|0)>(1);
     $116 = $93 << 1;
     if ($115) {
      $$035$us$i196 = 0;
      while(1) {
       $$03334$us$i198 = 0;
       while(1) {
        $117 = Math_imul($116, $$03334$us$i198)|0;
        $118 = (($117) + ($$035$us$i196))|0;
        $119 = (($$0171) + ($118<<2)|0);
        $120 = Math_fround(HEAPF32[$119>>2]);
        $121 = Math_fround($120 * Math_fround(0.707106769));
        $122 = $$03334$us$i198 << 1;
        $123 = $122 | 1;
        $124 = $123 << $$0166245;
        $125 = (($124) + ($$035$us$i196))|0;
        $126 = (($$0171) + ($125<<2)|0);
        $127 = Math_fround(HEAPF32[$126>>2]);
        $128 = Math_fround($127 * Math_fround(0.707106769));
        $129 = Math_fround($121 + $128);
        HEAPF32[$119>>2] = $129;
        $130 = Math_fround($121 - $128);
        HEAPF32[$126>>2] = $130;
        $131 = (($$03334$us$i198) + 1)|0;
        $132 = ($131|0)<($94|0);
        if ($132) {
         $$03334$us$i198 = $131;
        } else {
         break;
        }
       }
       $133 = (($$035$us$i196) + 1)|0;
       $exitcond$i199 = ($133|0)==($93|0);
       if ($exitcond$i199) {
        break;
       } else {
        $$035$us$i196 = $133;
       }
      }
     }
    }
    $134 = $$0174244 & 15;
    $135 = (22848 + ($134)|0);
    $136 = HEAP8[$135>>0]|0;
    $137 = $136&255;
    $138 = $$0174244 >> 4;
    $139 = (22848 + ($138)|0);
    $140 = HEAP8[$139>>0]|0;
    $141 = $140&255;
    $142 = $141 << 2;
    $143 = $142 | $137;
    $144 = (($$0166245) + 1)|0;
    $145 = ($144>>>0)<($spec$select>>>0);
    if ($145) {
     $$0166245 = $144;$$0174244 = $143;
    } else {
     $$0174$lcssa = $143;
     break;
    }
   }
  } else {
   $$0174$lcssa = $10;
  }
 } while(0);
 $146 = $4 >> $spec$select;
 $147 = $16 << $spec$select;
 $148 = $147 & 1;
 $149 = ($148|0)==(0);
 $150 = ($13|0)<(0);
 $151 = $149 & $150;
 L64: do {
  if ($151) {
   $152 = ($11|0)==(0);
   $153 = ($$0171|0)==(0|0);
   if ($152) {
    $$not = $153 ^ 1;
    $$0164236$us = $13;$$0165234$us = $146;$$0173233$us = 0;$$0176231$us = $147;$$1175232$us = $$0174$lcssa;
    while(1) {
     $$pre = $$0176231$us >> 1;
     $154 = ($$0165234$us|0)>(0);
     $or$cond281 = $154 & $$not;
     if ($or$cond281) {
      $155 = ($$0176231$us|0)>(1);
      $156 = $$0165234$us << 1;
      if ($155) {
       $$035$us$i212$us = 0;
       while(1) {
        $$03334$us$i214$us = 0;
        while(1) {
         $157 = Math_imul($156, $$03334$us$i214$us)|0;
         $158 = (($157) + ($$035$us$i212$us))|0;
         $159 = (($$0171) + ($158<<2)|0);
         $160 = Math_fround(HEAPF32[$159>>2]);
         $161 = Math_fround($160 * Math_fround(0.707106769));
         $162 = $$03334$us$i214$us << 1;
         $163 = $162 | 1;
         $164 = Math_imul($163, $$0165234$us)|0;
         $165 = (($164) + ($$035$us$i212$us))|0;
         $166 = (($$0171) + ($165<<2)|0);
         $167 = Math_fround(HEAPF32[$166>>2]);
         $168 = Math_fround($167 * Math_fround(0.707106769));
         $169 = Math_fround($161 + $168);
         HEAPF32[$159>>2] = $169;
         $170 = Math_fround($161 - $168);
         HEAPF32[$166>>2] = $170;
         $171 = (($$03334$us$i214$us) + 1)|0;
         $172 = ($171|0)<($$pre|0);
         if ($172) {
          $$03334$us$i214$us = $171;
         } else {
          break;
         }
        }
        $173 = (($$035$us$i212$us) + 1)|0;
        $exitcond$i215$us = ($173|0)==($$0165234$us|0);
        if ($exitcond$i215$us) {
         break;
        } else {
         $$035$us$i212$us = $173;
        }
       }
      }
     }
     $174 = $$1175232$us << $$0165234$us;
     $175 = $174 | $$1175232$us;
     $176 = $$0165234$us << 1;
     $177 = (($$0173233$us) + 1)|0;
     $178 = (($$0164236$us) + 1)|0;
     $179 = $$0176231$us & 2;
     $180 = ($179|0)==(0);
     $181 = ($$0164236$us|0)<(-1);
     $182 = $180 & $181;
     if ($182) {
      $$0164236$us = $178;$$0165234$us = $176;$$0173233$us = $177;$$0176231$us = $$pre;$$1175232$us = $175;
     } else {
      $$0165$lcssa = $176;$$0173$lcssa = $177;$$0176$lcssa = $$pre;$$1175$lcssa = $175;
      break L64;
     }
    }
   }
   $$0164236 = $13;$$0165234 = $146;$$0173233 = 0;$$0176231 = $147;$$1175232 = $$0174$lcssa;
   while(1) {
    $183 = $$0176231 >> 1;
    $184 = ($$0165234|0)>(0);
    if ($184) {
     $185 = ($$0176231|0)>(1);
     $186 = $$0165234 << 1;
     if ($185) {
      $$035$us$i204 = 0;
      while(1) {
       $$03334$us$i206 = 0;
       while(1) {
        $187 = Math_imul($186, $$03334$us$i206)|0;
        $188 = (($187) + ($$035$us$i204))|0;
        $189 = (($1) + ($188<<2)|0);
        $190 = Math_fround(HEAPF32[$189>>2]);
        $191 = Math_fround($190 * Math_fround(0.707106769));
        $192 = $$03334$us$i206 << 1;
        $193 = $192 | 1;
        $194 = Math_imul($193, $$0165234)|0;
        $195 = (($194) + ($$035$us$i204))|0;
        $196 = (($1) + ($195<<2)|0);
        $197 = Math_fround(HEAPF32[$196>>2]);
        $198 = Math_fround($197 * Math_fround(0.707106769));
        $199 = Math_fround($191 + $198);
        HEAPF32[$189>>2] = $199;
        $200 = Math_fround($191 - $198);
        HEAPF32[$196>>2] = $200;
        $201 = (($$03334$us$i206) + 1)|0;
        $202 = ($201|0)<($183|0);
        if ($202) {
         $$03334$us$i206 = $201;
        } else {
         break;
        }
       }
       $203 = (($$035$us$i204) + 1)|0;
       $exitcond$i207 = ($203|0)==($$0165234|0);
       if ($exitcond$i207) {
        break;
       } else {
        $$035$us$i204 = $203;
       }
      }
     }
    }
    $$not282 = $184 ^ 1;
    $brmerge283 = $153 | $$not282;
    if (!($brmerge283)) {
     $204 = ($$0176231|0)>(1);
     $205 = $$0165234 << 1;
     if ($204) {
      $$035$us$i212 = 0;
      while(1) {
       $$03334$us$i214 = 0;
       while(1) {
        $206 = Math_imul($205, $$03334$us$i214)|0;
        $207 = (($206) + ($$035$us$i212))|0;
        $208 = (($$0171) + ($207<<2)|0);
        $209 = Math_fround(HEAPF32[$208>>2]);
        $210 = Math_fround($209 * Math_fround(0.707106769));
        $211 = $$03334$us$i214 << 1;
        $212 = $211 | 1;
        $213 = Math_imul($212, $$0165234)|0;
        $214 = (($213) + ($$035$us$i212))|0;
        $215 = (($$0171) + ($214<<2)|0);
        $216 = Math_fround(HEAPF32[$215>>2]);
        $217 = Math_fround($216 * Math_fround(0.707106769));
        $218 = Math_fround($210 + $217);
        HEAPF32[$208>>2] = $218;
        $219 = Math_fround($210 - $217);
        HEAPF32[$215>>2] = $219;
        $220 = (($$03334$us$i214) + 1)|0;
        $221 = ($220|0)<($183|0);
        if ($221) {
         $$03334$us$i214 = $220;
        } else {
         break;
        }
       }
       $222 = (($$035$us$i212) + 1)|0;
       $exitcond$i215 = ($222|0)==($$0165234|0);
       if ($exitcond$i215) {
        break;
       } else {
        $$035$us$i212 = $222;
       }
      }
     }
    }
    $223 = $$1175232 << $$0165234;
    $224 = $223 | $$1175232;
    $225 = $$0165234 << 1;
    $226 = (($$0173233) + 1)|0;
    $227 = (($$0164236) + 1)|0;
    $228 = $$0176231 & 2;
    $229 = ($228|0)==(0);
    $230 = ($$0164236|0)<(-1);
    $231 = $229 & $230;
    if ($231) {
     $$0164236 = $227;$$0165234 = $225;$$0173233 = $226;$$0176231 = $183;$$1175232 = $224;
    } else {
     $$0165$lcssa = $225;$$0173$lcssa = $226;$$0176$lcssa = $183;$$1175$lcssa = $224;
     break;
    }
   }
  } else {
   $$0165$lcssa = $146;$$0173$lcssa = 0;$$0176$lcssa = $147;$$1175$lcssa = $$0174$lcssa;
  }
 } while(0);
 $232 = ($$0165$lcssa|0)>(1);
 if ($232) {
  $233 = ($11|0)==(0);
  if (!($233)) {
   $234 = $$0165$lcssa << $spec$select;
   $235 = $$0176$lcssa >> $spec$select;
   _deinterleave_hadamard($1,$235,$234,$15);
  }
  $236 = ($$0171|0)==(0|0);
  if (!($236)) {
   $237 = $$0165$lcssa << $spec$select;
   $238 = $$0176$lcssa >> $spec$select;
   _deinterleave_hadamard($$0171,$238,$237,$15);
  }
 }
 $239 = (_quant_partition($0,$1,$2,$3,$$0165$lcssa,$$0171,$6,$8,$$1175$lcssa)|0);
 $240 = ((($0)) + 4|0);
 $241 = HEAP32[$240>>2]|0;
 $242 = ($241|0)==(0);
 if ($242) {
  $$0 = $239;
  return ($$0|0);
 }
 if ($232) {
  $243 = $$0165$lcssa << $spec$select;
  $244 = $$0176$lcssa >> $spec$select;
  _interleave_hadamard($1,$244,$243,$15);
 }
 $245 = ($$0173$lcssa|0)==(0);
 if ($245) {
  $$0168$lcssa = $239;$$1$lcssa = $$0165$lcssa;
 } else {
  $$0168224 = $239;$$1167225 = 0;$$1177223 = $$0176$lcssa;$$1226 = $$0165$lcssa;
  while(1) {
   $246 = $$1226 >> 1;
   $247 = $$1177223 << 1;
   $248 = $$0168224 >>> $246;
   $249 = $248 | $$0168224;
   $250 = $247 >> 1;
   $251 = ($$1226|0)>(1);
   if ($251) {
    $252 = ($247|0)>(1);
    $253 = $$1226 & -2;
    if ($252) {
     $$035$us$i180 = 0;
     while(1) {
      $$03334$us$i182 = 0;
      while(1) {
       $254 = Math_imul($$03334$us$i182, $253)|0;
       $255 = (($254) + ($$035$us$i180))|0;
       $256 = (($1) + ($255<<2)|0);
       $257 = Math_fround(HEAPF32[$256>>2]);
       $258 = Math_fround($257 * Math_fround(0.707106769));
       $259 = $$03334$us$i182 << 1;
       $260 = $259 | 1;
       $261 = Math_imul($260, $246)|0;
       $262 = (($261) + ($$035$us$i180))|0;
       $263 = (($1) + ($262<<2)|0);
       $264 = Math_fround(HEAPF32[$263>>2]);
       $265 = Math_fround($264 * Math_fround(0.707106769));
       $266 = Math_fround($258 + $265);
       HEAPF32[$256>>2] = $266;
       $267 = Math_fround($258 - $265);
       HEAPF32[$263>>2] = $267;
       $268 = (($$03334$us$i182) + 1)|0;
       $269 = ($268|0)<($250|0);
       if ($269) {
        $$03334$us$i182 = $268;
       } else {
        break;
       }
      }
      $270 = (($$035$us$i180) + 1)|0;
      $exitcond$i183 = ($270|0)==($246|0);
      if ($exitcond$i183) {
       break;
      } else {
       $$035$us$i180 = $270;
      }
     }
    }
   }
   $271 = (($$1167225) + 1)|0;
   $exitcond266 = ($271|0)==($$0173$lcssa|0);
   if ($exitcond266) {
    $$0168$lcssa = $249;$$1$lcssa = $246;
    break;
   } else {
    $$0168224 = $249;$$1167225 = $271;$$1177223 = $247;$$1226 = $246;
   }
  }
 }
 if ($46) {
  $$1169219 = $$0168$lcssa;$$2220 = 0;
  while(1) {
   $272 = (22864 + ($$1169219)|0);
   $273 = HEAP8[$272>>0]|0;
   $274 = $273&255;
   $275 = $2 >> $$2220;
   $276 = 1 << $$2220;
   $277 = $275 >> 1;
   $278 = ($$2220|0)==(31);
   if (!($278)) {
    $279 = ($275|0)>(1);
    $280 = $276 << 1;
    if ($279) {
     $$035$us$i = 0;
     while(1) {
      $$03334$us$i = 0;
      while(1) {
       $281 = Math_imul($280, $$03334$us$i)|0;
       $282 = (($281) + ($$035$us$i))|0;
       $283 = (($1) + ($282<<2)|0);
       $284 = Math_fround(HEAPF32[$283>>2]);
       $285 = Math_fround($284 * Math_fround(0.707106769));
       $286 = $$03334$us$i << 1;
       $287 = $286 | 1;
       $288 = $287 << $$2220;
       $289 = (($288) + ($$035$us$i))|0;
       $290 = (($1) + ($289<<2)|0);
       $291 = Math_fround(HEAPF32[$290>>2]);
       $292 = Math_fround($291 * Math_fround(0.707106769));
       $293 = Math_fround($285 + $292);
       HEAPF32[$283>>2] = $293;
       $294 = Math_fround($285 - $292);
       HEAPF32[$290>>2] = $294;
       $295 = (($$03334$us$i) + 1)|0;
       $296 = ($295|0)<($277|0);
       if ($296) {
        $$03334$us$i = $295;
       } else {
        break;
       }
      }
      $297 = (($$035$us$i) + 1)|0;
      $exitcond$i = ($297|0)==($276|0);
      if ($exitcond$i) {
       break;
      } else {
       $$035$us$i = $297;
      }
     }
    }
   }
   $298 = (($$2220) + 1)|0;
   $299 = ($298>>>0)<($spec$select>>>0);
   if ($299) {
    $$1169219 = $274;$$2220 = $298;
   } else {
    break;
   }
  }
  $300 = $273&255;
  $$1169$lcssa = $300;
 } else {
  $$1169$lcssa = $$0168$lcssa;
 }
 $301 = $$1$lcssa << $spec$select;
 $302 = ($7|0)==(0|0);
 if (!($302)) {
  $303 = (+($2|0));
  $304 = (+Math_sqrt((+$303)));
  $305 = Math_fround($304);
  $306 = ($2|0)>(0);
  if ($306) {
   $$0163218 = 0;
   while(1) {
    $307 = (($1) + ($$0163218<<2)|0);
    $308 = Math_fround(HEAPF32[$307>>2]);
    $309 = Math_fround($308 * $305);
    $310 = (($7) + ($$0163218<<2)|0);
    HEAPF32[$310>>2] = $309;
    $311 = (($$0163218) + 1)|0;
    $exitcond = ($311|0)==($2|0);
    if ($exitcond) {
     break;
    } else {
     $$0163218 = $311;
    }
   }
  }
 }
 $312 = 1 << $301;
 $313 = (($312) + -1)|0;
 $314 = $$1169$lcssa & $313;
 $$0 = $314;
 return ($$0|0);
}
function _quant_band_stereo($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 var $$$i = Math_fround(0), $$$peel$i = Math_fround(0), $$$us$i = Math_fround(0), $$$us$peel$i = Math_fround(0), $$0$lcssa$i$i = Math_fround(0), $$020$lcssa$i$i = Math_fround(0), $$02023$i$i = Math_fround(0), $$0205 = 0, $$0206 = 0, $$0208 = 0, $$0209 = 0, $$02122$i$i = 0, $$0215 = 0, $$024$i$i = Math_fround(0), $$033$i = 0, $$033$us$i = 0, $$06$i = 0, $$1 = 0, $100 = 0, $101 = Math_fround(0);
 var $102 = Math_fround(0), $103 = 0, $104 = Math_fround(0), $105 = Math_fround(0), $106 = Math_fround(0), $107 = Math_fround(0), $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = Math_fround(0), $116 = 0, $117 = Math_fround(0), $118 = Math_fround(0), $119 = Math_fround(0), $12 = 0;
 var $120 = Math_fround(0), $121 = Math_fround(0), $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = Math_fround(0), $127 = Math_fround(0), $128 = 0, $129 = Math_fround(0), $13 = 0, $130 = Math_fround(0), $131 = Math_fround(0), $132 = Math_fround(0), $133 = 0, $134 = Math_fround(0), $135 = Math_fround(0), $136 = Math_fround(0), $137 = Math_fround(0), $138 = Math_fround(0);
 var $139 = Math_fround(0), $14 = 0, $140 = Math_fround(0), $141 = Math_fround(0), $142 = Math_fround(0), $143 = Math_fround(0), $144 = Math_fround(0), $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = Math_fround(0), $185 = 0, $186 = Math_fround(0), $187 = Math_fround(0), $188 = Math_fround(0), $189 = Math_fround(0), $19 = 0, $190 = Math_fround(0), $191 = 0, $192 = Math_fround(0);
 var $193 = Math_fround(0), $194 = Math_fround(0), $195 = Math_fround(0), $196 = Math_fround(0), $197 = Math_fround(0), $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = Math_fround(0), $202 = Math_fround(0), $203 = Math_fround(0), $204 = Math_fround(0), $205 = 0, $206 = Math_fround(0), $207 = Math_fround(0), $208 = 0, $209 = Math_fround(0), $21 = 0, $210 = Math_fround(0);
 var $211 = Math_fround(0), $212 = Math_fround(0), $213 = Math_fround(0), $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = Math_fround(0), $219 = Math_fround(0), $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = Math_fround(0), $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = Math_fround(0), $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = Math_fround(0), $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = Math_fround(0), $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = Math_fround(0), $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = Math_fround(0), $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = Math_fround(0), $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = Math_fround(0), $exitcond = 0, $exitcond$i = 0, $exitcond$i$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond3 = 0, $or$cond5 = 0, $spec$select = 0, $spec$select211 = 0, $spec$store$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $11 = sp + 28|0;
 $12 = sp + 24|0;
 $13 = sp;
 HEAP32[$11>>2] = $4;
 HEAP32[$12>>2] = $10;
 $14 = HEAP32[$0>>2]|0;
 $15 = ((($0)) + 28|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($3|0)==(1);
 if ($17) {
  $18 = ($2|0)==(0|0);
  $19 = ((($0)) + 32|0);
  $20 = ($14|0)==(0);
  $21 = $18 ? 1 : 2;
  $22 = ((($0)) + 4|0);
  $23 = HEAP32[$19>>2]|0;
  $24 = ($23|0)>(7);
  if ($20) {
   if ($24) {
    $27 = (_ec_dec_bits($16,1)|0);
    $28 = HEAP32[$19>>2]|0;
    $29 = (($28) + -8)|0;
    HEAP32[$19>>2] = $29;
    $30 = HEAP32[$22>>2]|0;
    $31 = ($30|0)==(0);
    $32 = ($27|0)==(0);
    $$$us$peel$i = $32 ? Math_fround(1.0) : Math_fround(-1.0);
    if ($31) {
     $221 = 0;$222 = $29;
    } else {
     $223 = $30;$224 = $29;$33 = $$$us$peel$i;
     label = 6;
    }
   } else {
    $25 = HEAP32[$22>>2]|0;
    $26 = ($25|0)==(0);
    if ($26) {
     $221 = 0;$222 = $23;
    } else {
     $223 = $25;$224 = $23;$33 = Math_fround(1.0);
     label = 6;
    }
   }
   if ((label|0) == 6) {
    HEAPF32[$1>>2] = $33;
    $221 = $223;$222 = $224;
   }
   if (!($18)) {
    $$033$us$i = 1;$35 = $222;$37 = $221;
    while(1) {
     $34 = ($35|0)>(7);
     if ($34) {
      $38 = (_ec_dec_bits($16,1)|0);
      $39 = HEAP32[$19>>2]|0;
      $40 = (($39) + -8)|0;
      HEAP32[$19>>2] = $40;
      $41 = HEAP32[$22>>2]|0;
      $42 = ($41|0)==(0);
      $43 = ($38|0)==(0);
      $$$us$i = $43 ? Math_fround(1.0) : Math_fround(-1.0);
      if ($42) {
       $225 = 0;$226 = $40;
      } else {
       $227 = $41;$228 = $40;$44 = $$$us$i;
       label = 12;
      }
     } else {
      $36 = ($37|0)==(0);
      if ($36) {
       $225 = 0;$226 = $35;
      } else {
       $227 = $37;$228 = $35;$44 = Math_fround(1.0);
       label = 12;
      }
     }
     if ((label|0) == 12) {
      label = 0;
      HEAPF32[$2>>2] = $44;
      $225 = $227;$226 = $228;
     }
     $45 = (($$033$us$i) + 1)|0;
     $46 = ($45>>>0)<($21>>>0);
     if ($46) {
      $$033$us$i = $45;$35 = $226;$37 = $225;
     } else {
      break;
     }
    }
   }
  } else {
   if ($24) {
    $49 = Math_fround(HEAPF32[$1>>2]);
    $50 = $49 < Math_fround(0.0);
    $51 = $50&1;
    _ec_enc_bits($16,$51,1);
    $52 = HEAP32[$19>>2]|0;
    $53 = (($52) + -8)|0;
    HEAP32[$19>>2] = $53;
    $54 = HEAP32[$22>>2]|0;
    $55 = ($54|0)==(0);
    $$$peel$i = $50 ? Math_fround(-1.0) : Math_fround(1.0);
    if ($55) {
     $229 = 0;$230 = $53;
    } else {
     $231 = $54;$232 = $53;$56 = $$$peel$i;
     label = 17;
    }
   } else {
    $47 = HEAP32[$22>>2]|0;
    $48 = ($47|0)==(0);
    if ($48) {
     $229 = 0;$230 = $23;
    } else {
     $231 = $47;$232 = $23;$56 = Math_fround(1.0);
     label = 17;
    }
   }
   if ((label|0) == 17) {
    HEAPF32[$1>>2] = $56;
    $229 = $231;$230 = $232;
   }
   if (!($18)) {
    $$033$i = 1;$58 = $230;$60 = $229;
    while(1) {
     $57 = ($58|0)>(7);
     if ($57) {
      $61 = Math_fround(HEAPF32[$2>>2]);
      $62 = $61 < Math_fround(0.0);
      $63 = $62&1;
      _ec_enc_bits($16,$63,1);
      $64 = HEAP32[$19>>2]|0;
      $65 = (($64) + -8)|0;
      HEAP32[$19>>2] = $65;
      $66 = HEAP32[$22>>2]|0;
      $67 = ($66|0)==(0);
      $$$i = $62 ? Math_fround(-1.0) : Math_fround(1.0);
      if ($67) {
       $233 = 0;$234 = $65;
      } else {
       $235 = $66;$236 = $65;$68 = $$$i;
       label = 23;
      }
     } else {
      $59 = ($60|0)==(0);
      if ($59) {
       $233 = 0;$234 = $58;
      } else {
       $235 = $60;$236 = $58;$68 = Math_fround(1.0);
       label = 23;
      }
     }
     if ((label|0) == 23) {
      label = 0;
      HEAPF32[$2>>2] = $68;
      $233 = $235;$234 = $236;
     }
     $69 = (($$033$i) + 1)|0;
     $70 = ($69>>>0)<($21>>>0);
     if ($70) {
      $$033$i = $69;$58 = $234;$60 = $233;
     } else {
      break;
     }
    }
   }
  }
  $71 = ($8|0)==(0|0);
  if ($71) {
   $$0205 = 1;
   STACKTOP = sp;return ($$0205|0);
  }
  $72 = HEAP32[$1>>2]|0;
  HEAP32[$8>>2] = $72;
  $$0205 = 1;
  STACKTOP = sp;return ($$0205|0);
 } else {
  _compute_theta($0,$13,$1,$2,$3,$11,$5,$5,$7,1,$12);
  $73 = HEAP32[$13>>2]|0;
  $74 = ((($13)) + 4|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = ((($13)) + 8|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = ((($13)) + 16|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = ((($13)) + 20|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = (Math_fround(($75|0)));
  $83 = Math_fround($82 * Math_fround(3.05175781E-5));
  $84 = (Math_fround(($77|0)));
  $85 = Math_fround($84 * Math_fround(3.05175781E-5));
  $86 = ($3|0)==(2);
  $87 = HEAP32[$11>>2]|0;
  do {
   if ($86) {
    $88 = $79 | 16384;
    $89 = ($88|0)!=(16384);
    $spec$store$select = $89 ? 8 : 0;
    $90 = (($87) - ($spec$store$select))|0;
    $91 = ($79|0)>(8192);
    $92 = ((($0)) + 32|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = (($spec$store$select) + ($81))|0;
    $95 = (($93) - ($94))|0;
    HEAP32[$92>>2] = $95;
    $96 = $91 ? $2 : $1;
    $97 = $91 ? $1 : $2;
    do {
     if ($89) {
      $98 = ($14|0)==(0);
      if ($98) {
       $110 = (_ec_dec_bits($16,1)|0);
       $$0206 = $110;
       break;
      } else {
       $99 = Math_fround(HEAPF32[$96>>2]);
       $100 = ((($97)) + 4|0);
       $101 = Math_fround(HEAPF32[$100>>2]);
       $102 = Math_fround($99 * $101);
       $103 = ((($96)) + 4|0);
       $104 = Math_fround(HEAPF32[$103>>2]);
       $105 = Math_fround(HEAPF32[$97>>2]);
       $106 = Math_fround($104 * $105);
       $107 = Math_fround($102 - $106);
       $108 = $107 < Math_fround(0.0);
       $109 = $108&1;
       _ec_enc_bits($16,$109,1);
       $$0206 = $109;
       break;
      }
     } else {
      $$0206 = 0;
     }
    } while(0);
    $111 = $$0206 << 1;
    $112 = (1 - ($111))|0;
    $113 = (_quant_band($0,$96,2,$90,$5,$6,$7,$8,Math_fround(1.0),$9,$10)|0);
    $114 = (0 - ($112))|0;
    $115 = (Math_fround(($114|0)));
    $116 = ((($96)) + 4|0);
    $117 = Math_fround(HEAPF32[$116>>2]);
    $118 = Math_fround($117 * $115);
    HEAPF32[$97>>2] = $118;
    $119 = (Math_fround(($112|0)));
    $120 = Math_fround(HEAPF32[$96>>2]);
    $121 = Math_fround($120 * $119);
    $122 = ((($97)) + 4|0);
    HEAPF32[$122>>2] = $121;
    $123 = ((($0)) + 4|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ($124|0)==(0);
    if ($125) {
     $$1 = $113;
    } else {
     $126 = Math_fround(HEAPF32[$1>>2]);
     $127 = Math_fround($83 * $126);
     HEAPF32[$1>>2] = $127;
     $128 = ((($1)) + 4|0);
     $129 = Math_fround(HEAPF32[$128>>2]);
     $130 = Math_fround($83 * $129);
     HEAPF32[$128>>2] = $130;
     $131 = Math_fround(HEAPF32[$2>>2]);
     $132 = Math_fround($85 * $131);
     HEAPF32[$2>>2] = $132;
     $133 = ((($2)) + 4|0);
     $134 = Math_fround(HEAPF32[$133>>2]);
     $135 = Math_fround($85 * $134);
     HEAPF32[$133>>2] = $135;
     $136 = Math_fround(HEAPF32[$1>>2]);
     $137 = Math_fround($136 - $132);
     HEAPF32[$1>>2] = $137;
     $138 = Math_fround(HEAPF32[$2>>2]);
     $139 = Math_fround($136 + $138);
     HEAPF32[$2>>2] = $139;
     $140 = Math_fround(HEAPF32[$128>>2]);
     $141 = Math_fround(HEAPF32[$133>>2]);
     $142 = Math_fround($140 - $141);
     HEAPF32[$128>>2] = $142;
     $143 = Math_fround(HEAPF32[$133>>2]);
     $144 = Math_fround($140 + $143);
     HEAPF32[$133>>2] = $144;
     $$1 = $113;
    }
   } else {
    $145 = ((($13)) + 12|0);
    $146 = HEAP32[$145>>2]|0;
    $147 = (($87) - ($146))|0;
    $148 = (($147|0) / 2)&-1;
    $149 = ($87|0)<($148|0);
    $spec$select = $149 ? $87 : $148;
    $150 = ($spec$select|0)>(0);
    $spec$select211 = $150 ? $spec$select : 0;
    $151 = (($87) - ($spec$select211))|0;
    $152 = ((($0)) + 32|0);
    $153 = HEAP32[$152>>2]|0;
    $154 = (($153) - ($81))|0;
    HEAP32[$152>>2] = $154;
    $155 = ($spec$select211|0)<($151|0);
    $156 = HEAP32[$12>>2]|0;
    if ($155) {
     $168 = $156 >> $5;
     $169 = (_quant_band($0,$2,$3,$151,$5,0,$7,0,$85,0,$168)|0);
     $170 = HEAP32[$152>>2]|0;
     $171 = (($170) - ($154))|0;
     $172 = (($171) + ($151))|0;
     $173 = ($172|0)>(24);
     $174 = ($79|0)!=(16384);
     $or$cond5 = $174 & $173;
     $175 = (($172) + -24)|0;
     $176 = $or$cond5 ? $175 : 0;
     $$0208 = (($176) + ($spec$select211))|0;
     $177 = (_quant_band($0,$1,$3,$$0208,$5,$6,$7,$8,Math_fround(1.0),$9,$156)|0);
     $178 = $177 | $169;
     $$1 = $178;
     break;
    } else {
     $157 = (_quant_band($0,$1,$3,$spec$select211,$5,$6,$7,$8,Math_fround(1.0),$9,$156)|0);
     $158 = HEAP32[$152>>2]|0;
     $159 = (($158) - ($154))|0;
     $160 = (($159) + ($spec$select211))|0;
     $161 = ($160|0)>(24);
     $162 = ($79|0)!=(0);
     $or$cond3 = $162 & $161;
     $163 = (($160) + -24)|0;
     $164 = $or$cond3 ? $163 : 0;
     $$0209 = (($164) + ($151))|0;
     $165 = $156 >> $5;
     $166 = (_quant_band($0,$2,$3,$$0209,$5,0,$7,0,$85,0,$165)|0);
     $167 = $166 | $157;
     $$1 = $167;
     break;
    }
   }
  } while(0);
  $179 = ((($0)) + 4|0);
  $180 = HEAP32[$179>>2]|0;
  $181 = ($180|0)==(0);
  if ($181) {
   $$0205 = $$1;
   STACKTOP = sp;return ($$0205|0);
  }
  do {
   if (!($86)) {
    $182 = ($3|0)>(0);
    if ($182) {
     $$02023$i$i = Math_fround(0.0);$$02122$i$i = 0;$$024$i$i = Math_fround(0.0);
     while(1) {
      $183 = (($2) + ($$02122$i$i<<2)|0);
      $184 = Math_fround(HEAPF32[$183>>2]);
      $185 = (($1) + ($$02122$i$i<<2)|0);
      $186 = Math_fround(HEAPF32[$185>>2]);
      $187 = Math_fround($184 * $186);
      $188 = Math_fround($$02023$i$i + $187);
      $189 = Math_fround($184 * $184);
      $190 = Math_fround($$024$i$i + $189);
      $191 = (($$02122$i$i) + 1)|0;
      $exitcond$i$i = ($191|0)==($3|0);
      if ($exitcond$i$i) {
       $$0$lcssa$i$i = $190;$$020$lcssa$i$i = $188;
       break;
      } else {
       $$02023$i$i = $188;$$02122$i$i = $191;$$024$i$i = $190;
      }
     }
    } else {
     $$0$lcssa$i$i = Math_fround(0.0);$$020$lcssa$i$i = Math_fround(0.0);
    }
    $192 = Math_fround($83 * $$020$lcssa$i$i);
    $193 = Math_fround($83 * $83);
    $194 = Math_fround($193 + $$0$lcssa$i$i);
    $195 = Math_fround($192 * Math_fround(2.0));
    $196 = Math_fround($194 - $195);
    $197 = Math_fround($194 + $195);
    $198 = $197 < Math_fround(6.00000028E-4);
    $199 = $196 < Math_fround(6.00000028E-4);
    $or$cond$i = $198 | $199;
    if ($or$cond$i) {
     $200 = $3 << 2;
     _memcpy(($2|0),($1|0),($200|0))|0;
     break;
    }
    $201 = (Math_fround(Math_sqrt((Math_fround($196)))));
    $202 = Math_fround(Math_fround(1.0) / $201);
    $203 = (Math_fround(Math_sqrt((Math_fround($197)))));
    $204 = Math_fround(Math_fround(1.0) / $203);
    if (!($182)) {
     $$0205 = $$1;
     STACKTOP = sp;return ($$0205|0);
    }
    $$06$i = 0;
    while(1) {
     $205 = (($1) + ($$06$i<<2)|0);
     $206 = Math_fround(HEAPF32[$205>>2]);
     $207 = Math_fround($83 * $206);
     $208 = (($2) + ($$06$i<<2)|0);
     $209 = Math_fround(HEAPF32[$208>>2]);
     $210 = Math_fround($207 - $209);
     $211 = Math_fround($202 * $210);
     HEAPF32[$205>>2] = $211;
     $212 = Math_fround($207 + $209);
     $213 = Math_fround($204 * $212);
     HEAPF32[$208>>2] = $213;
     $214 = (($$06$i) + 1)|0;
     $exitcond$i = ($214|0)==($3|0);
     if ($exitcond$i) {
      break;
     } else {
      $$06$i = $214;
     }
    }
   }
  } while(0);
  $215 = ($73|0)!=(0);
  $216 = ($3|0)>(0);
  $or$cond = $215 & $216;
  if (!($or$cond)) {
   $$0205 = $$1;
   STACKTOP = sp;return ($$0205|0);
  }
  $$0215 = 0;
  while(1) {
   $217 = (($2) + ($$0215<<2)|0);
   $218 = Math_fround(HEAPF32[$217>>2]);
   $219 = Math_fround(- $218);
   HEAPF32[$217>>2] = $219;
   $220 = (($$0215) + 1)|0;
   $exitcond = ($220|0)==($3|0);
   if ($exitcond) {
    $$0205 = $$1;
    break;
   } else {
    $$0215 = $220;
   }
  }
  STACKTOP = sp;return ($$0205|0);
 }
 return (0)|0;
}
function _compute_theta($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 var $$ = 0, $$01$i = 0, $$01$i333 = 0, $$019$i = 0, $$027$i = 0, $$0308 = 0, $$0309 = 0, $$0310 = 0, $$0311 = 0, $$0312 = 0, $$0313 = 0, $$0314 = 0, $$0315 = 0, $$0319 = 0, $$0369 = 0, $$1316 = 0, $$2 = 0, $$3 = 0, $$3318$ph = 0, $$3318347 = 0;
 var $$3318348 = 0, $$3342 = 0, $$5 = 0, $$7 = 0, $$7$ph = 0, $$8 = 0, $$8349 = 0, $$idx = 0, $$idx$val = 0, $$idx327 = 0, $$idx327$val = 0, $$lobit = 0, $$lobit$not = 0, $$not = 0, $$pre = 0, $$pre$phi372Z2D = 0, $$pre$phiZ2D = 0, $$pre371 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = Math_fround(0), $251 = 0, $252 = 0, $253 = Math_fround(0), $254 = Math_fround(0), $255 = Math_fround(0), $256 = Math_fround(0), $257 = Math_fround(0), $258 = Math_fround(0), $259 = Math_fround(0), $26 = 0, $260 = Math_fround(0), $261 = Math_fround(0), $262 = 0, $263 = 0, $264 = Math_fround(0), $265 = 0;
 var $266 = Math_fround(0), $267 = Math_fround(0), $268 = Math_fround(0), $269 = Math_fround(0), $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = Math_fround(0), $274 = Math_fround(0), $275 = 0, $276 = Math_fround(0), $277 = Math_fround(0), $278 = Math_fround(0), $279 = Math_fround(0), $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = Math_fround(0), $289 = Math_fround(0), $29 = 0, $290 = 0, $291 = 0, $292 = Math_fround(0), $293 = 0, $294 = 0, $295 = Math_fround(0), $296 = Math_fround(0), $297 = Math_fround(0), $298 = Math_fround(0), $299 = Math_fround(0), $30 = 0, $300 = Math_fround(0), $301 = Math_fround(0);
 var $302 = Math_fround(0), $303 = Math_fround(0), $304 = 0, $305 = 0, $306 = Math_fround(0), $307 = 0, $308 = Math_fround(0), $309 = Math_fround(0), $31 = 0, $310 = Math_fround(0), $311 = Math_fround(0), $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0;
 var $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0;
 var $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0;
 var $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0;
 var $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i331 = 0, $exitcond$i334 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond323 = 0, $or$cond324 = 0, $or$cond5 = 0, $or$cond7 = 0, $sext = 0, $sext$i = 0;
 var $sext$i328 = 0, $sext$i329 = 0, $sext$i336 = 0, $sext$i338 = 0, $sext$i339 = 0, $sext15$i = 0, $sext15$i337 = 0, $sext320 = 0, $sext321 = 0, $sext322 = 0, $sext352 = 0, $sext353 = 0, $sext354 = 0, $sext355 = 0, $sext356 = 0, $sext357 = 0, $sext358 = 0, $sext359 = 0, $spec$select = 0, $spec$select$i = 0;
 var $spec$select$v$i = 0, $spec$select326 = 0, $spec$select351 = 0, $switch$split2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $11 = HEAP32[$0>>2]|0;
 $12 = ((($0)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($0)) + 12|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($0)) + 16|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($0)) + 28|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($0)) + 36|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($13)) + 56|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = (($23) + ($15<<1)|0);
 $25 = HEAP16[$24>>1]|0;
 $26 = $25 << 16 >> 16;
 $27 = $8 << 3;
 $28 = (($27) + ($26))|0;
 $29 = $28 >> 1;
 $30 = ($9|0)!=(0);
 $31 = ($4|0)==(2);
 $32 = $31 & $30;
 $33 = $32 ? 16 : 4;
 $34 = (($29) - ($33))|0;
 $35 = HEAP32[$5>>2]|0;
 $36 = $4 << 1;
 $spec$select$v$i = $32 ? -2 : -1;
 $spec$select$i = (($spec$select$v$i) + ($36))|0;
 $37 = Math_imul($34, $spec$select$i)|0;
 $38 = (($37) + ($35))|0;
 $39 = (($38|0) / ($spec$select$i|0))&-1;
 $40 = (($35) - ($28))|0;
 $41 = (($40) + -32)|0;
 $42 = ($41|0)<($39|0);
 $43 = $42 ? $41 : $39;
 $44 = ($43|0)<(64);
 $45 = $44 ? $43 : 64;
 $46 = ($45|0)<(4);
 if ($46) {
  $$027$i = 1;
 } else {
  $47 = $45 & 7;
  $48 = (22832 + ($47<<1)|0);
  $49 = HEAP16[$48>>1]|0;
  $50 = $49 << 16 >> 16;
  $51 = $45 >>> 3;
  $52 = (14 - ($51))|0;
  $53 = $50 >> $52;
  $54 = (($53) + 1)|0;
  $55 = $54 & -2;
  $$027$i = $55;
 }
 $$not = $30 ^ 1;
 $56 = ($15|0)<($17|0);
 $or$cond323 = $56 | $$not;
 $$0308 = $or$cond323 ? $$027$i : 1;
 $57 = ($11|0)!=(0);
 if ($57) {
  $58 = ((($0)) + 44|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = (_stereo_itheta($2,$3,$9,$4,$59)|0);
  $$0310 = $60;
 } else {
  $$0310 = 0;
 }
 $61 = (_ec_tell_frac($19)|0);
 $62 = ($$0308|0)==(1);
 do {
  if ($62) {
   if ($30) {
    if ($57) {
     $281 = ($$0310|0)>(8192);
     if ($281) {
      $282 = ((($0)) + 52|0);
      $283 = HEAP32[$282>>2]|0;
      $284 = ($283|0)==(0);
      $285 = $284&1;
      if ($284) {
       $286 = ($4|0)>(0);
       if ($286) {
        $$0369 = 0;
        while(1) {
         $287 = (($3) + ($$0369<<2)|0);
         $288 = Math_fround(HEAPF32[$287>>2]);
         $289 = Math_fround(- $288);
         HEAPF32[$287>>2] = $289;
         $290 = (($$0369) + 1)|0;
         $exitcond = ($290|0)==($4|0);
         if ($exitcond) {
          $419 = $285;
          break;
         } else {
          $$0369 = $290;
         }
        }
       } else {
        $419 = 1;
       }
      } else {
       $419 = 0;
      }
     } else {
      $419 = 0;
     }
     $$idx = ((($13)) + 8|0);
     $$idx$val = HEAP32[$$idx>>2]|0;
     $291 = (($21) + ($15<<2)|0);
     $292 = Math_fround(HEAPF32[$291>>2]);
     $293 = (($$idx$val) + ($15))|0;
     $294 = (($21) + ($293<<2)|0);
     $295 = Math_fround(HEAPF32[$294>>2]);
     $296 = Math_fround($292 * $292);
     $297 = Math_fround($296 + Math_fround(1.0E-15));
     $298 = Math_fround($295 * $295);
     $299 = Math_fround($297 + $298);
     $300 = (Math_fround(Math_sqrt((Math_fround($299)))));
     $301 = Math_fround($300 + Math_fround(1.0E-15));
     $302 = Math_fround($292 / $301);
     $303 = Math_fround($295 / $301);
     $304 = ($4|0)>(0);
     if ($304) {
      $$01$i = 0;
      while(1) {
       $305 = (($2) + ($$01$i<<2)|0);
       $306 = Math_fround(HEAPF32[$305>>2]);
       $307 = (($3) + ($$01$i<<2)|0);
       $308 = Math_fround(HEAPF32[$307>>2]);
       $309 = Math_fround($302 * $306);
       $310 = Math_fround($303 * $308);
       $311 = Math_fround($309 + $310);
       HEAPF32[$305>>2] = $311;
       $312 = (($$01$i) + 1)|0;
       $exitcond$i = ($312|0)==($4|0);
       if ($exitcond$i) {
        $$0315 = $419;
        break;
       } else {
        $$01$i = $312;
       }
      }
     } else {
      $$0315 = $419;
     }
    } else {
     $$0315 = 0;
    }
    $313 = HEAP32[$5>>2]|0;
    $314 = ($313|0)>(16);
    do {
     if ($314) {
      $315 = ((($0)) + 32|0);
      $316 = HEAP32[$315>>2]|0;
      $317 = ($316|0)>(16);
      if ($317) {
       if ($57) {
        _ec_enc_bit_logp($19,$$0315,2);
        $$1316 = $$0315;
        break;
       } else {
        $318 = (_ec_dec_bit_logp($19,2)|0);
        $$1316 = $318;
        break;
       }
      } else {
       $$1316 = 0;
      }
     } else {
      $$1316 = 0;
     }
    } while(0);
    $319 = ((($0)) + 52|0);
    $320 = HEAP32[$319>>2]|0;
    $321 = ($320|0)==(0);
    $spec$select326 = $321 ? $$1316 : 0;
    $$3318$ph = $spec$select326;
    label = 61;
   } else {
    $$8 = $$0310;
    label = 62;
   }
  } else {
   do {
    if ($57) {
     if (!($30)) {
      $69 = Math_imul($$0310, $$0308)|0;
      $70 = (($69) + 8192)|0;
      $71 = $70 >> 14;
      $72 = ((($0)) + 56|0);
      $73 = HEAP32[$72>>2]|0;
      $74 = ($73|0)!=(0);
      $75 = ($69|0)>(8191);
      $or$cond = $75 & $74;
      $76 = ($71|0)<($$0308|0);
      $or$cond324 = $76 & $or$cond;
      if (!($or$cond324)) {
       $$3342 = $71;
       label = 23;
       break;
      }
      $77 = $70 & -16384;
      $78 = (($77>>>0) / ($$0308>>>0))&-1;
      $sext356 = $78 << 16;
      $79 = $sext356 >> 16;
      $80 = $sext356 >> 13;
      $81 = Math_imul($80, $79)|0;
      $82 = (($81) + 32768)|0;
      $83 = $82 >> 16;
      $84 = Math_imul($83, -626)|0;
      $85 = (($84) + 16384)|0;
      $86 = $85 >> 15;
      $87 = (($86) + 8277)|0;
      $88 = Math_imul($87, $83)|0;
      $89 = (($88) + 16384)|0;
      $90 = $89 >>> 15;
      $91 = $90 << 16;
      $sext$i339 = (($91) + -501415936)|0;
      $92 = $sext$i339 >> 16;
      $93 = Math_imul($92, $83)|0;
      $94 = (($93) + 16384)|0;
      $95 = $94 >>> 15;
      $96 = (32768 - ($83))|0;
      $97 = (($96) + ($95))|0;
      $sext357 = $97 << 16;
      $98 = $sext357 >> 16;
      $sext358 = (1073741824 - ($sext356))|0;
      $99 = $sext358 >> 16;
      $100 = $sext358 >> 13;
      $101 = Math_imul($100, $99)|0;
      $102 = (($101) + 32768)|0;
      $103 = $102 >> 16;
      $104 = Math_imul($103, -626)|0;
      $105 = (($104) + 16384)|0;
      $106 = $105 >> 15;
      $107 = (($106) + 8277)|0;
      $108 = Math_imul($107, $103)|0;
      $109 = (($108) + 16384)|0;
      $110 = $109 >>> 15;
      $111 = $110 << 16;
      $sext$i338 = (($111) + -501415936)|0;
      $112 = $sext$i338 >> 16;
      $113 = Math_imul($112, $103)|0;
      $114 = (($113) + 16384)|0;
      $115 = $114 >>> 15;
      $116 = (32768 - ($103))|0;
      $117 = (($116) + ($115))|0;
      $sext359 = $117 << 16;
      $118 = $sext359 >> 16;
      $119 = $4 << 23;
      $sext321 = (($119) + -8388608)|0;
      $120 = $sext321 >> 16;
      $121 = (Math_clz32(($98|0))|0);
      $122 = (32 - ($121))|0;
      $123 = (Math_clz32(($118|0))|0);
      $124 = (32 - ($123))|0;
      $125 = (15 - ($122))|0;
      $126 = $98 << $125;
      $127 = (15 - ($124))|0;
      $128 = $118 << $127;
      $129 = (($124) - ($122))|0;
      $130 = $129 << 11;
      $sext$i336 = $128 << 16;
      $131 = $sext$i336 >> 16;
      $132 = Math_imul($131, -2597)|0;
      $133 = (($132) + 16384)|0;
      $134 = $133 >> 15;
      $135 = (($134) + 7932)|0;
      $136 = Math_imul($135, $131)|0;
      $137 = (($136) + 16384)|0;
      $138 = $137 >>> 15;
      $sext15$i337 = $126 << 16;
      $139 = $sext15$i337 >> 16;
      $140 = Math_imul($139, -2597)|0;
      $141 = (($140) + 16384)|0;
      $142 = $141 >> 15;
      $143 = (($142) + 7932)|0;
      $144 = Math_imul($143, $139)|0;
      $145 = (($144) + 16384)|0;
      $146 = $145 >>> 15;
      $147 = (($130) - ($146))|0;
      $148 = (($147) + ($138))|0;
      $sext322 = $148 << 16;
      $149 = $sext322 >> 16;
      $150 = Math_imul($149, $120)|0;
      $151 = (($150) + 16384)|0;
      $152 = $151 >> 15;
      $153 = HEAP32[$5>>2]|0;
      $154 = ($152|0)>($153|0);
      $155 = (0 - ($153))|0;
      $156 = ($152|0)<($155|0);
      $spec$select = $156 ? 0 : $71;
      $spec$select351 = $154 ? $$0308 : $spec$select;
      $$3342 = $spec$select351;
      label = 23;
      break;
     }
     $63 = ((($0)) + 48|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = ($64|0)==(0);
     if ($65) {
      $66 = Math_imul($$0310, $$0308)|0;
      $67 = (($66) + 8192)|0;
      $68 = $67 >> 14;
      $$3 = $68;
      label = 13;
      break;
     } else {
      $157 = ($$0310|0)>(8192);
      $$ = $157 ? 32767 : -32767;
      $158 = (($$|0) / ($$0308|0))&-1;
      $159 = (($$0308) + -1)|0;
      $160 = Math_imul($$0310, $$0308)|0;
      $161 = (($158) + ($160))|0;
      $162 = $161 >> 14;
      $163 = ($161|0)<(0);
      $164 = $163 ? 0 : $162;
      $165 = ($$0308|0)>($164|0);
      $166 = $165 ? $164 : $159;
      $$lobit = $64 >>> 31;
      $$lobit$not = $$lobit ^ 1;
      $$2 = (($166) + ($$lobit$not))|0;
      $$3 = $$2;
      label = 13;
      break;
     }
    } else {
     $$3 = $$0310;
     label = 13;
    }
   } while(0);
   do {
    if ((label|0) == 13) {
     $167 = ($4|0)>(2);
     $or$cond3 = $167 & $30;
     if ($or$cond3) {
      $168 = (($$0308|0) / 2)&-1;
      $169 = (($168) + 1)|0;
      $170 = ($169*3)|0;
      $171 = (($170) + ($168))|0;
      if ($57) {
       $172 = ($$3|0)<=($168|0);
       if ($172) {
        $173 = ($$3*3)|0;
        $$pre$phiZ2D = $173;$181 = $173;
       } else {
        $174 = $168 ^ -1;
        $175 = (($170) + ($174))|0;
        $176 = (($175) + ($$3))|0;
        $$pre = ($$3*3)|0;
        $$pre$phiZ2D = $$pre;$181 = $176;
       }
       $177 = (($$pre$phiZ2D) + 3)|0;
       $178 = (($170) - ($168))|0;
       $179 = (($178) + ($$3))|0;
       $180 = $172 ? $177 : $179;
       _ec_encode($19,$181,$180,$171);
       $$7 = $$3;
       break;
      } else {
       $182 = (_ec_decode($19,$171)|0);
       $183 = ($182|0)<($170|0);
       $184 = (($182|0) / 3)&-1;
       $185 = Math_imul($169, -2)|0;
       $186 = (($185) + ($182))|0;
       $$0319 = $183 ? $184 : $186;
       $187 = ($$0319|0)<=($168|0);
       if ($187) {
        $188 = ($$0319*3)|0;
        $$pre$phi372Z2D = $188;$196 = $188;
       } else {
        $189 = $168 ^ -1;
        $190 = (($170) + ($189))|0;
        $191 = (($190) + ($$0319))|0;
        $$pre371 = ($$0319*3)|0;
        $$pre$phi372Z2D = $$pre371;$196 = $191;
       }
       $192 = (($$pre$phi372Z2D) + 3)|0;
       $193 = (($170) - ($168))|0;
       $194 = (($193) + ($$0319))|0;
       $195 = $187 ? $192 : $194;
       _ec_dec_update($19,$196,$195,$171);
       $$7$ph = $$0319;
       label = 36;
       break;
      }
     } else {
      $$3342 = $$3;
      label = 23;
     }
    }
   } while(0);
   do {
    if ((label|0) == 23) {
     $197 = ($7|0)>(1);
     $or$cond5 = $197 | $30;
     if ($or$cond5) {
      $198 = (($$0308) + 1)|0;
      if ($57) {
       _ec_enc_uint($19,$$3342,$198);
       $$7 = $$3342;
       break;
      } else {
       $199 = (_ec_dec_uint($19,$198)|0);
       $$7$ph = $199;
       label = 36;
       break;
      }
     }
     $200 = $$0308 >> 1;
     $201 = (($200) + 1)|0;
     $202 = Math_imul($201, $201)|0;
     if ($57) {
      $203 = ($$3342|0)<=($200|0);
      $204 = (($$3342) + 1)|0;
      $205 = (($$0308) + 1)|0;
      $206 = (($205) - ($$3342))|0;
      $207 = $203 ? $204 : $206;
      if ($203) {
       $208 = Math_imul($204, $$3342)|0;
       $209 = $208 >> 1;
       $216 = $209;
      } else {
       $210 = (($$0308) + 2)|0;
       $211 = (($210) - ($$3342))|0;
       $212 = Math_imul($206, $211)|0;
       $213 = $212 >> 1;
       $214 = (($202) - ($213))|0;
       $216 = $214;
      }
      $215 = (($216) + ($207))|0;
      _ec_encode($19,$216,$215,$202);
      $$7 = $$3342;
      break;
     } else {
      $217 = (_ec_decode($19,$202)|0);
      $218 = Math_imul($201, $200)|0;
      $219 = $218 >> 1;
      $220 = ($217|0)<($219|0);
      if ($220) {
       $221 = $217 << 3;
       $222 = $221 | 1;
       $223 = (_isqrt32($222)|0);
       $224 = (($223) + -1)|0;
       $225 = $224 >>> 1;
       $226 = (($225) + 1)|0;
       $227 = Math_imul($226, $225)|0;
       $228 = $227 >>> 1;
       $$0309 = $228;$$0312 = $226;$$5 = $225;
      } else {
       $229 = (($$0308) + 1)|0;
       $230 = $229 << 1;
       $231 = (($202) - ($217))|0;
       $232 = $231 << 3;
       $233 = (($232) + -7)|0;
       $234 = (_isqrt32($233)|0);
       $235 = (($230) - ($234))|0;
       $236 = $235 >>> 1;
       $237 = (($229) - ($236))|0;
       $238 = (($$0308) + 2)|0;
       $239 = (($238) - ($236))|0;
       $240 = Math_imul($237, $239)|0;
       $241 = $240 >> 1;
       $242 = (($202) - ($241))|0;
       $$0309 = $242;$$0312 = $237;$$5 = $236;
      }
      $243 = (($$0309) + ($$0312))|0;
      _ec_dec_update($19,$$0309,$243,$202);
      $$7$ph = $$5;
      label = 36;
      break;
     }
    }
   } while(0);
   if ((label|0) == 36) {
    $244 = $$7$ph << 14;
    $245 = (($244>>>0) / ($$0308>>>0))&-1;
    $$8 = $245;
    label = 62;
    break;
   }
   $246 = $$7 << 14;
   $247 = (($246>>>0) / ($$0308>>>0))&-1;
   $or$cond7 = $30 & $57;
   if ($or$cond7) {
    $248 = ($$0308>>>0)>($246>>>0);
    if ($248) {
     $$idx327 = ((($13)) + 8|0);
     $$idx327$val = HEAP32[$$idx327>>2]|0;
     $249 = (($21) + ($15<<2)|0);
     $250 = Math_fround(HEAPF32[$249>>2]);
     $251 = (($$idx327$val) + ($15))|0;
     $252 = (($21) + ($251<<2)|0);
     $253 = Math_fround(HEAPF32[$252>>2]);
     $254 = Math_fround($250 * $250);
     $255 = Math_fround($254 + Math_fround(1.0E-15));
     $256 = Math_fround($253 * $253);
     $257 = Math_fround($255 + $256);
     $258 = (Math_fround(Math_sqrt((Math_fround($257)))));
     $259 = Math_fround($258 + Math_fround(1.0E-15));
     $260 = Math_fround($250 / $259);
     $261 = Math_fround($253 / $259);
     $262 = ($4|0)>(0);
     if (!($262)) {
      $$3318$ph = 0;
      label = 61;
      break;
     }
     $$01$i333 = 0;
     while(1) {
      $263 = (($2) + ($$01$i333<<2)|0);
      $264 = Math_fround(HEAPF32[$263>>2]);
      $265 = (($3) + ($$01$i333<<2)|0);
      $266 = Math_fround(HEAPF32[$265>>2]);
      $267 = Math_fround($260 * $264);
      $268 = Math_fround($261 * $266);
      $269 = Math_fround($267 + $268);
      HEAPF32[$263>>2] = $269;
      $270 = (($$01$i333) + 1)|0;
      $exitcond$i334 = ($270|0)==($4|0);
      if ($exitcond$i334) {
       $$8 = $247;
       label = 62;
       break;
      } else {
       $$01$i333 = $270;
      }
     }
    } else {
     $271 = ($4|0)>(0);
     if (!($271)) {
      $$8 = $247;
      label = 62;
      break;
     }
     $$019$i = 0;
     while(1) {
      $272 = (($2) + ($$019$i<<2)|0);
      $273 = Math_fround(HEAPF32[$272>>2]);
      $274 = Math_fround($273 * Math_fround(0.707106769));
      $275 = (($3) + ($$019$i<<2)|0);
      $276 = Math_fround(HEAPF32[$275>>2]);
      $277 = Math_fround($276 * Math_fround(0.707106769));
      $278 = Math_fround($274 + $277);
      HEAPF32[$272>>2] = $278;
      $279 = Math_fround($277 - $274);
      HEAPF32[$275>>2] = $279;
      $280 = (($$019$i) + 1)|0;
      $exitcond$i331 = ($280|0)==($4|0);
      if ($exitcond$i331) {
       $$8 = $247;
       label = 62;
       break;
      } else {
       $$019$i = $280;
      }
     }
    }
   } else {
    $$8 = $247;
    label = 62;
   }
  }
 } while(0);
 L86: do {
  if ((label|0) == 61) {
   $322 = (_ec_tell_frac($19)|0);
   $323 = (($322) - ($61))|0;
   $324 = HEAP32[$5>>2]|0;
   $325 = (($324) - ($323))|0;
   HEAP32[$5>>2] = $325;
   $$3318348 = $$3318$ph;$420 = $323;
  }
  else if ((label|0) == 62) {
   $326 = (_ec_tell_frac($19)|0);
   $327 = (($326) - ($61))|0;
   $328 = HEAP32[$5>>2]|0;
   $329 = (($328) - ($327))|0;
   HEAP32[$5>>2] = $329;
   $switch$split2D = ($$8|0)<(16384);
   L88: do {
    if ($switch$split2D) {
     switch ($$8|0) {
     case 0:  {
      $$3318348 = $$8;$420 = $327;
      break L86;
      break;
     }
     default: {
     }
     }
    } else {
     switch ($$8|0) {
     case 16384:  {
      break;
     }
     default: {
      break L88;
     }
     }
     $334 = 1 << $6;
     $335 = (($334) + -1)|0;
     $336 = $335 << $6;
     $337 = HEAP32[$10>>2]|0;
     $338 = $337 & $336;
     HEAP32[$10>>2] = $338;
     $$0311 = 16384;$$0313 = 0;$$0314 = 32767;$$3318347 = 0;$$8349 = 16384;$418 = $327;
     HEAP32[$1>>2] = $$3318347;
     $413 = ((($1)) + 4|0);
     HEAP32[$413>>2] = $$0313;
     $414 = ((($1)) + 8|0);
     HEAP32[$414>>2] = $$0314;
     $415 = ((($1)) + 12|0);
     HEAP32[$415>>2] = $$0311;
     $416 = ((($1)) + 16|0);
     HEAP32[$416>>2] = $$8349;
     $417 = ((($1)) + 20|0);
     HEAP32[$417>>2] = $418;
     return;
    }
   } while(0);
   $sext352 = $$8 << 16;
   $339 = $sext352 >> 16;
   $340 = $sext352 >> 13;
   $341 = Math_imul($340, $339)|0;
   $342 = (($341) + 32768)|0;
   $343 = $342 >> 16;
   $344 = Math_imul($343, -626)|0;
   $345 = (($344) + 16384)|0;
   $346 = $345 >> 15;
   $347 = (($346) + 8277)|0;
   $348 = Math_imul($347, $343)|0;
   $349 = (($348) + 16384)|0;
   $350 = $349 >>> 15;
   $351 = $350 << 16;
   $sext$i329 = (($351) + -501415936)|0;
   $352 = $sext$i329 >> 16;
   $353 = Math_imul($352, $343)|0;
   $354 = (($353) + 16384)|0;
   $355 = $354 >>> 15;
   $356 = (32768 - ($343))|0;
   $357 = (($356) + ($355))|0;
   $sext353 = $357 << 16;
   $358 = $sext353 >> 16;
   $sext354 = (1073741824 - ($sext352))|0;
   $359 = $sext354 >> 16;
   $360 = $sext354 >> 13;
   $361 = Math_imul($360, $359)|0;
   $362 = (($361) + 32768)|0;
   $363 = $362 >> 16;
   $364 = Math_imul($363, -626)|0;
   $365 = (($364) + 16384)|0;
   $366 = $365 >> 15;
   $367 = (($366) + 8277)|0;
   $368 = Math_imul($367, $363)|0;
   $369 = (($368) + 16384)|0;
   $370 = $369 >>> 15;
   $371 = $370 << 16;
   $sext$i328 = (($371) + -501415936)|0;
   $372 = $sext$i328 >> 16;
   $373 = Math_imul($372, $363)|0;
   $374 = (($373) + 16384)|0;
   $375 = $374 >>> 15;
   $376 = (32768 - ($363))|0;
   $377 = (($376) + ($375))|0;
   $sext355 = $377 << 16;
   $378 = $sext355 >> 16;
   $379 = $4 << 23;
   $sext = (($379) + -8388608)|0;
   $380 = $sext >> 16;
   $381 = (Math_clz32(($358|0))|0);
   $382 = (32 - ($381))|0;
   $383 = (Math_clz32(($378|0))|0);
   $384 = (32 - ($383))|0;
   $385 = (15 - ($382))|0;
   $386 = $358 << $385;
   $387 = (15 - ($384))|0;
   $388 = $378 << $387;
   $389 = (($384) - ($382))|0;
   $390 = $389 << 11;
   $sext$i = $388 << 16;
   $391 = $sext$i >> 16;
   $392 = Math_imul($391, -2597)|0;
   $393 = (($392) + 16384)|0;
   $394 = $393 >> 15;
   $395 = (($394) + 7932)|0;
   $396 = Math_imul($395, $391)|0;
   $397 = (($396) + 16384)|0;
   $398 = $397 >>> 15;
   $sext15$i = $386 << 16;
   $399 = $sext15$i >> 16;
   $400 = Math_imul($399, -2597)|0;
   $401 = (($400) + 16384)|0;
   $402 = $401 >> 15;
   $403 = (($402) + 7932)|0;
   $404 = Math_imul($403, $399)|0;
   $405 = (($404) + 16384)|0;
   $406 = $405 >>> 15;
   $407 = (($390) - ($406))|0;
   $408 = (($407) + ($398))|0;
   $sext320 = $408 << 16;
   $409 = $sext320 >> 16;
   $410 = Math_imul($409, $380)|0;
   $411 = (($410) + 16384)|0;
   $412 = $411 >> 15;
   $$0311 = $412;$$0313 = $358;$$0314 = $378;$$3318347 = 0;$$8349 = $$8;$418 = $327;
   HEAP32[$1>>2] = $$3318347;
   $413 = ((($1)) + 4|0);
   HEAP32[$413>>2] = $$0313;
   $414 = ((($1)) + 8|0);
   HEAP32[$414>>2] = $$0314;
   $415 = ((($1)) + 12|0);
   HEAP32[$415>>2] = $$0311;
   $416 = ((($1)) + 16|0);
   HEAP32[$416>>2] = $$8349;
   $417 = ((($1)) + 20|0);
   HEAP32[$417>>2] = $418;
   return;
  }
 } while(0);
 $330 = 1 << $6;
 $331 = (($330) + -1)|0;
 $332 = HEAP32[$10>>2]|0;
 $333 = $332 & $331;
 HEAP32[$10>>2] = $333;
 $$0311 = -16384;$$0313 = 32767;$$0314 = 0;$$3318347 = $$3318348;$$8349 = 0;$418 = $420;
 HEAP32[$1>>2] = $$3318347;
 $413 = ((($1)) + 4|0);
 HEAP32[$413>>2] = $$0313;
 $414 = ((($1)) + 8|0);
 HEAP32[$414>>2] = $$0314;
 $415 = ((($1)) + 12|0);
 HEAP32[$415>>2] = $$0311;
 $416 = ((($1)) + 16|0);
 HEAP32[$416>>2] = $$8349;
 $417 = ((($1)) + 20|0);
 HEAP32[$417>>2] = $418;
 return;
}
function _deinterleave_hadamard($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$04250$us = 0, $$054$us = 0, $$14345$us = 0, $$146$us = 0, $$alloca_mul = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond61 = 0, $exitcond63 = 0, $exitcond64 = 0, $or$cond = 0;
 var $or$cond67 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $$alloca_mul = $4<<2;
 $5 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $6 = ($3|0)==(0);
 if ($6) {
  $22 = ($2|0)>(0);
  $23 = ($1|0)>(0);
  $or$cond67 = $22 & $23;
  if (!($or$cond67)) {
   $33 = $4 << 2;
   _memcpy(($0|0),($5|0),($33|0))|0;
   STACKTOP = sp;return;
  }
  $$146$us = 0;
  while(1) {
   $24 = Math_imul($$146$us, $1)|0;
   $$14345$us = 0;
   while(1) {
    $25 = Math_imul($$14345$us, $2)|0;
    $26 = (($25) + ($$146$us))|0;
    $27 = (($0) + ($26<<2)|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = (($$14345$us) + ($24))|0;
    $30 = (($5) + ($29<<2)|0);
    HEAP32[$30>>2] = $28;
    $31 = (($$14345$us) + 1)|0;
    $exitcond = ($31|0)==($1|0);
    if ($exitcond) {
     break;
    } else {
     $$14345$us = $31;
    }
   }
   $32 = (($$146$us) + 1)|0;
   $exitcond61 = ($32|0)==($2|0);
   if ($exitcond61) {
    break;
   } else {
    $$146$us = $32;
   }
  }
  $33 = $4 << 2;
  _memcpy(($0|0),($5|0),($33|0))|0;
  STACKTOP = sp;return;
 } else {
  $7 = (22880 + ($2<<2)|0);
  $8 = ((($7)) + -8|0);
  $9 = ($2|0)>(0);
  $10 = ($1|0)>(0);
  $or$cond = $9 & $10;
  if (!($or$cond)) {
   $33 = $4 << 2;
   _memcpy(($0|0),($5|0),($33|0))|0;
   STACKTOP = sp;return;
  }
  $$054$us = 0;
  while(1) {
   $11 = (($8) + ($$054$us<<2)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = Math_imul($12, $1)|0;
   $$04250$us = 0;
   while(1) {
    $14 = Math_imul($$04250$us, $2)|0;
    $15 = (($14) + ($$054$us))|0;
    $16 = (($0) + ($15<<2)|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (($13) + ($$04250$us))|0;
    $19 = (($5) + ($18<<2)|0);
    HEAP32[$19>>2] = $17;
    $20 = (($$04250$us) + 1)|0;
    $exitcond63 = ($20|0)==($1|0);
    if ($exitcond63) {
     break;
    } else {
     $$04250$us = $20;
    }
   }
   $21 = (($$054$us) + 1)|0;
   $exitcond64 = ($21|0)==($2|0);
   if ($exitcond64) {
    break;
   } else {
    $$054$us = $21;
   }
  }
  $33 = $4 << 2;
  _memcpy(($0|0),($5|0),($33|0))|0;
  STACKTOP = sp;return;
 }
}
function _quant_partition($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = Math_fround($7);
 $8 = $8|0;
 var $$$035$1$i = 0, $$$035$2$i = 0, $$$035$3$i = 0, $$$035$4$i = 0, $$$035$5$i = 0, $$$035$i = 0, $$0229$lcssa261 = 0, $$0229253 = 0, $$0230252 = 0, $$0231 = 0, $$0232 = 0, $$0233 = 0, $$0234 = 0, $$0246 = 0, $$034$$035$i = 0, $$034$$1$i = 0, $$034$$2$i = 0, $$034$$3$i = 0, $$034$$4$i = 0, $$034$$5$i = 0;
 var $$034$$i = 0, $$1247 = 0, $$2 = 0, $$5 = 0, $$pre = 0, $$pre259 = 0, $$promoted = 0, $$promoted249 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = Math_fround(0), $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = Math_fround(0), $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = Math_fround(0), $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = Math_fround(0), $235 = 0, $236 = Math_fround(0), $237 = Math_fround(0);
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $60 = Math_fround(0), $61 = Math_fround(0), $62 = Math_fround(0), $63 = Math_fround(0), $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = Math_fround(0), $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = Math_fround(0);
 var $99 = 0, $exitcond = 0, $exitcond257 = 0, $or$cond = 0, $or$cond237 = 0, $or$cond3 = 0, $or$cond5 = 0, $spec$select = 0, $spec$select$i = 0, $spec$select238 = 0, $spec$select240 = 0, $spec$select244 = 0, $storemerge251 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $9 = sp + 28|0;
 $10 = sp + 24|0;
 $11 = sp;
 HEAP32[$9>>2] = $3;
 HEAP32[$10>>2] = $8;
 $12 = HEAP32[$0>>2]|0;
 $13 = ((($0)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($0)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 20|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($0)) + 28|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($14)) + 100|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($14)) + 96|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (($6) + 1)|0;
 $26 = ((($14)) + 8|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = Math_imul($27, $25)|0;
 $29 = (($28) + ($16))|0;
 $30 = (($24) + ($29<<1)|0);
 $31 = HEAP16[$30>>1]|0;
 $32 = $31 << 16 >> 16;
 $33 = (($22) + ($32)|0);
 $34 = ($6|0)==(-1);
 $$pre = HEAP8[$33>>0]|0;
 $$pre259 = $$pre&255;
 if (!($34)) {
  $35 = (($33) + ($$pre259)|0);
  $36 = HEAP8[$35>>0]|0;
  $37 = $36&255;
  $38 = (($37) + 12)|0;
  $39 = ($38|0)<($3|0);
  $40 = ($2|0)>(2);
  $or$cond = $40 & $39;
  if ($or$cond) {
   $41 = $2 >>> 1;
   $42 = (($1) + ($41<<2)|0);
   $43 = (($6) + -1)|0;
   $44 = ($4|0)==(1);
   if ($44) {
    $45 = $8 & 1;
    $46 = $8 << 1;
    $47 = $45 | $46;
    HEAP32[$10>>2] = $47;
   }
   $48 = (($4) + 1)|0;
   $49 = $48 >> 1;
   _compute_theta($0,$11,$1,$42,$41,$9,$49,$4,$43,0,$10);
   $50 = ((($11)) + 4|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($11)) + 8|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = ((($11)) + 12|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($11)) + 16|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = ((($11)) + 20|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = (Math_fround(($51|0)));
   $61 = Math_fround($60 * Math_fround(3.05175781E-5));
   $62 = (Math_fround(($53|0)));
   $63 = Math_fround($62 * Math_fround(3.05175781E-5));
   $64 = ($4|0)<(2);
   $65 = $57 & 16383;
   $66 = ($65|0)==(0);
   $or$cond237 = $64 | $66;
   do {
    if ($or$cond237) {
     $$0231 = $55;
    } else {
     $67 = ($57|0)>(8192);
     if ($67) {
      $68 = (5 - ($6))|0;
      $69 = $55 >> $68;
      $70 = (($55) - ($69))|0;
      $$0231 = $70;
      break;
     } else {
      $71 = $41 << 3;
      $72 = (6 - ($6))|0;
      $73 = $71 >> $72;
      $74 = (($55) + ($73))|0;
      $75 = ($74|0)<(0);
      $spec$select = $75 ? $74 : 0;
      $$0231 = $spec$select;
      break;
     }
    }
   } while(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = (($76) - ($$0231))|0;
   $78 = (($77|0) / 2)&-1;
   $79 = ($76|0)<($78|0);
   $spec$select238 = $79 ? $76 : $78;
   $80 = ($spec$select238|0)>(0);
   $spec$select244 = $80 ? $spec$select238 : 0;
   $81 = (($76) - ($spec$select244))|0;
   $82 = ((($0)) + 32|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = (($83) - ($59))|0;
   HEAP32[$82>>2] = $84;
   $85 = ($5|0)==(0|0);
   $86 = (($5) + ($41<<2)|0);
   $spec$select240 = $85 ? 0 : $86;
   $87 = ($spec$select244|0)<($81|0);
   if ($87) {
    $104 = Math_fround($63 * $7);
    $105 = HEAP32[$10>>2]|0;
    $106 = $105 >> $49;
    $107 = (_quant_partition($0,$42,$41,$81,$49,$spec$select240,$43,$104,$106)|0);
    $108 = $4 >> 1;
    $109 = $107 << $108;
    $110 = HEAP32[$82>>2]|0;
    $111 = (($110) - ($84))|0;
    $112 = (($111) + ($81))|0;
    $113 = ($112|0)>(24);
    $114 = ($57|0)!=(16384);
    $or$cond5 = $114 & $113;
    $115 = (($112) + -24)|0;
    $116 = $or$cond5 ? $115 : 0;
    $$0233 = (($116) + ($spec$select244))|0;
    $117 = Math_fround($61 * $7);
    $118 = (_quant_partition($0,$1,$41,$$0233,$49,$5,$43,$117,$105)|0);
    $119 = $118 | $109;
    $$0234 = $119;
   } else {
    $88 = Math_fround($61 * $7);
    $89 = HEAP32[$10>>2]|0;
    $90 = (_quant_partition($0,$1,$41,$spec$select244,$49,$5,$43,$88,$89)|0);
    $91 = HEAP32[$82>>2]|0;
    $92 = (($91) - ($84))|0;
    $93 = (($92) + ($spec$select244))|0;
    $94 = ($93|0)>(24);
    $95 = ($57|0)!=(0);
    $or$cond3 = $95 & $94;
    $96 = (($93) + -24)|0;
    $97 = $or$cond3 ? $96 : 0;
    $$0232 = (($97) + ($81))|0;
    $98 = Math_fround($63 * $7);
    $99 = $89 >> $49;
    $100 = (_quant_partition($0,$42,$41,$$0232,$49,$spec$select240,$43,$98,$99)|0);
    $101 = $4 >> 1;
    $102 = $100 << $101;
    $103 = $102 | $90;
    $$0234 = $103;
   }
   $$5 = $$0234;
   STACKTOP = sp;return ($$5|0);
  }
 }
 $120 = (($3) + -1)|0;
 $121 = (($$pre259) + 1)|0;
 $122 = $121 >>> 1;
 $123 = (($33) + ($122)|0);
 $124 = HEAP8[$123>>0]|0;
 $125 = $124&255;
 $126 = ($120|0)>($125|0);
 $$$035$i = $126 ? $122 : 0;
 $$034$$i = $126 ? $$pre259 : $122;
 $127 = (($$$035$i) + 1)|0;
 $128 = (($127) + ($$034$$i))|0;
 $129 = $128 >>> 1;
 $130 = (($33) + ($129)|0);
 $131 = HEAP8[$130>>0]|0;
 $132 = $131&255;
 $133 = ($120|0)>($132|0);
 $$$035$1$i = $133 ? $129 : $$$035$i;
 $$034$$1$i = $133 ? $$034$$i : $129;
 $134 = (($$$035$1$i) + 1)|0;
 $135 = (($134) + ($$034$$1$i))|0;
 $136 = $135 >> 1;
 $137 = (($33) + ($136)|0);
 $138 = HEAP8[$137>>0]|0;
 $139 = $138&255;
 $140 = ($120|0)>($139|0);
 $$$035$2$i = $140 ? $136 : $$$035$1$i;
 $$034$$2$i = $140 ? $$034$$1$i : $136;
 $141 = (($$$035$2$i) + 1)|0;
 $142 = (($141) + ($$034$$2$i))|0;
 $143 = $142 >> 1;
 $144 = (($33) + ($143)|0);
 $145 = HEAP8[$144>>0]|0;
 $146 = $145&255;
 $147 = ($120|0)>($146|0);
 $$$035$3$i = $147 ? $143 : $$$035$2$i;
 $$034$$3$i = $147 ? $$034$$2$i : $143;
 $148 = (($$$035$3$i) + 1)|0;
 $149 = (($148) + ($$034$$3$i))|0;
 $150 = $149 >> 1;
 $151 = (($33) + ($150)|0);
 $152 = HEAP8[$151>>0]|0;
 $153 = $152&255;
 $154 = ($120|0)>($153|0);
 $$$035$4$i = $154 ? $150 : $$$035$3$i;
 $$034$$4$i = $154 ? $$034$$3$i : $150;
 $155 = (($$$035$4$i) + 1)|0;
 $156 = (($155) + ($$034$$4$i))|0;
 $157 = $156 >> 1;
 $158 = (($33) + ($157)|0);
 $159 = HEAP8[$158>>0]|0;
 $160 = $159&255;
 $161 = ($120|0)>($160|0);
 $$$035$5$i = $161 ? $157 : $$$035$4$i;
 $$034$$5$i = $161 ? $$034$$4$i : $157;
 $162 = ($$$035$5$i|0)==(0);
 if ($162) {
  $167 = -1;
 } else {
  $163 = (($33) + ($$$035$5$i)|0);
  $164 = HEAP8[$163>>0]|0;
  $165 = $164&255;
  $167 = $165;
 }
 $166 = (($120) - ($167))|0;
 $168 = (($33) + ($$034$$5$i)|0);
 $169 = HEAP8[$168>>0]|0;
 $170 = $169&255;
 $171 = (($170) - ($120))|0;
 $172 = ($166|0)>($171|0);
 $$034$$035$i = $172 ? $$034$$5$i : $$$035$5$i;
 $173 = ($$034$$035$i|0)==(0);
 if ($173) {
  $181 = 0;
 } else {
  $174 = (($33) + ($$034$$035$i)|0);
  $175 = HEAP8[$174>>0]|0;
  $176 = $175&255;
  $177 = (($176) + 1)|0;
  $181 = $177;
 }
 $178 = ((($0)) + 32|0);
 $179 = HEAP32[$178>>2]|0;
 $180 = (($179) - ($181))|0;
 HEAP32[$178>>2] = $180;
 $182 = ($180|0)<(0);
 $183 = ($$034$$035$i|0)>(0);
 $184 = $182 & $183;
 L25: do {
  if ($184) {
   $$0229253 = $$034$$035$i;$$0230252 = $181;$storemerge251 = $180;
   while(1) {
    $185 = (($$0230252) + ($storemerge251))|0;
    HEAP32[$178>>2] = $185;
    $186 = (($$0229253) + -1)|0;
    $187 = ($186|0)==(0);
    if ($187) {
     break;
    }
    $188 = (($33) + ($186)|0);
    $189 = HEAP8[$188>>0]|0;
    $190 = $189&255;
    $191 = (($190) + 1)|0;
    $192 = (($185) - ($191))|0;
    HEAP32[$178>>2] = $192;
    $193 = ($192|0)<(0);
    $194 = ($$0229253|0)>(1);
    $195 = $193 & $194;
    if ($195) {
     $$0229253 = $186;$$0230252 = $191;$storemerge251 = $192;
    } else {
     $$0229$lcssa261 = $186;
     label = 23;
     break L25;
    }
   }
   HEAP32[$178>>2] = $185;
  } else {
   $196 = ($$034$$035$i|0)==(0);
   if (!($196)) {
    $$0229$lcssa261 = $$034$$035$i;
    label = 23;
   }
  }
 } while(0);
 if ((label|0) == 23) {
  $197 = ($$0229$lcssa261|0)<(8);
  $198 = $$0229$lcssa261 & 7;
  $199 = $198 | 8;
  $200 = $$0229$lcssa261 >> 3;
  $201 = (($200) + -1)|0;
  $202 = $199 << $201;
  $spec$select$i = $197 ? $$0229$lcssa261 : $202;
  $203 = ($12|0)==(0);
  if ($203) {
   $209 = (_alg_unquant($1,$2,$spec$select$i,$18,$4,$20,$7)|0);
   $$5 = $209;
   STACKTOP = sp;return ($$5|0);
  } else {
   $204 = ((($0)) + 4|0);
   $205 = HEAP32[$204>>2]|0;
   $206 = ((($0)) + 44|0);
   $207 = HEAP32[$206>>2]|0;
   $208 = (_alg_quant($1,$2,$spec$select$i,$18,$4,$20,$7,$205,$207)|0);
   $$5 = $208;
   STACKTOP = sp;return ($$5|0);
  }
 }
 $210 = ((($0)) + 4|0);
 $211 = HEAP32[$210>>2]|0;
 $212 = ($211|0)==(0);
 if ($212) {
  $$5 = 0;
  STACKTOP = sp;return ($$5|0);
 }
 $213 = 1 << $4;
 $214 = (($213) + -1)|0;
 $215 = $214 & $8;
 HEAP32[$10>>2] = $215;
 $216 = ($215|0)==(0);
 if ($216) {
  $217 = $2 << 2;
  _memset(($1|0),0,($217|0))|0;
  $$5 = 0;
  STACKTOP = sp;return ($$5|0);
 }
 $218 = ($5|0)==(0|0);
 $219 = ($2|0)>(0);
 if ($218) {
  if ($219) {
   $220 = ((($0)) + 40|0);
   $$promoted = HEAP32[$220>>2]|0;
   $$0246 = 0;$222 = $$promoted;
   while(1) {
    $221 = Math_imul($222, 1664525)|0;
    $223 = (($221) + 1013904223)|0;
    $224 = $223 >> 20;
    $225 = (Math_fround(($224|0)));
    $226 = (($1) + ($$0246<<2)|0);
    HEAPF32[$226>>2] = $225;
    $227 = (($$0246) + 1)|0;
    $exitcond = ($227|0)==($2|0);
    if ($exitcond) {
     break;
    } else {
     $$0246 = $227;$222 = $223;
    }
   }
   HEAP32[$220>>2] = $223;
   $$2 = $214;
  } else {
   $$2 = $214;
  }
 } else {
  if ($219) {
   $228 = ((($0)) + 40|0);
   $$promoted249 = HEAP32[$228>>2]|0;
   $$1247 = 0;$230 = $$promoted249;
   while(1) {
    $229 = Math_imul($230, 1664525)|0;
    $231 = (($229) + 1013904223)|0;
    $232 = $231 & 32768;
    $233 = ($232|0)==(0);
    $234 = $233 ? Math_fround(-0.00390625) : Math_fround(0.00390625);
    $235 = (($5) + ($$1247<<2)|0);
    $236 = Math_fround(HEAPF32[$235>>2]);
    $237 = Math_fround($236 + $234);
    $238 = (($1) + ($$1247<<2)|0);
    HEAPF32[$238>>2] = $237;
    $239 = (($$1247) + 1)|0;
    $exitcond257 = ($239|0)==($2|0);
    if ($exitcond257) {
     break;
    } else {
     $$1247 = $239;$230 = $231;
    }
   }
   HEAP32[$228>>2] = $231;
   $$2 = $215;
  } else {
   $$2 = $215;
  }
 }
 $240 = ((($0)) + 44|0);
 $241 = HEAP32[$240>>2]|0;
 _renormalise_vector($1,$2,$7,$241);
 $$5 = $$2;
 STACKTOP = sp;return ($$5|0);
}
function _interleave_hadamard($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$04250$us = 0, $$054$us = 0, $$14345$us = 0, $$146$us = 0, $$alloca_mul = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond61 = 0, $exitcond63 = 0, $exitcond64 = 0, $or$cond = 0;
 var $or$cond67 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $$alloca_mul = $4<<2;
 $5 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $6 = ($3|0)==(0);
 if ($6) {
  $22 = ($2|0)>(0);
  $23 = ($1|0)>(0);
  $or$cond67 = $22 & $23;
  if (!($or$cond67)) {
   $33 = $4 << 2;
   _memcpy(($0|0),($5|0),($33|0))|0;
   STACKTOP = sp;return;
  }
  $$146$us = 0;
  while(1) {
   $24 = Math_imul($$146$us, $1)|0;
   $$14345$us = 0;
   while(1) {
    $25 = (($$14345$us) + ($24))|0;
    $26 = (($0) + ($25<<2)|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = Math_imul($$14345$us, $2)|0;
    $29 = (($28) + ($$146$us))|0;
    $30 = (($5) + ($29<<2)|0);
    HEAP32[$30>>2] = $27;
    $31 = (($$14345$us) + 1)|0;
    $exitcond = ($31|0)==($1|0);
    if ($exitcond) {
     break;
    } else {
     $$14345$us = $31;
    }
   }
   $32 = (($$146$us) + 1)|0;
   $exitcond61 = ($32|0)==($2|0);
   if ($exitcond61) {
    break;
   } else {
    $$146$us = $32;
   }
  }
  $33 = $4 << 2;
  _memcpy(($0|0),($5|0),($33|0))|0;
  STACKTOP = sp;return;
 } else {
  $7 = (22880 + ($2<<2)|0);
  $8 = ((($7)) + -8|0);
  $9 = ($2|0)>(0);
  $10 = ($1|0)>(0);
  $or$cond = $9 & $10;
  if (!($or$cond)) {
   $33 = $4 << 2;
   _memcpy(($0|0),($5|0),($33|0))|0;
   STACKTOP = sp;return;
  }
  $$054$us = 0;
  while(1) {
   $11 = (($8) + ($$054$us<<2)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = Math_imul($12, $1)|0;
   $$04250$us = 0;
   while(1) {
    $14 = (($13) + ($$04250$us))|0;
    $15 = (($0) + ($14<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = Math_imul($$04250$us, $2)|0;
    $18 = (($17) + ($$054$us))|0;
    $19 = (($5) + ($18<<2)|0);
    HEAP32[$19>>2] = $16;
    $20 = (($$04250$us) + 1)|0;
    $exitcond63 = ($20|0)==($1|0);
    if ($exitcond63) {
     break;
    } else {
     $$04250$us = $20;
    }
   }
   $21 = (($$054$us) + 1)|0;
   $exitcond64 = ($21|0)==($2|0);
   if ($exitcond64) {
    break;
   } else {
    $$054$us = $21;
   }
  }
  $33 = $4 << 2;
  _memcpy(($0|0),($5|0),($33|0))|0;
  STACKTOP = sp;return;
 }
}
function _encode_pulses($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$0$i = 0, $$$i = 0, $$0$i = 0, $$043$i = 0, $$044$i = 0, $$1$i = 0, $$lobit$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ispos$i = 0, $ispos45$i = 0, $neg$i = 0, $neg46$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (($1) + -1)|0;
 $5 = (($0) + ($4<<2)|0);
 $6 = HEAP32[$5>>2]|0;
 $$lobit$i = $6 >>> 31;
 $ispos$i = ($6|0)>(-1);
 $neg$i = (0 - ($6))|0;
 $7 = $ispos$i ? $6 : $neg$i;
 $$0$i = $7;$$043$i = $4;$$044$i = $$lobit$i;
 while(1) {
  $8 = (($$043$i) + -1)|0;
  $9 = (($1) - ($8))|0;
  $10 = ($9|0)<($$0$i|0);
  $$$0$i = $10 ? $9 : $$0$i;
  $11 = (23008 + ($$$0$i<<2)|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ($9|0)>($$0$i|0);
  $14 = $13 ? $9 : $$0$i;
  $15 = (($12) + ($14<<2)|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = (($16) + ($$044$i))|0;
  $18 = (($0) + ($8<<2)|0);
  $19 = HEAP32[$18>>2]|0;
  $ispos45$i = ($19|0)>(-1);
  $neg46$i = (0 - ($19))|0;
  $20 = $ispos45$i ? $19 : $neg46$i;
  $21 = (($20) + ($$0$i))|0;
  $22 = ($19|0)<(0);
  $23 = (($21) + 1)|0;
  if ($22) {
   $24 = ($9|0)>($21|0);
   $$$i = $24 ? $23 : $9;
   $25 = (23008 + ($$$i<<2)|0);
   $26 = ($9|0)>($23|0);
   $27 = $26 ? $9 : $23;
   $28 = HEAP32[$25>>2]|0;
   $29 = (($28) + ($27<<2)|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($30) + ($17))|0;
   $$1$i = $31;
  } else {
   $$1$i = $17;
  }
  $32 = ($$043$i|0)>(1);
  if ($32) {
   $$0$i = $21;$$043$i = $8;$$044$i = $$1$i;
  } else {
   break;
  }
 }
 $33 = ($1|0)<($2|0);
 $34 = $33 ? $1 : $2;
 $35 = (23008 + ($34<<2)|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ($1|0)>($2|0);
 $38 = $37 ? $1 : $2;
 $39 = (($36) + ($38<<2)|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (($2) + 1)|0;
 $42 = ($41|0)>($1|0);
 $43 = $42 ? $1 : $41;
 $44 = (23008 + ($43<<2)|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ($41|0)<($1|0);
 $47 = $46 ? $1 : $41;
 $48 = (($45) + ($47<<2)|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = (($49) + ($40))|0;
 _ec_enc_uint($3,$$1$i,$50);
 return;
}
function _decode_pulses($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0114$lcssa$i = Math_fround(0), $$0114135$i = Math_fround(0), $$0115$i = 0, $$0115$in$i = 0, $$0117$lcssa$i = 0, $$0117134$i = 0, $$0119$lcssa$i = 0, $$0119133$i = 0, $$0121$lcssa$i = 0, $$0121132$i = 0, $$0136$i = 0, $$1$i = Math_fround(0), $$1116$i = 0, $$1118$i = 0, $$1120$i = 0, $$1122$i = 0, $$2123$i = 0, $$3$i = 0, $$4$i = 0, $$5$i = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = Math_fround(0), $106 = Math_fround(0), $107 = Math_fround(0), $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = Math_fround(0), $114 = Math_fround(0), $115 = Math_fround(0), $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = Math_fround(0);
 var $52 = Math_fround(0), $53 = Math_fround(0), $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = Math_fround(0), $83 = Math_fround(0), $84 = Math_fround(0), $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i = 0, $sext$i = 0, $sext124$i = 0, $sext125$i = 0, $sext126$i = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($1|0)<($2|0);
 $5 = $4 ? $1 : $2;
 $6 = (23008 + ($5<<2)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($1|0)>($2|0);
 $9 = $8 ? $1 : $2;
 $10 = (($7) + ($9<<2)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($2) + 1)|0;
 $13 = ($12|0)>($1|0);
 $14 = $13 ? $1 : $12;
 $15 = (23008 + ($14<<2)|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($12|0)<($1|0);
 $18 = $17 ? $1 : $12;
 $19 = (($16) + ($18<<2)|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($20) + ($11))|0;
 $22 = (_ec_dec_uint($3,$21)|0);
 $23 = ($1|0)>(2);
 if ($23) {
  $$0114135$i = Math_fround(0.0);$$0117134$i = $0;$$0119133$i = $22;$$0121132$i = $2;$$0136$i = $1;
  while(1) {
   $24 = ($$0121132$i|0)<($$0136$i|0);
   do {
    if ($24) {
     $54 = (23008 + ($$0121132$i<<2)|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = (($55) + ($$0136$i<<2)|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = (($$0121132$i) + 1)|0;
     $59 = (23008 + ($58<<2)|0);
     $60 = HEAP32[$59>>2]|0;
     $61 = (($60) + ($$0136$i<<2)|0);
     $62 = HEAP32[$61>>2]|0;
     $63 = ($$0119133$i>>>0)>=($57>>>0);
     $64 = ($$0119133$i>>>0)<($62>>>0);
     $or$cond$i = $63 & $64;
     if ($or$cond$i) {
      $65 = (($$0119133$i) - ($57))|0;
      HEAP32[$$0117134$i>>2] = 0;
      $$1$i = $$0114135$i;$$1120$i = $65;$$5$i = $$0121132$i;
      break;
     }
     $66 = ($$0119133$i>>>0)>=($62>>>0);
     $67 = $66 << 31 >> 31;
     $68 = $62 & $67;
     $69 = (($$0119133$i) - ($68))|0;
     $$4$i = $$0121132$i;
     while(1) {
      $70 = (($$4$i) + -1)|0;
      $71 = (23008 + ($70<<2)|0);
      $72 = HEAP32[$71>>2]|0;
      $73 = (($72) + ($$0136$i<<2)|0);
      $74 = HEAP32[$73>>2]|0;
      $75 = ($69>>>0)<($74>>>0);
      if ($75) {
       $$4$i = $70;
      } else {
       break;
      }
     }
     $76 = (($69) - ($74))|0;
     $77 = (($58) + ($67))|0;
     $78 = (($77) - ($$4$i))|0;
     $79 = $78 ^ $67;
     $80 = $79&65535;
     $sext125$i = $79 << 16;
     $81 = $sext125$i >> 16;
     HEAP32[$$0117134$i>>2] = $81;
     $82 = (Math_fround(($80<<16>>16)));
     $83 = Math_fround($82 * $82);
     $84 = Math_fround($$0114135$i + $83);
     $$1$i = $84;$$1120$i = $76;$$5$i = $70;
    } else {
     $25 = (23008 + ($$0136$i<<2)|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = (($$0121132$i) + 1)|0;
     $28 = (($26) + ($27<<2)|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = ($$0119133$i>>>0)>=($29>>>0);
     $31 = $30 << 31 >> 31;
     $32 = $29 & $31;
     $33 = (($$0119133$i) - ($32))|0;
     $34 = (($26) + ($$0136$i<<2)|0);
     $35 = HEAP32[$34>>2]|0;
     $36 = ($35>>>0)>($33>>>0);
     if ($36) {
      $$1122$i = $$0136$i;
      while(1) {
       $37 = (($$1122$i) + -1)|0;
       $38 = (23008 + ($37<<2)|0);
       $39 = HEAP32[$38>>2]|0;
       $40 = (($39) + ($$0136$i<<2)|0);
       $41 = HEAP32[$40>>2]|0;
       $42 = ($41>>>0)>($33>>>0);
       if ($42) {
        $$1122$i = $37;
       } else {
        $$1116$i = $41;$$3$i = $37;
        break;
       }
      }
     } else {
      $$2123$i = $$0121132$i;
      while(1) {
       $$0115$in$i = (($26) + ($$2123$i<<2)|0);
       $$0115$i = HEAP32[$$0115$in$i>>2]|0;
       $43 = ($$0115$i>>>0)>($33>>>0);
       $44 = (($$2123$i) + -1)|0;
       if ($43) {
        $$2123$i = $44;
       } else {
        $$1116$i = $$0115$i;$$3$i = $$2123$i;
        break;
       }
      }
     }
     $45 = (($33) - ($$1116$i))|0;
     $46 = (($$0121132$i) + ($31))|0;
     $47 = (($46) - ($$3$i))|0;
     $48 = $47 ^ $31;
     $49 = $48&65535;
     $sext126$i = $48 << 16;
     $50 = $sext126$i >> 16;
     HEAP32[$$0117134$i>>2] = $50;
     $51 = (Math_fround(($49<<16>>16)));
     $52 = Math_fround($51 * $51);
     $53 = Math_fround($$0114135$i + $52);
     $$1$i = $53;$$1120$i = $45;$$5$i = $$3$i;
    }
   } while(0);
   $$1118$i = ((($$0117134$i)) + 4|0);
   $85 = (($$0136$i) + -1)|0;
   $86 = ($$0136$i|0)>(3);
   if ($86) {
    $$0114135$i = $$1$i;$$0117134$i = $$1118$i;$$0119133$i = $$1120$i;$$0121132$i = $$5$i;$$0136$i = $85;
   } else {
    $$0114$lcssa$i = $$1$i;$$0117$lcssa$i = $$1118$i;$$0119$lcssa$i = $$1120$i;$$0121$lcssa$i = $$5$i;
    break;
   }
  }
 } else {
  $$0114$lcssa$i = Math_fround(0.0);$$0117$lcssa$i = $0;$$0119$lcssa$i = $22;$$0121$lcssa$i = $2;
 }
 $87 = $$0121$lcssa$i << 1;
 $88 = $87 | 1;
 $89 = ($$0119$lcssa$i>>>0)>=($88>>>0);
 $90 = $89 << 31 >> 31;
 $91 = $88 & $90;
 $92 = (($$0119$lcssa$i) - ($91))|0;
 $93 = (($92) + 1)|0;
 $94 = $93 >>> 1;
 $95 = ($94|0)==(0);
 $96 = $93 & -2;
 $97 = (($96) + -1)|0;
 $98 = $95 ? 0 : $97;
 $spec$select$i = (($92) - ($98))|0;
 $99 = (($$0121$lcssa$i) + ($90))|0;
 $100 = (($99) - ($94))|0;
 $101 = $100 ^ $90;
 $102 = $101&65535;
 $sext$i = $101 << 16;
 $103 = $sext$i >> 16;
 $104 = ((($$0117$lcssa$i)) + 4|0);
 HEAP32[$$0117$lcssa$i>>2] = $103;
 $105 = (Math_fround(($102<<16>>16)));
 $106 = Math_fround($105 * $105);
 $107 = Math_fround($$0114$lcssa$i + $106);
 $108 = (0 - ($spec$select$i))|0;
 $109 = (($94) - ($spec$select$i))|0;
 $110 = $109 ^ $108;
 $111 = $110&65535;
 $sext124$i = $110 << 16;
 $112 = $sext124$i >> 16;
 HEAP32[$104>>2] = $112;
 $113 = (Math_fround(($111<<16>>16)));
 $114 = Math_fround($113 * $113);
 $115 = Math_fround($107 + $114);
 return (Math_fround($115));
}
function _ec_laplace_encode($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$0$lcssa = 0, $$055$lcssa = 0, $$05563 = 0, $$056$lcssa = 0, $$05662 = 0, $$059 = 0, $$064 = 0, $$2 = 0, $$258 = 0, $$lcssa = 0, $$neg = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, $not$60 = 0, $spec$select = 0, $spec$select61 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$1>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  $$2 = $2;$$258 = 0;
  $40 = (($$2) + ($$258))|0;
  _ec_encode_bin($0,$$258,$40,15);
  return;
 }
 $6 = $4 >> 31;
 $7 = (($6) + ($4))|0;
 $8 = $7 ^ $6;
 $9 = (32736 - ($2))|0;
 $10 = (16384 - ($3))|0;
 $11 = Math_imul($10, $9)|0;
 $$059 = $11 >>> 15;
 $12 = ($$059|0)==(0);
 $13 = ($8|0)>(1);
 $not$60 = $12 ^ 1;
 $spec$select61 = $13 & $not$60;
 if ($spec$select61) {
  $$05563 = 1;$$05662 = $2;$$064 = $$059;
  while(1) {
   $14 = $$064 << 1;
   $15 = (($$05662) + 2)|0;
   $16 = (($15) + ($14))|0;
   $17 = Math_imul($14, $3)|0;
   $18 = (($$05563) + 1)|0;
   $$0 = $17 >>> 15;
   $19 = ($$0|0)==(0);
   $20 = ($8|0)>($18|0);
   $not$ = $19 ^ 1;
   $spec$select = $20 & $not$;
   if ($spec$select) {
    $$05563 = $18;$$05662 = $16;$$064 = $$0;
   } else {
    $$0$lcssa = $$0;$$055$lcssa = $18;$$056$lcssa = $16;$$lcssa = $19;
    break;
   }
  }
 } else {
  $$0$lcssa = $$059;$$055$lcssa = 1;$$056$lcssa = $2;$$lcssa = $12;
 }
 if ($$lcssa) {
  $$neg = $4 >>> 31;
  $21 = $$neg | 32768;
  $22 = (($21) - ($$056$lcssa))|0;
  $23 = $22 >> 1;
  $24 = (($8) - ($$055$lcssa))|0;
  $25 = (($23) + -1)|0;
  $26 = ($24|0)<($25|0);
  $$ = $26 ? $24 : $25;
  $27 = $$ << 1;
  $28 = $27 | 1;
  $29 = (($$056$lcssa) + ($6))|0;
  $30 = (($29) + ($28))|0;
  $31 = ($30|0)!=(32768);
  $32 = $31&1;
  $33 = (($$055$lcssa) + ($6))|0;
  $34 = (($33) + ($$))|0;
  $35 = $34 ^ $6;
  HEAP32[$1>>2] = $35;
  $$2 = $32;$$258 = $30;
  $40 = (($$2) + ($$258))|0;
  _ec_encode_bin($0,$$258,$40,15);
  return;
 } else {
  $36 = (($$0$lcssa) + 1)|0;
  $37 = $6 ^ -1;
  $38 = $36 & $37;
  $39 = (($38) + ($$056$lcssa))|0;
  $$2 = $36;$$258 = $39;
  $40 = (($$2) + ($$258))|0;
  _ec_encode_bin($0,$$258,$40,15);
  return;
 }
}
function _ec_laplace_decode($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$in = 0, $$0$in54 = 0, $$043$lcssa = 0, $$04357 = 0, $$045$lcssa = 0, $$04556 = 0, $$051 = 0, $$058 = 0, $$058$in = 0, $$1 = 0, $$144 = 0, $$146 = 0, $$2 = 0, $$247 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select48 = 0, $spec$select49 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_ec_decode_bin($0,15)|0);
 $4 = ($3>>>0)<($1>>>0);
 if ($4) {
  $$1 = $1;$$2 = 0;$$247 = 0;
  $24 = (($$1) + ($$247))|0;
  $25 = ($24>>>0)<(32768);
  $spec$select = $25 ? $24 : 32768;
  _ec_dec_update($0,$$247,$spec$select,32768);
  return ($$2|0);
 }
 $5 = (32736 - ($1))|0;
 $6 = (16384 - ($2))|0;
 $7 = Math_imul($6, $5)|0;
 $$0$in54 = $7 >>> 15;
 $8 = ($$0$in54|0)==(0);
 L4: do {
  if ($8) {
   $$043$lcssa = 1;$$045$lcssa = $1;
   label = 6;
  } else {
   $$04357 = 1;$$04556 = $1;$$058$in = $$0$in54;
   while(1) {
    $$058 = (($$058$in) + 1)|0;
    $9 = $$058 << 1;
    $10 = (($9) + ($$04556))|0;
    $11 = ($3>>>0)<($10>>>0);
    if ($11) {
     $$051 = $$058;$$144 = $$04357;$$146 = $$04556;
     break L4;
    }
    $12 = (($9) + -2)|0;
    $13 = Math_imul($12, $2)|0;
    $14 = (($$04357) + 1)|0;
    $$0$in = $13 >>> 15;
    $15 = ($$0$in|0)==(0);
    if ($15) {
     $$043$lcssa = $14;$$045$lcssa = $10;
     label = 6;
     break;
    } else {
     $$04357 = $14;$$04556 = $10;$$058$in = $$0$in;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $16 = (($3) - ($$045$lcssa))|0;
  $17 = $16 >>> 1;
  $18 = (($17) + ($$043$lcssa))|0;
  $19 = $16 & -2;
  $20 = (($19) + ($$045$lcssa))|0;
  $$051 = 1;$$144 = $18;$$146 = $20;
 }
 $21 = (($$146) + ($$051))|0;
 $22 = ($3>>>0)<($21>>>0);
 $23 = (0 - ($$144))|0;
 $spec$select48 = $22 ? $$146 : $21;
 $spec$select49 = $22 ? $23 : $$144;
 $$1 = $$051;$$2 = $spec$select49;$$247 = $spec$select48;
 $24 = (($$1) + ($$247))|0;
 $25 = ($24>>>0)<(32768);
 $spec$select = $25 ? $24 : 32768;
 _ec_dec_update($0,$$247,$spec$select,32768);
 return ($$2|0);
}
function _isqrt32($0) {
 $0 = $0|0;
 var $$0 = 0, $$022 = 0, $$023 = 0, $$025 = 0, $$1 = 0, $$124 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = (Math_clz32(($0|0))|0);
 $2 = (31 - ($1))|0;
 $3 = $2 >> 1;
 $4 = 1 << $3;
 $$0 = $0;$$022 = $3;$$023 = 0;$$025 = $4;
 while(1) {
  $5 = $$023 << 1;
  $6 = (($5) + ($$025))|0;
  $7 = $6 << $$022;
  $8 = ($$0>>>0)<($7>>>0);
  $9 = $8 ? 0 : $$025;
  $$124 = (($9) + ($$023))|0;
  $10 = $8 ? 0 : $7;
  $$1 = (($$0) - ($10))|0;
  $11 = $$025 >>> 1;
  $12 = (($$022) + -1)|0;
  $13 = ($$022|0)>(0);
  if ($13) {
   $$0 = $$1;$$022 = $12;$$023 = $$124;$$025 = $11;
  } else {
   break;
  }
 }
 return ($$124|0);
}
function _silk_encode_signs($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$03033 = 0, $$034 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $sext = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp;
 $7 = ((($6)) + 1|0);
 HEAP8[$7>>0] = 0;
 $8 = $3 << 1;
 $9 = (($8) + ($4))|0;
 $sext = $9 << 16;
 $10 = $sext >> 16;
 $11 = ($10*7)|0;
 $12 = (22400 + ($11)|0);
 $13 = (($2) + 8)|0;
 $14 = $13 >> 4;
 $15 = ($2|0)>(7);
 if (!($15)) {
  STACKTOP = sp;return;
 }
 $$03033 = 0;$$034 = $1;
 while(1) {
  $16 = (($5) + ($$03033<<2)|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)>(0);
  if ($18) {
   $19 = $17 & 31;
   $20 = ($19>>>0)<(6);
   $21 = $20 ? $19 : 6;
   $22 = (($12) + ($21)|0);
   $23 = HEAP8[$22>>0]|0;
   HEAP8[$6>>0] = $23;
   $24 = HEAP8[$$034>>0]|0;
   $25 = ($24<<24>>24)==(0);
   if (!($25)) {
    $26 = $24 << 24 >> 24;
    $27 = $26 >> 15;
    $28 = (($27) + 1)|0;
    _ec_enc_icdf($0,$28,$6,8);
   }
   $29 = ((($$034)) + 1|0);
   $30 = HEAP8[$29>>0]|0;
   $31 = ($30<<24>>24)==(0);
   if (!($31)) {
    $35 = $30 << 24 >> 24;
    $36 = $35 >> 15;
    $37 = (($36) + 1)|0;
    _ec_enc_icdf($0,$37,$6,8);
   }
   $38 = ((($$034)) + 2|0);
   $39 = HEAP8[$38>>0]|0;
   $40 = ($39<<24>>24)==(0);
   if (!($40)) {
    $41 = $39 << 24 >> 24;
    $42 = $41 >> 15;
    $43 = (($42) + 1)|0;
    _ec_enc_icdf($0,$43,$6,8);
   }
   $44 = ((($$034)) + 3|0);
   $45 = HEAP8[$44>>0]|0;
   $46 = ($45<<24>>24)==(0);
   if (!($46)) {
    $47 = $45 << 24 >> 24;
    $48 = $47 >> 15;
    $49 = (($48) + 1)|0;
    _ec_enc_icdf($0,$49,$6,8);
   }
   $50 = ((($$034)) + 4|0);
   $51 = HEAP8[$50>>0]|0;
   $52 = ($51<<24>>24)==(0);
   if (!($52)) {
    $53 = $51 << 24 >> 24;
    $54 = $53 >> 15;
    $55 = (($54) + 1)|0;
    _ec_enc_icdf($0,$55,$6,8);
   }
   $56 = ((($$034)) + 5|0);
   $57 = HEAP8[$56>>0]|0;
   $58 = ($57<<24>>24)==(0);
   if (!($58)) {
    $59 = $57 << 24 >> 24;
    $60 = $59 >> 15;
    $61 = (($60) + 1)|0;
    _ec_enc_icdf($0,$61,$6,8);
   }
   $62 = ((($$034)) + 6|0);
   $63 = HEAP8[$62>>0]|0;
   $64 = ($63<<24>>24)==(0);
   if (!($64)) {
    $65 = $63 << 24 >> 24;
    $66 = $65 >> 15;
    $67 = (($66) + 1)|0;
    _ec_enc_icdf($0,$67,$6,8);
   }
   $68 = ((($$034)) + 7|0);
   $69 = HEAP8[$68>>0]|0;
   $70 = ($69<<24>>24)==(0);
   if (!($70)) {
    $71 = $69 << 24 >> 24;
    $72 = $71 >> 15;
    $73 = (($72) + 1)|0;
    _ec_enc_icdf($0,$73,$6,8);
   }
   $74 = ((($$034)) + 8|0);
   $75 = HEAP8[$74>>0]|0;
   $76 = ($75<<24>>24)==(0);
   if (!($76)) {
    $77 = $75 << 24 >> 24;
    $78 = $77 >> 15;
    $79 = (($78) + 1)|0;
    _ec_enc_icdf($0,$79,$6,8);
   }
   $80 = ((($$034)) + 9|0);
   $81 = HEAP8[$80>>0]|0;
   $82 = ($81<<24>>24)==(0);
   if (!($82)) {
    $83 = $81 << 24 >> 24;
    $84 = $83 >> 15;
    $85 = (($84) + 1)|0;
    _ec_enc_icdf($0,$85,$6,8);
   }
   $86 = ((($$034)) + 10|0);
   $87 = HEAP8[$86>>0]|0;
   $88 = ($87<<24>>24)==(0);
   if (!($88)) {
    $89 = $87 << 24 >> 24;
    $90 = $89 >> 15;
    $91 = (($90) + 1)|0;
    _ec_enc_icdf($0,$91,$6,8);
   }
   $92 = ((($$034)) + 11|0);
   $93 = HEAP8[$92>>0]|0;
   $94 = ($93<<24>>24)==(0);
   if (!($94)) {
    $95 = $93 << 24 >> 24;
    $96 = $95 >> 15;
    $97 = (($96) + 1)|0;
    _ec_enc_icdf($0,$97,$6,8);
   }
   $98 = ((($$034)) + 12|0);
   $99 = HEAP8[$98>>0]|0;
   $100 = ($99<<24>>24)==(0);
   if (!($100)) {
    $101 = $99 << 24 >> 24;
    $102 = $101 >> 15;
    $103 = (($102) + 1)|0;
    _ec_enc_icdf($0,$103,$6,8);
   }
   $104 = ((($$034)) + 13|0);
   $105 = HEAP8[$104>>0]|0;
   $106 = ($105<<24>>24)==(0);
   if (!($106)) {
    $107 = $105 << 24 >> 24;
    $108 = $107 >> 15;
    $109 = (($108) + 1)|0;
    _ec_enc_icdf($0,$109,$6,8);
   }
   $110 = ((($$034)) + 14|0);
   $111 = HEAP8[$110>>0]|0;
   $112 = ($111<<24>>24)==(0);
   if (!($112)) {
    $113 = $111 << 24 >> 24;
    $114 = $113 >> 15;
    $115 = (($114) + 1)|0;
    _ec_enc_icdf($0,$115,$6,8);
   }
   $116 = ((($$034)) + 15|0);
   $117 = HEAP8[$116>>0]|0;
   $118 = ($117<<24>>24)==(0);
   if (!($118)) {
    $119 = $117 << 24 >> 24;
    $120 = $119 >> 15;
    $121 = (($120) + 1)|0;
    _ec_enc_icdf($0,$121,$6,8);
   }
  }
  $32 = ((($$034)) + 16|0);
  $33 = (($$03033) + 1)|0;
  $34 = ($33|0)<($14|0);
  if ($34) {
   $$03033 = $33;$$034 = $32;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _silk_decode_signs($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$03033 = 0, $$034 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp;
 $7 = ((($6)) + 1|0);
 HEAP8[$7>>0] = 0;
 $8 = $3 << 1;
 $9 = (($8) + ($4))|0;
 $sext = $9 << 16;
 $10 = $sext >> 16;
 $11 = ($10*7)|0;
 $12 = (22400 + ($11)|0);
 $13 = (($2) + 8)|0;
 $14 = $13 >> 4;
 $15 = ($2|0)>(7);
 if (!($15)) {
  STACKTOP = sp;return;
 }
 $$03033 = 0;$$034 = $1;
 while(1) {
  $16 = (($5) + ($$03033<<2)|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)>(0);
  if ($18) {
   $19 = $17 & 31;
   $20 = ($19>>>0)<(6);
   $21 = $20 ? $19 : 6;
   $22 = (($12) + ($21)|0);
   $23 = HEAP8[$22>>0]|0;
   HEAP8[$6>>0] = $23;
   $24 = HEAP16[$$034>>1]|0;
   $25 = ($24<<16>>16)>(0);
   if ($25) {
    $26 = (_ec_dec_icdf($0,$6,8)|0);
    $27 = $26 << 1;
    $28 = (($27) + -1)|0;
    $29 = HEAP16[$$034>>1]|0;
    $30 = $29 << 16 >> 16;
    $31 = Math_imul($28, $30)|0;
    $32 = $31&65535;
    HEAP16[$$034>>1] = $32;
   }
   $33 = ((($$034)) + 2|0);
   $34 = HEAP16[$33>>1]|0;
   $35 = ($34<<16>>16)>(0);
   if ($35) {
    $39 = (_ec_dec_icdf($0,$6,8)|0);
    $40 = $39 << 1;
    $41 = (($40) + -1)|0;
    $42 = HEAP16[$33>>1]|0;
    $43 = $42 << 16 >> 16;
    $44 = Math_imul($41, $43)|0;
    $45 = $44&65535;
    HEAP16[$33>>1] = $45;
   }
   $46 = ((($$034)) + 4|0);
   $47 = HEAP16[$46>>1]|0;
   $48 = ($47<<16>>16)>(0);
   if ($48) {
    $49 = (_ec_dec_icdf($0,$6,8)|0);
    $50 = $49 << 1;
    $51 = (($50) + -1)|0;
    $52 = HEAP16[$46>>1]|0;
    $53 = $52 << 16 >> 16;
    $54 = Math_imul($51, $53)|0;
    $55 = $54&65535;
    HEAP16[$46>>1] = $55;
   }
   $56 = ((($$034)) + 6|0);
   $57 = HEAP16[$56>>1]|0;
   $58 = ($57<<16>>16)>(0);
   if ($58) {
    $59 = (_ec_dec_icdf($0,$6,8)|0);
    $60 = $59 << 1;
    $61 = (($60) + -1)|0;
    $62 = HEAP16[$56>>1]|0;
    $63 = $62 << 16 >> 16;
    $64 = Math_imul($61, $63)|0;
    $65 = $64&65535;
    HEAP16[$56>>1] = $65;
   }
   $66 = ((($$034)) + 8|0);
   $67 = HEAP16[$66>>1]|0;
   $68 = ($67<<16>>16)>(0);
   if ($68) {
    $69 = (_ec_dec_icdf($0,$6,8)|0);
    $70 = $69 << 1;
    $71 = (($70) + -1)|0;
    $72 = HEAP16[$66>>1]|0;
    $73 = $72 << 16 >> 16;
    $74 = Math_imul($71, $73)|0;
    $75 = $74&65535;
    HEAP16[$66>>1] = $75;
   }
   $76 = ((($$034)) + 10|0);
   $77 = HEAP16[$76>>1]|0;
   $78 = ($77<<16>>16)>(0);
   if ($78) {
    $79 = (_ec_dec_icdf($0,$6,8)|0);
    $80 = $79 << 1;
    $81 = (($80) + -1)|0;
    $82 = HEAP16[$76>>1]|0;
    $83 = $82 << 16 >> 16;
    $84 = Math_imul($81, $83)|0;
    $85 = $84&65535;
    HEAP16[$76>>1] = $85;
   }
   $86 = ((($$034)) + 12|0);
   $87 = HEAP16[$86>>1]|0;
   $88 = ($87<<16>>16)>(0);
   if ($88) {
    $89 = (_ec_dec_icdf($0,$6,8)|0);
    $90 = $89 << 1;
    $91 = (($90) + -1)|0;
    $92 = HEAP16[$86>>1]|0;
    $93 = $92 << 16 >> 16;
    $94 = Math_imul($91, $93)|0;
    $95 = $94&65535;
    HEAP16[$86>>1] = $95;
   }
   $96 = ((($$034)) + 14|0);
   $97 = HEAP16[$96>>1]|0;
   $98 = ($97<<16>>16)>(0);
   if ($98) {
    $99 = (_ec_dec_icdf($0,$6,8)|0);
    $100 = $99 << 1;
    $101 = (($100) + -1)|0;
    $102 = HEAP16[$96>>1]|0;
    $103 = $102 << 16 >> 16;
    $104 = Math_imul($101, $103)|0;
    $105 = $104&65535;
    HEAP16[$96>>1] = $105;
   }
   $106 = ((($$034)) + 16|0);
   $107 = HEAP16[$106>>1]|0;
   $108 = ($107<<16>>16)>(0);
   if ($108) {
    $109 = (_ec_dec_icdf($0,$6,8)|0);
    $110 = $109 << 1;
    $111 = (($110) + -1)|0;
    $112 = HEAP16[$106>>1]|0;
    $113 = $112 << 16 >> 16;
    $114 = Math_imul($111, $113)|0;
    $115 = $114&65535;
    HEAP16[$106>>1] = $115;
   }
   $116 = ((($$034)) + 18|0);
   $117 = HEAP16[$116>>1]|0;
   $118 = ($117<<16>>16)>(0);
   if ($118) {
    $119 = (_ec_dec_icdf($0,$6,8)|0);
    $120 = $119 << 1;
    $121 = (($120) + -1)|0;
    $122 = HEAP16[$116>>1]|0;
    $123 = $122 << 16 >> 16;
    $124 = Math_imul($121, $123)|0;
    $125 = $124&65535;
    HEAP16[$116>>1] = $125;
   }
   $126 = ((($$034)) + 20|0);
   $127 = HEAP16[$126>>1]|0;
   $128 = ($127<<16>>16)>(0);
   if ($128) {
    $129 = (_ec_dec_icdf($0,$6,8)|0);
    $130 = $129 << 1;
    $131 = (($130) + -1)|0;
    $132 = HEAP16[$126>>1]|0;
    $133 = $132 << 16 >> 16;
    $134 = Math_imul($131, $133)|0;
    $135 = $134&65535;
    HEAP16[$126>>1] = $135;
   }
   $136 = ((($$034)) + 22|0);
   $137 = HEAP16[$136>>1]|0;
   $138 = ($137<<16>>16)>(0);
   if ($138) {
    $139 = (_ec_dec_icdf($0,$6,8)|0);
    $140 = $139 << 1;
    $141 = (($140) + -1)|0;
    $142 = HEAP16[$136>>1]|0;
    $143 = $142 << 16 >> 16;
    $144 = Math_imul($141, $143)|0;
    $145 = $144&65535;
    HEAP16[$136>>1] = $145;
   }
   $146 = ((($$034)) + 24|0);
   $147 = HEAP16[$146>>1]|0;
   $148 = ($147<<16>>16)>(0);
   if ($148) {
    $149 = (_ec_dec_icdf($0,$6,8)|0);
    $150 = $149 << 1;
    $151 = (($150) + -1)|0;
    $152 = HEAP16[$146>>1]|0;
    $153 = $152 << 16 >> 16;
    $154 = Math_imul($151, $153)|0;
    $155 = $154&65535;
    HEAP16[$146>>1] = $155;
   }
   $156 = ((($$034)) + 26|0);
   $157 = HEAP16[$156>>1]|0;
   $158 = ($157<<16>>16)>(0);
   if ($158) {
    $159 = (_ec_dec_icdf($0,$6,8)|0);
    $160 = $159 << 1;
    $161 = (($160) + -1)|0;
    $162 = HEAP16[$156>>1]|0;
    $163 = $162 << 16 >> 16;
    $164 = Math_imul($161, $163)|0;
    $165 = $164&65535;
    HEAP16[$156>>1] = $165;
   }
   $166 = ((($$034)) + 28|0);
   $167 = HEAP16[$166>>1]|0;
   $168 = ($167<<16>>16)>(0);
   if ($168) {
    $169 = (_ec_dec_icdf($0,$6,8)|0);
    $170 = $169 << 1;
    $171 = (($170) + -1)|0;
    $172 = HEAP16[$166>>1]|0;
    $173 = $172 << 16 >> 16;
    $174 = Math_imul($171, $173)|0;
    $175 = $174&65535;
    HEAP16[$166>>1] = $175;
   }
   $176 = ((($$034)) + 30|0);
   $177 = HEAP16[$176>>1]|0;
   $178 = ($177<<16>>16)>(0);
   if ($178) {
    $179 = (_ec_dec_icdf($0,$6,8)|0);
    $180 = $179 << 1;
    $181 = (($180) + -1)|0;
    $182 = HEAP16[$176>>1]|0;
    $183 = $182 << 16 >> 16;
    $184 = Math_imul($181, $183)|0;
    $185 = $184&65535;
    HEAP16[$176>>1] = $185;
   }
  }
  $36 = ((($$034)) + 32|0);
  $37 = (($$03033) + 1)|0;
  $38 = ($37|0)<($14|0);
  if ($38) {
   $$03033 = $37;$$034 = $36;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _silk_init_decoder($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 _memset(($1|0),0,4260)|0;
 $2 = ((($0)) + 2376|0);
 HEAP32[$2>>2] = 1;
 HEAP32[$0>>2] = 65536;
 $3 = ((($0)) + 4168|0);
 HEAP32[$3>>2] = 0;
 _silk_CNG_Reset($0);
 _silk_PLC_Reset($0);
 return 0;
}
function _silk_decode_frame($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$alloca_mul = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $7 = sp;
 $8 = ((($0)) + 2328|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($7)) + 136|0);
 HEAP32[$10>>2] = 0;
 switch ($4|0) {
 case 0:  {
  $$pre = ((($0)) + 2388|0);
  $$pre$phiZ2D = $$pre;
  label = 4;
  break;
 }
 case 2:  {
  $11 = ((($0)) + 2388|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (((($0)) + 2420|0) + ($12<<2)|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ($14|0)==(1);
  if ($15) {
   $$pre$phiZ2D = $11;
   label = 4;
  } else {
   label = 5;
  }
  break;
 }
 default: {
  label = 5;
 }
 }
 if ((label|0) == 4) {
  $16 = (($9) + 15)|0;
  $17 = $16 & -16;
  $18 = (_llvm_stacksave()|0);
  $$alloca_mul = $17<<1;
  $19 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
  $20 = HEAP32[$$pre$phiZ2D>>2]|0;
  _silk_decode_indices($0,$1,$20,$4,$5);
  $21 = ((($0)) + 2765|0);
  $22 = HEAP8[$21>>0]|0;
  $23 = $22 << 24 >> 24;
  $24 = ((($0)) + 2766|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25 << 24 >> 24;
  $27 = HEAP32[$8>>2]|0;
  _silk_decode_pulses($1,$19,$23,$26,$27);
  _silk_decode_parameters($0,$7,$5);
  _silk_decode_core($0,$7,$2,$19,$6);
  _silk_PLC($0,$7,$2,0,$6);
  $28 = ((($0)) + 4160|0);
  HEAP32[$28>>2] = 0;
  $29 = HEAP8[$21>>0]|0;
  $30 = $29 << 24 >> 24;
  $31 = ((($0)) + 4164|0);
  HEAP32[$31>>2] = $30;
  $32 = ((($0)) + 2376|0);
  HEAP32[$32>>2] = 0;
  _llvm_stackrestore(($18|0));
 }
 else if ((label|0) == 5) {
  $33 = ((($0)) + 4164|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = $34&255;
  $36 = ((($0)) + 2765|0);
  HEAP8[$36>>0] = $35;
  _silk_PLC($0,$7,$2,1,$6);
 }
 $37 = ((($0)) + 2336|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = HEAP32[$8>>2]|0;
 $40 = (($38) - ($39))|0;
 $41 = ((($0)) + 1348|0);
 $42 = (((($0)) + 1348|0) + ($39<<1)|0);
 $43 = $40 << 1;
 _memmove(($41|0),($42|0),($43|0))|0;
 $44 = (((($0)) + 1348|0) + ($40<<1)|0);
 $45 = HEAP32[$8>>2]|0;
 $46 = $45 << 1;
 _memcpy(($44|0),($2|0),($46|0))|0;
 _silk_CNG($0,$7,$2,$9);
 _silk_PLC_glue_frames($0,$2,$9);
 $47 = ((($0)) + 2324|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = (($48) + -1)|0;
 $50 = (($7) + ($49<<2)|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = ((($0)) + 2308|0);
 HEAP32[$52>>2] = $51;
 HEAP32[$3>>2] = $9;
 STACKTOP = sp;return 0;
}
function _silk_decode_parameters($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$07072 = 0, $$073 = 0, $$pre = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $3 = sp + 32|0;
 $4 = sp;
 $5 = ((($1)) + 16|0);
 $6 = ((($0)) + 2736|0);
 $7 = ((($0)) + 2312|0);
 $8 = ($2|0)==(2);
 $9 = $8&1;
 $10 = ((($0)) + 2324|0);
 $11 = HEAP32[$10>>2]|0;
 _silk_gains_dequant($5,$6,$7,$9,$11);
 $12 = ((($0)) + 2744|0);
 $13 = ((($0)) + 2732|0);
 $14 = HEAP32[$13>>2]|0;
 _silk_NLSF_decode($3,$12,$14);
 $15 = ((($1)) + 32|0);
 $16 = ((($1)) + 64|0);
 $17 = ((($0)) + 2340|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($0)) + 4168|0);
 $20 = HEAP32[$19>>2]|0;
 _silk_NLSF2A($16,$3,$18,$20);
 $21 = ((($0)) + 2376|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(1);
 $24 = ((($0)) + 2767|0);
 if ($23) {
  HEAP8[$24>>0] = 4;
  label = 8;
 } else {
  $$pre = HEAP8[$24>>0]|0;
  $25 = ($$pre<<24>>24)<(4);
  if ($25) {
   $26 = HEAP32[$17>>2]|0;
   $27 = ($26|0)>(0);
   if ($27) {
    $28 = $$pre << 24 >> 24;
    $$073 = 0;
    while(1) {
     $29 = (((($0)) + 2344|0) + ($$073<<1)|0);
     $30 = HEAP16[$29>>1]|0;
     $31 = $30 << 16 >> 16;
     $32 = (($3) + ($$073<<1)|0);
     $33 = HEAP16[$32>>1]|0;
     $34 = $33 << 16 >> 16;
     $35 = (($34) - ($31))|0;
     $36 = Math_imul($35, $28)|0;
     $37 = $36 >>> 2;
     $38 = (($37) + ($31))|0;
     $39 = $38&65535;
     $40 = (($4) + ($$073<<1)|0);
     HEAP16[$40>>1] = $39;
     $41 = (($$073) + 1)|0;
     $42 = ($41|0)<($26|0);
     if ($42) {
      $$073 = $41;
     } else {
      break;
     }
    }
   }
   $43 = HEAP32[$19>>2]|0;
   _silk_NLSF2A($15,$4,$26,$43);
  } else {
   label = 8;
  }
 }
 if ((label|0) == 8) {
  $44 = HEAP32[$17>>2]|0;
  $45 = $44 << 1;
  _memcpy(($15|0),($16|0),($45|0))|0;
 }
 $46 = ((($0)) + 2344|0);
 $47 = HEAP32[$17>>2]|0;
 $48 = $47 << 1;
 _memcpy(($46|0),($3|0),($48|0))|0;
 $49 = ((($0)) + 4160|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = ($50|0)==(0);
 if (!($51)) {
  _silk_bwexpander($15,$47,63570);
  $52 = HEAP32[$17>>2]|0;
  _silk_bwexpander($16,$52,63570);
 }
 $53 = ((($0)) + 2765|0);
 $54 = HEAP8[$53>>0]|0;
 $55 = ($54<<24>>24)==(2);
 if (!($55)) {
  $121 = HEAP32[$10>>2]|0;
  $122 = $121 << 2;
  _memset(($1|0),0,($122|0))|0;
  $123 = ((($1)) + 96|0);
  $124 = HEAP32[$10>>2]|0;
  $125 = ($124*10)|0;
  _memset(($123|0),0,($125|0))|0;
  $126 = ((($0)) + 2768|0);
  HEAP8[$126>>0] = 0;
  $$sink = 0;
  $127 = ((($1)) + 136|0);
  HEAP32[$127>>2] = $$sink;
  STACKTOP = sp;return;
 }
 $56 = ((($0)) + 2762|0);
 $57 = HEAP16[$56>>1]|0;
 $58 = ((($0)) + 2764|0);
 $59 = HEAP8[$58>>0]|0;
 $60 = ((($0)) + 2316|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = HEAP32[$10>>2]|0;
 _silk_decode_pitch($57,$59,$1,$61,$62);
 $63 = ((($0)) + 2768|0);
 $64 = HEAP8[$63>>0]|0;
 $65 = $64 << 24 >> 24;
 $66 = (36740 + ($65<<2)|0);
 $67 = HEAP32[$66>>2]|0;
 $68 = HEAP32[$10>>2]|0;
 $69 = ($68|0)>(0);
 if ($69) {
  $$07072 = 0;
  while(1) {
   $70 = (((($0)) + 2740|0) + ($$07072)|0);
   $71 = HEAP8[$70>>0]|0;
   $72 = $71 << 24 >> 24;
   $73 = ($72*5)|0;
   $74 = ($$07072*5)|0;
   $75 = (($67) + ($73)|0);
   $76 = HEAP8[$75>>0]|0;
   $77 = $76 << 24 >> 24;
   $78 = $77 << 7;
   $79 = $78&65535;
   $80 = (((($1)) + 96|0) + ($74<<1)|0);
   HEAP16[$80>>1] = $79;
   $81 = (($73) + 1)|0;
   $82 = (($67) + ($81)|0);
   $83 = HEAP8[$82>>0]|0;
   $84 = $83 << 24 >> 24;
   $85 = $84 << 7;
   $86 = $85&65535;
   $87 = (($74) + 1)|0;
   $88 = (((($1)) + 96|0) + ($87<<1)|0);
   HEAP16[$88>>1] = $86;
   $89 = (($73) + 2)|0;
   $90 = (($67) + ($89)|0);
   $91 = HEAP8[$90>>0]|0;
   $92 = $91 << 24 >> 24;
   $93 = $92 << 7;
   $94 = $93&65535;
   $95 = (($74) + 2)|0;
   $96 = (((($1)) + 96|0) + ($95<<1)|0);
   HEAP16[$96>>1] = $94;
   $97 = (($73) + 3)|0;
   $98 = (($67) + ($97)|0);
   $99 = HEAP8[$98>>0]|0;
   $100 = $99 << 24 >> 24;
   $101 = $100 << 7;
   $102 = $101&65535;
   $103 = (($74) + 3)|0;
   $104 = (((($1)) + 96|0) + ($103<<1)|0);
   HEAP16[$104>>1] = $102;
   $105 = (($73) + 4)|0;
   $106 = (($67) + ($105)|0);
   $107 = HEAP8[$106>>0]|0;
   $108 = $107 << 24 >> 24;
   $109 = $108 << 7;
   $110 = $109&65535;
   $111 = (($74) + 4)|0;
   $112 = (((($1)) + 96|0) + ($111<<1)|0);
   HEAP16[$112>>1] = $110;
   $113 = (($$07072) + 1)|0;
   $114 = ($113|0)<($68|0);
   if ($114) {
    $$07072 = $113;
   } else {
    break;
   }
  }
 }
 $115 = ((($0)) + 2769|0);
 $116 = HEAP8[$115>>0]|0;
 $117 = $116 << 24 >> 24;
 $118 = (37364 + ($117<<1)|0);
 $119 = HEAP16[$118>>1]|0;
 $120 = $119 << 16 >> 16;
 $$sink = $120;
 $127 = ((($1)) + 136|0);
 HEAP32[$127>>2] = $$sink;
 STACKTOP = sp;return;
}
function _silk_decode_indices($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$093 = 0, $$095106 = 0, $$1 = 0, $$196102 = 0, $$pre = 0, $$pre$phi112Z2D = 0, $$pre111 = 0, $$sink = 0, $$sink114 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $sext = 0, $sext100 = 0, $sext113 = 0, $sext97 = 0, $sext98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $5 = sp + 16|0;
 $6 = sp;
 $7 = ($3|0)==(0);
 if ($7) {
  $8 = (((($0)) + 2404|0) + ($2<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0);
  if ($10) {
   $13 = (_ec_dec_icdf($1,37821,8)|0);
   $$093 = $13;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $11 = (_ec_dec_icdf($1,37817,8)|0);
  $12 = (($11) + 2)|0;
  $$093 = $12;
 }
 $14 = $$093 >>> 1;
 $15 = $14&255;
 $16 = ((($0)) + 2736|0);
 $17 = ((($0)) + 2765|0);
 HEAP8[$17>>0] = $15;
 $18 = $$093 & 1;
 $19 = $18&255;
 $20 = ((($0)) + 2766|0);
 HEAP8[$20>>0] = $19;
 $21 = ($4|0)==(2);
 if ($21) {
  $22 = (_ec_dec_icdf($1,20416,8)|0);
  $23 = $22&255;
  HEAP8[$16>>0] = $23;
 } else {
  $sext = $14 << 24;
  $24 = $sext >> 24;
  $25 = (20384 + ($24<<3)|0);
  $26 = (_ec_dec_icdf($1,$25,8)|0);
  $27 = $26 << 3;
  $28 = $27&255;
  HEAP8[$16>>0] = $28;
  $29 = (_ec_dec_icdf($1,37846,8)|0);
  $30 = HEAP8[$16>>0]|0;
  $31 = $30&255;
  $32 = (($29) + ($31))|0;
  $33 = $32&255;
  HEAP8[$16>>0] = $33;
 }
 $34 = ((($0)) + 2324|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = ($35|0)>(1);
 if ($36) {
  $$095106 = 1;
  while(1) {
   $37 = (_ec_dec_icdf($1,20416,8)|0);
   $38 = $37&255;
   $39 = (((($0)) + 2736|0) + ($$095106)|0);
   HEAP8[$39>>0] = $38;
   $40 = (($$095106) + 1)|0;
   $41 = HEAP32[$34>>2]|0;
   $42 = ($40|0)<($41|0);
   if ($42) {
    $$095106 = $40;
   } else {
    break;
   }
  }
 }
 $43 = ((($0)) + 2732|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = ((($44)) + 16|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = HEAP8[$17>>0]|0;
 $48 = $47 << 24 >> 24;
 $49 = $48 >> 1;
 $50 = HEAP16[$44>>1]|0;
 $51 = $50 << 16 >> 16;
 $52 = Math_imul($49, $51)|0;
 $53 = (($46) + ($52)|0);
 $54 = (_ec_dec_icdf($1,$53,8)|0);
 $55 = $54&255;
 $56 = ((($0)) + 2744|0);
 HEAP8[$56>>0] = $55;
 $57 = HEAP32[$43>>2]|0;
 $sext97 = $54 << 24;
 $58 = $sext97 >> 24;
 _silk_NLSF_unpack($5,$6,$57,$58);
 $59 = HEAP32[$43>>2]|0;
 $60 = ((($59)) + 2|0);
 $61 = HEAP16[$60>>1]|0;
 $62 = ($61<<16>>16)>(0);
 L16: do {
  if ($62) {
   $$196102 = 0;$64 = $59;
   while(1) {
    $63 = ((($64)) + 28|0);
    $65 = HEAP32[$63>>2]|0;
    $66 = (($5) + ($$196102<<1)|0);
    $67 = HEAP16[$66>>1]|0;
    $68 = $67 << 16 >> 16;
    $69 = (($65) + ($68)|0);
    $70 = (_ec_dec_icdf($1,$69,8)|0);
    switch ($70|0) {
    case 0:  {
     $71 = (_ec_dec_icdf($1,37854,8)|0);
     $72 = (0 - ($71))|0;
     $$1 = $72;
     break;
    }
    case 8:  {
     $73 = (_ec_dec_icdf($1,37854,8)|0);
     $74 = (($73) + 8)|0;
     $$1 = $74;
     break;
    }
    default: {
     $$1 = $70;
    }
    }
    $75 = (($$1) + 252)|0;
    $76 = $75&255;
    $77 = (($$196102) + 1)|0;
    $78 = (((($0)) + 2744|0) + ($77)|0);
    HEAP8[$78>>0] = $76;
    $79 = HEAP32[$43>>2]|0;
    $80 = ((($79)) + 2|0);
    $81 = HEAP16[$80>>1]|0;
    $82 = $81 << 16 >> 16;
    $83 = ($77|0)<($82|0);
    if ($83) {
     $$196102 = $77;$64 = $79;
    } else {
     break L16;
    }
   }
  }
 } while(0);
 $84 = HEAP32[$34>>2]|0;
 $85 = ($84|0)==(4);
 if ($85) {
  $86 = (_ec_dec_icdf($1,37823,8)|0);
  $87 = $86&255;
  $$sink = $87;
 } else {
  $$sink = 4;
 }
 $88 = ((($0)) + 2767|0);
 HEAP8[$88>>0] = $$sink;
 $89 = HEAP8[$17>>0]|0;
 $90 = ($89<<24>>24)==(2);
 if (!($90)) {
  $151 = HEAP8[$17>>0]|0;
  $152 = $151 << 24 >> 24;
  $153 = ((($0)) + 2396|0);
  HEAP32[$153>>2] = $152;
  $154 = (_ec_dec_icdf($1,37831,8)|0);
  $155 = $154&255;
  $156 = ((($0)) + 2770|0);
  HEAP8[$156>>0] = $155;
  STACKTOP = sp;return;
 }
 if ($21) {
  $91 = ((($0)) + 2396|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = ($92|0)==(2);
  if ($93) {
   $94 = (_ec_dec_icdf($1,21216,8)|0);
   $sext100 = $94 << 16;
   $95 = ($sext100|0)>(0);
   if ($95) {
    $96 = (($94) + 65527)|0;
    $97 = ((($0)) + 2400|0);
    $98 = HEAP16[$97>>1]|0;
    $99 = $98&65535;
    $100 = (($96) + ($99))|0;
    $101 = $100&65535;
    $102 = ((($0)) + 2762|0);
    HEAP16[$102>>1] = $101;
    $$pre$phi112Z2D = $97;$118 = $101;
   } else {
    label = 24;
   }
  } else {
   label = 24;
  }
 } else {
  label = 24;
 }
 if ((label|0) == 24) {
  $103 = (_ec_dec_icdf($1,21184,8)|0);
  $sext98 = $103 << 16;
  $104 = $sext98 >> 16;
  $105 = ((($0)) + 2316|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = $106 >> 1;
  $108 = Math_imul($104, $107)|0;
  $109 = $108&65535;
  $110 = ((($0)) + 2762|0);
  HEAP16[$110>>1] = $109;
  $111 = ((($0)) + 2380|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = (_ec_dec_icdf($1,$112,8)|0);
  $114 = HEAP16[$110>>1]|0;
  $115 = $114&65535;
  $116 = (($113) + ($115))|0;
  $117 = $116&65535;
  HEAP16[$110>>1] = $117;
  $$pre111 = ((($0)) + 2400|0);
  $$pre$phi112Z2D = $$pre111;$118 = $117;
 }
 HEAP16[$$pre$phi112Z2D>>1] = $118;
 $119 = ((($0)) + 2384|0);
 $120 = HEAP32[$119>>2]|0;
 $121 = (_ec_dec_icdf($1,$120,8)|0);
 $122 = $121&255;
 $123 = ((($0)) + 2764|0);
 HEAP8[$123>>0] = $122;
 $124 = (_ec_dec_icdf($1,37770,8)|0);
 $125 = $124&255;
 $126 = ((($0)) + 2768|0);
 HEAP8[$126>>0] = $125;
 $127 = HEAP32[$34>>2]|0;
 $128 = ($127|0)>(0);
 if ($128) {
  $sext113 = $124 << 24;
  $129 = $sext113 >> 24;
  $130 = (36716 + ($129<<2)|0);
  $131 = HEAP32[$130>>2]|0;
  $132 = (_ec_dec_icdf($1,$131,8)|0);
  $133 = $132&255;
  $134 = ((($0)) + 2740|0);
  HEAP8[$134>>0] = $133;
  $135 = HEAP32[$34>>2]|0;
  $136 = ($135|0)>(1);
  if ($136) {
   $143 = 1;
   while(1) {
    $$pre = HEAP8[$126>>0]|0;
    $137 = $$pre << 24 >> 24;
    $138 = (36716 + ($137<<2)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = (_ec_dec_icdf($1,$139,8)|0);
    $141 = $140&255;
    $142 = (((($0)) + 2740|0) + ($143)|0);
    HEAP8[$142>>0] = $141;
    $144 = (($143) + 1)|0;
    $145 = HEAP32[$34>>2]|0;
    $146 = ($144|0)<($145|0);
    if ($146) {
     $143 = $144;
    } else {
     break;
    }
   }
  }
 }
 $147 = ($4|0)==(0);
 if ($147) {
  $148 = (_ec_dec_icdf($1,37814,8)|0);
  $149 = $148&255;
  $$sink114 = $149;
 } else {
  $$sink114 = 0;
 }
 $150 = ((($0)) + 2769|0);
 HEAP8[$150>>0] = $$sink114;
 $151 = HEAP8[$17>>0]|0;
 $152 = $151 << 24 >> 24;
 $153 = ((($0)) + 2396|0);
 HEAP32[$153>>2] = $152;
 $154 = (_ec_dec_icdf($1,37831,8)|0);
 $155 = $154&255;
 $156 = ((($0)) + 2770|0);
 HEAP8[$156>>0] = $155;
 STACKTOP = sp;return;
}
function _silk_decode_pulses($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$06874$us = 0, $$06874$us$1 = 0, $$06874$us$10 = 0, $$06874$us$11 = 0, $$06874$us$12 = 0, $$06874$us$13 = 0, $$06874$us$14 = 0, $$06874$us$15 = 0, $$06874$us$2 = 0, $$06874$us$3 = 0, $$06874$us$4 = 0, $$06874$us$5 = 0, $$06874$us$6 = 0, $$06874$us$7 = 0, $$06874$us$8 = 0, $$06874$us$9 = 0, $$07173$us = 0, $$07173$us$1 = 0, $$07173$us$10 = 0, $$07173$us$11 = 0;
 var $$07173$us$12 = 0, $$07173$us$13 = 0, $$07173$us$14 = 0, $$07173$us$15 = 0, $$07173$us$2 = 0, $$07173$us$3 = 0, $$07173$us$4 = 0, $$07173$us$5 = 0, $$07173$us$6 = 0, $$07173$us$7 = 0, $$07173$us$8 = 0, $$07173$us$9 = 0, $$087 = 0, $$180 = 0, $$276 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond = 0, $exitcond$1 = 0, $exitcond$10 = 0, $exitcond$11 = 0, $exitcond$12 = 0, $exitcond$13 = 0, $exitcond$14 = 0, $exitcond$15 = 0, $exitcond$2 = 0, $exitcond$3 = 0, $exitcond$4 = 0, $exitcond$5 = 0, $exitcond$6 = 0, $exitcond$7 = 0, $exitcond$8 = 0, $exitcond$9 = 0, $exitcond92 = 0, $exitcond93 = 0, $exitcond94 = 0;
 var $sext = 0, $sext72 = 0, $spec$select = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $5 = sp + 80|0;
 $6 = sp;
 $7 = $2 >> 1;
 $8 = (21664 + (($7*9)|0)|0);
 $9 = (_ec_dec_icdf($0,$8,8)|0);
 $10 = $4 >> 4;
 $11 = $4 & -16;
 $12 = ($11|0)<($4|0);
 $13 = $12&1;
 $spec$select = (($10) + ($13))|0;
 $14 = (21296 + (($9*18)|0)|0);
 $15 = ($spec$select|0)>(0);
 if (!($15)) {
  _silk_decode_signs($0,$1,$4,$2,$3,$5);
  STACKTOP = sp;return;
 }
 $$087 = 0;
 while(1) {
  $16 = (($6) + ($$087<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (_ec_dec_icdf($0,$14,8)|0);
  $18 = (($5) + ($$087<<2)|0);
  HEAP32[$18>>2] = $17;
  $19 = ($17|0)==(17);
  if ($19) {
   $21 = 0;
   while(1) {
    $20 = (($21) + 1)|0;
    HEAP32[$16>>2] = $20;
    $22 = ($20|0)==(10);
    $23 = $22&1;
    $24 = (21458 + ($23)|0);
    $25 = (_ec_dec_icdf($0,$24,8)|0);
    HEAP32[$18>>2] = $25;
    $26 = ($25|0)==(17);
    if ($26) {
     $21 = $20;
    } else {
     break;
    }
   }
  }
  $27 = (($$087) + 1)|0;
  $exitcond94 = ($27|0)==($spec$select|0);
  if ($exitcond94) {
   break;
  } else {
   $$087 = $27;
  }
 }
 if (!($15)) {
  _silk_decode_signs($0,$1,$4,$2,$3,$5);
  STACKTOP = sp;return;
 }
 $$180 = 0;
 while(1) {
  $28 = (($5) + ($$180<<2)|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ($29|0)>(0);
  $sext72 = $$180 << 16;
  $31 = $sext72 >> 12;
  $32 = (($1) + ($31<<1)|0);
  if ($30) {
   _silk_shell_decoder($32,$0,$29);
  } else {
   dest=$32; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
  }
  $33 = (($$180) + 1)|0;
  $exitcond93 = ($33|0)==($spec$select|0);
  if ($exitcond93) {
   break;
  } else {
   $$180 = $33;
  }
 }
 if (!($15)) {
  _silk_decode_signs($0,$1,$4,$2,$3,$5);
  STACKTOP = sp;return;
 }
 $$276 = 0;
 while(1) {
  $34 = (($6) + ($$276<<2)|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ($35|0)>(0);
  if ($36) {
   $sext = $$276 << 16;
   $37 = $sext >> 12;
   $38 = (($1) + ($37<<1)|0);
   $39 = HEAP16[$38>>1]|0;
   $40 = $39 << 16 >> 16;
   $$06874$us = 0;$$07173$us = $40;
   while(1) {
    $41 = $$07173$us << 1;
    $42 = (_ec_dec_icdf($0,37812,8)|0);
    $43 = (($42) + ($41))|0;
    $44 = (($$06874$us) + 1)|0;
    $exitcond = ($44|0)==($35|0);
    if ($exitcond) {
     break;
    } else {
     $$06874$us = $44;$$07173$us = $43;
    }
   }
   $45 = $43&65535;
   HEAP16[$38>>1] = $45;
   $46 = ((($38)) + 2|0);
   $47 = HEAP16[$46>>1]|0;
   $48 = $47 << 16 >> 16;
   $$06874$us$1 = 0;$$07173$us$1 = $48;
   while(1) {
    $50 = $$07173$us$1 << 1;
    $51 = (_ec_dec_icdf($0,37812,8)|0);
    $52 = (($51) + ($50))|0;
    $53 = (($$06874$us$1) + 1)|0;
    $exitcond$1 = ($53|0)==($35|0);
    if ($exitcond$1) {
     break;
    } else {
     $$06874$us$1 = $53;$$07173$us$1 = $52;
    }
   }
   $54 = $52&65535;
   HEAP16[$46>>1] = $54;
   $55 = ((($38)) + 4|0);
   $56 = HEAP16[$55>>1]|0;
   $57 = $56 << 16 >> 16;
   $$06874$us$2 = 0;$$07173$us$2 = $57;
   while(1) {
    $58 = $$07173$us$2 << 1;
    $59 = (_ec_dec_icdf($0,37812,8)|0);
    $60 = (($59) + ($58))|0;
    $61 = (($$06874$us$2) + 1)|0;
    $exitcond$2 = ($61|0)==($35|0);
    if ($exitcond$2) {
     break;
    } else {
     $$06874$us$2 = $61;$$07173$us$2 = $60;
    }
   }
   $62 = $60&65535;
   HEAP16[$55>>1] = $62;
   $63 = ((($38)) + 6|0);
   $64 = HEAP16[$63>>1]|0;
   $65 = $64 << 16 >> 16;
   $$06874$us$3 = 0;$$07173$us$3 = $65;
   while(1) {
    $66 = $$07173$us$3 << 1;
    $67 = (_ec_dec_icdf($0,37812,8)|0);
    $68 = (($67) + ($66))|0;
    $69 = (($$06874$us$3) + 1)|0;
    $exitcond$3 = ($69|0)==($35|0);
    if ($exitcond$3) {
     break;
    } else {
     $$06874$us$3 = $69;$$07173$us$3 = $68;
    }
   }
   $70 = $68&65535;
   HEAP16[$63>>1] = $70;
   $71 = ((($38)) + 8|0);
   $72 = HEAP16[$71>>1]|0;
   $73 = $72 << 16 >> 16;
   $$06874$us$4 = 0;$$07173$us$4 = $73;
   while(1) {
    $74 = $$07173$us$4 << 1;
    $75 = (_ec_dec_icdf($0,37812,8)|0);
    $76 = (($75) + ($74))|0;
    $77 = (($$06874$us$4) + 1)|0;
    $exitcond$4 = ($77|0)==($35|0);
    if ($exitcond$4) {
     break;
    } else {
     $$06874$us$4 = $77;$$07173$us$4 = $76;
    }
   }
   $78 = $76&65535;
   HEAP16[$71>>1] = $78;
   $79 = ((($38)) + 10|0);
   $80 = HEAP16[$79>>1]|0;
   $81 = $80 << 16 >> 16;
   $$06874$us$5 = 0;$$07173$us$5 = $81;
   while(1) {
    $82 = $$07173$us$5 << 1;
    $83 = (_ec_dec_icdf($0,37812,8)|0);
    $84 = (($83) + ($82))|0;
    $85 = (($$06874$us$5) + 1)|0;
    $exitcond$5 = ($85|0)==($35|0);
    if ($exitcond$5) {
     break;
    } else {
     $$06874$us$5 = $85;$$07173$us$5 = $84;
    }
   }
   $86 = $84&65535;
   HEAP16[$79>>1] = $86;
   $87 = ((($38)) + 12|0);
   $88 = HEAP16[$87>>1]|0;
   $89 = $88 << 16 >> 16;
   $$06874$us$6 = 0;$$07173$us$6 = $89;
   while(1) {
    $90 = $$07173$us$6 << 1;
    $91 = (_ec_dec_icdf($0,37812,8)|0);
    $92 = (($91) + ($90))|0;
    $93 = (($$06874$us$6) + 1)|0;
    $exitcond$6 = ($93|0)==($35|0);
    if ($exitcond$6) {
     break;
    } else {
     $$06874$us$6 = $93;$$07173$us$6 = $92;
    }
   }
   $94 = $92&65535;
   HEAP16[$87>>1] = $94;
   $95 = ((($38)) + 14|0);
   $96 = HEAP16[$95>>1]|0;
   $97 = $96 << 16 >> 16;
   $$06874$us$7 = 0;$$07173$us$7 = $97;
   while(1) {
    $98 = $$07173$us$7 << 1;
    $99 = (_ec_dec_icdf($0,37812,8)|0);
    $100 = (($99) + ($98))|0;
    $101 = (($$06874$us$7) + 1)|0;
    $exitcond$7 = ($101|0)==($35|0);
    if ($exitcond$7) {
     break;
    } else {
     $$06874$us$7 = $101;$$07173$us$7 = $100;
    }
   }
   $102 = $100&65535;
   HEAP16[$95>>1] = $102;
   $103 = ((($38)) + 16|0);
   $104 = HEAP16[$103>>1]|0;
   $105 = $104 << 16 >> 16;
   $$06874$us$8 = 0;$$07173$us$8 = $105;
   while(1) {
    $106 = $$07173$us$8 << 1;
    $107 = (_ec_dec_icdf($0,37812,8)|0);
    $108 = (($107) + ($106))|0;
    $109 = (($$06874$us$8) + 1)|0;
    $exitcond$8 = ($109|0)==($35|0);
    if ($exitcond$8) {
     break;
    } else {
     $$06874$us$8 = $109;$$07173$us$8 = $108;
    }
   }
   $110 = $108&65535;
   HEAP16[$103>>1] = $110;
   $111 = ((($38)) + 18|0);
   $112 = HEAP16[$111>>1]|0;
   $113 = $112 << 16 >> 16;
   $$06874$us$9 = 0;$$07173$us$9 = $113;
   while(1) {
    $114 = $$07173$us$9 << 1;
    $115 = (_ec_dec_icdf($0,37812,8)|0);
    $116 = (($115) + ($114))|0;
    $117 = (($$06874$us$9) + 1)|0;
    $exitcond$9 = ($117|0)==($35|0);
    if ($exitcond$9) {
     break;
    } else {
     $$06874$us$9 = $117;$$07173$us$9 = $116;
    }
   }
   $118 = $116&65535;
   HEAP16[$111>>1] = $118;
   $119 = ((($38)) + 20|0);
   $120 = HEAP16[$119>>1]|0;
   $121 = $120 << 16 >> 16;
   $$06874$us$10 = 0;$$07173$us$10 = $121;
   while(1) {
    $122 = $$07173$us$10 << 1;
    $123 = (_ec_dec_icdf($0,37812,8)|0);
    $124 = (($123) + ($122))|0;
    $125 = (($$06874$us$10) + 1)|0;
    $exitcond$10 = ($125|0)==($35|0);
    if ($exitcond$10) {
     break;
    } else {
     $$06874$us$10 = $125;$$07173$us$10 = $124;
    }
   }
   $126 = $124&65535;
   HEAP16[$119>>1] = $126;
   $127 = ((($38)) + 22|0);
   $128 = HEAP16[$127>>1]|0;
   $129 = $128 << 16 >> 16;
   $$06874$us$11 = 0;$$07173$us$11 = $129;
   while(1) {
    $130 = $$07173$us$11 << 1;
    $131 = (_ec_dec_icdf($0,37812,8)|0);
    $132 = (($131) + ($130))|0;
    $133 = (($$06874$us$11) + 1)|0;
    $exitcond$11 = ($133|0)==($35|0);
    if ($exitcond$11) {
     break;
    } else {
     $$06874$us$11 = $133;$$07173$us$11 = $132;
    }
   }
   $134 = $132&65535;
   HEAP16[$127>>1] = $134;
   $135 = ((($38)) + 24|0);
   $136 = HEAP16[$135>>1]|0;
   $137 = $136 << 16 >> 16;
   $$06874$us$12 = 0;$$07173$us$12 = $137;
   while(1) {
    $138 = $$07173$us$12 << 1;
    $139 = (_ec_dec_icdf($0,37812,8)|0);
    $140 = (($139) + ($138))|0;
    $141 = (($$06874$us$12) + 1)|0;
    $exitcond$12 = ($141|0)==($35|0);
    if ($exitcond$12) {
     break;
    } else {
     $$06874$us$12 = $141;$$07173$us$12 = $140;
    }
   }
   $142 = $140&65535;
   HEAP16[$135>>1] = $142;
   $143 = ((($38)) + 26|0);
   $144 = HEAP16[$143>>1]|0;
   $145 = $144 << 16 >> 16;
   $$06874$us$13 = 0;$$07173$us$13 = $145;
   while(1) {
    $146 = $$07173$us$13 << 1;
    $147 = (_ec_dec_icdf($0,37812,8)|0);
    $148 = (($147) + ($146))|0;
    $149 = (($$06874$us$13) + 1)|0;
    $exitcond$13 = ($149|0)==($35|0);
    if ($exitcond$13) {
     break;
    } else {
     $$06874$us$13 = $149;$$07173$us$13 = $148;
    }
   }
   $150 = $148&65535;
   HEAP16[$143>>1] = $150;
   $151 = ((($38)) + 28|0);
   $152 = HEAP16[$151>>1]|0;
   $153 = $152 << 16 >> 16;
   $$06874$us$14 = 0;$$07173$us$14 = $153;
   while(1) {
    $154 = $$07173$us$14 << 1;
    $155 = (_ec_dec_icdf($0,37812,8)|0);
    $156 = (($155) + ($154))|0;
    $157 = (($$06874$us$14) + 1)|0;
    $exitcond$14 = ($157|0)==($35|0);
    if ($exitcond$14) {
     break;
    } else {
     $$06874$us$14 = $157;$$07173$us$14 = $156;
    }
   }
   $158 = $156&65535;
   HEAP16[$151>>1] = $158;
   $159 = ((($38)) + 30|0);
   $160 = HEAP16[$159>>1]|0;
   $161 = $160 << 16 >> 16;
   $$06874$us$15 = 0;$$07173$us$15 = $161;
   while(1) {
    $162 = $$07173$us$15 << 1;
    $163 = (_ec_dec_icdf($0,37812,8)|0);
    $164 = (($163) + ($162))|0;
    $165 = (($$06874$us$15) + 1)|0;
    $exitcond$15 = ($165|0)==($35|0);
    if ($exitcond$15) {
     break;
    } else {
     $$06874$us$15 = $165;$$07173$us$15 = $164;
    }
   }
   $166 = $164&65535;
   HEAP16[$159>>1] = $166;
   $167 = $35 << 5;
   $168 = (($5) + ($$276<<2)|0);
   $169 = HEAP32[$168>>2]|0;
   $170 = $169 | $167;
   HEAP32[$168>>2] = $170;
  }
  $49 = (($$276) + 1)|0;
  $exitcond92 = ($49|0)==($spec$select|0);
  if ($exitcond92) {
   break;
  } else {
   $$276 = $49;
  }
 }
 _silk_decode_signs($0,$1,$4,$2,$3,$5);
 STACKTOP = sp;return;
}
function _silk_decoder_set_fs($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$053 = 0, $$054 = 0, $$055 = 0, $$59 = 0, $$pre = 0, $$sink = 0, $$sink57 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $sext = 0, $sext50 = 0, $sext51 = 0, $spec$select = 0, $spec$select56 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $sext = $1 << 16;
 $3 = $sext >> 16;
 $4 = ($3*5)|0;
 $5 = ((($0)) + 2332|0);
 HEAP32[$5>>2] = $4;
 $6 = ((($0)) + 2324|0);
 $7 = HEAP32[$6>>2]|0;
 $sext50 = $7 << 16;
 $8 = $sext50 >> 16;
 $sext51 = ($3*327680)|0;
 $9 = $sext51 >> 16;
 $10 = Math_imul($8, $9)|0;
 $11 = ((($0)) + 2316|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==($1|0);
 $14 = ((($0)) + 2320|0);
 if ($13) {
  $15 = HEAP32[$14>>2]|0;
  $16 = ($15|0)==($2|0);
  if ($16) {
   $$055 = 0;
   label = 4;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $17 = ((($0)) + 2432|0);
  $18 = ($3*1000)|0;
  $19 = (_silk_resampler_init($17,$18,$2,0)|0);
  HEAP32[$14>>2] = $2;
  $$pre = HEAP32[$11>>2]|0;
  $20 = ($$pre|0)==($1|0);
  if ($20) {
   $$055 = $19;
   label = 4;
  } else {
   $$054 = $19;$41 = 0;
  }
 }
 if ((label|0) == 4) {
  $21 = ((($0)) + 2328|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ($10|0)==($22|0);
  if ($23) {
   $$053 = $$055;
   return ($$053|0);
  } else {
   $$054 = $$055;$41 = 1;
  }
 }
 $24 = ($1|0)==(8);
 $25 = HEAP32[$6>>2]|0;
 $26 = ($25|0)==(4);
 $27 = ((($0)) + 2384|0);
 $$ = $26 ? 37861 : 37884;
 $$59 = $26 ? 21248 : 37872;
 $$sink = $24 ? $$ : $$59;
 HEAP32[$27>>2] = $$sink;
 if (!($41)) {
  $28 = ($3*20)|0;
  $29 = ((($0)) + 2336|0);
  HEAP32[$29>>2] = $28;
  $30 = $1 | 4;
  $31 = ($30|0)==(12);
  $32 = ((($0)) + 2340|0);
  $spec$select = $31 ? 10 : 16;
  $spec$select56 = $31 ? 36772 : 36812;
  HEAP32[$32>>2] = $spec$select;
  $33 = ((($0)) + 2732|0);
  HEAP32[$33>>2] = $spec$select56;
  switch ($1|0) {
  case 16:  {
   $$sink57 = 37846;
   label = 9;
   break;
  }
  case 12:  {
   $$sink57 = 37840;
   label = 9;
   break;
  }
  default: {
   if ($24) {
    $$sink57 = 37831;
    label = 9;
   }
  }
  }
  if ((label|0) == 9) {
   $34 = ((($0)) + 2380|0);
   HEAP32[$34>>2] = $$sink57;
  }
  $35 = ((($0)) + 2376|0);
  HEAP32[$35>>2] = 1;
  $36 = ((($0)) + 2308|0);
  HEAP32[$36>>2] = 100;
  $37 = ((($0)) + 2312|0);
  HEAP8[$37>>0] = 10;
  $38 = ((($0)) + 4164|0);
  HEAP32[$38>>2] = 0;
  $39 = ((($0)) + 1284|0);
  _memset(($39|0),0,1024)|0;
 }
 HEAP32[$11>>2] = $1;
 $40 = ((($0)) + 2328|0);
 HEAP32[$40>>2] = $10;
 $$053 = $$054;
 return ($$053|0);
}
function _silk_gains_quant($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$095 = 0, $$neg = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $9 = 0, $exitcond = 0, $sext = 0, $sext86 = 0, $sext87 = 0, $sext88 = 0, $spec$select89 = 0, $spec$select9094 = 0, $spec$select91 = 0, $spec$select92 = 0, $spec$select93 = 0, $storemerge = 0, $storemerge$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($4|0)>(0);
 if (!($5)) {
  return;
 }
 $$095 = 0;
 while(1) {
  $6 = (($1) + ($$095<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (_silk_lin2log($7)|0);
  $9 = $8 << 16;
  $sext = (($9) + -136970240)|0;
  $10 = $sext >> 16;
  $11 = ($10*2251)|0;
  $12 = $11 >>> 16;
  $13 = $12&255;
  $14 = (($0) + ($$095)|0);
  HEAP8[$14>>0] = $13;
  $sext86 = $12 << 24;
  $15 = $sext86 >> 24;
  $16 = HEAP8[$2>>0]|0;
  $17 = $16 << 24 >> 24;
  $18 = ($15|0)<($17|0);
  if ($18) {
   $19 = (($13) + 1)<<24>>24;
   HEAP8[$14>>0] = $19;
   $21 = $19;
  } else {
   $21 = $13;
  }
  $20 = ($21<<24>>24)>(63);
  $22 = ($21<<24>>24)>(0);
  $spec$select93 = $22 ? $21 : 0;
  $23 = $spec$select93&255;
  $24 = $20 ? 63 : $23;
  $25 = $24&255;
  HEAP8[$14>>0] = $25;
  $26 = $$095 | $3;
  $27 = ($26|0)==(0);
  $28 = HEAP8[$2>>0]|0;
  if ($27) {
   $29 = $28 << 24 >> 24;
   $30 = (($29) + -4)|0;
   $31 = ($28<<24>>24)>(67);
   if ($31) {
    $32 = ($24|0)>($30|0);
    $33 = ($24>>>0)>(63);
    $spec$select89 = $33 ? $24 : 63;
    $spec$select91 = $32 ? $30 : $spec$select89;
    $37 = $spec$select91;
   } else {
    $34 = ($24>>>0)>(63);
    $35 = ($24|0)<($30|0);
    $$ = $35 ? $30 : $24;
    $spec$select92 = $34 ? 63 : $$;
    $37 = $spec$select92;
   }
   $36 = $37&255;
   HEAP8[$14>>0] = $36;
   HEAP8[$2>>0] = $36;
   $74 = $36;
  } else {
   $38 = $28&255;
   $39 = (($24) - ($38))|0;
   $40 = $39&255;
   HEAP8[$14>>0] = $40;
   $41 = HEAP8[$2>>0]|0;
   $42 = $41 << 24 >> 24;
   $43 = (($42) + 8)|0;
   $sext87 = $39 << 24;
   $44 = $sext87 >> 24;
   $45 = ($44|0)>($43|0);
   if ($45) {
    $$neg = (504 - ($42))|0;
    $46 = (($44) + 1)|0;
    $47 = (($46) + ($$neg))|0;
    $48 = $47 >>> 1;
    $49 = (($48) + ($43))|0;
    $50 = $49&255;
    HEAP8[$14>>0] = $50;
    $52 = $50;
   } else {
    $52 = $40;
   }
   $51 = ($52<<24>>24)>(-4);
   $spec$select9094 = $51 ? $52 : -4;
   $53 = ($spec$select9094<<24>>24)<(36);
   $54 = $53 ? $spec$select9094 : 36;
   $55 = $54 << 24 >> 24;
   HEAP8[$14>>0] = $54;
   $56 = ($43|0)<($55|0);
   if ($56) {
    $57 = $55 << 1;
    $58 = (($57) - ($43))|0;
    $59 = HEAP8[$2>>0]|0;
    $60 = $59&255;
    $61 = (($58) + ($60))|0;
    $62 = $61&255;
    HEAP8[$2>>0] = $62;
    $sext88 = $61 << 24;
    $63 = $sext88 >> 24;
    $64 = ($63|0)<(63);
    $65 = $64 ? $63 : 63;
    $storemerge$in = $65;
   } else {
    $66 = HEAP8[$2>>0]|0;
    $67 = $66&255;
    $68 = (($67) + ($55))|0;
    $storemerge$in = $68;
   }
   $storemerge = $storemerge$in&255;
   HEAP8[$2>>0] = $storemerge;
   $69 = HEAP8[$14>>0]|0;
   $70 = $69&255;
   $71 = (($70) + 4)|0;
   $72 = $71&255;
   HEAP8[$14>>0] = $72;
   $$pre = HEAP8[$2>>0]|0;
   $74 = $$pre;
  }
  $73 = $74 << 24 >> 24;
  $75 = ($73*29)|0;
  $76 = ($73*7281)|0;
  $77 = $76 >> 16;
  $78 = (($75) + 2090)|0;
  $79 = (($78) + ($77))|0;
  $80 = ($79|0)<(3967);
  $81 = $80 ? $79 : 3967;
  $82 = (_silk_log2lin($81)|0);
  HEAP32[$6>>2] = $82;
  $83 = (($$095) + 1)|0;
  $exitcond = ($83|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$095 = $83;
  }
 }
 return;
}
function _silk_gains_dequant($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$030 = 0, $$sink31 = 0, $$sink31$op = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $5 = ($4|0)>(0);
 if (!($5)) {
  return;
 }
 $$030 = 0;
 while(1) {
  $6 = $$030 | $3;
  $7 = ($6|0)==(0);
  $8 = (($1) + ($$030)|0);
  $9 = HEAP8[$8>>0]|0;
  $10 = $9 << 24 >> 24;
  do {
   if ($7) {
    $11 = HEAP8[$2>>0]|0;
    $12 = $11 << 24 >> 24;
    $13 = (($12) + -16)|0;
    $14 = ($13|0)<($10|0);
    $15 = $14 ? $10 : $13;
    $$sink31 = $15;
   } else {
    $16 = (($10) + -4)|0;
    $17 = HEAP8[$2>>0]|0;
    $18 = $17 << 24 >> 24;
    $19 = (($18) + 8)|0;
    $20 = ($16|0)>($19|0);
    if ($20) {
     $21 = $16 << 1;
     $22 = (($21) + 248)|0;
     $$sink31 = $22;
     break;
    } else {
     $23 = (($16) + ($18))|0;
     $$sink31 = $23;
     break;
    }
   }
  } while(0);
  $24 = $$sink31&255;
  HEAP8[$2>>0] = $24;
  $25 = ($24<<24>>24)>(63);
  $26 = ($24<<24>>24)>(0);
  $$sink31$op = $$sink31 & 255;
  $27 = $26 ? $$sink31$op : 0;
  $28 = $25 ? 63 : $27;
  $29 = $28&255;
  HEAP8[$2>>0] = $29;
  $30 = ($28*29)|0;
  $31 = ($28*7281)|0;
  $32 = $31 >>> 16;
  $33 = (($30) + 2090)|0;
  $34 = (($33) + ($32))|0;
  $35 = ($34>>>0)<(3967);
  $36 = $35 ? $34 : 3967;
  $37 = (_silk_log2lin($36)|0);
  $38 = (($0) + ($$030<<2)|0);
  HEAP32[$38>>2] = $37;
  $39 = (($$030) + 1)|0;
  $exitcond = ($39|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$030 = $39;
  }
 }
 return;
}
function _silk_gains_ID($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$011 = 0, $$0910 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(0);
 if (!($2)) {
  $$0$lcssa = 0;
  return ($$0$lcssa|0);
 }
 $$011 = 0;$$0910 = 0;
 while(1) {
  $3 = (($0) + ($$0910)|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = $4 << 24 >> 24;
  $6 = $$011 << 8;
  $7 = (($6) + ($5))|0;
  $8 = (($$0910) + 1)|0;
  $exitcond = ($8|0)==($1|0);
  if ($exitcond) {
   $$0$lcssa = $7;
   break;
  } else {
   $$011 = $7;$$0910 = $8;
  }
 }
 return ($$0$lcssa|0);
}
function _silk_LP_variable_cutoff($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $sext79$i = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $8 = ((($0)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 << 10;
 $11 = (262144 - ($10))|0;
 $12 = $11 >> 16;
 $13 = $11 & 64512;
 $14 = ($11|0)<(262144);
 do {
  if ($14) {
   $15 = ($13|0)==(0);
   if ($15) {
    $145 = (21072 + (($12*12)|0)|0);
    ;HEAP32[$3>>2]=HEAP32[$145>>2]|0;HEAP32[$3+4>>2]=HEAP32[$145+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$145+8>>2]|0;
    $146 = (21136 + ($12<<3)|0);
    $147 = $146;
    $148 = $147;
    $149 = HEAP32[$148>>2]|0;
    $150 = (($147) + 4)|0;
    $151 = $150;
    $152 = HEAP32[$151>>2]|0;
    $153 = $4;
    $154 = $153;
    HEAP32[$154>>2] = $149;
    $155 = (($153) + 4)|0;
    $156 = $155;
    HEAP32[$156>>2] = $152;
    break;
   }
   $16 = ($13>>>0)<(32768);
   $17 = (($12) + 1)|0;
   $sext79$i = $11 << 16;
   $18 = $sext79$i >> 16;
   if ($16) {
    $19 = (21072 + (($12*12)|0)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = (21072 + (($17*12)|0)|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (($22) - ($20))|0;
    $24 = $23 >> 16;
    $25 = Math_imul($24, $18)|0;
    $26 = $23 & 65535;
    $27 = Math_imul($26, $18)|0;
    $28 = $27 >> 16;
    $29 = (($25) + ($20))|0;
    $30 = (($29) + ($28))|0;
    HEAP32[$3>>2] = $30;
    $31 = (((21072 + (($12*12)|0)|0)) + 4|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (((21072 + (($17*12)|0)|0)) + 4|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (($34) - ($32))|0;
    $36 = $35 >> 16;
    $37 = Math_imul($36, $18)|0;
    $38 = $35 & 65535;
    $39 = Math_imul($38, $18)|0;
    $40 = $39 >> 16;
    $41 = (($37) + ($32))|0;
    $42 = (($41) + ($40))|0;
    $43 = ((($3)) + 4|0);
    HEAP32[$43>>2] = $42;
    $44 = (((21072 + (($12*12)|0)|0)) + 8|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (((21072 + (($17*12)|0)|0)) + 8|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = (($47) - ($45))|0;
    $49 = $48 >> 16;
    $50 = Math_imul($49, $18)|0;
    $51 = $48 & 65535;
    $52 = Math_imul($51, $18)|0;
    $53 = $52 >> 16;
    $54 = (($50) + ($45))|0;
    $55 = (($54) + ($53))|0;
    $56 = ((($3)) + 8|0);
    HEAP32[$56>>2] = $55;
    $57 = (21136 + ($12<<3)|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = (21136 + ($17<<3)|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (($60) - ($58))|0;
    $62 = $61 >> 16;
    $63 = Math_imul($62, $18)|0;
    $64 = $61 & 65535;
    $65 = Math_imul($64, $18)|0;
    $66 = $65 >> 16;
    $67 = (($63) + ($58))|0;
    $68 = (($67) + ($66))|0;
    HEAP32[$4>>2] = $68;
    $69 = (((21136 + ($12<<3)|0)) + 4|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = (((21136 + ($17<<3)|0)) + 4|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (($72) - ($70))|0;
    $74 = $73 >> 16;
    $75 = Math_imul($74, $18)|0;
    $76 = $73 & 65535;
    $77 = Math_imul($76, $18)|0;
    $78 = $77 >> 16;
    $79 = (($75) + ($70))|0;
    $80 = (($79) + ($78))|0;
    $81 = ((($4)) + 4|0);
    HEAP32[$81>>2] = $80;
    break;
   } else {
    $82 = (21072 + (($17*12)|0)|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = (21072 + (($12*12)|0)|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = (($83) - ($85))|0;
    $87 = $86 >> 16;
    $88 = Math_imul($87, $18)|0;
    $89 = $86 & 65535;
    $90 = Math_imul($89, $18)|0;
    $91 = $90 >> 16;
    $92 = (($88) + ($83))|0;
    $93 = (($92) + ($91))|0;
    HEAP32[$3>>2] = $93;
    $94 = (((21072 + (($17*12)|0)|0)) + 4|0);
    $95 = HEAP32[$94>>2]|0;
    $96 = (((21072 + (($12*12)|0)|0)) + 4|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = (($95) - ($97))|0;
    $99 = $98 >> 16;
    $100 = Math_imul($99, $18)|0;
    $101 = $98 & 65535;
    $102 = Math_imul($101, $18)|0;
    $103 = $102 >> 16;
    $104 = (($100) + ($95))|0;
    $105 = (($104) + ($103))|0;
    $106 = ((($3)) + 4|0);
    HEAP32[$106>>2] = $105;
    $107 = (((21072 + (($17*12)|0)|0)) + 8|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = (((21072 + (($12*12)|0)|0)) + 8|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = (($108) - ($110))|0;
    $112 = $111 >> 16;
    $113 = Math_imul($112, $18)|0;
    $114 = $111 & 65535;
    $115 = Math_imul($114, $18)|0;
    $116 = $115 >> 16;
    $117 = (($113) + ($108))|0;
    $118 = (($117) + ($116))|0;
    $119 = ((($3)) + 8|0);
    HEAP32[$119>>2] = $118;
    $120 = (21136 + ($17<<3)|0);
    $121 = HEAP32[$120>>2]|0;
    $122 = (21136 + ($12<<3)|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (($121) - ($123))|0;
    $125 = $124 >> 16;
    $126 = Math_imul($125, $18)|0;
    $127 = $124 & 65535;
    $128 = Math_imul($127, $18)|0;
    $129 = $128 >> 16;
    $130 = (($126) + ($121))|0;
    $131 = (($130) + ($129))|0;
    HEAP32[$4>>2] = $131;
    $132 = (((21136 + ($17<<3)|0)) + 4|0);
    $133 = HEAP32[$132>>2]|0;
    $134 = (((21136 + ($12<<3)|0)) + 4|0);
    $135 = HEAP32[$134>>2]|0;
    $136 = (($133) - ($135))|0;
    $137 = $136 >> 16;
    $138 = Math_imul($137, $18)|0;
    $139 = $136 & 65535;
    $140 = Math_imul($139, $18)|0;
    $141 = $140 >> 16;
    $142 = (($138) + ($133))|0;
    $143 = (($142) + ($141))|0;
    $144 = ((($4)) + 4|0);
    HEAP32[$144>>2] = $143;
    break;
   }
  } else {
   ;HEAP32[$3>>2]=HEAP32[(21120)>>2]|0;HEAP32[$3+4>>2]=HEAP32[(21120)+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[(21120)+8>>2]|0;
   $157 = (21168);
   $158 = $157;
   $159 = HEAP32[$158>>2]|0;
   $160 = (($157) + 4)|0;
   $161 = $160;
   $162 = HEAP32[$161>>2]|0;
   $163 = $4;
   $164 = $163;
   HEAP32[$164>>2] = $159;
   $165 = (($163) + 4)|0;
   $166 = $165;
   HEAP32[$166>>2] = $162;
  }
 } while(0);
 $167 = (($9) + ($6))|0;
 $168 = ($167|0)>(0);
 $spec$select = $168 ? $167 : 0;
 $169 = ($spec$select|0)<(256);
 $170 = $169 ? $spec$select : 256;
 HEAP32[$8>>2] = $170;
 _silk_biquad_alt_stride1($1,$3,$4,$0,$1,$2);
 STACKTOP = sp;return;
}
function _silk_NLSF_decode($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$02326$i = 0, $$027$i = 0, $$027$in$i = 0, $$033 = 0, $$1$i = 0, $$lcssa = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, $sext$i = 0;
 var $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $3 = sp + 64|0;
 $4 = sp + 32|0;
 $5 = sp;
 $6 = HEAP8[$1>>0]|0;
 $7 = $6 << 24 >> 24;
 _silk_NLSF_unpack($4,$3,$2,$7);
 $8 = ((($2)) + 2|0);
 $9 = HEAP16[$8>>1]|0;
 $10 = ($9<<16>>16)>(0);
 if ($10) {
  $11 = ((($2)) + 4|0);
  $12 = HEAP16[$11>>1]|0;
  $13 = $9 << 16 >> 16;
  $14 = $12 << 16 >> 16;
  $$02326$i = 0;$$027$in$i = $13;
  while(1) {
   $$027$i = (($$027$in$i) + -1)|0;
   $sext$i = $$02326$i << 16;
   $15 = $sext$i >> 16;
   $16 = (($3) + ($$027$i)|0);
   $17 = HEAP8[$16>>0]|0;
   $18 = $17&255;
   $19 = Math_imul($15, $18)|0;
   $20 = $19 >> 8;
   $21 = (($1) + ($$027$in$i)|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = $22 << 24 >> 24;
   $24 = $23 << 10;
   $25 = ($22<<24>>24)>(0);
   if ($25) {
    $26 = (($24) + -102)|0;
    $$1$i = $26;
   } else {
    $27 = ($22<<24>>24)==(0);
    $28 = $24 | 102;
    $spec$select$i = $27 ? $24 : $28;
    $$1$i = $spec$select$i;
   }
   $29 = $$1$i >> 16;
   $30 = Math_imul($29, $14)|0;
   $31 = $$1$i & 65535;
   $32 = Math_imul($31, $14)|0;
   $33 = $32 >> 16;
   $34 = (($30) + ($20))|0;
   $35 = (($34) + ($33))|0;
   $36 = $35&65535;
   $37 = (($5) + ($$027$i<<1)|0);
   HEAP16[$37>>1] = $36;
   $38 = ($$027$in$i|0)>(1);
   if ($38) {
    $$02326$i = $35;$$027$in$i = $$027$i;
   } else {
    $$pre$phiZ2D = $13;
    break;
   }
  }
 } else {
  $$pre = $9 << 16 >> 16;
  $$pre$phiZ2D = $$pre;
 }
 $39 = ((($2)) + 8|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = HEAP8[$1>>0]|0;
 $42 = $41 << 24 >> 24;
 $43 = Math_imul($$pre$phiZ2D, $42)|0;
 $44 = (($40) + ($43)|0);
 $45 = ((($2)) + 12|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = (($46) + ($43<<1)|0);
 if (!($10)) {
  $$lcssa = $$pre$phiZ2D;
  $72 = ((($2)) + 36|0);
  $73 = HEAP32[$72>>2]|0;
  _silk_NLSF_stabilize($0,$73,$$lcssa);
  STACKTOP = sp;return;
 }
 $$033 = 0;
 while(1) {
  $48 = (($5) + ($$033<<1)|0);
  $49 = HEAP16[$48>>1]|0;
  $50 = $49 << 16 >> 16;
  $51 = $50 << 14;
  $52 = (($47) + ($$033<<1)|0);
  $53 = HEAP16[$52>>1]|0;
  $54 = $53 << 16 >> 16;
  $55 = (($51|0) / ($54|0))&-1;
  $56 = (($44) + ($$033)|0);
  $57 = HEAP8[$56>>0]|0;
  $58 = $57&255;
  $59 = $58 << 7;
  $60 = (($59) + ($55))|0;
  $61 = ($60|0)>(0);
  $62 = $61 ? $60 : 0;
  $63 = ($62|0)<(32767);
  $64 = $63 ? $62 : 32767;
  $65 = $64&65535;
  $66 = (($0) + ($$033<<1)|0);
  HEAP16[$66>>1] = $65;
  $67 = (($$033) + 1)|0;
  $68 = HEAP16[$8>>1]|0;
  $69 = $68 << 16 >> 16;
  $70 = ($67|0)<($69|0);
  if ($70) {
   $$033 = $67;
  } else {
   break;
  }
 }
 $71 = $68 << 16 >> 16;
 $$lcssa = $71;
 $72 = ((($2)) + 36|0);
 $73 = HEAP32[$72>>2]|0;
 _silk_NLSF_stabilize($0,$73,$$lcssa);
 STACKTOP = sp;return;
}
function _silk_NSQ_c($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 $13 = $13|0;
 $14 = $14|0;
 var $$ = 0, $$0$i$i = 0, $$0119138 = 0, $$0120136 = 0, $$0121135 = 0, $$0122134 = 0, $$0131$i = 0, $$0140 = 0, $$0153$i = 0, $$025326$i = 0, $$025425$i = 0, $$025624$i = 0, $$0257$i = 0, $$0258$i = 0, $$0258$in$i = 0, $$0258$in$in$i = 0, $$0262$i = 0, $$0263$i = 0, $$0264$i = 0, $$0265$i = 0;
 var $$0266$i = 0, $$027$i = 0, $$03$i$i = 0, $$055$lcssa$i$i = 0, $$0552$i$i = 0, $$056$lcssa$i$i = 0, $$0561$i$i = 0, $$1 = 0, $$1$i = 0, $$1$i$i = 0, $$1$i141$i = 0, $$1150$i = 0, $$1255$i = 0, $$1261$i = 0, $$1261$in$i = 0, $$126120$i = 0, $$167 = 0, $$168 = 0, $$169 = 0, $$170 = 0;
 var $$2148$i = 0, $$3147$i = 0, $$5145$i = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul3 = 0, $$lcssa133 = 0, $$lobit$i = 0, $$neg$i$i = 0, $$pre = 0, $$pre$i = 0, $$pre146 = 0, $$pre147 = 0, $$pre148 = 0, $$pre149 = 0, $$pre150 = 0, $$val$i = 0, $100 = 0, $1000 = 0, $1001 = 0;
 var $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0;
 var $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0;
 var $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0;
 var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0;
 var $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0;
 var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;
 var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0;
 var $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0;
 var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;
 var $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0;
 var $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0;
 var $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0;
 var $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0;
 var $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0;
 var $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0;
 var $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0;
 var $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0;
 var $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0;
 var $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0;
 var $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0;
 var $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0;
 var $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0;
 var $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0;
 var $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0;
 var $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0;
 var $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0;
 var $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0;
 var $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i127 = 0, $exitcond144 = 0, $exitcond145 = 0, $sext$i = 0, $sext$i$i = 0, $sext$i124 = 0, $sext1$i = 0, $sext11$i = 0;
 var $sext13$i = 0, $sext132$i = 0, $sext133$i = 0, $sext134$1$i = 0, $sext134$10$i = 0, $sext134$11$i = 0, $sext134$12$i = 0, $sext134$13$i = 0, $sext134$14$i = 0, $sext134$15$i = 0, $sext134$2$i = 0, $sext134$3$i = 0, $sext134$4$i = 0, $sext134$5$i = 0, $sext134$6$i = 0, $sext134$7$i = 0, $sext134$8$i = 0, $sext134$9$i = 0, $sext134$i = 0, $sext135$i = 0;
 var $sext136$i = 0, $sext137$i = 0, $sext138$i = 0, $sext14$i = 0, $sext15$i = 0, $sext16$i = 0, $sext17$i = 0, $sext2$i = 0, $sext4$i = 0, $sext5$i = 0, $sext6$i = 0, $sext7$i = 0, $sext8$i = 0, $spec$select$i = 0, $spec$select$i$i = 0, $spec$select$i126 = 0, $spec$select$i143$i = 0, $spec$select18$i = 0, $spec$select3$i$i = 0, $spec$select3$i142$i = 0;
 var dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $15 = ((($2)) + 34|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = $16 << 24 >> 24;
 $18 = ((($1)) + 4340|0);
 HEAP32[$18>>2] = $17;
 $19 = ((($1)) + 4328|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($2)) + 29|0);
 $22 = HEAP8[$21>>0]|0;
 $23 = $22 << 24 >> 24;
 $24 = $23 >> 1;
 $25 = ((($2)) + 30|0);
 $26 = HEAP8[$25>>0]|0;
 $27 = $26 << 24 >> 24;
 $28 = ((37356 + ($24<<2)|0) + ($27<<1)|0);
 $29 = HEAP16[$28>>1]|0;
 $30 = $29 << 16 >> 16;
 $31 = ((($2)) + 31|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = ($32<<24>>24)!=(4);
 $$ = $33&1;
 $34 = ((($0)) + 4588|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = ((($0)) + 4580|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = (($37) + ($35))|0;
 $$alloca_mul = $38<<2;
 $39 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $$alloca_mul1 = $38<<1;
 $40 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $41 = ((($0)) + 4584|0);
 $42 = HEAP32[$41>>2]|0;
 $$alloca_mul3 = $42<<2;
 $43 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;
 $44 = ((($1)) + 4336|0);
 HEAP32[$44>>2] = $35;
 $45 = ((($1)) + 4332|0);
 HEAP32[$45>>2] = $35;
 $46 = ((($0)) + 4576|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = ($47|0)>(0);
 if (!($48)) {
  $$lcssa133 = $47;$1020 = $37;$1022 = $35;
  $1016 = (($$lcssa133) + -1)|0;
  $1017 = (($12) + ($1016<<2)|0);
  $1018 = HEAP32[$1017>>2]|0;
  HEAP32[$19>>2] = $1018;
  $1019 = (($1) + ($1020<<1)|0);
  $1021 = $1022 << 1;
  _memmove(($1|0),($1019|0),($1021|0))|0;
  $1023 = ((($1)) + 1280|0);
  $1024 = HEAP32[$36>>2]|0;
  $1025 = (((($1)) + 1280|0) + ($1024<<2)|0);
  $1026 = HEAP32[$34>>2]|0;
  $1027 = $1026 << 2;
  _memmove(($1023|0),($1025|0),($1027|0))|0;
  STACKTOP = sp;return;
 }
 $49 = (($1) + ($35<<1)|0);
 $50 = $$ ^ 1;
 $51 = ((($1)) + 4348|0);
 $52 = $$ << 1;
 $53 = $52 ^ 3;
 $54 = ((($0)) + 4636|0);
 $55 = ((($0)) + 5088|0);
 $56 = ((($1)) + 4344|0);
 $57 = ((($0)) + 4632|0);
 $58 = ((($1)) + 3840|0);
 $sext137$i = $14 << 16;
 $59 = $sext137$i >> 16;
 $60 = ((($1)) + 3900|0);
 $61 = ((($1)) + 4324|0);
 $62 = ((($1)) + 4224|0);
 $63 = ((($1)) + 4320|0);
 $64 = ($13|0)>(2048);
 $65 = $13 >>> 1;
 $66 = (($65) + -512)|0;
 $67 = (512 - ($65))|0;
 $68 = (($30) + -80)|0;
 $sext15$i = $13 << 16;
 $69 = $sext15$i >> 16;
 $70 = (($30) + 944)|0;
 $sext11$i = $30 << 16;
 $71 = Math_imul($69, $30)|0;
 $sext13$i = $70 << 16;
 $72 = $sext13$i >> 16;
 $73 = Math_imul($72, $69)|0;
 $74 = (($30) + -944)|0;
 $sext8$i = (61865984 - ($sext11$i))|0;
 $75 = $sext8$i >> 16;
 $76 = Math_imul($75, $69)|0;
 $77 = ((($1)) + 3840|0);
 $78 = ((($1)) + 3844|0);
 $79 = ((($1)) + 3848|0);
 $80 = ((($1)) + 3852|0);
 $81 = ((($1)) + 3856|0);
 $82 = ((($1)) + 3860|0);
 $83 = ((($1)) + 3864|0);
 $84 = ((($1)) + 3868|0);
 $85 = ((($1)) + 3872|0);
 $86 = ((($1)) + 3876|0);
 $87 = ((($1)) + 3880|0);
 $88 = ((($1)) + 3884|0);
 $89 = ((($1)) + 3888|0);
 $90 = ((($1)) + 3892|0);
 $91 = ((($1)) + 3896|0);
 $$0119138 = $4;$$0120136 = $49;$$0121135 = 0;$$0122134 = $20;$$0140 = $3;$106 = $22;$118 = $42;
 while(1) {
  $92 = $$0121135 >>> 1;
  $93 = $92 | $50;
  $94 = $93 << 4;
  $95 = (($5) + ($94<<1)|0);
  $96 = ($$0121135*5)|0;
  $97 = (($6) + ($96<<1)|0);
  $98 = ($$0121135*24)|0;
  $99 = (($7) + ($98<<1)|0);
  $100 = (($8) + ($$0121135<<2)|0);
  $101 = HEAP32[$100>>2]|0;
  $102 = $101 >> 2;
  $103 = $101 << 15;
  $104 = $102 | $103;
  HEAP32[$51>>2] = 0;
  $105 = ($106<<24>>24)==(2);
  $107 = (($12) + ($$0121135<<2)|0);
  if ($105) {
   $108 = HEAP32[$107>>2]|0;
   $109 = $$0121135 & $53;
   $110 = ($109|0)==(0);
   if ($110) {
    $111 = HEAP32[$34>>2]|0;
    $112 = HEAP32[$54>>2]|0;
    $113 = (-2 - ($108))|0;
    $114 = (($113) + ($111))|0;
    $115 = (($114) - ($112))|0;
    $116 = (($40) + ($115<<1)|0);
    $117 = Math_imul($118, $$0121135)|0;
    $119 = (($117) + ($115))|0;
    $120 = (($1) + ($119<<1)|0);
    $121 = (($111) - ($115))|0;
    $122 = HEAP32[$55>>2]|0;
    _silk_LPC_analysis_filter($116,$120,$95,$121,$112,$122);
    HEAP32[$51>>2] = 1;
    $123 = HEAP32[$34>>2]|0;
    HEAP32[$45>>2] = $123;
    $$pre146 = HEAP8[$21>>0]|0;
    $$1 = $108;$193 = 1;$293 = $$pre146;
   } else {
    $$1 = $108;$193 = 0;$293 = 2;
   }
  } else {
   $$1 = $$0122134;$193 = 0;$293 = $106;
  }
  $124 = HEAP32[$107>>2]|0;
  $125 = (($11) + ($$0121135<<2)|0);
  $126 = HEAP32[$125>>2]|0;
  $127 = ($126|0)>(1);
  $spec$select$i = $127 ? $126 : 1;
  $128 = ($spec$select$i|0)>(0);
  $129 = (0 - ($spec$select$i))|0;
  $130 = $128 ? $spec$select$i : $129;
  $131 = (Math_clz32(($130|0))|0);
  $132 = (($131) + -1)|0;
  $133 = $spec$select$i << $132;
  $134 = $133 >> 16;
  $135 = (536870911 / ($134|0))&-1;
  $136 = $135 << 16;
  $137 = $136 >> 16;
  $138 = Math_imul($134, $137)|0;
  $139 = $133 & 65535;
  $140 = Math_imul($139, $137)|0;
  $141 = $140 >> 16;
  $142 = (($141) + ($138))|0;
  $143 = $142 << 3;
  $144 = (0 - ($143))|0;
  $145 = $144 >> 16;
  $146 = Math_imul($145, $137)|0;
  $147 = $144 & 65528;
  $148 = Math_imul($147, $137)|0;
  $149 = $148 >> 16;
  $150 = $135 >> 15;
  $151 = (($150) + 1)|0;
  $152 = $151 >> 1;
  $153 = Math_imul($152, $144)|0;
  $154 = (($153) + ($136))|0;
  $155 = (($154) + ($146))|0;
  $156 = (($155) + ($149))|0;
  $157 = (62 - ($131))|0;
  $158 = ($157|0)<(48);
  if ($158) {
   $159 = (47 - ($157))|0;
   $160 = -2147483648 >> $159;
   $161 = 2147483647 >>> $159;
   $162 = ($160|0)>($161|0);
   $$167 = $162 ? $160 : $161;
   $$168 = $162 ? $161 : $160;
   $163 = ($156|0)>($$167|0);
   $164 = ($156|0)<($$168|0);
   $$1$i$i = $164 ? $$168 : $156;
   $spec$select3$i$i = $163 ? $$167 : $$1$i$i;
   $165 = $spec$select3$i$i << $159;
   $170 = $165;
  } else {
   $166 = (($157) + -47)|0;
   $167 = ($157|0)<(79);
   $168 = $156 >> $166;
   $spec$select$i$i = $167 ? $168 : 0;
   $170 = $spec$select$i$i;
  }
  $169 = $170 >> 4;
  $171 = (($169) + 1)|0;
  $172 = HEAP32[$41>>2]|0;
  $173 = ($172|0)>(0);
  if ($173) {
   $174 = $171 >>> 1;
   $sext138$i = $174 << 16;
   $175 = $sext138$i >> 16;
   $176 = $171 >> 16;
   $177 = (($176) + 1)|0;
   $178 = $177 >> 1;
   $$0153$i = 0;
   while(1) {
    $179 = (($$0140) + ($$0153$i<<1)|0);
    $180 = HEAP16[$179>>1]|0;
    $181 = $180 << 16 >> 16;
    $182 = $181 >> 16;
    $183 = Math_imul($182, $175)|0;
    $184 = $181 & 65535;
    $185 = Math_imul($184, $175)|0;
    $186 = $185 >> 16;
    $187 = Math_imul($178, $181)|0;
    $188 = (($183) + ($187))|0;
    $189 = (($188) + ($186))|0;
    $190 = (($43) + ($$0153$i<<2)|0);
    HEAP32[$190>>2] = $189;
    $191 = (($$0153$i) + 1)|0;
    $exitcond = ($191|0)==($172|0);
    if ($exitcond) {
     break;
    } else {
     $$0153$i = $191;
    }
   }
  }
  $192 = ($193|0)==(0);
  if (!($192)) {
   $194 = ($$0121135|0)==(0);
   if ($194) {
    $195 = $170 >> 16;
    $196 = Math_imul($195, $59)|0;
    $197 = $170 & 65535;
    $198 = Math_imul($197, $59)|0;
    $199 = $198 >> 16;
    $200 = (($199) + ($196))|0;
    $201 = $200 << 2;
    $$0131$i = $201;
   } else {
    $$0131$i = $170;
   }
   $202 = HEAP32[$45>>2]|0;
   $203 = (-2 - ($124))|0;
   $204 = (($202) + ($203))|0;
   $205 = ($204|0)<($202|0);
   if ($205) {
    $206 = $$0131$i >> 16;
    $207 = $$0131$i & 65535;
    $$1150$i = $204;
    while(1) {
     $208 = (($40) + ($$1150$i<<1)|0);
     $209 = HEAP16[$208>>1]|0;
     $210 = $209 << 16 >> 16;
     $211 = Math_imul($206, $210)|0;
     $212 = Math_imul($207, $210)|0;
     $213 = $212 >> 16;
     $214 = (($213) + ($211))|0;
     $215 = (($39) + ($$1150$i<<2)|0);
     HEAP32[$215>>2] = $214;
     $216 = (($$1150$i) + 1)|0;
     $exitcond144 = ($216|0)==($202|0);
     if ($exitcond144) {
      break;
     } else {
      $$1150$i = $216;
     }
    }
   }
  }
  $217 = HEAP32[$56>>2]|0;
  $218 = ($126|0)==($217|0);
  if ($218) {
   $534 = $172;$538 = $126;
  } else {
   $219 = ($217|0)>(0);
   $220 = (0 - ($217))|0;
   $221 = $219 ? $217 : $220;
   $222 = (Math_clz32(($221|0))|0);
   $223 = (($222) + -1)|0;
   $224 = $217 << $223;
   $225 = ($126|0)>(0);
   $226 = (0 - ($126))|0;
   $227 = $225 ? $126 : $226;
   $228 = (Math_clz32(($227|0))|0);
   $229 = (($228) + -1)|0;
   $230 = $126 << $229;
   $231 = $230 >> 16;
   $232 = (536870911 / ($231|0))&-1;
   $233 = $224 >> 16;
   $sext$i$i = $232 << 16;
   $234 = $sext$i$i >> 16;
   $235 = Math_imul($234, $233)|0;
   $236 = $224 & 65535;
   $237 = Math_imul($234, $236)|0;
   $238 = $237 >> 16;
   $239 = (($238) + ($235))|0;
   $240 = ($230|0)<(0);
   $241 = $240 << 31 >> 31;
   $242 = ($239|0)<(0);
   $243 = $242 << 31 >> 31;
   $244 = (___muldi3(($239|0),($243|0),($230|0),($241|0))|0);
   $245 = tempRet0;
   $246 = (_bitshift64Lshr(($244|0),($245|0),29)|0);
   $247 = tempRet0;
   $248 = $246 & -8;
   $249 = (($224) - ($248))|0;
   $250 = $249 >> 16;
   $251 = Math_imul($250, $234)|0;
   $252 = $249 & 65535;
   $253 = Math_imul($252, $234)|0;
   $254 = $253 >> 16;
   $255 = (($251) + ($239))|0;
   $256 = (($255) + ($254))|0;
   $$neg$i$i = (1 - ($228))|0;
   $257 = (($$neg$i$i) + 28)|0;
   $258 = (($257) + ($222))|0;
   $259 = ($258|0)<(16);
   if ($259) {
    $260 = (16 - ($258))|0;
    $261 = -2147483648 >> $260;
    $262 = 2147483647 >>> $260;
    $263 = ($261|0)>($262|0);
    $$169 = $263 ? $261 : $262;
    $$170 = $263 ? $262 : $261;
    $264 = ($256|0)>($$169|0);
    $265 = ($256|0)<($$170|0);
    $$1$i141$i = $265 ? $$170 : $256;
    $spec$select3$i142$i = $264 ? $$169 : $$1$i141$i;
    $266 = $spec$select3$i142$i << $260;
    $275 = $266;
   } else {
    $267 = (($258) + -16)|0;
    $268 = ($258|0)<(48);
    $269 = $256 >> $267;
    $spec$select$i143$i = $268 ? $269 : 0;
    $275 = $spec$select$i143$i;
   }
   $270 = HEAP32[$34>>2]|0;
   $271 = ($270|0)>(0);
   if ($271) {
    $272 = HEAP32[$44>>2]|0;
    $273 = (($272) - ($270))|0;
    $274 = $275 >> 16;
    $276 = $275 & 65535;
    $$2148$i = $273;
    while(1) {
     $277 = (((($1)) + 1280|0) + ($$2148$i<<2)|0);
     $278 = HEAP32[$277>>2]|0;
     $sext136$i = $278 << 16;
     $279 = $sext136$i >> 16;
     $280 = Math_imul($279, $274)|0;
     $281 = Math_imul($279, $276)|0;
     $282 = $281 >> 16;
     $283 = (($282) + ($280))|0;
     $284 = $278 >> 15;
     $285 = (($284) + 1)|0;
     $286 = $285 >> 1;
     $287 = Math_imul($286, $275)|0;
     $288 = (($283) + ($287))|0;
     HEAP32[$277>>2] = $288;
     $289 = (($$2148$i) + 1)|0;
     $290 = HEAP32[$44>>2]|0;
     $291 = ($289|0)<($290|0);
     if ($291) {
      $$2148$i = $289;
     } else {
      break;
     }
    }
   }
   $292 = ($293<<24>>24)==(2);
   if ($292) {
    $294 = HEAP32[$51>>2]|0;
    $295 = ($294|0)==(0);
    if ($295) {
     $296 = HEAP32[$45>>2]|0;
     $297 = (-2 - ($124))|0;
     $298 = (($296) + ($297))|0;
     $299 = ($298|0)<($296|0);
     if ($299) {
      $300 = $275 >> 16;
      $301 = $275 & 65535;
      $$3147$i = $298;
      while(1) {
       $302 = (($39) + ($$3147$i<<2)|0);
       $303 = HEAP32[$302>>2]|0;
       $sext135$i = $303 << 16;
       $304 = $sext135$i >> 16;
       $305 = Math_imul($304, $300)|0;
       $306 = Math_imul($304, $301)|0;
       $307 = $306 >> 16;
       $308 = (($307) + ($305))|0;
       $309 = $303 >> 15;
       $310 = (($309) + 1)|0;
       $311 = $310 >> 1;
       $312 = Math_imul($311, $275)|0;
       $313 = (($308) + ($312))|0;
       HEAP32[$302>>2] = $313;
       $314 = (($$3147$i) + 1)|0;
       $exitcond145 = ($314|0)==($296|0);
       if ($exitcond145) {
        break;
       } else {
        $$3147$i = $314;
       }
      }
     }
    }
   }
   $315 = $275 >> 16;
   $316 = HEAP32[$63>>2]|0;
   $sext$i = $316 << 16;
   $317 = $sext$i >> 16;
   $318 = Math_imul($317, $315)|0;
   $319 = $275 & 65535;
   $320 = Math_imul($317, $319)|0;
   $321 = $320 >> 16;
   $322 = (($321) + ($318))|0;
   $323 = $316 >> 15;
   $324 = (($323) + 1)|0;
   $325 = $324 >> 1;
   $326 = Math_imul($325, $275)|0;
   $327 = (($322) + ($326))|0;
   HEAP32[$63>>2] = $327;
   $328 = HEAP32[$61>>2]|0;
   $sext132$i = $328 << 16;
   $329 = $sext132$i >> 16;
   $330 = Math_imul($329, $315)|0;
   $331 = Math_imul($329, $319)|0;
   $332 = $331 >> 16;
   $333 = (($332) + ($330))|0;
   $334 = $328 >> 15;
   $335 = (($334) + 1)|0;
   $336 = $335 >> 1;
   $337 = Math_imul($336, $275)|0;
   $338 = (($333) + ($337))|0;
   HEAP32[$61>>2] = $338;
   $339 = HEAP32[$77>>2]|0;
   $sext134$i = $339 << 16;
   $340 = $sext134$i >> 16;
   $341 = Math_imul($340, $315)|0;
   $342 = Math_imul($340, $319)|0;
   $343 = $342 >> 16;
   $344 = (($343) + ($341))|0;
   $345 = $339 >> 15;
   $346 = (($345) + 1)|0;
   $347 = $346 >> 1;
   $348 = Math_imul($347, $275)|0;
   $349 = (($344) + ($348))|0;
   HEAP32[$77>>2] = $349;
   $350 = HEAP32[$78>>2]|0;
   $sext134$1$i = $350 << 16;
   $351 = $sext134$1$i >> 16;
   $352 = Math_imul($351, $315)|0;
   $353 = Math_imul($351, $319)|0;
   $354 = $353 >> 16;
   $355 = (($354) + ($352))|0;
   $356 = $350 >> 15;
   $357 = (($356) + 1)|0;
   $358 = $357 >> 1;
   $359 = Math_imul($358, $275)|0;
   $360 = (($355) + ($359))|0;
   HEAP32[$78>>2] = $360;
   $361 = HEAP32[$79>>2]|0;
   $sext134$2$i = $361 << 16;
   $362 = $sext134$2$i >> 16;
   $363 = Math_imul($362, $315)|0;
   $364 = Math_imul($362, $319)|0;
   $365 = $364 >> 16;
   $366 = (($365) + ($363))|0;
   $367 = $361 >> 15;
   $368 = (($367) + 1)|0;
   $369 = $368 >> 1;
   $370 = Math_imul($369, $275)|0;
   $371 = (($366) + ($370))|0;
   HEAP32[$79>>2] = $371;
   $372 = HEAP32[$80>>2]|0;
   $sext134$3$i = $372 << 16;
   $373 = $sext134$3$i >> 16;
   $374 = Math_imul($373, $315)|0;
   $375 = Math_imul($373, $319)|0;
   $376 = $375 >> 16;
   $377 = (($376) + ($374))|0;
   $378 = $372 >> 15;
   $379 = (($378) + 1)|0;
   $380 = $379 >> 1;
   $381 = Math_imul($380, $275)|0;
   $382 = (($377) + ($381))|0;
   HEAP32[$80>>2] = $382;
   $383 = HEAP32[$81>>2]|0;
   $sext134$4$i = $383 << 16;
   $384 = $sext134$4$i >> 16;
   $385 = Math_imul($384, $315)|0;
   $386 = Math_imul($384, $319)|0;
   $387 = $386 >> 16;
   $388 = (($387) + ($385))|0;
   $389 = $383 >> 15;
   $390 = (($389) + 1)|0;
   $391 = $390 >> 1;
   $392 = Math_imul($391, $275)|0;
   $393 = (($388) + ($392))|0;
   HEAP32[$81>>2] = $393;
   $394 = HEAP32[$82>>2]|0;
   $sext134$5$i = $394 << 16;
   $395 = $sext134$5$i >> 16;
   $396 = Math_imul($395, $315)|0;
   $397 = Math_imul($395, $319)|0;
   $398 = $397 >> 16;
   $399 = (($398) + ($396))|0;
   $400 = $394 >> 15;
   $401 = (($400) + 1)|0;
   $402 = $401 >> 1;
   $403 = Math_imul($402, $275)|0;
   $404 = (($399) + ($403))|0;
   HEAP32[$82>>2] = $404;
   $405 = HEAP32[$83>>2]|0;
   $sext134$6$i = $405 << 16;
   $406 = $sext134$6$i >> 16;
   $407 = Math_imul($406, $315)|0;
   $408 = Math_imul($406, $319)|0;
   $409 = $408 >> 16;
   $410 = (($409) + ($407))|0;
   $411 = $405 >> 15;
   $412 = (($411) + 1)|0;
   $413 = $412 >> 1;
   $414 = Math_imul($413, $275)|0;
   $415 = (($410) + ($414))|0;
   HEAP32[$83>>2] = $415;
   $416 = HEAP32[$84>>2]|0;
   $sext134$7$i = $416 << 16;
   $417 = $sext134$7$i >> 16;
   $418 = Math_imul($417, $315)|0;
   $419 = Math_imul($417, $319)|0;
   $420 = $419 >> 16;
   $421 = (($420) + ($418))|0;
   $422 = $416 >> 15;
   $423 = (($422) + 1)|0;
   $424 = $423 >> 1;
   $425 = Math_imul($424, $275)|0;
   $426 = (($421) + ($425))|0;
   HEAP32[$84>>2] = $426;
   $427 = HEAP32[$85>>2]|0;
   $sext134$8$i = $427 << 16;
   $428 = $sext134$8$i >> 16;
   $429 = Math_imul($428, $315)|0;
   $430 = Math_imul($428, $319)|0;
   $431 = $430 >> 16;
   $432 = (($431) + ($429))|0;
   $433 = $427 >> 15;
   $434 = (($433) + 1)|0;
   $435 = $434 >> 1;
   $436 = Math_imul($435, $275)|0;
   $437 = (($432) + ($436))|0;
   HEAP32[$85>>2] = $437;
   $438 = HEAP32[$86>>2]|0;
   $sext134$9$i = $438 << 16;
   $439 = $sext134$9$i >> 16;
   $440 = Math_imul($439, $315)|0;
   $441 = Math_imul($439, $319)|0;
   $442 = $441 >> 16;
   $443 = (($442) + ($440))|0;
   $444 = $438 >> 15;
   $445 = (($444) + 1)|0;
   $446 = $445 >> 1;
   $447 = Math_imul($446, $275)|0;
   $448 = (($443) + ($447))|0;
   HEAP32[$86>>2] = $448;
   $449 = HEAP32[$87>>2]|0;
   $sext134$10$i = $449 << 16;
   $450 = $sext134$10$i >> 16;
   $451 = Math_imul($450, $315)|0;
   $452 = Math_imul($450, $319)|0;
   $453 = $452 >> 16;
   $454 = (($453) + ($451))|0;
   $455 = $449 >> 15;
   $456 = (($455) + 1)|0;
   $457 = $456 >> 1;
   $458 = Math_imul($457, $275)|0;
   $459 = (($454) + ($458))|0;
   HEAP32[$87>>2] = $459;
   $460 = HEAP32[$88>>2]|0;
   $sext134$11$i = $460 << 16;
   $461 = $sext134$11$i >> 16;
   $462 = Math_imul($461, $315)|0;
   $463 = Math_imul($461, $319)|0;
   $464 = $463 >> 16;
   $465 = (($464) + ($462))|0;
   $466 = $460 >> 15;
   $467 = (($466) + 1)|0;
   $468 = $467 >> 1;
   $469 = Math_imul($468, $275)|0;
   $470 = (($465) + ($469))|0;
   HEAP32[$88>>2] = $470;
   $471 = HEAP32[$89>>2]|0;
   $sext134$12$i = $471 << 16;
   $472 = $sext134$12$i >> 16;
   $473 = Math_imul($472, $315)|0;
   $474 = Math_imul($472, $319)|0;
   $475 = $474 >> 16;
   $476 = (($475) + ($473))|0;
   $477 = $471 >> 15;
   $478 = (($477) + 1)|0;
   $479 = $478 >> 1;
   $480 = Math_imul($479, $275)|0;
   $481 = (($476) + ($480))|0;
   HEAP32[$89>>2] = $481;
   $482 = HEAP32[$90>>2]|0;
   $sext134$13$i = $482 << 16;
   $483 = $sext134$13$i >> 16;
   $484 = Math_imul($483, $315)|0;
   $485 = Math_imul($483, $319)|0;
   $486 = $485 >> 16;
   $487 = (($486) + ($484))|0;
   $488 = $482 >> 15;
   $489 = (($488) + 1)|0;
   $490 = $489 >> 1;
   $491 = Math_imul($490, $275)|0;
   $492 = (($487) + ($491))|0;
   HEAP32[$90>>2] = $492;
   $493 = HEAP32[$91>>2]|0;
   $sext134$14$i = $493 << 16;
   $494 = $sext134$14$i >> 16;
   $495 = Math_imul($494, $315)|0;
   $496 = Math_imul($494, $319)|0;
   $497 = $496 >> 16;
   $498 = (($497) + ($495))|0;
   $499 = $493 >> 15;
   $500 = (($499) + 1)|0;
   $501 = $500 >> 1;
   $502 = Math_imul($501, $275)|0;
   $503 = (($498) + ($502))|0;
   HEAP32[$91>>2] = $503;
   $504 = HEAP32[$60>>2]|0;
   $sext134$15$i = $504 << 16;
   $505 = $sext134$15$i >> 16;
   $506 = Math_imul($505, $315)|0;
   $507 = Math_imul($505, $319)|0;
   $508 = $507 >> 16;
   $509 = (($508) + ($506))|0;
   $510 = $504 >> 15;
   $511 = (($510) + 1)|0;
   $512 = $511 >> 1;
   $513 = Math_imul($512, $275)|0;
   $514 = (($509) + ($513))|0;
   HEAP32[$60>>2] = $514;
   $$5145$i = 0;
   while(1) {
    $515 = (((($1)) + 4224|0) + ($$5145$i<<2)|0);
    $516 = HEAP32[$515>>2]|0;
    $sext133$i = $516 << 16;
    $517 = $sext133$i >> 16;
    $518 = Math_imul($517, $315)|0;
    $519 = Math_imul($517, $319)|0;
    $520 = $519 >> 16;
    $521 = (($520) + ($518))|0;
    $522 = $516 >> 15;
    $523 = (($522) + 1)|0;
    $524 = $523 >> 1;
    $525 = Math_imul($524, $275)|0;
    $526 = (($521) + ($525))|0;
    HEAP32[$515>>2] = $526;
    $527 = (($$5145$i) + 1)|0;
    $exitcond$i = ($527|0)==(24);
    if ($exitcond$i) {
     break;
    } else {
     $$5145$i = $527;
    }
   }
   $528 = HEAP32[$125>>2]|0;
   HEAP32[$56>>2] = $528;
   $$pre147 = HEAP32[$125>>2]|0;
   $$pre148 = HEAP32[$41>>2]|0;
   $534 = $$pre148;$538 = $$pre147;
  }
  $529 = (($10) + ($$0121135<<2)|0);
  $530 = HEAP32[$529>>2]|0;
  $531 = HEAP32[$57>>2]|0;
  $532 = HEAP32[$54>>2]|0;
  $533 = ($534|0)>(0);
  if ($533) {
   $535 = (($9) + ($$0121135<<2)|0);
   $536 = HEAP32[$535>>2]|0;
   $537 = $538 >>> 6;
   $539 = (2 - ($$1))|0;
   $540 = HEAP32[$45>>2]|0;
   $541 = (($539) + ($540))|0;
   $542 = (($39) + ($541<<2)|0);
   $543 = (1 - ($$1))|0;
   $544 = HEAP32[$44>>2]|0;
   $545 = (($543) + ($544))|0;
   $546 = (((($1)) + 1280|0) + ($545<<2)|0);
   $547 = $532 >> 1;
   $548 = ((($95)) + 2|0);
   $549 = ((($95)) + 4|0);
   $550 = ((($95)) + 6|0);
   $551 = ((($95)) + 8|0);
   $552 = ((($95)) + 10|0);
   $553 = ((($95)) + 12|0);
   $554 = ((($95)) + 14|0);
   $555 = ((($95)) + 16|0);
   $556 = ((($95)) + 18|0);
   $557 = ($532|0)==(16);
   $558 = ((($95)) + 20|0);
   $559 = ((($95)) + 22|0);
   $560 = ((($95)) + 24|0);
   $561 = ((($95)) + 26|0);
   $562 = ((($95)) + 28|0);
   $563 = ((($95)) + 30|0);
   $564 = ($293<<24>>24)==(2);
   $565 = ((($97)) + 2|0);
   $566 = ((($97)) + 4|0);
   $567 = ((($97)) + 6|0);
   $568 = ((($97)) + 8|0);
   $569 = $531 >> 1;
   $570 = ($531|0)>(2);
   $571 = (($531) + -1)|0;
   $572 = (((($1)) + 4224|0) + ($571<<2)|0);
   $573 = (($99) + ($571<<1)|0);
   $sext$i124 = $536 << 16;
   $574 = $sext$i124 >> 16;
   $sext1$i = $530 << 16;
   $575 = $sext1$i >> 16;
   $576 = $530 >> 16;
   $577 = ($$1|0)>(0);
   $sext17$i = $102 << 16;
   $578 = $sext17$i >> 16;
   $579 = $104 >> 16;
   $sext7$i = $537 << 16;
   $580 = $sext7$i >> 16;
   $581 = $538 >> 21;
   $582 = (($581) + 1)|0;
   $583 = $582 >> 1;
   $$pre$i = HEAP32[$18>>2]|0;
   $$025326$i = $542;$$025425$i = $546;$$025624$i = $60;$$027$i = 0;$585 = $$pre$i;
   while(1) {
    $584 = Math_imul($585, 196314165)|0;
    $586 = (($584) + 907633515)|0;
    HEAP32[$18>>2] = $586;
    $587 = HEAP32[$$025624$i>>2]|0;
    $588 = $587 >> 16;
    $589 = HEAP16[$95>>1]|0;
    $590 = $589 << 16 >> 16;
    $591 = Math_imul($588, $590)|0;
    $592 = $587 & 65535;
    $593 = Math_imul($592, $590)|0;
    $594 = $593 >> 16;
    $595 = ((($$025624$i)) + -4|0);
    $596 = HEAP32[$595>>2]|0;
    $597 = $596 >> 16;
    $598 = HEAP16[$548>>1]|0;
    $599 = $598 << 16 >> 16;
    $600 = Math_imul($597, $599)|0;
    $601 = $596 & 65535;
    $602 = Math_imul($601, $599)|0;
    $603 = $602 >> 16;
    $604 = ((($$025624$i)) + -8|0);
    $605 = HEAP32[$604>>2]|0;
    $606 = $605 >> 16;
    $607 = HEAP16[$549>>1]|0;
    $608 = $607 << 16 >> 16;
    $609 = Math_imul($606, $608)|0;
    $610 = $605 & 65535;
    $611 = Math_imul($610, $608)|0;
    $612 = $611 >> 16;
    $613 = ((($$025624$i)) + -12|0);
    $614 = HEAP32[$613>>2]|0;
    $615 = $614 >> 16;
    $616 = HEAP16[$550>>1]|0;
    $617 = $616 << 16 >> 16;
    $618 = Math_imul($615, $617)|0;
    $619 = $614 & 65535;
    $620 = Math_imul($619, $617)|0;
    $621 = $620 >> 16;
    $622 = ((($$025624$i)) + -16|0);
    $623 = HEAP32[$622>>2]|0;
    $624 = $623 >> 16;
    $625 = HEAP16[$551>>1]|0;
    $626 = $625 << 16 >> 16;
    $627 = Math_imul($624, $626)|0;
    $628 = $623 & 65535;
    $629 = Math_imul($628, $626)|0;
    $630 = $629 >> 16;
    $631 = ((($$025624$i)) + -20|0);
    $632 = HEAP32[$631>>2]|0;
    $633 = $632 >> 16;
    $634 = HEAP16[$552>>1]|0;
    $635 = $634 << 16 >> 16;
    $636 = Math_imul($633, $635)|0;
    $637 = $632 & 65535;
    $638 = Math_imul($637, $635)|0;
    $639 = $638 >> 16;
    $640 = ((($$025624$i)) + -24|0);
    $641 = HEAP32[$640>>2]|0;
    $642 = $641 >> 16;
    $643 = HEAP16[$553>>1]|0;
    $644 = $643 << 16 >> 16;
    $645 = Math_imul($642, $644)|0;
    $646 = $641 & 65535;
    $647 = Math_imul($646, $644)|0;
    $648 = $647 >> 16;
    $649 = ((($$025624$i)) + -28|0);
    $650 = HEAP32[$649>>2]|0;
    $651 = $650 >> 16;
    $652 = HEAP16[$554>>1]|0;
    $653 = $652 << 16 >> 16;
    $654 = Math_imul($651, $653)|0;
    $655 = $650 & 65535;
    $656 = Math_imul($655, $653)|0;
    $657 = $656 >> 16;
    $658 = ((($$025624$i)) + -32|0);
    $659 = HEAP32[$658>>2]|0;
    $660 = $659 >> 16;
    $661 = HEAP16[$555>>1]|0;
    $662 = $661 << 16 >> 16;
    $663 = Math_imul($660, $662)|0;
    $664 = $659 & 65535;
    $665 = Math_imul($664, $662)|0;
    $666 = $665 >> 16;
    $667 = ((($$025624$i)) + -36|0);
    $668 = HEAP32[$667>>2]|0;
    $669 = $668 >> 16;
    $670 = HEAP16[$556>>1]|0;
    $671 = $670 << 16 >> 16;
    $672 = Math_imul($669, $671)|0;
    $673 = $668 & 65535;
    $674 = Math_imul($673, $671)|0;
    $675 = $674 >> 16;
    $676 = (($591) + ($547))|0;
    $677 = (($676) + ($594))|0;
    $678 = (($677) + ($600))|0;
    $679 = (($678) + ($603))|0;
    $680 = (($679) + ($609))|0;
    $681 = (($680) + ($612))|0;
    $682 = (($681) + ($618))|0;
    $683 = (($682) + ($621))|0;
    $684 = (($683) + ($627))|0;
    $685 = (($684) + ($630))|0;
    $686 = (($685) + ($636))|0;
    $687 = (($686) + ($639))|0;
    $688 = (($687) + ($645))|0;
    $689 = (($688) + ($648))|0;
    $690 = (($689) + ($654))|0;
    $691 = (($690) + ($657))|0;
    $692 = (($691) + ($663))|0;
    $693 = (($692) + ($666))|0;
    $694 = (($693) + ($672))|0;
    $695 = (($694) + ($675))|0;
    if ($557) {
     $696 = ((($$025624$i)) + -40|0);
     $697 = HEAP32[$696>>2]|0;
     $698 = $697 >> 16;
     $699 = HEAP16[$558>>1]|0;
     $700 = $699 << 16 >> 16;
     $701 = Math_imul($698, $700)|0;
     $702 = $697 & 65535;
     $703 = Math_imul($702, $700)|0;
     $704 = $703 >> 16;
     $705 = ((($$025624$i)) + -44|0);
     $706 = HEAP32[$705>>2]|0;
     $707 = $706 >> 16;
     $708 = HEAP16[$559>>1]|0;
     $709 = $708 << 16 >> 16;
     $710 = Math_imul($707, $709)|0;
     $711 = $706 & 65535;
     $712 = Math_imul($711, $709)|0;
     $713 = $712 >> 16;
     $714 = ((($$025624$i)) + -48|0);
     $715 = HEAP32[$714>>2]|0;
     $716 = $715 >> 16;
     $717 = HEAP16[$560>>1]|0;
     $718 = $717 << 16 >> 16;
     $719 = Math_imul($716, $718)|0;
     $720 = $715 & 65535;
     $721 = Math_imul($720, $718)|0;
     $722 = $721 >> 16;
     $723 = ((($$025624$i)) + -52|0);
     $724 = HEAP32[$723>>2]|0;
     $725 = $724 >> 16;
     $726 = HEAP16[$561>>1]|0;
     $727 = $726 << 16 >> 16;
     $728 = Math_imul($725, $727)|0;
     $729 = $724 & 65535;
     $730 = Math_imul($729, $727)|0;
     $731 = $730 >> 16;
     $732 = ((($$025624$i)) + -56|0);
     $733 = HEAP32[$732>>2]|0;
     $734 = $733 >> 16;
     $735 = HEAP16[$562>>1]|0;
     $736 = $735 << 16 >> 16;
     $737 = Math_imul($734, $736)|0;
     $738 = $733 & 65535;
     $739 = Math_imul($738, $736)|0;
     $740 = $739 >> 16;
     $741 = ((($$025624$i)) + -60|0);
     $742 = HEAP32[$741>>2]|0;
     $743 = $742 >> 16;
     $744 = HEAP16[$563>>1]|0;
     $745 = $744 << 16 >> 16;
     $746 = Math_imul($743, $745)|0;
     $747 = $742 & 65535;
     $748 = Math_imul($747, $745)|0;
     $749 = $748 >> 16;
     $750 = (($701) + ($695))|0;
     $751 = (($750) + ($704))|0;
     $752 = (($751) + ($710))|0;
     $753 = (($752) + ($713))|0;
     $754 = (($753) + ($719))|0;
     $755 = (($754) + ($722))|0;
     $756 = (($755) + ($728))|0;
     $757 = (($756) + ($731))|0;
     $758 = (($757) + ($737))|0;
     $759 = (($758) + ($740))|0;
     $760 = (($759) + ($746))|0;
     $761 = (($760) + ($749))|0;
     $$0$i$i = $761;
    } else {
     $$0$i$i = $695;
    }
    if ($564) {
     $762 = HEAP32[$$025326$i>>2]|0;
     $763 = $762 >> 16;
     $764 = HEAP16[$97>>1]|0;
     $765 = $764 << 16 >> 16;
     $766 = Math_imul($763, $765)|0;
     $767 = $762 & 65535;
     $768 = Math_imul($767, $765)|0;
     $769 = $768 >> 16;
     $770 = ((($$025326$i)) + -4|0);
     $771 = HEAP32[$770>>2]|0;
     $772 = $771 >> 16;
     $773 = HEAP16[$565>>1]|0;
     $774 = $773 << 16 >> 16;
     $775 = Math_imul($772, $774)|0;
     $776 = $771 & 65535;
     $777 = Math_imul($776, $774)|0;
     $778 = $777 >> 16;
     $779 = ((($$025326$i)) + -8|0);
     $780 = HEAP32[$779>>2]|0;
     $781 = $780 >> 16;
     $782 = HEAP16[$566>>1]|0;
     $783 = $782 << 16 >> 16;
     $784 = Math_imul($781, $783)|0;
     $785 = $780 & 65535;
     $786 = Math_imul($785, $783)|0;
     $787 = $786 >> 16;
     $788 = ((($$025326$i)) + -12|0);
     $789 = HEAP32[$788>>2]|0;
     $790 = $789 >> 16;
     $791 = HEAP16[$567>>1]|0;
     $792 = $791 << 16 >> 16;
     $793 = Math_imul($790, $792)|0;
     $794 = $789 & 65535;
     $795 = Math_imul($794, $792)|0;
     $796 = $795 >> 16;
     $797 = ((($$025326$i)) + -16|0);
     $798 = HEAP32[$797>>2]|0;
     $799 = $798 >> 16;
     $800 = HEAP16[$568>>1]|0;
     $801 = $800 << 16 >> 16;
     $802 = Math_imul($799, $801)|0;
     $803 = $798 & 65535;
     $804 = Math_imul($803, $801)|0;
     $805 = $804 >> 16;
     $806 = (($766) + 2)|0;
     $807 = (($806) + ($769))|0;
     $808 = (($807) + ($775))|0;
     $809 = (($808) + ($778))|0;
     $810 = (($809) + ($784))|0;
     $811 = (($810) + ($787))|0;
     $812 = (($811) + ($793))|0;
     $813 = (($812) + ($796))|0;
     $814 = (($813) + ($802))|0;
     $815 = (($814) + ($805))|0;
     $816 = ((($$025326$i)) + 4|0);
     $$0257$i = $815;$$1$i = $816;
    } else {
     $$0257$i = 0;$$1$i = $$025326$i;
    }
    $$val$i = HEAP32[$61>>2]|0;
    $817 = HEAP32[$62>>2]|0;
    HEAP32[$62>>2] = $$val$i;
    $818 = $$val$i >> 16;
    $819 = HEAP16[$99>>1]|0;
    $820 = $819 << 16 >> 16;
    $821 = Math_imul($818, $820)|0;
    $822 = $$val$i & 65535;
    $823 = Math_imul($822, $820)|0;
    $824 = $823 >> 16;
    $825 = (($821) + ($569))|0;
    $826 = (($825) + ($824))|0;
    if ($570) {
     $$03$i$i = 2;$$0552$i$i = $817;$$0561$i$i = $826;
     while(1) {
      $827 = (($$03$i$i) + -1)|0;
      $828 = (((($1)) + 4224|0) + ($827<<2)|0);
      $829 = HEAP32[$828>>2]|0;
      HEAP32[$828>>2] = $$0552$i$i;
      $830 = $$0552$i$i >> 16;
      $831 = (($99) + ($827<<1)|0);
      $832 = HEAP16[$831>>1]|0;
      $833 = $832 << 16 >> 16;
      $834 = Math_imul($830, $833)|0;
      $835 = $$0552$i$i & 65535;
      $836 = Math_imul($835, $833)|0;
      $837 = $836 >> 16;
      $838 = (((($1)) + 4224|0) + ($$03$i$i<<2)|0);
      $839 = HEAP32[$838>>2]|0;
      HEAP32[$838>>2] = $829;
      $840 = $829 >> 16;
      $841 = (($99) + ($$03$i$i<<1)|0);
      $842 = HEAP16[$841>>1]|0;
      $843 = $842 << 16 >> 16;
      $844 = Math_imul($840, $843)|0;
      $845 = $829 & 65535;
      $846 = Math_imul($845, $843)|0;
      $847 = $846 >> 16;
      $848 = (($834) + ($$0561$i$i))|0;
      $849 = (($848) + ($837))|0;
      $850 = (($849) + ($844))|0;
      $851 = (($850) + ($847))|0;
      $852 = (($$03$i$i) + 2)|0;
      $853 = ($852|0)<($531|0);
      if ($853) {
       $$03$i$i = $852;$$0552$i$i = $839;$$0561$i$i = $851;
      } else {
       $$055$lcssa$i$i = $839;$$056$lcssa$i$i = $851;
       break;
      }
     }
    } else {
     $$055$lcssa$i$i = $817;$$056$lcssa$i$i = $826;
    }
    HEAP32[$572>>2] = $$055$lcssa$i$i;
    $854 = $$055$lcssa$i$i >> 16;
    $855 = HEAP16[$573>>1]|0;
    $856 = $855 << 16 >> 16;
    $857 = Math_imul($854, $856)|0;
    $858 = $$055$lcssa$i$i & 65535;
    $859 = Math_imul($858, $856)|0;
    $860 = $859 >> 16;
    $861 = (($857) + ($$056$lcssa$i$i))|0;
    $862 = (($861) + ($860))|0;
    $863 = $862 << 1;
    $864 = HEAP32[$63>>2]|0;
    $865 = $864 >> 16;
    $866 = Math_imul($865, $574)|0;
    $867 = $864 & 65535;
    $868 = Math_imul($867, $574)|0;
    $869 = $868 >> 16;
    $870 = (($869) + ($866))|0;
    $871 = (($870) + ($863))|0;
    $872 = HEAP32[$44>>2]|0;
    $873 = (($872) + -1)|0;
    $874 = (((($1)) + 1280|0) + ($873<<2)|0);
    $875 = HEAP32[$874>>2]|0;
    $876 = $875 >> 16;
    $877 = Math_imul($876, $575)|0;
    $878 = $875 & 65535;
    $879 = Math_imul($878, $575)|0;
    $880 = $879 >> 16;
    $881 = Math_imul($865, $576)|0;
    $882 = Math_imul($867, $576)|0;
    $883 = $882 >> 16;
    $884 = (($883) + ($881))|0;
    $885 = (($884) + ($877))|0;
    $886 = (($885) + ($880))|0;
    $887 = $$0$i$i << 2;
    $888 = (($887) - ($871))|0;
    $889 = (($888) - ($886))|0;
    if ($577) {
     $890 = HEAP32[$$025425$i>>2]|0;
     $891 = ((($$025425$i)) + -8|0);
     $892 = HEAP32[$891>>2]|0;
     $893 = (($892) + ($890))|0;
     $894 = $893 >> 16;
     $895 = Math_imul($894, $578)|0;
     $896 = $893 & 65535;
     $897 = Math_imul($896, $578)|0;
     $898 = $897 >> 16;
     $899 = ((($$025425$i)) + -4|0);
     $900 = HEAP32[$899>>2]|0;
     $901 = $900 >> 16;
     $902 = Math_imul($901, $579)|0;
     $903 = $900 & 65535;
     $904 = Math_imul($903, $579)|0;
     $905 = $904 >> 16;
     $906 = (($902) + ($895))|0;
     $907 = (($906) + ($898))|0;
     $908 = (($907) + ($905))|0;
     $909 = $908 << 1;
     $910 = ((($$025425$i)) + 4|0);
     $911 = $889 << 1;
     $912 = (($911) + ($$0257$i))|0;
     $913 = (($912) - ($909))|0;
     $914 = $913 >> 2;
     $$0258$in$in$i = $914;$$1255$i = $910;
    } else {
     $915 = $889 >> 1;
     $$0258$in$in$i = $915;$$1255$i = $$025425$i;
    }
    $$0258$in$i = (($$0258$in$in$i) + 1)|0;
    $$0258$i = $$0258$in$i >> 1;
    $916 = (($43) + ($$027$i<<2)|0);
    $917 = HEAP32[$916>>2]|0;
    $918 = (($917) - ($$0258$i))|0;
    $919 = HEAP32[$18>>2]|0;
    $920 = ($919|0)<(0);
    $921 = (0 - ($918))|0;
    $spec$select$i126 = $920 ? $921 : $918;
    $922 = ($spec$select$i126|0)>(-31744);
    $923 = $922 ? $spec$select$i126 : -31744;
    $924 = ($923|0)<(30720);
    $925 = $924 ? $923 : 30720;
    $926 = (($925) - ($30))|0;
    do {
     if ($64) {
      $927 = ($926|0)>($66|0);
      if ($927) {
       $928 = (($926) - ($66))|0;
       $$1261$in$i = $928;
       label = 51;
       break;
      }
      $929 = ($926|0)<($67|0);
      if ($929) {
       $930 = (($926) + ($66))|0;
       $$1261$in$i = $930;
       label = 51;
       break;
      } else {
       $$lobit$i = $926 >> 31;
       $$126120$i = $$lobit$i;
       label = 53;
       break;
      }
     } else {
      $$1261$in$i = $926;
      label = 51;
     }
    } while(0);
    if ((label|0) == 51) {
     label = 0;
     $$1261$i = $$1261$in$i >> 10;
     $931 = ($$1261$in$i|0)>(1023);
     if ($931) {
      $932 = $$1261$in$i & -1024;
      $933 = (($68) + ($932))|0;
      $934 = (($933) + 1024)|0;
      $sext14$i = $933 << 16;
      $935 = $sext14$i >> 16;
      $936 = Math_imul($935, $69)|0;
      $sext16$i = $934 << 16;
      $937 = $sext16$i >> 16;
      $938 = Math_imul($937, $69)|0;
      $$0263$i = $938;$$0264$i = $936;$$0265$i = $934;$$0266$i = $933;
     } else {
      $$126120$i = $$1261$i;
      label = 53;
     }
    }
    L80: do {
     if ((label|0) == 53) {
      label = 0;
      switch ($$126120$i|0) {
      case 0:  {
       $$0263$i = $73;$$0264$i = $71;$$0265$i = $70;$$0266$i = $30;
       break L80;
       break;
      }
      case -1:  {
       $$0263$i = $71;$$0264$i = $76;$$0265$i = $30;$$0266$i = $74;
       break L80;
       break;
      }
      default: {
       $939 = $$126120$i << 10;
       $940 = $939 | 80;
       $941 = (($940) + ($30))|0;
       $942 = (($941) + 1024)|0;
       $943 = $941 << 16;
       $sext2$i = (0 - ($943))|0;
       $944 = $sext2$i >> 16;
       $945 = Math_imul($944, $69)|0;
       $sext4$i = (-67108864 - ($943))|0;
       $946 = $sext4$i >> 16;
       $947 = Math_imul($946, $69)|0;
       $$0263$i = $947;$$0264$i = $945;$$0265$i = $942;$$0266$i = $941;
       break L80;
      }
      }
     }
    } while(0);
    $948 = (($925) - ($$0266$i))|0;
    $sext5$i = $948 << 16;
    $949 = $sext5$i >> 16;
    $950 = Math_imul($949, $949)|0;
    $951 = (($950) + ($$0264$i))|0;
    $952 = (($925) - ($$0265$i))|0;
    $sext6$i = $952 << 16;
    $953 = $sext6$i >> 16;
    $954 = Math_imul($953, $953)|0;
    $955 = (($954) + ($$0263$i))|0;
    $956 = ($955|0)<($951|0);
    $spec$select18$i = $956 ? $$0265$i : $$0266$i;
    $957 = $spec$select18$i >>> 9;
    $958 = (($957) + 1)|0;
    $959 = $958 >>> 1;
    $960 = $959&255;
    $961 = (($$0119138) + ($$027$i)|0);
    HEAP8[$961>>0] = $960;
    $962 = $spec$select18$i << 4;
    $963 = HEAP32[$18>>2]|0;
    $964 = ($963|0)<(0);
    $965 = (0 - ($962))|0;
    $$0262$i = $964 ? $965 : $962;
    $966 = $$0257$i << 1;
    $967 = (($$0262$i) + ($966))|0;
    $968 = $$0$i$i << 4;
    $969 = (($967) + ($968))|0;
    $970 = $969 >> 16;
    $971 = Math_imul($970, $580)|0;
    $972 = $969 & 65534;
    $973 = Math_imul($972, $580)|0;
    $974 = $973 >> 16;
    $975 = Math_imul($969, $583)|0;
    $976 = (($971) + ($975))|0;
    $977 = (($976) + ($974))|0;
    $978 = $977 >>> 7;
    $979 = (($978) + 1)|0;
    $980 = $979 >>> 1;
    $981 = ($977|0)>(8388479);
    $982 = ($977|0)<(-8388736);
    $983 = $980&65535;
    $984 = $982 ? -32768 : $983;
    $985 = $981 ? 32767 : $984;
    $986 = (($$0120136) + ($$027$i<<1)|0);
    HEAP16[$986>>1] = $985;
    $987 = ((($$025624$i)) + 4|0);
    HEAP32[$987>>2] = $969;
    $988 = HEAP32[$916>>2]|0;
    $989 = $988 << 4;
    $990 = (($969) - ($989))|0;
    HEAP32[$61>>2] = $990;
    $991 = $871 << 2;
    $992 = (($990) - ($991))|0;
    HEAP32[$63>>2] = $992;
    $993 = $886 << 2;
    $994 = (($992) - ($993))|0;
    $995 = HEAP32[$44>>2]|0;
    $996 = (((($1)) + 1280|0) + ($995<<2)|0);
    HEAP32[$996>>2] = $994;
    $997 = $967 << 1;
    $998 = HEAP32[$45>>2]|0;
    $999 = (($39) + ($998<<2)|0);
    HEAP32[$999>>2] = $997;
    $1000 = HEAP32[$44>>2]|0;
    $1001 = (($1000) + 1)|0;
    HEAP32[$44>>2] = $1001;
    $1002 = (($998) + 1)|0;
    HEAP32[$45>>2] = $1002;
    $1003 = HEAP32[$18>>2]|0;
    $1004 = HEAP8[$961>>0]|0;
    $1005 = $1004 << 24 >> 24;
    $1006 = (($1003) + ($1005))|0;
    HEAP32[$18>>2] = $1006;
    $1007 = (($$027$i) + 1)|0;
    $exitcond$i127 = ($1007|0)==($534|0);
    if ($exitcond$i127) {
     break;
    } else {
     $$025326$i = $$1$i;$$025425$i = $$1255$i;$$025624$i = $987;$$027$i = $1007;$585 = $1006;
    }
   }
  }
  $1008 = (((($1)) + 3840|0) + ($534<<2)|0);
  dest=$58; src=$1008; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  $1009 = HEAP32[$41>>2]|0;
  $1010 = (($$0121135) + 1)|0;
  $1011 = HEAP32[$46>>2]|0;
  $1012 = ($1010|0)<($1011|0);
  if (!($1012)) {
   break;
  }
  $1013 = (($$0120136) + ($1009<<1)|0);
  $1014 = (($$0119138) + ($1009)|0);
  $1015 = (($$0140) + ($1009<<1)|0);
  $$pre = HEAP8[$21>>0]|0;
  $$0119138 = $1014;$$0120136 = $1013;$$0121135 = $1010;$$0122134 = $$1;$$0140 = $1015;$106 = $$pre;$118 = $1009;
 }
 $$pre149 = HEAP32[$36>>2]|0;
 $$pre150 = HEAP32[$34>>2]|0;
 $$lcssa133 = $1011;$1020 = $$pre149;$1022 = $$pre150;
 $1016 = (($$lcssa133) + -1)|0;
 $1017 = (($12) + ($1016<<2)|0);
 $1018 = HEAP32[$1017>>2]|0;
 HEAP32[$19>>2] = $1018;
 $1019 = (($1) + ($1020<<1)|0);
 $1021 = $1022 << 1;
 _memmove(($1|0),($1019|0),($1021|0))|0;
 $1023 = ((($1)) + 1280|0);
 $1024 = HEAP32[$36>>2]|0;
 $1025 = (((($1)) + 1280|0) + ($1024<<2)|0);
 $1026 = HEAP32[$34>>2]|0;
 $1027 = $1026 << 2;
 _memmove(($1023|0),($1025|0),($1027|0))|0;
 STACKTOP = sp;return;
}
function _silk_NSQ_del_dec_c($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 $13 = $13|0;
 $14 = $14|0;
 var $$ = 0, $$0165185$i = 0, $$0166$i = 0, $$0195$i = 0, $$0305$lcssa = 0, $$0305374 = 0, $$0306355 = 0, $$0307354 = 0, $$0311$lcssa = 0, $$0311373 = 0, $$0312389 = 0, $$0316370 = 0, $$0319384 = 0, $$0321365 = 0, $$0325369 = 0, $$0328$lcssa = 0, $$0328353 = 0, $$0375 = 0, $$1$i$i = 0, $$1$i178$i = 0;
 var $$1192$i = 0, $$1308361 = 0, $$1313385 = 0, $$1317 = 0, $$1320 = 0, $$1326 = 0, $$2189$i = 0, $$2309366 = 0, $$2314371 = 0, $$2323345 = 0, $$2327 = 0, $$2330$lcssa = 0, $$2330347 = 0, $$2349 = 0, $$3186$i = 0, $$3310346 = 0, $$3315348 = 0, $$432 = 0, $$433 = 0, $$434 = 0;
 var $$435 = 0, $$5183$i = 0, $$6184$i = 0, $$alloca_mul = 0, $$alloca_mul3 = 0, $$alloca_mul5 = 0, $$alloca_mul7 = 0, $$lcssa343 = 0, $$neg$i$i = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre403 = 0, $$pre404 = 0, $$pre405 = 0, $$pre406 = 0, $$pre407 = 0, $$pre408 = 0, $$pre409 = 0, $$pre410 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0;
 var $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0;
 var $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0;
 var $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0;
 var $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0;
 var $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0;
 var $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0;
 var $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0;
 var $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0;
 var $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0;
 var $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0;
 var $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0;
 var $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0;
 var $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0;
 var $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0;
 var $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0;
 var $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0;
 var $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0;
 var $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond198$i = 0, $exitcond199$i = 0, $exitcond397 = 0, $exitcond398 = 0, $exitcond399 = 0, $exitcond400 = 0, $exitcond401 = 0, $exitcond402 = 0, $sext = 0, $sext$i = 0, $sext$i$i = 0, $sext167$i = 0, $sext168$i = 0, $sext169$i = 0;
 var $sext170$i = 0, $sext171$1$i = 0, $sext171$10$i = 0, $sext171$11$i = 0, $sext171$12$i = 0, $sext171$13$i = 0, $sext171$14$i = 0, $sext171$15$i = 0, $sext171$2$i = 0, $sext171$3$i = 0, $sext171$4$i = 0, $sext171$5$i = 0, $sext171$6$i = 0, $sext171$7$i = 0, $sext171$8$i = 0, $sext171$9$i = 0, $sext171$i = 0, $sext172$i = 0, $sext173$i = 0, $sext174$i = 0;
 var $sext175$i = 0, $sext332 = 0, $spec$select = 0, $spec$select$i = 0, $spec$select$i$i = 0, $spec$select$i180$i = 0, $spec$select3$i$i = 0, $spec$select3$i179$i = 0, $spec$select333 = 0, $spec$select334 = 0, $spec$select336 = 0, $spec$select337 = 0, $spec$select338 = 0, $spec$select340 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $15 = sp + 160|0;
 $16 = sp;
 $17 = ((($1)) + 4328|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($0)) + 4624|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (_llvm_stacksave()|0);
 $$alloca_mul = ($20*1300)|0;
 $22 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $23 = HEAP32[$19>>2]|0;
 $24 = ($23*1300)|0;
 _memset(($22|0),0,($24|0))|0;
 $25 = ($23|0)>(0);
 if ($25) {
  $26 = ((($2)) + 34|0);
  $27 = HEAP8[$26>>0]|0;
  $28 = $27&255;
  $29 = ((($1)) + 4320|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ((($1)) + 4324|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ((($0)) + 4588|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = (($34) + -1)|0;
  $36 = (((($1)) + 1280|0) + ($35<<2)|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ((($1)) + 3840|0);
  $39 = ((($1)) + 4224|0);
  $$0312389 = 0;
  while(1) {
   $40 = (($22) + (($$0312389*1300)|0)|0);
   $41 = (($$0312389) + ($28))|0;
   $42 = $41 & 3;
   $43 = (((($22) + (($$0312389*1300)|0)|0)) + 1288|0);
   HEAP32[$43>>2] = $42;
   $44 = (((($22) + (($$0312389*1300)|0)|0)) + 1292|0);
   HEAP32[$44>>2] = $42;
   $45 = (((($22) + (($$0312389*1300)|0)|0)) + 1296|0);
   HEAP32[$45>>2] = 0;
   $46 = (((($22) + (($$0312389*1300)|0)|0)) + 1280|0);
   HEAP32[$46>>2] = $30;
   $47 = (((($22) + (($$0312389*1300)|0)|0)) + 1284|0);
   HEAP32[$47>>2] = $32;
   $48 = (((($22) + (($$0312389*1300)|0)|0)) + 1024|0);
   HEAP32[$48>>2] = $37;
   dest=$40; src=$38; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $49 = (((($22) + (($$0312389*1300)|0)|0)) + 1184|0);
   dest=$49; src=$39; stop=dest+96|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $50 = (($$0312389) + 1)|0;
   $exitcond402 = ($50|0)==($23|0);
   if ($exitcond402) {
    break;
   } else {
    $$0312389 = $50;
   }
  }
 }
 $51 = ((($2)) + 29|0);
 $52 = HEAP8[$51>>0]|0;
 $53 = $52 << 24 >> 24;
 $54 = $53 >> 1;
 $55 = ((($2)) + 30|0);
 $56 = HEAP8[$55>>0]|0;
 $57 = $56 << 24 >> 24;
 $58 = ((37356 + ($54<<2)|0) + ($57<<1)|0);
 $59 = HEAP16[$58>>1]|0;
 $60 = $59 << 16 >> 16;
 HEAP32[$15>>2] = 0;
 $61 = ((($0)) + 4584|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = ($62|0)<(40);
 $64 = $63 ? $62 : 40;
 $65 = ($52<<24>>24)==(2);
 if ($65) {
  $66 = ((($0)) + 4576|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ($67|0)>(0);
  if ($68) {
   $$0319384 = $64;$$1313385 = 0;
   while(1) {
    $69 = (($12) + ($$1313385<<2)|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = (($70) + -3)|0;
    $72 = ($$0319384|0)<($71|0);
    $73 = $72 ? $$0319384 : $71;
    $74 = (($$1313385) + 1)|0;
    $75 = ($74|0)<($67|0);
    if ($75) {
     $$0319384 = $73;$$1313385 = $74;
    } else {
     $$1320 = $73;$$pre$phiZ2D = $66;$95 = $67;
     break;
    }
   }
  } else {
   $$1320 = $64;$$pre$phiZ2D = $66;$95 = $67;
  }
 } else {
  $76 = ($18|0)>(0);
  $77 = (($18) + -3)|0;
  $78 = ($64|0)<($77|0);
  $79 = $78 ? $64 : $77;
  $spec$select340 = $76 ? $79 : $64;
  $$phi$trans$insert = ((($0)) + 4576|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$1320 = $spec$select340;$$pre$phiZ2D = $$phi$trans$insert;$95 = $$pre;
 }
 $80 = ((($2)) + 31|0);
 $81 = HEAP8[$80>>0]|0;
 $82 = ($81<<24>>24)!=(4);
 $$ = $82&1;
 $83 = ((($0)) + 4588|0);
 $84 = HEAP32[$83>>2]|0;
 $85 = ((($0)) + 4580|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = (($86) + ($84))|0;
 $$alloca_mul3 = $87<<2;
 $88 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;
 $$alloca_mul5 = $87<<1;
 $89 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul5)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul5)|0)+15)&-16)|0);;
 $$alloca_mul7 = $62<<2;
 $90 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul7)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul7)|0)+15)&-16)|0);;
 $91 = (($1) + ($84<<1)|0);
 $92 = ((($1)) + 4336|0);
 HEAP32[$92>>2] = $84;
 $93 = ((($1)) + 4332|0);
 HEAP32[$93>>2] = $84;
 $94 = ($95|0)>(0);
 if ($94) {
  $96 = $$ ^ 1;
  $97 = ((($1)) + 4348|0);
  $98 = $$ << 1;
  $99 = $98 ^ 3;
  $100 = ((($22)) + 1296|0);
  $101 = ((($0)) + 4636|0);
  $102 = ((($0)) + 5088|0);
  $103 = ((($1)) + 4344|0);
  $104 = ($$1320|0)>(0);
  $105 = ((($0)) + 4632|0);
  $106 = ((($0)) + 4668|0);
  $sext174$i = $14 << 16;
  $107 = $sext174$i >> 16;
  $108 = ((($11)) + 4|0);
  $$0305374 = $4;$$0311373 = $91;$$0316370 = $18;$$0325369 = 0;$$0375 = $3;$$2314371 = 0;$124 = $52;$758 = $62;
  while(1) {
   $109 = $$2314371 >>> 1;
   $110 = $109 | $96;
   $111 = $110 << 4;
   $112 = (($5) + ($111<<1)|0);
   $113 = ($$2314371*5)|0;
   $114 = (($6) + ($113<<1)|0);
   $115 = ($$2314371*24)|0;
   $116 = (($7) + ($115<<1)|0);
   $117 = (($8) + ($$2314371<<2)|0);
   $118 = HEAP32[$117>>2]|0;
   $119 = $118 >> 2;
   $120 = $118 >>> 1;
   $121 = $120 << 16;
   $122 = $121 | $119;
   HEAP32[$97>>2] = 0;
   $123 = ($124<<24>>24)==(2);
   $125 = (($12) + ($$2314371<<2)|0);
   if ($123) {
    $126 = HEAP32[$125>>2]|0;
    $127 = $$2314371 & $99;
    $128 = ($127|0)==(0);
    if ($128) {
     $129 = ($$2314371|0)==(2);
     if ($129) {
      $130 = HEAP32[$19>>2]|0;
      $131 = ($130|0)>(1);
      if ($131) {
       $132 = HEAP32[$100>>2]|0;
       $$0306355 = $132;$$0307354 = 1;$$0328353 = 0;
       while(1) {
        $133 = (((($22) + (($$0307354*1300)|0)|0)) + 1296|0);
        $134 = HEAP32[$133>>2]|0;
        $135 = ($134|0)<($$0306355|0);
        $spec$select = $135 ? $$0307354 : $$0328353;
        $spec$select333 = $135 ? $134 : $$0306355;
        $136 = (($$0307354) + 1)|0;
        $137 = ($136|0)<($130|0);
        if ($137) {
         $$0306355 = $spec$select333;$$0307354 = $136;$$0328353 = $spec$select;
        } else {
         $$0328$lcssa = $spec$select;
         break;
        }
       }
      } else {
       $$0328$lcssa = 0;
      }
      $138 = ($130|0)>(0);
      if ($138) {
       $$1308361 = 0;
       while(1) {
        $139 = ($$1308361|0)==($$0328$lcssa|0);
        $140 = (((($22) + (($$1308361*1300)|0)|0)) + 1296|0);
        if (!($139)) {
         $141 = HEAP32[$140>>2]|0;
         $142 = (($141) + 134217727)|0;
         HEAP32[$140>>2] = $142;
        }
        $143 = (($$1308361) + 1)|0;
        $exitcond397 = ($143|0)==($130|0);
        if ($exitcond397) {
         break;
        } else {
         $$1308361 = $143;
        }
       }
      }
      if ($104) {
       $144 = HEAP32[$15>>2]|0;
       $145 = (($144) + ($$1320))|0;
       $$0321365 = $145;$$2309366 = 0;
       while(1) {
        $146 = (($$0321365) + -1)|0;
        $147 = (($146|0) % 40)&-1;
        $148 = ($147|0)<(0);
        $149 = (($147) + 40)|0;
        $spec$select334 = $148 ? $149 : $147;
        $150 = ((((($22) + (($$0328$lcssa*1300)|0)|0)) + 544|0) + ($spec$select334<<2)|0);
        $151 = HEAP32[$150>>2]|0;
        $152 = $151 >>> 9;
        $153 = (($152) + 1)|0;
        $154 = $153 >>> 1;
        $155 = $154&255;
        $156 = (($$2309366) - ($$1320))|0;
        $157 = (($$0305374) + ($156)|0);
        HEAP8[$157>>0] = $155;
        $158 = ((((($22) + (($$0328$lcssa*1300)|0)|0)) + 704|0) + ($spec$select334<<2)|0);
        $159 = HEAP32[$158>>2]|0;
        $160 = $159 >> 16;
        $161 = HEAP32[$108>>2]|0;
        $sext332 = $161 << 16;
        $162 = $sext332 >> 16;
        $163 = Math_imul($162, $160)|0;
        $164 = $159 & 65535;
        $165 = Math_imul($162, $164)|0;
        $166 = $165 >> 16;
        $167 = (($166) + ($163))|0;
        $168 = $161 >> 15;
        $169 = (($168) + 1)|0;
        $170 = $169 >> 1;
        $171 = Math_imul($170, $159)|0;
        $172 = (($167) + ($171))|0;
        $173 = $172 >>> 13;
        $174 = (($173) + 1)|0;
        $175 = $174 >>> 1;
        $176 = ($172|0)>(536862719);
        $177 = ($172|0)<(-536879104);
        $178 = $175&65535;
        $179 = $177 ? -32768 : $178;
        $180 = $176 ? 32767 : $179;
        $181 = (($$0311373) + ($156<<1)|0);
        HEAP16[$181>>1] = $180;
        $182 = ((((($22) + (($$0328$lcssa*1300)|0)|0)) + 1024|0) + ($spec$select334<<2)|0);
        $183 = HEAP32[$182>>2]|0;
        $184 = HEAP32[$92>>2]|0;
        $185 = (($156) + ($184))|0;
        $186 = (((($1)) + 1280|0) + ($185<<2)|0);
        HEAP32[$186>>2] = $183;
        $187 = (($$2309366) + 1)|0;
        $exitcond398 = ($187|0)==($$1320|0);
        if ($exitcond398) {
         break;
        } else {
         $$0321365 = $spec$select334;$$2309366 = $187;
        }
       }
       $$pre404 = HEAP32[$61>>2]|0;
       $$1326 = 0;$195 = $$pre404;
      } else {
       $$1326 = 0;$195 = $758;
      }
     } else {
      $$1326 = $$0325369;$195 = $758;
     }
     $188 = HEAP32[$83>>2]|0;
     $189 = HEAP32[$101>>2]|0;
     $190 = (-2 - ($126))|0;
     $191 = (($190) + ($188))|0;
     $192 = (($191) - ($189))|0;
     $193 = (($89) + ($192<<1)|0);
     $194 = Math_imul($195, $$2314371)|0;
     $196 = (($194) + ($192))|0;
     $197 = (($1) + ($196<<1)|0);
     $198 = (($188) - ($192))|0;
     $199 = HEAP32[$102>>2]|0;
     _silk_LPC_analysis_filter($193,$197,$112,$198,$189,$199);
     $200 = HEAP32[$83>>2]|0;
     HEAP32[$93>>2] = $200;
     HEAP32[$97>>2] = 1;
     $$pre405 = HEAP8[$51>>0]|0;
     $$1317 = $126;$$2327 = $$1326;$203 = $$pre405;$273 = 1;
    } else {
     $$1317 = $126;$$2327 = $$0325369;$203 = 2;$273 = 0;
    }
   } else {
    $$1317 = $$0316370;$$2327 = $$0325369;$203 = $124;$273 = 0;
   }
   $201 = HEAP32[$19>>2]|0;
   $202 = $203 << 24 >> 24;
   $204 = HEAP32[$125>>2]|0;
   $205 = (($11) + ($$2314371<<2)|0);
   $206 = HEAP32[$205>>2]|0;
   $207 = ($206|0)>(1);
   $spec$select$i = $207 ? $206 : 1;
   $208 = ($spec$select$i|0)>(0);
   $209 = (0 - ($spec$select$i))|0;
   $210 = $208 ? $spec$select$i : $209;
   $211 = (Math_clz32(($210|0))|0);
   $212 = (($211) + -1)|0;
   $213 = $spec$select$i << $212;
   $214 = $213 >> 16;
   $215 = (536870911 / ($214|0))&-1;
   $216 = $215 << 16;
   $217 = $216 >> 16;
   $218 = Math_imul($214, $217)|0;
   $219 = $213 & 65535;
   $220 = Math_imul($219, $217)|0;
   $221 = $220 >> 16;
   $222 = (($221) + ($218))|0;
   $223 = $222 << 3;
   $224 = (0 - ($223))|0;
   $225 = $224 >> 16;
   $226 = Math_imul($225, $217)|0;
   $227 = $224 & 65528;
   $228 = Math_imul($227, $217)|0;
   $229 = $228 >> 16;
   $230 = $215 >> 15;
   $231 = (($230) + 1)|0;
   $232 = $231 >> 1;
   $233 = Math_imul($232, $224)|0;
   $234 = (($233) + ($216))|0;
   $235 = (($234) + ($226))|0;
   $236 = (($235) + ($229))|0;
   $237 = (62 - ($211))|0;
   $238 = ($237|0)<(48);
   if ($238) {
    $239 = (47 - ($237))|0;
    $240 = -2147483648 >> $239;
    $241 = 2147483647 >>> $239;
    $242 = ($240|0)>($241|0);
    $$432 = $242 ? $240 : $241;
    $$433 = $242 ? $241 : $240;
    $243 = ($236|0)>($$432|0);
    $244 = ($236|0)<($$433|0);
    $$1$i$i = $244 ? $$433 : $236;
    $spec$select3$i$i = $243 ? $$432 : $$1$i$i;
    $245 = $spec$select3$i$i << $239;
    $250 = $245;
   } else {
    $246 = (($237) + -47)|0;
    $247 = ($237|0)<(79);
    $248 = $236 >> $246;
    $spec$select$i$i = $247 ? $248 : 0;
    $250 = $spec$select$i$i;
   }
   $249 = $250 >> 4;
   $251 = (($249) + 1)|0;
   $252 = HEAP32[$61>>2]|0;
   $253 = ($252|0)>(0);
   if ($253) {
    $254 = $251 >>> 1;
    $sext175$i = $254 << 16;
    $255 = $sext175$i >> 16;
    $256 = $251 >> 16;
    $257 = (($256) + 1)|0;
    $258 = $257 >> 1;
    $$0195$i = 0;
    while(1) {
     $259 = (($$0375) + ($$0195$i<<1)|0);
     $260 = HEAP16[$259>>1]|0;
     $261 = $260 << 16 >> 16;
     $262 = $261 >> 16;
     $263 = Math_imul($262, $255)|0;
     $264 = $261 & 65535;
     $265 = Math_imul($264, $255)|0;
     $266 = $265 >> 16;
     $267 = Math_imul($258, $261)|0;
     $268 = (($263) + ($267))|0;
     $269 = (($268) + ($266))|0;
     $270 = (($90) + ($$0195$i<<2)|0);
     HEAP32[$270>>2] = $269;
     $271 = (($$0195$i) + 1)|0;
     $exitcond399 = ($271|0)==($252|0);
     if ($exitcond399) {
      break;
     } else {
      $$0195$i = $271;
     }
    }
   }
   $272 = ($273|0)==(0);
   if (!($272)) {
    $274 = ($$2314371|0)==(0);
    if ($274) {
     $275 = $250 >> 16;
     $276 = Math_imul($275, $107)|0;
     $277 = $250 & 65535;
     $278 = Math_imul($277, $107)|0;
     $279 = $278 >> 16;
     $280 = (($279) + ($276))|0;
     $281 = $280 << 2;
     $$0166$i = $281;
    } else {
     $$0166$i = $250;
    }
    $282 = HEAP32[$93>>2]|0;
    $283 = (-2 - ($204))|0;
    $284 = (($282) + ($283))|0;
    $285 = ($284|0)<($282|0);
    if ($285) {
     $286 = $$0166$i >> 16;
     $287 = $$0166$i & 65535;
     $$1192$i = $284;
     while(1) {
      $288 = (($89) + ($$1192$i<<1)|0);
      $289 = HEAP16[$288>>1]|0;
      $290 = $289 << 16 >> 16;
      $291 = Math_imul($286, $290)|0;
      $292 = Math_imul($287, $290)|0;
      $293 = $292 >> 16;
      $294 = (($293) + ($291))|0;
      $295 = (($88) + ($$1192$i<<2)|0);
      HEAP32[$295>>2] = $294;
      $296 = (($$1192$i) + 1)|0;
      $exitcond400 = ($296|0)==($282|0);
      if ($exitcond400) {
       break;
      } else {
       $$1192$i = $296;
      }
     }
    }
   }
   $297 = HEAP32[$103>>2]|0;
   $298 = ($206|0)==($297|0);
   if ($298) {
    $661 = $206;$662 = $252;$663 = $201;
   } else {
    $299 = ($297|0)>(0);
    $300 = (0 - ($297))|0;
    $301 = $299 ? $297 : $300;
    $302 = (Math_clz32(($301|0))|0);
    $303 = (($302) + -1)|0;
    $304 = $297 << $303;
    $305 = ($206|0)>(0);
    $306 = (0 - ($206))|0;
    $307 = $305 ? $206 : $306;
    $308 = (Math_clz32(($307|0))|0);
    $309 = (($308) + -1)|0;
    $310 = $206 << $309;
    $311 = $310 >> 16;
    $312 = (536870911 / ($311|0))&-1;
    $313 = $304 >> 16;
    $sext$i$i = $312 << 16;
    $314 = $sext$i$i >> 16;
    $315 = Math_imul($314, $313)|0;
    $316 = $304 & 65535;
    $317 = Math_imul($314, $316)|0;
    $318 = $317 >> 16;
    $319 = (($318) + ($315))|0;
    $320 = ($310|0)<(0);
    $321 = $320 << 31 >> 31;
    $322 = ($319|0)<(0);
    $323 = $322 << 31 >> 31;
    $324 = (___muldi3(($319|0),($323|0),($310|0),($321|0))|0);
    $325 = tempRet0;
    $326 = (_bitshift64Lshr(($324|0),($325|0),29)|0);
    $327 = tempRet0;
    $328 = $326 & -8;
    $329 = (($304) - ($328))|0;
    $330 = $329 >> 16;
    $331 = Math_imul($330, $314)|0;
    $332 = $329 & 65535;
    $333 = Math_imul($332, $314)|0;
    $334 = $333 >> 16;
    $335 = (($331) + ($319))|0;
    $336 = (($335) + ($334))|0;
    $$neg$i$i = (1 - ($308))|0;
    $337 = (($$neg$i$i) + 28)|0;
    $338 = (($337) + ($302))|0;
    $339 = ($338|0)<(16);
    if ($339) {
     $340 = (16 - ($338))|0;
     $341 = -2147483648 >> $340;
     $342 = 2147483647 >>> $340;
     $343 = ($341|0)>($342|0);
     $$434 = $343 ? $341 : $342;
     $$435 = $343 ? $342 : $341;
     $344 = ($336|0)>($$434|0);
     $345 = ($336|0)<($$435|0);
     $$1$i178$i = $345 ? $$435 : $336;
     $spec$select3$i179$i = $344 ? $$434 : $$1$i178$i;
     $346 = $spec$select3$i179$i << $340;
     $355 = $346;
    } else {
     $347 = (($338) + -16)|0;
     $348 = ($338|0)<(48);
     $349 = $336 >> $347;
     $spec$select$i180$i = $348 ? $349 : 0;
     $355 = $spec$select$i180$i;
    }
    $350 = HEAP32[$83>>2]|0;
    $351 = ($350|0)>(0);
    if ($351) {
     $352 = HEAP32[$92>>2]|0;
     $353 = (($352) - ($350))|0;
     $354 = $355 >> 16;
     $356 = $355 & 65535;
     $$2189$i = $353;
     while(1) {
      $357 = (((($1)) + 1280|0) + ($$2189$i<<2)|0);
      $358 = HEAP32[$357>>2]|0;
      $sext173$i = $358 << 16;
      $359 = $sext173$i >> 16;
      $360 = Math_imul($359, $354)|0;
      $361 = Math_imul($359, $356)|0;
      $362 = $361 >> 16;
      $363 = (($362) + ($360))|0;
      $364 = $358 >> 15;
      $365 = (($364) + 1)|0;
      $366 = $365 >> 1;
      $367 = Math_imul($366, $355)|0;
      $368 = (($363) + ($367))|0;
      HEAP32[$357>>2] = $368;
      $369 = (($$2189$i) + 1)|0;
      $370 = HEAP32[$92>>2]|0;
      $371 = ($369|0)<($370|0);
      if ($371) {
       $$2189$i = $369;
      } else {
       break;
      }
     }
    }
    $372 = ($203<<24>>24)==(2);
    if ($372) {
     $373 = HEAP32[$97>>2]|0;
     $374 = ($373|0)==(0);
     if ($374) {
      $375 = HEAP32[$93>>2]|0;
      $376 = (-2 - ($204))|0;
      $377 = (($375) + ($376))|0;
      $378 = (($375) - ($$1320))|0;
      $379 = ($377|0)<($378|0);
      if ($379) {
       $380 = $355 >> 16;
       $381 = $355 & 65535;
       $$3186$i = $377;
       while(1) {
        $382 = (($88) + ($$3186$i<<2)|0);
        $383 = HEAP32[$382>>2]|0;
        $sext172$i = $383 << 16;
        $384 = $sext172$i >> 16;
        $385 = Math_imul($384, $380)|0;
        $386 = Math_imul($384, $381)|0;
        $387 = $386 >> 16;
        $388 = (($387) + ($385))|0;
        $389 = $383 >> 15;
        $390 = (($389) + 1)|0;
        $391 = $390 >> 1;
        $392 = Math_imul($391, $355)|0;
        $393 = (($388) + ($392))|0;
        HEAP32[$382>>2] = $393;
        $394 = (($$3186$i) + 1)|0;
        $exitcond401 = ($394|0)==($378|0);
        if ($exitcond401) {
         break;
        } else {
         $$3186$i = $394;
        }
       }
      }
     }
    }
    $395 = ($201|0)>(0);
    if ($395) {
     $396 = $355 >> 16;
     $397 = $355 & 65535;
     $$0165185$i = 0;
     while(1) {
      $398 = (((($22) + (($$0165185$i*1300)|0)|0)) + 1280|0);
      $399 = HEAP32[$398>>2]|0;
      $sext$i = $399 << 16;
      $400 = $sext$i >> 16;
      $401 = Math_imul($400, $396)|0;
      $402 = Math_imul($400, $397)|0;
      $403 = $402 >> 16;
      $404 = (($403) + ($401))|0;
      $405 = $399 >> 15;
      $406 = (($405) + 1)|0;
      $407 = $406 >> 1;
      $408 = Math_imul($407, $355)|0;
      $409 = (($404) + ($408))|0;
      HEAP32[$398>>2] = $409;
      $410 = (((($22) + (($$0165185$i*1300)|0)|0)) + 1284|0);
      $411 = HEAP32[$410>>2]|0;
      $sext167$i = $411 << 16;
      $412 = $sext167$i >> 16;
      $413 = Math_imul($412, $396)|0;
      $414 = Math_imul($412, $397)|0;
      $415 = $414 >> 16;
      $416 = (($415) + ($413))|0;
      $417 = $411 >> 15;
      $418 = (($417) + 1)|0;
      $419 = $418 >> 1;
      $420 = Math_imul($419, $355)|0;
      $421 = (($416) + ($420))|0;
      HEAP32[$410>>2] = $421;
      $422 = (($22) + (($$0165185$i*1300)|0)|0);
      $423 = HEAP32[$422>>2]|0;
      $sext171$i = $423 << 16;
      $424 = $sext171$i >> 16;
      $425 = Math_imul($424, $396)|0;
      $426 = Math_imul($424, $397)|0;
      $427 = $426 >> 16;
      $428 = (($427) + ($425))|0;
      $429 = $423 >> 15;
      $430 = (($429) + 1)|0;
      $431 = $430 >> 1;
      $432 = Math_imul($431, $355)|0;
      $433 = (($428) + ($432))|0;
      HEAP32[$422>>2] = $433;
      $434 = (((($22) + (($$0165185$i*1300)|0)|0)) + 4|0);
      $435 = HEAP32[$434>>2]|0;
      $sext171$1$i = $435 << 16;
      $436 = $sext171$1$i >> 16;
      $437 = Math_imul($436, $396)|0;
      $438 = Math_imul($436, $397)|0;
      $439 = $438 >> 16;
      $440 = (($439) + ($437))|0;
      $441 = $435 >> 15;
      $442 = (($441) + 1)|0;
      $443 = $442 >> 1;
      $444 = Math_imul($443, $355)|0;
      $445 = (($440) + ($444))|0;
      HEAP32[$434>>2] = $445;
      $446 = (((($22) + (($$0165185$i*1300)|0)|0)) + 8|0);
      $447 = HEAP32[$446>>2]|0;
      $sext171$2$i = $447 << 16;
      $448 = $sext171$2$i >> 16;
      $449 = Math_imul($448, $396)|0;
      $450 = Math_imul($448, $397)|0;
      $451 = $450 >> 16;
      $452 = (($451) + ($449))|0;
      $453 = $447 >> 15;
      $454 = (($453) + 1)|0;
      $455 = $454 >> 1;
      $456 = Math_imul($455, $355)|0;
      $457 = (($452) + ($456))|0;
      HEAP32[$446>>2] = $457;
      $458 = (((($22) + (($$0165185$i*1300)|0)|0)) + 12|0);
      $459 = HEAP32[$458>>2]|0;
      $sext171$3$i = $459 << 16;
      $460 = $sext171$3$i >> 16;
      $461 = Math_imul($460, $396)|0;
      $462 = Math_imul($460, $397)|0;
      $463 = $462 >> 16;
      $464 = (($463) + ($461))|0;
      $465 = $459 >> 15;
      $466 = (($465) + 1)|0;
      $467 = $466 >> 1;
      $468 = Math_imul($467, $355)|0;
      $469 = (($464) + ($468))|0;
      HEAP32[$458>>2] = $469;
      $470 = (((($22) + (($$0165185$i*1300)|0)|0)) + 16|0);
      $471 = HEAP32[$470>>2]|0;
      $sext171$4$i = $471 << 16;
      $472 = $sext171$4$i >> 16;
      $473 = Math_imul($472, $396)|0;
      $474 = Math_imul($472, $397)|0;
      $475 = $474 >> 16;
      $476 = (($475) + ($473))|0;
      $477 = $471 >> 15;
      $478 = (($477) + 1)|0;
      $479 = $478 >> 1;
      $480 = Math_imul($479, $355)|0;
      $481 = (($476) + ($480))|0;
      HEAP32[$470>>2] = $481;
      $482 = (((($22) + (($$0165185$i*1300)|0)|0)) + 20|0);
      $483 = HEAP32[$482>>2]|0;
      $sext171$5$i = $483 << 16;
      $484 = $sext171$5$i >> 16;
      $485 = Math_imul($484, $396)|0;
      $486 = Math_imul($484, $397)|0;
      $487 = $486 >> 16;
      $488 = (($487) + ($485))|0;
      $489 = $483 >> 15;
      $490 = (($489) + 1)|0;
      $491 = $490 >> 1;
      $492 = Math_imul($491, $355)|0;
      $493 = (($488) + ($492))|0;
      HEAP32[$482>>2] = $493;
      $494 = (((($22) + (($$0165185$i*1300)|0)|0)) + 24|0);
      $495 = HEAP32[$494>>2]|0;
      $sext171$6$i = $495 << 16;
      $496 = $sext171$6$i >> 16;
      $497 = Math_imul($496, $396)|0;
      $498 = Math_imul($496, $397)|0;
      $499 = $498 >> 16;
      $500 = (($499) + ($497))|0;
      $501 = $495 >> 15;
      $502 = (($501) + 1)|0;
      $503 = $502 >> 1;
      $504 = Math_imul($503, $355)|0;
      $505 = (($500) + ($504))|0;
      HEAP32[$494>>2] = $505;
      $506 = (((($22) + (($$0165185$i*1300)|0)|0)) + 28|0);
      $507 = HEAP32[$506>>2]|0;
      $sext171$7$i = $507 << 16;
      $508 = $sext171$7$i >> 16;
      $509 = Math_imul($508, $396)|0;
      $510 = Math_imul($508, $397)|0;
      $511 = $510 >> 16;
      $512 = (($511) + ($509))|0;
      $513 = $507 >> 15;
      $514 = (($513) + 1)|0;
      $515 = $514 >> 1;
      $516 = Math_imul($515, $355)|0;
      $517 = (($512) + ($516))|0;
      HEAP32[$506>>2] = $517;
      $518 = (((($22) + (($$0165185$i*1300)|0)|0)) + 32|0);
      $519 = HEAP32[$518>>2]|0;
      $sext171$8$i = $519 << 16;
      $520 = $sext171$8$i >> 16;
      $521 = Math_imul($520, $396)|0;
      $522 = Math_imul($520, $397)|0;
      $523 = $522 >> 16;
      $524 = (($523) + ($521))|0;
      $525 = $519 >> 15;
      $526 = (($525) + 1)|0;
      $527 = $526 >> 1;
      $528 = Math_imul($527, $355)|0;
      $529 = (($524) + ($528))|0;
      HEAP32[$518>>2] = $529;
      $530 = (((($22) + (($$0165185$i*1300)|0)|0)) + 36|0);
      $531 = HEAP32[$530>>2]|0;
      $sext171$9$i = $531 << 16;
      $532 = $sext171$9$i >> 16;
      $533 = Math_imul($532, $396)|0;
      $534 = Math_imul($532, $397)|0;
      $535 = $534 >> 16;
      $536 = (($535) + ($533))|0;
      $537 = $531 >> 15;
      $538 = (($537) + 1)|0;
      $539 = $538 >> 1;
      $540 = Math_imul($539, $355)|0;
      $541 = (($536) + ($540))|0;
      HEAP32[$530>>2] = $541;
      $542 = (((($22) + (($$0165185$i*1300)|0)|0)) + 40|0);
      $543 = HEAP32[$542>>2]|0;
      $sext171$10$i = $543 << 16;
      $544 = $sext171$10$i >> 16;
      $545 = Math_imul($544, $396)|0;
      $546 = Math_imul($544, $397)|0;
      $547 = $546 >> 16;
      $548 = (($547) + ($545))|0;
      $549 = $543 >> 15;
      $550 = (($549) + 1)|0;
      $551 = $550 >> 1;
      $552 = Math_imul($551, $355)|0;
      $553 = (($548) + ($552))|0;
      HEAP32[$542>>2] = $553;
      $554 = (((($22) + (($$0165185$i*1300)|0)|0)) + 44|0);
      $555 = HEAP32[$554>>2]|0;
      $sext171$11$i = $555 << 16;
      $556 = $sext171$11$i >> 16;
      $557 = Math_imul($556, $396)|0;
      $558 = Math_imul($556, $397)|0;
      $559 = $558 >> 16;
      $560 = (($559) + ($557))|0;
      $561 = $555 >> 15;
      $562 = (($561) + 1)|0;
      $563 = $562 >> 1;
      $564 = Math_imul($563, $355)|0;
      $565 = (($560) + ($564))|0;
      HEAP32[$554>>2] = $565;
      $566 = (((($22) + (($$0165185$i*1300)|0)|0)) + 48|0);
      $567 = HEAP32[$566>>2]|0;
      $sext171$12$i = $567 << 16;
      $568 = $sext171$12$i >> 16;
      $569 = Math_imul($568, $396)|0;
      $570 = Math_imul($568, $397)|0;
      $571 = $570 >> 16;
      $572 = (($571) + ($569))|0;
      $573 = $567 >> 15;
      $574 = (($573) + 1)|0;
      $575 = $574 >> 1;
      $576 = Math_imul($575, $355)|0;
      $577 = (($572) + ($576))|0;
      HEAP32[$566>>2] = $577;
      $578 = (((($22) + (($$0165185$i*1300)|0)|0)) + 52|0);
      $579 = HEAP32[$578>>2]|0;
      $sext171$13$i = $579 << 16;
      $580 = $sext171$13$i >> 16;
      $581 = Math_imul($580, $396)|0;
      $582 = Math_imul($580, $397)|0;
      $583 = $582 >> 16;
      $584 = (($583) + ($581))|0;
      $585 = $579 >> 15;
      $586 = (($585) + 1)|0;
      $587 = $586 >> 1;
      $588 = Math_imul($587, $355)|0;
      $589 = (($584) + ($588))|0;
      HEAP32[$578>>2] = $589;
      $590 = (((($22) + (($$0165185$i*1300)|0)|0)) + 56|0);
      $591 = HEAP32[$590>>2]|0;
      $sext171$14$i = $591 << 16;
      $592 = $sext171$14$i >> 16;
      $593 = Math_imul($592, $396)|0;
      $594 = Math_imul($592, $397)|0;
      $595 = $594 >> 16;
      $596 = (($595) + ($593))|0;
      $597 = $591 >> 15;
      $598 = (($597) + 1)|0;
      $599 = $598 >> 1;
      $600 = Math_imul($599, $355)|0;
      $601 = (($596) + ($600))|0;
      HEAP32[$590>>2] = $601;
      $602 = (((($22) + (($$0165185$i*1300)|0)|0)) + 60|0);
      $603 = HEAP32[$602>>2]|0;
      $sext171$15$i = $603 << 16;
      $604 = $sext171$15$i >> 16;
      $605 = Math_imul($604, $396)|0;
      $606 = Math_imul($604, $397)|0;
      $607 = $606 >> 16;
      $608 = (($607) + ($605))|0;
      $609 = $603 >> 15;
      $610 = (($609) + 1)|0;
      $611 = $610 >> 1;
      $612 = Math_imul($611, $355)|0;
      $613 = (($608) + ($612))|0;
      HEAP32[$602>>2] = $613;
      $$5183$i = 0;
      while(1) {
       $614 = ((((($22) + (($$0165185$i*1300)|0)|0)) + 1184|0) + ($$5183$i<<2)|0);
       $615 = HEAP32[$614>>2]|0;
       $sext170$i = $615 << 16;
       $616 = $sext170$i >> 16;
       $617 = Math_imul($616, $396)|0;
       $618 = Math_imul($616, $397)|0;
       $619 = $618 >> 16;
       $620 = (($619) + ($617))|0;
       $621 = $615 >> 15;
       $622 = (($621) + 1)|0;
       $623 = $622 >> 1;
       $624 = Math_imul($623, $355)|0;
       $625 = (($620) + ($624))|0;
       HEAP32[$614>>2] = $625;
       $626 = (($$5183$i) + 1)|0;
       $exitcond$i = ($626|0)==(24);
       if ($exitcond$i) {
        break;
       } else {
        $$5183$i = $626;
       }
      }
      $$6184$i = 0;
      while(1) {
       $627 = ((((($22) + (($$0165185$i*1300)|0)|0)) + 864|0) + ($$6184$i<<2)|0);
       $628 = HEAP32[$627>>2]|0;
       $sext168$i = $628 << 16;
       $629 = $sext168$i >> 16;
       $630 = Math_imul($629, $396)|0;
       $631 = Math_imul($629, $397)|0;
       $632 = $631 >> 16;
       $633 = (($632) + ($630))|0;
       $634 = $628 >> 15;
       $635 = (($634) + 1)|0;
       $636 = $635 >> 1;
       $637 = Math_imul($636, $355)|0;
       $638 = (($633) + ($637))|0;
       HEAP32[$627>>2] = $638;
       $639 = ((((($22) + (($$0165185$i*1300)|0)|0)) + 1024|0) + ($$6184$i<<2)|0);
       $640 = HEAP32[$639>>2]|0;
       $sext169$i = $640 << 16;
       $641 = $sext169$i >> 16;
       $642 = Math_imul($641, $396)|0;
       $643 = Math_imul($641, $397)|0;
       $644 = $643 >> 16;
       $645 = (($644) + ($642))|0;
       $646 = $640 >> 15;
       $647 = (($646) + 1)|0;
       $648 = $647 >> 1;
       $649 = Math_imul($648, $355)|0;
       $650 = (($645) + ($649))|0;
       HEAP32[$639>>2] = $650;
       $651 = (($$6184$i) + 1)|0;
       $exitcond198$i = ($651|0)==(40);
       if ($exitcond198$i) {
        break;
       } else {
        $$6184$i = $651;
       }
      }
      $652 = (($$0165185$i) + 1)|0;
      $exitcond199$i = ($652|0)==($201|0);
      if ($exitcond199$i) {
       break;
      } else {
       $$0165185$i = $652;
      }
     }
    }
    $653 = HEAP32[$205>>2]|0;
    HEAP32[$103>>2] = $653;
    $$pre406 = HEAP32[$205>>2]|0;
    $$pre407 = HEAP32[$61>>2]|0;
    $$pre408 = HEAP32[$19>>2]|0;
    $661 = $$pre406;$662 = $$pre407;$663 = $$pre408;
   }
   $654 = (($9) + ($$2314371<<2)|0);
   $655 = HEAP32[$654>>2]|0;
   $656 = (($10) + ($$2314371<<2)|0);
   $657 = HEAP32[$656>>2]|0;
   $658 = HEAP32[$105>>2]|0;
   $659 = HEAP32[$101>>2]|0;
   $660 = HEAP32[$106>>2]|0;
   _silk_noise_shape_quantizer_del_dec($1,$22,$202,$90,$$0305374,$$0311373,$88,$16,$112,$114,$116,$$1317,$122,$655,$657,$661,$13,$60,$662,$$2327,$658,$659,$660,$663,$15,$$1320);
   $664 = HEAP32[$61>>2]|0;
   $665 = (($$0305374) + ($664)|0);
   $666 = (($$0311373) + ($664<<1)|0);
   $667 = (($$2314371) + 1)|0;
   $668 = HEAP32[$$pre$phiZ2D>>2]|0;
   $669 = ($667|0)<($668|0);
   if (!($669)) {
    break;
   }
   $670 = (($$0375) + ($664<<1)|0);
   $671 = (($$2327) + 1)|0;
   $$pre403 = HEAP8[$51>>0]|0;
   $$0305374 = $665;$$0311373 = $666;$$0316370 = $$1317;$$0325369 = $671;$$0375 = $670;$$2314371 = $667;$124 = $$pre403;$758 = $664;
  }
  $$pre409 = HEAP32[$19>>2]|0;
  $$0305$lcssa = $665;$$0311$lcssa = $666;$$lcssa343 = $668;$673 = $$pre409;$757 = $664;
 } else {
  $$0305$lcssa = $4;$$0311$lcssa = $91;$$lcssa343 = $95;$673 = $23;$757 = $62;
 }
 $672 = ($673|0)>(1);
 if ($672) {
  $674 = ((($22)) + 1296|0);
  $675 = HEAP32[$674>>2]|0;
  $$2330347 = 0;$$2349 = $675;$$3315348 = 1;
  while(1) {
   $676 = (((($22) + (($$3315348*1300)|0)|0)) + 1296|0);
   $677 = HEAP32[$676>>2]|0;
   $678 = ($677|0)<($$2349|0);
   $spec$select336 = $678 ? $$3315348 : $$2330347;
   $spec$select337 = $678 ? $677 : $$2349;
   $679 = (($$3315348) + 1)|0;
   $680 = ($679|0)<($673|0);
   if ($680) {
    $$2330347 = $spec$select336;$$2349 = $spec$select337;$$3315348 = $679;
   } else {
    $$2330$lcssa = $spec$select336;
    break;
   }
  }
 } else {
  $$2330$lcssa = 0;
 }
 $681 = (((($22) + (($$2330$lcssa*1300)|0)|0)) + 1292|0);
 $682 = HEAP32[$681>>2]|0;
 $683 = $682&255;
 $684 = ((($2)) + 34|0);
 HEAP8[$684>>0] = $683;
 $685 = (($$lcssa343) + -1)|0;
 $686 = (($11) + ($685<<2)|0);
 $687 = HEAP32[$686>>2]|0;
 $688 = ($$1320|0)>(0);
 if (!($688)) {
  $735 = $757;
  $733 = ((($1)) + 3840|0);
  $734 = ((($22) + (($$2330$lcssa*1300)|0)|0) + ($735<<2)|0);
  dest=$733; src=$734; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  $736 = ((($1)) + 4224|0);
  $737 = (((($22) + (($$2330$lcssa*1300)|0)|0)) + 1184|0);
  dest=$736; src=$737; stop=dest+96|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  $738 = (((($22) + (($$2330$lcssa*1300)|0)|0)) + 1280|0);
  $739 = HEAP32[$738>>2]|0;
  $740 = ((($1)) + 4320|0);
  HEAP32[$740>>2] = $739;
  $741 = (((($22) + (($$2330$lcssa*1300)|0)|0)) + 1284|0);
  $742 = HEAP32[$741>>2]|0;
  $743 = ((($1)) + 4324|0);
  HEAP32[$743>>2] = $742;
  $744 = HEAP32[$$pre$phiZ2D>>2]|0;
  $745 = (($744) + -1)|0;
  $746 = (($12) + ($745<<2)|0);
  $747 = HEAP32[$746>>2]|0;
  HEAP32[$17>>2] = $747;
  $748 = HEAP32[$85>>2]|0;
  $749 = (($1) + ($748<<1)|0);
  $750 = HEAP32[$83>>2]|0;
  $751 = $750 << 1;
  _memmove(($1|0),($749|0),($751|0))|0;
  $752 = ((($1)) + 1280|0);
  $753 = HEAP32[$85>>2]|0;
  $754 = (((($1)) + 1280|0) + ($753<<2)|0);
  $755 = HEAP32[$83>>2]|0;
  $756 = $755 << 2;
  _memmove(($752|0),($754|0),($756|0))|0;
  _llvm_stackrestore(($21|0));
  STACKTOP = sp;return;
 }
 $689 = $687 >>> 6;
 $690 = HEAP32[$15>>2]|0;
 $691 = (($690) + ($$1320))|0;
 $sext = $689 << 16;
 $692 = $sext >> 16;
 $693 = $687 >> 21;
 $694 = (($693) + 1)|0;
 $695 = $694 >> 1;
 $$2323345 = $691;$$3310346 = 0;
 while(1) {
  $696 = (($$2323345) + -1)|0;
  $697 = (($696|0) % 40)&-1;
  $698 = ($697|0)<(0);
  $699 = (($697) + 40)|0;
  $spec$select338 = $698 ? $699 : $697;
  $700 = ((((($22) + (($$2330$lcssa*1300)|0)|0)) + 544|0) + ($spec$select338<<2)|0);
  $701 = HEAP32[$700>>2]|0;
  $702 = $701 >>> 9;
  $703 = (($702) + 1)|0;
  $704 = $703 >>> 1;
  $705 = $704&255;
  $706 = (($$3310346) - ($$1320))|0;
  $707 = (($$0305$lcssa) + ($706)|0);
  HEAP8[$707>>0] = $705;
  $708 = ((((($22) + (($$2330$lcssa*1300)|0)|0)) + 704|0) + ($spec$select338<<2)|0);
  $709 = HEAP32[$708>>2]|0;
  $710 = $709 >> 16;
  $711 = Math_imul($710, $692)|0;
  $712 = $709 & 65535;
  $713 = Math_imul($712, $692)|0;
  $714 = $713 >> 16;
  $715 = Math_imul($709, $695)|0;
  $716 = (($711) + ($715))|0;
  $717 = (($716) + ($714))|0;
  $718 = $717 >>> 7;
  $719 = (($718) + 1)|0;
  $720 = $719 >>> 1;
  $721 = ($717|0)>(8388479);
  $722 = ($717|0)<(-8388736);
  $723 = $720&65535;
  $724 = $722 ? -32768 : $723;
  $725 = $721 ? 32767 : $724;
  $726 = (($$0311$lcssa) + ($706<<1)|0);
  HEAP16[$726>>1] = $725;
  $727 = ((((($22) + (($$2330$lcssa*1300)|0)|0)) + 1024|0) + ($spec$select338<<2)|0);
  $728 = HEAP32[$727>>2]|0;
  $729 = HEAP32[$92>>2]|0;
  $730 = (($706) + ($729))|0;
  $731 = (((($1)) + 1280|0) + ($730<<2)|0);
  HEAP32[$731>>2] = $728;
  $732 = (($$3310346) + 1)|0;
  $exitcond = ($732|0)==($$1320|0);
  if ($exitcond) {
   break;
  } else {
   $$2323345 = $spec$select338;$$3310346 = $732;
  }
 }
 $$pre410 = HEAP32[$61>>2]|0;
 $735 = $$pre410;
 $733 = ((($1)) + 3840|0);
 $734 = ((($22) + (($$2330$lcssa*1300)|0)|0) + ($735<<2)|0);
 dest=$733; src=$734; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $736 = ((($1)) + 4224|0);
 $737 = (((($22) + (($$2330$lcssa*1300)|0)|0)) + 1184|0);
 dest=$736; src=$737; stop=dest+96|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $738 = (((($22) + (($$2330$lcssa*1300)|0)|0)) + 1280|0);
 $739 = HEAP32[$738>>2]|0;
 $740 = ((($1)) + 4320|0);
 HEAP32[$740>>2] = $739;
 $741 = (((($22) + (($$2330$lcssa*1300)|0)|0)) + 1284|0);
 $742 = HEAP32[$741>>2]|0;
 $743 = ((($1)) + 4324|0);
 HEAP32[$743>>2] = $742;
 $744 = HEAP32[$$pre$phiZ2D>>2]|0;
 $745 = (($744) + -1)|0;
 $746 = (($12) + ($745<<2)|0);
 $747 = HEAP32[$746>>2]|0;
 HEAP32[$17>>2] = $747;
 $748 = HEAP32[$85>>2]|0;
 $749 = (($1) + ($748<<1)|0);
 $750 = HEAP32[$83>>2]|0;
 $751 = $750 << 1;
 _memmove(($1|0),($749|0),($751|0))|0;
 $752 = ((($1)) + 1280|0);
 $753 = HEAP32[$85>>2]|0;
 $754 = (((($1)) + 1280|0) + ($753<<2)|0);
 $755 = HEAP32[$83>>2]|0;
 $756 = $755 << 2;
 _memmove(($752|0),($754|0),($756|0))|0;
 _llvm_stackrestore(($21|0));
 STACKTOP = sp;return;
}
function _silk_noise_shape_quantizer_del_dec($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 $13 = $13|0;
 $14 = $14|0;
 $15 = $15|0;
 $16 = $16|0;
 $17 = $17|0;
 $18 = $18|0;
 $19 = $19|0;
 $20 = $20|0;
 $21 = $21|0;
 $22 = $22|0;
 $23 = $23|0;
 $24 = $24|0;
 $25 = $25|0;
 var $$0$i = 0, $$051533 = 0, $$051637 = 0, $$051769 = 0, $$051968 = 0, $$0521$lcssa = 0, $$052132 = 0, $$0522$lcssa = 0, $$052242 = 0, $$0526 = 0, $$0527 = 0, $$0530$lcssa = 0, $$053055 = 0, $$053241 = 0, $$0536 = 0, $$0537 = 0, $$0538$lcssa = 0, $$053853 = 0, $$0541 = 0, $$0542$lcssa = 0;
 var $$054231 = 0, $$0543 = 0, $$0544$lcssa = 0, $$054452 = 0, $$070 = 0, $$143 = 0, $$1518 = 0, $$1520 = 0, $$1525 = 0, $$1529 = 0, $$1529$in = 0, $$152926 = 0, $$1539 = 0, $$248 = 0, $$2534$lcssa = 0, $$253454 = 0, $$3535 = 0, $$356 = 0, $$464 = 0, $$530 = 0;
 var $$alloca_mul = 0, $$lobit = 0, $$neg29 = 0, $$pre = 0, $$sink = 0, $$sink82 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0;
 var $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0;
 var $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0;
 var $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0;
 var $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0;
 var $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0;
 var $672 = 0, $673 = 0, $674 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond76 = 0, $exitcond77 = 0, $exitcond78 = 0, $exitcond79 = 0;
 var $exitcond80 = 0, $exitcond81 = 0, $or$cond = 0, $sext = 0, $sext1 = 0, $sext12 = 0, $sext14 = 0, $sext15 = 0, $sext16 = 0, $sext17 = 0, $sext18 = 0, $sext2 = 0, $sext3 = 0, $sext4 = 0, $sext6 = 0, $sext7 = 0, $sext8 = 0, $sext9 = 0, $spec$select = 0, $spec$select19 = 0;
 var $spec$select20 = 0, $spec$select21 = 0, $spec$select22 = 0, $spec$select23 = 0, $spec$select24 = 0, $spec$select87 = 0, $spec$select88 = 0, $spec$select89 = 0, $spec$select90 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $$alloca_mul = ($23*56)|0;
 $26 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $27 = ((($0)) + 4336|0);
 $28 = ((($0)) + 4332|0);
 $29 = $15 >> 6;
 $30 = ($18|0)>(0);
 if ($30) {
  $31 = (2 - ($11))|0;
  $32 = HEAP32[$28>>2]|0;
  $33 = (($31) + ($32))|0;
  $34 = (($6) + ($33<<2)|0);
  $35 = (1 - ($11))|0;
  $36 = HEAP32[$27>>2]|0;
  $37 = (($35) + ($36))|0;
  $38 = (((($0)) + 1280|0) + ($37<<2)|0);
  $39 = ($2|0)==(2);
  $40 = ((($9)) + 2|0);
  $41 = ((($9)) + 4|0);
  $42 = ((($9)) + 6|0);
  $43 = ((($9)) + 8|0);
  $44 = ($11|0)>(0);
  $sext18 = $12 << 16;
  $45 = $sext18 >> 16;
  $46 = $12 >> 16;
  $47 = ($23|0)>(0);
  $48 = $21 >> 1;
  $49 = ((($8)) + 2|0);
  $50 = ((($8)) + 4|0);
  $51 = ((($8)) + 6|0);
  $52 = ((($8)) + 8|0);
  $53 = ((($8)) + 10|0);
  $54 = ((($8)) + 12|0);
  $55 = ((($8)) + 14|0);
  $56 = ((($8)) + 16|0);
  $57 = ((($8)) + 18|0);
  $58 = ($21|0)==(16);
  $59 = ((($8)) + 20|0);
  $60 = ((($8)) + 22|0);
  $61 = ((($8)) + 24|0);
  $62 = ((($8)) + 26|0);
  $63 = ((($8)) + 28|0);
  $64 = ((($8)) + 30|0);
  $sext1 = $22 << 16;
  $65 = $sext1 >> 16;
  $66 = $20 >> 1;
  $67 = ($20|0)>(2);
  $68 = (($20) + -1)|0;
  $69 = (($10) + ($68<<1)|0);
  $sext2 = $13 << 16;
  $70 = $sext2 >> 16;
  $sext3 = $14 << 16;
  $71 = $sext3 >> 16;
  $72 = $14 >> 16;
  $73 = ($16|0)>(2048);
  $74 = $16 >>> 1;
  $75 = (($74) + -512)|0;
  $76 = (512 - ($74))|0;
  $77 = (($17) + -80)|0;
  $sext16 = $16 << 16;
  $78 = $sext16 >> 16;
  $79 = (($17) + 944)|0;
  $sext12 = $17 << 16;
  $80 = $sext12 >> 16;
  $81 = Math_imul($80, $78)|0;
  $sext14 = $79 << 16;
  $82 = $sext14 >> 16;
  $83 = Math_imul($82, $78)|0;
  $84 = (($17) + -944)|0;
  $sext9 = (61865984 - ($sext12))|0;
  $85 = $sext9 >> 16;
  $86 = Math_imul($85, $78)|0;
  $87 = ((($26)) + 4|0);
  $88 = ($23|0)>(1);
  $89 = ((($26)) + 32|0);
  $90 = ($19|0)<(1);
  $$051769 = $38;$$051968 = $34;$$070 = 0;
  while(1) {
   if ($39) {
    $91 = HEAP32[$$051968>>2]|0;
    $92 = $91 >> 16;
    $93 = HEAP16[$9>>1]|0;
    $94 = $93 << 16 >> 16;
    $95 = Math_imul($92, $94)|0;
    $96 = $91 & 65535;
    $97 = Math_imul($96, $94)|0;
    $98 = $97 >> 16;
    $99 = ((($$051968)) + -4|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 >> 16;
    $102 = HEAP16[$40>>1]|0;
    $103 = $102 << 16 >> 16;
    $104 = Math_imul($101, $103)|0;
    $105 = $100 & 65535;
    $106 = Math_imul($105, $103)|0;
    $107 = $106 >> 16;
    $108 = ((($$051968)) + -8|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = $109 >> 16;
    $111 = HEAP16[$41>>1]|0;
    $112 = $111 << 16 >> 16;
    $113 = Math_imul($110, $112)|0;
    $114 = $109 & 65535;
    $115 = Math_imul($114, $112)|0;
    $116 = $115 >> 16;
    $117 = ((($$051968)) + -12|0);
    $118 = HEAP32[$117>>2]|0;
    $119 = $118 >> 16;
    $120 = HEAP16[$42>>1]|0;
    $121 = $120 << 16 >> 16;
    $122 = Math_imul($119, $121)|0;
    $123 = $118 & 65535;
    $124 = Math_imul($123, $121)|0;
    $125 = $124 >> 16;
    $126 = ((($$051968)) + -16|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = $127 >> 16;
    $129 = HEAP16[$43>>1]|0;
    $130 = $129 << 16 >> 16;
    $131 = Math_imul($128, $130)|0;
    $132 = $127 & 65535;
    $133 = Math_imul($132, $130)|0;
    $134 = $133 >> 16;
    $135 = (($95) + 2)|0;
    $136 = (($135) + ($98))|0;
    $137 = (($136) + ($104))|0;
    $138 = (($137) + ($107))|0;
    $139 = (($138) + ($113))|0;
    $140 = (($139) + ($116))|0;
    $141 = (($140) + ($122))|0;
    $142 = (($141) + ($125))|0;
    $143 = (($142) + ($131))|0;
    $144 = (($143) + ($134))|0;
    $145 = $144 << 1;
    $146 = ((($$051968)) + 4|0);
    $$0543 = $145;$$1520 = $146;
   } else {
    $$0543 = 0;$$1520 = $$051968;
   }
   if ($44) {
    $147 = HEAP32[$$051769>>2]|0;
    $148 = ((($$051769)) + -8|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = (($149) + ($147))|0;
    $151 = $150 >> 16;
    $152 = Math_imul($151, $45)|0;
    $153 = $150 & 65535;
    $154 = Math_imul($153, $45)|0;
    $155 = $154 >> 16;
    $156 = ((($$051769)) + -4|0);
    $157 = HEAP32[$156>>2]|0;
    $158 = $157 >> 16;
    $159 = Math_imul($158, $46)|0;
    $160 = $157 & 65535;
    $161 = Math_imul($160, $46)|0;
    $162 = $161 >> 16;
    $163 = (($159) + ($152))|0;
    $164 = (($163) + ($155))|0;
    $165 = (($164) + ($162))|0;
    $166 = $165 << 2;
    $167 = (($$0543) - ($166))|0;
    $168 = ((($$051769)) + 4|0);
    $$0541 = $167;$$1518 = $168;
   } else {
    $$0541 = 0;$$1518 = $$051769;
   }
   if ($47) {
    $169 = (($$070) + 15)|0;
    $170 = HEAP16[$8>>1]|0;
    $171 = $170 << 16 >> 16;
    $172 = HEAP16[$49>>1]|0;
    $173 = $172 << 16 >> 16;
    $174 = HEAP16[$50>>1]|0;
    $175 = $174 << 16 >> 16;
    $176 = HEAP16[$51>>1]|0;
    $177 = $176 << 16 >> 16;
    $178 = HEAP16[$52>>1]|0;
    $179 = $178 << 16 >> 16;
    $180 = HEAP16[$53>>1]|0;
    $181 = $180 << 16 >> 16;
    $182 = HEAP16[$54>>1]|0;
    $183 = $182 << 16 >> 16;
    $184 = HEAP16[$55>>1]|0;
    $185 = $184 << 16 >> 16;
    $186 = HEAP16[$56>>1]|0;
    $187 = $186 << 16 >> 16;
    $188 = HEAP16[$57>>1]|0;
    $189 = $188 << 16 >> 16;
    $190 = HEAP16[$10>>1]|0;
    $191 = $190 << 16 >> 16;
    $192 = HEAP16[$69>>1]|0;
    $193 = $192 << 16 >> 16;
    $194 = (($3) + ($$070<<2)|0);
    $$051637 = 0;
    while(1) {
     $195 = (((($1) + (($$051637*1300)|0)|0)) + 1288|0);
     $196 = HEAP32[$195>>2]|0;
     $197 = Math_imul($196, 196314165)|0;
     $198 = (($197) + 907633515)|0;
     HEAP32[$195>>2] = $198;
     $199 = ((($1) + (($$051637*1300)|0)|0) + ($169<<2)|0);
     $200 = HEAP32[$199>>2]|0;
     $201 = $200 >> 16;
     $202 = Math_imul($201, $171)|0;
     $203 = $200 & 65535;
     $204 = Math_imul($203, $171)|0;
     $205 = $204 >> 16;
     $206 = ((($199)) + -4|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = $207 >> 16;
     $209 = Math_imul($208, $173)|0;
     $210 = $207 & 65535;
     $211 = Math_imul($210, $173)|0;
     $212 = $211 >> 16;
     $213 = ((($199)) + -8|0);
     $214 = HEAP32[$213>>2]|0;
     $215 = $214 >> 16;
     $216 = Math_imul($215, $175)|0;
     $217 = $214 & 65535;
     $218 = Math_imul($217, $175)|0;
     $219 = $218 >> 16;
     $220 = ((($199)) + -12|0);
     $221 = HEAP32[$220>>2]|0;
     $222 = $221 >> 16;
     $223 = Math_imul($222, $177)|0;
     $224 = $221 & 65535;
     $225 = Math_imul($224, $177)|0;
     $226 = $225 >> 16;
     $227 = ((($199)) + -16|0);
     $228 = HEAP32[$227>>2]|0;
     $229 = $228 >> 16;
     $230 = Math_imul($229, $179)|0;
     $231 = $228 & 65535;
     $232 = Math_imul($231, $179)|0;
     $233 = $232 >> 16;
     $234 = ((($199)) + -20|0);
     $235 = HEAP32[$234>>2]|0;
     $236 = $235 >> 16;
     $237 = Math_imul($236, $181)|0;
     $238 = $235 & 65535;
     $239 = Math_imul($238, $181)|0;
     $240 = $239 >> 16;
     $241 = ((($199)) + -24|0);
     $242 = HEAP32[$241>>2]|0;
     $243 = $242 >> 16;
     $244 = Math_imul($243, $183)|0;
     $245 = $242 & 65535;
     $246 = Math_imul($245, $183)|0;
     $247 = $246 >> 16;
     $248 = ((($199)) + -28|0);
     $249 = HEAP32[$248>>2]|0;
     $250 = $249 >> 16;
     $251 = Math_imul($250, $185)|0;
     $252 = $249 & 65535;
     $253 = Math_imul($252, $185)|0;
     $254 = $253 >> 16;
     $255 = ((($199)) + -32|0);
     $256 = HEAP32[$255>>2]|0;
     $257 = $256 >> 16;
     $258 = Math_imul($257, $187)|0;
     $259 = $256 & 65535;
     $260 = Math_imul($259, $187)|0;
     $261 = $260 >> 16;
     $262 = ((($199)) + -36|0);
     $263 = HEAP32[$262>>2]|0;
     $264 = $263 >> 16;
     $265 = Math_imul($264, $189)|0;
     $266 = $263 & 65535;
     $267 = Math_imul($266, $189)|0;
     $268 = $267 >> 16;
     $269 = (($202) + ($48))|0;
     $270 = (($269) + ($205))|0;
     $271 = (($270) + ($209))|0;
     $272 = (($271) + ($212))|0;
     $273 = (($272) + ($216))|0;
     $274 = (($273) + ($219))|0;
     $275 = (($274) + ($223))|0;
     $276 = (($275) + ($226))|0;
     $277 = (($276) + ($230))|0;
     $278 = (($277) + ($233))|0;
     $279 = (($278) + ($237))|0;
     $280 = (($279) + ($240))|0;
     $281 = (($280) + ($244))|0;
     $282 = (($281) + ($247))|0;
     $283 = (($282) + ($251))|0;
     $284 = (($283) + ($254))|0;
     $285 = (($284) + ($258))|0;
     $286 = (($285) + ($261))|0;
     $287 = (($286) + ($265))|0;
     $288 = (($287) + ($268))|0;
     if ($58) {
      $289 = ((($199)) + -40|0);
      $290 = HEAP32[$289>>2]|0;
      $291 = $290 >> 16;
      $292 = HEAP16[$59>>1]|0;
      $293 = $292 << 16 >> 16;
      $294 = Math_imul($291, $293)|0;
      $295 = $290 & 65535;
      $296 = Math_imul($295, $293)|0;
      $297 = $296 >> 16;
      $298 = ((($199)) + -44|0);
      $299 = HEAP32[$298>>2]|0;
      $300 = $299 >> 16;
      $301 = HEAP16[$60>>1]|0;
      $302 = $301 << 16 >> 16;
      $303 = Math_imul($300, $302)|0;
      $304 = $299 & 65535;
      $305 = Math_imul($304, $302)|0;
      $306 = $305 >> 16;
      $307 = ((($199)) + -48|0);
      $308 = HEAP32[$307>>2]|0;
      $309 = $308 >> 16;
      $310 = HEAP16[$61>>1]|0;
      $311 = $310 << 16 >> 16;
      $312 = Math_imul($309, $311)|0;
      $313 = $308 & 65535;
      $314 = Math_imul($313, $311)|0;
      $315 = $314 >> 16;
      $316 = ((($199)) + -52|0);
      $317 = HEAP32[$316>>2]|0;
      $318 = $317 >> 16;
      $319 = HEAP16[$62>>1]|0;
      $320 = $319 << 16 >> 16;
      $321 = Math_imul($318, $320)|0;
      $322 = $317 & 65535;
      $323 = Math_imul($322, $320)|0;
      $324 = $323 >> 16;
      $325 = ((($199)) + -56|0);
      $326 = HEAP32[$325>>2]|0;
      $327 = $326 >> 16;
      $328 = HEAP16[$63>>1]|0;
      $329 = $328 << 16 >> 16;
      $330 = Math_imul($327, $329)|0;
      $331 = $326 & 65535;
      $332 = Math_imul($331, $329)|0;
      $333 = $332 >> 16;
      $334 = ((($1) + (($$051637*1300)|0)|0) + ($$070<<2)|0);
      $335 = HEAP32[$334>>2]|0;
      $336 = $335 >> 16;
      $337 = HEAP16[$64>>1]|0;
      $338 = $337 << 16 >> 16;
      $339 = Math_imul($336, $338)|0;
      $340 = $335 & 65535;
      $341 = Math_imul($340, $338)|0;
      $342 = $341 >> 16;
      $343 = (($294) + ($288))|0;
      $344 = (($343) + ($297))|0;
      $345 = (($344) + ($303))|0;
      $346 = (($345) + ($306))|0;
      $347 = (($346) + ($312))|0;
      $348 = (($347) + ($315))|0;
      $349 = (($348) + ($321))|0;
      $350 = (($349) + ($324))|0;
      $351 = (($350) + ($330))|0;
      $352 = (($351) + ($333))|0;
      $353 = (($352) + ($339))|0;
      $354 = (($353) + ($342))|0;
      $$0$i = $354;
     } else {
      $$0$i = $288;
     }
     $355 = $$0$i << 4;
     $356 = (((($1) + (($$051637*1300)|0)|0)) + 1284|0);
     $357 = HEAP32[$356>>2]|0;
     $358 = (((($1) + (($$051637*1300)|0)|0)) + 1184|0);
     $359 = HEAP32[$358>>2]|0;
     $360 = $359 >> 16;
     $361 = Math_imul($360, $65)|0;
     $362 = $359 & 65535;
     $363 = Math_imul($362, $65)|0;
     $364 = $363 >> 16;
     $365 = (($361) + ($357))|0;
     $366 = (($365) + ($364))|0;
     $367 = (((($1) + (($$051637*1300)|0)|0)) + 1188|0);
     $368 = HEAP32[$367>>2]|0;
     $369 = (($368) - ($366))|0;
     $370 = $369 >> 16;
     $371 = Math_imul($370, $65)|0;
     $372 = $369 & 65535;
     $373 = Math_imul($372, $65)|0;
     $374 = $373 >> 16;
     $375 = (($371) + ($359))|0;
     $376 = (($375) + ($374))|0;
     HEAP32[$358>>2] = $366;
     $377 = $366 >> 16;
     $378 = Math_imul($377, $191)|0;
     $379 = $366 & 65535;
     $380 = Math_imul($379, $191)|0;
     $381 = $380 >> 16;
     $382 = (($378) + ($66))|0;
     $383 = (($382) + ($381))|0;
     if ($67) {
      $$051533 = 2;$$052132 = $376;$$054231 = $383;
      while(1) {
       $384 = (($$051533) + -1)|0;
       $385 = ((((($1) + (($$051637*1300)|0)|0)) + 1184|0) + ($384<<2)|0);
       $386 = HEAP32[$385>>2]|0;
       $387 = ((((($1) + (($$051637*1300)|0)|0)) + 1184|0) + ($$051533<<2)|0);
       $388 = HEAP32[$387>>2]|0;
       $389 = (($388) - ($$052132))|0;
       $390 = $389 >> 16;
       $391 = Math_imul($390, $65)|0;
       $392 = $389 & 65535;
       $393 = Math_imul($392, $65)|0;
       $394 = $393 >> 16;
       $395 = (($391) + ($386))|0;
       $396 = (($395) + ($394))|0;
       HEAP32[$385>>2] = $$052132;
       $397 = $$052132 >> 16;
       $398 = (($10) + ($384<<1)|0);
       $399 = HEAP16[$398>>1]|0;
       $400 = $399 << 16 >> 16;
       $401 = Math_imul($397, $400)|0;
       $402 = $$052132 & 65535;
       $403 = Math_imul($402, $400)|0;
       $404 = $403 >> 16;
       $405 = $$051533 | 1;
       $406 = ((((($1) + (($$051637*1300)|0)|0)) + 1184|0) + ($405<<2)|0);
       $407 = HEAP32[$406>>2]|0;
       $408 = (($407) - ($396))|0;
       $409 = $408 >> 16;
       $410 = Math_imul($409, $65)|0;
       $411 = $408 & 65535;
       $412 = Math_imul($411, $65)|0;
       $413 = $412 >> 16;
       $414 = (($410) + ($388))|0;
       $415 = (($414) + ($413))|0;
       HEAP32[$387>>2] = $396;
       $416 = $396 >> 16;
       $417 = (($10) + ($$051533<<1)|0);
       $418 = HEAP16[$417>>1]|0;
       $419 = $418 << 16 >> 16;
       $420 = Math_imul($416, $419)|0;
       $421 = $396 & 65535;
       $422 = Math_imul($421, $419)|0;
       $423 = $422 >> 16;
       $424 = (($401) + ($$054231))|0;
       $425 = (($424) + ($404))|0;
       $426 = (($425) + ($420))|0;
       $427 = (($426) + ($423))|0;
       $428 = (($$051533) + 2)|0;
       $429 = ($428|0)<($20|0);
       if ($429) {
        $$051533 = $428;$$052132 = $415;$$054231 = $427;
       } else {
        $$0521$lcssa = $415;$$0542$lcssa = $427;
        break;
       }
      }
     } else {
      $$0521$lcssa = $376;$$0542$lcssa = $383;
     }
     $430 = ((((($1) + (($$051637*1300)|0)|0)) + 1184|0) + ($68<<2)|0);
     HEAP32[$430>>2] = $$0521$lcssa;
     $431 = $$0521$lcssa >> 16;
     $432 = Math_imul($431, $193)|0;
     $433 = $$0521$lcssa & 65535;
     $434 = Math_imul($433, $193)|0;
     $435 = $434 >> 16;
     $436 = (($432) + ($$0542$lcssa))|0;
     $437 = (($436) + ($435))|0;
     $438 = $437 << 1;
     $439 = (((($1) + (($$051637*1300)|0)|0)) + 1280|0);
     $440 = HEAP32[$439>>2]|0;
     $441 = $440 >> 16;
     $442 = Math_imul($441, $70)|0;
     $443 = $440 & 65535;
     $444 = Math_imul($443, $70)|0;
     $445 = $444 >> 16;
     $446 = (($445) + ($442))|0;
     $447 = (($446) + ($438))|0;
     $448 = $447 << 2;
     $449 = HEAP32[$24>>2]|0;
     $450 = ((((($1) + (($$051637*1300)|0)|0)) + 1024|0) + ($449<<2)|0);
     $451 = HEAP32[$450>>2]|0;
     $452 = $451 >> 16;
     $453 = Math_imul($452, $71)|0;
     $454 = $451 & 65535;
     $455 = Math_imul($454, $71)|0;
     $456 = $455 >> 16;
     $457 = Math_imul($441, $72)|0;
     $458 = Math_imul($443, $72)|0;
     $459 = $458 >> 16;
     $460 = (($459) + ($457))|0;
     $461 = (($460) + ($453))|0;
     $462 = (($461) + ($456))|0;
     $463 = $462 << 2;
     $$neg29 = (($355) + ($$0541))|0;
     $464 = (($$neg29) - ($448))|0;
     $465 = (($464) - ($463))|0;
     $466 = $465 >> 3;
     $467 = (($466) + 1)|0;
     $468 = $467 >> 1;
     $469 = HEAP32[$194>>2]|0;
     $470 = (($469) - ($468))|0;
     $471 = HEAP32[$195>>2]|0;
     $472 = ($471|0)<(0);
     $473 = (0 - ($470))|0;
     $spec$select = $472 ? $473 : $470;
     $474 = ($spec$select|0)>(-31744);
     $475 = $474 ? $spec$select : -31744;
     $476 = ($475|0)<(30720);
     $477 = $476 ? $475 : 30720;
     $478 = (($477) - ($17))|0;
     do {
      if ($73) {
       $479 = ($478|0)>($75|0);
       if ($479) {
        $480 = (($478) - ($75))|0;
        $$1529$in = $480;
        label = 21;
        break;
       }
       $481 = ($478|0)<($76|0);
       if ($481) {
        $482 = (($478) + ($75))|0;
        $$1529$in = $482;
        label = 21;
        break;
       } else {
        $$lobit = $478 >> 31;
        $$152926 = $$lobit;
        label = 23;
        break;
       }
      } else {
       $$1529$in = $478;
       label = 21;
      }
     } while(0);
     if ((label|0) == 21) {
      label = 0;
      $$1529 = $$1529$in >> 10;
      $483 = ($$1529$in|0)>(1023);
      if ($483) {
       $484 = $$1529$in & -1024;
       $485 = (($77) + ($484))|0;
       $486 = (($485) + 1024)|0;
       $sext15 = $485 << 16;
       $487 = $sext15 >> 16;
       $488 = Math_imul($487, $78)|0;
       $sext17 = $486 << 16;
       $489 = $sext17 >> 16;
       $490 = Math_imul($489, $78)|0;
       $$0526 = $486;$$0527 = $485;$$0536 = $490;$$0537 = $488;
      } else {
       $$152926 = $$1529;
       label = 23;
      }
     }
     L34: do {
      if ((label|0) == 23) {
       label = 0;
       switch ($$152926|0) {
       case 0:  {
        $$0526 = $79;$$0527 = $17;$$0536 = $83;$$0537 = $81;
        break L34;
        break;
       }
       case -1:  {
        $$0526 = $17;$$0527 = $84;$$0536 = $81;$$0537 = $86;
        break L34;
        break;
       }
       default: {
        $491 = $$152926 << 10;
        $492 = $491 | 80;
        $493 = (($492) + ($17))|0;
        $494 = (($493) + 1024)|0;
        $495 = $493 << 16;
        $sext4 = (0 - ($495))|0;
        $496 = $sext4 >> 16;
        $497 = Math_imul($496, $78)|0;
        $sext6 = (-67108864 - ($495))|0;
        $498 = $sext6 >> 16;
        $499 = Math_imul($498, $78)|0;
        $$0526 = $494;$$0527 = $493;$$0536 = $499;$$0537 = $497;
        break L34;
       }
       }
      }
     } while(0);
     $500 = (($477) - ($$0527))|0;
     $sext7 = $500 << 16;
     $501 = $sext7 >> 16;
     $502 = Math_imul($501, $501)|0;
     $503 = (($502) + ($$0537))|0;
     $504 = $503 >> 10;
     $505 = (($477) - ($$0526))|0;
     $sext8 = $505 << 16;
     $506 = $sext8 >> 16;
     $507 = Math_imul($506, $506)|0;
     $508 = (($507) + ($$0536))|0;
     $509 = $508 >> 10;
     $510 = ($504|0)<($509|0);
     $511 = (((($1) + (($$051637*1300)|0)|0)) + 1296|0);
     $512 = HEAP32[$511>>2]|0;
     $spec$select87 = $510 ? $504 : $509;
     $spec$select88 = $510 ? $509 : $504;
     $spec$select89 = $510 ? $$0527 : $$0526;
     $spec$select90 = $510 ? $$0526 : $$0527;
     $$sink = (($spec$select88) + ($512))|0;
     $$sink82 = (($spec$select87) + ($512))|0;
     $513 = (((($26) + (($$051637*56)|0)|0)) + 4|0);
     HEAP32[$513>>2] = $$sink82;
     $514 = (((($26) + (($$051637*56)|0)|0)) + 32|0);
     HEAP32[$514>>2] = $$sink;
     $515 = (($26) + (($$051637*56)|0)|0);
     HEAP32[$515>>2] = $spec$select89;
     $516 = (((($26) + (($$051637*56)|0)|0)) + 28|0);
     HEAP32[$516>>2] = $spec$select90;
     $517 = $spec$select89 << 4;
     $518 = (0 - ($517))|0;
     $spec$select19 = $472 ? $518 : $517;
     $519 = (($spec$select19) + ($$0543))|0;
     $520 = (($519) + ($355))|0;
     $521 = $469 << 4;
     $522 = (($520) - ($521))|0;
     $523 = (((($26) + (($$051637*56)|0)|0)) + 16|0);
     HEAP32[$523>>2] = $522;
     $524 = (($522) - ($448))|0;
     $525 = (($524) - ($463))|0;
     $526 = (((($26) + (($$051637*56)|0)|0)) + 20|0);
     HEAP32[$526>>2] = $525;
     $527 = (((($26) + (($$051637*56)|0)|0)) + 12|0);
     HEAP32[$527>>2] = $524;
     $528 = (((($26) + (($$051637*56)|0)|0)) + 24|0);
     HEAP32[$528>>2] = $519;
     $529 = (((($26) + (($$051637*56)|0)|0)) + 8|0);
     HEAP32[$529>>2] = $520;
     $530 = $spec$select90 << 4;
     $531 = (0 - ($530))|0;
     $$1525 = $472 ? $531 : $530;
     $532 = (($$1525) + ($$0543))|0;
     $533 = (($532) + ($355))|0;
     $534 = (($533) - ($521))|0;
     $535 = (((($26) + (($$051637*56)|0)|0)) + 44|0);
     HEAP32[$535>>2] = $534;
     $536 = (($534) - ($448))|0;
     $537 = (($536) - ($463))|0;
     $538 = (((($26) + (($$051637*56)|0)|0)) + 48|0);
     HEAP32[$538>>2] = $537;
     $539 = (((($26) + (($$051637*56)|0)|0)) + 40|0);
     HEAP32[$539>>2] = $536;
     $540 = (((($26) + (($$051637*56)|0)|0)) + 52|0);
     HEAP32[$540>>2] = $532;
     $541 = (((($26) + (($$051637*56)|0)|0)) + 36|0);
     HEAP32[$541>>2] = $533;
     $542 = (($$051637) + 1)|0;
     $exitcond76 = ($542|0)==($23|0);
     if ($exitcond76) {
      $544 = $449;
      break;
     } else {
      $$051637 = $542;
     }
    }
   } else {
    $$pre = HEAP32[$24>>2]|0;
    $544 = $$pre;
   }
   $543 = (($544) + -1)|0;
   $545 = (($543|0) % 40)&-1;
   $546 = ($545|0)<(0);
   $547 = (($545) + 40)|0;
   $spec$select20 = $546 ? $547 : $545;
   HEAP32[$24>>2] = $spec$select20;
   $548 = (($spec$select20) + ($25))|0;
   $549 = (($548|0) % 40)&-1;
   if ($88) {
    $550 = HEAP32[$87>>2]|0;
    $$052242 = 0;$$053241 = $550;$$143 = 1;
    while(1) {
     $551 = (((($26) + (($$143*56)|0)|0)) + 4|0);
     $552 = HEAP32[$551>>2]|0;
     $553 = ($552|0)<($$053241|0);
     $spec$select21 = $553 ? $552 : $$053241;
     $spec$select22 = $553 ? $$143 : $$052242;
     $554 = (($$143) + 1)|0;
     $exitcond77 = ($554|0)==($23|0);
     if ($exitcond77) {
      $$0522$lcssa = $spec$select22;
      break;
     } else {
      $$052242 = $spec$select22;$$053241 = $spec$select21;$$143 = $554;
     }
    }
   } else {
    $$0522$lcssa = 0;
   }
   $555 = ((((($1) + (($$0522$lcssa*1300)|0)|0)) + 384|0) + ($549<<2)|0);
   $556 = HEAP32[$555>>2]|0;
   if ($47) {
    $$248 = 0;
    while(1) {
     $557 = ((((($1) + (($$248*1300)|0)|0)) + 384|0) + ($549<<2)|0);
     $558 = HEAP32[$557>>2]|0;
     $559 = ($558|0)==($556|0);
     if (!($559)) {
      $560 = (((($26) + (($$248*56)|0)|0)) + 4|0);
      $561 = HEAP32[$560>>2]|0;
      $562 = (($561) + 134217727)|0;
      HEAP32[$560>>2] = $562;
      $563 = (((($26) + (($$248*56)|0)|0)) + 32|0);
      $564 = HEAP32[$563>>2]|0;
      $565 = (($564) + 134217727)|0;
      HEAP32[$563>>2] = $565;
     }
     $566 = (($$248) + 1)|0;
     $exitcond78 = ($566|0)==($23|0);
     if ($exitcond78) {
      break;
     } else {
      $$248 = $566;
     }
    }
   }
   $567 = HEAP32[$87>>2]|0;
   $568 = HEAP32[$89>>2]|0;
   if ($88) {
    $$053055 = $567;$$053853 = 0;$$054452 = 0;$$253454 = $568;$$356 = 1;
    while(1) {
     $569 = (((($26) + (($$356*56)|0)|0)) + 4|0);
     $570 = HEAP32[$569>>2]|0;
     $571 = ($570|0)>($$053055|0);
     $spec$select23 = $571 ? $$356 : $$054452;
     $spec$select24 = $571 ? $570 : $$053055;
     $572 = (((($26) + (($$356*56)|0)|0)) + 32|0);
     $573 = HEAP32[$572>>2]|0;
     $574 = ($573|0)<($$253454|0);
     $$1539 = $574 ? $$356 : $$053853;
     $$3535 = $574 ? $573 : $$253454;
     $575 = (($$356) + 1)|0;
     $exitcond79 = ($575|0)==($23|0);
     if ($exitcond79) {
      $$0530$lcssa = $spec$select24;$$0538$lcssa = $$1539;$$0544$lcssa = $spec$select23;$$2534$lcssa = $$3535;
      break;
     } else {
      $$053055 = $spec$select24;$$053853 = $$1539;$$054452 = $spec$select23;$$253454 = $$3535;$$356 = $575;
     }
    }
   } else {
    $$0530$lcssa = $567;$$0538$lcssa = 0;$$0544$lcssa = 0;$$2534$lcssa = $568;
   }
   $576 = ($$2534$lcssa|0)<($$0530$lcssa|0);
   if ($576) {
    $577 = (((($26) + (($$0538$lcssa*56)|0)|0)) + 28|0);
    $578 = (($26) + (($$0544$lcssa*56)|0)|0);
    $579 = $$070 << 2;
    $580 = (1300 - ($579))|0;
    $581 = ((($1) + (($$0538$lcssa*1300)|0)|0) + ($$070<<2)|0);
    $582 = ((($1) + (($$0544$lcssa*1300)|0)|0) + ($$070<<2)|0);
    _memcpy(($582|0),($581|0),($580|0))|0;
    ;HEAP32[$578>>2]=HEAP32[$577>>2]|0;HEAP32[$578+4>>2]=HEAP32[$577+4>>2]|0;HEAP32[$578+8>>2]=HEAP32[$577+8>>2]|0;HEAP32[$578+12>>2]=HEAP32[$577+12>>2]|0;HEAP32[$578+16>>2]=HEAP32[$577+16>>2]|0;HEAP32[$578+20>>2]=HEAP32[$577+20>>2]|0;HEAP32[$578+24>>2]=HEAP32[$577+24>>2]|0;
   }
   $583 = ($$070|0)<($25|0);
   $or$cond = $90 & $583;
   if (!($or$cond)) {
    $584 = ((((($1) + (($$0522$lcssa*1300)|0)|0)) + 544|0) + ($549<<2)|0);
    $585 = HEAP32[$584>>2]|0;
    $586 = $585 >>> 9;
    $587 = (($586) + 1)|0;
    $588 = $587 >>> 1;
    $589 = $588&255;
    $590 = (($$070) - ($25))|0;
    $591 = (($4) + ($590)|0);
    HEAP8[$591>>0] = $589;
    $592 = ((((($1) + (($$0522$lcssa*1300)|0)|0)) + 704|0) + ($549<<2)|0);
    $593 = HEAP32[$592>>2]|0;
    $594 = $593 >> 16;
    $595 = (($7) + ($549<<2)|0);
    $596 = HEAP32[$595>>2]|0;
    $sext = $596 << 16;
    $597 = $sext >> 16;
    $598 = Math_imul($597, $594)|0;
    $599 = $593 & 65535;
    $600 = Math_imul($597, $599)|0;
    $601 = $600 >> 16;
    $602 = (($601) + ($598))|0;
    $603 = $596 >> 15;
    $604 = (($603) + 1)|0;
    $605 = $604 >> 1;
    $606 = Math_imul($605, $593)|0;
    $607 = (($602) + ($606))|0;
    $608 = $607 >>> 7;
    $609 = (($608) + 1)|0;
    $610 = $609 >>> 1;
    $611 = ($607|0)>(8388479);
    $612 = ($607|0)<(-8388736);
    $613 = $610&65535;
    $614 = $612 ? -32768 : $613;
    $615 = $611 ? 32767 : $614;
    $616 = (($5) + ($590<<1)|0);
    HEAP16[$616>>1] = $615;
    $617 = ((((($1) + (($$0522$lcssa*1300)|0)|0)) + 1024|0) + ($549<<2)|0);
    $618 = HEAP32[$617>>2]|0;
    $619 = HEAP32[$27>>2]|0;
    $620 = (($619) - ($25))|0;
    $621 = (((($0)) + 1280|0) + ($620<<2)|0);
    HEAP32[$621>>2] = $618;
    $622 = ((((($1) + (($$0522$lcssa*1300)|0)|0)) + 864|0) + ($549<<2)|0);
    $623 = HEAP32[$622>>2]|0;
    $624 = HEAP32[$28>>2]|0;
    $625 = (($624) - ($25))|0;
    $626 = (($6) + ($625<<2)|0);
    HEAP32[$626>>2] = $623;
   }
   $627 = HEAP32[$27>>2]|0;
   $628 = (($627) + 1)|0;
   HEAP32[$27>>2] = $628;
   $629 = HEAP32[$28>>2]|0;
   $630 = (($629) + 1)|0;
   HEAP32[$28>>2] = $630;
   if ($47) {
    $631 = (($$070) + 16)|0;
    $$464 = 0;
    while(1) {
     $632 = (((($26) + (($$464*56)|0)|0)) + 12|0);
     $633 = HEAP32[$632>>2]|0;
     $634 = (((($1) + (($$464*1300)|0)|0)) + 1280|0);
     HEAP32[$634>>2] = $633;
     $635 = (((($26) + (($$464*56)|0)|0)) + 16|0);
     $636 = HEAP32[$635>>2]|0;
     $637 = (((($1) + (($$464*1300)|0)|0)) + 1284|0);
     HEAP32[$637>>2] = $636;
     $638 = (((($26) + (($$464*56)|0)|0)) + 8|0);
     $639 = HEAP32[$638>>2]|0;
     $640 = ((($1) + (($$464*1300)|0)|0) + ($631<<2)|0);
     HEAP32[$640>>2] = $639;
     $641 = HEAP32[$24>>2]|0;
     $642 = ((((($1) + (($$464*1300)|0)|0)) + 704|0) + ($641<<2)|0);
     HEAP32[$642>>2] = $639;
     $643 = (($26) + (($$464*56)|0)|0);
     $644 = HEAP32[$643>>2]|0;
     $645 = HEAP32[$24>>2]|0;
     $646 = ((((($1) + (($$464*1300)|0)|0)) + 544|0) + ($645<<2)|0);
     HEAP32[$646>>2] = $644;
     $647 = (((($26) + (($$464*56)|0)|0)) + 24|0);
     $648 = HEAP32[$647>>2]|0;
     $649 = $648 << 1;
     $650 = HEAP32[$24>>2]|0;
     $651 = ((((($1) + (($$464*1300)|0)|0)) + 864|0) + ($650<<2)|0);
     HEAP32[$651>>2] = $649;
     $652 = (((($26) + (($$464*56)|0)|0)) + 20|0);
     $653 = HEAP32[$652>>2]|0;
     $654 = HEAP32[$24>>2]|0;
     $655 = ((((($1) + (($$464*1300)|0)|0)) + 1024|0) + ($654<<2)|0);
     HEAP32[$655>>2] = $653;
     $656 = (((($1) + (($$464*1300)|0)|0)) + 1288|0);
     $657 = HEAP32[$656>>2]|0;
     $658 = $644 >> 9;
     $659 = (($658) + 1)|0;
     $660 = $659 >> 1;
     $661 = (($657) + ($660))|0;
     HEAP32[$656>>2] = $661;
     $662 = HEAP32[$24>>2]|0;
     $663 = ((((($1) + (($$464*1300)|0)|0)) + 384|0) + ($662<<2)|0);
     HEAP32[$663>>2] = $661;
     $664 = (((($26) + (($$464*56)|0)|0)) + 4|0);
     $665 = HEAP32[$664>>2]|0;
     $666 = (((($1) + (($$464*1300)|0)|0)) + 1296|0);
     HEAP32[$666>>2] = $665;
     $667 = (($$464) + 1)|0;
     $exitcond80 = ($667|0)==($23|0);
     if ($exitcond80) {
      break;
     } else {
      $$464 = $667;
     }
    }
   }
   $668 = HEAP32[$24>>2]|0;
   $669 = (($7) + ($668<<2)|0);
   HEAP32[$669>>2] = $29;
   $670 = (($$070) + 1)|0;
   $exitcond81 = ($670|0)==($18|0);
   if ($exitcond81) {
    break;
   } else {
    $$051769 = $$1518;$$051968 = $$1520;$$070 = $670;
   }
  }
 }
 $671 = ($23|0)>(0);
 if (!($671)) {
  STACKTOP = sp;return;
 }
 $$530 = 0;
 while(1) {
  $672 = (($1) + (($$530*1300)|0)|0);
  $673 = ((($1) + (($$530*1300)|0)|0) + ($18<<2)|0);
  dest=$672; src=$673; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  $674 = (($$530) + 1)|0;
  $exitcond = ($674|0)==($23|0);
  if ($exitcond) {
   break;
  } else {
   $$530 = $674;
  }
 }
 STACKTOP = sp;return;
}
function _silk_PLC_Reset($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 2328|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 << 7;
 $4 = ((($0)) + 4172|0);
 HEAP32[$4>>2] = $3;
 $5 = ((($0)) + 4244|0);
 HEAP32[$5>>2] = 65536;
 $6 = ((($0)) + 4248|0);
 HEAP32[$6>>2] = 65536;
 $7 = ((($0)) + 4260|0);
 HEAP32[$7>>2] = 20;
 $8 = ((($0)) + 4256|0);
 HEAP32[$8>>2] = 2;
 return;
}
function _silk_PLC($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa$i = 0, $$08898$i = 0, $$099$i = 0, $$1$i = 0, $$phi$trans$insert$i = 0, $$pre$i = 0, $$pre$phi105$iZ2D = 0, $$pre103$i = 0, $$pre104$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i = 0, $or$cond97$i = 0;
 var $sext$i = 0, $sext106$i = 0, $sext107$i = 0, $sext89$i = 0, $sext90$i = 0, $sext91$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 2316|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 4252|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($6|0)==($8|0);
 if (!($9)) {
  $10 = ((($0)) + 2328|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11 << 7;
  $13 = ((($0)) + 4172|0);
  HEAP32[$13>>2] = $12;
  $14 = ((($0)) + 4244|0);
  HEAP32[$14>>2] = 65536;
  $15 = ((($0)) + 4248|0);
  HEAP32[$15>>2] = 65536;
  $16 = ((($0)) + 4260|0);
  HEAP32[$16>>2] = 20;
  $17 = ((($0)) + 4256|0);
  HEAP32[$17>>2] = 2;
  HEAP32[$7>>2] = $6;
 }
 $18 = ($3|0)==(0);
 if (!($18)) {
  _silk_PLC_conceal($0,$1,$2,$4);
  $19 = ((($0)) + 4160|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (($20) + 1)|0;
  HEAP32[$19>>2] = $21;
  return;
 }
 $22 = ((($0)) + 4172|0);
 $23 = ((($0)) + 2765|0);
 $24 = HEAP8[$23>>0]|0;
 $25 = $24 << 24 >> 24;
 $26 = ((($0)) + 4164|0);
 HEAP32[$26>>2] = $25;
 $27 = ($24<<24>>24)==(2);
 do {
  if ($27) {
   $28 = ((($0)) + 2332|0);
   $29 = ((($0)) + 2324|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($30) + -1)|0;
   $32 = (($1) + ($31<<2)|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ($33|0)<(1);
   $35 = ($30|0)==(0);
   $or$cond97$i = $35 | $34;
   if ($or$cond97$i) {
    $$0$lcssa$i = 0;
   } else {
    $36 = ((($0)) + 4176|0);
    $37 = (($30) + 65535)|0;
    $$08898$i = 0;$$099$i = 0;$133 = $33;
    while(1) {
     $38 = (($31) - ($$08898$i))|0;
     $39 = ($38*5)|0;
     $40 = (((($1)) + 96|0) + ($39<<1)|0);
     $41 = HEAP16[$40>>1]|0;
     $42 = $41 << 16 >> 16;
     $43 = (($39) + 1)|0;
     $44 = (((($1)) + 96|0) + ($43<<1)|0);
     $45 = HEAP16[$44>>1]|0;
     $46 = $45 << 16 >> 16;
     $47 = (($46) + ($42))|0;
     $48 = (($39) + 2)|0;
     $49 = (((($1)) + 96|0) + ($48<<1)|0);
     $50 = HEAP16[$49>>1]|0;
     $51 = $50 << 16 >> 16;
     $52 = (($47) + ($51))|0;
     $53 = (($39) + 3)|0;
     $54 = (((($1)) + 96|0) + ($53<<1)|0);
     $55 = HEAP16[$54>>1]|0;
     $56 = $55 << 16 >> 16;
     $57 = (($52) + ($56))|0;
     $58 = (($39) + 4)|0;
     $59 = (((($1)) + 96|0) + ($58<<1)|0);
     $60 = HEAP16[$59>>1]|0;
     $61 = $60 << 16 >> 16;
     $62 = (($57) + ($61))|0;
     $63 = ($62|0)>($$099$i|0);
     if ($63) {
      $64 = (($37) - ($$08898$i))|0;
      $sext91$i = $64 << 16;
      $65 = $sext91$i >> 16;
      $66 = ($65*5)|0;
      $67 = (((($1)) + 96|0) + ($66<<1)|0);
      ;HEAP16[$36>>1]=HEAP16[$67>>1]|0;HEAP16[$36+2>>1]=HEAP16[$67+2>>1]|0;HEAP16[$36+4>>1]=HEAP16[$67+4>>1]|0;HEAP16[$36+6>>1]=HEAP16[$67+6>>1]|0;HEAP16[$36+8>>1]=HEAP16[$67+8>>1]|0;
      $68 = (($1) + ($38<<2)|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = $69 << 8;
      HEAP32[$22>>2] = $70;
      $$pre103$i = HEAP32[$32>>2]|0;
      $$1$i = $62;$75 = $$pre103$i;
     } else {
      $$1$i = $$099$i;$75 = $133;
     }
     $71 = (($$08898$i) + 1)|0;
     $72 = HEAP32[$28>>2]|0;
     $73 = Math_imul($72, $71)|0;
     $74 = ($73|0)>=($75|0);
     $76 = ($71|0)==($30|0);
     $or$cond$i = $76 | $74;
     if ($or$cond$i) {
      $$0$lcssa$i = $$1$i;
      break;
     } else {
      $$08898$i = $71;$$099$i = $$1$i;$133 = $75;
     }
    }
   }
   $77 = ((($0)) + 4176|0);
   ;HEAP32[$77>>2]=0|0;HEAP32[$77+4>>2]=0|0;HEAP16[$77+8>>1]=0|0;
   $78 = $$0$lcssa$i&65535;
   $79 = ((($0)) + 4180|0);
   HEAP16[$79>>1] = $78;
   $80 = ($$0$lcssa$i|0)<(11469);
   if ($80) {
    $81 = ($$0$lcssa$i|0)>(1);
    $82 = $81 ? $$0$lcssa$i : 1;
    $83 = (11744256 / ($82>>>0))&-1;
    $sext90$i = $83 << 16;
    $84 = $sext90$i >> 16;
    $85 = ((($0)) + 4176|0);
    HEAP16[$85>>1] = 0;
    $86 = ((($0)) + 4178|0);
    HEAP16[$86>>1] = 0;
    $sext107$i = $$0$lcssa$i << 16;
    $87 = $sext107$i >> 16;
    $88 = Math_imul($84, $87)|0;
    $89 = $88 >>> 10;
    $90 = $89&65535;
    HEAP16[$79>>1] = $90;
    $91 = ((($0)) + 4182|0);
    HEAP16[$91>>1] = 0;
    $92 = ((($0)) + 4184|0);
    HEAP16[$92>>1] = 0;
    $$pre$phi105$iZ2D = $28;$118 = $30;
    break;
   }
   $93 = ($$0$lcssa$i|0)>(15565);
   if ($93) {
    $94 = (255016960 / ($$0$lcssa$i>>>0))&-1;
    $sext89$i = $94 << 16;
    $95 = $sext89$i >> 16;
    $96 = ((($0)) + 4176|0);
    HEAP16[$96>>1] = 0;
    $97 = ((($0)) + 4178|0);
    HEAP16[$97>>1] = 0;
    $sext106$i = $$0$lcssa$i << 16;
    $98 = $sext106$i >> 16;
    $99 = Math_imul($95, $98)|0;
    $100 = $99 >>> 14;
    $101 = $100&65535;
    HEAP16[$79>>1] = $101;
    $102 = ((($0)) + 4182|0);
    HEAP16[$102>>1] = 0;
    $103 = ((($0)) + 4184|0);
    HEAP16[$103>>1] = 0;
    $$pre$phi105$iZ2D = $28;$118 = $30;
   } else {
    $$pre$phi105$iZ2D = $28;$118 = $30;
   }
  } else {
   $sext$i = $6 << 16;
   $104 = $sext$i >> 16;
   $105 = ($104*4608)|0;
   HEAP32[$22>>2] = $105;
   $106 = ((($0)) + 4176|0);
   ;HEAP32[$106>>2]=0|0;HEAP32[$106+4>>2]=0|0;HEAP16[$106+8>>1]=0|0;
   $$phi$trans$insert$i = ((($0)) + 2324|0);
   $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
   $$pre104$i = ((($0)) + 2332|0);
   $$pre$phi105$iZ2D = $$pre104$i;$118 = $$pre$i;
  }
 } while(0);
 $107 = ((($0)) + 4186|0);
 $108 = ((($1)) + 64|0);
 $109 = ((($0)) + 2340|0);
 $110 = HEAP32[$109>>2]|0;
 $111 = $110 << 1;
 _memcpy(($107|0),($108|0),($111|0))|0;
 $112 = ((($1)) + 136|0);
 $113 = HEAP32[$112>>2]|0;
 $114 = $113&65535;
 $115 = ((($0)) + 4240|0);
 HEAP16[$115>>1] = $114;
 $116 = ((($0)) + 4244|0);
 $117 = (($118) + -2)|0;
 $119 = (((($1)) + 16|0) + ($117<<2)|0);
 $120 = $119;
 $121 = $120;
 $122 = HEAP32[$121>>2]|0;
 $123 = (($120) + 4)|0;
 $124 = $123;
 $125 = HEAP32[$124>>2]|0;
 $126 = $116;
 $127 = $126;
 HEAP32[$127>>2] = $122;
 $128 = (($126) + 4)|0;
 $129 = $128;
 HEAP32[$129>>2] = $125;
 $130 = HEAP32[$$pre$phi105$iZ2D>>2]|0;
 $131 = ((($0)) + 4260|0);
 HEAP32[$131>>2] = $130;
 $132 = ((($0)) + 4256|0);
 HEAP32[$132>>2] = $118;
 return;
}
function _silk_PLC_conceal($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0334383 = 0, $$0335$lcssa = 0, $$0335382 = 0, $$0336381 = 0, $$0342$lcssa = 0, $$0342379 = 0, $$0344$lcssa = 0, $$0344362 = 0, $$0345369 = 0, $$0346 = 0, $$1$i = 0, $$1333363 = 0, $$1337$lcssa = 0, $$1337371 = 0, $$1339 = 0, $$1343$lcssa = 0, $$1343370 = 0, $$1348 = 0, $$1390 = 0;
 var $$2340$lcssa = 0, $$2340380 = 0, $$2372 = 0, $$3341 = 0, $$3364 = 0, $$465 = 0, $$alloca_mul = 0, $$alloca_mul7 = 0, $$phi$trans$insert = 0, $$phi$trans$insert411 = 0, $$phi$trans$insert413 = 0, $$phi$trans$insert415 = 0, $$phi$trans$insert417 = 0, $$pre = 0, $$pre$phi421Z2D = 0, $$pre$phi423Z2D = 0, $$pre$phi425Z2D = 0, $$pre$phi427Z2D = 0, $$pre$phi429Z2D = 0, $$pre$phiZ2D = 0;
 var $$pre404 = 0, $$pre405433 = 0, $$pre406436 = 0, $$pre407439 = 0, $$pre408442 = 0, $$pre409445 = 0, $$pre410 = 0, $$pre412 = 0, $$pre414 = 0, $$pre416 = 0, $$pre418 = 0, $$pre419 = 0, $$pre420 = 0, $$pre422 = 0, $$pre424 = 0, $$pre426 = 0, $$pre428 = 0, $$promoted = 0, $$promoted435 = 0, $$promoted438 = 0;
 var $$promoted441 = 0, $$promoted444 = 0, $$sink464 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0;
 var $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0;
 var $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0;
 var $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0;
 var $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0;
 var $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0;
 var $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0;
 var $496 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $PLC_RAND_ATTENUATE_UV_Q15$sink = 0, $exitcond = 0, $sext = 0, $sext351 = 0;
 var $sext352 = 0, $sext396 = 0, $spec$select = 0, $spec$select$i = 0, $spec$select3$i = 0, $spec$select355 = 0, $spec$select356 = 0, $spec$select358 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 44|0;
 $7 = sp + 40|0;
 $8 = sp;
 $9 = sp + 32|0;
 $10 = ((($0)) + 2336|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 2328|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($13) + ($11))|0;
 $15 = (_llvm_stacksave()|0);
 $$alloca_mul = $14<<2;
 $16 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $17 = HEAP32[$10>>2]|0;
 $$alloca_mul7 = $17<<1;
 $18 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul7)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul7)|0)+15)&-16)|0);;
 $19 = ((($0)) + 4244|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $20 >> 6;
 HEAP32[$9>>2] = $21;
 $22 = ((($0)) + 4248|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = $23 >> 6;
 $25 = ((($9)) + 4|0);
 HEAP32[$25>>2] = $24;
 $26 = ((($0)) + 2376|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ($27|0)==(0);
 if (!($28)) {
  $29 = ((($0)) + 4186|0);
  dest=$29; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 }
 $30 = ((($0)) + 4|0);
 $31 = ((($0)) + 2332|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ((($0)) + 2324|0);
 $34 = HEAP32[$33>>2]|0;
 _silk_PLC_energy($6,$4,$7,$5,$30,$9,$32,$34);
 $35 = HEAP32[$6>>2]|0;
 $36 = HEAP32[$5>>2]|0;
 $37 = $35 >> $36;
 $38 = HEAP32[$7>>2]|0;
 $39 = HEAP32[$4>>2]|0;
 $40 = $38 >> $39;
 $41 = ($37|0)<($40|0);
 $42 = ((($0)) + 4256|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = $41 << 31 >> 31;
 $$sink464 = (($43) + ($44))|0;
 $45 = ((($0)) + 4260|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = Math_imul($46, $$sink464)|0;
 $48 = (($47) + -128)|0;
 $49 = ($48|0)>(0);
 $50 = $49 ? $48 : 0;
 $$0346 = (((($0)) + 4|0) + ($50<<2)|0);
 $51 = ((($0)) + 4176|0);
 $52 = ((($0)) + 4228|0);
 $53 = HEAP16[$52>>1]|0;
 $54 = ((($0)) + 4160|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = ($55|0)<(1);
 $57 = $56 ? $55 : 1;
 $58 = (37382 + ($57<<1)|0);
 $59 = HEAP16[$58>>1]|0;
 $60 = $59 << 16 >> 16;
 $61 = ((($0)) + 4164|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = ($62|0)==(2);
 $PLC_RAND_ATTENUATE_UV_Q15$sink = $63 ? 37386 : 37390;
 $64 = (($PLC_RAND_ATTENUATE_UV_Q15$sink) + ($57<<1)|0);
 $65 = HEAP16[$64>>1]|0;
 $66 = $65 << 16 >> 16;
 $67 = ((($0)) + 4186|0);
 $68 = ((($0)) + 2340|0);
 $69 = HEAP32[$68>>2]|0;
 _silk_bwexpander($67,$69,64881);
 $70 = HEAP32[$68>>2]|0;
 $71 = $70 << 1;
 _memcpy(($8|0),($67|0),($71|0))|0;
 $72 = HEAP32[$54>>2]|0;
 $73 = ($72|0)==(0);
 do {
  if ($73) {
   $74 = HEAP32[$61>>2]|0;
   $75 = ($74|0)==(2);
   if ($75) {
    $76 = HEAP16[$51>>1]|0;
    $77 = ((($0)) + 4178|0);
    $78 = HEAP16[$77>>1]|0;
    $79 = $78&65535;
    $80 = (16384 - ($76))<<16>>16;
    $81 = $80&65535;
    $82 = (($81) - ($79))|0;
    $83 = ((($0)) + 4180|0);
    $84 = HEAP16[$83>>1]|0;
    $85 = $84&65535;
    $86 = (($82) - ($85))|0;
    $87 = ((($0)) + 4182|0);
    $88 = HEAP16[$87>>1]|0;
    $89 = $88&65535;
    $90 = (($86) - ($89))|0;
    $91 = ((($0)) + 4184|0);
    $92 = HEAP16[$91>>1]|0;
    $93 = $92&65535;
    $94 = (($90) - ($93))|0;
    $sext396 = $94 << 16;
    $95 = $sext396 >> 16;
    $96 = ($95|0)>(3277);
    $97 = $96 ? $95 : 3277;
    $98 = ((($0)) + 4240|0);
    $99 = HEAP16[$98>>1]|0;
    $100 = $99 << 16 >> 16;
    $101 = Math_imul($97, $100)|0;
    $102 = $101 >>> 14;
    $103 = $102&65535;
    $$1339 = $103;$$1348 = $66;$127 = $70;
    break;
   } else {
    $104 = (_silk_LPC_inverse_pred_gain_c($67,$70)|0);
    $105 = ($104|0)<(134217728);
    $106 = $105 ? $104 : 134217728;
    $107 = ($106|0)>(4194304);
    $108 = $107 ? $106 : 4194304;
    $109 = $108 << 3;
    $110 = $109 >> 16;
    $111 = Math_imul($110, $66)|0;
    $112 = $109 & 65528;
    $113 = Math_imul($112, $66)|0;
    $114 = $113 >> 16;
    $115 = (($114) + ($111))|0;
    $116 = $115 >> 14;
    $$pre = HEAP32[$68>>2]|0;
    $$1339 = 16384;$$1348 = $116;$127 = $$pre;
    break;
   }
  } else {
   $$1339 = $53;$$1348 = $66;$127 = $70;
  }
 } while(0);
 $117 = ((($0)) + 4224|0);
 $118 = HEAP32[$117>>2]|0;
 $119 = ((($0)) + 4172|0);
 $120 = HEAP32[$119>>2]|0;
 $121 = $120 >> 7;
 $122 = (($121) + 1)|0;
 $123 = $122 >> 1;
 $124 = HEAP32[$10>>2]|0;
 $125 = (($124) + -2)|0;
 $126 = (($125) - ($127))|0;
 $128 = (($126) - ($123))|0;
 $129 = (($18) + ($128<<1)|0);
 $130 = (((($0)) + 1348|0) + ($128<<1)|0);
 $131 = (($124) - ($128))|0;
 _silk_LPC_analysis_filter($129,$130,$8,$131,$127,$3);
 $132 = HEAP32[$22>>2]|0;
 $133 = ($132|0)>(0);
 $134 = (0 - ($132))|0;
 $135 = $133 ? $132 : $134;
 $136 = (Math_clz32(($135|0))|0);
 $137 = (($136) + -1)|0;
 $138 = $132 << $137;
 $139 = $138 >> 16;
 $140 = (536870911 / ($139|0))&-1;
 $141 = $140 << 16;
 $142 = $141 >> 16;
 $143 = Math_imul($139, $142)|0;
 $144 = $138 & 65535;
 $145 = Math_imul($144, $142)|0;
 $146 = $145 >> 16;
 $147 = (($146) + ($143))|0;
 $148 = $147 << 3;
 $149 = (0 - ($148))|0;
 $150 = $149 >> 16;
 $151 = Math_imul($150, $142)|0;
 $152 = $149 & 65528;
 $153 = Math_imul($152, $142)|0;
 $154 = $153 >> 16;
 $155 = $140 >> 15;
 $156 = (($155) + 1)|0;
 $157 = $156 >> 1;
 $158 = Math_imul($157, $149)|0;
 $159 = (($158) + ($141))|0;
 $160 = (($159) + ($151))|0;
 $161 = (($160) + ($154))|0;
 $162 = (62 - ($136))|0;
 $163 = ($162|0)<(47);
 if ($163) {
  $164 = (46 - ($162))|0;
  $165 = -2147483648 >> $164;
  $166 = 2147483647 >>> $164;
  $167 = ($165|0)>($166|0);
  $$ = $167 ? $165 : $166;
  $$465 = $167 ? $166 : $165;
  $168 = ($161|0)>($$|0);
  $169 = ($161|0)<($$465|0);
  $$1$i = $169 ? $$465 : $161;
  $spec$select3$i = $168 ? $$ : $$1$i;
  $170 = $spec$select3$i << $164;
  $175 = $170;
 } else {
  $171 = (($162) + -46)|0;
  $172 = ($162|0)<(78);
  $173 = $161 >> $171;
  $spec$select$i = $172 ? $173 : 0;
  $175 = $spec$select$i;
 }
 $174 = ($175|0)<(1073741823);
 $176 = $174 ? $175 : 1073741823;
 $177 = HEAP32[$68>>2]|0;
 $178 = (($177) + ($128))|0;
 $179 = HEAP32[$10>>2]|0;
 $180 = ($178|0)<($179|0);
 if ($180) {
  $181 = $176 >> 16;
  $182 = $176 & 65535;
  $$1390 = $178;
  while(1) {
   $183 = (($18) + ($$1390<<1)|0);
   $184 = HEAP16[$183>>1]|0;
   $185 = $184 << 16 >> 16;
   $186 = Math_imul($181, $185)|0;
   $187 = Math_imul($182, $185)|0;
   $188 = $187 >> 16;
   $189 = (($188) + ($186))|0;
   $190 = (($16) + ($$1390<<2)|0);
   HEAP32[$190>>2] = $189;
   $191 = (($$1390) + 1)|0;
   $192 = ($191|0)<($179|0);
   if ($192) {
    $$1390 = $191;
   } else {
    break;
   }
  }
 }
 $193 = HEAP32[$33>>2]|0;
 $194 = ($193|0)>(0);
 if ($194) {
  $195 = ((($0)) + 4178|0);
  $196 = ((($0)) + 4180|0);
  $197 = ((($0)) + 4182|0);
  $198 = ((($0)) + 4184|0);
  $199 = ((($0)) + 2765|0);
  $200 = HEAP8[$199>>0]|0;
  $201 = ($200<<24>>24)==(0);
  $sext352 = $$1348 << 16;
  $202 = $sext352 >> 16;
  $203 = ((($0)) + 2316|0);
  $$pre404 = HEAP32[$31>>2]|0;
  $204 = ($$pre404|0)>(0);
  $$promoted = HEAP16[$51>>1]|0;
  $$promoted435 = HEAP16[$195>>1]|0;
  $$promoted438 = HEAP16[$196>>1]|0;
  $$promoted441 = HEAP16[$197>>1]|0;
  $$promoted444 = HEAP16[$198>>1]|0;
  $$0334383 = 0;$$0335382 = $123;$$0336381 = $124;$$0342379 = $118;$$2340380 = $$1339;$$pre405433 = $$promoted;$$pre406436 = $$promoted435;$$pre407439 = $$promoted438;$$pre408442 = $$promoted441;$$pre409445 = $$promoted444;
  while(1) {
   if ($204) {
    $205 = (($$0336381) + 2)|0;
    $206 = (($205) - ($$0335382))|0;
    $207 = (($16) + ($206<<2)|0);
    $208 = $$pre405433 << 16 >> 16;
    $209 = $$pre406436 << 16 >> 16;
    $210 = $$pre407439 << 16 >> 16;
    $211 = $$pre408442 << 16 >> 16;
    $212 = $$pre409445 << 16 >> 16;
    $213 = $$2340380 << 16 >> 16;
    $$0345369 = $207;$$1337371 = $$0336381;$$1343370 = $$0342379;$$2372 = 0;
    while(1) {
     $214 = HEAP32[$$0345369>>2]|0;
     $215 = $214 >> 16;
     $216 = Math_imul($215, $208)|0;
     $217 = $214 & 65535;
     $218 = Math_imul($217, $208)|0;
     $219 = $218 >> 16;
     $220 = ((($$0345369)) + -4|0);
     $221 = HEAP32[$220>>2]|0;
     $222 = $221 >> 16;
     $223 = Math_imul($222, $209)|0;
     $224 = $221 & 65535;
     $225 = Math_imul($224, $209)|0;
     $226 = $225 >> 16;
     $227 = ((($$0345369)) + -8|0);
     $228 = HEAP32[$227>>2]|0;
     $229 = $228 >> 16;
     $230 = Math_imul($229, $210)|0;
     $231 = $228 & 65535;
     $232 = Math_imul($231, $210)|0;
     $233 = $232 >> 16;
     $234 = ((($$0345369)) + -12|0);
     $235 = HEAP32[$234>>2]|0;
     $236 = $235 >> 16;
     $237 = Math_imul($236, $211)|0;
     $238 = $235 & 65535;
     $239 = Math_imul($238, $211)|0;
     $240 = $239 >> 16;
     $241 = ((($$0345369)) + -16|0);
     $242 = HEAP32[$241>>2]|0;
     $243 = $242 >> 16;
     $244 = Math_imul($243, $212)|0;
     $245 = $242 & 65535;
     $246 = Math_imul($245, $212)|0;
     $247 = $246 >> 16;
     $248 = ((($$0345369)) + 4|0);
     $249 = Math_imul($$1343370, 196314165)|0;
     $250 = (($249) + 907633515)|0;
     $251 = $250 >>> 25;
     $252 = (($$0346) + ($251<<2)|0);
     $253 = HEAP32[$252>>2]|0;
     $254 = $253 >> 16;
     $255 = Math_imul($254, $213)|0;
     $256 = $253 & 65535;
     $257 = Math_imul($256, $213)|0;
     $258 = $257 >> 16;
     $259 = (($216) + 2)|0;
     $260 = (($259) + ($219))|0;
     $261 = (($260) + ($223))|0;
     $262 = (($261) + ($226))|0;
     $263 = (($262) + ($230))|0;
     $264 = (($263) + ($233))|0;
     $265 = (($264) + ($237))|0;
     $266 = (($265) + ($240))|0;
     $267 = (($266) + ($244))|0;
     $268 = (($267) + ($247))|0;
     $269 = (($268) + ($255))|0;
     $270 = (($269) + ($258))|0;
     $271 = $270 << 2;
     $272 = (($16) + ($$1337371<<2)|0);
     HEAP32[$272>>2] = $271;
     $273 = (($$1337371) + 1)|0;
     $274 = (($$2372) + 1)|0;
     $275 = ($274|0)<($$pre404|0);
     if ($275) {
      $$0345369 = $248;$$1337371 = $273;$$1343370 = $250;$$2372 = $274;
     } else {
      $$1337$lcssa = $273;$$1343$lcssa = $250;$$pre$phi421Z2D = $209;$$pre$phi423Z2D = $210;$$pre$phi425Z2D = $211;$$pre$phi427Z2D = $212;$$pre$phi429Z2D = $213;$$pre$phiZ2D = $208;
      break;
     }
    }
   } else {
    $$pre419 = $$pre405433 << 16 >> 16;
    $$pre420 = $$pre406436 << 16 >> 16;
    $$pre422 = $$pre407439 << 16 >> 16;
    $$pre424 = $$pre408442 << 16 >> 16;
    $$pre426 = $$pre409445 << 16 >> 16;
    $$pre428 = $$2340380 << 16 >> 16;
    $$1337$lcssa = $$0336381;$$1343$lcssa = $$0342379;$$pre$phi421Z2D = $$pre420;$$pre$phi423Z2D = $$pre422;$$pre$phi425Z2D = $$pre424;$$pre$phi427Z2D = $$pre426;$$pre$phi429Z2D = $$pre428;$$pre$phiZ2D = $$pre419;
   }
   $276 = Math_imul($$pre$phiZ2D, $60)|0;
   $277 = $276 >>> 15;
   $278 = $277&65535;
   $279 = Math_imul($$pre$phi421Z2D, $60)|0;
   $280 = $279 >>> 15;
   $281 = $280&65535;
   $282 = Math_imul($$pre$phi423Z2D, $60)|0;
   $283 = $282 >>> 15;
   $284 = $283&65535;
   $285 = Math_imul($$pre$phi425Z2D, $60)|0;
   $286 = $285 >>> 15;
   $287 = $286&65535;
   $288 = Math_imul($$pre$phi427Z2D, $60)|0;
   $289 = $288 >>> 15;
   $290 = $289&65535;
   $291 = Math_imul($202, $$pre$phi429Z2D)|0;
   $292 = $291 >>> 15;
   $293 = $292&65535;
   $$3341 = $201 ? $$2340380 : $293;
   $294 = HEAP32[$119>>2]|0;
   $295 = $294 >> 16;
   $296 = ($295*655)|0;
   $297 = $294 & 65535;
   $298 = ($297*655)|0;
   $299 = $298 >>> 16;
   $300 = (($296) + ($294))|0;
   $301 = (($300) + ($299))|0;
   $302 = HEAP32[$203>>2]|0;
   $sext351 = $302 << 16;
   $303 = $sext351 >> 16;
   $304 = ($303*4608)|0;
   $305 = ($301|0)<($304|0);
   $306 = $305 ? $301 : $304;
   HEAP32[$119>>2] = $306;
   $307 = $306 >> 7;
   $308 = (($307) + 1)|0;
   $309 = $308 >> 1;
   $310 = (($$0334383) + 1)|0;
   $311 = ($310|0)<($193|0);
   if ($311) {
    $$0334383 = $310;$$0335382 = $309;$$0336381 = $$1337$lcssa;$$0342379 = $$1343$lcssa;$$2340380 = $$3341;$$pre405433 = $278;$$pre406436 = $281;$$pre407439 = $284;$$pre408442 = $287;$$pre409445 = $290;
   } else {
    break;
   }
  }
  HEAP16[$51>>1] = $278;
  HEAP16[$195>>1] = $281;
  HEAP16[$196>>1] = $284;
  HEAP16[$197>>1] = $287;
  HEAP16[$198>>1] = $290;
  $$0335$lcssa = $309;$$0342$lcssa = $$1343$lcssa;$$2340$lcssa = $$3341;
 } else {
  $$0335$lcssa = $123;$$0342$lcssa = $118;$$2340$lcssa = $$1339;
 }
 $312 = (($179) + -16)|0;
 $313 = (($16) + ($312<<2)|0);
 $314 = ((($0)) + 1284|0);
 dest=$313; src=$314; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $315 = HEAP32[$12>>2]|0;
 $316 = ($315|0)>(0);
 if (!($316)) {
  $493 = (($313) + ($315<<2)|0);
  dest=$314; src=$493; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  HEAP32[$117>>2] = $$0342$lcssa;
  HEAP16[$52>>1] = $$2340$lcssa;
  HEAP32[$1>>2] = $$0335$lcssa;
  $494 = ((($1)) + 4|0);
  HEAP32[$494>>2] = $$0335$lcssa;
  $495 = ((($1)) + 8|0);
  HEAP32[$495>>2] = $$0335$lcssa;
  $496 = ((($1)) + 12|0);
  HEAP32[$496>>2] = $$0335$lcssa;
  _llvm_stackrestore(($15|0));
  STACKTOP = sp;return;
 }
 $317 = $177 >> 1;
 $318 = HEAP16[$8>>1]|0;
 $319 = $318 << 16 >> 16;
 $320 = ((($8)) + 2|0);
 $321 = HEAP16[$320>>1]|0;
 $322 = $321 << 16 >> 16;
 $323 = ((($8)) + 4|0);
 $324 = HEAP16[$323>>1]|0;
 $325 = $324 << 16 >> 16;
 $326 = ((($8)) + 6|0);
 $327 = HEAP16[$326>>1]|0;
 $328 = $327 << 16 >> 16;
 $329 = ((($8)) + 8|0);
 $330 = HEAP16[$329>>1]|0;
 $331 = $330 << 16 >> 16;
 $332 = ((($8)) + 10|0);
 $333 = HEAP16[$332>>1]|0;
 $334 = $333 << 16 >> 16;
 $335 = ((($8)) + 12|0);
 $336 = HEAP16[$335>>1]|0;
 $337 = $336 << 16 >> 16;
 $338 = ((($8)) + 14|0);
 $339 = HEAP16[$338>>1]|0;
 $340 = $339 << 16 >> 16;
 $341 = ((($8)) + 16|0);
 $342 = HEAP16[$341>>1]|0;
 $343 = $342 << 16 >> 16;
 $344 = ((($8)) + 18|0);
 $345 = HEAP16[$344>>1]|0;
 $346 = $345 << 16 >> 16;
 $347 = ($177|0)>(10);
 $sext = $24 << 16;
 $348 = $sext >> 16;
 $349 = $23 >> 21;
 $350 = (($349) + 1)|0;
 $351 = $350 >> 1;
 $$phi$trans$insert = ((($313)) + 60|0);
 $$pre410 = HEAP32[$$phi$trans$insert>>2]|0;
 $$phi$trans$insert411 = ((($313)) + 52|0);
 $$pre412 = HEAP32[$$phi$trans$insert411>>2]|0;
 $$phi$trans$insert413 = ((($313)) + 44|0);
 $$pre414 = HEAP32[$$phi$trans$insert413>>2]|0;
 $$phi$trans$insert415 = ((($313)) + 36|0);
 $$pre416 = HEAP32[$$phi$trans$insert415>>2]|0;
 $$phi$trans$insert417 = ((($313)) + 28|0);
 $$pre418 = HEAP32[$$phi$trans$insert417>>2]|0;
 $$3364 = 0;$355 = $$pre410;$369 = $$pre412;$383 = $$pre414;$397 = $$pre416;$411 = $$pre418;
 while(1) {
  $352 = (($$3364) + 16)|0;
  $353 = (($$3364) + 15)|0;
  $354 = $355 >> 16;
  $356 = Math_imul($354, $319)|0;
  $357 = $355 & 65535;
  $358 = Math_imul($357, $319)|0;
  $359 = $358 >> 16;
  $360 = (($$3364) + 14)|0;
  $361 = (($313) + ($360<<2)|0);
  $362 = HEAP32[$361>>2]|0;
  $363 = $362 >> 16;
  $364 = Math_imul($363, $322)|0;
  $365 = $362 & 65535;
  $366 = Math_imul($365, $322)|0;
  $367 = $366 >> 16;
  $368 = $369 >> 16;
  $370 = Math_imul($368, $325)|0;
  $371 = $369 & 65535;
  $372 = Math_imul($371, $325)|0;
  $373 = $372 >> 16;
  $374 = (($$3364) + 12)|0;
  $375 = (($313) + ($374<<2)|0);
  $376 = HEAP32[$375>>2]|0;
  $377 = $376 >> 16;
  $378 = Math_imul($377, $328)|0;
  $379 = $376 & 65535;
  $380 = Math_imul($379, $328)|0;
  $381 = $380 >> 16;
  $382 = $383 >> 16;
  $384 = Math_imul($382, $331)|0;
  $385 = $383 & 65535;
  $386 = Math_imul($385, $331)|0;
  $387 = $386 >> 16;
  $388 = (($$3364) + 10)|0;
  $389 = (($313) + ($388<<2)|0);
  $390 = HEAP32[$389>>2]|0;
  $391 = $390 >> 16;
  $392 = Math_imul($391, $334)|0;
  $393 = $390 & 65535;
  $394 = Math_imul($393, $334)|0;
  $395 = $394 >> 16;
  $396 = $397 >> 16;
  $398 = Math_imul($396, $337)|0;
  $399 = $397 & 65535;
  $400 = Math_imul($399, $337)|0;
  $401 = $400 >> 16;
  $402 = (($$3364) + 8)|0;
  $403 = (($313) + ($402<<2)|0);
  $404 = HEAP32[$403>>2]|0;
  $405 = $404 >> 16;
  $406 = Math_imul($405, $340)|0;
  $407 = $404 & 65535;
  $408 = Math_imul($407, $340)|0;
  $409 = $408 >> 16;
  $410 = $411 >> 16;
  $412 = Math_imul($410, $343)|0;
  $413 = $411 & 65535;
  $414 = Math_imul($413, $343)|0;
  $415 = $414 >> 16;
  $416 = (($$3364) + 6)|0;
  $417 = (($313) + ($416<<2)|0);
  $418 = HEAP32[$417>>2]|0;
  $419 = $418 >> 16;
  $420 = Math_imul($419, $346)|0;
  $421 = $418 & 65535;
  $422 = Math_imul($421, $346)|0;
  $423 = $422 >> 16;
  $424 = (($356) + ($317))|0;
  $425 = (($424) + ($359))|0;
  $426 = (($425) + ($364))|0;
  $427 = (($426) + ($367))|0;
  $428 = (($427) + ($370))|0;
  $429 = (($428) + ($373))|0;
  $430 = (($429) + ($378))|0;
  $431 = (($430) + ($381))|0;
  $432 = (($431) + ($384))|0;
  $433 = (($432) + ($387))|0;
  $434 = (($433) + ($392))|0;
  $435 = (($434) + ($395))|0;
  $436 = (($435) + ($398))|0;
  $437 = (($436) + ($401))|0;
  $438 = (($437) + ($406))|0;
  $439 = (($438) + ($409))|0;
  $440 = (($439) + ($412))|0;
  $441 = (($440) + ($415))|0;
  $442 = (($441) + ($420))|0;
  $443 = (($442) + ($423))|0;
  if ($347) {
   $$0344362 = $443;$$1333363 = 10;
   while(1) {
    $444 = (($353) - ($$1333363))|0;
    $445 = (($313) + ($444<<2)|0);
    $446 = HEAP32[$445>>2]|0;
    $447 = $446 >> 16;
    $448 = (($8) + ($$1333363<<1)|0);
    $449 = HEAP16[$448>>1]|0;
    $450 = $449 << 16 >> 16;
    $451 = Math_imul($447, $450)|0;
    $452 = $446 & 65535;
    $453 = Math_imul($452, $450)|0;
    $454 = $453 >> 16;
    $455 = (($451) + ($$0344362))|0;
    $456 = (($455) + ($454))|0;
    $457 = (($$1333363) + 1)|0;
    $exitcond = ($457|0)==($177|0);
    if ($exitcond) {
     $$0344$lcssa = $456;
     break;
    } else {
     $$0344362 = $456;$$1333363 = $457;
    }
   }
  } else {
   $$0344$lcssa = $443;
  }
  $458 = (($313) + ($352<<2)|0);
  $459 = HEAP32[$458>>2]|0;
  $460 = ($$0344$lcssa|0)>(-134217728);
  $461 = $460 ? $$0344$lcssa : -134217728;
  $462 = ($461|0)<(134217727);
  $463 = $462 ? $461 : 134217727;
  $464 = $463 << 4;
  $465 = (($459) + ($464))|0;
  $466 = ($465|0)>(-1);
  if ($466) {
   $467 = $459 & $464;
   $468 = ($467|0)<(0);
   $spec$select355 = $468 ? -2147483648 : $465;
   $471 = $spec$select355;
  } else {
   $469 = $459 | $464;
   $470 = ($469|0)>(-1);
   $spec$select356 = $470 ? 2147483647 : $465;
   $471 = $spec$select356;
  }
  HEAP32[$458>>2] = $471;
  $472 = $471 >> 16;
  $473 = Math_imul($472, $348)|0;
  $474 = $471 & 65535;
  $475 = Math_imul($474, $348)|0;
  $476 = $475 >> 16;
  $477 = Math_imul($471, $351)|0;
  $478 = (($473) + ($477))|0;
  $479 = (($478) + ($476))|0;
  $480 = $479 >> 7;
  $481 = (($480) + 1)|0;
  $482 = $481 >> 1;
  $483 = ($479|0)>(8388479);
  $484 = ($479|0)<(-8388736);
  $spec$select = $484 ? -32768 : $482;
  $485 = $483 ? 32767 : $spec$select;
  $486 = ($485|0)>(-32768);
  $spec$select358 = $486 ? $485 : -32768;
  $487 = ($spec$select358|0)<(32767);
  $488 = $487 ? $spec$select358 : 32767;
  $489 = $488&65535;
  $490 = (($2) + ($$3364<<1)|0);
  HEAP16[$490>>1] = $489;
  $491 = (($$3364) + 1)|0;
  $492 = ($491|0)<($315|0);
  if ($492) {
   $$3364 = $491;$355 = $471;$369 = $362;$383 = $376;$397 = $390;$411 = $404;
  } else {
   break;
  }
 }
 $493 = (($313) + ($315<<2)|0);
 dest=$314; src=$493; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 HEAP32[$117>>2] = $$0342$lcssa;
 HEAP16[$52>>1] = $$2340$lcssa;
 HEAP32[$1>>2] = $$0335$lcssa;
 $494 = ((($1)) + 4|0);
 HEAP32[$494>>2] = $$0335$lcssa;
 $495 = ((($1)) + 8|0);
 HEAP32[$495>>2] = $$0335$lcssa;
 $496 = ((($1)) + 12|0);
 HEAP32[$496>>2] = $$0335$lcssa;
 _llvm_stackrestore(($15|0));
 STACKTOP = sp;return;
}
function _silk_PLC_energy($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$087$us = 0, $$087$us$1 = 0, $$alloca_mul = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $8 = 0, $9 = 0, $exitcond = 0, $exitcond$1 = 0, $sext$us = 0, $sext$us$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = $6 << 1;
 $$alloca_mul = $8<<1;
 $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $10 = ($6|0)>(0);
 if (!($10)) {
  $$pre = (($9) + ($6<<1)|0);
  $$pre$phiZ2D = $$pre;
  _silk_sum_sqr_shift($0,$1,$9,$6);
  _silk_sum_sqr_shift($2,$3,$$pre$phiZ2D,$6);
  STACKTOP = sp;return;
 }
 $11 = (($7) + -2)|0;
 $12 = Math_imul($11, $6)|0;
 $13 = HEAP32[$5>>2]|0;
 $sext$us = $13 << 16;
 $14 = $sext$us >> 16;
 $15 = $13 >> 15;
 $16 = (($15) + 1)|0;
 $17 = $16 >> 1;
 $$087$us = 0;
 while(1) {
  $18 = (($$087$us) + ($12))|0;
  $19 = (($4) + ($18<<2)|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = $20 >> 16;
  $22 = Math_imul($14, $21)|0;
  $23 = $20 & 65535;
  $24 = Math_imul($14, $23)|0;
  $25 = $24 >> 16;
  $26 = (($25) + ($22))|0;
  $27 = Math_imul($17, $20)|0;
  $28 = (($26) + ($27))|0;
  $29 = $28 >>> 8;
  $30 = ($28|0)>(8388607);
  $31 = ($28|0)<(-8388608);
  $32 = $29&65535;
  $33 = $31 ? -32768 : $32;
  $34 = $30 ? 32767 : $33;
  $35 = (($9) + ($$087$us<<1)|0);
  HEAP16[$35>>1] = $34;
  $36 = (($$087$us) + 1)|0;
  $exitcond = ($36|0)==($6|0);
  if ($exitcond) {
   break;
  } else {
   $$087$us = $36;
  }
 }
 $37 = (($9) + ($6<<1)|0);
 $38 = (($7) + -1)|0;
 $39 = Math_imul($38, $6)|0;
 $40 = ((($5)) + 4|0);
 $41 = HEAP32[$40>>2]|0;
 $sext$us$1 = $41 << 16;
 $42 = $sext$us$1 >> 16;
 $43 = $41 >> 15;
 $44 = (($43) + 1)|0;
 $45 = $44 >> 1;
 $$087$us$1 = 0;
 while(1) {
  $46 = (($$087$us$1) + ($39))|0;
  $47 = (($4) + ($46<<2)|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = $48 >> 16;
  $50 = Math_imul($42, $49)|0;
  $51 = $48 & 65535;
  $52 = Math_imul($42, $51)|0;
  $53 = $52 >> 16;
  $54 = (($53) + ($50))|0;
  $55 = Math_imul($45, $48)|0;
  $56 = (($54) + ($55))|0;
  $57 = $56 >>> 8;
  $58 = ($56|0)>(8388607);
  $59 = ($56|0)<(-8388608);
  $60 = $57&65535;
  $61 = $59 ? -32768 : $60;
  $62 = $58 ? 32767 : $61;
  $63 = (($37) + ($$087$us$1<<1)|0);
  HEAP16[$63>>1] = $62;
  $64 = (($$087$us$1) + 1)|0;
  $exitcond$1 = ($64|0)==($6|0);
  if ($exitcond$1) {
   $$pre$phiZ2D = $37;
   break;
  } else {
   $$087$us$1 = $64;
  }
 }
 _silk_sum_sqr_shift($0,$1,$9,$6);
 _silk_sum_sqr_shift($2,$3,$$pre$phiZ2D,$6);
 STACKTOP = sp;return;
}
function _silk_PLC_glue_frames($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$i = 0, $$0$i$i$i = 0, $$05354 = 0, $$055 = 0, $$09$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $or$cond = 0, $phitmp = 0, $sext$i = 0, $sext10$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $4 = sp;
 $5 = ((($0)) + 4160|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0);
 if (!($7)) {
  $8 = ((($0)) + 4232|0);
  $9 = ((($0)) + 4236|0);
  _silk_sum_sqr_shift($8,$9,$1,$2);
  $10 = ((($0)) + 4220|0);
  HEAP32[$10>>2] = 1;
  STACKTOP = sp;return;
 }
 $11 = ((($0)) + 4220|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0);
 if (!($13)) {
  _silk_sum_sqr_shift($4,$3,$1,$2);
  $14 = HEAP32[$3>>2]|0;
  $15 = ((($0)) + 4236|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($14|0)>($16|0);
  if ($17) {
   $18 = ((($0)) + 4232|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = (($14) - ($16))|0;
   $21 = $19 >> $20;
   HEAP32[$18>>2] = $21;
  } else {
   $22 = ($14|0)<($16|0);
   if ($22) {
    $23 = (($16) - ($14))|0;
    $24 = HEAP32[$4>>2]|0;
    $25 = $24 >> $23;
    HEAP32[$4>>2] = $25;
   }
  }
  $26 = HEAP32[$4>>2]|0;
  $27 = ((($0)) + 4232|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ($26|0)>($28|0);
  if ($29) {
   $30 = (Math_clz32(($28|0))|0);
   $31 = (($30) + -1)|0;
   $32 = $28 << $31;
   HEAP32[$27>>2] = $32;
   $33 = (25 - ($30))|0;
   $34 = ($33|0)>(0);
   $35 = $34 ? $33 : 0;
   $36 = $26 >> $35;
   HEAP32[$4>>2] = $36;
   $37 = ($36|0)>(1);
   $38 = $37 ? $36 : 1;
   $39 = (($32|0) / ($38|0))&-1;
   $40 = ($39|0)<(1);
   if ($40) {
    $$09$i = 0;
   } else {
    $41 = (Math_clz32(($39|0))|0);
    $42 = (24 - ($41))|0;
    $43 = (0 - ($42))|0;
    $44 = ($42|0)==(0);
    do {
     if ($44) {
      $$0$i$i$i = $39;
     } else {
      $45 = ($42|0)<(0);
      if ($45) {
       $46 = $39 << $43;
       $47 = (($42) + 32)|0;
       $48 = $39 >>> $47;
       $49 = $48 | $46;
       $$0$i$i$i = $49;
       break;
      } else {
       $50 = (32 - ($42))|0;
       $51 = $39 << $50;
       $52 = $39 >>> $42;
       $53 = $51 | $52;
       $$0$i$i$i = $53;
       break;
      }
     }
    } while(0);
    $54 = $41 & 1;
    $55 = ($54|0)==(0);
    $$$i = $55 ? 46214 : 32768;
    $56 = $41 >>> 1;
    $57 = $$$i >>> $56;
    $58 = $57 >> 16;
    $sext$i = $$0$i$i$i & 127;
    $sext10$i = Math_imul($sext$i, 13959168)|0;
    $59 = $sext10$i >>> 16;
    $60 = Math_imul($59, $58)|0;
    $61 = $57 & 65535;
    $62 = Math_imul($59, $61)|0;
    $63 = $62 >>> 16;
    $64 = (($60) + ($57))|0;
    $65 = (($64) + ($63))|0;
    $phitmp = $65 << 4;
    $$09$i = $phitmp;
   }
   $66 = (65536 - ($$09$i))|0;
   $67 = (($66|0) / ($2|0))&-1;
   $68 = $67 << 2;
   $69 = ($2|0)>(0);
   if ($69) {
    $$05354 = 0;$$055 = $$09$i;
    while(1) {
     $70 = $$055 >> 16;
     $71 = (($1) + ($$05354<<1)|0);
     $72 = HEAP16[$71>>1]|0;
     $73 = $72 << 16 >> 16;
     $74 = Math_imul($70, $73)|0;
     $75 = $$055 & 65532;
     $76 = Math_imul($75, $73)|0;
     $77 = $76 >>> 16;
     $78 = (($77) + ($74))|0;
     $79 = $78&65535;
     HEAP16[$71>>1] = $79;
     $80 = (($$055) + ($68))|0;
     $81 = ($80|0)<(65537);
     $82 = (($$05354) + 1)|0;
     $83 = ($82|0)<($2|0);
     $or$cond = $81 & $83;
     if ($or$cond) {
      $$05354 = $82;$$055 = $80;
     } else {
      break;
     }
    }
   }
  }
 }
 HEAP32[$11>>2] = 0;
 STACKTOP = sp;return;
}
function _silk_VAD_Init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0;
 var stop = 0;
 sp = STACKTOP;
 dest=$0; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $1 = ((($0)) + 92|0);
 HEAP32[$1>>2] = 50;
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 25;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 16;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 12;
 $5 = ((($0)) + 60|0);
 HEAP32[$5>>2] = 5000;
 $6 = ((($0)) + 76|0);
 HEAP32[$6>>2] = 429496;
 $7 = ((($0)) + 64|0);
 HEAP32[$7>>2] = 2500;
 $8 = ((($0)) + 80|0);
 HEAP32[$8>>2] = 858993;
 $9 = ((($0)) + 68|0);
 HEAP32[$9>>2] = 1600;
 $10 = ((($0)) + 84|0);
 HEAP32[$10>>2] = 1342177;
 $11 = ((($0)) + 72|0);
 HEAP32[$11>>2] = 1200;
 $12 = ((($0)) + 88|0);
 HEAP32[$12>>2] = 1789569;
 $13 = ((($0)) + 108|0);
 HEAP32[$13>>2] = 15;
 $14 = ((($0)) + 40|0);
 HEAP32[$14>>2] = 25600;
 $15 = ((($0)) + 44|0);
 HEAP32[$15>>2] = 25600;
 $16 = ((($0)) + 48|0);
 HEAP32[$16>>2] = 25600;
 $17 = ((($0)) + 52|0);
 HEAP32[$17>>2] = 25600;
 return 0;
}
function _silk_VAD_GetSA_Q8_c($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$i = 0, $$$i213 = 0, $$$i227 = 0, $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i212 = 0, $$0$i$i$i219 = 0, $$0$i$i$i226 = 0, $$0189244 = 0, $$0198251 = 0, $$0202252 = 0, $$062$1$i = 0, $$062$2$i = 0, $$062$3$i = 0, $$062$i = 0, $$09$i217 = 0, $$1 = 0, $$1192 = 0, $$1192$v = 0;
 var $$1196$lcssa = 0, $$1199242 = 0, $$1203245$us = 0, $$1203245$us$1 = 0, $$1203245$us$2 = 0, $$1203245$us$3 = 0, $$2246$us = 0, $$2246$us$1 = 0, $$2246$us$2 = 0, $$2246$us$3 = 0, $$3243 = 0, $$4 = 0, $$alloca_mul = 0, $$phi$trans$insert = 0, $$phi$trans$insert267 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre268 = 0, $$pre269 = 0, $$sink = 0;
 var $$sink279 = 0, $$sink280 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond266 = 0, $phitmp234 = 0, $phitmp235 = 0, $phitmp236 = 0, $phitmp237 = 0, $phitmp238 = 0, $reass$mul = 0, $sext$1$i = 0, $sext$2$i = 0, $sext$3$i = 0, $sext$i = 0, $sext$i214 = 0;
 var $sext$i221 = 0, $sext$i228 = 0, $sext$i233 = 0, $sext10$i = 0, $sext10$i215 = 0, $sext10$i222 = 0, $sext10$i229 = 0, $sext204 = 0, $sext206 = 0, $sext208 = 0, $sext64$1$i = 0, $sext64$2$i = 0, $sext64$3$i = 0, $sext64$i = 0, $spec$select$1$i = 0, $spec$select$2$i = 0, $spec$select$3$i = 0, $spec$select$i = 0, $spec$select$us = 0, $spec$select$us$1 = 0;
 var $spec$select$us$2 = 0, $spec$select210$3 = 0, $spec$select211 = 0, $spec$select211$v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 32|0;
 $3 = sp + 16|0;
 $4 = sp;
 $5 = ((($0)) + 4580|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 >> 1;
 $8 = $6 >> 2;
 $9 = $6 >> 3;
 HEAP32[$4>>2] = 0;
 $10 = (($9) + ($8))|0;
 $11 = ((($4)) + 4|0);
 HEAP32[$11>>2] = $10;
 $12 = (($10) + ($9))|0;
 $13 = ((($4)) + 8|0);
 HEAP32[$13>>2] = $12;
 $14 = (($12) + ($8))|0;
 $15 = ((($4)) + 12|0);
 HEAP32[$15>>2] = $14;
 $16 = (($14) + ($7))|0;
 $17 = (_llvm_stacksave()|0);
 $$alloca_mul = $16<<1;
 $18 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $19 = ((($0)) + 32|0);
 $20 = (($18) + ($14<<1)|0);
 $21 = HEAP32[$5>>2]|0;
 _silk_ana_filt_bank_1($1,$19,$18,$20,$21);
 $22 = ((($0)) + 40|0);
 $23 = (($18) + ($12<<1)|0);
 _silk_ana_filt_bank_1($18,$22,$18,$23,$7);
 $24 = ((($0)) + 48|0);
 $25 = (($18) + ($10<<1)|0);
 _silk_ana_filt_bank_1($18,$24,$18,$25,$8);
 $26 = (($9) + -1)|0;
 $27 = (($18) + ($26<<1)|0);
 $28 = HEAP16[$27>>1]|0;
 $29 = $28 << 16 >> 16;
 $30 = $29 >> 1;
 $31 = $30&65535;
 HEAP16[$27>>1] = $31;
 $32 = ($6|0)>(15);
 if ($32) {
  $$0202252 = $26;$41 = $30;
  while(1) {
   $33 = (($$0202252) + -1)|0;
   $34 = (($18) + ($33<<1)|0);
   $35 = HEAP16[$34>>1]|0;
   $36 = $35 << 16 >> 16;
   $37 = $36 >> 1;
   $38 = $37&65535;
   HEAP16[$34>>1] = $38;
   $39 = (($18) + ($$0202252<<1)|0);
   $40 = (($41) - ($37))|0;
   $42 = $40&65535;
   HEAP16[$39>>1] = $42;
   $43 = ($$0202252|0)>(1);
   if ($43) {
    $$0202252 = $33;$41 = $37;
   } else {
    break;
   }
  }
 }
 $44 = ((($0)) + 88|0);
 $45 = HEAP16[$44>>1]|0;
 $46 = $45&65535;
 $47 = HEAP16[$18>>1]|0;
 $48 = $47&65535;
 $49 = (($48) - ($46))|0;
 $50 = $49&65535;
 HEAP16[$18>>1] = $50;
 HEAP16[$44>>1] = $31;
 $$0198251 = 0;
 while(1) {
  $51 = HEAP32[$5>>2]|0;
  $52 = (4 - ($$0198251))|0;
  $53 = ($52>>>0)<(3);
  $54 = $53 ? $52 : 3;
  $55 = $51 >> $54;
  $56 = $55 >> 2;
  $57 = (((($0)) + 56|0) + ($$0198251<<2)|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = (($2) + ($$0198251<<2)|0);
  HEAP32[$59>>2] = $58;
  $60 = ($55|0)>(3);
  if ($60) {
   $61 = (($4) + ($$0198251<<2)|0);
   $62 = HEAP32[$61>>2]|0;
   $$1203245$us = 0;$$2246$us = 0;
   while(1) {
    $66 = (($$1203245$us) + ($62))|0;
    $67 = (($18) + ($66<<1)|0);
    $68 = HEAP16[$67>>1]|0;
    $69 = $68 << 16 >> 16;
    $70 = $69 >> 3;
    $71 = Math_imul($70, $70)|0;
    $64 = (($71) + ($$2246$us))|0;
    $72 = (($$1203245$us) + 1)|0;
    $73 = ($72|0)<($56|0);
    if ($73) {
     $$1203245$us = $72;$$2246$us = $64;
    } else {
     break;
    }
   }
   $63 = (($58) + ($64))|0;
   $65 = ($63>>>0)<(2147483647);
   $spec$select$us = $65 ? $63 : 2147483647;
   $$1203245$us$1 = 0;$$2246$us$1 = 0;
   while(1) {
    $509 = (($$1203245$us$1) + ($56))|0;
    $510 = (($509) + ($62))|0;
    $511 = (($18) + ($510<<1)|0);
    $512 = HEAP16[$511>>1]|0;
    $513 = $512 << 16 >> 16;
    $514 = $513 >> 3;
    $515 = Math_imul($514, $514)|0;
    $516 = (($515) + ($$2246$us$1))|0;
    $517 = (($$1203245$us$1) + 1)|0;
    $518 = ($517|0)<($56|0);
    if ($518) {
     $$1203245$us$1 = $517;$$2246$us$1 = $516;
    } else {
     break;
    }
   }
   $519 = (($spec$select$us) + ($516))|0;
   $520 = ($519>>>0)<(2147483647);
   $spec$select$us$1 = $520 ? $519 : 2147483647;
   $521 = $56 << 1;
   $$1203245$us$2 = 0;$$2246$us$2 = 0;
   while(1) {
    $522 = (($$1203245$us$2) + ($521))|0;
    $523 = (($522) + ($62))|0;
    $524 = (($18) + ($523<<1)|0);
    $525 = HEAP16[$524>>1]|0;
    $526 = $525 << 16 >> 16;
    $527 = $526 >> 3;
    $528 = Math_imul($527, $527)|0;
    $529 = (($528) + ($$2246$us$2))|0;
    $530 = (($$1203245$us$2) + 1)|0;
    $531 = ($530|0)<($56|0);
    if ($531) {
     $$1203245$us$2 = $530;$$2246$us$2 = $529;
    } else {
     break;
    }
   }
   $532 = (($spec$select$us$1) + ($529))|0;
   $533 = ($532>>>0)<(2147483647);
   $spec$select$us$2 = $533 ? $532 : 2147483647;
   $534 = ($56*3)|0;
   $$1203245$us$3 = 0;$$2246$us$3 = 0;
   while(1) {
    $535 = (($$1203245$us$3) + ($534))|0;
    $536 = (($535) + ($62))|0;
    $537 = (($18) + ($536<<1)|0);
    $538 = HEAP16[$537>>1]|0;
    $539 = $538 << 16 >> 16;
    $540 = $539 >> 3;
    $541 = Math_imul($540, $540)|0;
    $542 = (($541) + ($$2246$us$3))|0;
    $543 = (($$1203245$us$3) + 1)|0;
    $544 = ($543|0)<($56|0);
    if ($544) {
     $$1203245$us$3 = $543;$$2246$us$3 = $542;
    } else {
     break;
    }
   }
   $545 = $542 >>> 1;
   $546 = (($spec$select$us$2) + ($545))|0;
   $$1196$lcssa = $542;$$sink279 = $546;
  } else {
   $$1196$lcssa = 0;$$sink279 = $58;
  }
  $74 = ($$sink279>>>0)<(2147483647);
  $spec$select210$3 = $74 ? $$sink279 : 2147483647;
  HEAP32[$59>>2] = $spec$select210$3;
  HEAP32[$57>>2] = $$1196$lcssa;
  $75 = (($$0198251) + 1)|0;
  $exitcond266 = ($75|0)==(4);
  if ($exitcond266) {
   break;
  } else {
   $$0198251 = $75;
  }
 }
 $76 = ((($0)) + 140|0);
 $77 = HEAP32[$76>>2]|0;
 $78 = ($77|0)<(1000);
 if ($78) {
  $79 = $77 >> 4;
  $80 = (($79) + 1)|0;
  $81 = (32767 / ($80|0))&-1;
  $$0$i = $81;
 } else {
  $$0$i = 0;
 }
 $82 = ((($0)) + 92|0);
 $83 = HEAP32[$82>>2]|0;
 $84 = HEAP32[$2>>2]|0;
 $85 = ((($0)) + 124|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = (($86) + ($84))|0;
 $88 = ($87>>>0)<(2147483647);
 $spec$select$i = $88 ? $87 : 2147483647;
 $89 = (2147483647 / ($spec$select$i>>>0))&-1;
 $90 = $83 << 3;
 $91 = ($spec$select$i|0)>($90|0);
 if ($91) {
  $$062$i = 128;
 } else {
  $92 = ($spec$select$i|0)<($83|0);
  if ($92) {
   $$062$i = 1024;
  } else {
   $93 = $89 >>> 16;
   $sext$i233 = $83 << 16;
   $94 = $sext$i233 >> 16;
   $95 = Math_imul($93, $94)|0;
   $96 = $89 & 65535;
   $97 = Math_imul($96, $94)|0;
   $98 = $97 >> 16;
   $99 = $83 >> 15;
   $100 = (($99) + 1)|0;
   $101 = $100 >> 1;
   $102 = Math_imul($89, $101)|0;
   $103 = (($95) + ($102))|0;
   $104 = (($103) + ($98))|0;
   $105 = $104 >> 16;
   $106 = $105 << 11;
   $107 = $104 >>> 5;
   $108 = $107 & 2047;
   $109 = $106 | $108;
   $$062$i = $109;
  }
 }
 $110 = ($$062$i|0)>($$0$i|0);
 $111 = $110 ? $$062$i : $$0$i;
 $112 = ((($0)) + 108|0);
 $113 = HEAP32[$112>>2]|0;
 $114 = (($89) - ($113))|0;
 $115 = $114 >> 16;
 $sext64$i = $111 << 16;
 $116 = $sext64$i >> 16;
 $117 = Math_imul($116, $115)|0;
 $118 = $114 & 65535;
 $119 = Math_imul($116, $118)|0;
 $120 = $119 >> 16;
 $121 = (($117) + ($113))|0;
 $122 = (($121) + ($120))|0;
 HEAP32[$112>>2] = $122;
 $123 = (2147483647 / ($122|0))&-1;
 $124 = ($123|0)<(16777215);
 $125 = $124 ? $123 : 16777215;
 HEAP32[$82>>2] = $125;
 $126 = ((($0)) + 96|0);
 $127 = HEAP32[$126>>2]|0;
 $128 = ((($2)) + 4|0);
 $129 = HEAP32[$128>>2]|0;
 $130 = ((($0)) + 128|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = (($131) + ($129))|0;
 $133 = ($132>>>0)<(2147483647);
 $spec$select$1$i = $133 ? $132 : 2147483647;
 $134 = (2147483647 / ($spec$select$1$i>>>0))&-1;
 $135 = $127 << 3;
 $136 = ($spec$select$1$i|0)>($135|0);
 if ($136) {
  $$062$1$i = 128;
 } else {
  $137 = ($spec$select$1$i|0)<($127|0);
  if ($137) {
   $$062$1$i = 1024;
  } else {
   $138 = $134 >>> 16;
   $sext$1$i = $127 << 16;
   $139 = $sext$1$i >> 16;
   $140 = Math_imul($138, $139)|0;
   $141 = $134 & 65535;
   $142 = Math_imul($141, $139)|0;
   $143 = $142 >> 16;
   $144 = $127 >> 15;
   $145 = (($144) + 1)|0;
   $146 = $145 >> 1;
   $147 = Math_imul($134, $146)|0;
   $148 = (($140) + ($147))|0;
   $149 = (($148) + ($143))|0;
   $150 = $149 >> 16;
   $151 = $150 << 11;
   $152 = $149 >>> 5;
   $153 = $152 & 2047;
   $154 = $151 | $153;
   $$062$1$i = $154;
  }
 }
 $155 = ($$062$1$i|0)>($$0$i|0);
 $156 = $155 ? $$062$1$i : $$0$i;
 $157 = ((($0)) + 112|0);
 $158 = HEAP32[$157>>2]|0;
 $159 = (($134) - ($158))|0;
 $160 = $159 >> 16;
 $sext64$1$i = $156 << 16;
 $161 = $sext64$1$i >> 16;
 $162 = Math_imul($161, $160)|0;
 $163 = $159 & 65535;
 $164 = Math_imul($161, $163)|0;
 $165 = $164 >> 16;
 $166 = (($162) + ($158))|0;
 $167 = (($166) + ($165))|0;
 HEAP32[$157>>2] = $167;
 $168 = (2147483647 / ($167|0))&-1;
 $169 = ($168|0)<(16777215);
 $170 = $169 ? $168 : 16777215;
 HEAP32[$126>>2] = $170;
 $171 = ((($0)) + 100|0);
 $172 = HEAP32[$171>>2]|0;
 $173 = ((($2)) + 8|0);
 $174 = HEAP32[$173>>2]|0;
 $175 = ((($0)) + 132|0);
 $176 = HEAP32[$175>>2]|0;
 $177 = (($176) + ($174))|0;
 $178 = ($177>>>0)<(2147483647);
 $spec$select$2$i = $178 ? $177 : 2147483647;
 $179 = (2147483647 / ($spec$select$2$i>>>0))&-1;
 $180 = $172 << 3;
 $181 = ($spec$select$2$i|0)>($180|0);
 if ($181) {
  $$062$2$i = 128;
 } else {
  $182 = ($spec$select$2$i|0)<($172|0);
  if ($182) {
   $$062$2$i = 1024;
  } else {
   $183 = $179 >>> 16;
   $sext$2$i = $172 << 16;
   $184 = $sext$2$i >> 16;
   $185 = Math_imul($183, $184)|0;
   $186 = $179 & 65535;
   $187 = Math_imul($186, $184)|0;
   $188 = $187 >> 16;
   $189 = $172 >> 15;
   $190 = (($189) + 1)|0;
   $191 = $190 >> 1;
   $192 = Math_imul($179, $191)|0;
   $193 = (($185) + ($192))|0;
   $194 = (($193) + ($188))|0;
   $195 = $194 >> 16;
   $196 = $195 << 11;
   $197 = $194 >>> 5;
   $198 = $197 & 2047;
   $199 = $196 | $198;
   $$062$2$i = $199;
  }
 }
 $200 = ($$062$2$i|0)>($$0$i|0);
 $201 = $200 ? $$062$2$i : $$0$i;
 $202 = ((($0)) + 116|0);
 $203 = HEAP32[$202>>2]|0;
 $204 = (($179) - ($203))|0;
 $205 = $204 >> 16;
 $sext64$2$i = $201 << 16;
 $206 = $sext64$2$i >> 16;
 $207 = Math_imul($206, $205)|0;
 $208 = $204 & 65535;
 $209 = Math_imul($206, $208)|0;
 $210 = $209 >> 16;
 $211 = (($207) + ($203))|0;
 $212 = (($211) + ($210))|0;
 HEAP32[$202>>2] = $212;
 $213 = (2147483647 / ($212|0))&-1;
 $214 = ($213|0)<(16777215);
 $215 = $214 ? $213 : 16777215;
 HEAP32[$171>>2] = $215;
 $216 = ((($0)) + 104|0);
 $217 = HEAP32[$216>>2]|0;
 $218 = ((($2)) + 12|0);
 $219 = HEAP32[$218>>2]|0;
 $220 = ((($0)) + 136|0);
 $221 = HEAP32[$220>>2]|0;
 $222 = (($221) + ($219))|0;
 $223 = ($222>>>0)<(2147483647);
 $spec$select$3$i = $223 ? $222 : 2147483647;
 $224 = (2147483647 / ($spec$select$3$i>>>0))&-1;
 $225 = $217 << 3;
 $226 = ($spec$select$3$i|0)>($225|0);
 if ($226) {
  $$062$3$i = 128;
 } else {
  $227 = ($spec$select$3$i|0)<($217|0);
  if ($227) {
   $$062$3$i = 1024;
  } else {
   $228 = $224 >>> 16;
   $sext$3$i = $217 << 16;
   $229 = $sext$3$i >> 16;
   $230 = Math_imul($228, $229)|0;
   $231 = $224 & 65535;
   $232 = Math_imul($231, $229)|0;
   $233 = $232 >> 16;
   $234 = $217 >> 15;
   $235 = (($234) + 1)|0;
   $236 = $235 >> 1;
   $237 = Math_imul($224, $236)|0;
   $238 = (($230) + ($237))|0;
   $239 = (($238) + ($233))|0;
   $240 = $239 >> 16;
   $241 = $240 << 11;
   $242 = $239 >>> 5;
   $243 = $242 & 2047;
   $244 = $241 | $243;
   $$062$3$i = $244;
  }
 }
 $245 = ($$062$3$i|0)>($$0$i|0);
 $246 = $245 ? $$062$3$i : $$0$i;
 $247 = ((($0)) + 120|0);
 $248 = HEAP32[$247>>2]|0;
 $249 = (($224) - ($248))|0;
 $250 = $249 >> 16;
 $sext64$3$i = $246 << 16;
 $251 = $sext64$3$i >> 16;
 $252 = Math_imul($251, $250)|0;
 $253 = $249 & 65535;
 $254 = Math_imul($251, $253)|0;
 $255 = $254 >> 16;
 $256 = (($252) + ($248))|0;
 $257 = (($256) + ($255))|0;
 HEAP32[$247>>2] = $257;
 $258 = (2147483647 / ($257|0))&-1;
 $259 = ($258|0)<(16777215);
 $260 = $259 ? $258 : 16777215;
 HEAP32[$216>>2] = $260;
 $261 = (($77) + 1)|0;
 HEAP32[$76>>2] = $261;
 $$0189244 = 0;$$1199242 = 0;$$3243 = 0;$263 = $84;$264 = $125;
 while(1) {
  $262 = (($263) - ($264))|0;
  $265 = ($262|0)>(0);
  if ($265) {
   $266 = ($263>>>0)<(8388608);
   $267 = $264 >> 8;
   $268 = $263 << 8;
   $$sink = $266 ? $264 : $267;
   $$sink280 = $266 ? $268 : $263;
   $269 = (($$sink) + 1)|0;
   $270 = (($$sink280|0) / ($269|0))&-1;
   $271 = (($3) + ($$1199242<<2)|0);
   HEAP32[$271>>2] = $270;
   $272 = (_silk_lin2log($270)|0);
   $273 = $272 << 16;
   $sext208 = (($273) + -67108864)|0;
   $274 = $sext208 >> 16;
   $275 = Math_imul($274, $274)|0;
   $276 = (($275) + ($$3243))|0;
   $277 = ($262|0)<(1048576);
   if ($277) {
    $278 = (Math_clz32(($262|0))|0);
    $279 = (24 - ($278))|0;
    $280 = (0 - ($279))|0;
    $281 = ($279|0)==(0);
    do {
     if ($281) {
      $$0$i$i$i226 = $262;
     } else {
      $282 = ($279|0)<(0);
      if ($282) {
       $283 = $262 << $280;
       $284 = (($279) + 32)|0;
       $285 = $262 >>> $284;
       $286 = $285 | $283;
       $$0$i$i$i226 = $286;
       break;
      } else {
       $287 = (32 - ($279))|0;
       $288 = $262 << $287;
       $289 = $262 >>> $279;
       $290 = $288 | $289;
       $$0$i$i$i226 = $290;
       break;
      }
     }
    } while(0);
    $291 = $278 & 1;
    $292 = ($291|0)==(0);
    $$$i227 = $292 ? 46214 : 32768;
    $293 = $278 >>> 1;
    $294 = $$$i227 >>> $293;
    $295 = $294 >> 16;
    $sext$i228 = $$0$i$i$i226 & 127;
    $sext10$i229 = Math_imul($sext$i228, 13959168)|0;
    $296 = $sext10$i229 >>> 16;
    $297 = Math_imul($296, $295)|0;
    $298 = $294 & 65535;
    $299 = Math_imul($296, $298)|0;
    $300 = $299 >>> 16;
    $301 = (($297) + ($294))|0;
    $302 = (($301) + ($300))|0;
    $303 = $302 << 6;
    $304 = $303 >> 16;
    $305 = Math_imul($304, $274)|0;
    do {
     if ($281) {
      $$0$i$i$i219 = $262;
     } else {
      $306 = ($279|0)<(0);
      if ($306) {
       $307 = $262 << $280;
       $308 = (($279) + 32)|0;
       $309 = $262 >>> $308;
       $310 = $309 | $307;
       $$0$i$i$i219 = $310;
       break;
      } else {
       $311 = (32 - ($279))|0;
       $312 = $262 << $311;
       $313 = $262 >>> $279;
       $314 = $312 | $313;
       $$0$i$i$i219 = $314;
       break;
      }
     }
    } while(0);
    $sext$i221 = $$0$i$i$i219 & 127;
    $sext10$i222 = Math_imul($sext$i221, 13959168)|0;
    $315 = $sext10$i222 >>> 16;
    $316 = Math_imul($315, $295)|0;
    $317 = Math_imul($315, $298)|0;
    $318 = $317 >>> 16;
    $319 = (($316) + ($294))|0;
    $320 = (($319) + ($318))|0;
    $321 = $320 << 6;
    $322 = $321 & 65472;
    $323 = Math_imul($322, $274)|0;
    $324 = $305 << 16;
    $325 = (($323) + ($324))|0;
    $$pre269 = $325 >> 16;
    $$pre$phiZ2D = $$pre269;
   } else {
    $$pre$phiZ2D = $274;
   }
   $326 = (31664 + ($$1199242<<2)|0);
   $327 = HEAP32[$326>>2]|0;
   $328 = $327 >> 16;
   $329 = Math_imul($328, $$pre$phiZ2D)|0;
   $330 = $327 & 65535;
   $331 = Math_imul($330, $$pre$phiZ2D)|0;
   $332 = $331 >> 16;
   $333 = (($329) + ($$0189244))|0;
   $334 = (($333) + ($332))|0;
   $$1 = $334;$$4 = $276;
  } else {
   $335 = (($3) + ($$1199242<<2)|0);
   HEAP32[$335>>2] = 256;
   $$1 = $$0189244;$$4 = $$3243;
  }
  $336 = (($$1199242) + 1)|0;
  $exitcond = ($336|0)==(4);
  if ($exitcond) {
   break;
  }
  $$phi$trans$insert = (($2) + ($336<<2)|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$phi$trans$insert267 = (((($0)) + 92|0) + ($336<<2)|0);
  $$pre268 = HEAP32[$$phi$trans$insert267>>2]|0;
  $$0189244 = $$1;$$1199242 = $336;$$3243 = $$4;$263 = $$pre;$264 = $$pre268;
 }
 $337 = (($$4|0) / 4)&-1;
 $338 = ($$4|0)<(4);
 if ($338) {
  $$09$i217 = -128;
 } else {
  $339 = (Math_clz32(($337|0))|0);
  $340 = (24 - ($339))|0;
  $341 = (0 - ($340))|0;
  $342 = ($340|0)==(0);
  do {
   if ($342) {
    $$0$i$i$i212 = $337;
   } else {
    $343 = ($340|0)<(0);
    if ($343) {
     $344 = $337 << $341;
     $345 = (($340) + 32)|0;
     $346 = $337 >>> $345;
     $347 = $346 | $344;
     $$0$i$i$i212 = $347;
     break;
    } else {
     $348 = (32 - ($340))|0;
     $349 = $337 << $348;
     $350 = $337 >>> $340;
     $351 = $349 | $350;
     $$0$i$i$i212 = $351;
     break;
    }
   }
  } while(0);
  $352 = $339 & 1;
  $353 = ($352|0)==(0);
  $$$i213 = $353 ? 46214 : 32768;
  $354 = $339 >>> 1;
  $355 = $$$i213 >>> $354;
  $356 = $355 >> 16;
  $sext$i214 = $$0$i$i$i212 & 127;
  $sext10$i215 = Math_imul($sext$i214, 13959168)|0;
  $357 = $sext10$i215 >>> 16;
  $358 = Math_imul($357, $356)|0;
  $359 = $355 & 65535;
  $360 = Math_imul($357, $359)|0;
  $361 = $360 >>> 16;
  $362 = (($358) + ($355))|0;
  $363 = (($362) + ($361))|0;
  $phitmp234 = ($363*196608)|0;
  $phitmp235 = $phitmp234 >> 16;
  $phitmp236 = ($phitmp235*45000)|0;
  $phitmp237 = $phitmp236 >> 16;
  $phitmp238 = (($phitmp237) + -128)|0;
  $$09$i217 = $phitmp238;
 }
 $364 = (_silk_sigm_Q15($$09$i217)|0);
 $365 = (_silk_sigm_Q15($$1)|0);
 $366 = $365 << 1;
 $367 = (($366) + -32768)|0;
 $368 = ((($0)) + 4708|0);
 HEAP32[$368>>2] = $367;
 $369 = HEAP32[$82>>2]|0;
 $370 = (($84) - ($369))|0;
 $371 = $370 >> 4;
 $372 = HEAP32[$126>>2]|0;
 $373 = (($129) - ($372))|0;
 $374 = $373 >> 4;
 $375 = $374 << 1;
 $376 = (($375) + ($371))|0;
 $377 = HEAP32[$171>>2]|0;
 $378 = (($174) - ($377))|0;
 $379 = $378 >> 4;
 $380 = ($379*3)|0;
 $381 = (($380) + ($376))|0;
 $382 = HEAP32[$216>>2]|0;
 $383 = (($219) - ($382))|0;
 $384 = $383 >> 4;
 $385 = $384 << 2;
 $386 = (($385) + ($381))|0;
 $387 = ($386|0)<(1);
 if ($387) {
  $388 = $364 >> 1;
  $$0 = $388;
 } else {
  $389 = ($386|0)<(32768);
  if ($389) {
   $390 = HEAP32[$5>>2]|0;
   $391 = ((($0)) + 4572|0);
   $392 = HEAP32[$391>>2]|0;
   $393 = ($392*10)|0;
   $394 = ($390|0)==($393|0);
   $$1192$v = $394 ? 16 : 15;
   $$1192 = $386 << $$1192$v;
   $395 = (Math_clz32(($$1192|0))|0);
   $396 = (24 - ($395))|0;
   $397 = (0 - ($396))|0;
   $398 = ($396|0)==(0);
   do {
    if ($398) {
     $$0$i$i$i = $$1192;
    } else {
     $399 = ($396|0)<(0);
     if ($399) {
      $400 = $$1192 << $397;
      $401 = (($396) + 32)|0;
      $402 = $$1192 >>> $401;
      $403 = $402 | $400;
      $$0$i$i$i = $403;
      break;
     } else {
      $404 = (32 - ($396))|0;
      $405 = $$1192 << $404;
      $406 = $$1192 >>> $396;
      $407 = $405 | $406;
      $$0$i$i$i = $407;
      break;
     }
    }
   } while(0);
   $408 = $395 & 1;
   $409 = ($408|0)==(0);
   $$$i = $409 ? 46214 : 32768;
   $410 = $395 >>> 1;
   $411 = $$$i >>> $410;
   $412 = $411 >> 16;
   $sext$i = $$0$i$i$i & 127;
   $sext10$i = Math_imul($sext$i, 13959168)|0;
   $413 = $sext10$i >>> 16;
   $414 = Math_imul($413, $412)|0;
   $415 = $411 & 65535;
   $416 = Math_imul($413, $415)|0;
   $417 = $416 >>> 16;
   $418 = (($411) + 32768)|0;
   $419 = (($418) + ($414))|0;
   $420 = (($419) + ($417))|0;
   $421 = $420 >> 16;
   $sext206 = $364 << 16;
   $422 = $sext206 >> 16;
   $423 = Math_imul($421, $422)|0;
   $424 = $420 & 65535;
   $425 = Math_imul($424, $422)|0;
   $426 = $425 >> 16;
   $427 = (($426) + ($423))|0;
   $$0 = $427;
  } else {
   $$0 = $364;
  }
 }
 $428 = $$0 >> 7;
 $429 = ($428|0)<(255);
 $430 = $429 ? $428 : 255;
 $431 = ((($0)) + 4528|0);
 HEAP32[$431>>2] = $430;
 $sext204 = $$0 << 16;
 $432 = $sext204 >> 16;
 $reass$mul = Math_imul($$0, $432)|0;
 $433 = HEAP32[$5>>2]|0;
 $434 = ((($0)) + 4572|0);
 $435 = HEAP32[$434>>2]|0;
 $436 = ($435*10)|0;
 $437 = ($433|0)==($436|0);
 $spec$select211$v = $437 ? 21 : 20;
 $spec$select211 = $reass$mul >> $spec$select211$v;
 $438 = ((($0)) + 72|0);
 $439 = HEAP32[$438>>2]|0;
 $440 = HEAP32[$3>>2]|0;
 $441 = (($440) - ($439))|0;
 $442 = $441 >> 16;
 $443 = Math_imul($442, $spec$select211)|0;
 $444 = $441 & 65535;
 $445 = Math_imul($444, $spec$select211)|0;
 $446 = $445 >> 16;
 $447 = (($443) + ($439))|0;
 $448 = (($447) + ($446))|0;
 HEAP32[$438>>2] = $448;
 $449 = (_silk_lin2log($448)|0);
 $450 = ($449*3)|0;
 $451 = (($450) + -5120)|0;
 $452 = $451 >> 4;
 $453 = (_silk_sigm_Q15($452)|0);
 $454 = ((($0)) + 4692|0);
 HEAP32[$454>>2] = $453;
 $455 = ((($0)) + 76|0);
 $456 = HEAP32[$455>>2]|0;
 $457 = ((($3)) + 4|0);
 $458 = HEAP32[$457>>2]|0;
 $459 = (($458) - ($456))|0;
 $460 = $459 >> 16;
 $461 = Math_imul($460, $spec$select211)|0;
 $462 = $459 & 65535;
 $463 = Math_imul($462, $spec$select211)|0;
 $464 = $463 >> 16;
 $465 = (($461) + ($456))|0;
 $466 = (($465) + ($464))|0;
 HEAP32[$455>>2] = $466;
 $467 = (_silk_lin2log($466)|0);
 $468 = ($467*3)|0;
 $469 = (($468) + -5120)|0;
 $470 = $469 >> 4;
 $471 = (_silk_sigm_Q15($470)|0);
 $472 = ((($0)) + 4696|0);
 HEAP32[$472>>2] = $471;
 $473 = ((($0)) + 80|0);
 $474 = HEAP32[$473>>2]|0;
 $475 = ((($3)) + 8|0);
 $476 = HEAP32[$475>>2]|0;
 $477 = (($476) - ($474))|0;
 $478 = $477 >> 16;
 $479 = Math_imul($478, $spec$select211)|0;
 $480 = $477 & 65535;
 $481 = Math_imul($480, $spec$select211)|0;
 $482 = $481 >> 16;
 $483 = (($479) + ($474))|0;
 $484 = (($483) + ($482))|0;
 HEAP32[$473>>2] = $484;
 $485 = (_silk_lin2log($484)|0);
 $486 = ($485*3)|0;
 $487 = (($486) + -5120)|0;
 $488 = $487 >> 4;
 $489 = (_silk_sigm_Q15($488)|0);
 $490 = ((($0)) + 4700|0);
 HEAP32[$490>>2] = $489;
 $491 = ((($0)) + 84|0);
 $492 = HEAP32[$491>>2]|0;
 $493 = ((($3)) + 12|0);
 $494 = HEAP32[$493>>2]|0;
 $495 = (($494) - ($492))|0;
 $496 = $495 >> 16;
 $497 = Math_imul($496, $spec$select211)|0;
 $498 = $495 & 65535;
 $499 = Math_imul($498, $spec$select211)|0;
 $500 = $499 >> 16;
 $501 = (($497) + ($492))|0;
 $502 = (($501) + ($500))|0;
 HEAP32[$491>>2] = $502;
 $503 = (_silk_lin2log($502)|0);
 $504 = ($503*3)|0;
 $505 = (($504) + -5120)|0;
 $506 = $505 >> 4;
 $507 = (_silk_sigm_Q15($506)|0);
 $508 = ((($0)) + 4704|0);
 HEAP32[$508>>2] = $507;
 _llvm_stackrestore(($17|0));
 STACKTOP = sp;return 0;
}
function _silk_control_audio_bandwidth($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$0 = 0, $$57 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $or$cond = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4572|0);
 $3 = HEAP32[$2>>2]|0;
 $sext = $3 << 16;
 $4 = $sext >> 16;
 $5 = ($4*1000)|0;
 $6 = ($sext|0)==(0);
 if ($6) {
  $7 = ((($0)) + 4568|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ((($0)) + 4552|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($8|0)<($10|0);
  $$ = $11 ? $8 : $10;
  $12 = (($$|0) / 1000)&-1;
  $$0 = $12;
  return ($$0|0);
 }
 $13 = ((($0)) + 4552|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($5|0)>($14|0);
 $$phi$trans$insert = ((($0)) + 4560|0);
 $$pre = HEAP32[$$phi$trans$insert>>2]|0;
 $16 = ($5|0)>($$pre|0);
 $or$cond = $15 | $16;
 if (!($or$cond)) {
  $17 = ((($0)) + 4564|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ($5|0)<($18|0);
  if (!($19)) {
   $26 = ((($0)) + 16|0);
   $27 = ((($0)) + 24|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($28|0)>(255);
   if ($29) {
    $30 = ((($0)) + 28|0);
    HEAP32[$30>>2] = 0;
   }
   $31 = ((($0)) + 4532|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($32|0)==(0);
   if ($33) {
    $34 = ((($1)) + 64|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($35|0)==(0);
    if ($36) {
     $$0 = $3;
     return ($$0|0);
    }
   }
   $37 = ((($0)) + 4568|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ($5|0)>($38|0);
   if ($39) {
    $40 = ((($0)) + 28|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($41|0)==(0);
    if ($42) {
     HEAP32[$27>>2] = 256;
     $43 = $26;
     $44 = $43;
     HEAP32[$44>>2] = 0;
     $45 = (($43) + 4)|0;
     $46 = $45;
     HEAP32[$46>>2] = 0;
     $53 = 256;
    } else {
     $53 = $28;
    }
    $47 = ((($1)) + 64|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ($48|0)==(0);
    if (!($49)) {
     HEAP32[$40>>2] = 0;
     $50 = ($3|0)==(16);
     $51 = $50 ? 12 : 8;
     $$0 = $51;
     return ($$0|0);
    }
    $52 = ($53|0)<(1);
    if ($52) {
     $54 = ((($1)) + 88|0);
     HEAP32[$54>>2] = 1;
     $55 = ((($1)) + 56|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = ($56*5)|0;
     $58 = ((($1)) + 24|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = (($59) + 5)|0;
     $61 = (($57|0) / ($60|0))&-1;
     $62 = (($56) - ($61))|0;
     HEAP32[$55>>2] = $62;
     $$0 = $3;
     return ($$0|0);
    } else {
     HEAP32[$40>>2] = -2;
     $$0 = $3;
     return ($$0|0);
    }
   }
   $63 = ($5|0)<($38|0);
   if (!($63)) {
    $86 = ((($0)) + 28|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)<(0);
    if (!($88)) {
     $$0 = $3;
     return ($$0|0);
    }
    HEAP32[$86>>2] = 1;
    $$0 = $3;
    return ($$0|0);
   }
   $64 = ((($1)) + 64|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = ($65|0)==(0);
   if (!($66)) {
    $67 = ($3|0)==(8);
    $68 = $67 ? 12 : 16;
    HEAP32[$27>>2] = 0;
    $69 = $26;
    $70 = $69;
    HEAP32[$70>>2] = 0;
    $71 = (($69) + 4)|0;
    $72 = $71;
    HEAP32[$72>>2] = 0;
    $73 = ((($0)) + 28|0);
    HEAP32[$73>>2] = 1;
    $$0 = $68;
    return ($$0|0);
   }
   $74 = ((($0)) + 28|0);
   $75 = HEAP32[$74>>2]|0;
   $76 = ($75|0)==(0);
   if ($76) {
    $77 = ((($1)) + 88|0);
    HEAP32[$77>>2] = 1;
    $78 = ((($1)) + 56|0);
    $79 = HEAP32[$78>>2]|0;
    $80 = ($79*5)|0;
    $81 = ((($1)) + 24|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = (($82) + 5)|0;
    $84 = (($80|0) / ($83|0))&-1;
    $85 = (($79) - ($84))|0;
    HEAP32[$78>>2] = $85;
    $$0 = $3;
    return ($$0|0);
   } else {
    HEAP32[$74>>2] = 1;
    $$0 = $3;
    return ($$0|0);
   }
  }
 }
 $20 = ($14|0)<($$pre|0);
 $$57 = $20 ? $14 : $$pre;
 $21 = ((($0)) + 4564|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($$57|0)>($22|0);
 $24 = $23 ? $$57 : $22;
 $25 = (($24|0) / 1000)&-1;
 $$0 = $25;
 return ($$0|0);
}
function _silk_quant_LTP_gains($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0100103$us = 0, $$0100103$us$1 = 0, $$0100103$us$2 = 0, $$0108$us = 0, $$0108$us$1 = 0, $$0108$us$2 = 0, $$091$lcssa128 = 0, $$093107$us = 0, $$093107$us$1 = 0, $$093107$us$2 = 0, $$096106$us = 0, $$096106$us$1 = 0, $$096106$us$2 = 0, $$097$lcssa127 = 0, $$099104$us = 0, $$099104$us$1 = 0, $$099104$us$2 = 0, $$1102 = 0, $$192$us$1 = 0, $$192$us$2 = 0;
 var $$195$us$1 = 0, $$198105$us$2 = 0, $$2 = 0, $$2$v = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond119 = 0, $exitcond119$1 = 0, $exitcond119$2 = 0, $sext = 0, $spec$select$us$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $10 = sp + 12|0;
 $11 = sp + 8|0;
 $12 = sp + 4|0;
 $13 = sp;
 $14 = ($8|0)>(0);
 if (!($14)) {
  _memcpy(($1|0),($10|0),($8|0))|0;
  HEAP8[$2>>0] = 1;
  _memcpy(($1|0),($10|0),($8|0))|0;
  $166 = HEAP32[$3>>2]|0;
  HEAP8[$2>>0] = 2;
  _memcpy(($1|0),($10|0),($8|0))|0;
  $$091$lcssa128 = $166;$$097$lcssa127 = 0;
  $108 = ($8|0)==(2);
  $$2$v = $108 ? 1 : 2;
  $$2 = $$097$lcssa127 >>> $$2$v;
  HEAP32[$3>>2] = $$091$lcssa128;
  $109 = (_silk_lin2log($$2)|0);
  $110 = $109 << 16;
  $sext = (($110) + -125829120)|0;
  $111 = $sext >> 16;
  $112 = Math_imul($111, -3)|0;
  HEAP32[$4>>2] = $112;
  STACKTOP = sp;return;
 }
 $15 = HEAP32[9182]|0;
 $16 = HEAP32[9185]|0;
 $17 = HEAP32[9188]|0;
 $18 = HEAP8[37797]|0;
 $19 = $18 << 24 >> 24;
 $20 = HEAP32[$3>>2]|0;
 $$0100103$us = $5;$$0108$us = 0;$$093107$us = $20;$$096106$us = 0;$$099104$us = $6;
 while(1) {
  $27 = (6229 - ($$093107$us))|0;
  $28 = (_silk_log2lin($27)|0);
  $29 = (($28) + -51)|0;
  $30 = (($10) + ($$0108$us)|0);
  _silk_VQ_WMat_EC_c($30,$11,$12,$13,$$0100103$us,$$099104$us,$16,$17,$15,$7,$29,$19);
  $31 = HEAP32[$12>>2]|0;
  $32 = (($31) + ($$096106$us))|0;
  $33 = ($32>>>0)<(2147483647);
  $34 = $33 ? $32 : 2147483647;
  $35 = HEAP32[$13>>2]|0;
  $36 = (($35) + 51)|0;
  $37 = (_silk_lin2log($36)|0);
  $38 = (($37) + ($$093107$us))|0;
  $39 = ($38|0)<(896);
  if ($39) {
   $167 = 0;
  } else {
   $40 = HEAP32[$13>>2]|0;
   $41 = (($40) + 51)|0;
   $42 = (_silk_lin2log($41)|0);
   $43 = (($$093107$us) + -896)|0;
   $44 = (($43) + ($42))|0;
   $167 = $44;
  }
  $45 = ((($$0100103$us)) + 100|0);
  $46 = ((($$099104$us)) + 20|0);
  $47 = (($$0108$us) + 1)|0;
  $exitcond119 = ($47|0)==($8|0);
  if ($exitcond119) {
   break;
  } else {
   $$0100103$us = $45;$$0108$us = $47;$$093107$us = $167;$$096106$us = $34;$$099104$us = $46;
  }
 }
 HEAP8[$2>>0] = 0;
 _memcpy(($1|0),($10|0),($8|0))|0;
 $21 = HEAP32[(36732)>>2]|0;
 $22 = HEAP32[(36744)>>2]|0;
 $23 = HEAP32[(36756)>>2]|0;
 $24 = HEAP8[(37798)>>0]|0;
 $25 = $24 << 24 >> 24;
 $26 = HEAP32[$3>>2]|0;
 $$0100103$us$1 = $5;$$0108$us$1 = 0;$$093107$us$1 = $26;$$096106$us$1 = 0;$$099104$us$1 = $6;
 while(1) {
  $113 = (6229 - ($$093107$us$1))|0;
  $114 = (_silk_log2lin($113)|0);
  $115 = (($114) + -51)|0;
  $116 = (($10) + ($$0108$us$1)|0);
  _silk_VQ_WMat_EC_c($116,$11,$12,$13,$$0100103$us$1,$$099104$us$1,$22,$23,$21,$7,$115,$25);
  $117 = HEAP32[$12>>2]|0;
  $118 = (($117) + ($$096106$us$1))|0;
  $119 = ($118>>>0)<(2147483647);
  $120 = $119 ? $118 : 2147483647;
  $121 = HEAP32[$13>>2]|0;
  $122 = (($121) + 51)|0;
  $123 = (_silk_lin2log($122)|0);
  $124 = (($123) + ($$093107$us$1))|0;
  $125 = ($124|0)<(896);
  if ($125) {
   $168 = 0;
  } else {
   $126 = HEAP32[$13>>2]|0;
   $127 = (($126) + 51)|0;
   $128 = (_silk_lin2log($127)|0);
   $129 = (($$093107$us$1) + -896)|0;
   $130 = (($129) + ($128))|0;
   $168 = $130;
  }
  $131 = ((($$0100103$us$1)) + 100|0);
  $132 = ((($$099104$us$1)) + 20|0);
  $133 = (($$0108$us$1) + 1)|0;
  $exitcond119$1 = ($133|0)==($8|0);
  if ($exitcond119$1) {
   break;
  } else {
   $$0100103$us$1 = $131;$$0108$us$1 = $133;$$093107$us$1 = $168;$$096106$us$1 = $120;$$099104$us$1 = $132;
  }
 }
 $134 = ($120|0)>($34|0);
 if ($134) {
  $$192$us$1 = $167;$$195$us$1 = $32;
 } else {
  HEAP8[$2>>0] = 1;
  _memcpy(($1|0),($10|0),($8|0))|0;
  $$192$us$1 = $168;$$195$us$1 = $120;
 }
 $135 = HEAP32[(36736)>>2]|0;
 $136 = HEAP32[(36748)>>2]|0;
 $137 = HEAP32[(36760)>>2]|0;
 $138 = HEAP8[(37799)>>0]|0;
 $139 = $138 << 24 >> 24;
 $140 = HEAP32[$3>>2]|0;
 $$0100103$us$2 = $5;$$0108$us$2 = 0;$$093107$us$2 = $140;$$096106$us$2 = 0;$$099104$us$2 = $6;$$198105$us$2 = 0;
 while(1) {
  $141 = (6229 - ($$093107$us$2))|0;
  $142 = (_silk_log2lin($141)|0);
  $143 = (($142) + -51)|0;
  $144 = (($10) + ($$0108$us$2)|0);
  _silk_VQ_WMat_EC_c($144,$11,$12,$13,$$0100103$us$2,$$099104$us$2,$136,$137,$135,$7,$143,$139);
  $145 = HEAP32[$11>>2]|0;
  $146 = (($145) + ($$198105$us$2))|0;
  $147 = ($146>>>0)<(2147483647);
  $spec$select$us$2 = $147 ? $146 : 2147483647;
  $148 = HEAP32[$12>>2]|0;
  $149 = (($148) + ($$096106$us$2))|0;
  $150 = ($149>>>0)<(2147483647);
  $151 = $150 ? $149 : 2147483647;
  $152 = HEAP32[$13>>2]|0;
  $153 = (($152) + 51)|0;
  $154 = (_silk_lin2log($153)|0);
  $155 = (($154) + ($$093107$us$2))|0;
  $156 = ($155|0)<(896);
  if ($156) {
   $169 = 0;
  } else {
   $157 = HEAP32[$13>>2]|0;
   $158 = (($157) + 51)|0;
   $159 = (_silk_lin2log($158)|0);
   $160 = (($$093107$us$2) + -896)|0;
   $161 = (($160) + ($159))|0;
   $169 = $161;
  }
  $162 = ((($$0100103$us$2)) + 100|0);
  $163 = ((($$099104$us$2)) + 20|0);
  $164 = (($$0108$us$2) + 1)|0;
  $exitcond119$2 = ($164|0)==($8|0);
  if ($exitcond119$2) {
   break;
  } else {
   $$0100103$us$2 = $162;$$0108$us$2 = $164;$$093107$us$2 = $169;$$096106$us$2 = $151;$$099104$us$2 = $163;$$198105$us$2 = $spec$select$us$2;
  }
 }
 $165 = ($151|0)>($$195$us$1|0);
 if ($165) {
  $$192$us$2 = $$192$us$1;
 } else {
  HEAP8[$2>>0] = 2;
  _memcpy(($1|0),($10|0),($8|0))|0;
  $$192$us$2 = $169;
 }
 $48 = HEAP8[$2>>0]|0;
 $49 = $48 << 24 >> 24;
 $50 = (36740 + ($49<<2)|0);
 $51 = HEAP32[$50>>2]|0;
 if (!($14)) {
  $$091$lcssa128 = $$192$us$2;$$097$lcssa127 = $spec$select$us$2;
  $108 = ($8|0)==(2);
  $$2$v = $108 ? 1 : 2;
  $$2 = $$097$lcssa127 >>> $$2$v;
  HEAP32[$3>>2] = $$091$lcssa128;
  $109 = (_silk_lin2log($$2)|0);
  $110 = $109 << 16;
  $sext = (($110) + -125829120)|0;
  $111 = $sext >> 16;
  $112 = Math_imul($111, -3)|0;
  HEAP32[$4>>2] = $112;
  STACKTOP = sp;return;
 }
 $$1102 = 0;
 while(1) {
  $52 = (($1) + ($$1102)|0);
  $53 = ($$1102*5)|0;
  $54 = HEAP8[$52>>0]|0;
  $55 = $54 << 24 >> 24;
  $56 = ($55*5)|0;
  $57 = (($51) + ($56)|0);
  $58 = HEAP8[$57>>0]|0;
  $59 = $58 << 24 >> 24;
  $60 = $59 << 7;
  $61 = $60&65535;
  $62 = (($0) + ($53<<1)|0);
  HEAP16[$62>>1] = $61;
  $63 = HEAP8[$52>>0]|0;
  $64 = $63 << 24 >> 24;
  $65 = ($64*5)|0;
  $66 = (($65) + 1)|0;
  $67 = (($51) + ($66)|0);
  $68 = HEAP8[$67>>0]|0;
  $69 = $68 << 24 >> 24;
  $70 = $69 << 7;
  $71 = $70&65535;
  $72 = (($53) + 1)|0;
  $73 = (($0) + ($72<<1)|0);
  HEAP16[$73>>1] = $71;
  $74 = HEAP8[$52>>0]|0;
  $75 = $74 << 24 >> 24;
  $76 = ($75*5)|0;
  $77 = (($76) + 2)|0;
  $78 = (($51) + ($77)|0);
  $79 = HEAP8[$78>>0]|0;
  $80 = $79 << 24 >> 24;
  $81 = $80 << 7;
  $82 = $81&65535;
  $83 = (($53) + 2)|0;
  $84 = (($0) + ($83<<1)|0);
  HEAP16[$84>>1] = $82;
  $85 = HEAP8[$52>>0]|0;
  $86 = $85 << 24 >> 24;
  $87 = ($86*5)|0;
  $88 = (($87) + 3)|0;
  $89 = (($51) + ($88)|0);
  $90 = HEAP8[$89>>0]|0;
  $91 = $90 << 24 >> 24;
  $92 = $91 << 7;
  $93 = $92&65535;
  $94 = (($53) + 3)|0;
  $95 = (($0) + ($94<<1)|0);
  HEAP16[$95>>1] = $93;
  $96 = HEAP8[$52>>0]|0;
  $97 = $96 << 24 >> 24;
  $98 = ($97*5)|0;
  $99 = (($98) + 4)|0;
  $100 = (($51) + ($99)|0);
  $101 = HEAP8[$100>>0]|0;
  $102 = $101 << 24 >> 24;
  $103 = $102 << 7;
  $104 = $103&65535;
  $105 = (($53) + 4)|0;
  $106 = (($0) + ($105<<1)|0);
  HEAP16[$106>>1] = $104;
  $107 = (($$1102) + 1)|0;
  $exitcond = ($107|0)==($8|0);
  if ($exitcond) {
   $$091$lcssa128 = $$192$us$2;$$097$lcssa127 = $spec$select$us$2;
   break;
  } else {
   $$1102 = $107;
  }
 }
 $108 = ($8|0)==(2);
 $$2$v = $108 ? 1 : 2;
 $$2 = $$097$lcssa127 >>> $$2$v;
 HEAP32[$3>>2] = $$091$lcssa128;
 $109 = (_silk_lin2log($$2)|0);
 $110 = $109 << 16;
 $sext = (($110) + -125829120)|0;
 $111 = $sext >> 16;
 $112 = Math_imul($111, -3)|0;
 HEAP32[$4>>2] = $112;
 STACKTOP = sp;return;
}
function _silk_VQ_WMat_EC_c($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 var $$0126130 = 0, $$0131 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $sext = 0, $sext127 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $12 = HEAP32[$5>>2]|0;
 $13 = ((($5)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($5)) + 8|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($5)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = $18 << 7;
 $20 = ((($5)) + 16|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = $21 << 8;
 HEAP32[$2>>2] = 2147483647;
 HEAP32[$1>>2] = 2147483647;
 HEAP8[$0>>0] = 0;
 $23 = ($11|0)>(0);
 if (!($23)) {
  return;
 }
 $24 = $16 << 7;
 $25 = $14 << 7;
 $26 = $12 << 7;
 $27 = ((($4)) + 4|0);
 $28 = ((($4)) + 8|0);
 $29 = ((($4)) + 12|0);
 $30 = ((($4)) + 16|0);
 $31 = ((($4)) + 28|0);
 $32 = ((($4)) + 32|0);
 $33 = ((($4)) + 36|0);
 $34 = ((($4)) + 24|0);
 $35 = ((($4)) + 52|0);
 $36 = ((($4)) + 56|0);
 $37 = ((($4)) + 48|0);
 $38 = ((($4)) + 76|0);
 $39 = ((($4)) + 72|0);
 $40 = ((($4)) + 96|0);
 $sext = $9 << 16;
 $41 = $sext >> 16;
 $$0126130 = $6;$$0131 = 0;
 while(1) {
  $42 = (($7) + ($$0131)|0);
  $43 = HEAP8[$42>>0]|0;
  $44 = $43&255;
  $45 = (($44) - ($10))|0;
  $46 = HEAP32[$27>>2]|0;
  $47 = ((($$0126130)) + 1|0);
  $48 = HEAP8[$47>>0]|0;
  $49 = $48 << 24 >> 24;
  $50 = Math_imul($46, $49)|0;
  $51 = (($50) - ($26))|0;
  $52 = HEAP32[$28>>2]|0;
  $53 = ((($$0126130)) + 2|0);
  $54 = HEAP8[$53>>0]|0;
  $55 = $54 << 24 >> 24;
  $56 = Math_imul($52, $55)|0;
  $57 = (($51) + ($56))|0;
  $58 = HEAP32[$29>>2]|0;
  $59 = ((($$0126130)) + 3|0);
  $60 = HEAP8[$59>>0]|0;
  $61 = $60 << 24 >> 24;
  $62 = Math_imul($58, $61)|0;
  $63 = (($57) + ($62))|0;
  $64 = HEAP32[$30>>2]|0;
  $65 = ((($$0126130)) + 4|0);
  $66 = HEAP8[$65>>0]|0;
  $67 = $66 << 24 >> 24;
  $68 = Math_imul($64, $67)|0;
  $69 = (($63) + ($68))|0;
  $70 = $69 << 1;
  $71 = HEAP32[$4>>2]|0;
  $72 = HEAP8[$$0126130>>0]|0;
  $73 = $72 << 24 >> 24;
  $74 = Math_imul($71, $73)|0;
  $75 = (($70) + ($74))|0;
  $76 = $75 >> 16;
  $77 = Math_imul($76, $73)|0;
  $78 = $75 & 65535;
  $79 = Math_imul($78, $73)|0;
  $80 = $79 >> 16;
  $81 = HEAP32[$31>>2]|0;
  $82 = Math_imul($81, $55)|0;
  $83 = (($82) - ($25))|0;
  $84 = HEAP32[$32>>2]|0;
  $85 = Math_imul($84, $61)|0;
  $86 = (($83) + ($85))|0;
  $87 = HEAP32[$33>>2]|0;
  $88 = Math_imul($87, $67)|0;
  $89 = (($86) + ($88))|0;
  $90 = $89 << 1;
  $91 = HEAP32[$34>>2]|0;
  $92 = Math_imul($91, $49)|0;
  $93 = (($90) + ($92))|0;
  $94 = $93 >> 16;
  $95 = Math_imul($94, $49)|0;
  $96 = $93 & 65535;
  $97 = Math_imul($96, $49)|0;
  $98 = $97 >> 16;
  $99 = HEAP32[$35>>2]|0;
  $100 = Math_imul($99, $61)|0;
  $101 = (($100) - ($24))|0;
  $102 = HEAP32[$36>>2]|0;
  $103 = Math_imul($102, $67)|0;
  $104 = (($101) + ($103))|0;
  $105 = $104 << 1;
  $106 = HEAP32[$37>>2]|0;
  $107 = Math_imul($106, $55)|0;
  $108 = (($105) + ($107))|0;
  $109 = $108 >> 16;
  $110 = Math_imul($109, $55)|0;
  $111 = $108 & 65535;
  $112 = Math_imul($111, $55)|0;
  $113 = $112 >> 16;
  $114 = HEAP32[$38>>2]|0;
  $115 = Math_imul($114, $67)|0;
  $116 = (($115) - ($19))|0;
  $117 = $116 << 1;
  $118 = HEAP32[$39>>2]|0;
  $119 = Math_imul($118, $61)|0;
  $120 = (($117) + ($119))|0;
  $121 = $120 >> 16;
  $122 = Math_imul($121, $61)|0;
  $123 = $120 & 65535;
  $124 = Math_imul($123, $61)|0;
  $125 = $124 >> 16;
  $126 = HEAP32[$40>>2]|0;
  $127 = Math_imul($126, $67)|0;
  $128 = (($127) - ($22))|0;
  $129 = $128 >> 16;
  $130 = Math_imul($129, $67)|0;
  $131 = $128 & 65535;
  $132 = Math_imul($131, $67)|0;
  $133 = $132 >> 16;
  $134 = (($77) + 32801)|0;
  $135 = (($134) + ($80))|0;
  $136 = (($135) + ($95))|0;
  $137 = (($136) + ($98))|0;
  $138 = (($137) + ($110))|0;
  $139 = (($138) + ($113))|0;
  $140 = (($139) + ($130))|0;
  $141 = (($140) + ($122))|0;
  $142 = (($141) + ($133))|0;
  $143 = (($142) + ($125))|0;
  $144 = ($143|0)>(-1);
  if ($144) {
   $145 = ($45|0)>(0);
   $spec$select = $145 ? $45 : 0;
   $146 = $spec$select << 11;
   $147 = (($143) + ($146))|0;
   $148 = (_silk_lin2log($147)|0);
   $149 = $148 << 16;
   $sext127 = (($149) + -125829120)|0;
   $150 = $sext127 >> 16;
   $151 = Math_imul($150, $41)|0;
   $152 = (($8) + ($$0131)|0);
   $153 = HEAP8[$152>>0]|0;
   $154 = $153&255;
   $155 = $154 << 2;
   $156 = (($151) + ($155))|0;
   $157 = HEAP32[$2>>2]|0;
   $158 = ($156|0)>($157|0);
   if (!($158)) {
    HEAP32[$2>>2] = $156;
    HEAP32[$1>>2] = $147;
    $159 = $$0131&255;
    HEAP8[$0>>0] = $159;
    HEAP32[$3>>2] = $44;
   }
  }
  $160 = ((($$0126130)) + 5|0);
  $161 = (($$0131) + 1)|0;
  $exitcond = ($161|0)==($11|0);
  if ($exitcond) {
   break;
  } else {
   $$0126130 = $160;$$0131 = $161;
  }
 }
 return;
}
function _silk_process_NLSFs($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$051 = 0, $$053 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $4 = sp + 64|0;
 $5 = sp + 32|0;
 $6 = sp;
 $7 = ((($0)) + 4528|0);
 $8 = HEAP32[$7>>2]|0;
 $sext = $8 << 16;
 $9 = $sext >> 16;
 $10 = Math_imul($9, -5)|0;
 $11 = ($9*59246)|0;
 $12 = $11 >> 16;
 $13 = (($10) + 3146)|0;
 $14 = (($13) + ($12))|0;
 $15 = ((($0)) + 4576|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16|0)==(2);
 $18 = $14 >> 1;
 $19 = $17 ? $18 : 0;
 $$051 = (($19) + ($14))|0;
 $20 = ((($0)) + 4636|0);
 $21 = HEAP32[$20>>2]|0;
 _silk_NLSF_VQ_weights_laroia($5,$2,$21);
 $22 = ((($0)) + 4628|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($23|0)==(1);
 if ($24) {
  $25 = ((($0)) + 4763|0);
  $26 = HEAP8[$25>>0]|0;
  $27 = ($26<<24>>24)<(4);
  if ($27) {
   $28 = $26 << 24 >> 24;
   $29 = HEAP32[$20>>2]|0;
   _silk_interpolate($4,$3,$2,$28,$29);
   $30 = HEAP32[$20>>2]|0;
   _silk_NLSF_VQ_weights_laroia($6,$4,$30);
   $31 = HEAP8[$25>>0]|0;
   $32 = $31 << 24 >> 24;
   $33 = HEAP32[$20>>2]|0;
   $34 = ($33|0)>(0);
   if ($34) {
    $35 = $32 << 27;
    $36 = Math_imul($35, $32)|0;
    $37 = $36 >> 16;
    $$053 = 0;
    while(1) {
     $38 = (($5) + ($$053<<1)|0);
     $39 = HEAP16[$38>>1]|0;
     $40 = $39 << 16 >> 16;
     $41 = $40 >> 1;
     $42 = (($6) + ($$053<<1)|0);
     $43 = HEAP16[$42>>1]|0;
     $44 = $43 << 16 >> 16;
     $45 = Math_imul($37, $44)|0;
     $46 = $45 >>> 16;
     $47 = (($46) + ($41))|0;
     $48 = $47&65535;
     HEAP16[$38>>1] = $48;
     $49 = (($$053) + 1)|0;
     $50 = ($49|0)<($33|0);
     if ($50) {
      $$053 = $49;
     } else {
      $71 = 1;
      break;
     }
    }
   } else {
    $71 = 1;
   }
  } else {
   $71 = 0;
  }
 } else {
  $71 = 0;
 }
 $51 = ((($0)) + 4740|0);
 $52 = ((($0)) + 4688|0);
 $53 = HEAP32[$52>>2]|0;
 $54 = ((($0)) + 4656|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = ((($0)) + 4761|0);
 $57 = HEAP8[$56>>0]|0;
 $58 = $57 << 24 >> 24;
 (_silk_NLSF_encode($51,$2,$53,$5,$$051,$55,$58)|0);
 $59 = ((($1)) + 32|0);
 $60 = HEAP32[$20>>2]|0;
 $61 = ((($0)) + 5088|0);
 $62 = HEAP32[$61>>2]|0;
 _silk_NLSF2A($59,$2,$60,$62);
 if ($71) {
  $63 = ((($0)) + 4763|0);
  $64 = HEAP8[$63>>0]|0;
  $65 = $64 << 24 >> 24;
  $66 = HEAP32[$20>>2]|0;
  _silk_interpolate($4,$3,$2,$65,$66);
  $67 = HEAP32[$20>>2]|0;
  $68 = HEAP32[$61>>2]|0;
  _silk_NLSF2A($1,$4,$67,$68);
  STACKTOP = sp;return;
 } else {
  $69 = HEAP32[$20>>2]|0;
  $70 = $69 << 1;
  _memcpy(($1|0),($59|0),($70|0))|0;
  STACKTOP = sp;return;
 }
}
function _silk_A2NLSF($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0126$ph$ph = 0, $$0128 = 0, $$0128$ph = 0, $$0131 = 0, $$0131$ph = 0, $$0147 = 0, $$0147$ph = 0, $$1$ph = 0, $$1$ph177 = 0, $$1$ph177$ph = 0, $$1$ph177$ph$be = 0, $$1136 = 0, $$1136$1 = 0, $$1136$2 = 0, $$1138 = 0, $$1138$ph = 0, $$1138$ph176 = 0, $$1138$ph176$ph = 0, $$1138$ph176$ph$be = 0;
 var $$1142$ph = 0, $$1142$ph175 = 0, $$1142$ph175$ph = 0, $$1142$ph175$ph$be = 0, $$1146 = 0, $$1146$1 = 0, $$1152 = 0, $$1152$1 = 0, $$1152$2 = 0, $$2149 = 0, $$2149$1 = 0, $$2153 = 0, $$3140 = 0, $$3140$1 = 0, $$3140$2 = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond173 = 0, $or$cond = 0, $or$cond$1 = 0, $or$cond$2 = 0, $or$cond154 = 0, $or$cond156 = 0, $or$cond3 = 0, $or$cond3$1 = 0, $or$cond3$2 = 0, $spec$select = 0, $spec$select$1 = 0, $spec$select$2 = 0, $spec$select157 = 0, $spec$select157$1 = 0, $spec$select158 = 0;
 var $spec$select158$1 = 0, $spec$select159 = 0, $spec$select159$1 = 0, $spec$select159$2 = 0, $spec$select160 = 0, $spec$select160$1 = 0, $spec$select160$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $3 = sp + 64|0;
 $4 = sp;
 $5 = sp + 120|0;
 HEAP32[$5>>2] = $3;
 $6 = ((($5)) + 4|0);
 HEAP32[$6>>2] = $4;
 $7 = $2 >> 1;
 _silk_A2NLSF_init($1,$3,$4,$7);
 $8 = HEAP16[15840]|0;
 $9 = $8 << 16 >> 16;
 $10 = (_silk_A2NLSF_eval_poly($3,$9,$7)|0);
 $11 = ($10|0)<(0);
 if ($11) {
  HEAP16[$0>>1] = 0;
  $12 = (_silk_A2NLSF_eval_poly($4,$9,$7)|0);
  $$1$ph = $4;$$1138$ph = $12;$$1142$ph = 1;
 } else {
  $$1$ph = $3;$$1138$ph = $10;$$1142$ph = 0;
 }
 $$0126$ph$ph = 0;$$1$ph177$ph = $$1$ph;$$1138$ph176$ph = $$1138$ph;$$1142$ph175$ph = $$1142$ph;
 L4: while(1) {
  $$0128$ph = 1;$$0131$ph = 0;$$0147$ph = $9;$$1$ph177 = $$1$ph177$ph;$$1138$ph176 = $$1138$ph176$ph;$$1142$ph175 = $$1142$ph175$ph;
  L6: while(1) {
   $$0128 = $$0128$ph;$$0131 = $$0131$ph;$$0147 = $$0147$ph;$$1138 = $$1138$ph176;
   while(1) {
    $13 = (31680 + ($$0128<<1)|0);
    $14 = HEAP16[$13>>1]|0;
    $15 = $14 << 16 >> 16;
    $16 = (_silk_A2NLSF_eval_poly($$1$ph177,$15,$7)|0);
    $17 = ($$1138|0)>(0);
    $18 = ($16|0)<($$0131|0);
    $or$cond154 = $17 | $18;
    if (!($or$cond154)) {
     break;
    }
    $19 = ($$1138|0)<(0);
    $20 = (0 - ($$0131))|0;
    $21 = ($16|0)>($20|0);
    $or$cond156 = $19 | $21;
    if (!($or$cond156)) {
     break;
    }
    $68 = (($$0128) + 1)|0;
    $69 = ($$0128|0)>(127);
    if ($69) {
     break L6;
    } else {
     $$0128 = $68;$$0131 = 0;$$0147 = $15;$$1138 = $16;
    }
   }
   $22 = $14 << 16 >> 16;
   $23 = ($16|0)==(0);
   $24 = (($$0147) + ($22))|0;
   $25 = $24 >> 1;
   $26 = $24 & 1;
   $27 = (($25) + ($26))|0;
   $28 = (_silk_A2NLSF_eval_poly($$1$ph177,$27,$7)|0);
   $29 = ($$1138|0)<(1);
   $30 = ($28|0)>(-1);
   $or$cond = $29 & $30;
   if ($or$cond) {
    $$1136 = $28;$$1146 = $27;$$1152 = -256;$$2149 = $$0147;$$3140 = $$1138;
   } else {
    $31 = ($$1138|0)>(-1);
    $32 = ($28|0)<(1);
    $or$cond3 = $31 & $32;
    $spec$select = $or$cond3 ? -256 : -128;
    $spec$select157 = $or$cond3 ? $$0147 : $27;
    $spec$select158 = $or$cond3 ? $27 : $22;
    $spec$select159 = $or$cond3 ? $$1138 : $28;
    $spec$select160 = $or$cond3 ? $28 : $16;
    $$1136 = $spec$select160;$$1146 = $spec$select158;$$1152 = $spec$select;$$2149 = $spec$select157;$$3140 = $spec$select159;
   }
   $33 = (($$1146) + ($$2149))|0;
   $34 = $33 >> 1;
   $35 = $33 & 1;
   $36 = (($34) + ($35))|0;
   $37 = (_silk_A2NLSF_eval_poly($$1$ph177,$36,$7)|0);
   $38 = ($$3140|0)<(1);
   $39 = ($37|0)>(-1);
   $or$cond$1 = $38 & $39;
   if ($or$cond$1) {
    $$1136$1 = $37;$$1146$1 = $36;$$1152$1 = $$1152;$$2149$1 = $$2149;$$3140$1 = $$3140;
   } else {
    $94 = ($$3140|0)>(-1);
    $95 = ($37|0)<(1);
    $or$cond3$1 = $94 & $95;
    $96 = $or$cond3$1 ? 0 : 64;
    $spec$select$1 = $96 | $$1152;
    $spec$select157$1 = $or$cond3$1 ? $$2149 : $36;
    $spec$select158$1 = $or$cond3$1 ? $36 : $$1146;
    $spec$select159$1 = $or$cond3$1 ? $$3140 : $37;
    $spec$select160$1 = $or$cond3$1 ? $37 : $$1136;
    $$1136$1 = $spec$select160$1;$$1146$1 = $spec$select158$1;$$1152$1 = $spec$select$1;$$2149$1 = $spec$select157$1;$$3140$1 = $spec$select159$1;
   }
   $97 = (($$1146$1) + ($$2149$1))|0;
   $98 = $97 >> 1;
   $99 = $97 & 1;
   $100 = (($98) + ($99))|0;
   $101 = (_silk_A2NLSF_eval_poly($$1$ph177,$100,$7)|0);
   $102 = ($$3140$1|0)<(1);
   $103 = ($101|0)>(-1);
   $or$cond$2 = $102 & $103;
   if ($or$cond$2) {
    $$1136$2 = $101;$$1152$2 = $$1152$1;$$3140$2 = $$3140$1;
   } else {
    $104 = ($$3140$1|0)>(-1);
    $105 = ($101|0)<(1);
    $or$cond3$2 = $104 & $105;
    $106 = $or$cond3$2 ? 0 : 32;
    $spec$select$2 = (($106) + ($$1152$1))|0;
    $spec$select159$2 = $or$cond3$2 ? $$3140$1 : $101;
    $spec$select160$2 = $or$cond3$2 ? $101 : $$1136$1;
    $$1136$2 = $spec$select160$2;$$1152$2 = $spec$select$2;$$3140$2 = $spec$select159$2;
   }
   $$ = $23&1;
   $107 = ($$3140$2|0)>(0);
   $108 = (0 - ($$3140$2))|0;
   $109 = $107 ? $$3140$2 : $108;
   $110 = ($109|0)<(65536);
   $41 = (($$3140$2) - ($$1136$2))|0;
   if ($110) {
    $40 = ($41|0)==(0);
    if ($40) {
     $$2153 = $$1152$2;
    } else {
     $42 = $$3140$2 << 5;
     $43 = $41 >> 1;
     $44 = (($43) + ($42))|0;
     $45 = (($44|0) / ($41|0))&-1;
     $46 = (($45) + ($$1152$2))|0;
     $$2153 = $46;
    }
   } else {
    $47 = $41 >> 5;
    $48 = (($$3140$2|0) / ($47|0))&-1;
    $49 = (($48) + ($$1152$2))|0;
    $$2153 = $49;
   }
   $50 = $$0128 << 8;
   $51 = (($$2153) + ($50))|0;
   $52 = ($51|0)<(32767);
   $53 = $52 ? $51 : 32767;
   $54 = $53&65535;
   $55 = (($0) + ($$1142$ph175<<1)|0);
   HEAP16[$55>>1] = $54;
   $56 = (($$1142$ph175) + 1)|0;
   $57 = ($56|0)<($2|0);
   if (!($57)) {
    label = 25;
    break L4;
   }
   $58 = $56 & 1;
   $59 = (($5) + ($58<<2)|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = (($$0128) + -1)|0;
   $62 = (31680 + ($61<<1)|0);
   $63 = HEAP16[$62>>1]|0;
   $64 = $63 << 16 >> 16;
   $65 = $56 << 12;
   $66 = $65 & 8192;
   $67 = (4096 - ($66))|0;
   $$0128$ph = $$0128;$$0131$ph = $$;$$0147$ph = $64;$$1$ph177 = $60;$$1138$ph176 = $67;$$1142$ph175 = $56;
  }
  $70 = (($$0126$ph$ph) + 1)|0;
  $71 = ($$0126$ph$ph>>>0)>(15);
  if ($71) {
   break;
  }
  $89 = 2 << $$0126$ph$ph;
  $90 = (65536 - ($89))|0;
  _silk_bwexpander_32($1,$2,$90);
  _silk_A2NLSF_init($1,$3,$4,$7);
  $91 = (_silk_A2NLSF_eval_poly($3,$9,$7)|0);
  $92 = ($91|0)<(0);
  if ($92) {
   HEAP16[$0>>1] = 0;
   $93 = (_silk_A2NLSF_eval_poly($4,$9,$7)|0);
   $$1$ph177$ph$be = $4;$$1138$ph176$ph$be = $93;$$1142$ph175$ph$be = 1;
  } else {
   $$1$ph177$ph$be = $3;$$1138$ph176$ph$be = $91;$$1142$ph175$ph$be = 0;
  }
  $$0126$ph$ph = $70;$$1$ph177$ph = $$1$ph177$ph$be;$$1138$ph176$ph = $$1138$ph176$ph$be;$$1142$ph175$ph = $$1142$ph175$ph$be;
 }
 if ((label|0) == 25) {
  STACKTOP = sp;return;
 }
 $72 = (($2) + 1)|0;
 $73 = (32768 / ($72|0))&-1;
 $74 = $73&65535;
 HEAP16[$0>>1] = $74;
 $75 = ($2|0)>(1);
 if (!($75)) {
  STACKTOP = sp;return;
 }
 $76 = $73 & 65535;
 $77 = $73 & 65535;
 $78 = (($76) + ($77))|0;
 $79 = $78&65535;
 $80 = ((($0)) + 2|0);
 HEAP16[$80>>1] = $79;
 $exitcond173 = ($2|0)==(2);
 if ($exitcond173) {
  STACKTOP = sp;return;
 }
 $82 = $78;$87 = 2;
 while(1) {
  $$pre = HEAP16[$0>>1]|0;
  $81 = $82 & 65535;
  $83 = $$pre&65535;
  $84 = (($81) + ($83))|0;
  $85 = $84&65535;
  $86 = (($0) + ($87<<1)|0);
  HEAP16[$86>>1] = $85;
  $88 = (($87) + 1)|0;
  $exitcond = ($88|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $82 = $84;$87 = $88;
  }
 }
 STACKTOP = sp;return;
}
function _silk_A2NLSF_init($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$01618$i = 0, $$01618$i38 = 0, $$017$i = 0, $$017$i40 = 0, $$045 = 0, $$144 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i41 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (($1) + ($3<<2)|0);
 HEAP32[$4>>2] = 65536;
 $5 = (($2) + ($3<<2)|0);
 HEAP32[$5>>2] = 65536;
 $6 = ($3|0)>(0);
 if (!($6)) {
  return;
 }
 $7 = (($3) + -1)|0;
 $$045 = 0;
 while(1) {
  $8 = (($7) - ($$045))|0;
  $9 = (($0) + ($8<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($$045) + ($3))|0;
  $12 = (($0) + ($11<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($13) + ($10))|0;
  $15 = (0 - ($14))|0;
  $16 = (($1) + ($$045<<2)|0);
  HEAP32[$16>>2] = $15;
  $17 = HEAP32[$9>>2]|0;
  $18 = HEAP32[$12>>2]|0;
  $19 = (($18) - ($17))|0;
  $20 = (($2) + ($$045<<2)|0);
  HEAP32[$20>>2] = $19;
  $21 = (($$045) + 1)|0;
  $exitcond = ($21|0)==($3|0);
  if ($exitcond) {
   break;
  } else {
   $$045 = $21;
  }
 }
 if (!($6)) {
  return;
 }
 $$144 = $3;
 while(1) {
  $22 = (($1) + ($$144<<2)|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = (($$144) + -1)|0;
  $25 = (($1) + ($24<<2)|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = (($26) - ($23))|0;
  HEAP32[$25>>2] = $27;
  $28 = (($2) + ($$144<<2)|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = (($2) + ($24<<2)|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = (($31) + ($29))|0;
  HEAP32[$30>>2] = $32;
  $33 = ($$144|0)>(1);
  if ($33) {
   $$144 = $24;
  } else {
   break;
  }
 }
 $34 = ($3|0)<(2);
 if ($34) {
  return;
 }
 $$01618$i = 2;
 while(1) {
  $35 = ($$01618$i|0)<($3|0);
  if ($35) {
   $$017$i = $3;
   while(1) {
    $36 = (($1) + ($$017$i<<2)|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (($$017$i) + -2)|0;
    $39 = (($1) + ($38<<2)|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = (($40) - ($37))|0;
    HEAP32[$39>>2] = $41;
    $42 = (($$017$i) + -1)|0;
    $43 = ($42|0)>($$01618$i|0);
    if ($43) {
     $$017$i = $42;
    } else {
     break;
    }
   }
  }
  $44 = (($1) + ($$01618$i<<2)|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = $45 << 1;
  $47 = (($$01618$i) + -2)|0;
  $48 = (($1) + ($47<<2)|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = (($49) - ($46))|0;
  HEAP32[$48>>2] = $50;
  $51 = (($$01618$i) + 1)|0;
  $exitcond$i = ($$01618$i|0)==($3|0);
  if ($exitcond$i) {
   break;
  } else {
   $$01618$i = $51;
  }
 }
 $$01618$i38 = 2;
 while(1) {
  $52 = ($$01618$i38|0)<($3|0);
  if ($52) {
   $$017$i40 = $3;
   while(1) {
    $53 = (($2) + ($$017$i40<<2)|0);
    $54 = HEAP32[$53>>2]|0;
    $55 = (($$017$i40) + -2)|0;
    $56 = (($2) + ($55<<2)|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = (($57) - ($54))|0;
    HEAP32[$56>>2] = $58;
    $59 = (($$017$i40) + -1)|0;
    $60 = ($59|0)>($$01618$i38|0);
    if ($60) {
     $$017$i40 = $59;
    } else {
     break;
    }
   }
  }
  $61 = (($2) + ($$01618$i38<<2)|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = $62 << 1;
  $64 = (($$01618$i38) + -2)|0;
  $65 = (($2) + ($64<<2)|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (($66) - ($63))|0;
  HEAP32[$65>>2] = $67;
  $68 = (($$01618$i38) + 1)|0;
  $exitcond$i41 = ($$01618$i38|0)==($3|0);
  if ($exitcond$i41) {
   break;
  } else {
   $$01618$i38 = $68;
  }
 }
 return;
}
function _silk_A2NLSF_eval_poly($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$07680 = 0, $$07680$in = 0, $$079 = 0, $$1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $sext = 0, $sext77 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($0) + ($2<<2)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $1 << 4;
 $6 = ($2|0)==(8);
 if ($6) {
  $7 = ((($0)) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = $4 >> 16;
  $sext77 = $1 << 20;
  $10 = $sext77 >> 16;
  $11 = Math_imul($9, $10)|0;
  $12 = $4 & 65535;
  $13 = Math_imul($12, $10)|0;
  $14 = $13 >> 16;
  $15 = $5 >> 15;
  $16 = (($15) + 1)|0;
  $17 = $16 >> 1;
  $18 = Math_imul($4, $17)|0;
  $19 = (($11) + ($18))|0;
  $20 = (($19) + ($14))|0;
  $21 = (($20) + ($8))|0;
  $22 = ((($0)) + 24|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = $21 >> 16;
  $25 = Math_imul($24, $10)|0;
  $26 = $21 & 65535;
  $27 = Math_imul($26, $10)|0;
  $28 = $27 >> 16;
  $29 = Math_imul($21, $17)|0;
  $30 = (($29) + ($23))|0;
  $31 = (($30) + ($25))|0;
  $32 = (($31) + ($28))|0;
  $33 = ((($0)) + 20|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = $32 >> 16;
  $36 = Math_imul($35, $10)|0;
  $37 = $32 & 65535;
  $38 = Math_imul($37, $10)|0;
  $39 = $38 >> 16;
  $40 = Math_imul($32, $17)|0;
  $41 = (($40) + ($34))|0;
  $42 = (($41) + ($36))|0;
  $43 = (($42) + ($39))|0;
  $44 = ((($0)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = $43 >> 16;
  $47 = Math_imul($46, $10)|0;
  $48 = $43 & 65535;
  $49 = Math_imul($48, $10)|0;
  $50 = $49 >> 16;
  $51 = Math_imul($43, $17)|0;
  $52 = (($51) + ($45))|0;
  $53 = (($52) + ($47))|0;
  $54 = (($53) + ($50))|0;
  $55 = ((($0)) + 12|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = $54 >> 16;
  $58 = Math_imul($57, $10)|0;
  $59 = $54 & 65535;
  $60 = Math_imul($59, $10)|0;
  $61 = $60 >> 16;
  $62 = Math_imul($54, $17)|0;
  $63 = (($62) + ($56))|0;
  $64 = (($63) + ($58))|0;
  $65 = (($64) + ($61))|0;
  $66 = ((($0)) + 8|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = $65 >> 16;
  $69 = Math_imul($68, $10)|0;
  $70 = $65 & 65535;
  $71 = Math_imul($70, $10)|0;
  $72 = $71 >> 16;
  $73 = Math_imul($65, $17)|0;
  $74 = (($73) + ($67))|0;
  $75 = (($74) + ($69))|0;
  $76 = (($75) + ($72))|0;
  $77 = ((($0)) + 4|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = $76 >> 16;
  $80 = Math_imul($79, $10)|0;
  $81 = $76 & 65535;
  $82 = Math_imul($81, $10)|0;
  $83 = $82 >> 16;
  $84 = Math_imul($76, $17)|0;
  $85 = (($84) + ($78))|0;
  $86 = (($85) + ($80))|0;
  $87 = (($86) + ($83))|0;
  $88 = HEAP32[$0>>2]|0;
  $89 = $87 >> 16;
  $90 = Math_imul($89, $10)|0;
  $91 = $87 & 65535;
  $92 = Math_imul($91, $10)|0;
  $93 = $92 >> 16;
  $94 = Math_imul($87, $17)|0;
  $95 = (($94) + ($88))|0;
  $96 = (($95) + ($90))|0;
  $97 = (($96) + ($93))|0;
  $$1 = $97;
  return ($$1|0);
 }
 $98 = ($2|0)>(0);
 if (!($98)) {
  $$1 = $4;
  return ($$1|0);
 }
 $sext = $1 << 20;
 $99 = $sext >> 16;
 $100 = $5 >> 15;
 $101 = (($100) + 1)|0;
 $102 = $101 >> 1;
 $$07680$in = $2;$$079 = $4;
 while(1) {
  $$07680 = (($$07680$in) + -1)|0;
  $103 = (($0) + ($$07680<<2)|0);
  $104 = HEAP32[$103>>2]|0;
  $105 = $$079 >> 16;
  $106 = Math_imul($105, $99)|0;
  $107 = $$079 & 65535;
  $108 = Math_imul($107, $99)|0;
  $109 = $108 >> 16;
  $110 = Math_imul($$079, $102)|0;
  $111 = (($106) + ($110))|0;
  $112 = (($111) + ($109))|0;
  $113 = (($112) + ($104))|0;
  $114 = ($$07680$in|0)>(1);
  if ($114) {
   $$07680$in = $$07680;$$079 = $113;
  } else {
   $$1 = $113;
   break;
  }
 }
 return ($$1|0);
}
function _silk_ana_filt_bank_1($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$056 = 0, $$promoted = 0, $$promoted57 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = $4 >> 1;
 $6 = ($4|0)>(1);
 if (!($6)) {
  return;
 }
 $7 = ((($1)) + 4|0);
 $$promoted = HEAP32[$1>>2]|0;
 $$promoted57 = HEAP32[$7>>2]|0;
 $$056 = 0;$14 = $$promoted;$29 = $$promoted57;
 while(1) {
  $8 = $$056 << 1;
  $9 = (($0) + ($8<<1)|0);
  $10 = HEAP16[$9>>1]|0;
  $11 = $10 << 16 >> 16;
  $12 = $11 << 10;
  $13 = (($12) - ($14))|0;
  $15 = $13 >> 16;
  $16 = Math_imul($15, -24290)|0;
  $17 = $13 & 65535;
  $18 = Math_imul($17, -24290)|0;
  $19 = $18 >> 16;
  $20 = (($19) + ($16))|0;
  $21 = (($20) + ($12))|0;
  $22 = (($21) + ($13))|0;
  $23 = $8 | 1;
  $24 = (($0) + ($23<<1)|0);
  $25 = HEAP16[$24>>1]|0;
  $26 = $25 << 16 >> 16;
  $27 = $26 << 10;
  $28 = (($27) - ($29))|0;
  $30 = $28 >> 16;
  $31 = ($30*10788)|0;
  $32 = $28 & 65535;
  $33 = ($32*10788)|0;
  $34 = $33 >>> 16;
  $35 = (($34) + ($31))|0;
  $36 = (($35) + ($29))|0;
  $37 = (($35) + ($27))|0;
  $38 = (($36) + ($21))|0;
  $39 = $38 >>> 10;
  $40 = (($39) + 1)|0;
  $41 = $40 >>> 1;
  $42 = ($38|0)>(67107839);
  $43 = ($38|0)<(-67109888);
  $44 = $41&65535;
  $45 = $43 ? -32768 : $44;
  $46 = $42 ? 32767 : $45;
  $47 = (($2) + ($$056<<1)|0);
  HEAP16[$47>>1] = $46;
  $48 = (($36) - ($21))|0;
  $49 = $48 >>> 10;
  $50 = (($49) + 1)|0;
  $51 = $50 >>> 1;
  $52 = ($48|0)>(67107839);
  $53 = ($48|0)<(-67109888);
  $54 = $51&65535;
  $55 = $53 ? -32768 : $54;
  $56 = $52 ? 32767 : $55;
  $57 = (($3) + ($$056<<1)|0);
  HEAP16[$57>>1] = $56;
  $58 = (($$056) + 1)|0;
  $59 = ($58|0)<($5|0);
  if ($59) {
   $$056 = $58;$14 = $22;$29 = $37;
  } else {
   break;
  }
 }
 HEAP32[$1>>2] = $22;
 HEAP32[$7>>2] = $37;
 return;
}
function _silk_biquad_alt_stride1($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$066 = 0, $$pre = 0, $$pre67 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = HEAP32[$2>>2]|0;
 $7 = (0 - ($6))|0;
 $8 = $7 & 16383;
 $9 = ((($2)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (0 - ($10))|0;
 $12 = $11 & 16383;
 $13 = ($5|0)>(0);
 if (!($13)) {
  return;
 }
 $14 = ((($3)) + 4|0);
 $15 = $7 << 2;
 $16 = $15 >> 16;
 $17 = ((($1)) + 4|0);
 $18 = $11 << 2;
 $19 = $18 >> 16;
 $20 = ((($1)) + 8|0);
 $$pre = HEAP32[$3>>2]|0;
 $$pre67 = HEAP32[$14>>2]|0;
 $$066 = 0;$31 = $$pre;$47 = $$pre67;
 while(1) {
  $21 = (($0) + ($$066<<1)|0);
  $22 = HEAP16[$21>>1]|0;
  $23 = $22 << 16 >> 16;
  $24 = HEAP32[$1>>2]|0;
  $25 = $24 >> 16;
  $26 = Math_imul($25, $23)|0;
  $27 = $24 & 65535;
  $28 = Math_imul($27, $23)|0;
  $29 = $28 >> 16;
  $30 = (($26) + ($31))|0;
  $32 = (($30) + ($29))|0;
  $33 = $32 << 2;
  $34 = $33 >> 16;
  $35 = Math_imul($34, $8)|0;
  $36 = $33 & 65532;
  $37 = Math_imul($36, $8)|0;
  $38 = $37 >>> 16;
  $39 = (($38) + ($35))|0;
  $40 = $39 >> 13;
  $41 = (($40) + 1)|0;
  $42 = $41 >> 1;
  $43 = Math_imul($34, $16)|0;
  $44 = Math_imul($36, $16)|0;
  $45 = $44 >> 16;
  $46 = (($43) + ($47))|0;
  $48 = (($46) + ($45))|0;
  $49 = (($48) + ($42))|0;
  HEAP32[$3>>2] = $49;
  $50 = HEAP32[$17>>2]|0;
  $51 = $50 >> 16;
  $52 = Math_imul($51, $23)|0;
  $53 = $50 & 65535;
  $54 = Math_imul($53, $23)|0;
  $55 = $54 >> 16;
  $56 = (($55) + ($52))|0;
  $57 = (($56) + ($49))|0;
  HEAP32[$3>>2] = $57;
  $58 = Math_imul($34, $12)|0;
  $59 = Math_imul($36, $12)|0;
  $60 = $59 >>> 16;
  $61 = (($60) + ($58))|0;
  $62 = $61 >> 13;
  $63 = (($62) + 1)|0;
  $64 = $63 >> 1;
  $65 = Math_imul($34, $19)|0;
  $66 = Math_imul($36, $19)|0;
  $67 = $66 >> 16;
  $68 = (($67) + ($65))|0;
  $69 = (($68) + ($64))|0;
  HEAP32[$14>>2] = $69;
  $70 = HEAP32[$20>>2]|0;
  $71 = $70 >> 16;
  $72 = Math_imul($71, $23)|0;
  $73 = $70 & 65535;
  $74 = Math_imul($73, $23)|0;
  $75 = $74 >> 16;
  $76 = (($75) + ($72))|0;
  $77 = (($76) + ($69))|0;
  HEAP32[$14>>2] = $77;
  $78 = (($33) + 16383)|0;
  $79 = $78 >>> 14;
  $80 = ($33|0)>(536854528);
  $81 = ($33|0)<(-536887295);
  $82 = $79&65535;
  $83 = $81 ? -32768 : $82;
  $84 = $80 ? 32767 : $83;
  $85 = (($4) + ($$066<<1)|0);
  HEAP16[$85>>1] = $84;
  $86 = (($$066) + 1)|0;
  $exitcond = ($86|0)==($5|0);
  if ($exitcond) {
   break;
  } else {
   $$066 = $86;$31 = $57;$47 = $77;
  }
 }
 return;
}
function _silk_bwexpander_32($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$02932 = 0, $$033 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $exitcond = 0, $sext = 0, $sext30 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($2) + -65536)|0;
 $4 = (($1) + -1)|0;
 $5 = ($1|0)>(1);
 $6 = $2 >> 16;
 if ($5) {
  $$02932 = 0;$$033 = $2;$11 = $6;
  while(1) {
   $7 = (($0) + ($$02932<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $sext30 = $8 << 16;
   $9 = $sext30 >> 16;
   $10 = Math_imul($9, $11)|0;
   $12 = $$033 & 65535;
   $13 = Math_imul($9, $12)|0;
   $14 = $13 >> 16;
   $15 = (($14) + ($10))|0;
   $16 = $8 >> 15;
   $17 = (($16) + 1)|0;
   $18 = $17 >> 1;
   $19 = Math_imul($18, $$033)|0;
   $20 = (($15) + ($19))|0;
   HEAP32[$7>>2] = $20;
   $21 = Math_imul($$033, $3)|0;
   $22 = $21 >> 15;
   $23 = (($22) + 1)|0;
   $24 = $23 >> 1;
   $25 = (($24) + ($$033))|0;
   $26 = (($$02932) + 1)|0;
   $27 = $25 >> 16;
   $exitcond = ($26|0)==($4|0);
   if ($exitcond) {
    $$0$lcssa = $25;$$lcssa = $27;
    break;
   } else {
    $$02932 = $26;$$033 = $25;$11 = $27;
   }
  }
 } else {
  $$0$lcssa = $2;$$lcssa = $6;
 }
 $28 = (($0) + ($4<<2)|0);
 $29 = HEAP32[$28>>2]|0;
 $sext = $29 << 16;
 $30 = $sext >> 16;
 $31 = Math_imul($30, $$lcssa)|0;
 $32 = $$0$lcssa & 65535;
 $33 = Math_imul($30, $32)|0;
 $34 = $33 >> 16;
 $35 = (($34) + ($31))|0;
 $36 = $29 >> 15;
 $37 = (($36) + 1)|0;
 $38 = $37 >> 1;
 $39 = Math_imul($38, $$0$lcssa)|0;
 $40 = (($35) + ($39))|0;
 HEAP32[$28>>2] = $40;
 return;
}
function _silk_bwexpander($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$01718 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($2) + -65536)|0;
 $4 = (($1) + -1)|0;
 $5 = ($1|0)>(1);
 if ($5) {
  $$01718 = 0;$$019 = $2;
  while(1) {
   $6 = (($0) + ($$01718<<1)|0);
   $7 = HEAP16[$6>>1]|0;
   $8 = $7 << 16 >> 16;
   $9 = Math_imul($$019, $8)|0;
   $10 = $9 >>> 15;
   $11 = (($10) + 1)|0;
   $12 = $11 >>> 1;
   $13 = $12&65535;
   HEAP16[$6>>1] = $13;
   $14 = Math_imul($$019, $3)|0;
   $15 = $14 >> 15;
   $16 = (($15) + 1)|0;
   $17 = $16 >> 1;
   $18 = (($17) + ($$019))|0;
   $19 = (($$01718) + 1)|0;
   $exitcond = ($19|0)==($4|0);
   if ($exitcond) {
    $$0$lcssa = $18;
    break;
   } else {
    $$01718 = $19;$$019 = $18;
   }
  }
 } else {
  $$0$lcssa = $2;
 }
 $20 = (($0) + ($4<<1)|0);
 $21 = HEAP16[$20>>1]|0;
 $22 = $21 << 16 >> 16;
 $23 = Math_imul($$0$lcssa, $22)|0;
 $24 = $23 >>> 15;
 $25 = (($24) + 1)|0;
 $26 = $25 >>> 1;
 $27 = $26&65535;
 HEAP16[$20>>1] = $27;
 return;
}
function _silk_decode_pitch($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$0 = 0, $$048 = 0, $$04956 = 0, $$04956$us = 0, $$50 = 0, $$51 = 0, $$52 = 0, $$53$us = 0, $$54 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $exitcond = 0, $exitcond58 = 0, $sext = 0, $spec$select$us = 0, $spec$select55 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($3|0)==(8);
 $6 = ($4|0)==(4);
 $$ = $6 ? 11 : 3;
 $$50 = $6 ? 32000 : 37931;
 $$51 = $6 ? 34 : 12;
 $$52 = $6 ? 32048 : 31968;
 $$048 = $5 ? $$ : $$51;
 $$0 = $5 ? $$50 : $$52;
 $sext = $3 << 16;
 $7 = $sext >> 16;
 $8 = $sext >> 15;
 $9 = ($7*18)|0;
 $10 = $0 << 16 >> 16;
 $11 = (($8) + ($10))|0;
 $12 = ($4|0)>(0);
 if (!($12)) {
  return;
 }
 $13 = $1 << 24 >> 24;
 $14 = ($8|0)>($9|0);
 if ($14) {
  $$04956$us = 0;
  while(1) {
   $15 = Math_imul($$04956$us, $$048)|0;
   $16 = (($15) + ($13))|0;
   $17 = (($$0) + ($16)|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18 << 24 >> 24;
   $20 = (($11) + ($19))|0;
   $21 = (($2) + ($$04956$us<<2)|0);
   $22 = ($20|0)>($8|0);
   $23 = ($20|0)<($9|0);
   $$53$us = $23 ? $9 : $20;
   $spec$select$us = $22 ? $8 : $$53$us;
   HEAP32[$21>>2] = $spec$select$us;
   $24 = (($$04956$us) + 1)|0;
   $exitcond = ($24|0)==($4|0);
   if ($exitcond) {
    break;
   } else {
    $$04956$us = $24;
   }
  }
  return;
 } else {
  $$04956 = 0;
  while(1) {
   $25 = Math_imul($$04956, $$048)|0;
   $26 = (($25) + ($13))|0;
   $27 = (($$0) + ($26)|0);
   $28 = HEAP8[$27>>0]|0;
   $29 = $28 << 24 >> 24;
   $30 = (($11) + ($29))|0;
   $31 = (($2) + ($$04956<<2)|0);
   $32 = ($30|0)>($9|0);
   $33 = ($30|0)<($8|0);
   $$54 = $33 ? $8 : $30;
   $spec$select55 = $32 ? $9 : $$54;
   HEAP32[$31>>2] = $spec$select55;
   $34 = (($$04956) + 1)|0;
   $exitcond58 = ($34|0)==($4|0);
   if ($exitcond58) {
    break;
   } else {
    $$04956 = $34;
   }
  }
  return;
 }
}
function _silk_inner_prod_aligned_scale($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$lcssa = 0, $$01112 = 0, $$013 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($3|0)>(0);
 if (!($4)) {
  $$0$lcssa = 0;
  return ($$0$lcssa|0);
 }
 $$01112 = 0;$$013 = 0;
 while(1) {
  $5 = (($0) + ($$01112<<1)|0);
  $6 = HEAP16[$5>>1]|0;
  $7 = $6 << 16 >> 16;
  $8 = (($1) + ($$01112<<1)|0);
  $9 = HEAP16[$8>>1]|0;
  $10 = $9 << 16 >> 16;
  $11 = Math_imul($10, $7)|0;
  $12 = $11 >> $2;
  $13 = (($12) + ($$013))|0;
  $14 = (($$01112) + 1)|0;
  $exitcond = ($14|0)==($3|0);
  if ($exitcond) {
   $$0$lcssa = $13;
   break;
  } else {
   $$01112 = $14;$$013 = $13;
  }
 }
 return ($$0$lcssa|0);
}
function _silk_LPC_analysis_filter($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$05559 = 0, $$05559$us = 0, $$05657$us = 0, $$058$us = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond64 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ($4|0)<($3|0);
 if (!($6)) {
  $148 = $4 << 1;
  _memset(($0|0),0,($148|0))|0;
  return;
 }
 $7 = ((($2)) + 2|0);
 $8 = ((($2)) + 4|0);
 $9 = ((($2)) + 6|0);
 $10 = ((($2)) + 8|0);
 $11 = ((($2)) + 10|0);
 $12 = ($4|0)>(6);
 if (!($12)) {
  $$05559 = $4;
  while(1) {
   $91 = (($$05559) + -1)|0;
   $92 = (($1) + ($91<<1)|0);
   $93 = HEAP16[$92>>1]|0;
   $94 = $93 << 16 >> 16;
   $95 = HEAP16[$2>>1]|0;
   $96 = $95 << 16 >> 16;
   $97 = Math_imul($96, $94)|0;
   $98 = ((($92)) + -2|0);
   $99 = HEAP16[$98>>1]|0;
   $100 = $99 << 16 >> 16;
   $101 = HEAP16[$7>>1]|0;
   $102 = $101 << 16 >> 16;
   $103 = Math_imul($102, $100)|0;
   $104 = (($103) + ($97))|0;
   $105 = ((($92)) + -4|0);
   $106 = HEAP16[$105>>1]|0;
   $107 = $106 << 16 >> 16;
   $108 = HEAP16[$8>>1]|0;
   $109 = $108 << 16 >> 16;
   $110 = Math_imul($109, $107)|0;
   $111 = (($104) + ($110))|0;
   $112 = ((($92)) + -6|0);
   $113 = HEAP16[$112>>1]|0;
   $114 = $113 << 16 >> 16;
   $115 = HEAP16[$9>>1]|0;
   $116 = $115 << 16 >> 16;
   $117 = Math_imul($116, $114)|0;
   $118 = (($111) + ($117))|0;
   $119 = ((($92)) + -8|0);
   $120 = HEAP16[$119>>1]|0;
   $121 = $120 << 16 >> 16;
   $122 = HEAP16[$10>>1]|0;
   $123 = $122 << 16 >> 16;
   $124 = Math_imul($123, $121)|0;
   $125 = (($118) + ($124))|0;
   $126 = ((($92)) + -10|0);
   $127 = HEAP16[$126>>1]|0;
   $128 = $127 << 16 >> 16;
   $129 = HEAP16[$11>>1]|0;
   $130 = $129 << 16 >> 16;
   $131 = Math_imul($130, $128)|0;
   $132 = (($125) + ($131))|0;
   $133 = (($1) + ($$05559<<1)|0);
   $134 = HEAP16[$133>>1]|0;
   $135 = $134 << 16 >> 16;
   $136 = $135 << 12;
   $137 = (($136) - ($132))|0;
   $138 = $137 >> 11;
   $139 = (($138) + 1)|0;
   $140 = $139 >> 1;
   $141 = ($137|0)>(134215679);
   $142 = ($140|0)>(-32768);
   $143 = $142 ? $140 : -32768;
   $144 = $143&65535;
   $145 = $141 ? 32767 : $144;
   $146 = (($0) + ($$05559<<1)|0);
   HEAP16[$146>>1] = $145;
   $147 = (($$05559) + 1)|0;
   $exitcond64 = ($147|0)==($3|0);
   if ($exitcond64) {
    break;
   } else {
    $$05559 = $147;
   }
  }
  $148 = $4 << 1;
  _memset(($0|0),0,($148|0))|0;
  return;
 }
 $$05559$us = $4;
 while(1) {
  $13 = (($$05559$us) + -1)|0;
  $14 = (($1) + ($13<<1)|0);
  $15 = HEAP16[$14>>1]|0;
  $16 = $15 << 16 >> 16;
  $17 = HEAP16[$2>>1]|0;
  $18 = $17 << 16 >> 16;
  $19 = Math_imul($18, $16)|0;
  $20 = ((($14)) + -2|0);
  $21 = HEAP16[$20>>1]|0;
  $22 = $21 << 16 >> 16;
  $23 = HEAP16[$7>>1]|0;
  $24 = $23 << 16 >> 16;
  $25 = Math_imul($24, $22)|0;
  $26 = (($25) + ($19))|0;
  $27 = ((($14)) + -4|0);
  $28 = HEAP16[$27>>1]|0;
  $29 = $28 << 16 >> 16;
  $30 = HEAP16[$8>>1]|0;
  $31 = $30 << 16 >> 16;
  $32 = Math_imul($31, $29)|0;
  $33 = (($26) + ($32))|0;
  $34 = ((($14)) + -6|0);
  $35 = HEAP16[$34>>1]|0;
  $36 = $35 << 16 >> 16;
  $37 = HEAP16[$9>>1]|0;
  $38 = $37 << 16 >> 16;
  $39 = Math_imul($38, $36)|0;
  $40 = (($33) + ($39))|0;
  $41 = ((($14)) + -8|0);
  $42 = HEAP16[$41>>1]|0;
  $43 = $42 << 16 >> 16;
  $44 = HEAP16[$10>>1]|0;
  $45 = $44 << 16 >> 16;
  $46 = Math_imul($45, $43)|0;
  $47 = (($40) + ($46))|0;
  $48 = ((($14)) + -10|0);
  $49 = HEAP16[$48>>1]|0;
  $50 = $49 << 16 >> 16;
  $51 = HEAP16[$11>>1]|0;
  $52 = $51 << 16 >> 16;
  $53 = Math_imul($52, $50)|0;
  $54 = (($47) + ($53))|0;
  $$05657$us = $54;$$058$us = 6;
  while(1) {
   $55 = (0 - ($$058$us))|0;
   $56 = (($14) + ($55<<1)|0);
   $57 = HEAP16[$56>>1]|0;
   $58 = $57 << 16 >> 16;
   $59 = (($2) + ($$058$us<<1)|0);
   $60 = HEAP16[$59>>1]|0;
   $61 = $60 << 16 >> 16;
   $62 = Math_imul($61, $58)|0;
   $63 = (($62) + ($$05657$us))|0;
   $64 = $$058$us ^ -1;
   $65 = (($14) + ($64<<1)|0);
   $66 = HEAP16[$65>>1]|0;
   $67 = $66 << 16 >> 16;
   $68 = $$058$us | 1;
   $69 = (($2) + ($68<<1)|0);
   $70 = HEAP16[$69>>1]|0;
   $71 = $70 << 16 >> 16;
   $72 = Math_imul($71, $67)|0;
   $73 = (($63) + ($72))|0;
   $74 = (($$058$us) + 2)|0;
   $75 = ($74|0)<($4|0);
   if ($75) {
    $$05657$us = $73;$$058$us = $74;
   } else {
    break;
   }
  }
  $76 = (($1) + ($$05559$us<<1)|0);
  $77 = HEAP16[$76>>1]|0;
  $78 = $77 << 16 >> 16;
  $79 = $78 << 12;
  $80 = (($79) - ($73))|0;
  $81 = $80 >> 11;
  $82 = (($81) + 1)|0;
  $83 = $82 >> 1;
  $84 = ($80|0)>(134215679);
  $85 = ($83|0)>(-32768);
  $86 = $85 ? $83 : -32768;
  $87 = $86&65535;
  $88 = $84 ? 32767 : $87;
  $89 = (($0) + ($$05559$us<<1)|0);
  HEAP16[$89>>1] = $88;
  $90 = (($$05559$us) + 1)|0;
  $exitcond = ($90|0)==($3|0);
  if ($exitcond) {
   break;
  } else {
   $$05559$us = $90;
  }
 }
 $148 = $4 << 1;
 _memset(($0|0),0,($148|0))|0;
 return;
}
function _silk_LPC_inverse_pred_gain_c($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$$i = 0, $$01417 = 0, $$015 = 0, $$0156$in184$i = 0, $$0156$in184$i$phi = 0, $$0156181$i = 0, $$0156185$i = 0, $$0157180$i = 0, $$018 = 0, $$38 = 0, $$49$i$i = 0, $$lcssa$i = 0, $$neg174$i = 0, $$off172$i = 0, $$off172182$i = 0, $$phi$trans$insert$i = 0, $$pre192$i = 0, $$sink32 = 0, $$sink33 = 0;
 var $$sink36 = 0, $$sink37 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $phitmp = 0;
 var $spec$select$i$i = 0, $spec$select161$i = 0, $spec$select162$i = 0, $spec$select164$i = 0, $spec$select167$i = 0, $spec$select168$i = 0, $spec$select170$i = 0, $spec$select51$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $2 = sp;
 $3 = ($1|0)>(0);
 if ($3) {
  $$01417 = 0;$$018 = 0;
  while(1) {
   $4 = (($0) + ($$01417<<1)|0);
   $5 = HEAP16[$4>>1]|0;
   $6 = $5 << 16 >> 16;
   $7 = (($$018) + ($6))|0;
   $8 = $6 << 12;
   $9 = (($2) + ($$01417<<2)|0);
   HEAP32[$9>>2] = $8;
   $10 = (($$01417) + 1)|0;
   $exitcond = ($10|0)==($1|0);
   if ($exitcond) {
    break;
   } else {
    $$01417 = $10;$$018 = $7;
   }
  }
  $phitmp = ($7|0)>(4095);
  if ($phitmp) {
   $$015 = 0;
   STACKTOP = sp;return ($$015|0);
  }
 }
 $$0156181$i = (($1) + -1)|0;
 $11 = ($1|0)>(1);
 $12 = (($2) + ($$0156181$i<<2)|0);
 $13 = HEAP32[$12>>2]|0;
 $$off172182$i = (($13) + 16773022)|0;
 $14 = ($$off172182$i>>>0)>(33546044);
 L8: do {
  if ($11) {
   $$0156$in184$i = $1;$$0156185$i = $$0156181$i;$16 = $13;$237 = $14;$24 = 1073741824;$25 = 0;
   L10: while(1) {
    if ($237) {
     $$015 = 0;
     label = 31;
     break;
    }
    $15 = $16 << 7;
    $17 = (0 - ($15))|0;
    $18 = ($17|0)<(0);
    $19 = $18 << 31 >> 31;
    (___muldi3(($17|0),($19|0),($17|0),($19|0))|0);
    $20 = tempRet0;
    $21 = (1073741824 - ($20))|0;
    $22 = ($21|0)<(0);
    $23 = $22 << 31 >> 31;
    $26 = (___muldi3(($24|0),($25|0),($21|0),($23|0))|0);
    $27 = tempRet0;
    $28 = (_bitshift64Lshr(($26|0),($27|0),30)|0);
    $29 = tempRet0;
    $30 = $28 & -4;
    $31 = ($30|0)<(107374);
    if ($31) {
     $$015 = 0;
     label = 31;
     break;
    }
    $32 = ($21|0)>(0);
    $33 = (0 - ($21))|0;
    $34 = $32 ? $21 : $33;
    $35 = (Math_clz32(($34|0))|0);
    $36 = (32 - ($35))|0;
    $37 = (($35) + -1)|0;
    $38 = $21 << $37;
    $39 = $38 >> 16;
    $40 = (536870911 / ($39|0))&-1;
    $41 = $40 << 16;
    $42 = $41 >> 16;
    $43 = Math_imul($42, $39)|0;
    $44 = $38 & 65535;
    $45 = Math_imul($42, $44)|0;
    $46 = $45 >> 16;
    $47 = (($46) + ($43))|0;
    $48 = $47 << 3;
    $49 = (0 - ($48))|0;
    $50 = $49 >> 16;
    $51 = Math_imul($50, $42)|0;
    $52 = $49 & 65528;
    $53 = Math_imul($52, $42)|0;
    $54 = $53 >> 16;
    $55 = $40 >> 15;
    $56 = (($55) + 1)|0;
    $57 = $56 >> 1;
    $58 = Math_imul($57, $49)|0;
    $59 = (($58) + ($41))|0;
    $60 = (($59) + ($51))|0;
    $61 = (($60) + ($54))|0;
    $62 = (62 - ($35))|0;
    $$neg174$i = (-30 - ($36))|0;
    $63 = (($$neg174$i) + ($62))|0;
    $64 = ($63|0)<(1);
    if ($64) {
     $65 = (0 - ($63))|0;
     $66 = -2147483648 >> $65;
     $67 = 2147483647 >>> $65;
     $68 = ($66|0)>($67|0);
     $$ = $68 ? $66 : $67;
     $$38 = $68 ? $67 : $66;
     $69 = ($61|0)>($$|0);
     $70 = ($61|0)<($$38|0);
     $$49$i$i = $70 ? $$38 : $61;
     $spec$select51$i$i = $69 ? $$ : $$49$i$i;
     $71 = $spec$select51$i$i << $65;
     $78 = $71;
    } else {
     $72 = ($63|0)<(32);
     $73 = $61 >> $63;
     $spec$select$i$i = $72 ? $73 : 0;
     $78 = $spec$select$i$i;
    }
    $74 = $$0156$in184$i >>> 1;
    $75 = (($$0156185$i) + -1)|0;
    $76 = ($36|0)==(1);
    $77 = ($78|0)<(0);
    $79 = $77 << 31 >> 31;
    $80 = (($36) + -1)|0;
    $$0157180$i = 0;
    while(1) {
     $81 = (($2) + ($$0157180$i<<2)|0);
     $82 = HEAP32[$81>>2]|0;
     $83 = (($75) - ($$0157180$i))|0;
     $84 = (($2) + ($83<<2)|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ($85|0)<(0);
     $87 = $86 << 31 >> 31;
     $88 = (___muldi3(($85|0),($87|0),($17|0),($19|0))|0);
     $89 = tempRet0;
     $90 = (_bitshift64Lshr(($88|0),($89|0),30)|0);
     $91 = tempRet0;
     $92 = (_i64Add(($90|0),($91|0),1,0)|0);
     $93 = tempRet0;
     $94 = (_bitshift64Lshr(($92|0),($93|0),1)|0);
     $95 = tempRet0;
     $96 = (($82) - ($94))|0;
     $97 = ($96|0)>(-1);
     if ($76) {
      if ($97) {
       $98 = $94 ^ -2147483648;
       $99 = $98 & $82;
       $100 = ($99|0)<(0);
       $101 = ($96|0)<(0);
       $102 = $101 << 31 >> 31;
       $103 = $100 ? -2147483648 : $96;
       $104 = $100 ? -1 : $102;
       $spec$select161$i = $100 ? -2147483648 : $96;
       $112 = $103;$113 = $104;$119 = $spec$select161$i;
      } else {
       $105 = $82 ^ -2147483648;
       $106 = $105 & $94;
       $107 = ($106|0)<(0);
       $108 = ($96|0)<(0);
       $109 = $108 << 31 >> 31;
       $110 = $107 ? 2147483647 : $96;
       $111 = $107 ? 0 : $109;
       $spec$select162$i = $107 ? 2147483647 : $96;
       $112 = $110;$113 = $111;$119 = $spec$select162$i;
      }
      $114 = (___muldi3(($112|0),($113|0),($78|0),($79|0))|0);
      $115 = tempRet0;
      $116 = (_bitshift64Ashr(($114|0),($115|0),1)|0);
      $117 = tempRet0;
      $118 = ($119|0)<(0);
      $120 = $118 << 31 >> 31;
      $121 = (___muldi3(($119|0),($120|0),($78|0),($79|0))|0);
      $122 = tempRet0;
      $123 = $121 & 1;
      $124 = (_i64Add(($123|0),0,($116|0),($117|0))|0);
      $125 = tempRet0;
      $141 = $124;$142 = $125;
     } else {
      $$sink33 = $97 ? $94 : $82;
      $$sink32 = $97 ? $82 : $94;
      $126 = $96 >> 31;
      $127 = $126 ^ -2147483648;
      $128 = $$sink33 ^ -2147483648;
      $129 = $128 & $$sink32;
      $130 = ($129|0)<(0);
      $spec$select164$i = $130 ? $127 : $96;
      $131 = ($spec$select164$i|0)<(0);
      $132 = $131 << 31 >> 31;
      $133 = (___muldi3(($spec$select164$i|0),($132|0),($78|0),($79|0))|0);
      $134 = tempRet0;
      $135 = (_bitshift64Ashr(($133|0),($134|0),($80|0))|0);
      $136 = tempRet0;
      $137 = (_i64Add(($135|0),($136|0),1,0)|0);
      $138 = tempRet0;
      $139 = (_bitshift64Ashr(($137|0),($138|0),1)|0);
      $140 = tempRet0;
      $141 = $139;$142 = $140;
     }
     $143 = (_i64Add(($141|0),($142|0),-2147483648,0)|0);
     $144 = tempRet0;
     $145 = ($144>>>0)>(0);
     $146 = ($143>>>0)>(4294967295);
     $147 = ($144|0)==(0);
     $148 = $147 & $146;
     $149 = $145 | $148;
     if ($149) {
      $$015 = 0;
      label = 31;
      break L10;
     }
     HEAP32[$81>>2] = $141;
     $150 = ($82|0)<(0);
     $151 = $150 << 31 >> 31;
     $152 = (___muldi3(($82|0),($151|0),($17|0),($19|0))|0);
     $153 = tempRet0;
     $154 = (_bitshift64Lshr(($152|0),($153|0),30)|0);
     $155 = tempRet0;
     $156 = (_i64Add(($154|0),($155|0),1,0)|0);
     $157 = tempRet0;
     $158 = (_bitshift64Lshr(($156|0),($157|0),1)|0);
     $159 = tempRet0;
     $160 = (($85) - ($158))|0;
     $161 = ($160|0)>(-1);
     if ($76) {
      if ($161) {
       $162 = $158 ^ -2147483648;
       $163 = $162 & $85;
       $164 = ($163|0)<(0);
       $165 = ($160|0)<(0);
       $166 = $165 << 31 >> 31;
       $167 = $164 ? -2147483648 : $160;
       $168 = $164 ? -1 : $166;
       $spec$select167$i = $164 ? -2147483648 : $160;
       $176 = $167;$177 = $168;$183 = $spec$select167$i;
      } else {
       $169 = $85 ^ -2147483648;
       $170 = $169 & $158;
       $171 = ($170|0)<(0);
       $172 = ($160|0)<(0);
       $173 = $172 << 31 >> 31;
       $174 = $171 ? 2147483647 : $160;
       $175 = $171 ? 0 : $173;
       $spec$select168$i = $171 ? 2147483647 : $160;
       $176 = $174;$177 = $175;$183 = $spec$select168$i;
      }
      $178 = (___muldi3(($176|0),($177|0),($78|0),($79|0))|0);
      $179 = tempRet0;
      $180 = (_bitshift64Ashr(($178|0),($179|0),1)|0);
      $181 = tempRet0;
      $182 = ($183|0)<(0);
      $184 = $182 << 31 >> 31;
      $185 = (___muldi3(($183|0),($184|0),($78|0),($79|0))|0);
      $186 = tempRet0;
      $187 = $185 & 1;
      $188 = (_i64Add(($187|0),0,($180|0),($181|0))|0);
      $189 = tempRet0;
      $205 = $188;$206 = $189;
     } else {
      $$sink37 = $161 ? $158 : $85;
      $$sink36 = $161 ? $85 : $158;
      $190 = $160 >> 31;
      $191 = $190 ^ -2147483648;
      $192 = $$sink37 ^ -2147483648;
      $193 = $192 & $$sink36;
      $194 = ($193|0)<(0);
      $spec$select170$i = $194 ? $191 : $160;
      $195 = ($spec$select170$i|0)<(0);
      $196 = $195 << 31 >> 31;
      $197 = (___muldi3(($spec$select170$i|0),($196|0),($78|0),($79|0))|0);
      $198 = tempRet0;
      $199 = (_bitshift64Ashr(($197|0),($198|0),($80|0))|0);
      $200 = tempRet0;
      $201 = (_i64Add(($199|0),($200|0),1,0)|0);
      $202 = tempRet0;
      $203 = (_bitshift64Ashr(($201|0),($202|0),1)|0);
      $204 = tempRet0;
      $205 = $203;$206 = $204;
     }
     $207 = (_i64Add(($205|0),($206|0),-2147483648,0)|0);
     $208 = tempRet0;
     $209 = ($208>>>0)>(0);
     $210 = ($207>>>0)>(4294967295);
     $211 = ($208|0)==(0);
     $212 = $211 & $210;
     $213 = $209 | $212;
     if ($213) {
      $$015 = 0;
      label = 31;
      break L10;
     }
     HEAP32[$84>>2] = $205;
     $214 = (($$0157180$i) + 1)|0;
     $215 = ($214>>>0)<($74>>>0);
     if ($215) {
      $$0157180$i = $214;
     } else {
      break;
     }
    }
    $$phi$trans$insert$i = (($2) + ($75<<2)|0);
    $$pre192$i = HEAP32[$$phi$trans$insert$i>>2]|0;
    $216 = ($30|0)<(0);
    $217 = $216 << 31 >> 31;
    $218 = ($$0156185$i|0)>(1);
    $$off172$i = (($$pre192$i) + 16773022)|0;
    $219 = ($$off172$i>>>0)>(33546044);
    if ($218) {
     $$0156$in184$i$phi = $$0156185$i;$$0156185$i = $75;$16 = $$pre192$i;$237 = $219;$24 = $30;$25 = $217;$$0156$in184$i = $$0156$in184$i$phi;
    } else {
     $$lcssa$i = $219;$229 = $30;$230 = $217;
     break L8;
    }
   }
   if ((label|0) == 31) {
    STACKTOP = sp;return ($$015|0);
   }
  } else {
   $$lcssa$i = $14;$229 = 1073741824;$230 = 0;
  }
 } while(0);
 if ($$lcssa$i) {
  $$015 = 0;
  STACKTOP = sp;return ($$015|0);
 }
 $220 = HEAP32[$2>>2]|0;
 $221 = $220 << 7;
 $222 = (0 - ($221))|0;
 $223 = ($222|0)<(0);
 $224 = $223 << 31 >> 31;
 (___muldi3(($222|0),($224|0),($222|0),($224|0))|0);
 $225 = tempRet0;
 $226 = (1073741824 - ($225))|0;
 $227 = ($226|0)<(0);
 $228 = $227 << 31 >> 31;
 $231 = (___muldi3(($229|0),($230|0),($226|0),($228|0))|0);
 $232 = tempRet0;
 $233 = (_bitshift64Lshr(($231|0),($232|0),30)|0);
 $234 = tempRet0;
 $235 = $233 & -4;
 $236 = ($235|0)<(107374);
 $$$i = $236 ? 0 : $235;
 $$015 = $$$i;
 STACKTOP = sp;return ($$015|0);
}
function _silk_NLSF2A($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$033$i = 0, $$033$i69 = 0, $$06783 = 0, $$06783$us = 0, $$090 = 0, $$187 = 0, $$282$us = 0, $$in = 0, $$in103 = 0, $$pre = 0, $$pre$i = 0, $$pre$i76 = 0, $$pre37$i = 0, $$pre37$i77 = 0, $$pre39$i = 0, $$pre39$i72 = 0, $$pre96 = 0, $$pre97 = 0, $$pre98 = 0, $$pre99 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i74 = 0, $exitcond95 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $4 = sp + 224|0;
 $5 = sp + 160|0;
 $6 = sp + 96|0;
 $7 = sp;
 $8 = ($2|0)==(16);
 $9 = $8 ? 31952 : 37921;
 $10 = ($2|0)>(0);
 L1: do {
  if ($10) {
   $$090 = 0;
   while(1) {
    $12 = (($1) + ($$090<<1)|0);
    $13 = HEAP16[$12>>1]|0;
    $14 = $13 << 16 >> 16;
    $15 = $14 >> 8;
    $16 = $14 & 255;
    $17 = (31680 + ($15<<1)|0);
    $18 = HEAP16[$17>>1]|0;
    $19 = $18 << 16 >> 16;
    $20 = (($15) + 1)|0;
    $21 = (31680 + ($20<<1)|0);
    $22 = HEAP16[$21>>1]|0;
    $23 = $22 << 16 >> 16;
    $24 = (($23) - ($19))|0;
    $25 = $19 << 8;
    $26 = Math_imul($24, $16)|0;
    $27 = (($26) + ($25))|0;
    $28 = $27 >> 3;
    $29 = (($28) + 1)|0;
    $30 = $29 >> 1;
    $31 = (($9) + ($$090)|0);
    $32 = HEAP8[$31>>0]|0;
    $33 = $32&255;
    $34 = (($4) + ($33<<2)|0);
    HEAP32[$34>>2] = $30;
    $35 = (($$090) + 1)|0;
    $exitcond95 = ($35|0)==($2|0);
    if ($exitcond95) {
     break;
    } else {
     $$090 = $35;
    }
   }
   $$pre = HEAP32[$4>>2]|0;
   $phitmp = (0 - ($$pre))|0;
   $36 = $2 >> 1;
   HEAP32[$5>>2] = 65536;
   $37 = ((($5)) + 4|0);
   HEAP32[$37>>2] = $phitmp;
   $38 = ($2|0)>(3);
   if ($38) {
    $$033$i = 1;$212 = $phitmp;$43 = 65536;$48 = $phitmp;
    while(1) {
     $39 = $$033$i << 1;
     $40 = (($4) + ($39<<2)|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = $43 << 1;
     $44 = ($41|0)<(0);
     $45 = $44 << 31 >> 31;
     $46 = (($5) + ($$033$i<<2)|0);
     $47 = ($48|0)<(0);
     $49 = $47 << 31 >> 31;
     $50 = (___muldi3(($41|0),($45|0),($48|0),($49|0))|0);
     $51 = tempRet0;
     $52 = (_bitshift64Lshr(($50|0),($51|0),15)|0);
     $53 = tempRet0;
     $54 = (_i64Add(($52|0),($53|0),1,0)|0);
     $55 = tempRet0;
     $56 = (_bitshift64Lshr(($54|0),($55|0),1)|0);
     $57 = tempRet0;
     $58 = (($42) - ($56))|0;
     $59 = (($$033$i) + 1)|0;
     $60 = (($5) + ($59<<2)|0);
     HEAP32[$60>>2] = $58;
     $61 = ($$033$i>>>0)>(1);
     if ($61) {
      $62 = (($$033$i) + -2)|0;
      $63 = (($5) + ($62<<2)|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($43|0)<(0);
      $66 = $65 << 31 >> 31;
      $67 = (___muldi3(($43|0),($66|0),($41|0),($45|0))|0);
      $68 = tempRet0;
      $69 = (_bitshift64Lshr(($67|0),($68|0),15)|0);
      $70 = tempRet0;
      $71 = (_i64Add(($69|0),($70|0),1,0)|0);
      $72 = tempRet0;
      $73 = (_bitshift64Lshr(($71|0),($72|0),1)|0);
      $74 = tempRet0;
      $75 = (($5) + ($$033$i<<2)|0);
      $76 = (($64) + ($48))|0;
      $77 = (($76) - ($73))|0;
      HEAP32[$75>>2] = $77;
      $78 = ($$033$i|0)==(2);
      if (!($78)) {
       $$in103 = $$033$i;$85 = $64;
       while(1) {
        $79 = (($$in103) + -1)|0;
        $80 = (($5) + ($79<<2)|0);
        $$pre39$i = HEAP32[$80>>2]|0;
        $81 = (($$in103) + -3)|0;
        $82 = (($5) + ($81<<2)|0);
        $83 = HEAP32[$82>>2]|0;
        $84 = ($85|0)<(0);
        $86 = $84 << 31 >> 31;
        $87 = (___muldi3(($85|0),($86|0),($41|0),($45|0))|0);
        $88 = tempRet0;
        $89 = (_bitshift64Lshr(($87|0),($88|0),15)|0);
        $90 = tempRet0;
        $91 = (_i64Add(($89|0),($90|0),1,0)|0);
        $92 = tempRet0;
        $93 = (_bitshift64Lshr(($91|0),($92|0),1)|0);
        $94 = tempRet0;
        $95 = (($5) + ($79<<2)|0);
        $96 = (($83) + ($$pre39$i))|0;
        $97 = (($96) - ($93))|0;
        HEAP32[$95>>2] = $97;
        $98 = ($$in103|0)>(3);
        if ($98) {
         $$in103 = $79;$85 = $83;
        } else {
         break;
        }
       }
      }
      $$pre96 = HEAP32[$37>>2]|0;
      $100 = $$pre96;
     } else {
      $100 = $212;
     }
     $99 = (($100) - ($41))|0;
     HEAP32[$37>>2] = $99;
     $exitcond$i = ($59|0)==($36|0);
     if ($exitcond$i) {
      $167 = $36;$170 = $5;$211 = $38;
      break L1;
     }
     $$pre$i = HEAP32[$46>>2]|0;
     $$pre37$i = HEAP32[$60>>2]|0;
     $$033$i = $59;$212 = $99;$43 = $$pre$i;$48 = $$pre37$i;
    }
   } else {
    $167 = $36;$170 = $5;$211 = 0;
   }
  } else {
   $11 = $2 >> 1;
   HEAP32[$5>>2] = 65536;
   $167 = $11;$170 = $5;$211 = 0;
  }
 } while(0);
 $101 = ((($4)) + 4|0);
 HEAP32[$6>>2] = 65536;
 $102 = HEAP32[$101>>2]|0;
 $103 = (0 - ($102))|0;
 $104 = ((($6)) + 4|0);
 HEAP32[$104>>2] = $103;
 L20: do {
  if ($211) {
   $$033$i69 = 1;$109 = 65536;$114 = $103;$213 = $103;
   while(1) {
    $105 = $$033$i69 << 1;
    $106 = (($101) + ($105<<2)|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = $109 << 1;
    $110 = ($107|0)<(0);
    $111 = $110 << 31 >> 31;
    $112 = (($6) + ($$033$i69<<2)|0);
    $113 = ($114|0)<(0);
    $115 = $113 << 31 >> 31;
    $116 = (___muldi3(($107|0),($111|0),($114|0),($115|0))|0);
    $117 = tempRet0;
    $118 = (_bitshift64Lshr(($116|0),($117|0),15)|0);
    $119 = tempRet0;
    $120 = (_i64Add(($118|0),($119|0),1,0)|0);
    $121 = tempRet0;
    $122 = (_bitshift64Lshr(($120|0),($121|0),1)|0);
    $123 = tempRet0;
    $124 = (($108) - ($122))|0;
    $125 = (($$033$i69) + 1)|0;
    $126 = (($6) + ($125<<2)|0);
    HEAP32[$126>>2] = $124;
    $127 = ($$033$i69>>>0)>(1);
    if ($127) {
     $128 = (($$033$i69) + -2)|0;
     $129 = (($6) + ($128<<2)|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($109|0)<(0);
     $132 = $131 << 31 >> 31;
     $133 = (___muldi3(($109|0),($132|0),($107|0),($111|0))|0);
     $134 = tempRet0;
     $135 = (_bitshift64Lshr(($133|0),($134|0),15)|0);
     $136 = tempRet0;
     $137 = (_i64Add(($135|0),($136|0),1,0)|0);
     $138 = tempRet0;
     $139 = (_bitshift64Lshr(($137|0),($138|0),1)|0);
     $140 = tempRet0;
     $141 = (($6) + ($$033$i69<<2)|0);
     $142 = (($130) + ($114))|0;
     $143 = (($142) - ($139))|0;
     HEAP32[$141>>2] = $143;
     $144 = ($$033$i69|0)==(2);
     if (!($144)) {
      $$in = $$033$i69;$151 = $130;
      while(1) {
       $145 = (($$in) + -1)|0;
       $146 = (($6) + ($145<<2)|0);
       $$pre39$i72 = HEAP32[$146>>2]|0;
       $147 = (($$in) + -3)|0;
       $148 = (($6) + ($147<<2)|0);
       $149 = HEAP32[$148>>2]|0;
       $150 = ($151|0)<(0);
       $152 = $150 << 31 >> 31;
       $153 = (___muldi3(($151|0),($152|0),($107|0),($111|0))|0);
       $154 = tempRet0;
       $155 = (_bitshift64Lshr(($153|0),($154|0),15)|0);
       $156 = tempRet0;
       $157 = (_i64Add(($155|0),($156|0),1,0)|0);
       $158 = tempRet0;
       $159 = (_bitshift64Lshr(($157|0),($158|0),1)|0);
       $160 = tempRet0;
       $161 = (($6) + ($145<<2)|0);
       $162 = (($149) + ($$pre39$i72))|0;
       $163 = (($162) - ($159))|0;
       HEAP32[$161>>2] = $163;
       $164 = ($$in|0)>(3);
       if ($164) {
        $$in = $145;$151 = $149;
       } else {
        break;
       }
      }
     }
     $$pre97 = HEAP32[$104>>2]|0;
     $166 = $$pre97;
    } else {
     $166 = $213;
    }
    $165 = (($166) - ($107))|0;
    HEAP32[$104>>2] = $165;
    $exitcond$i74 = ($125|0)==($167|0);
    if ($exitcond$i74) {
     break L20;
    }
    $$pre$i76 = HEAP32[$112>>2]|0;
    $$pre37$i77 = HEAP32[$126>>2]|0;
    $$033$i69 = $125;$109 = $$pre$i76;$114 = $$pre37$i77;$213 = $165;
   }
  }
 } while(0);
 $168 = ($2|0)>(1);
 if ($168) {
  $169 = (($2) + -1)|0;
  $$pre98 = HEAP32[$170>>2]|0;
  $$pre99 = HEAP32[$6>>2]|0;
  $$187 = 0;$175 = $$pre98;$179 = $$pre99;
  while(1) {
   $171 = (($$187) + 1)|0;
   $172 = (($5) + ($171<<2)|0);
   $173 = HEAP32[$172>>2]|0;
   $174 = (($175) + ($173))|0;
   $176 = (($6) + ($171<<2)|0);
   $177 = HEAP32[$176>>2]|0;
   $178 = (($177) - ($179))|0;
   $180 = (($178) + ($174))|0;
   $181 = (0 - ($180))|0;
   $182 = (($7) + ($$187<<2)|0);
   HEAP32[$182>>2] = $181;
   $183 = (($178) - ($174))|0;
   $184 = (($169) - ($$187))|0;
   $185 = (($7) + ($184<<2)|0);
   HEAP32[$185>>2] = $183;
   $186 = ($171|0)<($167|0);
   if ($186) {
    $$187 = $171;$175 = $173;$179 = $177;
   } else {
    break;
   }
  }
 }
 _silk_LPC_fit($0,$7,12,17,$2);
 $187 = (_silk_LPC_inverse_pred_gain_c($0,$2)|0);
 $188 = ($187|0)==(0);
 if (!($188)) {
  STACKTOP = sp;return;
 }
 if (!($10)) {
  $$06783 = 0;
  while(1) {
   $204 = 2 << $$06783;
   $205 = (65536 - ($204))|0;
   _silk_bwexpander_32($7,$2,$205);
   $206 = (($$06783) + 1)|0;
   $207 = (_silk_LPC_inverse_pred_gain_c($0,$2)|0);
   $208 = ($207|0)==(0);
   $209 = ($206>>>0)<(16);
   $210 = $209 & $208;
   if ($210) {
    $$06783 = $206;
   } else {
    break;
   }
  }
  STACKTOP = sp;return;
 }
 $$06783$us = 0;
 while(1) {
  $189 = 2 << $$06783$us;
  $190 = (65536 - ($189))|0;
  _silk_bwexpander_32($7,$2,$190);
  $$282$us = 0;
  while(1) {
   $191 = (($7) + ($$282$us<<2)|0);
   $192 = HEAP32[$191>>2]|0;
   $193 = $192 >>> 4;
   $194 = (($193) + 1)|0;
   $195 = $194 >>> 1;
   $196 = $195&65535;
   $197 = (($0) + ($$282$us<<1)|0);
   HEAP16[$197>>1] = $196;
   $198 = (($$282$us) + 1)|0;
   $exitcond = ($198|0)==($2|0);
   if ($exitcond) {
    break;
   } else {
    $$282$us = $198;
   }
  }
  $199 = (($$06783$us) + 1)|0;
  $200 = (_silk_LPC_inverse_pred_gain_c($0,$2)|0);
  $201 = ($200|0)==(0);
  $202 = ($199>>>0)<(16);
  $203 = $202 & $201;
  if ($203) {
   $$06783$us = $199;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _silk_NLSF_stabilize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0$lcssa = 0, $$0169$lcssa = 0, $$0170$lcssa = 0, $$0170201 = 0, $$0171200 = 0, $$0174218 = 0, $$0177$lcssa = 0, $$0177199 = 0, $$1172197 = 0, $$185 = 0, $$2173196 = 0, $$242 = 0, $$neg190 = 0, $$neg193 = 0, $$phi$trans$insert = 0, $$phi$trans$insert226 = 0, $$pre = 0, $$pre227 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond222 = 0, $exitcond223 = 0, $exitcond223235 = 0, $sext = 0, $sext228 = 0, $spec$select = 0, $spec$select182 = 0, $spec$select183 = 0, $spec$select184 = 0, $spec$select186 = 0, $spec$select188 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)>(1);
 $4 = (($2) + -1)|0;
 $5 = (($0) + ($4<<1)|0);
 $6 = (($1) + ($2<<1)|0);
 $7 = (($2) + -1)|0;
 $$0174218 = 0;
 while(1) {
  $8 = HEAP16[$0>>1]|0;
  $9 = $8 << 16 >> 16;
  $10 = HEAP16[$1>>1]|0;
  $11 = $10 << 16 >> 16;
  $12 = (($9) - ($11))|0;
  if ($3) {
   $$0170201 = $12;$$0171200 = 1;$$0177199 = 0;$17 = $8;
   while(1) {
    $13 = (($0) + ($$0171200<<1)|0);
    $14 = HEAP16[$13>>1]|0;
    $15 = $14 << 16 >> 16;
    $16 = $17 << 16 >> 16;
    $18 = (($1) + ($$0171200<<1)|0);
    $19 = HEAP16[$18>>1]|0;
    $20 = $19 << 16 >> 16;
    $$neg193 = (($15) - ($16))|0;
    $21 = (($$neg193) - ($20))|0;
    $22 = ($21|0)<($$0170201|0);
    $spec$select = $22 ? $$0171200 : $$0177199;
    $spec$select182 = $22 ? $21 : $$0170201;
    $23 = (($$0171200) + 1)|0;
    $exitcond222 = ($23|0)==($2|0);
    if ($exitcond222) {
     $$0170$lcssa = $spec$select182;$$0177$lcssa = $spec$select;
     break;
    } else {
     $$0170201 = $spec$select182;$$0171200 = $23;$$0177199 = $spec$select;$17 = $14;
    }
   }
  } else {
   $$0170$lcssa = $12;$$0177$lcssa = 0;
  }
  $24 = HEAP16[$5>>1]|0;
  $25 = $24 << 16 >> 16;
  $26 = HEAP16[$6>>1]|0;
  $27 = $26 << 16 >> 16;
  $$neg190 = (32768 - ($25))|0;
  $28 = (($$neg190) - ($27))|0;
  $29 = ($28|0)<($$0170$lcssa|0);
  $spec$select183 = $29 ? $2 : $$0177$lcssa;
  $spec$select184 = $29 ? $28 : $$0170$lcssa;
  $30 = ($spec$select184|0)>(-1);
  if ($30) {
   label = 27;
   break;
  }
  $31 = ($spec$select183|0)==(0);
  do {
   if ($31) {
    HEAP16[$0>>1] = $10;
   } else {
    $32 = ($spec$select183|0)==($2|0);
    if ($32) {
     $33 = $26&65535;
     $34 = (32768 - ($33))|0;
     $35 = $34&65535;
     HEAP16[$5>>1] = $35;
     break;
    }
    $36 = ($spec$select183|0)>(0);
    if ($36) {
     $37 = $10 << 16 >> 16;
     $exitcond223235 = ($spec$select183|0)==(1);
     if ($exitcond223235) {
      $$0169$lcssa = $37;
     } else {
      $38 = 1;$41 = $37;
      while(1) {
       $$phi$trans$insert = (($1) + ($38<<1)|0);
       $$pre = HEAP16[$$phi$trans$insert>>1]|0;
       $39 = $$pre << 16 >> 16;
       $40 = (($41) + ($39))|0;
       $42 = (($38) + 1)|0;
       $exitcond223 = ($42|0)==($spec$select183|0);
       if ($exitcond223) {
        $$0169$lcssa = $40;
        break;
       } else {
        $38 = $42;$41 = $40;
       }
      }
     }
    } else {
     $$0169$lcssa = 0;
    }
    $43 = (($1) + ($spec$select183<<1)|0);
    $44 = HEAP16[$43>>1]|0;
    $45 = $44 << 16 >> 16;
    $46 = $45 >> 1;
    $47 = (($46) + ($$0169$lcssa))|0;
    $48 = ($spec$select183|0)<($2|0);
    if ($48) {
     $49 = $26 << 16 >> 16;
     $50 = (32768 - ($49))|0;
     $51 = ($7|0)>($spec$select183|0);
     if ($51) {
      $52 = $7;$55 = $50;
      while(1) {
       $$phi$trans$insert226 = (($1) + ($52<<1)|0);
       $$pre227 = HEAP16[$$phi$trans$insert226>>1]|0;
       $53 = $$pre227 << 16 >> 16;
       $54 = (($55) - ($53))|0;
       $56 = (($52) + -1)|0;
       $57 = ($56|0)>($spec$select183|0);
       if ($57) {
        $52 = $56;$55 = $54;
       } else {
        $$0$lcssa = $54;
        break;
       }
      }
     } else {
      $$0$lcssa = $50;
     }
    } else {
     $$0$lcssa = 32768;
    }
    $58 = (($$0$lcssa) - ($46))|0;
    $59 = ($47|0)>($58|0);
    $60 = (($spec$select183) + -1)|0;
    $61 = (($0) + ($60<<1)|0);
    $62 = HEAP16[$61>>1]|0;
    $63 = $62 << 16 >> 16;
    $64 = (($0) + ($spec$select183<<1)|0);
    $65 = HEAP16[$64>>1]|0;
    $66 = $65 << 16 >> 16;
    $67 = (($66) + ($63))|0;
    $68 = $67 >> 1;
    $69 = $67 & 1;
    $70 = (($68) + ($69))|0;
    $$ = $59 ? $47 : $58;
    $$242 = $59 ? $58 : $47;
    $71 = ($70|0)>($$|0);
    $72 = ($70|0)<($$242|0);
    $$185 = $72 ? $$242 : $70;
    $spec$select188 = $71 ? $$ : $$185;
    $73 = (($spec$select188) - ($46))|0;
    $74 = $73&65535;
    HEAP16[$61>>1] = $74;
    $75 = HEAP16[$43>>1]|0;
    $76 = $75&65535;
    $77 = (($73) + ($76))|0;
    $78 = $77&65535;
    HEAP16[$64>>1] = $78;
   }
  } while(0);
  $79 = (($$0174218) + 1)|0;
  $80 = ($79>>>0)<(20);
  if ($80) {
   $$0174218 = $79;
  } else {
   break;
  }
 }
 if ((label|0) == 27) {
  return;
 }
 $81 = ($79|0)==(20);
 if (!($81)) {
  return;
 }
 _silk_insertion_sort_increasing_all_values_int16($0,$2);
 $82 = HEAP16[$0>>1]|0;
 $83 = $82 << 16 >> 16;
 $84 = HEAP16[$1>>1]|0;
 $85 = $84 << 16 >> 16;
 $86 = ($83|0)>($85|0);
 $87 = $86 ? $83 : $85;
 $88 = $87&65535;
 HEAP16[$0>>1] = $88;
 if ($3) {
  $$1172197 = 1;$96 = $87;
  while(1) {
   $89 = (($0) + ($$1172197<<1)|0);
   $90 = HEAP16[$89>>1]|0;
   $91 = $90 << 16 >> 16;
   $92 = (($1) + ($$1172197<<1)|0);
   $93 = HEAP16[$92>>1]|0;
   $94 = $93 << 16 >> 16;
   $95 = (($96) + ($94))|0;
   $97 = ($95|0)>(-32768);
   $spec$select186 = $97 ? $95 : -32768;
   $98 = ($spec$select186|0)<(32767);
   $99 = $98 ? $spec$select186 : 32767;
   $sext = $99 << 16;
   $100 = $sext >> 16;
   $101 = ($100|0)<($91|0);
   $102 = $101 ? $91 : $100;
   $103 = $102&65535;
   HEAP16[$89>>1] = $103;
   $104 = (($$1172197) + 1)|0;
   $exitcond = ($104|0)==($2|0);
   if ($exitcond) {
    break;
   } else {
    $$1172197 = $104;$96 = $102;
   }
  }
 }
 $105 = HEAP16[$5>>1]|0;
 $106 = $105 << 16 >> 16;
 $107 = HEAP16[$6>>1]|0;
 $108 = $107 << 16 >> 16;
 $109 = (32768 - ($108))|0;
 $110 = ($109|0)>($106|0);
 $111 = $110 ? $106 : $109;
 $112 = $111&65535;
 HEAP16[$5>>1] = $112;
 if (!($3)) {
  return;
 }
 $113 = (($2) + -2)|0;
 $$2173196 = $113;$118 = $111;
 while(1) {
  $114 = (($0) + ($$2173196<<1)|0);
  $115 = HEAP16[$114>>1]|0;
  $116 = $115 << 16 >> 16;
  $117 = (($$2173196) + 1)|0;
  $sext228 = $118 << 16;
  $119 = $sext228 >> 16;
  $120 = (($1) + ($117<<1)|0);
  $121 = HEAP16[$120>>1]|0;
  $122 = $121 << 16 >> 16;
  $123 = (($119) - ($122))|0;
  $124 = ($123|0)>($116|0);
  $125 = $124 ? $116 : $123;
  $126 = $125&65535;
  HEAP16[$114>>1] = $126;
  $127 = (($$2173196) + -1)|0;
  $128 = ($$2173196|0)>(0);
  if ($128) {
   $$2173196 = $127;$118 = $125;
  } else {
   break;
  }
 }
 return;
}
function _silk_NLSF_VQ_weights_laroia($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$03940 = 0, $$041 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP16[$1>>1]|0;
 $4 = $3 << 16 >> 16;
 $5 = ($4|0)>(1);
 $6 = $5 ? $4 : 1;
 $7 = (131072 / ($6>>>0))&-1;
 $8 = ((($1)) + 2|0);
 $9 = HEAP16[$8>>1]|0;
 $10 = $9 << 16 >> 16;
 $11 = (($10) - ($4))|0;
 $12 = ($11|0)>(1);
 $13 = $12 ? $11 : 1;
 $14 = (131072 / ($13>>>0))&-1;
 $15 = (($14) + ($7))|0;
 $16 = ($15>>>0)<(32767);
 $17 = $16 ? $15 : 32767;
 $18 = $17&65535;
 HEAP16[$0>>1] = $18;
 $19 = (($2) + -1)|0;
 $20 = ($2|0)>(2);
 if ($20) {
  $$03940 = 1;$$041 = $14;
  while(1) {
   $21 = (($$03940) + 1)|0;
   $22 = (($1) + ($21<<1)|0);
   $23 = HEAP16[$22>>1]|0;
   $24 = $23 << 16 >> 16;
   $25 = (($1) + ($$03940<<1)|0);
   $26 = HEAP16[$25>>1]|0;
   $27 = $26 << 16 >> 16;
   $28 = (($24) - ($27))|0;
   $29 = ($28|0)>(1);
   $30 = $29 ? $28 : 1;
   $31 = (131072 / ($30>>>0))&-1;
   $32 = (($31) + ($$041))|0;
   $33 = ($32>>>0)<(32767);
   $34 = $33 ? $32 : 32767;
   $35 = $34&65535;
   $36 = (($0) + ($$03940<<1)|0);
   HEAP16[$36>>1] = $35;
   $37 = (($$03940) + 2)|0;
   $38 = (($1) + ($37<<1)|0);
   $39 = HEAP16[$38>>1]|0;
   $40 = $39 << 16 >> 16;
   $41 = HEAP16[$22>>1]|0;
   $42 = $41 << 16 >> 16;
   $43 = (($40) - ($42))|0;
   $44 = ($43|0)>(1);
   $45 = $44 ? $43 : 1;
   $46 = (131072 / ($45>>>0))&-1;
   $47 = (($46) + ($31))|0;
   $48 = ($47>>>0)<(32767);
   $49 = $48 ? $47 : 32767;
   $50 = $49&65535;
   $51 = (($0) + ($21<<1)|0);
   HEAP16[$51>>1] = $50;
   $52 = ($37|0)<($19|0);
   if ($52) {
    $$03940 = $37;$$041 = $46;
   } else {
    $$0$lcssa = $46;
    break;
   }
  }
 } else {
  $$0$lcssa = $14;
 }
 $53 = (($1) + ($19<<1)|0);
 $54 = HEAP16[$53>>1]|0;
 $55 = $54 << 16 >> 16;
 $56 = (32768 - ($55))|0;
 $57 = ($56|0)>(1);
 $58 = $57 ? $56 : 1;
 $59 = (131072 / ($58>>>0))&-1;
 $60 = (($59) + ($$0$lcssa))|0;
 $61 = ($60>>>0)<(32767);
 $62 = $61 ? $60 : 32767;
 $63 = $62&65535;
 $64 = (($0) + ($19<<1)|0);
 HEAP16[$64>>1] = $63;
 return;
}
function _silk_resampler_down2_3($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$05460 = 0, $$055 = 0, $$056 = 0, $$057 = 0, $$061 = 0, $$1$lcssa = 0, $$159 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1936|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1936|0);
 $4 = sp;
 ;HEAP32[$4>>2]=HEAP32[$0>>2]|0;HEAP32[$4+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$4+12>>2]=HEAP32[$0+12>>2]|0;
 $5 = ((($0)) + 16|0);
 $6 = ((($4)) + 16|0);
 $7 = HEAP16[(37374)>>1]|0;
 $8 = $7 << 16 >> 16;
 $9 = HEAP16[(37376)>>1]|0;
 $10 = $9 << 16 >> 16;
 $11 = HEAP16[(37380)>>1]|0;
 $12 = $11 << 16 >> 16;
 $13 = HEAP16[(37378)>>1]|0;
 $14 = $13 << 16 >> 16;
 $$055 = $1;$$056 = $3;$$057 = $2;
 while(1) {
  $15 = ($$056|0)<(480);
  $16 = $15 ? $$056 : 480;
  _silk_resampler_private_AR2($5,$6,$$057,37370,$16);
  $17 = ($16|0)>(2);
  if ($17) {
   $$pre = HEAP32[$4>>2]|0;
   $$05460 = $16;$$061 = $4;$$159 = $$055;$19 = $$pre;
   while(1) {
    $18 = $19 >> 16;
    $20 = Math_imul($18, $8)|0;
    $21 = $19 & 65535;
    $22 = Math_imul($21, $8)|0;
    $23 = $22 >> 16;
    $24 = ((($$061)) + 4|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = $25 >> 16;
    $27 = Math_imul($26, $10)|0;
    $28 = $25 & 65535;
    $29 = Math_imul($28, $10)|0;
    $30 = $29 >> 16;
    $31 = ((($$061)) + 8|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 >> 16;
    $34 = Math_imul($33, $12)|0;
    $35 = $32 & 65535;
    $36 = Math_imul($35, $12)|0;
    $37 = $36 >> 16;
    $38 = (($37) + ($34))|0;
    $39 = ((($$061)) + 12|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = $40 >> 16;
    $42 = Math_imul($41, $14)|0;
    $43 = $40 & 65535;
    $44 = Math_imul($43, $14)|0;
    $45 = $44 >> 16;
    $46 = (($23) + ($20))|0;
    $47 = (($46) + ($27))|0;
    $48 = (($47) + ($30))|0;
    $49 = (($48) + ($38))|0;
    $50 = (($49) + ($42))|0;
    $51 = (($50) + ($45))|0;
    $52 = $51 >>> 5;
    $53 = (($52) + 1)|0;
    $54 = $53 >>> 1;
    $55 = ($51|0)>(2097119);
    $56 = ($51|0)<(-2097184);
    $57 = $54&65535;
    $58 = $56 ? -32768 : $57;
    $59 = $55 ? 32767 : $58;
    $60 = ((($$159)) + 2|0);
    HEAP16[$$159>>1] = $59;
    $61 = Math_imul($26, $14)|0;
    $62 = Math_imul($28, $14)|0;
    $63 = $62 >> 16;
    $64 = Math_imul($41, $10)|0;
    $65 = Math_imul($43, $10)|0;
    $66 = $65 >> 16;
    $67 = ((($$061)) + 16|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = $68 >> 16;
    $70 = Math_imul($69, $8)|0;
    $71 = $68 & 65535;
    $72 = Math_imul($71, $8)|0;
    $73 = $72 >> 16;
    $74 = (($66) + ($64))|0;
    $75 = (($74) + ($61))|0;
    $76 = (($75) + ($38))|0;
    $77 = (($76) + ($63))|0;
    $78 = (($77) + ($70))|0;
    $79 = (($78) + ($73))|0;
    $80 = $79 >>> 5;
    $81 = (($80) + 1)|0;
    $82 = $81 >>> 1;
    $83 = ($79|0)>(2097119);
    $84 = ($79|0)<(-2097184);
    $85 = $82&65535;
    $86 = $84 ? -32768 : $85;
    $87 = $83 ? 32767 : $86;
    $88 = ((($$159)) + 4|0);
    HEAP16[$60>>1] = $87;
    $89 = (($$05460) + -3)|0;
    $90 = ($$05460|0)>(5);
    if ($90) {
     $$05460 = $89;$$061 = $39;$$159 = $88;$19 = $40;
    } else {
     $$1$lcssa = $88;
     break;
    }
   }
  } else {
   $$1$lcssa = $$055;
  }
  $91 = (($$056) - ($16))|0;
  $92 = ($91|0)>(0);
  if (!($92)) {
   break;
  }
  $93 = (($$057) + ($16<<1)|0);
  $94 = (($4) + ($16<<2)|0);
  ;HEAP32[$4>>2]=HEAP32[$94>>2]|0;HEAP32[$4+4>>2]=HEAP32[$94+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$94+8>>2]|0;HEAP32[$4+12>>2]=HEAP32[$94+12>>2]|0;
  $$055 = $$1$lcssa;$$056 = $91;$$057 = $93;
 }
 $95 = (($4) + ($16<<2)|0);
 ;HEAP32[$0>>2]=HEAP32[$95>>2]|0;HEAP32[$0+4>>2]=HEAP32[$95+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$95+8>>2]|0;HEAP32[$0+12>>2]=HEAP32[$95+12>>2]|0;
 STACKTOP = sp;return;
}
function _silk_resampler_down2($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$044 = 0, $$promoted = 0, $$promoted45 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $3 >> 1;
 $5 = ($3|0)>(1);
 if (!($5)) {
  return;
 }
 $6 = ((($0)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $$promoted45 = HEAP32[$6>>2]|0;
 $$044 = 0;$13 = $$promoted;$28 = $$promoted45;
 while(1) {
  $7 = $$044 << 1;
  $8 = (($2) + ($7<<1)|0);
  $9 = HEAP16[$8>>1]|0;
  $10 = $9 << 16 >> 16;
  $11 = $10 << 10;
  $12 = (($11) - ($13))|0;
  $14 = $12 >> 16;
  $15 = Math_imul($14, -25727)|0;
  $16 = $12 & 65535;
  $17 = Math_imul($16, -25727)|0;
  $18 = $17 >> 16;
  $19 = (($18) + ($15))|0;
  $20 = (($19) + ($11))|0;
  $21 = (($20) + ($12))|0;
  $22 = $7 | 1;
  $23 = (($2) + ($22<<1)|0);
  $24 = HEAP16[$23>>1]|0;
  $25 = $24 << 16 >> 16;
  $26 = $25 << 10;
  $27 = (($26) - ($28))|0;
  $29 = $27 >> 16;
  $30 = ($29*9872)|0;
  $31 = $27 & 65535;
  $32 = ($31*9872)|0;
  $33 = $32 >>> 16;
  $34 = (($33) + ($30))|0;
  $35 = (($20) + ($28))|0;
  $36 = (($35) + ($34))|0;
  $37 = (($34) + ($26))|0;
  $38 = $36 >>> 10;
  $39 = (($38) + 1)|0;
  $40 = $39 >>> 1;
  $41 = ($36|0)>(67107839);
  $42 = ($36|0)<(-67109888);
  $43 = $40&65535;
  $44 = $42 ? -32768 : $43;
  $45 = $41 ? 32767 : $44;
  $46 = (($1) + ($$044<<1)|0);
  HEAP16[$46>>1] = $45;
  $47 = (($$044) + 1)|0;
  $48 = ($47|0)<($4|0);
  if ($48) {
   $$044 = $47;$13 = $21;$28 = $37;
  } else {
   break;
  }
 }
 HEAP32[$0>>2] = $21;
 HEAP32[$6>>2] = $37;
 return;
}
function _silk_resampler_private_AR2($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$023 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($4|0)>(0);
 if (!($5)) {
  return;
 }
 $6 = ((($0)) + 4|0);
 $7 = HEAP16[$3>>1]|0;
 $8 = $7 << 16 >> 16;
 $9 = ((($3)) + 2|0);
 $10 = HEAP16[$9>>1]|0;
 $11 = $10 << 16 >> 16;
 $$pre = HEAP32[$0>>2]|0;
 $$023 = 0;$17 = $$pre;
 while(1) {
  $12 = (($2) + ($$023<<1)|0);
  $13 = HEAP16[$12>>1]|0;
  $14 = $13 << 16 >> 16;
  $15 = $14 << 8;
  $16 = (($15) + ($17))|0;
  $18 = (($1) + ($$023<<2)|0);
  HEAP32[$18>>2] = $16;
  $19 = $16 << 2;
  $20 = HEAP32[$6>>2]|0;
  $21 = $19 >> 16;
  $22 = Math_imul($21, $8)|0;
  $23 = $19 & 65532;
  $24 = Math_imul($23, $8)|0;
  $25 = $24 >> 16;
  $26 = (($22) + ($20))|0;
  $27 = (($26) + ($25))|0;
  HEAP32[$0>>2] = $27;
  $28 = Math_imul($21, $11)|0;
  $29 = Math_imul($23, $11)|0;
  $30 = $29 >> 16;
  $31 = (($30) + ($28))|0;
  HEAP32[$6>>2] = $31;
  $32 = (($$023) + 1)|0;
  $exitcond = ($32|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$023 = $32;$17 = $27;
  }
 }
 return;
}
function _silk_sigm_Q15($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $sext = 0, $sext13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)<(0);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = ($0|0)<(-191);
  if ($3) {
   $$0 = 0;
   return ($$0|0);
  }
  $4 = $2 >> 5;
  $5 = (32224 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (32256 + ($4<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $sext13 = $8 << 16;
  $9 = $sext13 >> 16;
  $10 = $2 & 31;
  $11 = Math_imul($9, $10)|0;
  $12 = (($6) - ($11))|0;
  $$0 = $12;
  return ($$0|0);
 } else {
  $13 = ($0|0)>(191);
  if ($13) {
   $$0 = 32767;
   return ($$0|0);
  }
  $14 = $0 >>> 5;
  $15 = (32288 + ($14<<2)|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = (32256 + ($14<<2)|0);
  $18 = HEAP32[$17>>2]|0;
  $sext = $18 << 16;
  $19 = $sext >> 16;
  $20 = $0 & 31;
  $21 = Math_imul($19, $20)|0;
  $22 = (($21) + ($16))|0;
  $$0 = $22;
  return ($$0|0);
 }
 return (0)|0;
}
function _silk_insertion_sort_increasing($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$06579 = 0, $$074 = 0, $$074$in = 0, $$1$lcssa$us = 0, $$16675 = 0, $$167$us = 0, $$270 = 0, $$270$us = 0, $$pre$phi88Z2D = 0, $$pre$phiZ2D = 0, $$pre87 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond84 = 0, $exitcond85 = 0, $exitcond86 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($3|0)>(0);
 if ($4) {
  $$06579 = 0;
  while(1) {
   $5 = (($1) + ($$06579<<2)|0);
   HEAP32[$5>>2] = $$06579;
   $6 = (($$06579) + 1)|0;
   $exitcond86 = ($6|0)==($3|0);
   if ($exitcond86) {
    break;
   } else {
    $$06579 = $6;
   }
  }
  $7 = ($3|0)>(1);
  if ($7) {
   $$16675 = 1;
   while(1) {
    $8 = (($0) + ($$16675<<2)|0);
    $9 = HEAP32[$8>>2]|0;
    $$074$in = $$16675;
    while(1) {
     $$074 = (($$074$in) + -1)|0;
     $10 = (($0) + ($$074<<2)|0);
     $11 = HEAP32[$10>>2]|0;
     $12 = ($9|0)<($11|0);
     $13 = (($0) + ($$074$in<<2)|0);
     if (!($12)) {
      label = 8;
      break;
     }
     HEAP32[$13>>2] = $11;
     $14 = (($1) + ($$074<<2)|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = (($1) + ($$074$in<<2)|0);
     HEAP32[$16>>2] = $15;
     $17 = ($$074$in|0)>(1);
     if ($17) {
      $$074$in = $$074;
     } else {
      $$pre$phi88Z2D = $14;$$pre$phiZ2D = $10;
      break;
     }
    }
    if ((label|0) == 8) {
     label = 0;
     $$pre87 = (($1) + ($$074$in<<2)|0);
     $$pre$phi88Z2D = $$pre87;$$pre$phiZ2D = $13;
    }
    HEAP32[$$pre$phiZ2D>>2] = $9;
    HEAP32[$$pre$phi88Z2D>>2] = $$16675;
    $18 = (($$16675) + 1)|0;
    $exitcond85 = ($18|0)==($3|0);
    if ($exitcond85) {
     $47 = $7;
     break;
    } else {
     $$16675 = $18;
    }
   }
  } else {
   $47 = 0;
  }
 } else {
  $47 = 0;
 }
 $19 = ($3|0)<($2|0);
 if (!($19)) {
  return;
 }
 $20 = (($3) + -1)|0;
 $21 = (($0) + ($20<<2)|0);
 $22 = (($3) + -2)|0;
 if (!($47)) {
  $41 = (($1) + ($20<<2)|0);
  $$270 = $3;
  while(1) {
   $42 = (($0) + ($$270<<2)|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = HEAP32[$21>>2]|0;
   $45 = ($43|0)<($44|0);
   if ($45) {
    HEAP32[$21>>2] = $43;
    HEAP32[$41>>2] = $$270;
   }
   $46 = (($$270) + 1)|0;
   $exitcond84 = ($46|0)==($2|0);
   if ($exitcond84) {
    break;
   } else {
    $$270 = $46;
   }
  }
  return;
 }
 $$270$us = $3;
 while(1) {
  $23 = (($0) + ($$270$us<<2)|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = HEAP32[$21>>2]|0;
  $26 = ($24|0)<($25|0);
  if ($26) {
   $$167$us = $22;
   while(1) {
    $27 = (($0) + ($$167$us<<2)|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = ($24|0)<($28|0);
    if (!($29)) {
     $$1$lcssa$us = $$167$us;
     break;
    }
    $34 = (($$167$us) + 1)|0;
    $35 = (($0) + ($34<<2)|0);
    HEAP32[$35>>2] = $28;
    $36 = (($1) + ($$167$us<<2)|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (($1) + ($34<<2)|0);
    HEAP32[$38>>2] = $37;
    $39 = (($$167$us) + -1)|0;
    $40 = ($$167$us|0)>(0);
    if ($40) {
     $$167$us = $39;
    } else {
     $$1$lcssa$us = $39;
     break;
    }
   }
   $30 = (($$1$lcssa$us) + 1)|0;
   $31 = (($0) + ($30<<2)|0);
   HEAP32[$31>>2] = $24;
   $32 = (($1) + ($30<<2)|0);
   HEAP32[$32>>2] = $$270$us;
  }
  $33 = (($$270$us) + 1)|0;
  $exitcond = ($33|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $$270$us = $33;
  }
 }
 return;
}
function _silk_insertion_sort_increasing_all_values_int16($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$02226 = 0, $$025 = 0, $$025$in = 0, $$pre$phiZ2D = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(1);
 if (!($2)) {
  return;
 }
 $$02226 = 1;
 while(1) {
  $3 = (($0) + ($$02226<<1)|0);
  $4 = HEAP16[$3>>1]|0;
  $$025$in = $$02226;
  while(1) {
   $$025 = (($$025$in) + -1)|0;
   $5 = (($0) + ($$025<<1)|0);
   $6 = HEAP16[$5>>1]|0;
   $7 = ($4<<16>>16)<($6<<16>>16);
   $8 = (($0) + ($$025$in<<1)|0);
   if (!($7)) {
    $$pre$phiZ2D = $8;
    break;
   }
   HEAP16[$8>>1] = $6;
   $9 = ($$025$in|0)>(1);
   if ($9) {
    $$025$in = $$025;
   } else {
    $$pre$phiZ2D = $5;
    break;
   }
  }
  HEAP16[$$pre$phiZ2D>>1] = $4;
  $10 = (($$02226) + 1)|0;
  $exitcond = ($10|0)==($1|0);
  if ($exitcond) {
   break;
  } else {
   $$02226 = $10;
  }
 }
 return;
}
function _silk_sum_sqr_shift($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$lcssa = 0, $$062$lcssa = 0, $$06267 = 0, $$068 = 0, $$1 = 0, $$163$lcssa = 0, $$16364 = 0, $$2$lcssa = 0, $$265 = 0, $$3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (Math_clz32(($3|0))|0);
 $5 = (31 - ($4))|0;
 $6 = (($3) + -1)|0;
 $7 = ($3|0)>(1);
 if ($7) {
  $$06267 = 0;$$068 = $3;
  while(1) {
   $8 = (($2) + ($$06267<<1)|0);
   $9 = HEAP16[$8>>1]|0;
   $10 = $9 << 16 >> 16;
   $11 = Math_imul($10, $10)|0;
   $12 = $$06267 | 1;
   $13 = (($2) + ($12<<1)|0);
   $14 = HEAP16[$13>>1]|0;
   $15 = $14 << 16 >> 16;
   $16 = Math_imul($15, $15)|0;
   $17 = (($16) + ($11))|0;
   $18 = $17 >>> $5;
   $19 = (($18) + ($$068))|0;
   $20 = (($$06267) + 2)|0;
   $21 = ($20|0)<($6|0);
   if ($21) {
    $$06267 = $20;$$068 = $19;
   } else {
    break;
   }
  }
  $22 = $3 & -2;
  $$0$lcssa = $19;$$062$lcssa = $22;
 } else {
  $$0$lcssa = $3;$$062$lcssa = 0;
 }
 $23 = ($$062$lcssa|0)<($3|0);
 if ($23) {
  $24 = (($2) + ($$062$lcssa<<1)|0);
  $25 = HEAP16[$24>>1]|0;
  $26 = $25 << 16 >> 16;
  $27 = Math_imul($26, $26)|0;
  $28 = $27 >>> $5;
  $29 = (($28) + ($$0$lcssa))|0;
  $$1 = $29;
 } else {
  $$1 = $$0$lcssa;
 }
 $30 = (($5) + 3)|0;
 $31 = (Math_clz32(($$1|0))|0);
 $32 = (($30) - ($31))|0;
 $33 = ($32|0)>(0);
 $34 = $33 ? $32 : 0;
 if ($7) {
  $$16364 = 0;$$265 = 0;
  while(1) {
   $35 = (($2) + ($$16364<<1)|0);
   $36 = HEAP16[$35>>1]|0;
   $37 = $36 << 16 >> 16;
   $38 = Math_imul($37, $37)|0;
   $39 = $$16364 | 1;
   $40 = (($2) + ($39<<1)|0);
   $41 = HEAP16[$40>>1]|0;
   $42 = $41 << 16 >> 16;
   $43 = Math_imul($42, $42)|0;
   $44 = (($43) + ($38))|0;
   $45 = $44 >>> $34;
   $46 = (($45) + ($$265))|0;
   $47 = (($$16364) + 2)|0;
   $48 = ($47|0)<($6|0);
   if ($48) {
    $$16364 = $47;$$265 = $46;
   } else {
    break;
   }
  }
  $49 = $3 & -2;
  $$163$lcssa = $49;$$2$lcssa = $46;
 } else {
  $$163$lcssa = 0;$$2$lcssa = 0;
 }
 $50 = ($$163$lcssa|0)<($3|0);
 if (!($50)) {
  $$3 = $$2$lcssa;
  HEAP32[$1>>2] = $34;
  HEAP32[$0>>2] = $$3;
  return;
 }
 $51 = (($2) + ($$163$lcssa<<1)|0);
 $52 = HEAP16[$51>>1]|0;
 $53 = $52 << 16 >> 16;
 $54 = Math_imul($53, $53)|0;
 $55 = $54 >>> $34;
 $56 = (($55) + ($$2$lcssa))|0;
 $$3 = $56;
 HEAP32[$1>>2] = $34;
 HEAP32[$0>>2] = $$3;
 return;
}
function _silk_LPC_fit($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$0104$us = 0, $$087100$us = 0, $$08899$us = 0, $$090103$us = 0, $$19198$us = 0, $$195 = 0, $$195$us = 0, $$296 = 0, $$296$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $8 = 0, $9 = 0, $exitcond = 0, $exitcond110 = 0, $exitcond111 = 0, $exitcond112 = 0, $exitcond113 = 0, $sext = 0, $sext$us = 0, $spec$select = 0, $spec$select$us = 0, $spec$select93$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($4|0)>(0);
 $6 = (($3) - ($2))|0;
 $7 = ($6|0)==(1);
 $8 = (($6) + -1)|0;
 if (!($5)) {
  return;
 }
 $$0104$us = 0;$$090103$us = 0;
 while(1) {
  $$087100$us = 0;$$08899$us = 0;$$19198$us = $$090103$us;
  while(1) {
   $28 = (($1) + ($$087100$us<<2)|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ($29|0)>(0);
   $31 = (0 - ($29))|0;
   $32 = $30 ? $29 : $31;
   $33 = ($32|0)>($$08899$us|0);
   $spec$select$us = $33 ? $$087100$us : $$19198$us;
   $spec$select93$us = $33 ? $32 : $$08899$us;
   $34 = (($$087100$us) + 1)|0;
   $exitcond113 = ($34|0)==($4|0);
   if ($exitcond113) {
    break;
   } else {
    $$087100$us = $34;$$08899$us = $spec$select93$us;$$19198$us = $spec$select$us;
   }
  }
  if ($7) {
   $12 = $spec$select93$us >> 1;
   $13 = $spec$select93$us & 1;
   $14 = (($12) + ($13))|0;
   $16 = $14;
  } else {
   $9 = $spec$select93$us >> $8;
   $10 = (($9) + 1)|0;
   $11 = $10 >> 1;
   $16 = $11;
  }
  $15 = ($16|0)>(32767);
  if (!($15)) {
   $$0$lcssa = $$0104$us;
   break;
  }
  $17 = ($16|0)<(163838);
  $18 = $17 ? $16 : 163838;
  $19 = $18 << 14;
  $20 = (($19) + -536854528)|0;
  $21 = (($spec$select$us) + 1)|0;
  $22 = Math_imul($18, $21)|0;
  $23 = $22 >> 2;
  $24 = (($20|0) / ($23|0))&-1;
  $25 = (65470 - ($24))|0;
  _silk_bwexpander_32($1,$4,$25);
  $26 = (($$0104$us) + 1)|0;
  $27 = ($26>>>0)<(10);
  if ($27) {
   $$0104$us = $26;$$090103$us = $spec$select$us;
  } else {
   $$0$lcssa = $26;
   break;
  }
 }
 $35 = ($$0$lcssa|0)==(10);
 if (!($35)) {
  if (!($5)) {
   return;
  }
  if ($7) {
   $$296$us = 0;
   while(1) {
    $61 = (($1) + ($$296$us<<2)|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = $62 >>> 1;
    $64 = $62 & 1;
    $65 = (($63) + ($64))|0;
    $66 = $65&65535;
    $67 = (($0) + ($$296$us<<1)|0);
    HEAP16[$67>>1] = $66;
    $68 = (($$296$us) + 1)|0;
    $exitcond111 = ($68|0)==($4|0);
    if ($exitcond111) {
     break;
    } else {
     $$296$us = $68;
    }
   }
   return;
  } else {
   $$296 = 0;
   while(1) {
    $69 = (($1) + ($$296<<2)|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = $70 >> $8;
    $72 = (($71) + 1)|0;
    $73 = $72 >>> 1;
    $74 = $73&65535;
    $75 = (($0) + ($$296<<1)|0);
    HEAP16[$75>>1] = $74;
    $76 = (($$296) + 1)|0;
    $exitcond112 = ($76|0)==($4|0);
    if ($exitcond112) {
     break;
    } else {
     $$296 = $76;
    }
   }
   return;
  }
 }
 if (!($5)) {
  return;
 }
 if ($7) {
  $$195$us = 0;
  while(1) {
   $36 = (($1) + ($$195$us<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = $37 >> 1;
   $39 = $37 & 1;
   $40 = (($38) + ($39))|0;
   $41 = ($40|0)>(-32768);
   $spec$select = $41 ? $40 : -32768;
   $42 = ($spec$select|0)<(32767);
   $43 = $42 ? $spec$select : 32767;
   $44 = $43&65535;
   $45 = (($0) + ($$195$us<<1)|0);
   HEAP16[$45>>1] = $44;
   $sext$us = $43 << 16;
   $46 = $sext$us >> 15;
   HEAP32[$36>>2] = $46;
   $47 = (($$195$us) + 1)|0;
   $exitcond = ($47|0)==($4|0);
   if ($exitcond) {
    break;
   } else {
    $$195$us = $47;
   }
  }
  return;
 }
 $$195 = 0;
 while(1) {
  $48 = (($1) + ($$195<<2)|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = $49 >> $8;
  $51 = ($50|0)>(65534);
  if ($51) {
   $56 = 32767;
  } else {
   $52 = ($50|0)<(-65537);
   if ($52) {
    $56 = -32768;
   } else {
    $53 = (($50) + 1)|0;
    $54 = $53 >> 1;
    $56 = $54;
   }
  }
  $55 = $56&65535;
  $57 = (($0) + ($$195<<1)|0);
  HEAP16[$57>>1] = $55;
  $sext = $56 << 16;
  $58 = $sext >> 16;
  $59 = $58 << $6;
  HEAP32[$48>>2] = $59;
  $60 = (($$195) + 1)|0;
  $exitcond110 = ($60|0)==($4|0);
  if ($exitcond110) {
   break;
  } else {
   $$195 = $60;
  }
 }
 return;
}
function _silk_apply_sine_window_FLP($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = Math_fround(0), $$045 = Math_fround(0), $$04748 = 0, $$14649 = Math_fround(0), $$150 = Math_fround(0), $10 = 0, $11 = Math_fround(0), $12 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15 = Math_fround(0), $16 = Math_fround(0), $17 = 0, $18 = 0, $19 = 0, $20 = Math_fround(0), $21 = Math_fround(0), $22 = 0, $23 = Math_fround(0), $24 = Math_fround(0);
 var $25 = 0, $26 = 0, $27 = Math_fround(0), $28 = Math_fround(0), $29 = Math_fround(0), $30 = Math_fround(0), $31 = 0, $32 = 0, $33 = 0, $34 = Math_fround(0), $35 = Math_fround(0), $36 = 0, $37 = Math_fround(0), $38 = Math_fround(0), $39 = 0, $4 = 0, $40 = 0, $5 = Math_fround(0), $6 = Math_fround(0), $7 = Math_fround(0);
 var $8 = Math_fround(0), $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (($3) + 1)|0;
 $5 = (Math_fround(($4|0)));
 $6 = Math_fround(Math_fround(3.14159274) / $5);
 $7 = Math_fround($6 * $6);
 $8 = Math_fround(Math_fround(2.0) - $7);
 $9 = ($2|0)<(2);
 $10 = ($3|0)>(0);
 if (!($10)) {
  return;
 }
 $11 = Math_fround($8 * Math_fround(0.5));
 $$0 = $9 ? $6 : $11;
 $$045 = $9 ? Math_fround(0.0) : Math_fround(1.0);
 $$04748 = 0;$$14649 = $$045;$$150 = $$0;
 while(1) {
  $12 = (($1) + ($$04748<<2)|0);
  $13 = Math_fround(HEAPF32[$12>>2]);
  $14 = Math_fround($13 * Math_fround(0.5));
  $15 = Math_fround($$14649 + $$150);
  $16 = Math_fround($15 * $14);
  $17 = (($0) + ($$04748<<2)|0);
  HEAPF32[$17>>2] = $16;
  $18 = $$04748 | 1;
  $19 = (($1) + ($18<<2)|0);
  $20 = Math_fround(HEAPF32[$19>>2]);
  $21 = Math_fround($$150 * $20);
  $22 = (($0) + ($18<<2)|0);
  HEAPF32[$22>>2] = $21;
  $23 = Math_fround($8 * $$150);
  $24 = Math_fround($23 - $$14649);
  $25 = $$04748 | 2;
  $26 = (($1) + ($25<<2)|0);
  $27 = Math_fround(HEAPF32[$26>>2]);
  $28 = Math_fround($27 * Math_fround(0.5));
  $29 = Math_fround($$150 + $24);
  $30 = Math_fround($29 * $28);
  $31 = (($0) + ($25<<2)|0);
  HEAPF32[$31>>2] = $30;
  $32 = $$04748 | 3;
  $33 = (($1) + ($32<<2)|0);
  $34 = Math_fround(HEAPF32[$33>>2]);
  $35 = Math_fround($24 * $34);
  $36 = (($0) + ($32<<2)|0);
  HEAPF32[$36>>2] = $35;
  $37 = Math_fround($8 * $24);
  $38 = Math_fround($37 - $$150);
  $39 = (($$04748) + 4)|0;
  $40 = ($39|0)<($3|0);
  if ($40) {
   $$04748 = $39;$$14649 = $24;$$150 = $38;
  } else {
   break;
  }
 }
 return;
}
function _silk_find_LPC_FLP($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = Math_fround($3);
 var $$1 = Math_fround(0), $$1$1 = Math_fround(0), $$1$2 = Math_fround(0), $$pr = 0, $10 = 0, $100 = Math_fround(0), $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = Math_fround(0), $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = Math_fround(0), $29 = Math_fround(0), $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0.0, $46 = 0.0, $47 = Math_fround(0), $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0.0, $63 = 0.0, $64 = Math_fround(0), $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = Math_fround(0), $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0.0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0.0, $99 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1696|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1696|0);
 $4 = sp + 1632|0;
 $5 = sp + 1600|0;
 $6 = sp + 1536|0;
 $7 = sp;
 $8 = ((($0)) + 4584|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 4636|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + ($9))|0;
 $13 = ((($0)) + 4763|0);
 HEAP8[$13>>0] = 4;
 $14 = ((($0)) + 4576|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (Math_fround(_silk_burg_modified_FLP($4,$2,$3,$12,$15,$11)));
 $17 = ((($0)) + 4628|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0);
 do {
  if (!($19)) {
   $20 = ((($0)) + 4660|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ($21|0)==(0);
   if ($22) {
    $23 = HEAP32[$14>>2]|0;
    $24 = ($23|0)==(4);
    if ($24) {
     $25 = $12 << 1;
     $26 = (($2) + ($25<<2)|0);
     $27 = HEAP32[$10>>2]|0;
     $28 = (Math_fround(_silk_burg_modified_FLP($6,$26,$3,$12,2,$27)));
     $29 = Math_fround($16 - $28);
     $30 = HEAP32[$10>>2]|0;
     _silk_A2NLSF_FLP($1,$6,$30);
     $31 = ((($0)) + 4496|0);
     $32 = ((($0)) + 5088|0);
     $33 = HEAP32[$10>>2]|0;
     _silk_interpolate($5,$31,$1,3,$33);
     $34 = HEAP32[$10>>2]|0;
     $35 = HEAP32[$32>>2]|0;
     _silk_NLSF2A_FLP($6,$5,$34,$35);
     $36 = HEAP32[$10>>2]|0;
     _silk_LPC_analysis_filter_FLP($7,$6,$2,$25,$36);
     $37 = HEAP32[$10>>2]|0;
     $38 = (($7) + ($37<<2)|0);
     $39 = (($12) - ($37))|0;
     $40 = (+_silk_energy_FLP($38,$39));
     $41 = HEAP32[$10>>2]|0;
     $42 = (($7) + ($41<<2)|0);
     $43 = (($42) + ($12<<2)|0);
     $44 = (($12) - ($41))|0;
     $45 = (+_silk_energy_FLP($43,$44));
     $46 = $40 + $45;
     $47 = Math_fround($46);
     $48 = $29 > $47;
     if ($48) {
      HEAP8[$13>>0] = 3;
      $$1 = $47;
     } else {
      $49 = $47 > Math_fround(3.40282347E+38);
      if ($49) {
       break;
      } else {
       $$1 = $29;
      }
     }
     $50 = HEAP32[$10>>2]|0;
     _silk_interpolate($5,$31,$1,2,$50);
     $51 = HEAP32[$10>>2]|0;
     $52 = HEAP32[$32>>2]|0;
     _silk_NLSF2A_FLP($6,$5,$51,$52);
     $53 = HEAP32[$10>>2]|0;
     _silk_LPC_analysis_filter_FLP($7,$6,$2,$25,$53);
     $54 = HEAP32[$10>>2]|0;
     $55 = (($7) + ($54<<2)|0);
     $56 = (($12) - ($54))|0;
     $57 = (+_silk_energy_FLP($55,$56));
     $58 = HEAP32[$10>>2]|0;
     $59 = (($7) + ($58<<2)|0);
     $60 = (($59) + ($12<<2)|0);
     $61 = (($12) - ($58))|0;
     $62 = (+_silk_energy_FLP($60,$61));
     $63 = $57 + $62;
     $64 = Math_fround($63);
     $65 = $$1 > $64;
     if ($65) {
      HEAP8[$13>>0] = 2;
      $$1$1 = $64;
     } else {
      $68 = $47 < $64;
      if ($68) {
       break;
      } else {
       $$1$1 = $$1;
      }
     }
     $69 = HEAP32[$10>>2]|0;
     _silk_interpolate($5,$31,$1,1,$69);
     $70 = HEAP32[$10>>2]|0;
     $71 = HEAP32[$32>>2]|0;
     _silk_NLSF2A_FLP($6,$5,$70,$71);
     $72 = HEAP32[$10>>2]|0;
     _silk_LPC_analysis_filter_FLP($7,$6,$2,$25,$72);
     $73 = HEAP32[$10>>2]|0;
     $74 = (($7) + ($73<<2)|0);
     $75 = (($12) - ($73))|0;
     $76 = (+_silk_energy_FLP($74,$75));
     $77 = HEAP32[$10>>2]|0;
     $78 = (($7) + ($77<<2)|0);
     $79 = (($78) + ($12<<2)|0);
     $80 = (($12) - ($77))|0;
     $81 = (+_silk_energy_FLP($79,$80));
     $82 = $76 + $81;
     $83 = Math_fround($82);
     $84 = $$1$1 > $83;
     if ($84) {
      HEAP8[$13>>0] = 1;
      $$1$2 = $83;
     } else {
      $85 = $64 < $83;
      if ($85) {
       break;
      } else {
       $$1$2 = $$1$1;
      }
     }
     $86 = HEAP32[$10>>2]|0;
     _silk_interpolate($5,$31,$1,0,$86);
     $87 = HEAP32[$10>>2]|0;
     $88 = HEAP32[$32>>2]|0;
     _silk_NLSF2A_FLP($6,$5,$87,$88);
     $89 = HEAP32[$10>>2]|0;
     _silk_LPC_analysis_filter_FLP($7,$6,$2,$25,$89);
     $90 = HEAP32[$10>>2]|0;
     $91 = (($7) + ($90<<2)|0);
     $92 = (($12) - ($90))|0;
     $93 = (+_silk_energy_FLP($91,$92));
     $94 = HEAP32[$10>>2]|0;
     $95 = (($7) + ($94<<2)|0);
     $96 = (($95) + ($12<<2)|0);
     $97 = (($12) - ($94))|0;
     $98 = (+_silk_energy_FLP($96,$97));
     $99 = $93 + $98;
     $100 = Math_fround($99);
     $101 = $$1$2 > $100;
     if ($101) {
      HEAP8[$13>>0] = 0;
      STACKTOP = sp;return;
     }
    }
   }
  }
 } while(0);
 $$pr = HEAP8[$13>>0]|0;
 $66 = ($$pr<<24>>24)==(4);
 if (!($66)) {
  STACKTOP = sp;return;
 }
 $67 = HEAP32[$10>>2]|0;
 _silk_A2NLSF_FLP($1,$4,$67);
 STACKTOP = sp;return;
}
function _silk_find_LTP_FLP($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = Math_fround(0), $$04146 = 0, $$04245 = 0, $$04344 = 0, $$047 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = Math_fround(0), $14 = Math_fround(0), $15 = 0, $16 = Math_fround(0), $17 = Math_fround(0), $18 = Math_fround(0), $19 = Math_fround(0), $20 = 0, $21 = Math_fround(0), $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ($5|0)>(0);
 if (!($6)) {
  return;
 }
 $7 = (($4) + 5)|0;
 $$04146 = 0;$$04245 = $1;$$04344 = $0;$$047 = $2;
 while(1) {
  $8 = (($3) + ($$04146<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (-2 - ($9))|0;
  $11 = (($$047) + ($10<<2)|0);
  _silk_corrMatrix_FLP($11,$4,5,$$04344);
  _silk_corrVector_FLP($11,$$047,$4,5,$$04245);
  $12 = (+_silk_energy_FLP($$047,$7));
  $13 = Math_fround($12);
  $14 = Math_fround(HEAPF32[$$04344>>2]);
  $15 = ((($$04344)) + 96|0);
  $16 = Math_fround(HEAPF32[$15>>2]);
  $17 = Math_fround($14 + $16);
  $18 = Math_fround($17 * Math_fround(0.0149999997));
  $19 = Math_fround($18 + Math_fround(1.0));
  $20 = $19 < $13;
  $$ = $20 ? $13 : $19;
  $21 = Math_fround(Math_fround(1.0) / $$);
  _silk_scale_vector_FLP($$04344,$21,25);
  _silk_scale_vector_FLP($$04245,$21,5);
  $22 = (($$047) + ($4<<2)|0);
  $23 = ((($$04344)) + 100|0);
  $24 = ((($$04245)) + 20|0);
  $25 = (($$04146) + 1)|0;
  $exitcond = ($25|0)==($5|0);
  if ($exitcond) {
   break;
  } else {
   $$04146 = $25;$$04245 = $24;$$04344 = $23;$$047 = $22;
  }
 }
 return;
}
function _silk_burg_modified_FLP($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = Math_fround($2);
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0219264$us = 0.0, $$0221 = 0.0, $$0223$lcssa = 0.0, $$0223287 = 0.0, $$0224$lcssa = 0.0, $$0224286 = 0.0, $$0227$lcssa = 0.0, $$0227285 = 0.0, $$0228301 = 0.0, $$0231$lcssa = 0.0, $$0231251 = 0.0, $$0235310 = 0, $$0238306 = 0, $$0240263$us = 0, $$0265$us = 0.0, $$1$lcssa = 0.0, $$1220$lcssa = 0.0, $$1220277 = 0.0, $$1222 = 0.0, $$1225$lcssa = 0.0;
 var $$1225247 = 0.0, $$1229 = 0.0, $$1233 = 0, $$1236272 = 0, $$1236272$us = 0, $$1239299 = 0, $$1241271 = 0, $$1241271$us = 0, $$1278 = 0.0, $$2$lcssa = 0.0, $$2226 = 0.0, $$2237250 = 0, $$2242276 = 0, $$2248 = 0.0, $$3284 = 0, $$4294 = 0, $$7256 = 0, $$8246 = 0, $$mask = 0, $$not = 0;
 var $$phi$trans$insert = 0, $$pre = 0.0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0.0, $103 = 0, $104 = 0, $105 = Math_fround(0), $106 = 0.0, $107 = 0.0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0, $112 = 0, $113 = 0, $114 = 0.0, $115 = 0;
 var $116 = 0.0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0.0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0.0, $135 = 0.0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0, $144 = 0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0;
 var $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0, $163 = 0.0, $164 = 0, $165 = 0, $166 = 0, $167 = 0.0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0.0, $190 = 0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0, $197 = 0, $198 = 0, $199 = 0.0, $20 = 0, $200 = Math_fround(0), $201 = Math_fround(0), $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0.0;
 var $207 = 0.0, $208 = 0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0.0, $213 = 0, $214 = 0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0.0, $220 = Math_fround(0), $221 = Math_fround(0), $222 = 0, $223 = 0.0, $224 = 0.0;
 var $225 = Math_fround(0), $23 = 0.0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = Math_fround(0), $41 = 0.0;
 var $42 = 0, $43 = Math_fround(0), $44 = 0.0, $45 = 0, $46 = 0, $47 = Math_fround(0), $48 = 0.0, $49 = 0.0, $50 = 0.0, $51 = 0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0, $56 = Math_fround(0), $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0;
 var $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = Math_fround(0), $68 = Math_fround(0), $69 = 0.0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0, $75 = Math_fround(0), $76 = Math_fround(0), $77 = 0.0, $78 = 0, $79 = 0.0;
 var $8 = 0, $80 = 0.0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = Math_fround(0), $91 = 0.0, $92 = 0, $93 = Math_fround(0), $94 = 0.0, $95 = 0, $96 = 0, $97 = Math_fround(0);
 var $98 = 0.0, $99 = 0.0, $exitcond = 0, $exitcond330 = 0, $exitcond331 = 0, $exitcond334 = 0, $exitcond335 = 0, $exitcond336 = 0, $exitcond337 = 0, $exitcond338 = 0, $exitcond339 = 0, $exitcond340 = 0, $exitcond341 = 0, $exitcond344 = 0, $exitcond346 = 0, $exitcond347 = 0, $indvars$iv = 0, $indvars$iv$next = 0, $indvars$iv$next343 = 0, $indvars$iv342 = 0;
 var $or$cond = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 992|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(992|0);
 $6 = sp + 800|0;
 $7 = sp + 608|0;
 $8 = sp + 400|0;
 $9 = sp + 192|0;
 $10 = sp;
 $11 = Math_imul($4, $3)|0;
 $12 = (+_silk_energy_FLP($1,$11));
 _memset(($6|0),0,192)|0;
 $13 = ($4|0)>(0);
 $$not = $13 ^ 1;
 $14 = ($5|0)<(1);
 $or$cond = $14 | $$not;
 if (!($or$cond)) {
  $$0235310 = 0;
  while(1) {
   $15 = Math_imul($$0235310, $3)|0;
   $16 = (($1) + ($15<<2)|0);
   $$0238306 = 1;
   while(1) {
    $17 = (($16) + ($$0238306<<2)|0);
    $18 = (($3) - ($$0238306))|0;
    $19 = (+_silk_inner_product_FLP($16,$17,$18));
    $20 = (($$0238306) + -1)|0;
    $21 = (($6) + ($20<<3)|0);
    $22 = +HEAPF64[$21>>3];
    $23 = $19 + $22;
    HEAPF64[$21>>3] = $23;
    $24 = (($$0238306) + 1)|0;
    $exitcond346 = ($$0238306|0)==($5|0);
    if ($exitcond346) {
     break;
    } else {
     $$0238306 = $24;
    }
   }
   $25 = (($$0235310) + 1)|0;
   $exitcond347 = ($25|0)==($4|0);
   if ($exitcond347) {
    break;
   } else {
    $$0235310 = $25;
   }
  }
 }
 _memcpy(($7|0),($6|0),192)|0;
 $26 = $12 * 9.9999997473787516E-6;
 $27 = $12 + $26;
 $28 = $27 + 9.9999997171806853E-10;
 HEAPF64[$8>>3] = $28;
 HEAPF64[$9>>3] = $28;
 $29 = ($5|0)>(0);
 L9: do {
  if ($29) {
   $31 = +$2;
   $$0228301 = 1.0;$$1239299 = 0;$indvars$iv = 1;$indvars$iv342 = 2;
   while(1) {
    $32 = $indvars$iv >>> 1;
    L13: do {
     if ($13) {
      $33 = (($3) - ($$1239299))|0;
      $34 = (($33) + -1)|0;
      $35 = ($$1239299|0)==(0);
      $36 = (($$1239299) + -1)|0;
      if ($35) {
       $$1236272 = 0;
       while(1) {
        $88 = Math_imul($$1236272, $3)|0;
        $89 = (($1) + ($88<<2)|0);
        $90 = Math_fround(HEAPF32[$89>>2]);
        $91 = +$90;
        $92 = (($89) + ($34<<2)|0);
        $93 = Math_fround(HEAPF32[$92>>2]);
        $94 = +$93;
        $$1241271 = 0;
        while(1) {
         $95 = (0 - ($$1241271))|0;
         $96 = (($89) + ($95<<2)|0);
         $97 = Math_fround(HEAPF32[$96>>2]);
         $98 = +$97;
         $99 = $91 * $98;
         $100 = (($8) + ($$1241271<<3)|0);
         $101 = +HEAPF64[$100>>3];
         $102 = $101 - $99;
         HEAPF64[$100>>3] = $102;
         $103 = (($34) + ($$1241271))|0;
         $104 = (($89) + ($103<<2)|0);
         $105 = Math_fround(HEAPF32[$104>>2]);
         $106 = +$105;
         $107 = $94 * $106;
         $108 = (($9) + ($$1241271<<3)|0);
         $109 = +HEAPF64[$108>>3];
         $110 = $109 - $107;
         HEAPF64[$108>>3] = $110;
         $111 = (($$1241271) + 1)|0;
         $exitcond334 = ($111|0)==($indvars$iv|0);
         if ($exitcond334) {
          break;
         } else {
          $$1241271 = $111;
         }
        }
        $112 = (($$1236272) + 1)|0;
        $exitcond335 = ($112|0)==($4|0);
        if ($exitcond335) {
         break L13;
        } else {
         $$1236272 = $112;
        }
       }
      }
      $$1236272$us = 0;
      while(1) {
       $37 = Math_imul($$1236272$us, $3)|0;
       $38 = (($1) + ($37<<2)|0);
       $39 = (($38) + ($$1239299<<2)|0);
       $40 = Math_fround(HEAPF32[$39>>2]);
       $41 = +$40;
       $42 = (($38) + ($34<<2)|0);
       $43 = Math_fround(HEAPF32[$42>>2]);
       $44 = +$43;
       $$0219264$us = $41;$$0240263$us = 0;$$0265$us = $44;
       while(1) {
        $65 = (($36) - ($$0240263$us))|0;
        $66 = (($38) + ($65<<2)|0);
        $67 = Math_fround(HEAPF32[$66>>2]);
        $68 = Math_fround($40 * $67);
        $69 = +$68;
        $70 = (($6) + ($$0240263$us<<3)|0);
        $71 = +HEAPF64[$70>>3];
        $72 = $71 - $69;
        HEAPF64[$70>>3] = $72;
        $73 = (($$0240263$us) + ($33))|0;
        $74 = (($38) + ($73<<2)|0);
        $75 = Math_fround(HEAPF32[$74>>2]);
        $76 = Math_fround($43 * $75);
        $77 = +$76;
        $78 = (($7) + ($$0240263$us<<3)|0);
        $79 = +HEAPF64[$78>>3];
        $80 = $79 - $77;
        HEAPF64[$78>>3] = $80;
        $81 = (($10) + ($$0240263$us<<3)|0);
        $82 = +HEAPF64[$81>>3];
        $83 = +$67;
        $84 = $82 * $83;
        $50 = $$0219264$us + $84;
        $85 = +$75;
        $86 = $82 * $85;
        $59 = $$0265$us + $86;
        $87 = (($$0240263$us) + 1)|0;
        $exitcond336 = ($87|0)==($$1239299|0);
        if ($exitcond336) {
         break;
        } else {
         $$0219264$us = $50;$$0240263$us = $87;$$0265$us = $59;
        }
       }
       $$1241271$us = 0;
       while(1) {
        $45 = (($$1239299) - ($$1241271$us))|0;
        $46 = (($38) + ($45<<2)|0);
        $47 = Math_fround(HEAPF32[$46>>2]);
        $48 = +$47;
        $49 = $50 * $48;
        $51 = (($8) + ($$1241271$us<<3)|0);
        $52 = +HEAPF64[$51>>3];
        $53 = $52 - $49;
        HEAPF64[$51>>3] = $53;
        $54 = (($34) + ($$1241271$us))|0;
        $55 = (($38) + ($54<<2)|0);
        $56 = Math_fround(HEAPF32[$55>>2]);
        $57 = +$56;
        $58 = $59 * $57;
        $60 = (($9) + ($$1241271$us<<3)|0);
        $61 = +HEAPF64[$60>>3];
        $62 = $61 - $58;
        HEAPF64[$60>>3] = $62;
        $63 = (($$1241271$us) + 1)|0;
        $exitcond337 = ($63|0)==($indvars$iv|0);
        if ($exitcond337) {
         break;
        } else {
         $$1241271$us = $63;
        }
       }
       $64 = (($$1236272$us) + 1)|0;
       $exitcond338 = ($64|0)==($4|0);
       if ($exitcond338) {
        break;
       } else {
        $$1236272$us = $64;
       }
      }
     }
    } while(0);
    $113 = (($6) + ($$1239299<<3)|0);
    $114 = +HEAPF64[$113>>3];
    $115 = (($7) + ($$1239299<<3)|0);
    $116 = +HEAPF64[$115>>3];
    $117 = ($$1239299|0)==(0);
    if ($117) {
     $$1$lcssa = $116;$$1220$lcssa = $114;
    } else {
     $$1220277 = $114;$$1278 = $116;$$2242276 = 0;
     while(1) {
      $118 = (($10) + ($$2242276<<3)|0);
      $119 = +HEAPF64[$118>>3];
      $120 = (($$1239299) - ($$2242276))|0;
      $121 = (($120) + -1)|0;
      $122 = (($7) + ($121<<3)|0);
      $123 = +HEAPF64[$122>>3];
      $124 = $119 * $123;
      $125 = $$1220277 + $124;
      $126 = (($6) + ($121<<3)|0);
      $127 = +HEAPF64[$126>>3];
      $128 = $119 * $127;
      $129 = $$1278 + $128;
      $130 = (($$2242276) + 1)|0;
      $exitcond339 = ($130|0)==($$1239299|0);
      if ($exitcond339) {
       $$1$lcssa = $129;$$1220$lcssa = $125;
       break;
      } else {
       $$1220277 = $125;$$1278 = $129;$$2242276 = $130;
      }
     }
    }
    $131 = (($$1239299) + 1)|0;
    $132 = (($8) + ($131<<3)|0);
    HEAPF64[$132>>3] = $$1220$lcssa;
    $133 = (($9) + ($131<<3)|0);
    HEAPF64[$133>>3] = $$1$lcssa;
    $134 = +HEAPF64[$9>>3];
    $135 = +HEAPF64[$8>>3];
    if ($117) {
     $$0223$lcssa = $134;$$0224$lcssa = $135;$$0227$lcssa = $$1$lcssa;
    } else {
     $$0223287 = $134;$$0224286 = $135;$$0227285 = $$1$lcssa;$$3284 = 0;
     while(1) {
      $136 = (($10) + ($$3284<<3)|0);
      $137 = +HEAPF64[$136>>3];
      $138 = (($$1239299) - ($$3284))|0;
      $139 = (($9) + ($138<<3)|0);
      $140 = +HEAPF64[$139>>3];
      $141 = $137 * $140;
      $142 = $$0227285 + $141;
      $143 = (($$3284) + 1)|0;
      $144 = (($9) + ($143<<3)|0);
      $145 = +HEAPF64[$144>>3];
      $146 = $137 * $145;
      $147 = $$0223287 + $146;
      $148 = (($8) + ($143<<3)|0);
      $149 = +HEAPF64[$148>>3];
      $150 = $137 * $149;
      $151 = $$0224286 + $150;
      $exitcond340 = ($143|0)==($$1239299|0);
      if ($exitcond340) {
       $$0223$lcssa = $147;$$0224$lcssa = $151;$$0227$lcssa = $142;
       break;
      } else {
       $$0223287 = $147;$$0224286 = $151;$$0227285 = $142;$$3284 = $143;
      }
     }
    }
    $152 = $$0227$lcssa * -2.0;
    $153 = $$0224$lcssa + $$0223$lcssa;
    $154 = $152 / $153;
    $155 = $154 * $154;
    $156 = 1.0 - $155;
    $157 = $$0228301 * $156;
    $158 = !($157 <= $31);
    if ($158) {
     $$1222 = $154;$$1229 = $157;$$1233 = 0;
    } else {
     $159 = $31 / $$0228301;
     $160 = 1.0 - $159;
     $161 = (+Math_sqrt((+$160)));
     $162 = $$0227$lcssa > 0.0;
     $163 = - $161;
     $$0221 = $162 ? $163 : $161;
     $$1222 = $$0221;$$1229 = $31;$$1233 = 1;
    }
    $$mask = $131 & 2147483646;
    $164 = ($$mask|0)==(0);
    if (!($164)) {
     $165 = (($$1239299) + -1)|0;
     $$4294 = 0;
     while(1) {
      $166 = (($10) + ($$4294<<3)|0);
      $167 = +HEAPF64[$166>>3];
      $168 = (($165) - ($$4294))|0;
      $169 = (($10) + ($168<<3)|0);
      $170 = +HEAPF64[$169>>3];
      $171 = $$1222 * $170;
      $172 = $167 + $171;
      HEAPF64[$166>>3] = $172;
      $173 = $$1222 * $167;
      $174 = $170 + $173;
      HEAPF64[$169>>3] = $174;
      $175 = (($$4294) + 1)|0;
      $exitcond341 = ($175|0)==($32|0);
      if ($exitcond341) {
       break;
      } else {
       $$4294 = $175;
      }
     }
    }
    $176 = (($10) + ($$1239299<<3)|0);
    HEAPF64[$176>>3] = $$1222;
    $177 = ($$1233|0)==(0);
    if (!($177)) {
     break;
    }
    $181 = (($9) + ($131<<3)|0);
    $182 = +HEAPF64[$181>>3];
    $183 = $$1222 * $182;
    $184 = $135 + $183;
    HEAPF64[$8>>3] = $184;
    $185 = $$1222 * $135;
    $186 = $182 + $185;
    HEAPF64[$181>>3] = $186;
    $187 = 1;
    while(1) {
     $$phi$trans$insert = (($8) + ($187<<3)|0);
     $$pre = +HEAPF64[$$phi$trans$insert>>3];
     $188 = (($8) + ($187<<3)|0);
     $189 = (($131) - ($187))|0;
     $190 = (($9) + ($189<<3)|0);
     $191 = +HEAPF64[$190>>3];
     $192 = $$1222 * $191;
     $193 = $$pre + $192;
     HEAPF64[$188>>3] = $193;
     $194 = $$1222 * $$pre;
     $195 = $191 + $194;
     HEAPF64[$190>>3] = $195;
     $196 = (($187) + 1)|0;
     $exitcond344 = ($196|0)==($indvars$iv342|0);
     if ($exitcond344) {
      break;
     } else {
      $187 = $196;
     }
    }
    $197 = ($131|0)<($5|0);
    $indvars$iv$next = (($indvars$iv) + 1)|0;
    $indvars$iv$next343 = (($indvars$iv342) + 1)|0;
    if ($197) {
     $$0228301 = $$1229;$$1239299 = $131;$indvars$iv = $indvars$iv$next;$indvars$iv342 = $indvars$iv$next343;
    } else {
     label = 45;
     break;
    }
   }
   if ((label|0) == 45) {
    $210 = +HEAPF64[$8>>3];
    if (!($29)) {
     $$1225$lcssa = $210;$$2$lcssa = 1.0;
     break;
    }
    $$1225247 = $210;$$2248 = 1.0;$$8246 = 0;
    while(1) {
     $211 = (($10) + ($$8246<<3)|0);
     $212 = +HEAPF64[$211>>3];
     $213 = (($$8246) + 1)|0;
     $214 = (($8) + ($213<<3)|0);
     $215 = +HEAPF64[$214>>3];
     $216 = $212 * $215;
     $217 = $$1225247 + $216;
     $218 = $212 * $212;
     $219 = $$2248 + $218;
     $220 = Math_fround($212);
     $221 = Math_fround(- $220);
     $222 = (($0) + ($$8246<<2)|0);
     HEAPF32[$222>>2] = $221;
     $exitcond = ($213|0)==($5|0);
     if ($exitcond) {
      $$1225$lcssa = $217;$$2$lcssa = $219;
      break L9;
     } else {
      $$1225247 = $217;$$2248 = $219;$$8246 = $213;
     }
    }
   }
   $178 = ($131|0)<($5|0);
   if ($178) {
    $scevgep = (($10) + ($131<<3)|0);
    $179 = (($5) - ($131))|0;
    $180 = $179 << 3;
    _memset(($scevgep|0),0,($180|0))|0;
   }
   if ($29) {
    $$7256 = 0;
    while(1) {
     $198 = (($10) + ($$7256<<3)|0);
     $199 = +HEAPF64[$198>>3];
     $200 = Math_fround($199);
     $201 = Math_fround(- $200);
     $202 = (($0) + ($$7256<<2)|0);
     HEAPF32[$202>>2] = $201;
     $203 = (($$7256) + 1)|0;
     $exitcond331 = ($203|0)==($5|0);
     if ($exitcond331) {
      break;
     } else {
      $$7256 = $203;
     }
    }
   }
   if ($13) {
    $$0231251 = $12;$$2237250 = 0;
    while(1) {
     $204 = Math_imul($$2237250, $3)|0;
     $205 = (($1) + ($204<<2)|0);
     $206 = (+_silk_energy_FLP($205,$5));
     $207 = $$0231251 - $206;
     $208 = (($$2237250) + 1)|0;
     $exitcond330 = ($208|0)==($4|0);
     if ($exitcond330) {
      $$0231$lcssa = $207;
      break;
     } else {
      $$0231251 = $207;$$2237250 = $208;
     }
    }
   } else {
    $$0231$lcssa = $12;
   }
   $209 = $$1229 * $$0231$lcssa;
   $$2226 = $209;
   $225 = Math_fround($$2226);
   STACKTOP = sp;return (Math_fround($225));
  } else {
   $30 = +HEAPF64[$8>>3];
   $$1225$lcssa = $30;$$2$lcssa = 1.0;
  }
 } while(0);
 $223 = $26 * $$2$lcssa;
 $224 = $$1225$lcssa - $223;
 $$2226 = $224;
 $225 = Math_fround($$2226);
 STACKTOP = sp;return (Math_fround($225));
}
function _silk_scale_vector_FLP($0,$1,$2) {
 $0 = $0|0;
 $1 = Math_fround($1);
 $2 = $2|0;
 var $$0$lcssa = 0, $$025 = 0, $$124 = 0, $10 = Math_fround(0), $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = Math_fround(0), $15 = Math_fround(0), $16 = 0, $17 = 0, $18 = Math_fround(0), $19 = Math_fround(0), $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = Math_fround(0), $25 = Math_fround(0), $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = Math_fround(0), $7 = Math_fround(0), $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $2 & 65532;
 $4 = ($3|0)==(0);
 if ($4) {
  $$0$lcssa = 0;
 } else {
  $$025 = 0;
  while(1) {
   $5 = (($0) + ($$025<<2)|0);
   $6 = Math_fround(HEAPF32[$5>>2]);
   $7 = Math_fround($6 * $1);
   HEAPF32[$5>>2] = $7;
   $8 = $$025 | 1;
   $9 = (($0) + ($8<<2)|0);
   $10 = Math_fround(HEAPF32[$9>>2]);
   $11 = Math_fround($10 * $1);
   HEAPF32[$9>>2] = $11;
   $12 = $$025 | 2;
   $13 = (($0) + ($12<<2)|0);
   $14 = Math_fround(HEAPF32[$13>>2]);
   $15 = Math_fround($14 * $1);
   HEAPF32[$13>>2] = $15;
   $16 = $$025 | 3;
   $17 = (($0) + ($16<<2)|0);
   $18 = Math_fround(HEAPF32[$17>>2]);
   $19 = Math_fround($18 * $1);
   HEAPF32[$17>>2] = $19;
   $20 = (($$025) + 4)|0;
   $21 = ($20>>>0)<($3>>>0);
   if ($21) {
    $$025 = $20;
   } else {
    $$0$lcssa = $3;
    break;
   }
  }
 }
 $22 = ($$0$lcssa|0)<($2|0);
 if (!($22)) {
  return;
 }
 $$124 = $$0$lcssa;
 while(1) {
  $23 = (($0) + ($$124<<2)|0);
  $24 = Math_fround(HEAPF32[$23>>2]);
  $25 = Math_fround($24 * $1);
  HEAPF32[$23>>2] = $25;
  $26 = (($$124) + 1)|0;
  $exitcond = ($26|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $$124 = $26;
  }
 }
 return;
}
function _silk_CNG_Reset($0) {
 $0 = $0|0;
 var $$01516 = 0, $$017 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 2340|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 1)|0;
 $4 = (32767 / ($3|0))&-1;
 $5 = ($2|0)>(0);
 if ($5) {
  $$01516 = 0;$$017 = 0;
  while(1) {
   $6 = (($$017) + ($4))|0;
   $7 = $6&65535;
   $8 = (((($0)) + 4052|0) + ($$01516<<1)|0);
   HEAP16[$8>>1] = $7;
   $9 = (($$01516) + 1)|0;
   $exitcond = ($9|0)==($2|0);
   if ($exitcond) {
    break;
   } else {
    $$01516 = $9;$$017 = $6;
   }
  }
 }
 $10 = ((($0)) + 4148|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($0)) + 4152|0);
 HEAP32[$11>>2] = 3176576;
 return;
}
function _silk_CNG($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$i = 0, $$$i255 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i254 = 0, $$01516$i = 0, $$017$i = 0, $$021$lcssa$i = 0, $$02124$i = 0, $$02223$i = 0, $$0239$lcssa = 0, $$0239272 = 0, $$0241 = 0, $$0242 = 0, $$0243271 = 0, $$0279 = 0, $$1273 = 0, $$2268 = 0, $$3267 = 0, $$alloca_mul = 0;
 var $$phi$trans$insert = 0, $$phi$trans$insert284 = 0, $$phi$trans$insert286 = 0, $$phi$trans$insert288 = 0, $$phi$trans$insert290 = 0, $$phi$trans$insert292 = 0, $$pr = 0, $$pre = 0, $$pre283 = 0, $$pre285 = 0, $$pre287 = 0, $$pre289 = 0, $$pre291 = 0, $$pre293 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i253 = 0, $or$cond = 0, $phitmp = 0, $phitmp264 = 0, $sext = 0, $sext$i = 0, $sext$i256 = 0, $sext10$i = 0, $sext10$i257 = 0, $sext245 = 0, $sext246 = 0, $sext247 = 0, $spec$select = 0, $spec$select248 = 0;
 var $spec$select249 = 0, $spec$select261 = 0, $spec$select262 = 0, $spec$select263 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $5 = ((($0)) + 2772|0);
 $6 = ((($0)) + 2316|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 4156|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  $11 = ((($0)) + 2340|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($12) + 1)|0;
  $14 = (32767 / ($13|0))&-1;
  $15 = ($12|0)>(0);
  if ($15) {
   $$01516$i = 0;$$017$i = 0;
   while(1) {
    $16 = (($$017$i) + ($14))|0;
    $17 = $16&65535;
    $18 = (((($0)) + 4052|0) + ($$01516$i<<1)|0);
    HEAP16[$18>>1] = $17;
    $19 = (($$01516$i) + 1)|0;
    $exitcond$i = ($19|0)==($12|0);
    if ($exitcond$i) {
     break;
    } else {
     $$01516$i = $19;$$017$i = $16;
    }
   }
  }
  $20 = ((($0)) + 4148|0);
  HEAP32[$20>>2] = 0;
  $21 = ((($0)) + 4152|0);
  HEAP32[$21>>2] = 3176576;
  HEAP32[$8>>2] = $7;
 }
 $22 = ((($0)) + 4160|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($23|0)==(0);
 if ($24) {
  $25 = ((($0)) + 4164|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ($26|0)==(0);
  if ($27) {
   $28 = ((($0)) + 2340|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ($29|0)>(0);
   if ($30) {
    $$0279 = 0;
    while(1) {
     $31 = (((($0)) + 2344|0) + ($$0279<<1)|0);
     $32 = HEAP16[$31>>1]|0;
     $33 = $32 << 16 >> 16;
     $34 = (((($0)) + 4052|0) + ($$0279<<1)|0);
     $35 = HEAP16[$34>>1]|0;
     $36 = $35 << 16 >> 16;
     $37 = (($33) - ($36))|0;
     $38 = $37 >> 16;
     $39 = ($38*16348)|0;
     $40 = $37 & 65535;
     $41 = ($40*16348)|0;
     $42 = $41 >>> 16;
     $43 = (($39) + ($36))|0;
     $44 = (($43) + ($42))|0;
     $45 = $44&65535;
     HEAP16[$34>>1] = $45;
     $46 = (($$0279) + 1)|0;
     $47 = ($46|0)<($29|0);
     if ($47) {
      $$0279 = $46;
     } else {
      break;
     }
    }
   }
   $48 = ((($0)) + 2324|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = ($49|0)>(0);
   if ($50) {
    $$0239272 = 0;$$0243271 = 0;$$1273 = 0;
    while(1) {
     $51 = (((($1)) + 16|0) + ($$1273<<2)|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)>($$0243271|0);
     $spec$select = $53 ? $52 : $$0243271;
     $spec$select248 = $53 ? $$1273 : $$0239272;
     $54 = (($$1273) + 1)|0;
     $55 = ($54|0)<($49|0);
     if ($55) {
      $$0239272 = $spec$select248;$$0243271 = $spec$select;$$1273 = $54;
     } else {
      $$0239$lcssa = $spec$select248;
      break;
     }
    }
   } else {
    $$0239$lcssa = 0;
   }
   $56 = ((($0)) + 2332|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = (((($0)) + 2772|0) + ($57<<2)|0);
   $59 = $49 << 2;
   $60 = (($59) + -4)|0;
   $61 = Math_imul($60, $57)|0;
   _memmove(($58|0),($5|0),($61|0))|0;
   $62 = HEAP32[$56>>2]|0;
   $63 = Math_imul($62, $$0239$lcssa)|0;
   $64 = (((($0)) + 4|0) + ($63<<2)|0);
   $65 = $62 << 2;
   _memcpy(($5|0),($64|0),($65|0))|0;
   $66 = HEAP32[$48>>2]|0;
   $67 = ($66|0)>(0);
   if ($67) {
    $68 = ((($0)) + 4148|0);
    $$pre = HEAP32[$68>>2]|0;
    $$2268 = 0;$72 = $$pre;
    while(1) {
     $69 = (((($1)) + 16|0) + ($$2268<<2)|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = (($70) - ($72))|0;
     $73 = $71 >> 16;
     $74 = ($73*4634)|0;
     $75 = $71 & 65535;
     $76 = ($75*4634)|0;
     $77 = $76 >>> 16;
     $78 = (($74) + ($72))|0;
     $79 = (($78) + ($77))|0;
     HEAP32[$68>>2] = $79;
     $80 = (($$2268) + 1)|0;
     $81 = ($80|0)<($66|0);
     if ($81) {
      $$2268 = $80;$72 = $79;
     } else {
      break;
     }
    }
   }
  }
  $$pr = HEAP32[$22>>2]|0;
  $82 = ($$pr|0)==(0);
  if ($82) {
   $450 = ((($0)) + 4084|0);
   $451 = ((($0)) + 2340|0);
   $452 = HEAP32[$451>>2]|0;
   $453 = $452 << 2;
   _memset(($450|0),0,($453|0))|0;
   STACKTOP = sp;return;
  }
 }
 $83 = (($3) + 16)|0;
 $84 = (_llvm_stacksave()|0);
 $$alloca_mul = $83<<2;
 $85 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $86 = ((($0)) + 4228|0);
 $87 = HEAP16[$86>>1]|0;
 $88 = $87 << 16 >> 16;
 $89 = $88 >> 16;
 $90 = ((($0)) + 4248|0);
 $91 = HEAP32[$90>>2]|0;
 $sext = $91 << 16;
 $92 = $sext >> 16;
 $93 = Math_imul($92, $89)|0;
 $94 = $88 & 65535;
 $95 = Math_imul($92, $94)|0;
 $96 = $95 >> 16;
 $97 = (($96) + ($93))|0;
 $98 = $91 >> 15;
 $99 = (($98) + 1)|0;
 $100 = $99 >> 1;
 $101 = Math_imul($100, $88)|0;
 $102 = (($97) + ($101))|0;
 $103 = ($102|0)>(2097151);
 $$phi$trans$insert = ((($0)) + 4148|0);
 $$pre283 = HEAP32[$$phi$trans$insert>>2]|0;
 $104 = ($$pre283|0)>(8388608);
 $or$cond = $103 | $104;
 $105 = $102 >> 16;
 if ($or$cond) {
  $106 = $$pre283 >> 16;
  $107 = Math_imul($106, $106)|0;
  $108 = $105 << 5;
  $109 = Math_imul($108, $105)|0;
  $110 = (($107) - ($109))|0;
  $111 = ($110|0)<(1);
  if ($111) {
   $$0242 = 0;
  } else {
   $112 = (Math_clz32(($110|0))|0);
   $113 = (24 - ($112))|0;
   $114 = (0 - ($113))|0;
   $115 = ($113|0)==(0);
   do {
    if ($115) {
     $$0$i$i$i254 = $110;
    } else {
     $116 = ($113|0)<(0);
     if ($116) {
      $117 = $110 << $114;
      $118 = (($113) + 32)|0;
      $119 = $110 >>> $118;
      $120 = $119 | $117;
      $$0$i$i$i254 = $120;
      break;
     } else {
      $121 = (32 - ($113))|0;
      $122 = $110 << $121;
      $123 = $110 >>> $113;
      $124 = $122 | $123;
      $$0$i$i$i254 = $124;
      break;
     }
    }
   } while(0);
   $125 = $112 & 1;
   $126 = ($125|0)==(0);
   $$$i255 = $126 ? 46214 : 32768;
   $127 = $112 >>> 1;
   $128 = $$$i255 >>> $127;
   $129 = $128 >> 16;
   $sext$i256 = $$0$i$i$i254 & 127;
   $sext10$i257 = Math_imul($sext$i256, 13959168)|0;
   $130 = $sext10$i257 >>> 16;
   $131 = Math_imul($130, $129)|0;
   $132 = $128 & 65535;
   $133 = Math_imul($130, $132)|0;
   $134 = (($131) + ($128))|0;
   $135 = $134 << 16;
   $136 = (($135) + ($133))|0;
   $phitmp264 = $136 & -65536;
   $$0242 = $phitmp264;
  }
 } else {
  $sext245 = $102 << 16;
  $137 = $sext245 >> 16;
  $138 = Math_imul($137, $105)|0;
  $139 = $102 & 65535;
  $140 = Math_imul($137, $139)|0;
  $141 = $140 >> 16;
  $142 = (($141) + ($138))|0;
  $143 = $102 >> 15;
  $144 = (($143) + 1)|0;
  $145 = $144 >> 1;
  $146 = Math_imul($145, $102)|0;
  $147 = (($142) + ($146))|0;
  $148 = $$pre283 >> 16;
  $sext246 = $$pre283 << 16;
  $149 = $sext246 >> 16;
  $150 = Math_imul($149, $148)|0;
  $151 = $$pre283 & 65535;
  $152 = Math_imul($149, $151)|0;
  $153 = $152 >> 16;
  $154 = $$pre283 >> 15;
  $155 = (($154) + 1)|0;
  $156 = $155 >> 1;
  $157 = Math_imul($156, $$pre283)|0;
  $158 = $147 << 5;
  $159 = (($150) - ($158))|0;
  $160 = (($159) + ($153))|0;
  $161 = (($160) + ($157))|0;
  $162 = ($161|0)<(1);
  if ($162) {
   $$0242 = 0;
  } else {
   $163 = (Math_clz32(($161|0))|0);
   $164 = (24 - ($163))|0;
   $165 = (0 - ($164))|0;
   $166 = ($164|0)==(0);
   do {
    if ($166) {
     $$0$i$i$i = $161;
    } else {
     $167 = ($164|0)<(0);
     if ($167) {
      $168 = $161 << $165;
      $169 = (($164) + 32)|0;
      $170 = $161 >>> $169;
      $171 = $170 | $168;
      $$0$i$i$i = $171;
      break;
     } else {
      $172 = (32 - ($164))|0;
      $173 = $161 << $172;
      $174 = $161 >>> $164;
      $175 = $173 | $174;
      $$0$i$i$i = $175;
      break;
     }
    }
   } while(0);
   $176 = $163 & 1;
   $177 = ($176|0)==(0);
   $$$i = $177 ? 46214 : 32768;
   $178 = $163 >>> 1;
   $179 = $$$i >>> $178;
   $180 = $179 >> 16;
   $sext$i = $$0$i$i$i & 127;
   $sext10$i = Math_imul($sext$i, 13959168)|0;
   $181 = $sext10$i >>> 16;
   $182 = Math_imul($181, $180)|0;
   $183 = $179 & 65535;
   $184 = Math_imul($181, $183)|0;
   $185 = $184 >>> 16;
   $186 = (($182) + ($179))|0;
   $187 = (($186) + ($185))|0;
   $phitmp = $187 << 8;
   $$0242 = $phitmp;
  }
 }
 $188 = ((($85)) + 64|0);
 $$0$i = 255;
 while(1) {
  $189 = ($$0$i|0)>($3|0);
  $190 = $$0$i >> 1;
  if ($189) {
   $$0$i = $190;
  } else {
   break;
  }
 }
 $191 = ((($0)) + 4152|0);
 $192 = HEAP32[$191>>2]|0;
 $193 = ($3|0)>(0);
 if ($193) {
  $$02124$i = $192;$$02223$i = 0;
  while(1) {
   $194 = Math_imul($$02124$i, 196314165)|0;
   $195 = (($194) + 907633515)|0;
   $196 = $195 >> 24;
   $197 = $196 & $$0$i;
   $198 = (((($0)) + 2772|0) + ($197<<2)|0);
   $199 = HEAP32[$198>>2]|0;
   $200 = (($188) + ($$02223$i<<2)|0);
   HEAP32[$200>>2] = $199;
   $201 = (($$02223$i) + 1)|0;
   $exitcond$i253 = ($201|0)==($3|0);
   if ($exitcond$i253) {
    $$021$lcssa$i = $195;
    break;
   } else {
    $$02124$i = $195;$$02223$i = $201;
   }
  }
 } else {
  $$021$lcssa$i = $192;
 }
 HEAP32[$191>>2] = $$021$lcssa$i;
 $202 = ((($0)) + 4052|0);
 $203 = ((($0)) + 2340|0);
 $204 = HEAP32[$203>>2]|0;
 $205 = ((($0)) + 4168|0);
 $206 = HEAP32[$205>>2]|0;
 _silk_NLSF2A($4,$202,$204,$206);
 $207 = ((($0)) + 4084|0);
 dest=$85; src=$207; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 if ($193) {
  $208 = HEAP32[$203>>2]|0;
  $209 = $208 >> 1;
  $210 = HEAP16[$4>>1]|0;
  $211 = $210 << 16 >> 16;
  $212 = ((($4)) + 2|0);
  $213 = HEAP16[$212>>1]|0;
  $214 = $213 << 16 >> 16;
  $215 = ((($4)) + 4|0);
  $216 = HEAP16[$215>>1]|0;
  $217 = $216 << 16 >> 16;
  $218 = ((($4)) + 6|0);
  $219 = HEAP16[$218>>1]|0;
  $220 = $219 << 16 >> 16;
  $221 = ((($4)) + 8|0);
  $222 = HEAP16[$221>>1]|0;
  $223 = $222 << 16 >> 16;
  $224 = ((($4)) + 10|0);
  $225 = HEAP16[$224>>1]|0;
  $226 = $225 << 16 >> 16;
  $227 = ((($4)) + 12|0);
  $228 = HEAP16[$227>>1]|0;
  $229 = $228 << 16 >> 16;
  $230 = ((($4)) + 14|0);
  $231 = HEAP16[$230>>1]|0;
  $232 = $231 << 16 >> 16;
  $233 = ((($4)) + 16|0);
  $234 = HEAP16[$233>>1]|0;
  $235 = $234 << 16 >> 16;
  $236 = ((($4)) + 18|0);
  $237 = HEAP16[$236>>1]|0;
  $238 = $237 << 16 >> 16;
  $239 = ($208|0)==(16);
  $240 = ((($4)) + 20|0);
  $241 = HEAP16[$240>>1]|0;
  $242 = $241 << 16 >> 16;
  $243 = ((($4)) + 22|0);
  $244 = HEAP16[$243>>1]|0;
  $245 = $244 << 16 >> 16;
  $246 = ((($4)) + 24|0);
  $247 = HEAP16[$246>>1]|0;
  $248 = $247 << 16 >> 16;
  $249 = ((($4)) + 26|0);
  $250 = HEAP16[$249>>1]|0;
  $251 = $250 << 16 >> 16;
  $252 = ((($4)) + 28|0);
  $253 = HEAP16[$252>>1]|0;
  $254 = $253 << 16 >> 16;
  $255 = ((($4)) + 30|0);
  $256 = HEAP16[$255>>1]|0;
  $257 = $256 << 16 >> 16;
  $sext247 = $$0242 << 10;
  $258 = $sext247 >> 16;
  $259 = $$0242 >> 21;
  $260 = (($259) + 1)|0;
  $261 = $260 >> 1;
  $$phi$trans$insert284 = ((($85)) + 60|0);
  $$pre285 = HEAP32[$$phi$trans$insert284>>2]|0;
  $$phi$trans$insert286 = ((($85)) + 52|0);
  $$pre287 = HEAP32[$$phi$trans$insert286>>2]|0;
  $$phi$trans$insert288 = ((($85)) + 44|0);
  $$pre289 = HEAP32[$$phi$trans$insert288>>2]|0;
  $$phi$trans$insert290 = ((($85)) + 36|0);
  $$pre291 = HEAP32[$$phi$trans$insert290>>2]|0;
  $$phi$trans$insert292 = ((($85)) + 28|0);
  $$pre293 = HEAP32[$$phi$trans$insert292>>2]|0;
  $$3267 = 0;$264 = $$pre285;$278 = $$pre287;$292 = $$pre289;$306 = $$pre291;$320 = $$pre293;
  while(1) {
   $262 = (($$3267) + 16)|0;
   $263 = $264 >> 16;
   $265 = Math_imul($263, $211)|0;
   $266 = $264 & 65535;
   $267 = Math_imul($266, $211)|0;
   $268 = $267 >> 16;
   $269 = (($$3267) + 14)|0;
   $270 = (($85) + ($269<<2)|0);
   $271 = HEAP32[$270>>2]|0;
   $272 = $271 >> 16;
   $273 = Math_imul($272, $214)|0;
   $274 = $271 & 65535;
   $275 = Math_imul($274, $214)|0;
   $276 = $275 >> 16;
   $277 = $278 >> 16;
   $279 = Math_imul($277, $217)|0;
   $280 = $278 & 65535;
   $281 = Math_imul($280, $217)|0;
   $282 = $281 >> 16;
   $283 = (($$3267) + 12)|0;
   $284 = (($85) + ($283<<2)|0);
   $285 = HEAP32[$284>>2]|0;
   $286 = $285 >> 16;
   $287 = Math_imul($286, $220)|0;
   $288 = $285 & 65535;
   $289 = Math_imul($288, $220)|0;
   $290 = $289 >> 16;
   $291 = $292 >> 16;
   $293 = Math_imul($291, $223)|0;
   $294 = $292 & 65535;
   $295 = Math_imul($294, $223)|0;
   $296 = $295 >> 16;
   $297 = (($$3267) + 10)|0;
   $298 = (($85) + ($297<<2)|0);
   $299 = HEAP32[$298>>2]|0;
   $300 = $299 >> 16;
   $301 = Math_imul($300, $226)|0;
   $302 = $299 & 65535;
   $303 = Math_imul($302, $226)|0;
   $304 = $303 >> 16;
   $305 = $306 >> 16;
   $307 = Math_imul($305, $229)|0;
   $308 = $306 & 65535;
   $309 = Math_imul($308, $229)|0;
   $310 = $309 >> 16;
   $311 = (($$3267) + 8)|0;
   $312 = (($85) + ($311<<2)|0);
   $313 = HEAP32[$312>>2]|0;
   $314 = $313 >> 16;
   $315 = Math_imul($314, $232)|0;
   $316 = $313 & 65535;
   $317 = Math_imul($316, $232)|0;
   $318 = $317 >> 16;
   $319 = $320 >> 16;
   $321 = Math_imul($319, $235)|0;
   $322 = $320 & 65535;
   $323 = Math_imul($322, $235)|0;
   $324 = $323 >> 16;
   $325 = (($$3267) + 6)|0;
   $326 = (($85) + ($325<<2)|0);
   $327 = HEAP32[$326>>2]|0;
   $328 = $327 >> 16;
   $329 = Math_imul($328, $238)|0;
   $330 = $327 & 65535;
   $331 = Math_imul($330, $238)|0;
   $332 = $331 >> 16;
   $333 = (($265) + ($209))|0;
   $334 = (($333) + ($268))|0;
   $335 = (($334) + ($273))|0;
   $336 = (($335) + ($276))|0;
   $337 = (($336) + ($279))|0;
   $338 = (($337) + ($282))|0;
   $339 = (($338) + ($287))|0;
   $340 = (($339) + ($290))|0;
   $341 = (($340) + ($293))|0;
   $342 = (($341) + ($296))|0;
   $343 = (($342) + ($301))|0;
   $344 = (($343) + ($304))|0;
   $345 = (($344) + ($307))|0;
   $346 = (($345) + ($310))|0;
   $347 = (($346) + ($315))|0;
   $348 = (($347) + ($318))|0;
   $349 = (($348) + ($321))|0;
   $350 = (($349) + ($324))|0;
   $351 = (($350) + ($329))|0;
   $352 = (($351) + ($332))|0;
   if ($239) {
    $353 = (($$3267) + 5)|0;
    $354 = (($85) + ($353<<2)|0);
    $355 = HEAP32[$354>>2]|0;
    $356 = $355 >> 16;
    $357 = Math_imul($356, $242)|0;
    $358 = $355 & 65535;
    $359 = Math_imul($358, $242)|0;
    $360 = $359 >> 16;
    $361 = (($$3267) + 4)|0;
    $362 = (($85) + ($361<<2)|0);
    $363 = HEAP32[$362>>2]|0;
    $364 = $363 >> 16;
    $365 = Math_imul($364, $245)|0;
    $366 = $363 & 65535;
    $367 = Math_imul($366, $245)|0;
    $368 = $367 >> 16;
    $369 = (($$3267) + 3)|0;
    $370 = (($85) + ($369<<2)|0);
    $371 = HEAP32[$370>>2]|0;
    $372 = $371 >> 16;
    $373 = Math_imul($372, $248)|0;
    $374 = $371 & 65535;
    $375 = Math_imul($374, $248)|0;
    $376 = $375 >> 16;
    $377 = (($$3267) + 2)|0;
    $378 = (($85) + ($377<<2)|0);
    $379 = HEAP32[$378>>2]|0;
    $380 = $379 >> 16;
    $381 = Math_imul($380, $251)|0;
    $382 = $379 & 65535;
    $383 = Math_imul($382, $251)|0;
    $384 = $383 >> 16;
    $385 = (($$3267) + 1)|0;
    $386 = (($85) + ($385<<2)|0);
    $387 = HEAP32[$386>>2]|0;
    $388 = $387 >> 16;
    $389 = Math_imul($388, $254)|0;
    $390 = $387 & 65535;
    $391 = Math_imul($390, $254)|0;
    $392 = $391 >> 16;
    $393 = (($85) + ($$3267<<2)|0);
    $394 = HEAP32[$393>>2]|0;
    $395 = $394 >> 16;
    $396 = Math_imul($395, $257)|0;
    $397 = $394 & 65535;
    $398 = Math_imul($397, $257)|0;
    $399 = $398 >> 16;
    $400 = (($357) + ($352))|0;
    $401 = (($400) + ($360))|0;
    $402 = (($401) + ($365))|0;
    $403 = (($402) + ($368))|0;
    $404 = (($403) + ($373))|0;
    $405 = (($404) + ($376))|0;
    $406 = (($405) + ($381))|0;
    $407 = (($406) + ($384))|0;
    $408 = (($407) + ($389))|0;
    $409 = (($408) + ($392))|0;
    $410 = (($409) + ($396))|0;
    $411 = (($410) + ($399))|0;
    $$0241 = $411;
   } else {
    $$0241 = $352;
   }
   $412 = (($85) + ($262<<2)|0);
   $413 = HEAP32[$412>>2]|0;
   $414 = ($$0241|0)>(-134217728);
   $415 = $414 ? $$0241 : -134217728;
   $416 = ($415|0)<(134217727);
   $417 = $416 ? $415 : 134217727;
   $418 = $417 << 4;
   $419 = (($418) + ($413))|0;
   $420 = ($419|0)>(-1);
   if ($420) {
    $421 = $418 & $413;
    $422 = ($421|0)<(0);
    $spec$select261 = $422 ? -2147483648 : $419;
    $425 = $spec$select261;
   } else {
    $423 = $418 | $413;
    $424 = ($423|0)>(-1);
    $spec$select262 = $424 ? 2147483647 : $419;
    $425 = $spec$select262;
   }
   HEAP32[$412>>2] = $425;
   $426 = (($2) + ($$3267<<1)|0);
   $427 = HEAP16[$426>>1]|0;
   $428 = $427 << 16 >> 16;
   $429 = $425 >> 16;
   $430 = Math_imul($429, $258)|0;
   $431 = $425 & 65535;
   $432 = Math_imul($431, $258)|0;
   $433 = $432 >> 16;
   $434 = Math_imul($425, $261)|0;
   $435 = (($430) + ($434))|0;
   $436 = (($435) + ($433))|0;
   $437 = $436 >> 7;
   $438 = (($437) + 1)|0;
   $439 = $438 >> 1;
   $440 = ($436|0)>(8388479);
   $441 = ($436|0)<(-8388736);
   $spec$select249 = $441 ? -32768 : $439;
   $442 = $440 ? 32767 : $spec$select249;
   $443 = (($442) + ($428))|0;
   $444 = ($443|0)>(-32768);
   $spec$select263 = $444 ? $443 : -32768;
   $445 = ($spec$select263|0)<(32767);
   $446 = $445 ? $spec$select263 : 32767;
   $447 = $446&65535;
   HEAP16[$426>>1] = $447;
   $448 = (($$3267) + 1)|0;
   $exitcond = ($448|0)==($3|0);
   if ($exitcond) {
    break;
   } else {
    $$3267 = $448;$264 = $425;$278 = $271;$292 = $285;$306 = $299;$320 = $313;
   }
  }
 }
 $449 = (($85) + ($3<<2)|0);
 dest=$207; src=$449; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 _llvm_stackrestore(($84|0));
 STACKTOP = sp;return;
}
function _silk_decode_core($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$0$$0$103 = 0, $$0356 = 0, $$0357424 = 0, $$0358413 = 0, $$0359421 = 0, $$0360430 = 0, $$0361 = 0, $$0362 = 0, $$0365 = 0, $$0366420 = 0, $$0369419 = 0, $$0431 = 0, $$1$i = 0, $$1$i378 = 0, $$10$$10$ = 0, $$10$sroa_idx388 = 0, $$12$$12$ = 0, $$12$sroa_idx389 = 0, $$1367412 = 0;
 var $$14$$14$ = 0, $$14$sroa_idx390 = 0, $$16$$16$123 = 0, $$16$sroa_idx = 0, $$18$$18$ = 0, $$18$sroa_idx391 = 0, $$2$$2$ = 0, $$2$neg = 0, $$2$neg410 = 0, $$2$sroa_idx384 = 0, $$20$$20$ = 0, $$20$sroa_idx392 = 0, $$22$$22$ = 0, $$22$sroa_idx393 = 0, $$2368 = 0, $$2368452 = 0, $$24$$24$ = 0, $$24$sroa_idx394 = 0, $$2409 = 0, $$26$$26$ = 0;
 var $$26$sroa_idx395 = 0, $$28$$28$ = 0, $$28$sroa_idx396 = 0, $$30$$30$ = 0, $$30$sroa_idx397 = 0, $$3408 = 0, $$4$$4$ = 0, $$4$sroa_idx385 = 0, $$4414 = 0, $$472 = 0, $$473 = 0, $$474 = 0, $$5416 = 0, $$6$$6$ = 0, $$6$sroa_idx386 = 0, $$8$$8$ = 0, $$8$sroa_idx387 = 0, $$alloca_mul = 0, $$alloca_mul2 = 0, $$alloca_mul4 = 0;
 var $$alloca_mul6 = 0, $$lcssa = 0, $$neg$i = 0, $$phi$trans$insert = 0, $$phi$trans$insert444 = 0, $$phi$trans$insert446 = 0, $$phi$trans$insert448 = 0, $$phi$trans$insert450 = 0, $$pre = 0, $$pre441 = 0, $$pre442 = 0, $$pre443 = 0, $$pre445 = 0, $$pre447 = 0, $$pre449 = 0, $$pre451 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0;
 var $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0;
 var $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0;
 var $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0;
 var $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond439 = 0;
 var $or$cond = 0, $or$cond3 = 0, $or$cond402 = 0, $or$cond456 = 0, $sext = 0, $sext372 = 0, $sext373 = 0, $sext374 = 0, $sext374$1 = 0, $sext374$10 = 0, $sext374$11 = 0, $sext374$12 = 0, $sext374$13 = 0, $sext374$14 = 0, $sext374$15 = 0, $sext374$2 = 0, $sext374$3 = 0, $sext374$4 = 0, $sext374$5 = 0, $sext374$6 = 0;
 var $sext374$7 = 0, $sext374$8 = 0, $sext374$9 = 0, $spec$select = 0, $spec$select$i = 0, $spec$select$i380 = 0, $spec$select3$i = 0, $spec$select3$i379 = 0, $spec$select403 = 0, $spec$select404 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 $6 = ((($0)) + 2336|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_llvm_stacksave()|0);
 $$alloca_mul = $7<<1;
 $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $10 = HEAP32[$6>>2]|0;
 $11 = ((($0)) + 2328|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + ($10))|0;
 $$alloca_mul2 = $13<<2;
 $14 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul2)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul2)|0)+15)&-16)|0);;
 $15 = ((($0)) + 2332|0);
 $16 = HEAP32[$15>>2]|0;
 $$alloca_mul4 = $16<<2;
 $17 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul4)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul4)|0)+15)&-16)|0);;
 $18 = (($16) + 16)|0;
 $$alloca_mul6 = $18<<2;
 $19 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 $20 = ((($0)) + 2765|0);
 $21 = ((($0)) + 2767|0);
 $22 = HEAP8[$21>>0]|0;
 $23 = ($22<<24>>24)<(4);
 $24 = ($12|0)>(0);
 if ($24) {
  $25 = ((($0)) + 2770|0);
  $26 = HEAP8[$25>>0]|0;
  $27 = $26 << 24 >> 24;
  $28 = HEAP8[$20>>0]|0;
  $29 = $28 << 24 >> 24;
  $30 = $29 >> 1;
  $31 = ((($0)) + 2766|0);
  $32 = HEAP8[$31>>0]|0;
  $33 = $32 << 24 >> 24;
  $34 = ((37356 + ($30<<2)|0) + ($33<<1)|0);
  $35 = HEAP16[$34>>1]|0;
  $36 = $35 << 16 >> 16;
  $37 = $36 << 4;
  $$0360430 = $27;$$0431 = 0;
  while(1) {
   $38 = Math_imul($$0360430, 196314165)|0;
   $39 = (($38) + 907633515)|0;
   $40 = (($3) + ($$0431<<1)|0);
   $41 = HEAP16[$40>>1]|0;
   $42 = $41 << 16 >> 16;
   $43 = $42 << 14;
   $44 = (((($0)) + 4|0) + ($$0431<<2)|0);
   HEAP32[$44>>2] = $43;
   $45 = ($41<<16>>16)>(0);
   if ($45) {
    $46 = (($43) + -1280)|0;
    $$sink = $46;
    label = 7;
   } else {
    $47 = ($41<<16>>16)<(0);
    if ($47) {
     $48 = $43 | 1280;
     $$sink = $48;
     label = 7;
    } else {
     $50 = $43;
    }
   }
   if ((label|0) == 7) {
    label = 0;
    HEAP32[$44>>2] = $$sink;
    $50 = $$sink;
   }
   $49 = (($50) + ($37))|0;
   $51 = ($39|0)<(0);
   $52 = (0 - ($49))|0;
   $spec$select = $51 ? $52 : $49;
   HEAP32[$44>>2] = $spec$select;
   $53 = (($39) + ($42))|0;
   $54 = (($$0431) + 1)|0;
   $55 = HEAP32[$11>>2]|0;
   $56 = ($54|0)<($55|0);
   if ($56) {
    $$0360430 = $53;$$0431 = $54;
   } else {
    break;
   }
  }
 }
 $57 = ((($0)) + 1284|0);
 dest=$19; src=$57; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $58 = ((($0)) + 2324|0);
 $59 = HEAP32[$58>>2]|0;
 $60 = ($59|0)>(0);
 if (!($60)) {
  dest=$57; src=$19; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  _llvm_stackrestore(($8|0));
  STACKTOP = sp;return;
 }
 $61 = HEAP32[$6>>2]|0;
 $62 = ((($0)) + 4|0);
 $63 = ((($0)) + 2340|0);
 $64 = ((($0)) + 4160|0);
 $65 = ((($0)) + 4164|0);
 $$2$sroa_idx384 = ((($5)) + 2|0);
 $$4$sroa_idx385 = ((($5)) + 4|0);
 $$6$sroa_idx386 = ((($5)) + 6|0);
 $$8$sroa_idx387 = ((($5)) + 8|0);
 $$10$sroa_idx388 = ((($5)) + 10|0);
 $$12$sroa_idx389 = ((($5)) + 12|0);
 $$14$sroa_idx390 = ((($5)) + 14|0);
 $$16$sroa_idx = ((($5)) + 16|0);
 $$18$sroa_idx391 = ((($5)) + 18|0);
 $$20$sroa_idx392 = ((($5)) + 20|0);
 $$22$sroa_idx393 = ((($5)) + 22|0);
 $$24$sroa_idx394 = ((($5)) + 24|0);
 $$26$sroa_idx395 = ((($5)) + 26|0);
 $$28$sroa_idx396 = ((($5)) + 28|0);
 $$30$sroa_idx397 = ((($5)) + 30|0);
 $66 = ((($0)) + 2308|0);
 $67 = ((($1)) + 136|0);
 $68 = ((($19)) + 4|0);
 $69 = ((($19)) + 8|0);
 $70 = ((($19)) + 12|0);
 $71 = ((($19)) + 16|0);
 $72 = ((($19)) + 20|0);
 $73 = ((($19)) + 24|0);
 $74 = ((($19)) + 28|0);
 $75 = ((($19)) + 32|0);
 $76 = ((($19)) + 36|0);
 $77 = ((($19)) + 40|0);
 $78 = ((($19)) + 44|0);
 $79 = ((($19)) + 48|0);
 $80 = ((($19)) + 52|0);
 $81 = ((($19)) + 56|0);
 $82 = ((($19)) + 60|0);
 $$phi$trans$insert444 = ((($19)) + 60|0);
 $$phi$trans$insert446 = ((($19)) + 44|0);
 $$phi$trans$insert448 = ((($19)) + 36|0);
 $$phi$trans$insert450 = ((($19)) + 28|0);
 $$0357424 = $62;$$0359421 = 0;$$0366420 = $61;$$0369419 = $2;
 while(1) {
  $83 = $$0359421 >>> 1;
  $84 = (((($1)) + 32|0) + ($83<<5)|0);
  $85 = HEAP32[$63>>2]|0;
  $86 = $85 << 1;
  _memcpy(($5|0),($84|0),($86|0))|0;
  $87 = ($$0359421*5)|0;
  $88 = (((($1)) + 96|0) + ($87<<1)|0);
  $89 = HEAP8[$20>>0]|0;
  $90 = (((($1)) + 16|0) + ($$0359421<<2)|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = $91 >>> 6;
  $93 = ($91|0)>(0);
  $94 = (0 - ($91))|0;
  $95 = $93 ? $91 : $94;
  $96 = (Math_clz32(($95|0))|0);
  $97 = (($96) + -1)|0;
  $98 = $91 << $97;
  $99 = $98 >> 16;
  $100 = (536870911 / ($99|0))&-1;
  $101 = $100 << 16;
  $102 = $101 >> 16;
  $103 = Math_imul($99, $102)|0;
  $104 = $98 & 65535;
  $105 = Math_imul($104, $102)|0;
  $106 = $105 >> 16;
  $107 = (($106) + ($103))|0;
  $108 = $107 << 3;
  $109 = (0 - ($108))|0;
  $110 = $109 >> 16;
  $111 = Math_imul($110, $102)|0;
  $112 = $109 & 65528;
  $113 = Math_imul($112, $102)|0;
  $114 = $113 >> 16;
  $115 = $100 >> 15;
  $116 = (($115) + 1)|0;
  $117 = $116 >> 1;
  $118 = Math_imul($117, $109)|0;
  $119 = (($118) + ($101))|0;
  $120 = (($119) + ($111))|0;
  $121 = (($120) + ($114))|0;
  $122 = (62 - ($96))|0;
  $123 = ($122|0)<(48);
  if ($123) {
   $124 = (47 - ($122))|0;
   $125 = -2147483648 >> $124;
   $126 = 2147483647 >>> $124;
   $127 = ($125|0)>($126|0);
   $$ = $127 ? $125 : $126;
   $$472 = $127 ? $126 : $125;
   $128 = ($121|0)>($$|0);
   $129 = ($121|0)<($$472|0);
   $$1$i = $129 ? $$472 : $121;
   $spec$select3$i = $128 ? $$ : $$1$i;
   $130 = $spec$select3$i << $124;
   $387 = $130;
  } else {
   $131 = (($122) + -47)|0;
   $132 = ($122|0)<(79);
   $133 = $121 >> $131;
   $spec$select$i = $132 ? $133 : 0;
   $387 = $spec$select$i;
  }
  $134 = HEAP32[$0>>2]|0;
  $135 = ($91|0)==($134|0);
  if ($135) {
   $$0361 = 65536;
  } else {
   $136 = ($134|0)>(0);
   $137 = (0 - ($134))|0;
   $138 = $136 ? $134 : $137;
   $139 = (Math_clz32(($138|0))|0);
   $140 = (($139) + -1)|0;
   $141 = $134 << $140;
   $142 = $141 >> 16;
   $143 = Math_imul($142, $102)|0;
   $144 = $141 & 65535;
   $145 = Math_imul($144, $102)|0;
   $146 = $145 >> 16;
   $147 = (($146) + ($143))|0;
   $148 = ($98|0)<(0);
   $149 = $148 << 31 >> 31;
   $150 = ($147|0)<(0);
   $151 = $150 << 31 >> 31;
   $152 = (___muldi3(($147|0),($151|0),($98|0),($149|0))|0);
   $153 = tempRet0;
   $154 = (_bitshift64Lshr(($152|0),($153|0),29)|0);
   $155 = tempRet0;
   $156 = $154 & -8;
   $157 = (($141) - ($156))|0;
   $158 = $157 >> 16;
   $159 = Math_imul($158, $102)|0;
   $160 = $157 & 65535;
   $161 = Math_imul($160, $102)|0;
   $162 = $161 >> 16;
   $163 = (($159) + ($147))|0;
   $164 = (($163) + ($162))|0;
   $$neg$i = (1 - ($96))|0;
   $165 = (($$neg$i) + 28)|0;
   $166 = (($165) + ($139))|0;
   $167 = ($166|0)<(16);
   if ($167) {
    $168 = (16 - ($166))|0;
    $169 = -2147483648 >> $168;
    $170 = 2147483647 >>> $168;
    $171 = ($169|0)>($170|0);
    $$473 = $171 ? $169 : $170;
    $$474 = $171 ? $170 : $169;
    $172 = ($164|0)>($$473|0);
    $173 = ($164|0)<($$474|0);
    $$1$i378 = $173 ? $$474 : $164;
    $spec$select3$i379 = $172 ? $$473 : $$1$i378;
    $174 = $spec$select3$i379 << $168;
    $179 = $174;
   } else {
    $175 = (($166) + -16)|0;
    $176 = ($166|0)<(48);
    $177 = $164 >> $175;
    $spec$select$i380 = $176 ? $177 : 0;
    $179 = $spec$select$i380;
   }
   $178 = $179 >> 16;
   $180 = $179 & 65535;
   $181 = HEAP32[$19>>2]|0;
   $sext374 = $181 << 16;
   $182 = $sext374 >> 16;
   $183 = Math_imul($182, $178)|0;
   $184 = Math_imul($182, $180)|0;
   $185 = $184 >> 16;
   $186 = (($185) + ($183))|0;
   $187 = $181 >> 15;
   $188 = (($187) + 1)|0;
   $189 = $188 >> 1;
   $190 = Math_imul($189, $179)|0;
   $191 = (($186) + ($190))|0;
   HEAP32[$19>>2] = $191;
   $192 = HEAP32[$68>>2]|0;
   $sext374$1 = $192 << 16;
   $193 = $sext374$1 >> 16;
   $194 = Math_imul($193, $178)|0;
   $195 = Math_imul($193, $180)|0;
   $196 = $195 >> 16;
   $197 = (($196) + ($194))|0;
   $198 = $192 >> 15;
   $199 = (($198) + 1)|0;
   $200 = $199 >> 1;
   $201 = Math_imul($200, $179)|0;
   $202 = (($197) + ($201))|0;
   HEAP32[$68>>2] = $202;
   $203 = HEAP32[$69>>2]|0;
   $sext374$2 = $203 << 16;
   $204 = $sext374$2 >> 16;
   $205 = Math_imul($204, $178)|0;
   $206 = Math_imul($204, $180)|0;
   $207 = $206 >> 16;
   $208 = (($207) + ($205))|0;
   $209 = $203 >> 15;
   $210 = (($209) + 1)|0;
   $211 = $210 >> 1;
   $212 = Math_imul($211, $179)|0;
   $213 = (($208) + ($212))|0;
   HEAP32[$69>>2] = $213;
   $214 = HEAP32[$70>>2]|0;
   $sext374$3 = $214 << 16;
   $215 = $sext374$3 >> 16;
   $216 = Math_imul($215, $178)|0;
   $217 = Math_imul($215, $180)|0;
   $218 = $217 >> 16;
   $219 = (($218) + ($216))|0;
   $220 = $214 >> 15;
   $221 = (($220) + 1)|0;
   $222 = $221 >> 1;
   $223 = Math_imul($222, $179)|0;
   $224 = (($219) + ($223))|0;
   HEAP32[$70>>2] = $224;
   $225 = HEAP32[$71>>2]|0;
   $sext374$4 = $225 << 16;
   $226 = $sext374$4 >> 16;
   $227 = Math_imul($226, $178)|0;
   $228 = Math_imul($226, $180)|0;
   $229 = $228 >> 16;
   $230 = (($229) + ($227))|0;
   $231 = $225 >> 15;
   $232 = (($231) + 1)|0;
   $233 = $232 >> 1;
   $234 = Math_imul($233, $179)|0;
   $235 = (($230) + ($234))|0;
   HEAP32[$71>>2] = $235;
   $236 = HEAP32[$72>>2]|0;
   $sext374$5 = $236 << 16;
   $237 = $sext374$5 >> 16;
   $238 = Math_imul($237, $178)|0;
   $239 = Math_imul($237, $180)|0;
   $240 = $239 >> 16;
   $241 = (($240) + ($238))|0;
   $242 = $236 >> 15;
   $243 = (($242) + 1)|0;
   $244 = $243 >> 1;
   $245 = Math_imul($244, $179)|0;
   $246 = (($241) + ($245))|0;
   HEAP32[$72>>2] = $246;
   $247 = HEAP32[$73>>2]|0;
   $sext374$6 = $247 << 16;
   $248 = $sext374$6 >> 16;
   $249 = Math_imul($248, $178)|0;
   $250 = Math_imul($248, $180)|0;
   $251 = $250 >> 16;
   $252 = (($251) + ($249))|0;
   $253 = $247 >> 15;
   $254 = (($253) + 1)|0;
   $255 = $254 >> 1;
   $256 = Math_imul($255, $179)|0;
   $257 = (($252) + ($256))|0;
   HEAP32[$73>>2] = $257;
   $258 = HEAP32[$74>>2]|0;
   $sext374$7 = $258 << 16;
   $259 = $sext374$7 >> 16;
   $260 = Math_imul($259, $178)|0;
   $261 = Math_imul($259, $180)|0;
   $262 = $261 >> 16;
   $263 = (($262) + ($260))|0;
   $264 = $258 >> 15;
   $265 = (($264) + 1)|0;
   $266 = $265 >> 1;
   $267 = Math_imul($266, $179)|0;
   $268 = (($263) + ($267))|0;
   HEAP32[$74>>2] = $268;
   $269 = HEAP32[$75>>2]|0;
   $sext374$8 = $269 << 16;
   $270 = $sext374$8 >> 16;
   $271 = Math_imul($270, $178)|0;
   $272 = Math_imul($270, $180)|0;
   $273 = $272 >> 16;
   $274 = (($273) + ($271))|0;
   $275 = $269 >> 15;
   $276 = (($275) + 1)|0;
   $277 = $276 >> 1;
   $278 = Math_imul($277, $179)|0;
   $279 = (($274) + ($278))|0;
   HEAP32[$75>>2] = $279;
   $280 = HEAP32[$76>>2]|0;
   $sext374$9 = $280 << 16;
   $281 = $sext374$9 >> 16;
   $282 = Math_imul($281, $178)|0;
   $283 = Math_imul($281, $180)|0;
   $284 = $283 >> 16;
   $285 = (($284) + ($282))|0;
   $286 = $280 >> 15;
   $287 = (($286) + 1)|0;
   $288 = $287 >> 1;
   $289 = Math_imul($288, $179)|0;
   $290 = (($285) + ($289))|0;
   HEAP32[$76>>2] = $290;
   $291 = HEAP32[$77>>2]|0;
   $sext374$10 = $291 << 16;
   $292 = $sext374$10 >> 16;
   $293 = Math_imul($292, $178)|0;
   $294 = Math_imul($292, $180)|0;
   $295 = $294 >> 16;
   $296 = (($295) + ($293))|0;
   $297 = $291 >> 15;
   $298 = (($297) + 1)|0;
   $299 = $298 >> 1;
   $300 = Math_imul($299, $179)|0;
   $301 = (($296) + ($300))|0;
   HEAP32[$77>>2] = $301;
   $302 = HEAP32[$78>>2]|0;
   $sext374$11 = $302 << 16;
   $303 = $sext374$11 >> 16;
   $304 = Math_imul($303, $178)|0;
   $305 = Math_imul($303, $180)|0;
   $306 = $305 >> 16;
   $307 = (($306) + ($304))|0;
   $308 = $302 >> 15;
   $309 = (($308) + 1)|0;
   $310 = $309 >> 1;
   $311 = Math_imul($310, $179)|0;
   $312 = (($307) + ($311))|0;
   HEAP32[$78>>2] = $312;
   $313 = HEAP32[$79>>2]|0;
   $sext374$12 = $313 << 16;
   $314 = $sext374$12 >> 16;
   $315 = Math_imul($314, $178)|0;
   $316 = Math_imul($314, $180)|0;
   $317 = $316 >> 16;
   $318 = (($317) + ($315))|0;
   $319 = $313 >> 15;
   $320 = (($319) + 1)|0;
   $321 = $320 >> 1;
   $322 = Math_imul($321, $179)|0;
   $323 = (($318) + ($322))|0;
   HEAP32[$79>>2] = $323;
   $324 = HEAP32[$80>>2]|0;
   $sext374$13 = $324 << 16;
   $325 = $sext374$13 >> 16;
   $326 = Math_imul($325, $178)|0;
   $327 = Math_imul($325, $180)|0;
   $328 = $327 >> 16;
   $329 = (($328) + ($326))|0;
   $330 = $324 >> 15;
   $331 = (($330) + 1)|0;
   $332 = $331 >> 1;
   $333 = Math_imul($332, $179)|0;
   $334 = (($329) + ($333))|0;
   HEAP32[$80>>2] = $334;
   $335 = HEAP32[$81>>2]|0;
   $sext374$14 = $335 << 16;
   $336 = $sext374$14 >> 16;
   $337 = Math_imul($336, $178)|0;
   $338 = Math_imul($336, $180)|0;
   $339 = $338 >> 16;
   $340 = (($339) + ($337))|0;
   $341 = $335 >> 15;
   $342 = (($341) + 1)|0;
   $343 = $342 >> 1;
   $344 = Math_imul($343, $179)|0;
   $345 = (($340) + ($344))|0;
   HEAP32[$81>>2] = $345;
   $346 = HEAP32[$82>>2]|0;
   $sext374$15 = $346 << 16;
   $347 = $sext374$15 >> 16;
   $348 = Math_imul($347, $178)|0;
   $349 = Math_imul($347, $180)|0;
   $350 = $349 >> 16;
   $351 = (($350) + ($348))|0;
   $352 = $346 >> 15;
   $353 = (($352) + 1)|0;
   $354 = $353 >> 1;
   $355 = Math_imul($354, $179)|0;
   $356 = (($351) + ($355))|0;
   HEAP32[$82>>2] = $356;
   $$0361 = $179;
  }
  HEAP32[$0>>2] = $91;
  $357 = HEAP32[$64>>2]|0;
  $358 = ($357|0)==(0);
  if ($358) {
   label = 23;
  } else {
   $359 = HEAP32[$65>>2]|0;
   $360 = ($359|0)==(2);
   if ($360) {
    $361 = ($89<<24>>24)!=(2);
    $362 = ($$0359421>>>0)<(2);
    $or$cond = $362 & $361;
    if ($or$cond) {
     $363 = (($1) + ($$0359421<<2)|0);
     $364 = ((($88)) + 4|0);
     ;HEAP16[$88>>1]=0|0;HEAP16[$88+2>>1]=0|0;HEAP16[$88+4>>1]=0|0;HEAP16[$88+6>>1]=0|0;HEAP16[$88+8>>1]=0|0;
     HEAP16[$364>>1] = 4096;
     $365 = HEAP32[$66>>2]|0;
     HEAP32[$363>>2] = $365;
     $372 = $365;
     label = 26;
    } else {
     label = 23;
    }
   } else {
    label = 23;
   }
  }
  do {
   if ((label|0) == 23) {
    label = 0;
    $366 = ($89<<24>>24)==(2);
    if ($366) {
     $$phi$trans$insert = (($1) + ($$0359421<<2)|0);
     $$pre = HEAP32[$$phi$trans$insert>>2]|0;
     $372 = $$pre;
     label = 26;
     break;
    } else {
     $$pre443 = HEAP32[$15>>2]|0;
     $$0356 = $$0357424;$$2368 = $$0366420;$509 = $$pre443;
     label = 40;
     break;
    }
   }
  } while(0);
  if ((label|0) == 26) {
   label = 0;
   $367 = ($$0359421|0)==(0);
   $368 = ($$0359421|0)==(2);
   $or$cond3 = $23 & $368;
   $or$cond402 = $367 | $or$cond3;
   if ($or$cond402) {
    $369 = HEAP32[$6>>2]|0;
    $370 = HEAP32[$63>>2]|0;
    $371 = (-2 - ($372))|0;
    $373 = (($371) + ($369))|0;
    $374 = (($373) - ($370))|0;
    if ($368) {
     $375 = (((($0)) + 1348|0) + ($369<<1)|0);
     $376 = HEAP32[$15>>2]|0;
     $377 = $376 << 2;
     _memcpy(($375|0),($2|0),($377|0))|0;
     $$pre441 = HEAP32[$6>>2]|0;
     $$pre442 = HEAP32[$63>>2]|0;
     $384 = $$pre441;$385 = $$pre442;
    } else {
     $384 = $369;$385 = $370;
    }
    $378 = (($9) + ($374<<1)|0);
    $379 = HEAP32[$15>>2]|0;
    $380 = Math_imul($379, $$0359421)|0;
    $381 = (($380) + ($374))|0;
    $382 = (((($0)) + 1348|0) + ($381<<1)|0);
    $383 = (($384) - ($374))|0;
    _silk_LPC_analysis_filter($378,$382,$84,$383,$385,$4);
    if ($367) {
     $386 = $387 >> 16;
     $388 = HEAP32[$67>>2]|0;
     $sext373 = $388 << 16;
     $389 = $sext373 >> 16;
     $390 = Math_imul($389, $386)|0;
     $391 = $387 & 65535;
     $392 = Math_imul($389, $391)|0;
     $393 = $392 >> 16;
     $394 = (($393) + ($390))|0;
     $395 = $394 << 2;
     $$0362 = $395;
    } else {
     $$0362 = $387;
    }
    $396 = ($372|0)>(-2);
    if ($396) {
     $397 = $$0362 >> 16;
     $398 = HEAP32[$6>>2]|0;
     $399 = $$0362 & 65535;
     $400 = (($$0366420) + -1)|0;
     $401 = (($372) + 1)|0;
     $$2$neg410 = 0;$$2409 = 0;
     while(1) {
      $402 = (($$2$neg410) + -1)|0;
      $403 = (($402) + ($398))|0;
      $404 = (($9) + ($403<<1)|0);
      $405 = HEAP16[$404>>1]|0;
      $406 = $405 << 16 >> 16;
      $407 = Math_imul($397, $406)|0;
      $408 = Math_imul($399, $406)|0;
      $409 = $408 >> 16;
      $410 = (($409) + ($407))|0;
      $411 = (($400) + ($$2$neg410))|0;
      $412 = (($14) + ($411<<2)|0);
      HEAP32[$412>>2] = $410;
      $413 = (($$2409) + 1)|0;
      $$2$neg = $$2409 ^ -1;
      $exitcond439 = ($$2409|0)==($401|0);
      if ($exitcond439) {
       break;
      } else {
       $$2$neg410 = $$2$neg;$$2409 = $413;
      }
     }
    }
   } else {
    $414 = ($$0361|0)!=(65536);
    $415 = ($372|0)>(-2);
    $or$cond456 = $414 & $415;
    if ($or$cond456) {
     $416 = $$0361 >> 16;
     $417 = (($$0366420) + -1)|0;
     $418 = $$0361 & 65535;
     $419 = (($372) + 1)|0;
     $$3408 = 0;
     while(1) {
      $420 = (($417) - ($$3408))|0;
      $421 = (($14) + ($420<<2)|0);
      $422 = HEAP32[$421>>2]|0;
      $sext372 = $422 << 16;
      $423 = $sext372 >> 16;
      $424 = Math_imul($423, $416)|0;
      $425 = Math_imul($423, $418)|0;
      $426 = $425 >> 16;
      $427 = (($426) + ($424))|0;
      $428 = $422 >> 15;
      $429 = (($428) + 1)|0;
      $430 = $429 >> 1;
      $431 = Math_imul($430, $$0361)|0;
      $432 = (($427) + ($431))|0;
      HEAP32[$421>>2] = $432;
      $433 = (($$3408) + 1)|0;
      $exitcond = ($$3408|0)==($419|0);
      if ($exitcond) {
       break;
      } else {
       $$3408 = $433;
      }
     }
    }
   }
   $434 = HEAP32[$15>>2]|0;
   $435 = ($434|0)>(0);
   if ($435) {
    $436 = (($$0366420) + 2)|0;
    $437 = (($436) - ($372))|0;
    $438 = (($14) + ($437<<2)|0);
    $439 = HEAP16[$88>>1]|0;
    $440 = $439 << 16 >> 16;
    $441 = ((($88)) + 2|0);
    $442 = HEAP16[$441>>1]|0;
    $443 = $442 << 16 >> 16;
    $444 = ((($88)) + 4|0);
    $445 = HEAP16[$444>>1]|0;
    $446 = $445 << 16 >> 16;
    $447 = ((($88)) + 6|0);
    $448 = HEAP16[$447>>1]|0;
    $449 = $448 << 16 >> 16;
    $450 = ((($88)) + 8|0);
    $451 = HEAP16[$450>>1]|0;
    $452 = $451 << 16 >> 16;
    $$0358413 = $438;$$1367412 = $$0366420;$$4414 = 0;
    while(1) {
     $453 = HEAP32[$$0358413>>2]|0;
     $454 = $453 >> 16;
     $455 = Math_imul($454, $440)|0;
     $456 = $453 & 65535;
     $457 = Math_imul($456, $440)|0;
     $458 = $457 >> 16;
     $459 = ((($$0358413)) + -4|0);
     $460 = HEAP32[$459>>2]|0;
     $461 = $460 >> 16;
     $462 = Math_imul($461, $443)|0;
     $463 = $460 & 65535;
     $464 = Math_imul($463, $443)|0;
     $465 = $464 >> 16;
     $466 = ((($$0358413)) + -8|0);
     $467 = HEAP32[$466>>2]|0;
     $468 = $467 >> 16;
     $469 = Math_imul($468, $446)|0;
     $470 = $467 & 65535;
     $471 = Math_imul($470, $446)|0;
     $472 = $471 >> 16;
     $473 = ((($$0358413)) + -12|0);
     $474 = HEAP32[$473>>2]|0;
     $475 = $474 >> 16;
     $476 = Math_imul($475, $449)|0;
     $477 = $474 & 65535;
     $478 = Math_imul($477, $449)|0;
     $479 = $478 >> 16;
     $480 = ((($$0358413)) + -16|0);
     $481 = HEAP32[$480>>2]|0;
     $482 = $481 >> 16;
     $483 = Math_imul($482, $452)|0;
     $484 = $481 & 65535;
     $485 = Math_imul($484, $452)|0;
     $486 = $485 >> 16;
     $487 = (($455) + 2)|0;
     $488 = (($487) + ($458))|0;
     $489 = (($488) + ($462))|0;
     $490 = (($489) + ($465))|0;
     $491 = (($490) + ($469))|0;
     $492 = (($491) + ($472))|0;
     $493 = (($492) + ($476))|0;
     $494 = (($493) + ($479))|0;
     $495 = (($494) + ($483))|0;
     $496 = (($495) + ($486))|0;
     $497 = ((($$0358413)) + 4|0);
     $498 = (($$0357424) + ($$4414<<2)|0);
     $499 = HEAP32[$498>>2]|0;
     $500 = $496 << 1;
     $501 = (($500) + ($499))|0;
     $502 = (($17) + ($$4414<<2)|0);
     HEAP32[$502>>2] = $501;
     $503 = $501 << 1;
     $504 = (($14) + ($$1367412<<2)|0);
     HEAP32[$504>>2] = $503;
     $505 = (($$1367412) + 1)|0;
     $506 = (($$4414) + 1)|0;
     $507 = ($506|0)<($434|0);
     if ($507) {
      $$0358413 = $497;$$1367412 = $505;$$4414 = $506;
     } else {
      $$0356 = $17;$$2368 = $505;$509 = $434;
      label = 40;
      break;
     }
    }
   } else {
    $$2368452 = $$0366420;$$lcssa = $434;
   }
  }
  if ((label|0) == 40) {
   label = 0;
   $508 = ($509|0)>(0);
   if ($508) {
    $sext = $92 << 16;
    $510 = $sext >> 16;
    $511 = $91 >> 21;
    $512 = (($511) + 1)|0;
    $513 = $512 >> 1;
    $$pre445 = HEAP32[$$phi$trans$insert444>>2]|0;
    $$pre447 = HEAP32[$$phi$trans$insert446>>2]|0;
    $$pre449 = HEAP32[$$phi$trans$insert448>>2]|0;
    $$pre451 = HEAP32[$$phi$trans$insert450>>2]|0;
    $$5416 = 0;$518 = $$pre445;$552 = $$pre447;$568 = $$pre449;$584 = $$pre451;
    while(1) {
     $514 = HEAP32[$63>>2]|0;
     $515 = $514 >> 1;
     $516 = (($$5416) + 16)|0;
     $517 = $518 >> 16;
     $$0$$0$103 = HEAP16[$5>>1]|0;
     $519 = $$0$$0$103 << 16 >> 16;
     $520 = Math_imul($517, $519)|0;
     $521 = $518 & 65535;
     $522 = Math_imul($521, $519)|0;
     $523 = $522 >> 16;
     $524 = (($$5416) + 14)|0;
     $525 = (($19) + ($524<<2)|0);
     $526 = HEAP32[$525>>2]|0;
     $527 = $526 >> 16;
     $$2$$2$ = HEAP16[$$2$sroa_idx384>>1]|0;
     $528 = $$2$$2$ << 16 >> 16;
     $529 = Math_imul($527, $528)|0;
     $530 = $526 & 65535;
     $531 = Math_imul($530, $528)|0;
     $532 = $531 >> 16;
     $533 = (($$5416) + 13)|0;
     $534 = (($19) + ($533<<2)|0);
     $535 = HEAP32[$534>>2]|0;
     $536 = $535 >> 16;
     $$4$$4$ = HEAP16[$$4$sroa_idx385>>1]|0;
     $537 = $$4$$4$ << 16 >> 16;
     $538 = Math_imul($536, $537)|0;
     $539 = $535 & 65535;
     $540 = Math_imul($539, $537)|0;
     $541 = $540 >> 16;
     $542 = (($$5416) + 12)|0;
     $543 = (($19) + ($542<<2)|0);
     $544 = HEAP32[$543>>2]|0;
     $545 = $544 >> 16;
     $$6$$6$ = HEAP16[$$6$sroa_idx386>>1]|0;
     $546 = $$6$$6$ << 16 >> 16;
     $547 = Math_imul($545, $546)|0;
     $548 = $544 & 65535;
     $549 = Math_imul($548, $546)|0;
     $550 = $549 >> 16;
     $551 = $552 >> 16;
     $$8$$8$ = HEAP16[$$8$sroa_idx387>>1]|0;
     $553 = $$8$$8$ << 16 >> 16;
     $554 = Math_imul($551, $553)|0;
     $555 = $552 & 65535;
     $556 = Math_imul($555, $553)|0;
     $557 = $556 >> 16;
     $558 = (($$5416) + 10)|0;
     $559 = (($19) + ($558<<2)|0);
     $560 = HEAP32[$559>>2]|0;
     $561 = $560 >> 16;
     $$10$$10$ = HEAP16[$$10$sroa_idx388>>1]|0;
     $562 = $$10$$10$ << 16 >> 16;
     $563 = Math_imul($561, $562)|0;
     $564 = $560 & 65535;
     $565 = Math_imul($564, $562)|0;
     $566 = $565 >> 16;
     $567 = $568 >> 16;
     $$12$$12$ = HEAP16[$$12$sroa_idx389>>1]|0;
     $569 = $$12$$12$ << 16 >> 16;
     $570 = Math_imul($567, $569)|0;
     $571 = $568 & 65535;
     $572 = Math_imul($571, $569)|0;
     $573 = $572 >> 16;
     $574 = (($$5416) + 8)|0;
     $575 = (($19) + ($574<<2)|0);
     $576 = HEAP32[$575>>2]|0;
     $577 = $576 >> 16;
     $$14$$14$ = HEAP16[$$14$sroa_idx390>>1]|0;
     $578 = $$14$$14$ << 16 >> 16;
     $579 = Math_imul($577, $578)|0;
     $580 = $576 & 65535;
     $581 = Math_imul($580, $578)|0;
     $582 = $581 >> 16;
     $583 = $584 >> 16;
     $$16$$16$123 = HEAP16[$$16$sroa_idx>>1]|0;
     $585 = $$16$$16$123 << 16 >> 16;
     $586 = Math_imul($583, $585)|0;
     $587 = $584 & 65535;
     $588 = Math_imul($587, $585)|0;
     $589 = $588 >> 16;
     $590 = (($$5416) + 6)|0;
     $591 = (($19) + ($590<<2)|0);
     $592 = HEAP32[$591>>2]|0;
     $593 = $592 >> 16;
     $$18$$18$ = HEAP16[$$18$sroa_idx391>>1]|0;
     $594 = $$18$$18$ << 16 >> 16;
     $595 = Math_imul($593, $594)|0;
     $596 = $592 & 65535;
     $597 = Math_imul($596, $594)|0;
     $598 = $597 >> 16;
     $599 = (($520) + ($515))|0;
     $600 = (($599) + ($523))|0;
     $601 = (($600) + ($529))|0;
     $602 = (($601) + ($532))|0;
     $603 = (($602) + ($538))|0;
     $604 = (($603) + ($541))|0;
     $605 = (($604) + ($547))|0;
     $606 = (($605) + ($550))|0;
     $607 = (($606) + ($554))|0;
     $608 = (($607) + ($557))|0;
     $609 = (($608) + ($563))|0;
     $610 = (($609) + ($566))|0;
     $611 = (($610) + ($570))|0;
     $612 = (($611) + ($573))|0;
     $613 = (($612) + ($579))|0;
     $614 = (($613) + ($582))|0;
     $615 = (($614) + ($586))|0;
     $616 = (($615) + ($589))|0;
     $617 = (($616) + ($595))|0;
     $618 = (($617) + ($598))|0;
     $619 = ($514|0)==(16);
     if ($619) {
      $620 = (($$5416) + 5)|0;
      $621 = (($19) + ($620<<2)|0);
      $622 = HEAP32[$621>>2]|0;
      $623 = $622 >> 16;
      $$20$$20$ = HEAP16[$$20$sroa_idx392>>1]|0;
      $624 = $$20$$20$ << 16 >> 16;
      $625 = Math_imul($623, $624)|0;
      $626 = $622 & 65535;
      $627 = Math_imul($626, $624)|0;
      $628 = $627 >> 16;
      $629 = (($$5416) + 4)|0;
      $630 = (($19) + ($629<<2)|0);
      $631 = HEAP32[$630>>2]|0;
      $632 = $631 >> 16;
      $$22$$22$ = HEAP16[$$22$sroa_idx393>>1]|0;
      $633 = $$22$$22$ << 16 >> 16;
      $634 = Math_imul($632, $633)|0;
      $635 = $631 & 65535;
      $636 = Math_imul($635, $633)|0;
      $637 = $636 >> 16;
      $638 = (($$5416) + 3)|0;
      $639 = (($19) + ($638<<2)|0);
      $640 = HEAP32[$639>>2]|0;
      $641 = $640 >> 16;
      $$24$$24$ = HEAP16[$$24$sroa_idx394>>1]|0;
      $642 = $$24$$24$ << 16 >> 16;
      $643 = Math_imul($641, $642)|0;
      $644 = $640 & 65535;
      $645 = Math_imul($644, $642)|0;
      $646 = $645 >> 16;
      $647 = (($$5416) + 2)|0;
      $648 = (($19) + ($647<<2)|0);
      $649 = HEAP32[$648>>2]|0;
      $650 = $649 >> 16;
      $$26$$26$ = HEAP16[$$26$sroa_idx395>>1]|0;
      $651 = $$26$$26$ << 16 >> 16;
      $652 = Math_imul($650, $651)|0;
      $653 = $649 & 65535;
      $654 = Math_imul($653, $651)|0;
      $655 = $654 >> 16;
      $656 = (($$5416) + 1)|0;
      $657 = (($19) + ($656<<2)|0);
      $658 = HEAP32[$657>>2]|0;
      $659 = $658 >> 16;
      $$28$$28$ = HEAP16[$$28$sroa_idx396>>1]|0;
      $660 = $$28$$28$ << 16 >> 16;
      $661 = Math_imul($659, $660)|0;
      $662 = $658 & 65535;
      $663 = Math_imul($662, $660)|0;
      $664 = $663 >> 16;
      $665 = (($19) + ($$5416<<2)|0);
      $666 = HEAP32[$665>>2]|0;
      $667 = $666 >> 16;
      $$30$$30$ = HEAP16[$$30$sroa_idx397>>1]|0;
      $668 = $$30$$30$ << 16 >> 16;
      $669 = Math_imul($667, $668)|0;
      $670 = $666 & 65535;
      $671 = Math_imul($670, $668)|0;
      $672 = $671 >> 16;
      $673 = (($625) + ($618))|0;
      $674 = (($673) + ($628))|0;
      $675 = (($674) + ($634))|0;
      $676 = (($675) + ($637))|0;
      $677 = (($676) + ($643))|0;
      $678 = (($677) + ($646))|0;
      $679 = (($678) + ($652))|0;
      $680 = (($679) + ($655))|0;
      $681 = (($680) + ($661))|0;
      $682 = (($681) + ($664))|0;
      $683 = (($682) + ($669))|0;
      $684 = (($683) + ($672))|0;
      $$0365 = $684;
     } else {
      $$0365 = $618;
     }
     $685 = (($$0356) + ($$5416<<2)|0);
     $686 = HEAP32[$685>>2]|0;
     $687 = ($$0365|0)>(-134217728);
     $688 = $687 ? $$0365 : -134217728;
     $689 = ($688|0)<(134217727);
     $690 = $689 ? $688 : 134217727;
     $691 = $690 << 4;
     $692 = (($691) + ($686))|0;
     $693 = ($692|0)>(-1);
     if ($693) {
      $694 = $691 & $686;
      $695 = ($694|0)<(0);
      $spec$select403 = $695 ? -2147483648 : $692;
      $699 = $spec$select403;
     } else {
      $696 = $691 | $686;
      $697 = ($696|0)>(-1);
      $spec$select404 = $697 ? 2147483647 : $692;
      $699 = $spec$select404;
     }
     $698 = (($19) + ($516<<2)|0);
     HEAP32[$698>>2] = $699;
     $700 = $699 >> 16;
     $701 = Math_imul($700, $510)|0;
     $702 = $699 & 65535;
     $703 = Math_imul($702, $510)|0;
     $704 = $703 >> 16;
     $705 = Math_imul($699, $513)|0;
     $706 = (($701) + ($705))|0;
     $707 = (($706) + ($704))|0;
     $708 = $707 >>> 7;
     $709 = (($708) + 1)|0;
     $710 = $709 >>> 1;
     $711 = ($707|0)>(8388479);
     $712 = ($707|0)<(-8388736);
     $713 = $710&65535;
     $714 = $712 ? -32768 : $713;
     $715 = $711 ? 32767 : $714;
     $716 = (($$0369419) + ($$5416<<1)|0);
     HEAP16[$716>>1] = $715;
     $717 = (($$5416) + 1)|0;
     $718 = HEAP32[$15>>2]|0;
     $719 = ($717|0)<($718|0);
     if ($719) {
      $$5416 = $717;$518 = $699;$552 = $544;$568 = $560;$584 = $576;
     } else {
      $$2368452 = $$2368;$$lcssa = $718;
      break;
     }
    }
   } else {
    $$2368452 = $$2368;$$lcssa = $509;
   }
  }
  $720 = (($19) + ($$lcssa<<2)|0);
  dest=$19; src=$720; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  $721 = (($$0357424) + ($$lcssa<<2)|0);
  $722 = (($$0369419) + ($$lcssa<<1)|0);
  $723 = (($$0359421) + 1)|0;
  $724 = HEAP32[$58>>2]|0;
  $725 = ($723|0)<($724|0);
  if ($725) {
   $$0357424 = $721;$$0359421 = $723;$$0366420 = $$2368452;$$0369419 = $722;
  } else {
   break;
  }
 }
 dest=$57; src=$19; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 _llvm_stackrestore(($8|0));
 STACKTOP = sp;return;
}
function _silk_interpolate($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$013 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $sext = 0, $sext12 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($4|0)>(0);
 if (!($5)) {
  return;
 }
 $sext12 = $3 << 16;
 $6 = $sext12 >> 16;
 $$013 = 0;
 while(1) {
  $7 = (($1) + ($$013<<1)|0);
  $8 = HEAP16[$7>>1]|0;
  $9 = $8 << 16 >> 16;
  $10 = (($2) + ($$013<<1)|0);
  $11 = HEAP16[$10>>1]|0;
  $12 = $11&65535;
  $13 = (($12) - ($9))|0;
  $sext = $13 << 16;
  $14 = $sext >> 16;
  $15 = Math_imul($14, $6)|0;
  $16 = $15 >>> 2;
  $17 = (($16) + ($9))|0;
  $18 = $17&65535;
  $19 = (($0) + ($$013<<1)|0);
  HEAP16[$19>>1] = $18;
  $20 = (($$013) + 1)|0;
  $exitcond = ($20|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$013 = $20;
  }
 }
 return;
}
function _silk_NLSF_encode($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$ = 0, $$09196 = 0, $$095 = 0, $$1$i = 0, $$109 = 0, $$alloca_mul = 0, $$alloca_mul10 = 0, $$alloca_mul6 = 0, $$alloca_mul8 = 0, $$neg$i = 0, $$sink = 0, $$sink108 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond100 = 0, $sext = 0, $sext$i = 0, $sext94 = 0, $spec$select$i = 0, $spec$select3$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $7 = sp + 112|0;
 $8 = sp + 80|0;
 $9 = sp + 48|0;
 $10 = sp + 32|0;
 $11 = sp;
 $12 = ((($2)) + 36|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($2)) + 2|0);
 $15 = HEAP16[$14>>1]|0;
 $16 = $15 << 16 >> 16;
 _silk_NLSF_stabilize($1,$13,$16);
 $17 = HEAP16[$2>>1]|0;
 $18 = $17&65535;
 $19 = (_llvm_stacksave()|0);
 $$alloca_mul = $18<<2;
 $20 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $21 = ((($2)) + 8|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($2)) + 12|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = HEAP16[$2>>1]|0;
 $26 = $25 << 16 >> 16;
 $27 = HEAP16[$14>>1]|0;
 $28 = $27 << 16 >> 16;
 _silk_NLSF_VQ($20,$1,$22,$24,$26,$28);
 $$alloca_mul6 = $5<<2;
 $29 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 $30 = HEAP16[$2>>1]|0;
 $31 = $30 << 16 >> 16;
 _silk_insertion_sort_increasing($20,$29,$31,$5);
 $$alloca_mul8 = $5<<2;
 $32 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul8)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul8)|0)+15)&-16)|0);;
 $33 = $5 << 4;
 $$alloca_mul10 = $33;
 $34 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul10)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul10)|0)+15)&-16)|0);;
 $35 = ($5|0)>(0);
 if (!($35)) {
  _silk_insertion_sort_increasing($32,$7,$5,1);
  $158 = HEAP32[$7>>2]|0;
  $159 = (($29) + ($158<<2)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160&255;
  HEAP8[$0>>0] = $161;
  $162 = ((($0)) + 1|0);
  $163 = $158 << 4;
  $164 = (($34) + ($163)|0);
  $165 = HEAP16[$14>>1]|0;
  $166 = $165 << 16 >> 16;
  _memcpy(($162|0),($164|0),($166|0))|0;
  _silk_NLSF_decode($1,$0,$2);
  $167 = HEAP32[$32>>2]|0;
  _llvm_stackrestore(($19|0));
  STACKTOP = sp;return ($167|0);
 }
 $36 = ((($2)) + 32|0);
 $37 = ((($2)) + 4|0);
 $38 = ((($2)) + 6|0);
 $39 = ((($2)) + 16|0);
 $40 = $6 >> 1;
 $41 = $4 << 14;
 $42 = $41 >> 16;
 $$09196 = 0;
 while(1) {
  $43 = (($29) + ($$09196<<2)|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = HEAP32[$21>>2]|0;
  $46 = HEAP16[$14>>1]|0;
  $47 = $46 << 16 >> 16;
  $48 = Math_imul($44, $47)|0;
  $49 = (($45) + ($48)|0);
  $50 = HEAP32[$23>>2]|0;
  $51 = (($50) + ($48<<1)|0);
  $52 = ($46<<16>>16)>(0);
  if ($52) {
   $$095 = 0;
   while(1) {
    $53 = (($49) + ($$095)|0);
    $54 = HEAP8[$53>>0]|0;
    $55 = $54&255;
    $56 = $55 << 7;
    $57 = (($51) + ($$095<<1)|0);
    $58 = HEAP16[$57>>1]|0;
    $59 = $58 << 16 >> 16;
    $60 = (($1) + ($$095<<1)|0);
    $61 = HEAP16[$60>>1]|0;
    $62 = $61&65535;
    $63 = (($62) - ($56))|0;
    $sext94 = $63 << 16;
    $64 = $sext94 >> 16;
    $65 = Math_imul($64, $59)|0;
    $66 = $65 >>> 14;
    $67 = $66&65535;
    $68 = (($8) + ($$095<<1)|0);
    HEAP16[$68>>1] = $67;
    $69 = (($3) + ($$095<<1)|0);
    $70 = HEAP16[$69>>1]|0;
    $71 = $70 << 16 >> 16;
    $72 = Math_imul($59, $59)|0;
    $73 = ($71|0)>(0);
    $74 = (0 - ($71))|0;
    $75 = $73 ? $71 : $74;
    $76 = (Math_clz32(($75|0))|0);
    $77 = (($76) + -1)|0;
    $78 = $71 << $77;
    $79 = ($72|0)==(0);
    $80 = (0 - ($72))|0;
    $81 = $79 ? $80 : $72;
    $82 = (Math_clz32(($81|0))|0);
    $83 = (($82) + -1)|0;
    $84 = $72 << $83;
    $85 = $84 >> 16;
    $86 = (536870911 / ($85|0))&-1;
    $87 = $78 >> 16;
    $sext$i = $86 << 16;
    $88 = $sext$i >> 16;
    $89 = Math_imul($87, $88)|0;
    $90 = $78 & 65535;
    $91 = Math_imul($90, $88)|0;
    $92 = $91 >> 16;
    $93 = (($92) + ($89))|0;
    $94 = ($84|0)<(0);
    $95 = $94 << 31 >> 31;
    $96 = ($93|0)<(0);
    $97 = $96 << 31 >> 31;
    $98 = (___muldi3(($93|0),($97|0),($84|0),($95|0))|0);
    $99 = tempRet0;
    $100 = (_bitshift64Lshr(($98|0),($99|0),29)|0);
    $101 = tempRet0;
    $102 = $100 & -8;
    $103 = (($78) - ($102))|0;
    $104 = $103 >> 16;
    $105 = Math_imul($104, $88)|0;
    $106 = $103 & 65535;
    $107 = Math_imul($106, $88)|0;
    $108 = $107 >> 16;
    $109 = (($105) + ($93))|0;
    $110 = (($109) + ($108))|0;
    $$neg$i = (1 - ($82))|0;
    $111 = (($$neg$i) + 28)|0;
    $112 = (($111) + ($76))|0;
    $113 = ($112|0)<(21);
    if ($113) {
     $114 = (21 - ($112))|0;
     $115 = -2147483648 >> $114;
     $116 = 2147483647 >>> $114;
     $117 = ($115|0)>($116|0);
     $$ = $117 ? $115 : $116;
     $$109 = $117 ? $116 : $115;
     $118 = ($110|0)>($$|0);
     $119 = ($110|0)<($$109|0);
     $$1$i = $119 ? $$109 : $110;
     $spec$select3$i = $118 ? $$ : $$1$i;
     $120 = $spec$select3$i << $114;
     $125 = $120;
    } else {
     $121 = (($112) + -21)|0;
     $122 = ($112|0)<(53);
     $123 = $110 >> $121;
     $spec$select$i = $122 ? $123 : 0;
     $125 = $spec$select$i;
    }
    $124 = $125&65535;
    $126 = (($9) + ($$095<<1)|0);
    HEAP16[$126>>1] = $124;
    $127 = (($$095) + 1)|0;
    $exitcond = ($127|0)==($47|0);
    if ($exitcond) {
     break;
    } else {
     $$095 = $127;
    }
   }
  }
  _silk_NLSF_unpack($11,$10,$2,$44);
  $128 = $$09196 << 4;
  $129 = (($34) + ($128)|0);
  $130 = HEAP32[$36>>2]|0;
  $131 = HEAP16[$37>>1]|0;
  $132 = $131 << 16 >> 16;
  $133 = HEAP16[$38>>1]|0;
  $134 = HEAP16[$14>>1]|0;
  $135 = (_silk_NLSF_del_dec_quant($129,$8,$9,$10,$11,$130,$132,$133,$4,$134)|0);
  $136 = (($32) + ($$09196<<2)|0);
  HEAP32[$136>>2] = $135;
  $137 = HEAP32[$39>>2]|0;
  $138 = HEAP16[$2>>1]|0;
  $139 = $138 << 16 >> 16;
  $140 = Math_imul($40, $139)|0;
  $141 = (($137) + ($140)|0);
  $142 = ($44|0)==(0);
  if ($142) {
   $$sink = 256;$$sink108 = $141;
  } else {
   $143 = (($44) + -1)|0;
   $144 = (($141) + ($143)|0);
   $145 = HEAP8[$144>>0]|0;
   $146 = $145&255;
   $147 = (($141) + ($44)|0);
   $$sink = $146;$$sink108 = $147;
  }
  $148 = HEAP8[$$sink108>>0]|0;
  $149 = $148&255;
  $150 = (($$sink) - ($149))|0;
  $151 = (_silk_lin2log($150)|0);
  $152 = HEAP32[$136>>2]|0;
  $153 = $151 << 16;
  $sext = (67108864 - ($153))|0;
  $154 = $sext >> 16;
  $155 = Math_imul($154, $42)|0;
  $156 = (($155) + ($152))|0;
  HEAP32[$136>>2] = $156;
  $157 = (($$09196) + 1)|0;
  $exitcond100 = ($157|0)==($5|0);
  if ($exitcond100) {
   break;
  } else {
   $$09196 = $157;
  }
 }
 _silk_insertion_sort_increasing($32,$7,$5,1);
 $158 = HEAP32[$7>>2]|0;
 $159 = (($29) + ($158<<2)|0);
 $160 = HEAP32[$159>>2]|0;
 $161 = $160&255;
 HEAP8[$0>>0] = $161;
 $162 = ((($0)) + 1|0);
 $163 = $158 << 4;
 $164 = (($34) + ($163)|0);
 $165 = HEAP16[$14>>1]|0;
 $166 = $165 << 16 >> 16;
 _memcpy(($162|0),($164|0),($166|0))|0;
 _silk_NLSF_decode($1,$0,$2);
 $167 = HEAP32[$32>>2]|0;
 _llvm_stackrestore(($19|0));
 STACKTOP = sp;return ($167|0);
}
function _silk_NLSF_VQ($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$05567$us = 0, $$05664$us = 0, $$05763$us = 0, $$05866$us = 0, $$05965$us = 0, $$05965$us$in = 0, $$068$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $sext$us = 0, $sext60$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ($4|0)>(0);
 if (!($6)) {
  return;
 }
 $7 = ($5|0)>(1);
 if (!($7)) {
  $52 = $4 << 2;
  _memset(($0|0),0,($52|0))|0;
  return;
 }
 $$05567$us = $3;$$05866$us = 0;$$068$us = $2;
 while(1) {
  $$05664$us = 0;$$05763$us = 0;$$05965$us$in = $5;
  while(1) {
   $$05965$us = (($$05965$us$in) + -2)|0;
   $8 = (($$05965$us$in) + -1)|0;
   $9 = (($1) + ($8<<1)|0);
   $10 = HEAP16[$9>>1]|0;
   $11 = $10&65535;
   $12 = (($$068$us) + ($8)|0);
   $13 = HEAP8[$12>>0]|0;
   $14 = $13&255;
   $15 = $14 << 7;
   $16 = (($11) - ($15))|0;
   $sext$us = $16 << 16;
   $17 = $sext$us >> 16;
   $18 = (($$05567$us) + ($8<<1)|0);
   $19 = HEAP16[$18>>1]|0;
   $20 = $19 << 16 >> 16;
   $21 = Math_imul($17, $20)|0;
   $22 = $$05664$us >> 1;
   $23 = (($21) - ($22))|0;
   $24 = ($23|0)>(0);
   $25 = (0 - ($23))|0;
   $26 = $24 ? $23 : $25;
   $27 = (($26) + ($$05763$us))|0;
   $28 = (($1) + ($$05965$us<<1)|0);
   $29 = HEAP16[$28>>1]|0;
   $30 = $29&65535;
   $31 = (($$068$us) + ($$05965$us)|0);
   $32 = HEAP8[$31>>0]|0;
   $33 = $32&255;
   $34 = $33 << 7;
   $35 = (($30) - ($34))|0;
   $sext60$us = $35 << 16;
   $36 = $sext60$us >> 16;
   $37 = (($$05567$us) + ($$05965$us<<1)|0);
   $38 = HEAP16[$37>>1]|0;
   $39 = $38 << 16 >> 16;
   $40 = Math_imul($36, $39)|0;
   $41 = $21 >> 1;
   $42 = (($40) - ($41))|0;
   $43 = ($42|0)>(0);
   $44 = (0 - ($42))|0;
   $45 = $43 ? $42 : $44;
   $46 = (($27) + ($45))|0;
   $47 = ($$05965$us$in|0)>(3);
   if ($47) {
    $$05664$us = $40;$$05763$us = $46;$$05965$us$in = $$05965$us;
   } else {
    break;
   }
  }
  $48 = (($0) + ($$05866$us<<2)|0);
  HEAP32[$48>>2] = $46;
  $49 = (($$068$us) + ($5)|0);
  $50 = (($$05567$us) + ($5<<1)|0);
  $51 = (($$05866$us) + 1)|0;
  $exitcond = ($51|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$05567$us = $50;$$05866$us = $51;$$068$us = $49;
  }
 }
 return;
}
function _silk_NLSF_del_dec_quant($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0214253 = 0, $$0216 = 0, $$0217 = 0, $$0218 = 0, $$0219 = 0, $$0220272 = 0, $$0278 = 0, $$1209 = 0, $$1209$1 = 0, $$1209$2 = 0, $$1209$3 = 0, $$1215264 = 0, $$1221 = 0, $$1227$1 = 0, $$1227$2 = 0, $$1227$3 = 0, $$1274 = 0, $$1274$in = 0, $$2268 = 0, $$phi$trans$insert = 0;
 var $$phi$trans$insert306 = 0, $$phi$trans$insert308 = 0, $$phi$trans$insert310 = 0, $$phi$trans$insert312 = 0, $$phi$trans$insert314 = 0, $$phi$trans$insert316 = 0, $$pre = 0, $$pre297 = 0, $$pre298 = 0, $$pre299 = 0, $$pre300 = 0, $$pre301 = 0, $$pre302 = 0, $$pre303 = 0, $$pre304 = 0, $$pre305 = 0, $$pre307 = 0, $$pre309 = 0, $$pre311 = 0, $$pre313 = 0;
 var $$pre315 = 0, $$pre317 = 0, $$sink = 0, $$sink286 = 0, $$sink287 = 0, $$sink288 = 0, $$sink289 = 0, $$sink290 = 0, $$sink291 = 0, $$sink292 = 0, $$sink293 = 0, $$sink294 = 0, $$sink295 = 0, $$sink296 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond284 = 0, $exitcond285 = 0, $scevgep = 0, $sext = 0;
 var $sext231 = 0, $sext232 = 0, $sext233 = 0, $sext235 = 0, $sext236 = 0, $sext237 = 0, $sext239 = 0, $sext240 = 0, $sext241 = 0, $sext242 = 0, $sext243 = 0, $spec$select$1 = 0, $spec$select$2 = 0, $spec$select$3 = 0, $spec$select244$1 = 0, $spec$select244$2 = 0, $spec$select244$3 = 0, $spec$select245$1 = 0, $spec$select245$2 = 0, $spec$select245$3 = 0;
 var $spec$select245$4 = 0, $spec$select245$5 = 0, $spec$select245$6 = 0, $spec$select245$7 = 0, $spec$select246$1 = 0, $spec$select246$2 = 0, $spec$select246$3 = 0, $spec$select246$4 = 0, $spec$select246$5 = 0, $spec$select246$6 = 0, $spec$select246$7 = 0, $spec$select247 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $10 = sp + 304|0;
 $11 = sp + 240|0;
 $12 = sp + 224|0;
 $13 = sp + 192|0;
 $14 = sp + 176|0;
 $15 = sp + 160|0;
 $16 = sp + 80|0;
 $17 = sp;
 $sext240 = $6 << 16;
 $18 = $sext240 >> 16;
 $$0278 = -10;
 while(1) {
  $sext237 = $$0278 << 26;
  $19 = $sext237 >> 16;
  $20 = (($19) + 1024)|0;
  $21 = ($$0278|0)>(0);
  do {
   if ($21) {
    $22 = (($19) + -102)|0;
    $sext243 = $20 << 16;
    $23 = $sext243 >> 16;
    $24 = (($23) + -102)|0;
    $$0216 = $24;$$0217 = $22;
   } else {
    $25 = ($$0278|0)==(0);
    if ($25) {
     $sext242 = $20 << 16;
     $26 = $sext242 >> 16;
     $27 = (($26) + -102)|0;
     $$0216 = $27;$$0217 = 0;
     break;
    } else {
     $28 = ($$0278|0)==(-1);
     $29 = $19 | 102;
     $30 = $20 & 64512;
     $31 = $30 | 102;
     $spec$select247 = $28 ? $20 : $31;
     $$0216 = $spec$select247;$$0217 = $29;
     break;
    }
   }
  } while(0);
  $sext239 = $$0217 << 16;
  $32 = $sext239 >> 16;
  $33 = Math_imul($32, $18)|0;
  $34 = $33 >> 16;
  $35 = (($$0278) + 10)|0;
  $36 = (($16) + ($35<<2)|0);
  HEAP32[$36>>2] = $34;
  $sext241 = $$0216 << 16;
  $37 = $sext241 >> 16;
  $38 = Math_imul($37, $18)|0;
  $39 = $38 >> 16;
  $40 = (($17) + ($35<<2)|0);
  HEAP32[$40>>2] = $39;
  $41 = (($$0278) + 1)|0;
  $exitcond285 = ($41|0)==(10);
  if ($exitcond285) {
   break;
  } else {
   $$0278 = $41;
  }
 }
 HEAP32[$13>>2] = 0;
 HEAP16[$12>>1] = 0;
 $42 = $9 << 16 >> 16;
 $43 = ($9<<16>>16)>(0);
 if ($43) {
  $44 = $7 << 16 >> 16;
  $sext232 = $8 << 16;
  $45 = $sext232 >> 16;
  $46 = ((($13)) + 16|0);
  $47 = ((($12)) + 8|0);
  $48 = ((($13)) + 4|0);
  $49 = ((($13)) + 20|0);
  $50 = ((($12)) + 2|0);
  $51 = ((($12)) + 10|0);
  $52 = ((($15)) + 4|0);
  $53 = ((($14)) + 4|0);
  $54 = ((($10)) + 4|0);
  $55 = ((($13)) + 8|0);
  $56 = ((($13)) + 24|0);
  $57 = ((($12)) + 4|0);
  $58 = ((($12)) + 12|0);
  $59 = ((($15)) + 8|0);
  $60 = ((($14)) + 8|0);
  $61 = ((($10)) + 8|0);
  $62 = ((($13)) + 12|0);
  $63 = ((($13)) + 28|0);
  $64 = ((($12)) + 6|0);
  $65 = ((($12)) + 14|0);
  $66 = ((($15)) + 12|0);
  $67 = ((($14)) + 12|0);
  $68 = ((($10)) + 12|0);
  $$0220272 = 1;$$1274$in = $42;
  while(1) {
   $$1274 = (($$1274$in) + -1)|0;
   $69 = (($4) + ($$1274<<1)|0);
   $70 = HEAP16[$69>>1]|0;
   $71 = $70 << 16 >> 16;
   $72 = (($5) + ($71)|0);
   $73 = (($1) + ($$1274<<1)|0);
   $74 = HEAP16[$73>>1]|0;
   $75 = $74 << 16 >> 16;
   $76 = ($$0220272|0)>(0);
   L15: do {
    if ($76) {
     $77 = (($3) + ($$1274)|0);
     $78 = HEAP8[$77>>0]|0;
     $79 = $78&255;
     $80 = (($2) + ($$1274<<1)|0);
     $81 = HEAP16[$80>>1]|0;
     $82 = $81 << 16 >> 16;
     $83 = ((($72)) + 7|0);
     $84 = ((($72)) + 1|0);
     $$0214253 = 0;
     while(1) {
      $85 = (($12) + ($$0214253<<1)|0);
      $86 = HEAP16[$85>>1]|0;
      $87 = $86 << 16 >> 16;
      $88 = Math_imul($87, $79)|0;
      $89 = $88 >> 8;
      $90 = (($75) - ($89))|0;
      $sext = $90 << 16;
      $91 = $sext >> 16;
      $92 = Math_imul($91, $44)|0;
      $93 = $92 >> 16;
      $94 = ($92|0)>(655359);
      $95 = ($93|0)>(-10);
      $96 = $95 ? $93 : -10;
      $97 = $94 ? 9 : $96;
      $98 = $97&255;
      $99 = ((($11) + ($$0214253<<4)|0) + ($$1274)|0);
      HEAP8[$99>>0] = $98;
      $100 = (($97) + 10)|0;
      $101 = (($16) + ($100<<2)|0);
      $102 = HEAP32[$101>>2]|0;
      $103 = (($17) + ($100<<2)|0);
      $104 = HEAP32[$103>>2]|0;
      $105 = (($89) + ($102))|0;
      $106 = $105&65535;
      $107 = (($104) + ($89))|0;
      $108 = $107&65535;
      HEAP16[$85>>1] = $106;
      $109 = (($$0214253) + ($$0220272))|0;
      $110 = (($12) + ($109<<1)|0);
      HEAP16[$110>>1] = $108;
      $111 = ($97|0)>(2);
      do {
       if ($111) {
        $112 = ($97|0)==(3);
        if ($112) {
         $113 = HEAP8[$83>>0]|0;
         $114 = $113&255;
         $$0218 = 280;$$0219 = $114;
         break;
        } else {
         $115 = ($97*43)|0;
         $116 = (($115) + 108)|0;
         $117 = (($115) + 151)|0;
         $$0218 = $117;$$0219 = $116;
         break;
        }
       } else {
        $118 = ($97|0)<(-3);
        if (!($118)) {
         $125 = (($97) + 4)|0;
         $126 = (($72) + ($125)|0);
         $127 = HEAP8[$126>>0]|0;
         $128 = $127&255;
         $129 = (($97) + 5)|0;
         $130 = (($72) + ($129)|0);
         $131 = HEAP8[$130>>0]|0;
         $132 = $131&255;
         $$0218 = $132;$$0219 = $128;
         break;
        }
        $119 = ($97|0)==(-4);
        if ($119) {
         $120 = HEAP8[$84>>0]|0;
         $121 = $120&255;
         $$0218 = $121;$$0219 = 280;
         break;
        } else {
         $122 = Math_imul($97, -43)|0;
         $123 = (($122) + 108)|0;
         $124 = (($122) + 65)|0;
         $$0218 = $124;$$0219 = $123;
         break;
        }
       }
      } while(0);
      $133 = (($13) + ($$0214253<<2)|0);
      $134 = HEAP32[$133>>2]|0;
      $135 = (($75) - ($105))|0;
      $sext231 = $135 << 16;
      $136 = $sext231 >> 16;
      $137 = Math_imul($136, $136)|0;
      $138 = Math_imul($137, $82)|0;
      $sext233 = $$0219 << 16;
      $139 = $sext233 >> 16;
      $140 = Math_imul($139, $45)|0;
      $141 = (($140) + ($134))|0;
      $142 = (($141) + ($138))|0;
      HEAP32[$133>>2] = $142;
      $143 = (($75) - ($107))|0;
      $sext235 = $143 << 16;
      $144 = $sext235 >> 16;
      $145 = Math_imul($144, $144)|0;
      $146 = Math_imul($145, $82)|0;
      $sext236 = $$0218 << 16;
      $147 = $sext236 >> 16;
      $148 = Math_imul($147, $45)|0;
      $149 = (($148) + ($134))|0;
      $150 = (($149) + ($146))|0;
      $151 = (($13) + ($109<<2)|0);
      HEAP32[$151>>2] = $150;
      $152 = (($$0214253) + 1)|0;
      $exitcond = ($152|0)==($$0220272|0);
      if ($exitcond) {
       break;
      } else {
       $$0214253 = $152;
      }
     }
     $153 = ($$0220272|0)<(3);
     if ($153) {
      if (!($76)) {
       label = 26;
       break;
      }
      $$1215264 = 0;
      while(1) {
       $154 = ((($11) + ($$1215264<<4)|0) + ($$1274)|0);
       $155 = HEAP8[$154>>0]|0;
       $156 = $155&255;
       $157 = (($156) + 1)|0;
       $158 = $157&255;
       $159 = (($$1215264) + ($$0220272))|0;
       $160 = ((($11) + ($159<<4)|0) + ($$1274)|0);
       HEAP8[$160>>0] = $158;
       $161 = (($$1215264) + 1)|0;
       $exitcond284 = ($161|0)==($$0220272|0);
       if ($exitcond284) {
        label = 26;
        break L15;
       } else {
        $$1215264 = $161;
       }
      }
     }
     $170 = HEAP32[$13>>2]|0;
     $171 = HEAP32[$46>>2]|0;
     $172 = ($170|0)>($171|0);
     if ($172) {
      HEAP32[$13>>2] = $171;
      HEAP32[$46>>2] = $170;
      $173 = HEAP16[$12>>1]|0;
      $174 = HEAP16[$47>>1]|0;
      HEAP16[$12>>1] = $174;
      HEAP16[$47>>1] = $173;
      $$sink = 4;$$sink286 = $171;$$sink287 = $170;
     } else {
      $$sink = 0;$$sink286 = $170;$$sink287 = $171;
     }
     HEAP32[$15>>2] = $$sink287;
     HEAP32[$14>>2] = $$sink286;
     HEAP32[$10>>2] = $$sink;
     $175 = HEAP32[$48>>2]|0;
     $176 = HEAP32[$49>>2]|0;
     $177 = ($175|0)>($176|0);
     if ($177) {
      HEAP32[$48>>2] = $176;
      HEAP32[$49>>2] = $175;
      $259 = HEAP16[$50>>1]|0;
      $260 = HEAP16[$51>>1]|0;
      HEAP16[$50>>1] = $260;
      HEAP16[$51>>1] = $259;
      $$sink288 = 5;$$sink289 = $176;$$sink290 = $175;
     } else {
      $$sink288 = 1;$$sink289 = $175;$$sink290 = $176;
     }
     HEAP32[$52>>2] = $$sink290;
     HEAP32[$53>>2] = $$sink289;
     HEAP32[$54>>2] = $$sink288;
     $261 = HEAP32[$55>>2]|0;
     $262 = HEAP32[$56>>2]|0;
     $263 = ($261|0)>($262|0);
     if ($263) {
      HEAP32[$55>>2] = $262;
      HEAP32[$56>>2] = $261;
      $264 = HEAP16[$57>>1]|0;
      $265 = HEAP16[$58>>1]|0;
      HEAP16[$57>>1] = $265;
      HEAP16[$58>>1] = $264;
      $$sink291 = 6;$$sink292 = $262;$$sink293 = $261;
     } else {
      $$sink291 = 2;$$sink292 = $261;$$sink293 = $262;
     }
     HEAP32[$59>>2] = $$sink293;
     HEAP32[$60>>2] = $$sink292;
     HEAP32[$61>>2] = $$sink291;
     $266 = HEAP32[$62>>2]|0;
     $267 = HEAP32[$63>>2]|0;
     $268 = ($266|0)>($267|0);
     if ($268) {
      HEAP32[$62>>2] = $267;
      HEAP32[$63>>2] = $266;
      $269 = HEAP16[$64>>1]|0;
      $270 = HEAP16[$65>>1]|0;
      HEAP16[$64>>1] = $270;
      HEAP16[$65>>1] = $269;
      $$sink294 = 7;$$sink295 = $267;$$sink296 = $266;
     } else {
      $$sink294 = 3;$$sink295 = $266;$$sink296 = $267;
     }
     HEAP32[$66>>2] = $$sink296;
     HEAP32[$67>>2] = $$sink295;
     HEAP32[$68>>2] = $$sink294;
     $179 = $$sink286;$181 = $$sink287;$182 = $$sink290;$184 = $$sink289;$186 = $$sink293;$188 = $$sink292;$190 = $$sink296;$192 = $$sink295;
     while(1) {
      $178 = ($179|0)>(0);
      $$1209 = $178 ? $179 : 0;
      $180 = ($181|0)>($182|0);
      $spec$select$1 = $180&1;
      $spec$select244$1 = $180 ? $182 : $181;
      $183 = ($$1209|0)<($184|0);
      $$1227$1 = $183&1;
      $$1209$1 = $183 ? $184 : $$1209;
      $185 = ($spec$select244$1|0)>($186|0);
      $spec$select$2 = $185 ? 2 : $spec$select$1;
      $spec$select244$2 = $185 ? $186 : $spec$select244$1;
      $187 = ($$1209$1|0)<($188|0);
      $$1227$2 = $187 ? 2 : $$1227$1;
      $$1209$2 = $187 ? $188 : $$1209$1;
      $189 = ($spec$select244$2|0)>($190|0);
      $spec$select$3 = $189 ? 3 : $spec$select$2;
      $spec$select244$3 = $189 ? $190 : $spec$select244$2;
      $191 = ($$1209$2|0)<($192|0);
      $$1227$3 = $191 ? 3 : $$1227$2;
      $$1209$3 = $191 ? $192 : $$1209$2;
      $193 = ($spec$select244$3|0)<($$1209$3|0);
      if (!($193)) {
       break;
      }
      $194 = (($10) + ($spec$select$3<<2)|0);
      $195 = HEAP32[$194>>2]|0;
      $196 = $195 ^ 4;
      $197 = (($10) + ($$1227$3<<2)|0);
      HEAP32[$197>>2] = $196;
      $198 = $spec$select$3 | 4;
      $199 = (($13) + ($198<<2)|0);
      $200 = HEAP32[$199>>2]|0;
      $201 = (($13) + ($$1227$3<<2)|0);
      HEAP32[$201>>2] = $200;
      $202 = (($12) + ($198<<1)|0);
      $203 = HEAP16[$202>>1]|0;
      $204 = (($12) + ($$1227$3<<1)|0);
      HEAP16[$204>>1] = $203;
      $205 = (($14) + ($$1227$3<<2)|0);
      HEAP32[$205>>2] = 0;
      $206 = (($15) + ($spec$select$3<<2)|0);
      HEAP32[$206>>2] = 2147483647;
      $207 = (($11) + ($$1227$3<<4)|0);
      $208 = (($11) + ($spec$select$3<<4)|0);
      ;HEAP32[$207>>2]=HEAP32[$208>>2]|0;HEAP32[$207+4>>2]=HEAP32[$208+4>>2]|0;HEAP32[$207+8>>2]=HEAP32[$208+8>>2]|0;HEAP32[$207+12>>2]=HEAP32[$208+12>>2]|0;
      $$pre = HEAP32[$15>>2]|0;
      $$pre297 = HEAP32[$14>>2]|0;
      $$pre298 = HEAP32[$52>>2]|0;
      $$pre299 = HEAP32[$53>>2]|0;
      $$pre300 = HEAP32[$59>>2]|0;
      $$pre301 = HEAP32[$60>>2]|0;
      $$pre302 = HEAP32[$66>>2]|0;
      $$pre303 = HEAP32[$67>>2]|0;
      $179 = $$pre297;$181 = $$pre;$182 = $$pre298;$184 = $$pre299;$186 = $$pre300;$188 = $$pre301;$190 = $$pre302;$192 = $$pre303;
     }
     $209 = HEAP32[$10>>2]|0;
     $210 = $209 >>> 2;
     $211 = (($11) + ($$1274)|0);
     $212 = HEAP8[$211>>0]|0;
     $213 = $212&255;
     $214 = (($210) + ($213))|0;
     $215 = $214&255;
     HEAP8[$211>>0] = $215;
     $216 = HEAP32[$54>>2]|0;
     $217 = $216 >>> 2;
     $218 = (((($11)) + 16|0) + ($$1274)|0);
     $219 = HEAP8[$218>>0]|0;
     $220 = $219&255;
     $221 = (($217) + ($220))|0;
     $222 = $221&255;
     HEAP8[$218>>0] = $222;
     $223 = HEAP32[$61>>2]|0;
     $224 = $223 >>> 2;
     $225 = (((($11)) + 32|0) + ($$1274)|0);
     $226 = HEAP8[$225>>0]|0;
     $227 = $226&255;
     $228 = (($224) + ($227))|0;
     $229 = $228&255;
     HEAP8[$225>>0] = $229;
     $230 = HEAP32[$68>>2]|0;
     $231 = $230 >>> 2;
     $232 = (((($11)) + 48|0) + ($$1274)|0);
     $233 = HEAP8[$232>>0]|0;
     $234 = $233&255;
     $235 = (($231) + ($234))|0;
     $236 = $235&255;
     HEAP8[$232>>0] = $236;
     $$1221 = $$0220272;
    } else {
     label = 26;
    }
   } while(0);
   if ((label|0) == 26) {
    label = 0;
    $162 = $$0220272 << 1;
    $163 = ($162|0)<(4);
    if ($163) {
     $$2268 = $162;
     while(1) {
      $164 = (($$2268) - ($162))|0;
      $165 = ((($11) + ($164<<4)|0) + ($$1274)|0);
      $166 = HEAP8[$165>>0]|0;
      $167 = ((($11) + ($$2268<<4)|0) + ($$1274)|0);
      HEAP8[$167>>0] = $166;
      $168 = (($$2268) + 1)|0;
      $169 = ($$2268|0)<(3);
      if ($169) {
       $$2268 = $168;
      } else {
       $$1221 = $162;
       break;
      }
     }
    } else {
     $$1221 = $162;
    }
   }
   $237 = ($$1274$in|0)>(1);
   if ($237) {
    $$0220272 = $$1221;$$1274$in = $$1274;
   } else {
    break;
   }
  }
  $$pre304 = HEAP32[$13>>2]|0;
  $$phi$trans$insert = ((($13)) + 4|0);
  $$pre305 = HEAP32[$$phi$trans$insert>>2]|0;
  $$phi$trans$insert306 = ((($13)) + 8|0);
  $$pre307 = HEAP32[$$phi$trans$insert306>>2]|0;
  $$phi$trans$insert308 = ((($13)) + 12|0);
  $$pre309 = HEAP32[$$phi$trans$insert308>>2]|0;
  $$phi$trans$insert310 = ((($13)) + 16|0);
  $$pre311 = HEAP32[$$phi$trans$insert310>>2]|0;
  $$phi$trans$insert312 = ((($13)) + 20|0);
  $$pre313 = HEAP32[$$phi$trans$insert312>>2]|0;
  $$phi$trans$insert314 = ((($13)) + 24|0);
  $$pre315 = HEAP32[$$phi$trans$insert314>>2]|0;
  $$phi$trans$insert316 = ((($13)) + 28|0);
  $$pre317 = HEAP32[$$phi$trans$insert316>>2]|0;
  $239 = $$pre304;$240 = $$pre305;$242 = $$pre307;$244 = $$pre309;$246 = $$pre311;$248 = $$pre313;$250 = $$pre315;$252 = $$pre317;
 } else {
  $239 = 0;$240 = 0;$242 = 0;$244 = 0;$246 = 0;$248 = 0;$250 = 0;$252 = 0;
 }
 $238 = ($239|0)>($240|0);
 $spec$select245$1 = $238&1;
 $spec$select246$1 = $238 ? $240 : $239;
 $241 = ($spec$select246$1|0)>($242|0);
 $spec$select245$2 = $241 ? 2 : $spec$select245$1;
 $spec$select246$2 = $241 ? $242 : $spec$select246$1;
 $243 = ($spec$select246$2|0)>($244|0);
 $spec$select245$3 = $243 ? 3 : $spec$select245$2;
 $spec$select246$3 = $243 ? $244 : $spec$select246$2;
 $245 = ($spec$select246$3|0)>($246|0);
 $spec$select245$4 = $245 ? 4 : $spec$select245$3;
 $spec$select246$4 = $245 ? $246 : $spec$select246$3;
 $247 = ($spec$select246$4|0)>($248|0);
 $spec$select245$5 = $247 ? 5 : $spec$select245$4;
 $spec$select246$5 = $247 ? $248 : $spec$select246$4;
 $249 = ($spec$select246$5|0)>($250|0);
 $spec$select245$6 = $249 ? 6 : $spec$select245$5;
 $spec$select246$6 = $249 ? $250 : $spec$select246$5;
 $251 = ($spec$select246$6|0)>($252|0);
 $spec$select245$7 = $251 ? 7 : $spec$select245$6;
 $spec$select246$7 = $251 ? $252 : $spec$select246$6;
 if (!($43)) {
  $254 = $spec$select245$7 >>> 2;
  $255 = HEAP8[$0>>0]|0;
  $256 = $255&255;
  $257 = (($254) + ($256))|0;
  $258 = $257&255;
  HEAP8[$0>>0] = $258;
  STACKTOP = sp;return ($spec$select246$7|0);
 }
 $253 = $spec$select245$7 & 3;
 $scevgep = (($11) + ($253<<4)|0);
 _memcpy(($0|0),($scevgep|0),($42|0))|0;
 $254 = $spec$select245$7 >>> 2;
 $255 = HEAP8[$0>>0]|0;
 $256 = $255&255;
 $257 = (($254) + ($256))|0;
 $258 = $257&255;
 HEAP8[$0>>0] = $258;
 STACKTOP = sp;return ($spec$select246$7|0);
}
function _silk_corrVector_FLP($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$01314 = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = Math_fround(0), $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($3|0)>(0);
 if (!($5)) {
  return;
 }
 $6 = (($3) + -1)|0;
 $7 = (($0) + ($6<<2)|0);
 $$01314 = 0;$$015 = $7;
 while(1) {
  $8 = (+_silk_inner_product_FLP($$015,$1,$2));
  $9 = Math_fround($8);
  $10 = (($4) + ($$01314<<2)|0);
  HEAPF32[$10>>2] = $9;
  $11 = ((($$015)) + -4|0);
  $12 = (($$01314) + 1)|0;
  $exitcond = ($12|0)==($3|0);
  if ($exitcond) {
   break;
  } else {
   $$01314 = $12;$$015 = $11;
  }
 }
 return;
}
function _silk_corrMatrix_FLP($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$07891 = 0, $$07990 = 0.0, $$08184 = 0, $$086 = 0, $$18082 = 0.0, $$183 = 0, $10 = 0, $11 = Math_fround(0), $12 = Math_fround(0), $13 = 0, $14 = 0, $15 = Math_fround(0), $16 = Math_fround(0), $17 = Math_fround(0), $18 = 0.0, $19 = 0.0, $20 = Math_fround(0), $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = Math_fround(0), $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = Math_fround(0), $37 = 0, $38 = Math_fround(0), $39 = Math_fround(0), $4 = 0, $40 = 0, $41 = 0, $42 = Math_fround(0);
 var $43 = 0, $44 = Math_fround(0), $45 = Math_fround(0), $46 = Math_fround(0), $47 = 0.0, $48 = 0.0, $49 = Math_fround(0), $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0.0, $7 = Math_fround(0);
 var $8 = 0, $9 = 0, $exitcond = 0, $exitcond95 = 0, $exitcond96 = 0, $indvars$iv = 0, $indvars$iv$next = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (($2) + -1)|0;
 $5 = (($0) + ($4<<2)|0);
 $6 = (+_silk_energy_FLP($5,$1));
 $7 = Math_fround($6);
 HEAPF32[$3>>2] = $7;
 $8 = ($2|0)>(1);
 if (!($8)) {
  return;
 }
 $$07891 = 1;$$07990 = $6;
 while(1) {
  $9 = (0 - ($$07891))|0;
  $10 = (($5) + ($9<<2)|0);
  $11 = Math_fround(HEAPF32[$10>>2]);
  $12 = Math_fround($11 * $11);
  $13 = (($1) - ($$07891))|0;
  $14 = (($5) + ($13<<2)|0);
  $15 = Math_fround(HEAPF32[$14>>2]);
  $16 = Math_fround($15 * $15);
  $17 = Math_fround($12 - $16);
  $18 = +$17;
  $19 = $$07990 + $18;
  $20 = Math_fround($19);
  $21 = Math_imul($$07891, $2)|0;
  $22 = (($21) + ($$07891))|0;
  $23 = (($3) + ($22<<2)|0);
  HEAPF32[$23>>2] = $20;
  $24 = (($$07891) + 1)|0;
  $exitcond96 = ($24|0)==($2|0);
  if ($exitcond96) {
   break;
  } else {
   $$07891 = $24;$$07990 = $19;
  }
 }
 if (!($8)) {
  return;
 }
 $25 = (($2) + -2)|0;
 $26 = (($0) + ($25<<2)|0);
 $$08184 = 1;$$086 = $26;$indvars$iv = $4;
 while(1) {
  $27 = (+_silk_inner_product_FLP($5,$$086,$1));
  $28 = Math_fround($27);
  $29 = Math_imul($$08184, $2)|0;
  $30 = (($3) + ($29<<2)|0);
  HEAPF32[$30>>2] = $28;
  $31 = (($3) + ($$08184<<2)|0);
  HEAPF32[$31>>2] = $28;
  $32 = (($2) - ($$08184))|0;
  $33 = ($32|0)>(1);
  if ($33) {
   $$18082 = $27;$$183 = 1;
   while(1) {
    $34 = (0 - ($$183))|0;
    $35 = (($5) + ($34<<2)|0);
    $36 = Math_fround(HEAPF32[$35>>2]);
    $37 = (($$086) + ($34<<2)|0);
    $38 = Math_fround(HEAPF32[$37>>2]);
    $39 = Math_fround($36 * $38);
    $40 = (($1) - ($$183))|0;
    $41 = (($5) + ($40<<2)|0);
    $42 = Math_fround(HEAPF32[$41>>2]);
    $43 = (($$086) + ($40<<2)|0);
    $44 = Math_fround(HEAPF32[$43>>2]);
    $45 = Math_fround($42 * $44);
    $46 = Math_fround($39 - $45);
    $47 = +$46;
    $48 = $$18082 + $47;
    $49 = Math_fround($48);
    $50 = (($$183) + ($$08184))|0;
    $51 = Math_imul($50, $2)|0;
    $52 = (($51) + ($$183))|0;
    $53 = (($3) + ($52<<2)|0);
    HEAPF32[$53>>2] = $49;
    $54 = Math_imul($$183, $2)|0;
    $55 = (($54) + ($50))|0;
    $56 = (($3) + ($55<<2)|0);
    HEAPF32[$56>>2] = $49;
    $57 = (($$183) + 1)|0;
    $exitcond = ($57|0)==($indvars$iv|0);
    if ($exitcond) {
     break;
    } else {
     $$18082 = $48;$$183 = $57;
    }
   }
  }
  $58 = ((($$086)) + -4|0);
  $59 = (($$08184) + 1)|0;
  $indvars$iv$next = (($indvars$iv) + -1)|0;
  $exitcond95 = ($59|0)==($2|0);
  if ($exitcond95) {
   break;
  } else {
   $$08184 = $59;$$086 = $58;$indvars$iv = $indvars$iv$next;
  }
 }
 return;
}
function _sonicSetSpeed($0,$1) {
 $0 = $0|0;
 $1 = Math_fround($1);
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 HEAPF32[$2>>2] = $1;
 return;
}
function _sonicCreateStream($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_calloc(1,108)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  $$0 = 0;
  return ($$0|0);
 }
 $4 = (_allocateStreamBuffers($2,$0,$1)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $$0 = 0;
  return ($$0|0);
 }
 $6 = ((($2)) + 16|0);
 HEAPF32[$6>>2] = Math_fround(1.0);
 $7 = ((($2)) + 24|0);
 HEAPF32[$7>>2] = Math_fround(1.0);
 $8 = ((($2)) + 20|0);
 HEAPF32[$8>>2] = Math_fround(1.0);
 $9 = ((($2)) + 28|0);
 HEAPF32[$9>>2] = Math_fround(1.0);
 $10 = ((($2)) + 32|0);
 $11 = ((($2)) + 104|0);
 ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;HEAP32[$10+12>>2]=0|0;
 HEAPF32[$11>>2] = Math_fround(50.0);
 $$0 = $2;
 return ($$0|0);
}
function _allocateStreamBuffers($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$pre = 0, $$pre49 = 0, $$pre50 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($1|0) / 400)&-1;
 $4 = (($1|0) / 65)&-1;
 $5 = $4 << 1;
 $6 = ((($0)) + 52|0);
 HEAP32[$6>>2] = $5;
 $7 = $2 << 1;
 $8 = (_calloc($5,$7)|0);
 HEAP32[$0>>2] = $8;
 $9 = ($8|0)==(0|0);
 if ($9) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0|0);
  if (!($12)) {
   _free($11);
  }
  $13 = ((($0)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ($14|0)==(0|0);
  if (!($15)) {
   _free($14);
  }
  $16 = ((($0)) + 12|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)==(0|0);
  if (!($18)) {
   _free($17);
  }
  _free($0);
  $$0 = 0;
  return ($$0|0);
 }
 $19 = ((($0)) + 60|0);
 HEAP32[$19>>2] = $5;
 $20 = (_calloc($5,$7)|0);
 $21 = ((($0)) + 4|0);
 HEAP32[$21>>2] = $20;
 $22 = ($20|0)==(0|0);
 if ($22) {
  _free($8);
  $$pre50 = HEAP32[$21>>2]|0;
  $23 = ($$pre50|0)==(0|0);
  if (!($23)) {
   _free($$pre50);
  }
  $24 = ((($0)) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ($25|0)==(0|0);
  if (!($26)) {
   _free($25);
  }
  $27 = ((($0)) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ($28|0)==(0|0);
  if (!($29)) {
   _free($28);
  }
  _free($0);
  $$0 = 0;
  return ($$0|0);
 }
 $30 = ((($0)) + 56|0);
 HEAP32[$30>>2] = $5;
 $31 = (_calloc($5,$7)|0);
 $32 = ((($0)) + 8|0);
 HEAP32[$32>>2] = $31;
 $33 = ($31|0)==(0|0);
 if ($33) {
  _free($8);
  $$pre49 = HEAP32[$21>>2]|0;
  $34 = ($$pre49|0)==(0|0);
  if (!($34)) {
   _free($$pre49);
  }
  $35 = HEAP32[$32>>2]|0;
  $36 = ($35|0)==(0|0);
  if (!($36)) {
   _free($35);
  }
  $37 = ((($0)) + 12|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($38|0)==(0|0);
  if (!($39)) {
   _free($38);
  }
  _free($0);
  $$0 = 0;
  return ($$0|0);
 }
 $40 = (_calloc($5,2)|0);
 $41 = ((($0)) + 12|0);
 HEAP32[$41>>2] = $40;
 $42 = ($40|0)==(0|0);
 if (!($42)) {
  $48 = ((($0)) + 92|0);
  HEAP32[$48>>2] = $1;
  $49 = ((($0)) + 48|0);
  HEAP32[$49>>2] = $2;
  $50 = ((($0)) + 32|0);
  HEAP32[$50>>2] = 0;
  $51 = ((($0)) + 36|0);
  HEAP32[$51>>2] = 0;
  $52 = ((($0)) + 76|0);
  HEAP32[$52>>2] = $3;
  $53 = ((($0)) + 80|0);
  HEAP32[$53>>2] = $4;
  $54 = ((($0)) + 84|0);
  HEAP32[$54>>2] = $5;
  $55 = ((($0)) + 96|0);
  HEAP32[$55>>2] = 0;
  $$0 = 1;
  return ($$0|0);
 }
 _free($8);
 $$pre = HEAP32[$21>>2]|0;
 $43 = ($$pre|0)==(0|0);
 if (!($43)) {
  _free($$pre);
 }
 $44 = HEAP32[$32>>2]|0;
 $45 = ($44|0)==(0|0);
 if (!($45)) {
  _free($44);
 }
 $46 = HEAP32[$41>>2]|0;
 $47 = ($46|0)==(0|0);
 if (!($47)) {
  _free($46);
 }
 _free($0);
 $$0 = 0;
 return ($$0|0);
}
function _sonicReadShortFromStream($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$025 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0;
 var $spec$select26 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 68|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  $$025 = 0;
  return ($$025|0);
 }
 $6 = ($4|0)>($2|0);
 $7 = (($4) - ($2))|0;
 $spec$select = $6 ? $2 : $4;
 $spec$select26 = $6 ? $7 : 0;
 $8 = ((($0)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $spec$select << 1;
 $11 = ((($0)) + 48|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = Math_imul($10, $12)|0;
 _memcpy(($1|0),($9|0),($13|0))|0;
 $14 = ($spec$select26|0)>(0);
 if ($14) {
  $15 = HEAP32[$8>>2]|0;
  $16 = HEAP32[$11>>2]|0;
  $17 = Math_imul($16, $spec$select)|0;
  $18 = (($15) + ($17<<1)|0);
  $19 = $spec$select26 << 1;
  $20 = Math_imul($19, $16)|0;
  _memmove(($15|0),($18|0),($20|0))|0;
 }
 HEAP32[$3>>2] = $spec$select26;
 $$025 = $spec$select;
 return ($$025|0);
}
function _processStreamInput($0) {
 $0 = $0|0;
 var $$0$i$i = 0, $$01014$i = 0, $$01113$i = 0, $$025$i$i = 0, $$03341$us$i$i = 0, $$03341$us$i$i$i = 0, $$03341$us$i$i8$i = 0, $$03439$us$i$i = 0, $$03439$us$i$i$i = 0, $$03439$us$i$i11$i = 0, $$03538$us$i$i = 0, $$03538$us$i$i$i = 0, $$03538$us$i$i12$i = 0, $$036 = 0, $$03637$us$i$i = 0, $$03637$us$i$i$i = 0, $$03637$us$i$i13$i = 0, $$039$i$i = 0, $$040$i = 0, $$040$us$i$i = 0;
 var $$040$us$i$i$i = 0, $$040$us$i$i10$i = 0, $$041$i = 0, $$052$i$i$us = 0, $$05357$i$i$us = 0, $$05362$us$i$i = 0, $$05456$i$i$us = 0, $$05460$us$i$i = 0, $$05559$us$i$i = 0, $$05758$us$i$i = 0, $$058$i$i$us = 0, $$06084$i$us = 0, $$061$us$i$i = 0, $$06183$i$us = 0, $$06282$i$us = 0, $$06392$i = 0, $$064$lcssa$i = 0, $$06499$i = 0, $$065$lcssa$i = 0, $$06576$i = 0;
 var $$06598$i = 0, $$1$i = 0, $$1$us$i$i = 0, $$156$us$i$i = 0, $$lcssa73$i = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert$i$i = 0, $$phi$trans$insert$i$i42 = 0, $$pn$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i37 = 0, $$pre$i$i43 = 0, $$pre$i1$i = 0, $$pre$i3$i = 0, $$pre$i38 = 0, $$pre$i48 = 0, $$pre$i67$i = 0;
 var $$pre$i67$i55 = 0, $$pre$phi$i47Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi13$iZ2D = 0, $$pre11$i = 0, $$pre11$i$i$i = 0, $$pre111$i = 0, $$pre112$i = 0, $$pre112$i$us = 0, $$pre113$i = 0, $$pre113$i$us = 0, $$pre114$i = 0, $$pre114$i$pre = 0, $$pre114$i90 = 0, $$pre115$i = 0, $$pre116$i = 0, $$pre118$i = 0, $$pre12$i = 0, $$pre27$i$i = 0, $$pre30$i$i = 0;
 var $$pre30$i$i45 = 0, $$pre41$i$i = 0, $$pre83$i = 0, $$pre85$i = 0, $$pre87$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = Math_fround(0), $118 = Math_fround(0), $119 = 0, $12 = 0, $120 = Math_fround(0), $121 = Math_fround(0), $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = Math_fround(0);
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0.0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = Math_fround(0), $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = Math_fround(0), $255 = Math_fround(0), $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = Math_fround(0), $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = Math_fround(0), $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = Math_fround(0);
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = Math_fround(0), $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = Math_fround(0), $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = Math_fround(0), $354 = Math_fround(0), $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = Math_fround(0), $40 = 0;
 var $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0;
 var $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0;
 var $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0;
 var $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0;
 var $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0;
 var $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0;
 var $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = Math_fround(0), $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = Math_fround(0), $524 = 0, $525 = 0, $526 = 0;
 var $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0;
 var $545 = 0, $546 = 0, $547 = 0, $548 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = Math_fround(0), $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = Math_fround(0), $70 = 0, $71 = Math_fround(0), $72 = Math_fround(0), $73 = 0, $74 = Math_fround(0), $75 = Math_fround(0), $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = Math_fround(0), $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $exitcond$i$i$i = 0, $exitcond$i$i14$i = 0, $exitcond$i$i53$us = 0, $exitcond$i$us = 0, $exitcond$i69$i = 0, $exitcond46$i$i = 0;
 var $exitcond46$i$i$i = 0, $exitcond46$i$i15$i = 0, $exitcond67$i$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i$i$i = 0, $or$cond$i$i5$i = 0, $reass$add$i$i$i$us = 0, $spec$select = Math_fround(0), $spec$select$i$i = 0, $spec$select$i$i52$us = 0, $spec$select55$i$i$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 68|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 16|0);
 $4 = Math_fround(HEAPF32[$3>>2]);
 $5 = ((($0)) + 24|0);
 $6 = Math_fround(HEAPF32[$5>>2]);
 $7 = Math_fround($4 / $6);
 $8 = ((($0)) + 28|0);
 $9 = Math_fround(HEAPF32[$8>>2]);
 $10 = ((($0)) + 40|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0);
 $13 = Math_fround($6 * $9);
 $spec$select = $12 ? $13 : $9;
 $14 = +$7;
 $15 = $14 > 1.0000100000000001;
 $16 = $14 < 0.99999000000000004;
 $or$cond = $15 | $16;
 L1: do {
  if ($or$cond) {
   $17 = ((($0)) + 64|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ((($0)) + 84|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($18|0)<($20|0);
   if (!($21)) {
    $22 = ((($0)) + 88|0);
    $23 = ((($0)) + 48|0);
    $24 = ((($0)) + 60|0);
    $25 = $7 > Math_fround(1.0);
    $26 = ((($0)) + 4|0);
    $27 = !($7 >= Math_fround(2.0));
    $28 = $7 < Math_fround(0.5);
    $29 = Math_fround(Math_fround(2.0) - $7);
    $30 = Math_fround($7 + Math_fround(-1.0));
    $31 = Math_fround(Math_fround(1.0) - $7);
    $32 = Math_fround($7 * Math_fround(2.0));
    $33 = Math_fround($32 + Math_fround(-1.0));
    $$041$i = 0;
    while(1) {
     $34 = HEAP32[$22>>2]|0;
     $35 = ($34|0)>(0);
     do {
      if ($35) {
       $36 = HEAP32[$19>>2]|0;
       $37 = ($34|0)>($36|0);
       $spec$select$i$i = $37 ? $36 : $34;
       $38 = HEAP32[$0>>2]|0;
       $39 = HEAP32[$23>>2]|0;
       $40 = Math_imul($39, $$041$i)|0;
       $41 = (($38) + ($40<<1)|0);
       $42 = HEAP32[$1>>2]|0;
       $43 = (($42) + ($spec$select$i$i))|0;
       $44 = HEAP32[$24>>2]|0;
       $45 = ($43|0)>($44|0);
       if ($45) {
        $46 = $44 >> 1;
        $47 = (($44) + ($spec$select$i$i))|0;
        $48 = (($47) + ($46))|0;
        HEAP32[$24>>2] = $48;
        $49 = HEAP32[$26>>2]|0;
        $50 = $39 << 1;
        $51 = Math_imul($50, $48)|0;
        $52 = (_realloc($49,$51)|0);
        HEAP32[$26>>2] = $52;
        $53 = ($52|0)==(0|0);
        if ($53) {
         break L1;
        }
        $$pre11$i$i$i = HEAP32[$1>>2]|0;
        $$pre$i$i = HEAP32[$23>>2]|0;
        $55 = $$pre11$i$i$i;$56 = $$pre$i$i;$58 = $52;
       } else {
        $$pre$i$i$i = HEAP32[$26>>2]|0;
        $55 = $42;$56 = $39;$58 = $$pre$i$i$i;
       }
       $54 = Math_imul($55, $56)|0;
       $57 = (($58) + ($54<<1)|0);
       $59 = $spec$select$i$i << 1;
       $60 = Math_imul($59, $56)|0;
       _memcpy(($57|0),($41|0),($60|0))|0;
       $61 = HEAP32[$1>>2]|0;
       $62 = (($61) + ($spec$select$i$i))|0;
       HEAP32[$1>>2] = $62;
       $63 = HEAP32[$22>>2]|0;
       $64 = (($63) - ($spec$select$i$i))|0;
       HEAP32[$22>>2] = $64;
       $$040$i = $spec$select$i$i;$$pn$i = $spec$select$i$i;
      } else {
       $65 = HEAP32[$0>>2]|0;
       $66 = HEAP32[$23>>2]|0;
       $67 = Math_imul($66, $$041$i)|0;
       $68 = (($65) + ($67<<1)|0);
       $69 = (_findPitchPeriod($0,$68,1)|0);
       $70 = HEAP32[$23>>2]|0;
       $71 = (Math_fround(($69|0)));
       if (!($25)) {
        if ($28) {
         $117 = Math_fround($7 * $71);
         $118 = Math_fround($117 / $31);
         $119 = (~~(($118)));
         $$039$i$i = $119;
        } else {
         $120 = Math_fround($33 * $71);
         $121 = Math_fround($120 / $31);
         $122 = (~~(($121)));
         HEAP32[$22>>2] = $122;
         $$039$i$i = $69;
        }
        $123 = (($$039$i$i) + ($69))|0;
        $124 = HEAP32[$1>>2]|0;
        $125 = (($124) + ($123))|0;
        $126 = HEAP32[$24>>2]|0;
        $127 = ($125|0)>($126|0);
        if ($127) {
         $128 = $126 >> 1;
         $129 = (($126) + ($123))|0;
         $130 = (($129) + ($128))|0;
         HEAP32[$24>>2] = $130;
         $131 = HEAP32[$26>>2]|0;
         $132 = $70 << 1;
         $133 = Math_imul($132, $130)|0;
         $134 = (_realloc($131,$133)|0);
         HEAP32[$26>>2] = $134;
         $135 = ($134|0)==(0|0);
         if ($135) {
          break L1;
         }
         $$pre41$i$i = HEAP32[$1>>2]|0;
         $137 = $$pre41$i$i;$139 = $134;
        } else {
         $$pre$i3$i = HEAP32[$26>>2]|0;
         $137 = $124;$139 = $$pre$i3$i;
        }
        $136 = Math_imul($137, $70)|0;
        $138 = (($139) + ($136<<1)|0);
        $140 = Math_imul($70, $69)|0;
        $141 = $140 << 1;
        _memcpy(($138|0),($68|0),($141|0))|0;
        $142 = HEAP32[$26>>2]|0;
        $143 = HEAP32[$1>>2]|0;
        $144 = (($143) + ($69))|0;
        $145 = Math_imul($144, $70)|0;
        $146 = (($142) + ($145<<1)|0);
        $147 = (($68) + ($140<<1)|0);
        $148 = ($70|0)>(0);
        $149 = ($$039$i$i|0)>(0);
        $or$cond$i$i5$i = $148 & $149;
        if ($or$cond$i$i5$i) {
         $$03341$us$i$i8$i = 0;
         while(1) {
          $150 = (($146) + ($$03341$us$i$i8$i<<1)|0);
          $151 = (($68) + ($$03341$us$i$i8$i<<1)|0);
          $152 = (($147) + ($$03341$us$i$i8$i<<1)|0);
          $$03439$us$i$i11$i = $152;$$03538$us$i$i12$i = $151;$$03637$us$i$i13$i = $150;$$040$us$i$i10$i = 0;
          while(1) {
           $153 = HEAP16[$$03439$us$i$i11$i>>1]|0;
           $154 = $153 << 16 >> 16;
           $155 = (($$039$i$i) - ($$040$us$i$i10$i))|0;
           $156 = Math_imul($155, $154)|0;
           $157 = HEAP16[$$03538$us$i$i12$i>>1]|0;
           $158 = $157 << 16 >> 16;
           $159 = Math_imul($$040$us$i$i10$i, $158)|0;
           $160 = (($159) + ($156))|0;
           $161 = (($160|0) / ($$039$i$i|0))&-1;
           $162 = $161&65535;
           HEAP16[$$03637$us$i$i13$i>>1] = $162;
           $163 = (($$03637$us$i$i13$i) + ($70<<1)|0);
           $164 = (($$03439$us$i$i11$i) + ($70<<1)|0);
           $165 = (($$03538$us$i$i12$i) + ($70<<1)|0);
           $166 = (($$040$us$i$i10$i) + 1)|0;
           $exitcond$i$i14$i = ($166|0)==($$039$i$i|0);
           if ($exitcond$i$i14$i) {
            break;
           } else {
            $$03439$us$i$i11$i = $164;$$03538$us$i$i12$i = $165;$$03637$us$i$i13$i = $163;$$040$us$i$i10$i = $166;
           }
          }
          $167 = (($$03341$us$i$i8$i) + 1)|0;
          $exitcond46$i$i15$i = ($167|0)==($70|0);
          if ($exitcond46$i$i15$i) {
           break;
          } else {
           $$03341$us$i$i8$i = $167;
          }
         }
        }
        $168 = (($143) + ($123))|0;
        HEAP32[$1>>2] = $168;
        $$040$i = $$039$i$i;$$pn$i = $$039$i$i;
        break;
       }
       if ($27) {
        $74 = Math_fround($29 * $71);
        $75 = Math_fround($74 / $30);
        $76 = (~~(($75)));
        HEAP32[$22>>2] = $76;
        $$025$i$i = $69;
       } else {
        $72 = Math_fround($71 / $30);
        $73 = (~~(($72)));
        $$025$i$i = $73;
       }
       $77 = HEAP32[$1>>2]|0;
       $78 = (($77) + ($$025$i$i))|0;
       $79 = HEAP32[$24>>2]|0;
       $80 = ($78|0)>($79|0);
       if ($80) {
        $81 = $79 >> 1;
        $82 = (($79) + ($$025$i$i))|0;
        $83 = (($82) + ($81))|0;
        HEAP32[$24>>2] = $83;
        $84 = HEAP32[$26>>2]|0;
        $85 = $70 << 1;
        $86 = Math_imul($85, $83)|0;
        $87 = (_realloc($84,$86)|0);
        HEAP32[$26>>2] = $87;
        $88 = ($87|0)==(0|0);
        if ($88) {
         $$0$i$i = 0;
        } else {
         $$pre27$i$i = HEAP32[$1>>2]|0;
         $90 = $$pre27$i$i;$92 = $87;
         label = 18;
        }
       } else {
        $$pre$i1$i = HEAP32[$26>>2]|0;
        $90 = $77;$92 = $$pre$i1$i;
        label = 18;
       }
       if ((label|0) == 18) {
        label = 0;
        $89 = Math_imul($90, $70)|0;
        $91 = (($92) + ($89<<1)|0);
        $93 = Math_imul($70, $69)|0;
        $94 = (($68) + ($93<<1)|0);
        $95 = ($70|0)>(0);
        $96 = ($$025$i$i|0)>(0);
        $or$cond$i$i$i = $95 & $96;
        if ($or$cond$i$i$i) {
         $$03341$us$i$i$i = 0;
         while(1) {
          $97 = (($91) + ($$03341$us$i$i$i<<1)|0);
          $98 = (($94) + ($$03341$us$i$i$i<<1)|0);
          $99 = (($68) + ($$03341$us$i$i$i<<1)|0);
          $$03439$us$i$i$i = $99;$$03538$us$i$i$i = $98;$$03637$us$i$i$i = $97;$$040$us$i$i$i = 0;
          while(1) {
           $100 = HEAP16[$$03439$us$i$i$i>>1]|0;
           $101 = $100 << 16 >> 16;
           $102 = (($$025$i$i) - ($$040$us$i$i$i))|0;
           $103 = Math_imul($102, $101)|0;
           $104 = HEAP16[$$03538$us$i$i$i>>1]|0;
           $105 = $104 << 16 >> 16;
           $106 = Math_imul($$040$us$i$i$i, $105)|0;
           $107 = (($106) + ($103))|0;
           $108 = (($107|0) / ($$025$i$i|0))&-1;
           $109 = $108&65535;
           HEAP16[$$03637$us$i$i$i>>1] = $109;
           $110 = (($$03637$us$i$i$i) + ($70<<1)|0);
           $111 = (($$03439$us$i$i$i) + ($70<<1)|0);
           $112 = (($$03538$us$i$i$i) + ($70<<1)|0);
           $113 = (($$040$us$i$i$i) + 1)|0;
           $exitcond$i$i$i = ($113|0)==($$025$i$i|0);
           if ($exitcond$i$i$i) {
            break;
           } else {
            $$03439$us$i$i$i = $111;$$03538$us$i$i$i = $112;$$03637$us$i$i$i = $110;$$040$us$i$i$i = $113;
           }
          }
          $114 = (($$03341$us$i$i$i) + 1)|0;
          $exitcond46$i$i$i = ($114|0)==($70|0);
          if ($exitcond46$i$i$i) {
           break;
          } else {
           $$03341$us$i$i$i = $114;
          }
         }
        }
        $115 = (($90) + ($$025$i$i))|0;
        HEAP32[$1>>2] = $115;
        $$0$i$i = $$025$i$i;
       }
       $116 = (($$0$i$i) + ($69))|0;
       $$040$i = $$0$i$i;$$pn$i = $116;
      }
     } while(0);
     $$1$i = (($$pn$i) + ($$041$i))|0;
     $169 = ($$040$i|0)==(0);
     if ($169) {
      break L1;
     }
     $170 = (($$1$i) + ($20))|0;
     $171 = ($170|0)>($18|0);
     if ($171) {
      break;
     } else {
      $$041$i = $$1$i;
     }
    }
    $172 = HEAP32[$17>>2]|0;
    $173 = (($172) - ($$1$i))|0;
    $174 = ($173|0)>(0);
    if ($174) {
     $175 = HEAP32[$0>>2]|0;
     $176 = HEAP32[$23>>2]|0;
     $177 = Math_imul($176, $$1$i)|0;
     $178 = (($175) + ($177<<1)|0);
     $179 = $173 << 1;
     $180 = Math_imul($179, $176)|0;
     _memmove(($175|0),($178|0),($180|0))|0;
    }
    HEAP32[$17>>2] = $173;
   }
  } else {
   $181 = HEAP32[$0>>2]|0;
   $182 = ((($0)) + 64|0);
   $183 = HEAP32[$182>>2]|0;
   $184 = (($183) + ($2))|0;
   $185 = ((($0)) + 60|0);
   $186 = HEAP32[$185>>2]|0;
   $187 = ($184|0)>($186|0);
   do {
    if ($187) {
     $188 = $186 >> 1;
     $189 = (($186) + ($183))|0;
     $190 = (($189) + ($188))|0;
     HEAP32[$185>>2] = $190;
     $191 = ((($0)) + 4|0);
     $192 = HEAP32[$191>>2]|0;
     $193 = $190 << 1;
     $194 = ((($0)) + 48|0);
     $195 = HEAP32[$194>>2]|0;
     $196 = Math_imul($193, $195)|0;
     $197 = (_realloc($192,$196)|0);
     HEAP32[$191>>2] = $197;
     $198 = ($197|0)==(0|0);
     if ($198) {
      $$036 = 0;
      return ($$036|0);
     } else {
      $$pre11$i = HEAP32[$1>>2]|0;
      $$pre$phi13$iZ2D = $194;$201 = $$pre11$i;$203 = $197;
      break;
     }
    } else {
     $$phi$trans$insert$i = ((($0)) + 4|0);
     $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
     $$pre12$i = ((($0)) + 48|0);
     $$pre$phi13$iZ2D = $$pre12$i;$201 = $2;$203 = $$pre$i;
    }
   } while(0);
   $199 = HEAP32[$$pre$phi13$iZ2D>>2]|0;
   $200 = Math_imul($199, $201)|0;
   $202 = (($203) + ($200<<1)|0);
   $204 = $183 << 1;
   $205 = Math_imul($204, $199)|0;
   _memcpy(($202|0),($181|0),($205|0))|0;
   $206 = HEAP32[$1>>2]|0;
   $207 = (($206) + ($183))|0;
   HEAP32[$1>>2] = $207;
   HEAP32[$182>>2] = 0;
  }
 } while(0);
 $208 = HEAP32[$10>>2]|0;
 $209 = ($208|0)==(0);
 do {
  if ($209) {
   $350 = $spec$select != Math_fround(1.0);
   if ($350) {
    $351 = ((($0)) + 92|0);
    $352 = HEAP32[$351>>2]|0;
    $353 = (Math_fround(($352|0)));
    $354 = Math_fround($353 / $spec$select);
    $355 = (~~(($354)));
    $356 = ((($0)) + 48|0);
    $357 = HEAP32[$356>>2]|0;
    $358 = ($355|0)>(16384);
    $359 = ($352|0)>(16384);
    $360 = $359 | $358;
    if ($360) {
     $$06499$i = $355;$$06598$i = $352;
     while(1) {
      $361 = $$06499$i >> 1;
      $362 = $$06598$i >> 1;
      $363 = ($$06499$i|0)>(32769);
      $364 = ($$06598$i|0)>(32769);
      $365 = $363 | $364;
      if ($365) {
       $$06499$i = $361;$$06598$i = $362;
      } else {
       $$064$lcssa$i = $361;$$065$lcssa$i = $362;
       break;
      }
     }
    } else {
     $$064$lcssa$i = $355;$$065$lcssa$i = $352;
    }
    $366 = HEAP32[$1>>2]|0;
    $367 = ($366|0)==($2|0);
    if (!($367)) {
     $368 = (($366) - ($2))|0;
     $369 = ((($0)) + 72|0);
     $370 = HEAP32[$369>>2]|0;
     $371 = (($370) + ($368))|0;
     $372 = ((($0)) + 56|0);
     $373 = HEAP32[$372>>2]|0;
     $374 = ($371|0)>($373|0);
     do {
      if ($374) {
       $375 = $373 >> 1;
       $376 = (($373) + ($368))|0;
       $377 = (($376) + ($375))|0;
       HEAP32[$372>>2] = $377;
       $378 = ((($0)) + 8|0);
       $379 = HEAP32[$378>>2]|0;
       $380 = $357 << 1;
       $381 = Math_imul($377, $380)|0;
       $382 = (_realloc($379,$381)|0);
       HEAP32[$378>>2] = $382;
       $383 = ($382|0)==(0|0);
       if ($383) {
        $$036 = 0;
        return ($$036|0);
       } else {
        $$pre30$i$i45 = HEAP32[$369>>2]|0;
        $$pre$phi$i47Z2D = $380;$385 = $$pre30$i$i45;$387 = $382;
        break;
       }
      } else {
       $$phi$trans$insert$i$i42 = ((($0)) + 8|0);
       $$pre$i$i43 = HEAP32[$$phi$trans$insert$i$i42>>2]|0;
       $$pre115$i = $357 << 1;
       $$pre$phi$i47Z2D = $$pre115$i;$385 = $370;$387 = $$pre$i$i43;
      }
     } while(0);
     $384 = Math_imul($385, $357)|0;
     $386 = (($387) + ($384<<1)|0);
     $388 = ((($0)) + 4|0);
     $389 = HEAP32[$388>>2]|0;
     $390 = Math_imul($357, $2)|0;
     $391 = (($389) + ($390<<1)|0);
     $392 = Math_imul($$pre$phi$i47Z2D, $368)|0;
     _memcpy(($386|0),($391|0),($392|0))|0;
     HEAP32[$1>>2] = $2;
     $393 = HEAP32[$369>>2]|0;
     $394 = (($393) + ($368))|0;
     HEAP32[$369>>2] = $394;
     $395 = ($394|0)>(12);
     if ($395) {
      $396 = ((($0)) + 32|0);
      $397 = ((($0)) + 36|0);
      $398 = ((($0)) + 60|0);
      $399 = ((($0)) + 8|0);
      $400 = ($357|0)>(0);
      $$pre$i48 = HEAP32[$396>>2]|0;
      $$pre111$i = HEAP32[$397>>2]|0;
      $$06392$i = 0;$402 = $$pre$i48;$405 = $$pre111$i;$542 = $2;
      L85: while(1) {
       $401 = (($402) + 1)|0;
       $403 = Math_imul($401, $$064$lcssa$i)|0;
       $404 = Math_imul($405, $$065$lcssa$i)|0;
       $406 = ($403|0)>($404|0);
       L87: do {
        if ($406) {
         $407 = Math_imul($$06392$i, $357)|0;
         if (!($400)) {
          $$pre114$i90 = $402;$481 = $542;$544 = $405;
          while(1) {
           $479 = HEAP32[$398>>2]|0;
           $480 = ($481|0)<($479|0);
           if ($480) {
            $$pre114$i = $$pre114$i90;$492 = $544;$494 = $481;
           } else {
            $482 = $479 >> 1;
            $483 = (($479) + 1)|0;
            $484 = (($483) + ($482))|0;
            HEAP32[$398>>2] = $484;
            $485 = HEAP32[$388>>2]|0;
            $486 = $484 << 1;
            $487 = HEAP32[$356>>2]|0;
            $488 = Math_imul($486, $487)|0;
            $489 = (_realloc($485,$488)|0);
            HEAP32[$388>>2] = $489;
            $490 = ($489|0)==(0|0);
            if ($490) {
             $$036 = 0;
             label = 124;
             break L85;
            }
            $$pre112$i = HEAP32[$1>>2]|0;
            $$pre113$i = HEAP32[$397>>2]|0;
            $$pre114$i$pre = HEAP32[$396>>2]|0;
            $$pre114$i = $$pre114$i$pre;$492 = $$pre113$i;$494 = $$pre112$i;
           }
           $$pre116$i = (($$pre114$i) + 1)|0;
           $$pre118$i = Math_imul($$pre116$i, $$064$lcssa$i)|0;
           $491 = (($492) + 1)|0;
           HEAP32[$397>>2] = $491;
           $493 = (($494) + 1)|0;
           HEAP32[$1>>2] = $493;
           $495 = Math_imul($491, $$065$lcssa$i)|0;
           $496 = ($$pre118$i|0)>($495|0);
           if ($496) {
            $$pre114$i90 = $$pre114$i;$481 = $493;$544 = $491;
           } else {
            $$lcssa73$i = $$pre116$i;$499 = $491;$543 = $493;
            break L87;
           }
          }
         }
         $410 = $542;$545 = $402;$546 = $405;
         while(1) {
          $408 = HEAP32[$398>>2]|0;
          $409 = ($410|0)<($408|0);
          if ($409) {
           $424 = $410;$427 = $545;$431 = $546;
          } else {
           $411 = $408 >> 1;
           $412 = (($408) + 1)|0;
           $413 = (($412) + ($411))|0;
           HEAP32[$398>>2] = $413;
           $414 = HEAP32[$388>>2]|0;
           $415 = $413 << 1;
           $416 = HEAP32[$356>>2]|0;
           $417 = Math_imul($415, $416)|0;
           $418 = (_realloc($414,$417)|0);
           HEAP32[$388>>2] = $418;
           $419 = ($418|0)==(0|0);
           if ($419) {
            $$036 = 0;
            label = 124;
            break L85;
           }
           $$pre112$i$us = HEAP32[$1>>2]|0;
           $$pre113$i$us = HEAP32[$397>>2]|0;
           $$pre = HEAP32[$396>>2]|0;
           $424 = $$pre112$i$us;$427 = $$pre;$431 = $$pre113$i$us;
          }
          $420 = HEAP32[$399>>2]|0;
          $421 = (($420) + ($407<<1)|0);
          $422 = HEAP32[$388>>2]|0;
          $423 = Math_imul($424, $357)|0;
          $425 = (($422) + ($423<<1)|0);
          $426 = (($427) + 1)|0;
          $428 = Math_imul($426, $$064$lcssa$i)|0;
          $429 = HEAP32[$356>>2]|0;
          $430 = Math_imul($431, $$065$lcssa$i)|0;
          $432 = (($428) - ($430))|0;
          $433 = ($432*50)|0;
          $434 = (($433) + -50)|0;
          $435 = (($434|0) / ($$064$lcssa$i|0))&-1;
          $reass$add$i$i$i$us = Math_imul($435, $$064$lcssa$i)|0;
          $436 = (($434) - ($reass$add$i$i$i$us))|0;
          $437 = (($$064$lcssa$i) - ($436))|0;
          $$06084$i$us = 0;$$06183$i$us = $425;$$06282$i$us = $421;
          while(1) {
           $$05357$i$i$us = 0;$$05456$i$i$us = 0;$$058$i$i$us = 0;
           while(1) {
            $438 = ($$05357$i$i$us*50)|0;
            $439 = (($438) + ($435))|0;
            $440 = (($439) + 1)|0;
            $441 = (32320 + ($439<<1)|0);
            $442 = HEAP16[$441>>1]|0;
            $443 = $442 << 16 >> 16;
            $444 = (32320 + ($440<<1)|0);
            $445 = HEAP16[$444>>1]|0;
            $446 = $445 << 16 >> 16;
            $447 = Math_imul($437, $443)|0;
            $448 = Math_imul($436, $446)|0;
            $449 = (($448) + ($447))|0;
            $450 = $449 << 1;
            $451 = (($450|0) / ($$064$lcssa$i|0))&-1;
            $452 = Math_imul($$05357$i$i$us, $429)|0;
            $453 = (($$06282$i$us) + ($452<<1)|0);
            $454 = HEAP16[$453>>1]|0;
            $455 = $454 << 16 >> 16;
            $456 = Math_imul($451, $455)|0;
            $457 = $$05456$i$i$us >> 31;
            $458 = $457 | 1;
            $459 = (($456) + ($$05456$i$i$us))|0;
            $460 = $459 >> 31;
            $461 = $460 | 1;
            $462 = ($458|0)==($461|0);
            $463 = $456 >> 31;
            $464 = $463 | 1;
            $465 = ($464|0)==($458|0);
            $466 = $465 ? $458 : 0;
            $spec$select$i$i52$us = $462 ? 0 : $466;
            $spec$select55$i$i$us = (($spec$select$i$i52$us) + ($$058$i$i$us))|0;
            $467 = (($$05357$i$i$us) + 1)|0;
            $exitcond$i$i53$us = ($467|0)==(12);
            if ($exitcond$i$i53$us) {
             break;
            } else {
             $$05357$i$i$us = $467;$$05456$i$i$us = $459;$$058$i$i$us = $spec$select55$i$i$us;
            }
           }
           $468 = ($spec$select55$i$i$us|0)>(0);
           if ($468) {
            $$052$i$i$us = 32767;
           } else {
            $469 = ($spec$select55$i$i$us|0)<(0);
            if ($469) {
             $$052$i$i$us = -32768;
            } else {
             $470 = $459 >>> 16;
             $471 = $470&65535;
             $$052$i$i$us = $471;
            }
           }
           $472 = ((($$06183$i$us)) + 2|0);
           HEAP16[$$06183$i$us>>1] = $$052$i$i$us;
           $473 = ((($$06282$i$us)) + 2|0);
           $474 = (($$06084$i$us) + 1)|0;
           $exitcond$i$us = ($474|0)==($357|0);
           if ($exitcond$i$us) {
            break;
           } else {
            $$06084$i$us = $474;$$06183$i$us = $472;$$06282$i$us = $473;
           }
          }
          $475 = (($431) + 1)|0;
          HEAP32[$397>>2] = $475;
          $476 = (($424) + 1)|0;
          HEAP32[$1>>2] = $476;
          $477 = Math_imul($475, $$065$lcssa$i)|0;
          $478 = ($428|0)>($477|0);
          if ($478) {
           $410 = $476;$545 = $427;$546 = $475;
          } else {
           $$lcssa73$i = $426;$499 = $475;$543 = $476;
           break;
          }
         }
        } else {
         $$lcssa73$i = $401;$499 = $405;$543 = $542;
        }
       } while(0);
       HEAP32[$396>>2] = $$lcssa73$i;
       $497 = ($$lcssa73$i|0)==($$065$lcssa$i|0);
       if ($497) {
        HEAP32[$396>>2] = 0;
        $498 = ($499|0)==($$064$lcssa$i|0);
        if (!($498)) {
         label = 114;
         break;
        }
        HEAP32[$397>>2] = 0;
        $547 = 0;$548 = 0;
       } else {
        $547 = $499;$548 = $$lcssa73$i;
       }
       $501 = (($$06392$i) + 1)|0;
       $502 = HEAP32[$369>>2]|0;
       $503 = (($502) + -12)|0;
       $504 = ($501|0)<($503|0);
       if ($504) {
        $$06392$i = $501;$402 = $548;$405 = $547;$542 = $543;
       } else {
        label = 117;
        break;
       }
      }
      if ((label|0) == 114) {
       $500 = HEAP32[9213]|0;
       (_fwrite(37944,59,1,$500)|0);
       _exit(1);
       // unreachable;
      }
      else if ((label|0) == 117) {
       $505 = HEAP32[$356>>2]|0;
       $506 = HEAP32[$399>>2]|0;
       $507 = ($502|0)==($501|0);
       if ($507) {
        $514 = $501;
       } else {
        $508 = (($502) - ($501))|0;
        $509 = $508 << 1;
        $510 = Math_imul($509, $505)|0;
        $511 = Math_imul($505, $501)|0;
        $512 = (($506) + ($511<<1)|0);
        _memmove(($506|0),($512|0),($510|0))|0;
        $$pre$i67$i55 = HEAP32[$369>>2]|0;
        $514 = $$pre$i67$i55;
       }
       $513 = (($514) - ($501))|0;
       HEAP32[$369>>2] = $513;
       break;
      }
      else if ((label|0) == 124) {
       return ($$036|0);
      }
     }
    }
   }
  } else {
   $210 = Math_fround(HEAPF32[$5>>2]);
   $211 = $210 != Math_fround(1.0);
   if ($211) {
    $212 = ((($0)) + 48|0);
    $213 = HEAP32[$212>>2]|0;
    $214 = HEAP32[$1>>2]|0;
    $215 = ($214|0)==($2|0);
    if (!($215)) {
     $216 = (($214) - ($2))|0;
     $217 = ((($0)) + 72|0);
     $218 = HEAP32[$217>>2]|0;
     $219 = (($218) + ($216))|0;
     $220 = ((($0)) + 56|0);
     $221 = HEAP32[$220>>2]|0;
     $222 = ($219|0)>($221|0);
     do {
      if ($222) {
       $223 = $221 >> 1;
       $224 = (($221) + ($216))|0;
       $225 = (($224) + ($223))|0;
       HEAP32[$220>>2] = $225;
       $226 = ((($0)) + 8|0);
       $227 = HEAP32[$226>>2]|0;
       $228 = $213 << 1;
       $229 = Math_imul($225, $228)|0;
       $230 = (_realloc($227,$229)|0);
       HEAP32[$226>>2] = $230;
       $231 = ($230|0)==(0|0);
       if ($231) {
        $$036 = 0;
        return ($$036|0);
       } else {
        $$pre30$i$i = HEAP32[$217>>2]|0;
        $$pre$phi$iZ2D = $228;$233 = $$pre30$i$i;$235 = $230;
        break;
       }
      } else {
       $$phi$trans$insert$i$i = ((($0)) + 8|0);
       $$pre$i$i37 = HEAP32[$$phi$trans$insert$i$i>>2]|0;
       $$pre87$i = $213 << 1;
       $$pre$phi$iZ2D = $$pre87$i;$233 = $218;$235 = $$pre$i$i37;
      }
     } while(0);
     $232 = Math_imul($233, $213)|0;
     $234 = (($235) + ($232<<1)|0);
     $236 = ((($0)) + 4|0);
     $237 = HEAP32[$236>>2]|0;
     $238 = Math_imul($213, $2)|0;
     $239 = (($237) + ($238<<1)|0);
     $240 = Math_imul($$pre$phi$iZ2D, $216)|0;
     _memcpy(($234|0),($239|0),($240|0))|0;
     HEAP32[$1>>2] = $2;
     $241 = HEAP32[$217>>2]|0;
     $242 = (($241) + ($216))|0;
     HEAP32[$217>>2] = $242;
     $243 = ((($0)) + 84|0);
     $244 = HEAP32[$243>>2]|0;
     $245 = ($242|0)<($244|0);
     if (!($245)) {
      $246 = ((($0)) + 8|0);
      $247 = ((($0)) + 60|0);
      $248 = !($210 >= Math_fround(1.0));
      $249 = ($213|0)>(0);
      $$pre$i38 = HEAP32[$246>>2]|0;
      $$06576$i = 0;$252 = $$pre$i38;
      while(1) {
       $250 = Math_imul($$06576$i, $213)|0;
       $251 = (($252) + ($250<<1)|0);
       $253 = (_findPitchPeriod($0,$251,0)|0);
       $254 = (Math_fround(($253|0)));
       $255 = Math_fround($254 / $210);
       $256 = (~~(($255)));
       $257 = HEAP32[$1>>2]|0;
       $258 = (($257) + ($256))|0;
       $259 = HEAP32[$247>>2]|0;
       $260 = ($258|0)>($259|0);
       if ($260) {
        $261 = $259 >> 1;
        $262 = (($259) + ($256))|0;
        $263 = (($262) + ($261))|0;
        HEAP32[$247>>2] = $263;
        $264 = HEAP32[$236>>2]|0;
        $265 = $263 << 1;
        $266 = HEAP32[$212>>2]|0;
        $267 = Math_imul($265, $266)|0;
        $268 = (_realloc($264,$267)|0);
        HEAP32[$236>>2] = $268;
        $269 = ($268|0)==(0|0);
        if ($269) {
         $$036 = 0;
         label = 124;
         break;
        }
        $$pre85$i = HEAP32[$1>>2]|0;
        $271 = $$pre85$i;$273 = $268;
       } else {
        $$pre83$i = HEAP32[$236>>2]|0;
        $271 = $257;$273 = $$pre83$i;
       }
       $270 = Math_imul($271, $213)|0;
       $272 = (($273) + ($270<<1)|0);
       $274 = HEAP32[$246>>2]|0;
       $275 = (($274) + ($250<<1)|0);
       if ($248) {
        $299 = (($256) - ($253))|0;
        $300 = ($256|0)>(0);
        $or$cond$i = $249 & $300;
        if ($or$cond$i) {
         $$05362$us$i$i = 0;
         while(1) {
          $301 = (($272) + ($$05362$us$i$i<<1)|0);
          $302 = (($275) + ($$05362$us$i$i<<1)|0);
          $$05460$us$i$i = $302;$$05559$us$i$i = $302;$$05758$us$i$i = $301;$$061$us$i$i = 0;
          while(1) {
           $303 = ($$061$us$i$i|0)<($299|0);
           do {
            if ($303) {
             $325 = HEAP16[$$05460$us$i$i>>1]|0;
             $326 = $325 << 16 >> 16;
             $327 = (($253) - ($$061$us$i$i))|0;
             $328 = Math_imul($327, $326)|0;
             $329 = (($328|0) / ($253|0))&-1;
             $330 = $329&65535;
             HEAP16[$$05758$us$i$i>>1] = $330;
             $331 = (($$05460$us$i$i) + ($213<<1)|0);
             $$1$us$i$i = $331;$$156$us$i$i = $$05559$us$i$i;
            } else {
             $304 = ($253|0)>($$061$us$i$i|0);
             if ($304) {
              $312 = HEAP16[$$05460$us$i$i>>1]|0;
              $313 = $312 << 16 >> 16;
              $314 = (($253) - ($$061$us$i$i))|0;
              $315 = Math_imul($314, $313)|0;
              $316 = HEAP16[$$05559$us$i$i>>1]|0;
              $317 = $316 << 16 >> 16;
              $318 = (($$061$us$i$i) - ($299))|0;
              $319 = Math_imul($318, $317)|0;
              $320 = (($319) + ($315))|0;
              $321 = (($320|0) / ($253|0))&-1;
              $322 = $321&65535;
              HEAP16[$$05758$us$i$i>>1] = $322;
              $323 = (($$05460$us$i$i) + ($213<<1)|0);
              $324 = (($$05559$us$i$i) + ($213<<1)|0);
              $$1$us$i$i = $323;$$156$us$i$i = $324;
              break;
             } else {
              $305 = HEAP16[$$05559$us$i$i>>1]|0;
              $306 = $305 << 16 >> 16;
              $307 = (($$061$us$i$i) - ($299))|0;
              $308 = Math_imul($307, $306)|0;
              $309 = (($308|0) / ($253|0))&-1;
              $310 = $309&65535;
              HEAP16[$$05758$us$i$i>>1] = $310;
              $311 = (($$05559$us$i$i) + ($213<<1)|0);
              $$1$us$i$i = $$05460$us$i$i;$$156$us$i$i = $311;
              break;
             }
            }
           } while(0);
           $332 = (($$05758$us$i$i) + ($213<<1)|0);
           $333 = (($$061$us$i$i) + 1)|0;
           $exitcond$i69$i = ($333|0)==($256|0);
           if ($exitcond$i69$i) {
            break;
           } else {
            $$05460$us$i$i = $$1$us$i$i;$$05559$us$i$i = $$156$us$i$i;$$05758$us$i$i = $332;$$061$us$i$i = $333;
           }
          }
          $334 = (($$05362$us$i$i) + 1)|0;
          $exitcond67$i$i = ($334|0)==($213|0);
          if ($exitcond67$i$i) {
           break;
          } else {
           $$05362$us$i$i = $334;
          }
         }
        }
       } else {
        $276 = (($253) + ($$06576$i))|0;
        $277 = (($276) - ($256))|0;
        $278 = Math_imul($277, $213)|0;
        $279 = (($274) + ($278<<1)|0);
        $280 = ($256|0)>(0);
        $or$cond$i$i = $249 & $280;
        if ($or$cond$i$i) {
         $$03341$us$i$i = 0;
         while(1) {
          $281 = (($272) + ($$03341$us$i$i<<1)|0);
          $282 = (($279) + ($$03341$us$i$i<<1)|0);
          $283 = (($275) + ($$03341$us$i$i<<1)|0);
          $$03439$us$i$i = $283;$$03538$us$i$i = $282;$$03637$us$i$i = $281;$$040$us$i$i = 0;
          while(1) {
           $284 = HEAP16[$$03439$us$i$i>>1]|0;
           $285 = $284 << 16 >> 16;
           $286 = (($256) - ($$040$us$i$i))|0;
           $287 = Math_imul($286, $285)|0;
           $288 = HEAP16[$$03538$us$i$i>>1]|0;
           $289 = $288 << 16 >> 16;
           $290 = Math_imul($$040$us$i$i, $289)|0;
           $291 = (($290) + ($287))|0;
           $292 = (($291|0) / ($256|0))&-1;
           $293 = $292&65535;
           HEAP16[$$03637$us$i$i>>1] = $293;
           $294 = (($$03637$us$i$i) + ($213<<1)|0);
           $295 = (($$03439$us$i$i) + ($213<<1)|0);
           $296 = (($$03538$us$i$i) + ($213<<1)|0);
           $297 = (($$040$us$i$i) + 1)|0;
           $exitcond$i$i = ($297|0)==($256|0);
           if ($exitcond$i$i) {
            break;
           } else {
            $$03439$us$i$i = $295;$$03538$us$i$i = $296;$$03637$us$i$i = $294;$$040$us$i$i = $297;
           }
          }
          $298 = (($$03341$us$i$i) + 1)|0;
          $exitcond46$i$i = ($298|0)==($213|0);
          if ($exitcond46$i$i) {
           break;
          } else {
           $$03341$us$i$i = $298;
          }
         }
        }
       }
       $335 = (($271) + ($256))|0;
       HEAP32[$1>>2] = $335;
       $336 = (($253) + ($$06576$i))|0;
       $337 = HEAP32[$217>>2]|0;
       $338 = (($337) - ($336))|0;
       $339 = HEAP32[$243>>2]|0;
       $340 = ($338|0)<($339|0);
       if ($340) {
        break;
       } else {
        $$06576$i = $336;$252 = $274;
       }
      }
      if ((label|0) == 124) {
       return ($$036|0);
      }
      $341 = HEAP32[$212>>2]|0;
      $342 = ($336|0)==(0);
      if (!($342)) {
       $343 = ($337|0)==($336|0);
       if ($343) {
        $349 = $336;
       } else {
        $344 = $338 << 1;
        $345 = Math_imul($344, $341)|0;
        $346 = Math_imul($341, $336)|0;
        $347 = (($274) + ($346<<1)|0);
        _memmove(($274|0),($347|0),($345|0))|0;
        $$pre$i67$i = HEAP32[$217>>2]|0;
        $349 = $$pre$i67$i;
       }
       $348 = (($349) - ($336))|0;
       HEAP32[$217>>2] = $348;
      }
     }
    }
   }
  }
 } while(0);
 $515 = ((($0)) + 20|0);
 $516 = Math_fround(HEAPF32[$515>>2]);
 $517 = $516 != Math_fround(1.0);
 if (!($517)) {
  $$036 = 1;
  return ($$036|0);
 }
 $518 = ((($0)) + 48|0);
 $519 = HEAP32[$518>>2]|0;
 $520 = HEAP32[$1>>2]|0;
 $521 = (($520) - ($2))|0;
 $522 = Math_imul($521, $519)|0;
 $523 = Math_fround($516 * Math_fround(4096.0));
 $524 = (~~(($523)));
 $525 = ($522|0)==(0);
 if ($525) {
  $$036 = 1;
  return ($$036|0);
 }
 $526 = ((($0)) + 4|0);
 $527 = HEAP32[$526>>2]|0;
 $528 = Math_imul($519, $2)|0;
 $529 = (($527) + ($528<<1)|0);
 $$01014$i = $529;$$01113$i = $522;
 while(1) {
  $530 = (($$01113$i) + -1)|0;
  $531 = HEAP16[$$01014$i>>1]|0;
  $532 = $531 << 16 >> 16;
  $533 = Math_imul($532, $524)|0;
  $534 = ($533|0)>(134217727);
  $535 = $533 >>> 12;
  $536 = ($533|0)<(-134213632);
  $537 = $535&65535;
  $538 = $536 ? -32767 : $537;
  $539 = $534 ? 32767 : $538;
  $540 = ((($$01014$i)) + 2|0);
  HEAP16[$$01014$i>>1] = $539;
  $541 = ($530|0)==(0);
  if ($541) {
   $$036 = 1;
   break;
  } else {
   $$01014$i = $540;$$01113$i = $530;
  }
 }
 return ($$036|0);
}
function _findPitchPeriod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0164 = 0, $$0165 = 0, $$0273$us$i = 0, $$0273$us$i150 = 0, $$0282$us$i = 0, $$0282$us$i151 = 0, $$0296$us$i = 0, $$0296$us$i147 = 0, $$0305$us$i = 0, $$0305$us$i148 = 0, $$059$lcssa$i = 0, $$059$lcssa$i117 = 0, $$059$lcssa$i141 = 0, $$059$lcssa$i92 = 0, $$05979$i = 0, $$05979$i120 = 0, $$05979$i71 = 0, $$05979$i96 = 0, $$060$lcssa$i = 0;
 var $$060$lcssa$i116 = 0, $$060$lcssa$i140 = 0, $$060$lcssa$i91 = 0, $$06078$i = 0, $$06078$i121 = 0, $$06078$i72 = 0, $$06078$i97 = 0, $$061 = 0, $$062 = 0, $$062$lcssa$i = 0, $$062$lcssa$i108 = 0, $$062$lcssa$i132 = 0, $$062$lcssa$i83 = 0, $$06273$i = 0, $$06273$i103 = 0, $$06273$i127 = 0, $$06273$i78 = 0, $$06377$i = 0, $$06377$i122 = 0, $$06377$i73 = 0;
 var $$06377$i98 = 0, $$064 = 0, $$064$lcssa$i = 0, $$064$lcssa$i115 = 0, $$064$lcssa$i139 = 0, $$064$lcssa$i90 = 0, $$06476$i = 0, $$06476$i123 = 0, $$06476$i74 = 0, $$06476$i99 = 0, $$06672$i = 0, $$06672$i104 = 0, $$06672$i128 = 0, $$06672$i79 = 0, $$06771$i = 0, $$06771$i105 = 0, $$06771$i129 = 0, $$06771$i80 = 0, $$068$lcssa$i = 0, $$068$lcssa$i114 = 0;
 var $$068$lcssa$i138 = 0, $$068$lcssa$i89 = 0, $$06875$i = 0, $$06875$i100 = 0, $$06875$i124 = 0, $$06875$i75 = 0, $$07$us$i = 0, $$07$us$i146 = 0, $$074$i = 0, $$074$i102 = 0, $$074$i126 = 0, $$074$i77 = 0, $$11$us$i = 0, $$11$us$i152 = 0, $$161$i = 0, $$161$i111 = 0, $$161$i135 = 0, $$161$i86 = 0, $$165$i = 0, $$165$i110 = 0;
 var $$165$i134 = 0, $$165$i85 = 0, $$idx$val = 0, $$idx66$val = 0, $$idx67 = 0, $$idx67$val = 0, $$idx69 = 0, $$idx69$val = 0, $$in$i = 0, $$in$i106 = 0, $$in$i130 = 0, $$in$i81 = 0, $$pre = 0, $$pre176 = 0, $$pre177 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i107 = 0, $exitcond$i131 = 0, $exitcond$i153 = 0, $exitcond$i82 = 0, $exitcond$i94 = 0, $exitcond13$i = 0, $exitcond13$i155 = 0, $or$cond = 0, $scevgep$i = 0, $scevgep$i154 = 0, $spec$select = 0;
 var $spec$select$i = 0, $spec$select$i112 = 0, $spec$select$i136 = 0, $spec$select$i87 = 0, $spec$select70$i = 0, $spec$select70$i113 = 0, $spec$select70$i137 = 0, $spec$select70$i88 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 76|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 80|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 92|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)>(4000);
 if ($9) {
  $10 = ((($0)) + 44|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0);
  if ($12) {
   $13 = (($8>>>0) / 4000)&-1;
   $$061 = $13;
  } else {
   $$061 = 1;
  }
 } else {
  $$061 = 1;
 }
 $14 = ((($0)) + 48|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(1);
 $17 = ($$061|0)==(1);
 $or$cond = $17 & $16;
 do {
  if ($or$cond) {
   $18 = ($4|0)>($6|0);
   if ($18) {
    $$059$lcssa$i = 0;$$060$lcssa$i = 1;$$064$lcssa$i = 0;$$068$lcssa$i = 255;
   } else {
    $$05979$i = 0;$$06078$i = 1;$$06377$i = $4;$$06476$i = 0;$$06875$i = 255;
    while(1) {
     $19 = ($$06377$i|0)>(0);
     if ($19) {
      $20 = (($1) + ($$06377$i<<1)|0);
      $$06273$i = 0;$$06672$i = $20;$$06771$i = $1;$$074$i = 0;
      while(1) {
       $21 = ((($$06771$i)) + 2|0);
       $22 = HEAP16[$$06771$i>>1]|0;
       $23 = ((($$06672$i)) + 2|0);
       $24 = HEAP16[$$06672$i>>1]|0;
       $25 = $22 << 16 >> 16;
       $26 = $24 << 16 >> 16;
       $27 = ($22<<16>>16)<($24<<16>>16);
       $28 = (($25) - ($26))|0;
       $29 = (($26) - ($25))|0;
       $$in$i = $27 ? $29 : $28;
       $30 = $$in$i & 65535;
       $31 = (($30) + ($$06273$i))|0;
       $32 = (($$074$i) + 1)|0;
       $exitcond$i = ($32|0)==($$06377$i|0);
       if ($exitcond$i) {
        $$062$lcssa$i = $31;
        break;
       } else {
        $$06273$i = $31;$$06672$i = $23;$$06771$i = $21;$$074$i = $32;
       }
      }
     } else {
      $$062$lcssa$i = 0;
     }
     $33 = ($$06476$i|0)==(0);
     if ($33) {
      label = 12;
     } else {
      $34 = Math_imul($$062$lcssa$i, $$06476$i)|0;
      $35 = Math_imul($$06377$i, $$06078$i)|0;
      $36 = ($34>>>0)<($35>>>0);
      if ($36) {
       label = 12;
      } else {
       $$161$i = $$06078$i;$$165$i = $$06476$i;
      }
     }
     if ((label|0) == 12) {
      label = 0;
      $$161$i = $$062$lcssa$i;$$165$i = $$06377$i;
     }
     $37 = Math_imul($$062$lcssa$i, $$06875$i)|0;
     $38 = Math_imul($$06377$i, $$05979$i)|0;
     $39 = ($37>>>0)>($38>>>0);
     $spec$select$i = $39 ? $$06377$i : $$06875$i;
     $spec$select70$i = $39 ? $$062$lcssa$i : $$05979$i;
     $40 = (($$06377$i) + 1)|0;
     $41 = ($$06377$i|0)<($6|0);
     if ($41) {
      $$05979$i = $spec$select70$i;$$06078$i = $$161$i;$$06377$i = $40;$$06476$i = $$165$i;$$06875$i = $spec$select$i;
     } else {
      $$059$lcssa$i = $spec$select70$i;$$060$lcssa$i = $$161$i;$$064$lcssa$i = $$165$i;$$068$lcssa$i = $spec$select$i;
      break;
     }
    }
   }
   $42 = (($$060$lcssa$i>>>0) / ($$064$lcssa$i>>>0))&-1;
   $43 = (($$059$lcssa$i>>>0) / ($$068$lcssa$i>>>0))&-1;
   $$0 = $$064$lcssa$i;$$0164 = $43;$$0165 = $42;
  } else {
   $$idx67 = ((($0)) + 12|0);
   $$idx67$val = HEAP32[$$idx67>>2]|0;
   $$idx69 = ((($0)) + 84|0);
   $$idx69$val = HEAP32[$$idx69>>2]|0;
   $44 = (($$idx69$val|0) / ($$061|0))&-1;
   $45 = Math_imul($15, $$061)|0;
   $46 = ($44|0)>(0);
   do {
    if ($46) {
     $47 = ($45|0)>(0);
     if (!($47)) {
      $57 = $44 << 1;
      _memset(($$idx67$val|0),0,($57|0))|0;
      $$pre = HEAP32[$$idx67>>2]|0;
      $$idx$val = $$pre;
      break;
     }
     $$0296$us$i147 = 0;$$0305$us$i148 = $1;$$07$us$i146 = $$idx67$val;
     while(1) {
      $$0273$us$i150 = 0;$$0282$us$i151 = 0;$$11$us$i152 = $$0305$us$i148;
      while(1) {
       $48 = ((($$11$us$i152)) + 2|0);
       $49 = HEAP16[$$11$us$i152>>1]|0;
       $50 = $49 << 16 >> 16;
       $51 = (($$0273$us$i150) + ($50))|0;
       $52 = (($$0282$us$i151) + 1)|0;
       $exitcond$i153 = ($52|0)==($45|0);
       if ($exitcond$i153) {
        break;
       } else {
        $$0273$us$i150 = $51;$$0282$us$i151 = $52;$$11$us$i152 = $48;
       }
      }
      $scevgep$i154 = (($$0305$us$i148) + ($45<<1)|0);
      $53 = (($51|0) / ($45|0))&-1;
      $54 = $53&65535;
      $55 = ((($$07$us$i146)) + 2|0);
      HEAP16[$$07$us$i146>>1] = $54;
      $56 = (($$0296$us$i147) + 1)|0;
      $exitcond13$i155 = ($56|0)==($44|0);
      if ($exitcond13$i155) {
       $$idx$val = $$idx67$val;
       break;
      } else {
       $$0296$us$i147 = $56;$$0305$us$i148 = $scevgep$i154;$$07$us$i146 = $55;
      }
     }
    } else {
     $$idx$val = $$idx67$val;
    }
   } while(0);
   $58 = (($4|0) / ($$061|0))&-1;
   $59 = (($6|0) / ($$061|0))&-1;
   $60 = ($58|0)>($59|0);
   if ($60) {
    $$059$lcssa$i141 = 0;$$060$lcssa$i140 = 1;$$064$lcssa$i139 = 0;$$068$lcssa$i138 = 255;
   } else {
    $$05979$i120 = 0;$$06078$i121 = 1;$$06377$i122 = $58;$$06476$i123 = 0;$$06875$i124 = 255;
    while(1) {
     $61 = ($$06377$i122|0)>(0);
     if ($61) {
      $62 = (($$idx$val) + ($$06377$i122<<1)|0);
      $$06273$i127 = 0;$$06672$i128 = $62;$$06771$i129 = $$idx$val;$$074$i126 = 0;
      while(1) {
       $63 = ((($$06771$i129)) + 2|0);
       $64 = HEAP16[$$06771$i129>>1]|0;
       $65 = ((($$06672$i128)) + 2|0);
       $66 = HEAP16[$$06672$i128>>1]|0;
       $67 = $64 << 16 >> 16;
       $68 = $66 << 16 >> 16;
       $69 = ($64<<16>>16)<($66<<16>>16);
       $70 = (($67) - ($68))|0;
       $71 = (($68) - ($67))|0;
       $$in$i130 = $69 ? $71 : $70;
       $72 = $$in$i130 & 65535;
       $73 = (($72) + ($$06273$i127))|0;
       $74 = (($$074$i126) + 1)|0;
       $exitcond$i131 = ($74|0)==($$06377$i122|0);
       if ($exitcond$i131) {
        $$062$lcssa$i132 = $73;
        break;
       } else {
        $$06273$i127 = $73;$$06672$i128 = $65;$$06771$i129 = $63;$$074$i126 = $74;
       }
      }
     } else {
      $$062$lcssa$i132 = 0;
     }
     $75 = ($$06476$i123|0)==(0);
     if ($75) {
      label = 29;
     } else {
      $76 = Math_imul($$062$lcssa$i132, $$06476$i123)|0;
      $77 = Math_imul($$06377$i122, $$06078$i121)|0;
      $78 = ($76>>>0)<($77>>>0);
      if ($78) {
       label = 29;
      } else {
       $$161$i135 = $$06078$i121;$$165$i134 = $$06476$i123;
      }
     }
     if ((label|0) == 29) {
      label = 0;
      $$161$i135 = $$062$lcssa$i132;$$165$i134 = $$06377$i122;
     }
     $79 = Math_imul($$062$lcssa$i132, $$06875$i124)|0;
     $80 = Math_imul($$06377$i122, $$05979$i120)|0;
     $81 = ($79>>>0)>($80>>>0);
     $spec$select$i136 = $81 ? $$06377$i122 : $$06875$i124;
     $spec$select70$i137 = $81 ? $$062$lcssa$i132 : $$05979$i120;
     $82 = (($$06377$i122) + 1)|0;
     $83 = ($$06377$i122|0)<($59|0);
     if ($83) {
      $$05979$i120 = $spec$select70$i137;$$06078$i121 = $$161$i135;$$06377$i122 = $82;$$06476$i123 = $$165$i134;$$06875$i124 = $spec$select$i136;
     } else {
      $$059$lcssa$i141 = $spec$select70$i137;$$060$lcssa$i140 = $$161$i135;$$064$lcssa$i139 = $$165$i134;$$068$lcssa$i138 = $spec$select$i136;
      break;
     }
    }
   }
   $84 = (($$060$lcssa$i140>>>0) / ($$064$lcssa$i139>>>0))&-1;
   $85 = (($$059$lcssa$i141>>>0) / ($$068$lcssa$i138>>>0))&-1;
   if ($17) {
    $$0 = $$064$lcssa$i139;$$0164 = $85;$$0165 = $84;
   } else {
    $86 = Math_imul($$064$lcssa$i139, $$061)|0;
    $87 = $$061 << 2;
    $88 = (($86) - ($87))|0;
    $89 = (($86) + ($87))|0;
    $90 = HEAP32[$3>>2]|0;
    $91 = ($88|0)<($90|0);
    $spec$select = $91 ? $90 : $88;
    $92 = HEAP32[$5>>2]|0;
    $93 = ($89|0)>($92|0);
    $$064 = $93 ? $92 : $89;
    $94 = HEAP32[$14>>2]|0;
    $95 = ($94|0)==(1);
    if ($95) {
     $96 = ($spec$select|0)>($$064|0);
     if ($96) {
      $$059$lcssa$i117 = 0;$$060$lcssa$i116 = 1;$$064$lcssa$i115 = 0;$$068$lcssa$i114 = 255;
     } else {
      $$05979$i96 = 0;$$06078$i97 = 1;$$06377$i98 = $spec$select;$$06476$i99 = 0;$$06875$i100 = 255;
      while(1) {
       $97 = ($$06377$i98|0)>(0);
       if ($97) {
        $98 = (($1) + ($$06377$i98<<1)|0);
        $$06273$i103 = 0;$$06672$i104 = $98;$$06771$i105 = $1;$$074$i102 = 0;
        while(1) {
         $99 = ((($$06771$i105)) + 2|0);
         $100 = HEAP16[$$06771$i105>>1]|0;
         $101 = ((($$06672$i104)) + 2|0);
         $102 = HEAP16[$$06672$i104>>1]|0;
         $103 = $100 << 16 >> 16;
         $104 = $102 << 16 >> 16;
         $105 = ($100<<16>>16)<($102<<16>>16);
         $106 = (($103) - ($104))|0;
         $107 = (($104) - ($103))|0;
         $$in$i106 = $105 ? $107 : $106;
         $108 = $$in$i106 & 65535;
         $109 = (($108) + ($$06273$i103))|0;
         $110 = (($$074$i102) + 1)|0;
         $exitcond$i107 = ($110|0)==($$06377$i98|0);
         if ($exitcond$i107) {
          $$062$lcssa$i108 = $109;
          break;
         } else {
          $$06273$i103 = $109;$$06672$i104 = $101;$$06771$i105 = $99;$$074$i102 = $110;
         }
        }
       } else {
        $$062$lcssa$i108 = 0;
       }
       $111 = ($$06476$i99|0)==(0);
       if ($111) {
        label = 40;
       } else {
        $112 = Math_imul($$062$lcssa$i108, $$06476$i99)|0;
        $113 = Math_imul($$06377$i98, $$06078$i97)|0;
        $114 = ($112>>>0)<($113>>>0);
        if ($114) {
         label = 40;
        } else {
         $$161$i111 = $$06078$i97;$$165$i110 = $$06476$i99;
        }
       }
       if ((label|0) == 40) {
        label = 0;
        $$161$i111 = $$062$lcssa$i108;$$165$i110 = $$06377$i98;
       }
       $115 = Math_imul($$062$lcssa$i108, $$06875$i100)|0;
       $116 = Math_imul($$06377$i98, $$05979$i96)|0;
       $117 = ($115>>>0)>($116>>>0);
       $spec$select$i112 = $117 ? $$06377$i98 : $$06875$i100;
       $spec$select70$i113 = $117 ? $$062$lcssa$i108 : $$05979$i96;
       $118 = (($$06377$i98) + 1)|0;
       $119 = ($$06377$i98|0)<($$064|0);
       if ($119) {
        $$05979$i96 = $spec$select70$i113;$$06078$i97 = $$161$i111;$$06377$i98 = $118;$$06476$i99 = $$165$i110;$$06875$i100 = $spec$select$i112;
       } else {
        $$059$lcssa$i117 = $spec$select70$i113;$$060$lcssa$i116 = $$161$i111;$$064$lcssa$i115 = $$165$i110;$$068$lcssa$i114 = $spec$select$i112;
        break;
       }
      }
     }
     $120 = (($$060$lcssa$i116>>>0) / ($$064$lcssa$i115>>>0))&-1;
     $121 = (($$059$lcssa$i117>>>0) / ($$068$lcssa$i114>>>0))&-1;
     $$0 = $$064$lcssa$i115;$$0164 = $121;$$0165 = $120;
     break;
    }
    $$idx66$val = HEAP32[$$idx69>>2]|0;
    $122 = ($$idx66$val|0)>(0);
    do {
     if ($122) {
      $123 = ($94|0)>(0);
      if (!($123)) {
       $133 = $$idx66$val << 1;
       _memset(($$idx$val|0),0,($133|0))|0;
       $$pre176 = HEAP32[$$idx67>>2]|0;
       $137 = $$pre176;
       break;
      }
      $$0296$us$i = 0;$$0305$us$i = $1;$$07$us$i = $$idx$val;
      while(1) {
       $$0273$us$i = 0;$$0282$us$i = 0;$$11$us$i = $$0305$us$i;
       while(1) {
        $124 = ((($$11$us$i)) + 2|0);
        $125 = HEAP16[$$11$us$i>>1]|0;
        $126 = $125 << 16 >> 16;
        $127 = (($$0273$us$i) + ($126))|0;
        $128 = (($$0282$us$i) + 1)|0;
        $exitcond$i94 = ($128|0)==($94|0);
        if ($exitcond$i94) {
         break;
        } else {
         $$0273$us$i = $127;$$0282$us$i = $128;$$11$us$i = $124;
        }
       }
       $scevgep$i = (($$0305$us$i) + ($94<<1)|0);
       $129 = (($127|0) / ($94|0))&-1;
       $130 = $129&65535;
       $131 = ((($$07$us$i)) + 2|0);
       HEAP16[$$07$us$i>>1] = $130;
       $132 = (($$0296$us$i) + 1)|0;
       $exitcond13$i = ($132|0)==($$idx66$val|0);
       if ($exitcond13$i) {
        $137 = $$idx$val;
        break;
       } else {
        $$0296$us$i = $132;$$0305$us$i = $scevgep$i;$$07$us$i = $131;
       }
      }
     } else {
      $137 = $$idx$val;
     }
    } while(0);
    $134 = ($spec$select|0)>($$064|0);
    if ($134) {
     $$059$lcssa$i92 = 0;$$060$lcssa$i91 = 1;$$064$lcssa$i90 = 0;$$068$lcssa$i89 = 255;
    } else {
     $$05979$i71 = 0;$$06078$i72 = 1;$$06377$i73 = $spec$select;$$06476$i74 = 0;$$06875$i75 = 255;
     while(1) {
      $135 = ($$06377$i73|0)>(0);
      if ($135) {
       $136 = (($137) + ($$06377$i73<<1)|0);
       $$06273$i78 = 0;$$06672$i79 = $136;$$06771$i80 = $137;$$074$i77 = 0;
       while(1) {
        $138 = ((($$06771$i80)) + 2|0);
        $139 = HEAP16[$$06771$i80>>1]|0;
        $140 = ((($$06672$i79)) + 2|0);
        $141 = HEAP16[$$06672$i79>>1]|0;
        $142 = $139 << 16 >> 16;
        $143 = $141 << 16 >> 16;
        $144 = ($139<<16>>16)<($141<<16>>16);
        $145 = (($142) - ($143))|0;
        $146 = (($143) - ($142))|0;
        $$in$i81 = $144 ? $146 : $145;
        $147 = $$in$i81 & 65535;
        $148 = (($147) + ($$06273$i78))|0;
        $149 = (($$074$i77) + 1)|0;
        $exitcond$i82 = ($149|0)==($$06377$i73|0);
        if ($exitcond$i82) {
         $$062$lcssa$i83 = $148;
         break;
        } else {
         $$06273$i78 = $148;$$06672$i79 = $140;$$06771$i80 = $138;$$074$i77 = $149;
        }
       }
      } else {
       $$062$lcssa$i83 = 0;
      }
      $150 = ($$06476$i74|0)==(0);
      if ($150) {
       label = 57;
      } else {
       $151 = Math_imul($$062$lcssa$i83, $$06476$i74)|0;
       $152 = Math_imul($$06377$i73, $$06078$i72)|0;
       $153 = ($151>>>0)<($152>>>0);
       if ($153) {
        label = 57;
       } else {
        $$161$i86 = $$06078$i72;$$165$i85 = $$06476$i74;
       }
      }
      if ((label|0) == 57) {
       label = 0;
       $$161$i86 = $$062$lcssa$i83;$$165$i85 = $$06377$i73;
      }
      $154 = Math_imul($$062$lcssa$i83, $$06875$i75)|0;
      $155 = Math_imul($$06377$i73, $$05979$i71)|0;
      $156 = ($154>>>0)>($155>>>0);
      $spec$select$i87 = $156 ? $$06377$i73 : $$06875$i75;
      $spec$select70$i88 = $156 ? $$062$lcssa$i83 : $$05979$i71;
      $157 = (($$06377$i73) + 1)|0;
      $158 = ($$06377$i73|0)<($$064|0);
      if ($158) {
       $$05979$i71 = $spec$select70$i88;$$06078$i72 = $$161$i86;$$06377$i73 = $157;$$06476$i74 = $$165$i85;$$06875$i75 = $spec$select$i87;
      } else {
       $$059$lcssa$i92 = $spec$select70$i88;$$060$lcssa$i91 = $$161$i86;$$064$lcssa$i90 = $$165$i85;$$068$lcssa$i89 = $spec$select$i87;
       break;
      }
     }
    }
    $159 = (($$060$lcssa$i91>>>0) / ($$064$lcssa$i90>>>0))&-1;
    $160 = (($$059$lcssa$i92>>>0) / ($$068$lcssa$i89>>>0))&-1;
    $$0 = $$064$lcssa$i90;$$0164 = $160;$$0165 = $159;
   }
  }
 } while(0);
 $161 = ($$0165|0)==(0);
 $$pre177 = ((($0)) + 96|0);
 if ($161) {
  $$062 = $$0;
  $175 = ((($0)) + 100|0);
  HEAP32[$175>>2] = $$0165;
  HEAP32[$$pre177>>2] = $$0;
  return ($$062|0);
 }
 $162 = HEAP32[$$pre177>>2]|0;
 $163 = ($162|0)==(0);
 if ($163) {
  $$062 = $$0;
  $175 = ((($0)) + 100|0);
  HEAP32[$175>>2] = $$0165;
  HEAP32[$$pre177>>2] = $$0;
  return ($$062|0);
 }
 $164 = ($2|0)==(0);
 if ($164) {
  $172 = ((($0)) + 100|0);
  $173 = HEAP32[$172>>2]|0;
  $174 = ($173|0)<($$0165|0);
  if (!($174)) {
   $$062 = $$0;
   $175 = ((($0)) + 100|0);
   HEAP32[$175>>2] = $$0165;
   HEAP32[$$pre177>>2] = $$0;
   return ($$062|0);
  }
 } else {
  $165 = ($$0165*3)|0;
  $166 = ($165|0)<($$0164|0);
  if ($166) {
   $$062 = $$0;
   $175 = ((($0)) + 100|0);
   HEAP32[$175>>2] = $$0165;
   HEAP32[$$pre177>>2] = $$0;
   return ($$062|0);
  }
  $167 = $$0165 << 1;
  $168 = ((($0)) + 100|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = ($169*3)|0;
  $171 = ($167|0)>($170|0);
  if (!($171)) {
   $$062 = $$0;
   $175 = ((($0)) + 100|0);
   HEAP32[$175>>2] = $$0165;
   HEAP32[$$pre177>>2] = $$0;
   return ($$062|0);
  }
 }
 $$062 = $162;
 $175 = ((($0)) + 100|0);
 HEAP32[$175>>2] = $$0165;
 HEAP32[$$pre177>>2] = $$0;
 return ($$062|0);
}
function _sonicWriteShortToStream($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$pre$i = 0, $$pre$phi15$iZ2D = 0, $$pre12$i = 0, $$pre14$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = ((($0)) + 64|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (($5) + ($2))|0;
  $7 = ((($0)) + 52|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)>($8|0);
  do {
   if ($9) {
    $10 = $8 >> 1;
    $11 = (($8) + ($2))|0;
    $12 = (($11) + ($10))|0;
    HEAP32[$7>>2] = $12;
    $13 = HEAP32[$0>>2]|0;
    $14 = $12 << 1;
    $15 = ((($0)) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = Math_imul($14, $16)|0;
    $18 = (_realloc($13,$17)|0);
    HEAP32[$0>>2] = $18;
    $19 = ($18|0)==(0|0);
    if ($19) {
     $$0 = 0;
     return ($$0|0);
    } else {
     $$pre12$i = HEAP32[$4>>2]|0;
     $$pre$phi15$iZ2D = $15;$22 = $$pre12$i;$24 = $18;
     break;
    }
   } else {
    $$pre$i = HEAP32[$0>>2]|0;
    $$pre14$i = ((($0)) + 48|0);
    $$pre$phi15$iZ2D = $$pre14$i;$22 = $5;$24 = $$pre$i;
   }
  } while(0);
  $20 = HEAP32[$$pre$phi15$iZ2D>>2]|0;
  $21 = Math_imul($20, $22)|0;
  $23 = (($24) + ($21<<1)|0);
  $25 = $2 << 1;
  $26 = Math_imul($25, $20)|0;
  _memcpy(($23|0),($1|0),($26|0))|0;
  $27 = HEAP32[$4>>2]|0;
  $28 = (($27) + ($2))|0;
  HEAP32[$4>>2] = $28;
 }
 $29 = (_processStreamInput($0)|0);
 $$0 = $29;
 return ($$0|0);
}
function _malloc($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i20$i = 0, $$0169$i = 0, $$0170$i = 0, $$0171$i = 0, $$0192 = 0, $$0194 = 0, $$02014$i$i = 0, $$0202$lcssa$i$i = 0, $$02023$i$i = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$024372$i = 0, $$0259$i$i = 0, $$02604$i$i = 0, $$0261$lcssa$i$i = 0, $$02613$i$i = 0;
 var $$0267$i$i = 0, $$0268$i$i = 0, $$0318$i = 0, $$032012$i = 0, $$0321$lcssa$i = 0, $$032111$i = 0, $$0323$i = 0, $$0329$i = 0, $$0335$i = 0, $$0336$i = 0, $$0338$i = 0, $$0339$i = 0, $$0344$i = 0, $$1174$i = 0, $$1174$i$be = 0, $$1174$i$ph = 0, $$1176$i = 0, $$1176$i$be = 0, $$1176$i$ph = 0, $$124471$i = 0;
 var $$1263$i$i = 0, $$1263$i$i$be = 0, $$1263$i$i$ph = 0, $$1265$i$i = 0, $$1265$i$i$be = 0, $$1265$i$i$ph = 0, $$1319$i = 0, $$1324$i = 0, $$1340$i = 0, $$1346$i = 0, $$1346$i$be = 0, $$1346$i$ph = 0, $$1350$i = 0, $$1350$i$be = 0, $$1350$i$ph = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2331$i = 0, $$3$i = 0;
 var $$3$i$i = 0, $$3$i198 = 0, $$3$i198211 = 0, $$3326$i = 0, $$3348$i = 0, $$4$lcssa$i = 0, $$415$i = 0, $$415$i$ph = 0, $$4236$i = 0, $$4327$lcssa$i = 0, $$432714$i = 0, $$432714$i$ph = 0, $$4333$i = 0, $$533413$i = 0, $$533413$i$ph = 0, $$723947$i = 0, $$748$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0;
 var $$pre$i16$i = 0, $$pre$i195 = 0, $$pre$i204 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i17$iZ2D = 0, $$pre$phi$i205Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink320 = 0, $$sink321 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0;
 var $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0;
 var $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0;
 var $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0;
 var $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0;
 var $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0;
 var $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0;
 var $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0;
 var $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0;
 var $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0;
 var $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0;
 var $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0;
 var $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0;
 var $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0;
 var $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0;
 var $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0;
 var $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0;
 var $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0;
 var $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0;
 var $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0;
 var $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0;
 var $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0;
 var $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0;
 var $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $99 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i203 = 0, $not$$i = 0, $or$cond$i = 0, $or$cond$i199 = 0, $or$cond1$i = 0, $or$cond1$i197 = 0, $or$cond11$i = 0, $or$cond2$i = 0;
 var $or$cond5$i = 0, $or$cond50$i = 0, $or$cond51$i = 0, $or$cond6$i = 0, $or$cond7$i = 0, $or$cond8$i = 0, $or$cond8$not$i = 0, $spec$select$i = 0, $spec$select$i201 = 0, $spec$select1$i = 0, $spec$select2$i = 0, $spec$select4$i = 0, $spec$select49$i = 0, $spec$select9$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[12339]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (49396 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($16|0);
    if ($21) {
     $22 = 1 << $14;
     $23 = $22 ^ -1;
     $24 = $8 & $23;
     HEAP32[12339] = $24;
    } else {
     $25 = ((($20)) + 12|0);
     HEAP32[$25>>2] = $16;
     HEAP32[$17>>2] = $20;
    }
    $26 = $14 << 3;
    $27 = $26 | 3;
    $28 = ((($18)) + 4|0);
    HEAP32[$28>>2] = $27;
    $29 = (($18) + ($26)|0);
    $30 = ((($29)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = $31 | 1;
    HEAP32[$30>>2] = $32;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $33 = HEAP32[(49364)>>2]|0;
   $34 = ($6>>>0)>($33>>>0);
   if ($34) {
    $35 = ($9|0)==(0);
    if (!($35)) {
     $36 = $9 << $7;
     $37 = 2 << $7;
     $38 = (0 - ($37))|0;
     $39 = $37 | $38;
     $40 = $36 & $39;
     $41 = (0 - ($40))|0;
     $42 = $40 & $41;
     $43 = (($42) + -1)|0;
     $44 = $43 >>> 12;
     $45 = $44 & 16;
     $46 = $43 >>> $45;
     $47 = $46 >>> 5;
     $48 = $47 & 8;
     $49 = $48 | $45;
     $50 = $46 >>> $48;
     $51 = $50 >>> 2;
     $52 = $51 & 4;
     $53 = $49 | $52;
     $54 = $50 >>> $52;
     $55 = $54 >>> 1;
     $56 = $55 & 2;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 1;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = (($61) + ($62))|0;
     $64 = $63 << 1;
     $65 = (49396 + ($64<<2)|0);
     $66 = ((($65)) + 8|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ((($67)) + 8|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($69|0)==($65|0);
     if ($70) {
      $71 = 1 << $63;
      $72 = $71 ^ -1;
      $73 = $8 & $72;
      HEAP32[12339] = $73;
      $90 = $73;
     } else {
      $74 = ((($69)) + 12|0);
      HEAP32[$74>>2] = $65;
      HEAP32[$66>>2] = $69;
      $90 = $8;
     }
     $75 = $63 << 3;
     $76 = (($75) - ($6))|0;
     $77 = $6 | 3;
     $78 = ((($67)) + 4|0);
     HEAP32[$78>>2] = $77;
     $79 = (($67) + ($6)|0);
     $80 = $76 | 1;
     $81 = ((($79)) + 4|0);
     HEAP32[$81>>2] = $80;
     $82 = (($67) + ($75)|0);
     HEAP32[$82>>2] = $76;
     $83 = ($33|0)==(0);
     if (!($83)) {
      $84 = HEAP32[(49376)>>2]|0;
      $85 = $33 >>> 3;
      $86 = $85 << 1;
      $87 = (49396 + ($86<<2)|0);
      $88 = 1 << $85;
      $89 = $90 & $88;
      $91 = ($89|0)==(0);
      if ($91) {
       $92 = $90 | $88;
       HEAP32[12339] = $92;
       $$pre = ((($87)) + 8|0);
       $$0194 = $87;$$pre$phiZ2D = $$pre;
      } else {
       $93 = ((($87)) + 8|0);
       $94 = HEAP32[$93>>2]|0;
       $$0194 = $94;$$pre$phiZ2D = $93;
      }
      HEAP32[$$pre$phiZ2D>>2] = $84;
      $95 = ((($$0194)) + 12|0);
      HEAP32[$95>>2] = $84;
      $96 = ((($84)) + 8|0);
      HEAP32[$96>>2] = $$0194;
      $97 = ((($84)) + 12|0);
      HEAP32[$97>>2] = $87;
     }
     HEAP32[(49364)>>2] = $76;
     HEAP32[(49376)>>2] = $79;
     $$0 = $68;
     STACKTOP = sp;return ($$0|0);
    }
    $98 = HEAP32[(49360)>>2]|0;
    $99 = ($98|0)==(0);
    if ($99) {
     $$0192 = $6;
    } else {
     $100 = (0 - ($98))|0;
     $101 = $98 & $100;
     $102 = (($101) + -1)|0;
     $103 = $102 >>> 12;
     $104 = $103 & 16;
     $105 = $102 >>> $104;
     $106 = $105 >>> 5;
     $107 = $106 & 8;
     $108 = $107 | $104;
     $109 = $105 >>> $107;
     $110 = $109 >>> 2;
     $111 = $110 & 4;
     $112 = $108 | $111;
     $113 = $109 >>> $111;
     $114 = $113 >>> 1;
     $115 = $114 & 2;
     $116 = $112 | $115;
     $117 = $113 >>> $115;
     $118 = $117 >>> 1;
     $119 = $118 & 1;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = (($120) + ($121))|0;
     $123 = (49660 + ($122<<2)|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($124)) + 4|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = $126 & -8;
     $128 = (($127) - ($6))|0;
     $$0169$i = $124;$$0170$i = $124;$$0171$i = $128;
     while(1) {
      $129 = ((($$0169$i)) + 16|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = ($130|0)==(0|0);
      if ($131) {
       $132 = ((($$0169$i)) + 20|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ($133|0)==(0|0);
       if ($134) {
        break;
       } else {
        $136 = $133;
       }
      } else {
       $136 = $130;
      }
      $135 = ((($136)) + 4|0);
      $137 = HEAP32[$135>>2]|0;
      $138 = $137 & -8;
      $139 = (($138) - ($6))|0;
      $140 = ($139>>>0)<($$0171$i>>>0);
      $spec$select$i = $140 ? $139 : $$0171$i;
      $spec$select1$i = $140 ? $136 : $$0170$i;
      $$0169$i = $136;$$0170$i = $spec$select1$i;$$0171$i = $spec$select$i;
     }
     $141 = (($$0170$i) + ($6)|0);
     $142 = ($141>>>0)>($$0170$i>>>0);
     if ($142) {
      $143 = ((($$0170$i)) + 24|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$0170$i)) + 12|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($146|0)==($$0170$i|0);
      do {
       if ($147) {
        $152 = ((($$0170$i)) + 20|0);
        $153 = HEAP32[$152>>2]|0;
        $154 = ($153|0)==(0|0);
        if ($154) {
         $155 = ((($$0170$i)) + 16|0);
         $156 = HEAP32[$155>>2]|0;
         $157 = ($156|0)==(0|0);
         if ($157) {
          $$3$i = 0;
          break;
         } else {
          $$1174$i$ph = $156;$$1176$i$ph = $155;
         }
        } else {
         $$1174$i$ph = $153;$$1176$i$ph = $152;
        }
        $$1174$i = $$1174$i$ph;$$1176$i = $$1176$i$ph;
        while(1) {
         $158 = ((($$1174$i)) + 20|0);
         $159 = HEAP32[$158>>2]|0;
         $160 = ($159|0)==(0|0);
         if ($160) {
          $161 = ((($$1174$i)) + 16|0);
          $162 = HEAP32[$161>>2]|0;
          $163 = ($162|0)==(0|0);
          if ($163) {
           break;
          } else {
           $$1174$i$be = $162;$$1176$i$be = $161;
          }
         } else {
          $$1174$i$be = $159;$$1176$i$be = $158;
         }
         $$1174$i = $$1174$i$be;$$1176$i = $$1176$i$be;
        }
        HEAP32[$$1176$i>>2] = 0;
        $$3$i = $$1174$i;
       } else {
        $148 = ((($$0170$i)) + 8|0);
        $149 = HEAP32[$148>>2]|0;
        $150 = ((($149)) + 12|0);
        HEAP32[$150>>2] = $146;
        $151 = ((($146)) + 8|0);
        HEAP32[$151>>2] = $149;
        $$3$i = $146;
       }
      } while(0);
      $164 = ($144|0)==(0|0);
      do {
       if (!($164)) {
        $165 = ((($$0170$i)) + 28|0);
        $166 = HEAP32[$165>>2]|0;
        $167 = (49660 + ($166<<2)|0);
        $168 = HEAP32[$167>>2]|0;
        $169 = ($$0170$i|0)==($168|0);
        if ($169) {
         HEAP32[$167>>2] = $$3$i;
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $170 = 1 << $166;
          $171 = $170 ^ -1;
          $172 = $98 & $171;
          HEAP32[(49360)>>2] = $172;
          break;
         }
        } else {
         $173 = ((($144)) + 16|0);
         $174 = HEAP32[$173>>2]|0;
         $175 = ($174|0)==($$0170$i|0);
         $176 = ((($144)) + 20|0);
         $$sink = $175 ? $173 : $176;
         HEAP32[$$sink>>2] = $$3$i;
         $177 = ($$3$i|0)==(0|0);
         if ($177) {
          break;
         }
        }
        $178 = ((($$3$i)) + 24|0);
        HEAP32[$178>>2] = $144;
        $179 = ((($$0170$i)) + 16|0);
        $180 = HEAP32[$179>>2]|0;
        $181 = ($180|0)==(0|0);
        if (!($181)) {
         $182 = ((($$3$i)) + 16|0);
         HEAP32[$182>>2] = $180;
         $183 = ((($180)) + 24|0);
         HEAP32[$183>>2] = $$3$i;
        }
        $184 = ((($$0170$i)) + 20|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = ($185|0)==(0|0);
        if (!($186)) {
         $187 = ((($$3$i)) + 20|0);
         HEAP32[$187>>2] = $185;
         $188 = ((($185)) + 24|0);
         HEAP32[$188>>2] = $$3$i;
        }
       }
      } while(0);
      $189 = ($$0171$i>>>0)<(16);
      if ($189) {
       $190 = (($$0171$i) + ($6))|0;
       $191 = $190 | 3;
       $192 = ((($$0170$i)) + 4|0);
       HEAP32[$192>>2] = $191;
       $193 = (($$0170$i) + ($190)|0);
       $194 = ((($193)) + 4|0);
       $195 = HEAP32[$194>>2]|0;
       $196 = $195 | 1;
       HEAP32[$194>>2] = $196;
      } else {
       $197 = $6 | 3;
       $198 = ((($$0170$i)) + 4|0);
       HEAP32[$198>>2] = $197;
       $199 = $$0171$i | 1;
       $200 = ((($141)) + 4|0);
       HEAP32[$200>>2] = $199;
       $201 = (($141) + ($$0171$i)|0);
       HEAP32[$201>>2] = $$0171$i;
       $202 = ($33|0)==(0);
       if (!($202)) {
        $203 = HEAP32[(49376)>>2]|0;
        $204 = $33 >>> 3;
        $205 = $204 << 1;
        $206 = (49396 + ($205<<2)|0);
        $207 = 1 << $204;
        $208 = $207 & $8;
        $209 = ($208|0)==(0);
        if ($209) {
         $210 = $207 | $8;
         HEAP32[12339] = $210;
         $$pre$i = ((($206)) + 8|0);
         $$0$i = $206;$$pre$phi$iZ2D = $$pre$i;
        } else {
         $211 = ((($206)) + 8|0);
         $212 = HEAP32[$211>>2]|0;
         $$0$i = $212;$$pre$phi$iZ2D = $211;
        }
        HEAP32[$$pre$phi$iZ2D>>2] = $203;
        $213 = ((($$0$i)) + 12|0);
        HEAP32[$213>>2] = $203;
        $214 = ((($203)) + 8|0);
        HEAP32[$214>>2] = $$0$i;
        $215 = ((($203)) + 12|0);
        HEAP32[$215>>2] = $206;
       }
       HEAP32[(49364)>>2] = $$0171$i;
       HEAP32[(49376)>>2] = $141;
      }
      $216 = ((($$0170$i)) + 8|0);
      $$0 = $216;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0192 = $6;
     }
    }
   } else {
    $$0192 = $6;
   }
  } else {
   $217 = ($0>>>0)>(4294967231);
   if ($217) {
    $$0192 = -1;
   } else {
    $218 = (($0) + 11)|0;
    $219 = $218 & -8;
    $220 = HEAP32[(49360)>>2]|0;
    $221 = ($220|0)==(0);
    if ($221) {
     $$0192 = $219;
    } else {
     $222 = (0 - ($219))|0;
     $223 = $218 >>> 8;
     $224 = ($223|0)==(0);
     if ($224) {
      $$0335$i = 0;
     } else {
      $225 = ($219>>>0)>(16777215);
      if ($225) {
       $$0335$i = 31;
      } else {
       $226 = (($223) + 1048320)|0;
       $227 = $226 >>> 16;
       $228 = $227 & 8;
       $229 = $223 << $228;
       $230 = (($229) + 520192)|0;
       $231 = $230 >>> 16;
       $232 = $231 & 4;
       $233 = $232 | $228;
       $234 = $229 << $232;
       $235 = (($234) + 245760)|0;
       $236 = $235 >>> 16;
       $237 = $236 & 2;
       $238 = $233 | $237;
       $239 = (14 - ($238))|0;
       $240 = $234 << $237;
       $241 = $240 >>> 15;
       $242 = (($239) + ($241))|0;
       $243 = $242 << 1;
       $244 = (($242) + 7)|0;
       $245 = $219 >>> $244;
       $246 = $245 & 1;
       $247 = $246 | $243;
       $$0335$i = $247;
      }
     }
     $248 = (49660 + ($$0335$i<<2)|0);
     $249 = HEAP32[$248>>2]|0;
     $250 = ($249|0)==(0|0);
     L79: do {
      if ($250) {
       $$2331$i = 0;$$3$i198 = 0;$$3326$i = $222;
       label = 61;
      } else {
       $251 = ($$0335$i|0)==(31);
       $252 = $$0335$i >>> 1;
       $253 = (25 - ($252))|0;
       $254 = $251 ? 0 : $253;
       $255 = $219 << $254;
       $$0318$i = 0;$$0323$i = $222;$$0329$i = $249;$$0336$i = $255;$$0339$i = 0;
       while(1) {
        $256 = ((($$0329$i)) + 4|0);
        $257 = HEAP32[$256>>2]|0;
        $258 = $257 & -8;
        $259 = (($258) - ($219))|0;
        $260 = ($259>>>0)<($$0323$i>>>0);
        if ($260) {
         $261 = ($259|0)==(0);
         if ($261) {
          $$415$i$ph = $$0329$i;$$432714$i$ph = 0;$$533413$i$ph = $$0329$i;
          label = 65;
          break L79;
         } else {
          $$1319$i = $$0329$i;$$1324$i = $259;
         }
        } else {
         $$1319$i = $$0318$i;$$1324$i = $$0323$i;
        }
        $262 = ((($$0329$i)) + 20|0);
        $263 = HEAP32[$262>>2]|0;
        $264 = $$0336$i >>> 31;
        $265 = (((($$0329$i)) + 16|0) + ($264<<2)|0);
        $266 = HEAP32[$265>>2]|0;
        $267 = ($263|0)==(0|0);
        $268 = ($263|0)==($266|0);
        $or$cond1$i197 = $267 | $268;
        $$1340$i = $or$cond1$i197 ? $$0339$i : $263;
        $269 = ($266|0)==(0|0);
        $spec$select4$i = $$0336$i << 1;
        if ($269) {
         $$2331$i = $$1340$i;$$3$i198 = $$1319$i;$$3326$i = $$1324$i;
         label = 61;
         break;
        } else {
         $$0318$i = $$1319$i;$$0323$i = $$1324$i;$$0329$i = $266;$$0336$i = $spec$select4$i;$$0339$i = $$1340$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 61) {
      $270 = ($$2331$i|0)==(0|0);
      $271 = ($$3$i198|0)==(0|0);
      $or$cond$i199 = $270 & $271;
      if ($or$cond$i199) {
       $272 = 2 << $$0335$i;
       $273 = (0 - ($272))|0;
       $274 = $272 | $273;
       $275 = $274 & $220;
       $276 = ($275|0)==(0);
       if ($276) {
        $$0192 = $219;
        break;
       }
       $277 = (0 - ($275))|0;
       $278 = $275 & $277;
       $279 = (($278) + -1)|0;
       $280 = $279 >>> 12;
       $281 = $280 & 16;
       $282 = $279 >>> $281;
       $283 = $282 >>> 5;
       $284 = $283 & 8;
       $285 = $284 | $281;
       $286 = $282 >>> $284;
       $287 = $286 >>> 2;
       $288 = $287 & 4;
       $289 = $285 | $288;
       $290 = $286 >>> $288;
       $291 = $290 >>> 1;
       $292 = $291 & 2;
       $293 = $289 | $292;
       $294 = $290 >>> $292;
       $295 = $294 >>> 1;
       $296 = $295 & 1;
       $297 = $293 | $296;
       $298 = $294 >>> $296;
       $299 = (($297) + ($298))|0;
       $300 = (49660 + ($299<<2)|0);
       $301 = HEAP32[$300>>2]|0;
       $$3$i198211 = 0;$$4333$i = $301;
      } else {
       $$3$i198211 = $$3$i198;$$4333$i = $$2331$i;
      }
      $302 = ($$4333$i|0)==(0|0);
      if ($302) {
       $$4$lcssa$i = $$3$i198211;$$4327$lcssa$i = $$3326$i;
      } else {
       $$415$i$ph = $$3$i198211;$$432714$i$ph = $$3326$i;$$533413$i$ph = $$4333$i;
       label = 65;
      }
     }
     if ((label|0) == 65) {
      $$415$i = $$415$i$ph;$$432714$i = $$432714$i$ph;$$533413$i = $$533413$i$ph;
      while(1) {
       $303 = ((($$533413$i)) + 4|0);
       $304 = HEAP32[$303>>2]|0;
       $305 = $304 & -8;
       $306 = (($305) - ($219))|0;
       $307 = ($306>>>0)<($$432714$i>>>0);
       $spec$select$i201 = $307 ? $306 : $$432714$i;
       $spec$select2$i = $307 ? $$533413$i : $$415$i;
       $308 = ((($$533413$i)) + 16|0);
       $309 = HEAP32[$308>>2]|0;
       $310 = ($309|0)==(0|0);
       if ($310) {
        $311 = ((($$533413$i)) + 20|0);
        $312 = HEAP32[$311>>2]|0;
        $314 = $312;
       } else {
        $314 = $309;
       }
       $313 = ($314|0)==(0|0);
       if ($313) {
        $$4$lcssa$i = $spec$select2$i;$$4327$lcssa$i = $spec$select$i201;
        break;
       } else {
        $$415$i = $spec$select2$i;$$432714$i = $spec$select$i201;$$533413$i = $314;
       }
      }
     }
     $315 = ($$4$lcssa$i|0)==(0|0);
     if ($315) {
      $$0192 = $219;
     } else {
      $316 = HEAP32[(49364)>>2]|0;
      $317 = (($316) - ($219))|0;
      $318 = ($$4327$lcssa$i>>>0)<($317>>>0);
      if ($318) {
       $319 = (($$4$lcssa$i) + ($219)|0);
       $320 = ($319>>>0)>($$4$lcssa$i>>>0);
       if ($320) {
        $321 = ((($$4$lcssa$i)) + 24|0);
        $322 = HEAP32[$321>>2]|0;
        $323 = ((($$4$lcssa$i)) + 12|0);
        $324 = HEAP32[$323>>2]|0;
        $325 = ($324|0)==($$4$lcssa$i|0);
        do {
         if ($325) {
          $330 = ((($$4$lcssa$i)) + 20|0);
          $331 = HEAP32[$330>>2]|0;
          $332 = ($331|0)==(0|0);
          if ($332) {
           $333 = ((($$4$lcssa$i)) + 16|0);
           $334 = HEAP32[$333>>2]|0;
           $335 = ($334|0)==(0|0);
           if ($335) {
            $$3348$i = 0;
            break;
           } else {
            $$1346$i$ph = $334;$$1350$i$ph = $333;
           }
          } else {
           $$1346$i$ph = $331;$$1350$i$ph = $330;
          }
          $$1346$i = $$1346$i$ph;$$1350$i = $$1350$i$ph;
          while(1) {
           $336 = ((($$1346$i)) + 20|0);
           $337 = HEAP32[$336>>2]|0;
           $338 = ($337|0)==(0|0);
           if ($338) {
            $339 = ((($$1346$i)) + 16|0);
            $340 = HEAP32[$339>>2]|0;
            $341 = ($340|0)==(0|0);
            if ($341) {
             break;
            } else {
             $$1346$i$be = $340;$$1350$i$be = $339;
            }
           } else {
            $$1346$i$be = $337;$$1350$i$be = $336;
           }
           $$1346$i = $$1346$i$be;$$1350$i = $$1350$i$be;
          }
          HEAP32[$$1350$i>>2] = 0;
          $$3348$i = $$1346$i;
         } else {
          $326 = ((($$4$lcssa$i)) + 8|0);
          $327 = HEAP32[$326>>2]|0;
          $328 = ((($327)) + 12|0);
          HEAP32[$328>>2] = $324;
          $329 = ((($324)) + 8|0);
          HEAP32[$329>>2] = $327;
          $$3348$i = $324;
         }
        } while(0);
        $342 = ($322|0)==(0|0);
        do {
         if ($342) {
          $425 = $220;
         } else {
          $343 = ((($$4$lcssa$i)) + 28|0);
          $344 = HEAP32[$343>>2]|0;
          $345 = (49660 + ($344<<2)|0);
          $346 = HEAP32[$345>>2]|0;
          $347 = ($$4$lcssa$i|0)==($346|0);
          if ($347) {
           HEAP32[$345>>2] = $$3348$i;
           $cond$i203 = ($$3348$i|0)==(0|0);
           if ($cond$i203) {
            $348 = 1 << $344;
            $349 = $348 ^ -1;
            $350 = $220 & $349;
            HEAP32[(49360)>>2] = $350;
            $425 = $350;
            break;
           }
          } else {
           $351 = ((($322)) + 16|0);
           $352 = HEAP32[$351>>2]|0;
           $353 = ($352|0)==($$4$lcssa$i|0);
           $354 = ((($322)) + 20|0);
           $$sink320 = $353 ? $351 : $354;
           HEAP32[$$sink320>>2] = $$3348$i;
           $355 = ($$3348$i|0)==(0|0);
           if ($355) {
            $425 = $220;
            break;
           }
          }
          $356 = ((($$3348$i)) + 24|0);
          HEAP32[$356>>2] = $322;
          $357 = ((($$4$lcssa$i)) + 16|0);
          $358 = HEAP32[$357>>2]|0;
          $359 = ($358|0)==(0|0);
          if (!($359)) {
           $360 = ((($$3348$i)) + 16|0);
           HEAP32[$360>>2] = $358;
           $361 = ((($358)) + 24|0);
           HEAP32[$361>>2] = $$3348$i;
          }
          $362 = ((($$4$lcssa$i)) + 20|0);
          $363 = HEAP32[$362>>2]|0;
          $364 = ($363|0)==(0|0);
          if ($364) {
           $425 = $220;
          } else {
           $365 = ((($$3348$i)) + 20|0);
           HEAP32[$365>>2] = $363;
           $366 = ((($363)) + 24|0);
           HEAP32[$366>>2] = $$3348$i;
           $425 = $220;
          }
         }
        } while(0);
        $367 = ($$4327$lcssa$i>>>0)<(16);
        L128: do {
         if ($367) {
          $368 = (($$4327$lcssa$i) + ($219))|0;
          $369 = $368 | 3;
          $370 = ((($$4$lcssa$i)) + 4|0);
          HEAP32[$370>>2] = $369;
          $371 = (($$4$lcssa$i) + ($368)|0);
          $372 = ((($371)) + 4|0);
          $373 = HEAP32[$372>>2]|0;
          $374 = $373 | 1;
          HEAP32[$372>>2] = $374;
         } else {
          $375 = $219 | 3;
          $376 = ((($$4$lcssa$i)) + 4|0);
          HEAP32[$376>>2] = $375;
          $377 = $$4327$lcssa$i | 1;
          $378 = ((($319)) + 4|0);
          HEAP32[$378>>2] = $377;
          $379 = (($319) + ($$4327$lcssa$i)|0);
          HEAP32[$379>>2] = $$4327$lcssa$i;
          $380 = $$4327$lcssa$i >>> 3;
          $381 = ($$4327$lcssa$i>>>0)<(256);
          if ($381) {
           $382 = $380 << 1;
           $383 = (49396 + ($382<<2)|0);
           $384 = HEAP32[12339]|0;
           $385 = 1 << $380;
           $386 = $384 & $385;
           $387 = ($386|0)==(0);
           if ($387) {
            $388 = $384 | $385;
            HEAP32[12339] = $388;
            $$pre$i204 = ((($383)) + 8|0);
            $$0344$i = $383;$$pre$phi$i205Z2D = $$pre$i204;
           } else {
            $389 = ((($383)) + 8|0);
            $390 = HEAP32[$389>>2]|0;
            $$0344$i = $390;$$pre$phi$i205Z2D = $389;
           }
           HEAP32[$$pre$phi$i205Z2D>>2] = $319;
           $391 = ((($$0344$i)) + 12|0);
           HEAP32[$391>>2] = $319;
           $392 = ((($319)) + 8|0);
           HEAP32[$392>>2] = $$0344$i;
           $393 = ((($319)) + 12|0);
           HEAP32[$393>>2] = $383;
           break;
          }
          $394 = $$4327$lcssa$i >>> 8;
          $395 = ($394|0)==(0);
          if ($395) {
           $$0338$i = 0;
          } else {
           $396 = ($$4327$lcssa$i>>>0)>(16777215);
           if ($396) {
            $$0338$i = 31;
           } else {
            $397 = (($394) + 1048320)|0;
            $398 = $397 >>> 16;
            $399 = $398 & 8;
            $400 = $394 << $399;
            $401 = (($400) + 520192)|0;
            $402 = $401 >>> 16;
            $403 = $402 & 4;
            $404 = $403 | $399;
            $405 = $400 << $403;
            $406 = (($405) + 245760)|0;
            $407 = $406 >>> 16;
            $408 = $407 & 2;
            $409 = $404 | $408;
            $410 = (14 - ($409))|0;
            $411 = $405 << $408;
            $412 = $411 >>> 15;
            $413 = (($410) + ($412))|0;
            $414 = $413 << 1;
            $415 = (($413) + 7)|0;
            $416 = $$4327$lcssa$i >>> $415;
            $417 = $416 & 1;
            $418 = $417 | $414;
            $$0338$i = $418;
           }
          }
          $419 = (49660 + ($$0338$i<<2)|0);
          $420 = ((($319)) + 28|0);
          HEAP32[$420>>2] = $$0338$i;
          $421 = ((($319)) + 16|0);
          $422 = ((($421)) + 4|0);
          HEAP32[$422>>2] = 0;
          HEAP32[$421>>2] = 0;
          $423 = 1 << $$0338$i;
          $424 = $425 & $423;
          $426 = ($424|0)==(0);
          if ($426) {
           $427 = $425 | $423;
           HEAP32[(49360)>>2] = $427;
           HEAP32[$419>>2] = $319;
           $428 = ((($319)) + 24|0);
           HEAP32[$428>>2] = $419;
           $429 = ((($319)) + 12|0);
           HEAP32[$429>>2] = $319;
           $430 = ((($319)) + 8|0);
           HEAP32[$430>>2] = $319;
           break;
          }
          $431 = HEAP32[$419>>2]|0;
          $432 = ((($431)) + 4|0);
          $433 = HEAP32[$432>>2]|0;
          $434 = $433 & -8;
          $435 = ($434|0)==($$4327$lcssa$i|0);
          L145: do {
           if ($435) {
            $$0321$lcssa$i = $431;
           } else {
            $436 = ($$0338$i|0)==(31);
            $437 = $$0338$i >>> 1;
            $438 = (25 - ($437))|0;
            $439 = $436 ? 0 : $438;
            $440 = $$4327$lcssa$i << $439;
            $$032012$i = $440;$$032111$i = $431;
            while(1) {
             $447 = $$032012$i >>> 31;
             $448 = (((($$032111$i)) + 16|0) + ($447<<2)|0);
             $443 = HEAP32[$448>>2]|0;
             $449 = ($443|0)==(0|0);
             if ($449) {
              break;
             }
             $441 = $$032012$i << 1;
             $442 = ((($443)) + 4|0);
             $444 = HEAP32[$442>>2]|0;
             $445 = $444 & -8;
             $446 = ($445|0)==($$4327$lcssa$i|0);
             if ($446) {
              $$0321$lcssa$i = $443;
              break L145;
             } else {
              $$032012$i = $441;$$032111$i = $443;
             }
            }
            HEAP32[$448>>2] = $319;
            $450 = ((($319)) + 24|0);
            HEAP32[$450>>2] = $$032111$i;
            $451 = ((($319)) + 12|0);
            HEAP32[$451>>2] = $319;
            $452 = ((($319)) + 8|0);
            HEAP32[$452>>2] = $319;
            break L128;
           }
          } while(0);
          $453 = ((($$0321$lcssa$i)) + 8|0);
          $454 = HEAP32[$453>>2]|0;
          $455 = ((($454)) + 12|0);
          HEAP32[$455>>2] = $319;
          HEAP32[$453>>2] = $319;
          $456 = ((($319)) + 8|0);
          HEAP32[$456>>2] = $454;
          $457 = ((($319)) + 12|0);
          HEAP32[$457>>2] = $$0321$lcssa$i;
          $458 = ((($319)) + 24|0);
          HEAP32[$458>>2] = 0;
         }
        } while(0);
        $459 = ((($$4$lcssa$i)) + 8|0);
        $$0 = $459;
        STACKTOP = sp;return ($$0|0);
       } else {
        $$0192 = $219;
       }
      } else {
       $$0192 = $219;
      }
     }
    }
   }
  }
 } while(0);
 $460 = HEAP32[(49364)>>2]|0;
 $461 = ($460>>>0)<($$0192>>>0);
 if (!($461)) {
  $462 = (($460) - ($$0192))|0;
  $463 = HEAP32[(49376)>>2]|0;
  $464 = ($462>>>0)>(15);
  if ($464) {
   $465 = (($463) + ($$0192)|0);
   HEAP32[(49376)>>2] = $465;
   HEAP32[(49364)>>2] = $462;
   $466 = $462 | 1;
   $467 = ((($465)) + 4|0);
   HEAP32[$467>>2] = $466;
   $468 = (($463) + ($460)|0);
   HEAP32[$468>>2] = $462;
   $469 = $$0192 | 3;
   $470 = ((($463)) + 4|0);
   HEAP32[$470>>2] = $469;
  } else {
   HEAP32[(49364)>>2] = 0;
   HEAP32[(49376)>>2] = 0;
   $471 = $460 | 3;
   $472 = ((($463)) + 4|0);
   HEAP32[$472>>2] = $471;
   $473 = (($463) + ($460)|0);
   $474 = ((($473)) + 4|0);
   $475 = HEAP32[$474>>2]|0;
   $476 = $475 | 1;
   HEAP32[$474>>2] = $476;
  }
  $477 = ((($463)) + 8|0);
  $$0 = $477;
  STACKTOP = sp;return ($$0|0);
 }
 $478 = HEAP32[(49368)>>2]|0;
 $479 = ($478>>>0)>($$0192>>>0);
 if ($479) {
  $480 = (($478) - ($$0192))|0;
  HEAP32[(49368)>>2] = $480;
  $481 = HEAP32[(49380)>>2]|0;
  $482 = (($481) + ($$0192)|0);
  HEAP32[(49380)>>2] = $482;
  $483 = $480 | 1;
  $484 = ((($482)) + 4|0);
  HEAP32[$484>>2] = $483;
  $485 = $$0192 | 3;
  $486 = ((($481)) + 4|0);
  HEAP32[$486>>2] = $485;
  $487 = ((($481)) + 8|0);
  $$0 = $487;
  STACKTOP = sp;return ($$0|0);
 }
 $488 = HEAP32[12457]|0;
 $489 = ($488|0)==(0);
 if ($489) {
  HEAP32[(49836)>>2] = 4096;
  HEAP32[(49832)>>2] = 4096;
  HEAP32[(49840)>>2] = -1;
  HEAP32[(49844)>>2] = -1;
  HEAP32[(49848)>>2] = 0;
  HEAP32[(49800)>>2] = 0;
  $490 = $1;
  $491 = $490 & -16;
  $492 = $491 ^ 1431655768;
  HEAP32[12457] = $492;
  $496 = 4096;
 } else {
  $$pre$i195 = HEAP32[(49836)>>2]|0;
  $496 = $$pre$i195;
 }
 $493 = (($$0192) + 48)|0;
 $494 = (($$0192) + 47)|0;
 $495 = (($496) + ($494))|0;
 $497 = (0 - ($496))|0;
 $498 = $495 & $497;
 $499 = ($498>>>0)>($$0192>>>0);
 if (!($499)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $500 = HEAP32[(49796)>>2]|0;
 $501 = ($500|0)==(0);
 if (!($501)) {
  $502 = HEAP32[(49788)>>2]|0;
  $503 = (($502) + ($498))|0;
  $504 = ($503>>>0)<=($502>>>0);
  $505 = ($503>>>0)>($500>>>0);
  $or$cond1$i = $504 | $505;
  if ($or$cond1$i) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $506 = HEAP32[(49800)>>2]|0;
 $507 = $506 & 4;
 $508 = ($507|0)==(0);
 L178: do {
  if ($508) {
   $509 = HEAP32[(49380)>>2]|0;
   $510 = ($509|0)==(0|0);
   L180: do {
    if ($510) {
     label = 128;
    } else {
     $$0$i20$i = (49804);
     while(1) {
      $511 = HEAP32[$$0$i20$i>>2]|0;
      $512 = ($511>>>0)>($509>>>0);
      if (!($512)) {
       $513 = ((($$0$i20$i)) + 4|0);
       $514 = HEAP32[$513>>2]|0;
       $515 = (($511) + ($514)|0);
       $516 = ($515>>>0)>($509>>>0);
       if ($516) {
        break;
       }
      }
      $517 = ((($$0$i20$i)) + 8|0);
      $518 = HEAP32[$517>>2]|0;
      $519 = ($518|0)==(0|0);
      if ($519) {
       label = 128;
       break L180;
      } else {
       $$0$i20$i = $518;
      }
     }
     $542 = (($495) - ($478))|0;
     $543 = $542 & $497;
     $544 = ($543>>>0)<(2147483647);
     if ($544) {
      $545 = ((($$0$i20$i)) + 4|0);
      $546 = (_sbrk(($543|0))|0);
      $547 = HEAP32[$$0$i20$i>>2]|0;
      $548 = HEAP32[$545>>2]|0;
      $549 = (($547) + ($548)|0);
      $550 = ($546|0)==($549|0);
      if ($550) {
       $551 = ($546|0)==((-1)|0);
       if ($551) {
        $$2234243136$i = $543;
       } else {
        $$723947$i = $543;$$748$i = $546;
        label = 145;
        break L178;
       }
      } else {
       $$2247$ph$i = $546;$$2253$ph$i = $543;
       label = 136;
      }
     } else {
      $$2234243136$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 128) {
     $520 = (_sbrk(0)|0);
     $521 = ($520|0)==((-1)|0);
     if ($521) {
      $$2234243136$i = 0;
     } else {
      $522 = $520;
      $523 = HEAP32[(49832)>>2]|0;
      $524 = (($523) + -1)|0;
      $525 = $524 & $522;
      $526 = ($525|0)==(0);
      $527 = (($524) + ($522))|0;
      $528 = (0 - ($523))|0;
      $529 = $527 & $528;
      $530 = (($529) - ($522))|0;
      $531 = $526 ? 0 : $530;
      $spec$select49$i = (($531) + ($498))|0;
      $532 = HEAP32[(49788)>>2]|0;
      $533 = (($spec$select49$i) + ($532))|0;
      $534 = ($spec$select49$i>>>0)>($$0192>>>0);
      $535 = ($spec$select49$i>>>0)<(2147483647);
      $or$cond$i = $534 & $535;
      if ($or$cond$i) {
       $536 = HEAP32[(49796)>>2]|0;
       $537 = ($536|0)==(0);
       if (!($537)) {
        $538 = ($533>>>0)<=($532>>>0);
        $539 = ($533>>>0)>($536>>>0);
        $or$cond2$i = $538 | $539;
        if ($or$cond2$i) {
         $$2234243136$i = 0;
         break;
        }
       }
       $540 = (_sbrk(($spec$select49$i|0))|0);
       $541 = ($540|0)==($520|0);
       if ($541) {
        $$723947$i = $spec$select49$i;$$748$i = $520;
        label = 145;
        break L178;
       } else {
        $$2247$ph$i = $540;$$2253$ph$i = $spec$select49$i;
        label = 136;
       }
      } else {
       $$2234243136$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 136) {
     $552 = (0 - ($$2253$ph$i))|0;
     $553 = ($$2247$ph$i|0)!=((-1)|0);
     $554 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $554 & $553;
     $555 = ($493>>>0)>($$2253$ph$i>>>0);
     $or$cond6$i = $555 & $or$cond7$i;
     if (!($or$cond6$i)) {
      $565 = ($$2247$ph$i|0)==((-1)|0);
      if ($565) {
       $$2234243136$i = 0;
       break;
      } else {
       $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
       label = 145;
       break L178;
      }
     }
     $556 = HEAP32[(49836)>>2]|0;
     $557 = (($494) - ($$2253$ph$i))|0;
     $558 = (($557) + ($556))|0;
     $559 = (0 - ($556))|0;
     $560 = $558 & $559;
     $561 = ($560>>>0)<(2147483647);
     if (!($561)) {
      $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
      label = 145;
      break L178;
     }
     $562 = (_sbrk(($560|0))|0);
     $563 = ($562|0)==((-1)|0);
     if ($563) {
      (_sbrk(($552|0))|0);
      $$2234243136$i = 0;
      break;
     } else {
      $564 = (($560) + ($$2253$ph$i))|0;
      $$723947$i = $564;$$748$i = $$2247$ph$i;
      label = 145;
      break L178;
     }
    }
   } while(0);
   $566 = HEAP32[(49800)>>2]|0;
   $567 = $566 | 4;
   HEAP32[(49800)>>2] = $567;
   $$4236$i = $$2234243136$i;
   label = 143;
  } else {
   $$4236$i = 0;
   label = 143;
  }
 } while(0);
 if ((label|0) == 143) {
  $568 = ($498>>>0)<(2147483647);
  if ($568) {
   $569 = (_sbrk(($498|0))|0);
   $570 = (_sbrk(0)|0);
   $571 = ($569|0)!=((-1)|0);
   $572 = ($570|0)!=((-1)|0);
   $or$cond5$i = $571 & $572;
   $573 = ($569>>>0)<($570>>>0);
   $or$cond8$i = $573 & $or$cond5$i;
   $574 = $570;
   $575 = $569;
   $576 = (($574) - ($575))|0;
   $577 = (($$0192) + 40)|0;
   $578 = ($576>>>0)>($577>>>0);
   $spec$select9$i = $578 ? $576 : $$4236$i;
   $or$cond8$not$i = $or$cond8$i ^ 1;
   $579 = ($569|0)==((-1)|0);
   $not$$i = $578 ^ 1;
   $580 = $579 | $not$$i;
   $or$cond50$i = $580 | $or$cond8$not$i;
   if (!($or$cond50$i)) {
    $$723947$i = $spec$select9$i;$$748$i = $569;
    label = 145;
   }
  }
 }
 if ((label|0) == 145) {
  $581 = HEAP32[(49788)>>2]|0;
  $582 = (($581) + ($$723947$i))|0;
  HEAP32[(49788)>>2] = $582;
  $583 = HEAP32[(49792)>>2]|0;
  $584 = ($582>>>0)>($583>>>0);
  if ($584) {
   HEAP32[(49792)>>2] = $582;
  }
  $585 = HEAP32[(49380)>>2]|0;
  $586 = ($585|0)==(0|0);
  L215: do {
   if ($586) {
    $587 = HEAP32[(49372)>>2]|0;
    $588 = ($587|0)==(0|0);
    $589 = ($$748$i>>>0)<($587>>>0);
    $or$cond11$i = $588 | $589;
    if ($or$cond11$i) {
     HEAP32[(49372)>>2] = $$748$i;
    }
    HEAP32[(49804)>>2] = $$748$i;
    HEAP32[(49808)>>2] = $$723947$i;
    HEAP32[(49816)>>2] = 0;
    $590 = HEAP32[12457]|0;
    HEAP32[(49392)>>2] = $590;
    HEAP32[(49388)>>2] = -1;
    HEAP32[(49408)>>2] = (49396);
    HEAP32[(49404)>>2] = (49396);
    HEAP32[(49416)>>2] = (49404);
    HEAP32[(49412)>>2] = (49404);
    HEAP32[(49424)>>2] = (49412);
    HEAP32[(49420)>>2] = (49412);
    HEAP32[(49432)>>2] = (49420);
    HEAP32[(49428)>>2] = (49420);
    HEAP32[(49440)>>2] = (49428);
    HEAP32[(49436)>>2] = (49428);
    HEAP32[(49448)>>2] = (49436);
    HEAP32[(49444)>>2] = (49436);
    HEAP32[(49456)>>2] = (49444);
    HEAP32[(49452)>>2] = (49444);
    HEAP32[(49464)>>2] = (49452);
    HEAP32[(49460)>>2] = (49452);
    HEAP32[(49472)>>2] = (49460);
    HEAP32[(49468)>>2] = (49460);
    HEAP32[(49480)>>2] = (49468);
    HEAP32[(49476)>>2] = (49468);
    HEAP32[(49488)>>2] = (49476);
    HEAP32[(49484)>>2] = (49476);
    HEAP32[(49496)>>2] = (49484);
    HEAP32[(49492)>>2] = (49484);
    HEAP32[(49504)>>2] = (49492);
    HEAP32[(49500)>>2] = (49492);
    HEAP32[(49512)>>2] = (49500);
    HEAP32[(49508)>>2] = (49500);
    HEAP32[(49520)>>2] = (49508);
    HEAP32[(49516)>>2] = (49508);
    HEAP32[(49528)>>2] = (49516);
    HEAP32[(49524)>>2] = (49516);
    HEAP32[(49536)>>2] = (49524);
    HEAP32[(49532)>>2] = (49524);
    HEAP32[(49544)>>2] = (49532);
    HEAP32[(49540)>>2] = (49532);
    HEAP32[(49552)>>2] = (49540);
    HEAP32[(49548)>>2] = (49540);
    HEAP32[(49560)>>2] = (49548);
    HEAP32[(49556)>>2] = (49548);
    HEAP32[(49568)>>2] = (49556);
    HEAP32[(49564)>>2] = (49556);
    HEAP32[(49576)>>2] = (49564);
    HEAP32[(49572)>>2] = (49564);
    HEAP32[(49584)>>2] = (49572);
    HEAP32[(49580)>>2] = (49572);
    HEAP32[(49592)>>2] = (49580);
    HEAP32[(49588)>>2] = (49580);
    HEAP32[(49600)>>2] = (49588);
    HEAP32[(49596)>>2] = (49588);
    HEAP32[(49608)>>2] = (49596);
    HEAP32[(49604)>>2] = (49596);
    HEAP32[(49616)>>2] = (49604);
    HEAP32[(49612)>>2] = (49604);
    HEAP32[(49624)>>2] = (49612);
    HEAP32[(49620)>>2] = (49612);
    HEAP32[(49632)>>2] = (49620);
    HEAP32[(49628)>>2] = (49620);
    HEAP32[(49640)>>2] = (49628);
    HEAP32[(49636)>>2] = (49628);
    HEAP32[(49648)>>2] = (49636);
    HEAP32[(49644)>>2] = (49636);
    HEAP32[(49656)>>2] = (49644);
    HEAP32[(49652)>>2] = (49644);
    $591 = (($$723947$i) + -40)|0;
    $592 = ((($$748$i)) + 8|0);
    $593 = $592;
    $594 = $593 & 7;
    $595 = ($594|0)==(0);
    $596 = (0 - ($593))|0;
    $597 = $596 & 7;
    $598 = $595 ? 0 : $597;
    $599 = (($$748$i) + ($598)|0);
    $600 = (($591) - ($598))|0;
    HEAP32[(49380)>>2] = $599;
    HEAP32[(49368)>>2] = $600;
    $601 = $600 | 1;
    $602 = ((($599)) + 4|0);
    HEAP32[$602>>2] = $601;
    $603 = (($$748$i) + ($591)|0);
    $604 = ((($603)) + 4|0);
    HEAP32[$604>>2] = 40;
    $605 = HEAP32[(49844)>>2]|0;
    HEAP32[(49384)>>2] = $605;
   } else {
    $$024372$i = (49804);
    while(1) {
     $606 = HEAP32[$$024372$i>>2]|0;
     $607 = ((($$024372$i)) + 4|0);
     $608 = HEAP32[$607>>2]|0;
     $609 = (($606) + ($608)|0);
     $610 = ($$748$i|0)==($609|0);
     if ($610) {
      label = 154;
      break;
     }
     $611 = ((($$024372$i)) + 8|0);
     $612 = HEAP32[$611>>2]|0;
     $613 = ($612|0)==(0|0);
     if ($613) {
      break;
     } else {
      $$024372$i = $612;
     }
    }
    if ((label|0) == 154) {
     $614 = ((($$024372$i)) + 4|0);
     $615 = ((($$024372$i)) + 12|0);
     $616 = HEAP32[$615>>2]|0;
     $617 = $616 & 8;
     $618 = ($617|0)==(0);
     if ($618) {
      $619 = ($606>>>0)<=($585>>>0);
      $620 = ($$748$i>>>0)>($585>>>0);
      $or$cond51$i = $620 & $619;
      if ($or$cond51$i) {
       $621 = (($608) + ($$723947$i))|0;
       HEAP32[$614>>2] = $621;
       $622 = HEAP32[(49368)>>2]|0;
       $623 = (($622) + ($$723947$i))|0;
       $624 = ((($585)) + 8|0);
       $625 = $624;
       $626 = $625 & 7;
       $627 = ($626|0)==(0);
       $628 = (0 - ($625))|0;
       $629 = $628 & 7;
       $630 = $627 ? 0 : $629;
       $631 = (($585) + ($630)|0);
       $632 = (($623) - ($630))|0;
       HEAP32[(49380)>>2] = $631;
       HEAP32[(49368)>>2] = $632;
       $633 = $632 | 1;
       $634 = ((($631)) + 4|0);
       HEAP32[$634>>2] = $633;
       $635 = (($585) + ($623)|0);
       $636 = ((($635)) + 4|0);
       HEAP32[$636>>2] = 40;
       $637 = HEAP32[(49844)>>2]|0;
       HEAP32[(49384)>>2] = $637;
       break;
      }
     }
    }
    $638 = HEAP32[(49372)>>2]|0;
    $639 = ($$748$i>>>0)<($638>>>0);
    if ($639) {
     HEAP32[(49372)>>2] = $$748$i;
    }
    $640 = (($$748$i) + ($$723947$i)|0);
    $$124471$i = (49804);
    while(1) {
     $641 = HEAP32[$$124471$i>>2]|0;
     $642 = ($641|0)==($640|0);
     if ($642) {
      label = 162;
      break;
     }
     $643 = ((($$124471$i)) + 8|0);
     $644 = HEAP32[$643>>2]|0;
     $645 = ($644|0)==(0|0);
     if ($645) {
      break;
     } else {
      $$124471$i = $644;
     }
    }
    if ((label|0) == 162) {
     $646 = ((($$124471$i)) + 12|0);
     $647 = HEAP32[$646>>2]|0;
     $648 = $647 & 8;
     $649 = ($648|0)==(0);
     if ($649) {
      HEAP32[$$124471$i>>2] = $$748$i;
      $650 = ((($$124471$i)) + 4|0);
      $651 = HEAP32[$650>>2]|0;
      $652 = (($651) + ($$723947$i))|0;
      HEAP32[$650>>2] = $652;
      $653 = ((($$748$i)) + 8|0);
      $654 = $653;
      $655 = $654 & 7;
      $656 = ($655|0)==(0);
      $657 = (0 - ($654))|0;
      $658 = $657 & 7;
      $659 = $656 ? 0 : $658;
      $660 = (($$748$i) + ($659)|0);
      $661 = ((($640)) + 8|0);
      $662 = $661;
      $663 = $662 & 7;
      $664 = ($663|0)==(0);
      $665 = (0 - ($662))|0;
      $666 = $665 & 7;
      $667 = $664 ? 0 : $666;
      $668 = (($640) + ($667)|0);
      $669 = $668;
      $670 = $660;
      $671 = (($669) - ($670))|0;
      $672 = (($660) + ($$0192)|0);
      $673 = (($671) - ($$0192))|0;
      $674 = $$0192 | 3;
      $675 = ((($660)) + 4|0);
      HEAP32[$675>>2] = $674;
      $676 = ($585|0)==($668|0);
      L238: do {
       if ($676) {
        $677 = HEAP32[(49368)>>2]|0;
        $678 = (($677) + ($673))|0;
        HEAP32[(49368)>>2] = $678;
        HEAP32[(49380)>>2] = $672;
        $679 = $678 | 1;
        $680 = ((($672)) + 4|0);
        HEAP32[$680>>2] = $679;
       } else {
        $681 = HEAP32[(49376)>>2]|0;
        $682 = ($681|0)==($668|0);
        if ($682) {
         $683 = HEAP32[(49364)>>2]|0;
         $684 = (($683) + ($673))|0;
         HEAP32[(49364)>>2] = $684;
         HEAP32[(49376)>>2] = $672;
         $685 = $684 | 1;
         $686 = ((($672)) + 4|0);
         HEAP32[$686>>2] = $685;
         $687 = (($672) + ($684)|0);
         HEAP32[$687>>2] = $684;
         break;
        }
        $688 = ((($668)) + 4|0);
        $689 = HEAP32[$688>>2]|0;
        $690 = $689 & 3;
        $691 = ($690|0)==(1);
        if ($691) {
         $692 = $689 & -8;
         $693 = $689 >>> 3;
         $694 = ($689>>>0)<(256);
         L246: do {
          if ($694) {
           $695 = ((($668)) + 8|0);
           $696 = HEAP32[$695>>2]|0;
           $697 = ((($668)) + 12|0);
           $698 = HEAP32[$697>>2]|0;
           $699 = ($698|0)==($696|0);
           if ($699) {
            $700 = 1 << $693;
            $701 = $700 ^ -1;
            $702 = HEAP32[12339]|0;
            $703 = $702 & $701;
            HEAP32[12339] = $703;
            break;
           } else {
            $704 = ((($696)) + 12|0);
            HEAP32[$704>>2] = $698;
            $705 = ((($698)) + 8|0);
            HEAP32[$705>>2] = $696;
            break;
           }
          } else {
           $706 = ((($668)) + 24|0);
           $707 = HEAP32[$706>>2]|0;
           $708 = ((($668)) + 12|0);
           $709 = HEAP32[$708>>2]|0;
           $710 = ($709|0)==($668|0);
           do {
            if ($710) {
             $715 = ((($668)) + 16|0);
             $716 = ((($715)) + 4|0);
             $717 = HEAP32[$716>>2]|0;
             $718 = ($717|0)==(0|0);
             if ($718) {
              $719 = HEAP32[$715>>2]|0;
              $720 = ($719|0)==(0|0);
              if ($720) {
               $$3$i$i = 0;
               break;
              } else {
               $$1263$i$i$ph = $719;$$1265$i$i$ph = $715;
              }
             } else {
              $$1263$i$i$ph = $717;$$1265$i$i$ph = $716;
             }
             $$1263$i$i = $$1263$i$i$ph;$$1265$i$i = $$1265$i$i$ph;
             while(1) {
              $721 = ((($$1263$i$i)) + 20|0);
              $722 = HEAP32[$721>>2]|0;
              $723 = ($722|0)==(0|0);
              if ($723) {
               $724 = ((($$1263$i$i)) + 16|0);
               $725 = HEAP32[$724>>2]|0;
               $726 = ($725|0)==(0|0);
               if ($726) {
                break;
               } else {
                $$1263$i$i$be = $725;$$1265$i$i$be = $724;
               }
              } else {
               $$1263$i$i$be = $722;$$1265$i$i$be = $721;
              }
              $$1263$i$i = $$1263$i$i$be;$$1265$i$i = $$1265$i$i$be;
             }
             HEAP32[$$1265$i$i>>2] = 0;
             $$3$i$i = $$1263$i$i;
            } else {
             $711 = ((($668)) + 8|0);
             $712 = HEAP32[$711>>2]|0;
             $713 = ((($712)) + 12|0);
             HEAP32[$713>>2] = $709;
             $714 = ((($709)) + 8|0);
             HEAP32[$714>>2] = $712;
             $$3$i$i = $709;
            }
           } while(0);
           $727 = ($707|0)==(0|0);
           if ($727) {
            break;
           }
           $728 = ((($668)) + 28|0);
           $729 = HEAP32[$728>>2]|0;
           $730 = (49660 + ($729<<2)|0);
           $731 = HEAP32[$730>>2]|0;
           $732 = ($731|0)==($668|0);
           do {
            if ($732) {
             HEAP32[$730>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $733 = 1 << $729;
             $734 = $733 ^ -1;
             $735 = HEAP32[(49360)>>2]|0;
             $736 = $735 & $734;
             HEAP32[(49360)>>2] = $736;
             break L246;
            } else {
             $737 = ((($707)) + 16|0);
             $738 = HEAP32[$737>>2]|0;
             $739 = ($738|0)==($668|0);
             $740 = ((($707)) + 20|0);
             $$sink321 = $739 ? $737 : $740;
             HEAP32[$$sink321>>2] = $$3$i$i;
             $741 = ($$3$i$i|0)==(0|0);
             if ($741) {
              break L246;
             }
            }
           } while(0);
           $742 = ((($$3$i$i)) + 24|0);
           HEAP32[$742>>2] = $707;
           $743 = ((($668)) + 16|0);
           $744 = HEAP32[$743>>2]|0;
           $745 = ($744|0)==(0|0);
           if (!($745)) {
            $746 = ((($$3$i$i)) + 16|0);
            HEAP32[$746>>2] = $744;
            $747 = ((($744)) + 24|0);
            HEAP32[$747>>2] = $$3$i$i;
           }
           $748 = ((($743)) + 4|0);
           $749 = HEAP32[$748>>2]|0;
           $750 = ($749|0)==(0|0);
           if ($750) {
            break;
           }
           $751 = ((($$3$i$i)) + 20|0);
           HEAP32[$751>>2] = $749;
           $752 = ((($749)) + 24|0);
           HEAP32[$752>>2] = $$3$i$i;
          }
         } while(0);
         $753 = (($668) + ($692)|0);
         $754 = (($692) + ($673))|0;
         $$0$i$i = $753;$$0259$i$i = $754;
        } else {
         $$0$i$i = $668;$$0259$i$i = $673;
        }
        $755 = ((($$0$i$i)) + 4|0);
        $756 = HEAP32[$755>>2]|0;
        $757 = $756 & -2;
        HEAP32[$755>>2] = $757;
        $758 = $$0259$i$i | 1;
        $759 = ((($672)) + 4|0);
        HEAP32[$759>>2] = $758;
        $760 = (($672) + ($$0259$i$i)|0);
        HEAP32[$760>>2] = $$0259$i$i;
        $761 = $$0259$i$i >>> 3;
        $762 = ($$0259$i$i>>>0)<(256);
        if ($762) {
         $763 = $761 << 1;
         $764 = (49396 + ($763<<2)|0);
         $765 = HEAP32[12339]|0;
         $766 = 1 << $761;
         $767 = $765 & $766;
         $768 = ($767|0)==(0);
         if ($768) {
          $769 = $765 | $766;
          HEAP32[12339] = $769;
          $$pre$i16$i = ((($764)) + 8|0);
          $$0267$i$i = $764;$$pre$phi$i17$iZ2D = $$pre$i16$i;
         } else {
          $770 = ((($764)) + 8|0);
          $771 = HEAP32[$770>>2]|0;
          $$0267$i$i = $771;$$pre$phi$i17$iZ2D = $770;
         }
         HEAP32[$$pre$phi$i17$iZ2D>>2] = $672;
         $772 = ((($$0267$i$i)) + 12|0);
         HEAP32[$772>>2] = $672;
         $773 = ((($672)) + 8|0);
         HEAP32[$773>>2] = $$0267$i$i;
         $774 = ((($672)) + 12|0);
         HEAP32[$774>>2] = $764;
         break;
        }
        $775 = $$0259$i$i >>> 8;
        $776 = ($775|0)==(0);
        do {
         if ($776) {
          $$0268$i$i = 0;
         } else {
          $777 = ($$0259$i$i>>>0)>(16777215);
          if ($777) {
           $$0268$i$i = 31;
           break;
          }
          $778 = (($775) + 1048320)|0;
          $779 = $778 >>> 16;
          $780 = $779 & 8;
          $781 = $775 << $780;
          $782 = (($781) + 520192)|0;
          $783 = $782 >>> 16;
          $784 = $783 & 4;
          $785 = $784 | $780;
          $786 = $781 << $784;
          $787 = (($786) + 245760)|0;
          $788 = $787 >>> 16;
          $789 = $788 & 2;
          $790 = $785 | $789;
          $791 = (14 - ($790))|0;
          $792 = $786 << $789;
          $793 = $792 >>> 15;
          $794 = (($791) + ($793))|0;
          $795 = $794 << 1;
          $796 = (($794) + 7)|0;
          $797 = $$0259$i$i >>> $796;
          $798 = $797 & 1;
          $799 = $798 | $795;
          $$0268$i$i = $799;
         }
        } while(0);
        $800 = (49660 + ($$0268$i$i<<2)|0);
        $801 = ((($672)) + 28|0);
        HEAP32[$801>>2] = $$0268$i$i;
        $802 = ((($672)) + 16|0);
        $803 = ((($802)) + 4|0);
        HEAP32[$803>>2] = 0;
        HEAP32[$802>>2] = 0;
        $804 = HEAP32[(49360)>>2]|0;
        $805 = 1 << $$0268$i$i;
        $806 = $804 & $805;
        $807 = ($806|0)==(0);
        if ($807) {
         $808 = $804 | $805;
         HEAP32[(49360)>>2] = $808;
         HEAP32[$800>>2] = $672;
         $809 = ((($672)) + 24|0);
         HEAP32[$809>>2] = $800;
         $810 = ((($672)) + 12|0);
         HEAP32[$810>>2] = $672;
         $811 = ((($672)) + 8|0);
         HEAP32[$811>>2] = $672;
         break;
        }
        $812 = HEAP32[$800>>2]|0;
        $813 = ((($812)) + 4|0);
        $814 = HEAP32[$813>>2]|0;
        $815 = $814 & -8;
        $816 = ($815|0)==($$0259$i$i|0);
        L291: do {
         if ($816) {
          $$0261$lcssa$i$i = $812;
         } else {
          $817 = ($$0268$i$i|0)==(31);
          $818 = $$0268$i$i >>> 1;
          $819 = (25 - ($818))|0;
          $820 = $817 ? 0 : $819;
          $821 = $$0259$i$i << $820;
          $$02604$i$i = $821;$$02613$i$i = $812;
          while(1) {
           $828 = $$02604$i$i >>> 31;
           $829 = (((($$02613$i$i)) + 16|0) + ($828<<2)|0);
           $824 = HEAP32[$829>>2]|0;
           $830 = ($824|0)==(0|0);
           if ($830) {
            break;
           }
           $822 = $$02604$i$i << 1;
           $823 = ((($824)) + 4|0);
           $825 = HEAP32[$823>>2]|0;
           $826 = $825 & -8;
           $827 = ($826|0)==($$0259$i$i|0);
           if ($827) {
            $$0261$lcssa$i$i = $824;
            break L291;
           } else {
            $$02604$i$i = $822;$$02613$i$i = $824;
           }
          }
          HEAP32[$829>>2] = $672;
          $831 = ((($672)) + 24|0);
          HEAP32[$831>>2] = $$02613$i$i;
          $832 = ((($672)) + 12|0);
          HEAP32[$832>>2] = $672;
          $833 = ((($672)) + 8|0);
          HEAP32[$833>>2] = $672;
          break L238;
         }
        } while(0);
        $834 = ((($$0261$lcssa$i$i)) + 8|0);
        $835 = HEAP32[$834>>2]|0;
        $836 = ((($835)) + 12|0);
        HEAP32[$836>>2] = $672;
        HEAP32[$834>>2] = $672;
        $837 = ((($672)) + 8|0);
        HEAP32[$837>>2] = $835;
        $838 = ((($672)) + 12|0);
        HEAP32[$838>>2] = $$0261$lcssa$i$i;
        $839 = ((($672)) + 24|0);
        HEAP32[$839>>2] = 0;
       }
      } while(0);
      $968 = ((($660)) + 8|0);
      $$0 = $968;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $$0$i$i$i = (49804);
    while(1) {
     $840 = HEAP32[$$0$i$i$i>>2]|0;
     $841 = ($840>>>0)>($585>>>0);
     if (!($841)) {
      $842 = ((($$0$i$i$i)) + 4|0);
      $843 = HEAP32[$842>>2]|0;
      $844 = (($840) + ($843)|0);
      $845 = ($844>>>0)>($585>>>0);
      if ($845) {
       break;
      }
     }
     $846 = ((($$0$i$i$i)) + 8|0);
     $847 = HEAP32[$846>>2]|0;
     $$0$i$i$i = $847;
    }
    $848 = ((($844)) + -47|0);
    $849 = ((($848)) + 8|0);
    $850 = $849;
    $851 = $850 & 7;
    $852 = ($851|0)==(0);
    $853 = (0 - ($850))|0;
    $854 = $853 & 7;
    $855 = $852 ? 0 : $854;
    $856 = (($848) + ($855)|0);
    $857 = ((($585)) + 16|0);
    $858 = ($856>>>0)<($857>>>0);
    $859 = $858 ? $585 : $856;
    $860 = ((($859)) + 8|0);
    $861 = ((($859)) + 24|0);
    $862 = (($$723947$i) + -40)|0;
    $863 = ((($$748$i)) + 8|0);
    $864 = $863;
    $865 = $864 & 7;
    $866 = ($865|0)==(0);
    $867 = (0 - ($864))|0;
    $868 = $867 & 7;
    $869 = $866 ? 0 : $868;
    $870 = (($$748$i) + ($869)|0);
    $871 = (($862) - ($869))|0;
    HEAP32[(49380)>>2] = $870;
    HEAP32[(49368)>>2] = $871;
    $872 = $871 | 1;
    $873 = ((($870)) + 4|0);
    HEAP32[$873>>2] = $872;
    $874 = (($$748$i) + ($862)|0);
    $875 = ((($874)) + 4|0);
    HEAP32[$875>>2] = 40;
    $876 = HEAP32[(49844)>>2]|0;
    HEAP32[(49384)>>2] = $876;
    $877 = ((($859)) + 4|0);
    HEAP32[$877>>2] = 27;
    ;HEAP32[$860>>2]=HEAP32[(49804)>>2]|0;HEAP32[$860+4>>2]=HEAP32[(49804)+4>>2]|0;HEAP32[$860+8>>2]=HEAP32[(49804)+8>>2]|0;HEAP32[$860+12>>2]=HEAP32[(49804)+12>>2]|0;
    HEAP32[(49804)>>2] = $$748$i;
    HEAP32[(49808)>>2] = $$723947$i;
    HEAP32[(49816)>>2] = 0;
    HEAP32[(49812)>>2] = $860;
    $879 = $861;
    while(1) {
     $878 = ((($879)) + 4|0);
     HEAP32[$878>>2] = 7;
     $880 = ((($879)) + 8|0);
     $881 = ($880>>>0)<($844>>>0);
     if ($881) {
      $879 = $878;
     } else {
      break;
     }
    }
    $882 = ($859|0)==($585|0);
    if (!($882)) {
     $883 = $859;
     $884 = $585;
     $885 = (($883) - ($884))|0;
     $886 = HEAP32[$877>>2]|0;
     $887 = $886 & -2;
     HEAP32[$877>>2] = $887;
     $888 = $885 | 1;
     $889 = ((($585)) + 4|0);
     HEAP32[$889>>2] = $888;
     HEAP32[$859>>2] = $885;
     $890 = $885 >>> 3;
     $891 = ($885>>>0)<(256);
     if ($891) {
      $892 = $890 << 1;
      $893 = (49396 + ($892<<2)|0);
      $894 = HEAP32[12339]|0;
      $895 = 1 << $890;
      $896 = $894 & $895;
      $897 = ($896|0)==(0);
      if ($897) {
       $898 = $894 | $895;
       HEAP32[12339] = $898;
       $$pre$i$i = ((($893)) + 8|0);
       $$0206$i$i = $893;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $899 = ((($893)) + 8|0);
       $900 = HEAP32[$899>>2]|0;
       $$0206$i$i = $900;$$pre$phi$i$iZ2D = $899;
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $585;
      $901 = ((($$0206$i$i)) + 12|0);
      HEAP32[$901>>2] = $585;
      $902 = ((($585)) + 8|0);
      HEAP32[$902>>2] = $$0206$i$i;
      $903 = ((($585)) + 12|0);
      HEAP32[$903>>2] = $893;
      break;
     }
     $904 = $885 >>> 8;
     $905 = ($904|0)==(0);
     if ($905) {
      $$0207$i$i = 0;
     } else {
      $906 = ($885>>>0)>(16777215);
      if ($906) {
       $$0207$i$i = 31;
      } else {
       $907 = (($904) + 1048320)|0;
       $908 = $907 >>> 16;
       $909 = $908 & 8;
       $910 = $904 << $909;
       $911 = (($910) + 520192)|0;
       $912 = $911 >>> 16;
       $913 = $912 & 4;
       $914 = $913 | $909;
       $915 = $910 << $913;
       $916 = (($915) + 245760)|0;
       $917 = $916 >>> 16;
       $918 = $917 & 2;
       $919 = $914 | $918;
       $920 = (14 - ($919))|0;
       $921 = $915 << $918;
       $922 = $921 >>> 15;
       $923 = (($920) + ($922))|0;
       $924 = $923 << 1;
       $925 = (($923) + 7)|0;
       $926 = $885 >>> $925;
       $927 = $926 & 1;
       $928 = $927 | $924;
       $$0207$i$i = $928;
      }
     }
     $929 = (49660 + ($$0207$i$i<<2)|0);
     $930 = ((($585)) + 28|0);
     HEAP32[$930>>2] = $$0207$i$i;
     $931 = ((($585)) + 20|0);
     HEAP32[$931>>2] = 0;
     HEAP32[$857>>2] = 0;
     $932 = HEAP32[(49360)>>2]|0;
     $933 = 1 << $$0207$i$i;
     $934 = $932 & $933;
     $935 = ($934|0)==(0);
     if ($935) {
      $936 = $932 | $933;
      HEAP32[(49360)>>2] = $936;
      HEAP32[$929>>2] = $585;
      $937 = ((($585)) + 24|0);
      HEAP32[$937>>2] = $929;
      $938 = ((($585)) + 12|0);
      HEAP32[$938>>2] = $585;
      $939 = ((($585)) + 8|0);
      HEAP32[$939>>2] = $585;
      break;
     }
     $940 = HEAP32[$929>>2]|0;
     $941 = ((($940)) + 4|0);
     $942 = HEAP32[$941>>2]|0;
     $943 = $942 & -8;
     $944 = ($943|0)==($885|0);
     L325: do {
      if ($944) {
       $$0202$lcssa$i$i = $940;
      } else {
       $945 = ($$0207$i$i|0)==(31);
       $946 = $$0207$i$i >>> 1;
       $947 = (25 - ($946))|0;
       $948 = $945 ? 0 : $947;
       $949 = $885 << $948;
       $$02014$i$i = $949;$$02023$i$i = $940;
       while(1) {
        $956 = $$02014$i$i >>> 31;
        $957 = (((($$02023$i$i)) + 16|0) + ($956<<2)|0);
        $952 = HEAP32[$957>>2]|0;
        $958 = ($952|0)==(0|0);
        if ($958) {
         break;
        }
        $950 = $$02014$i$i << 1;
        $951 = ((($952)) + 4|0);
        $953 = HEAP32[$951>>2]|0;
        $954 = $953 & -8;
        $955 = ($954|0)==($885|0);
        if ($955) {
         $$0202$lcssa$i$i = $952;
         break L325;
        } else {
         $$02014$i$i = $950;$$02023$i$i = $952;
        }
       }
       HEAP32[$957>>2] = $585;
       $959 = ((($585)) + 24|0);
       HEAP32[$959>>2] = $$02023$i$i;
       $960 = ((($585)) + 12|0);
       HEAP32[$960>>2] = $585;
       $961 = ((($585)) + 8|0);
       HEAP32[$961>>2] = $585;
       break L215;
      }
     } while(0);
     $962 = ((($$0202$lcssa$i$i)) + 8|0);
     $963 = HEAP32[$962>>2]|0;
     $964 = ((($963)) + 12|0);
     HEAP32[$964>>2] = $585;
     HEAP32[$962>>2] = $585;
     $965 = ((($585)) + 8|0);
     HEAP32[$965>>2] = $963;
     $966 = ((($585)) + 12|0);
     HEAP32[$966>>2] = $$0202$lcssa$i$i;
     $967 = ((($585)) + 24|0);
     HEAP32[$967>>2] = 0;
    }
   }
  } while(0);
  $969 = HEAP32[(49368)>>2]|0;
  $970 = ($969>>>0)>($$0192>>>0);
  if ($970) {
   $971 = (($969) - ($$0192))|0;
   HEAP32[(49368)>>2] = $971;
   $972 = HEAP32[(49380)>>2]|0;
   $973 = (($972) + ($$0192)|0);
   HEAP32[(49380)>>2] = $973;
   $974 = $971 | 1;
   $975 = ((($973)) + 4|0);
   HEAP32[$975>>2] = $974;
   $976 = $$0192 | 3;
   $977 = ((($972)) + 4|0);
   HEAP32[$977>>2] = $976;
   $978 = ((($972)) + 8|0);
   $$0 = $978;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $979 = (___errno_location()|0);
 HEAP32[$979>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0194$i = 0, $$0194$in$i = 0, $$0346381 = 0, $$0347$lcssa = 0, $$0347380 = 0, $$0359 = 0, $$0366 = 0, $$1 = 0, $$1345 = 0, $$1350 = 0, $$1350$be = 0, $$1350$ph = 0, $$1353 = 0, $$1353$be = 0, $$1353$ph = 0, $$1361 = 0, $$1361$be = 0, $$1361$ph = 0, $$1365 = 0, $$1365$be = 0;
 var $$1365$ph = 0, $$2 = 0, $$3 = 0, $$3363 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink395 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond371 = 0, $cond372 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(49372)>>2]|0;
 $4 = ((($0)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & -8;
 $7 = (($2) + ($6)|0);
 $8 = $5 & 1;
 $9 = ($8|0)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$2>>2]|0;
   $11 = $5 & 3;
   $12 = ($11|0)==(0);
   if ($12) {
    return;
   }
   $13 = (0 - ($10))|0;
   $14 = (($2) + ($13)|0);
   $15 = (($10) + ($6))|0;
   $16 = ($14>>>0)<($3>>>0);
   if ($16) {
    return;
   }
   $17 = HEAP32[(49376)>>2]|0;
   $18 = ($17|0)==($14|0);
   if ($18) {
    $79 = ((($7)) + 4|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = $80 & 3;
    $82 = ($81|0)==(3);
    if (!($82)) {
     $$1 = $14;$$1345 = $15;$88 = $14;
     break;
    }
    $83 = (($14) + ($15)|0);
    $84 = ((($14)) + 4|0);
    $85 = $15 | 1;
    $86 = $80 & -2;
    HEAP32[(49364)>>2] = $15;
    HEAP32[$79>>2] = $86;
    HEAP32[$84>>2] = $85;
    HEAP32[$83>>2] = $15;
    return;
   }
   $19 = $10 >>> 3;
   $20 = ($10>>>0)<(256);
   if ($20) {
    $21 = ((($14)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ((($14)) + 12|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)==($22|0);
    if ($25) {
     $26 = 1 << $19;
     $27 = $26 ^ -1;
     $28 = HEAP32[12339]|0;
     $29 = $28 & $27;
     HEAP32[12339] = $29;
     $$1 = $14;$$1345 = $15;$88 = $14;
     break;
    } else {
     $30 = ((($22)) + 12|0);
     HEAP32[$30>>2] = $24;
     $31 = ((($24)) + 8|0);
     HEAP32[$31>>2] = $22;
     $$1 = $14;$$1345 = $15;$88 = $14;
     break;
    }
   }
   $32 = ((($14)) + 24|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($14)) + 12|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($35|0)==($14|0);
   do {
    if ($36) {
     $41 = ((($14)) + 16|0);
     $42 = ((($41)) + 4|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = ($43|0)==(0|0);
     if ($44) {
      $45 = HEAP32[$41>>2]|0;
      $46 = ($45|0)==(0|0);
      if ($46) {
       $$3 = 0;
       break;
      } else {
       $$1350$ph = $45;$$1353$ph = $41;
      }
     } else {
      $$1350$ph = $43;$$1353$ph = $42;
     }
     $$1350 = $$1350$ph;$$1353 = $$1353$ph;
     while(1) {
      $47 = ((($$1350)) + 20|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = ($48|0)==(0|0);
      if ($49) {
       $50 = ((($$1350)) + 16|0);
       $51 = HEAP32[$50>>2]|0;
       $52 = ($51|0)==(0|0);
       if ($52) {
        break;
       } else {
        $$1350$be = $51;$$1353$be = $50;
       }
      } else {
       $$1350$be = $48;$$1353$be = $47;
      }
      $$1350 = $$1350$be;$$1353 = $$1353$be;
     }
     HEAP32[$$1353>>2] = 0;
     $$3 = $$1350;
    } else {
     $37 = ((($14)) + 8|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ((($38)) + 12|0);
     HEAP32[$39>>2] = $35;
     $40 = ((($35)) + 8|0);
     HEAP32[$40>>2] = $38;
     $$3 = $35;
    }
   } while(0);
   $53 = ($33|0)==(0|0);
   if ($53) {
    $$1 = $14;$$1345 = $15;$88 = $14;
   } else {
    $54 = ((($14)) + 28|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (49660 + ($55<<2)|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = ($57|0)==($14|0);
    if ($58) {
     HEAP32[$56>>2] = $$3;
     $cond371 = ($$3|0)==(0|0);
     if ($cond371) {
      $59 = 1 << $55;
      $60 = $59 ^ -1;
      $61 = HEAP32[(49360)>>2]|0;
      $62 = $61 & $60;
      HEAP32[(49360)>>2] = $62;
      $$1 = $14;$$1345 = $15;$88 = $14;
      break;
     }
    } else {
     $63 = ((($33)) + 16|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = ($64|0)==($14|0);
     $66 = ((($33)) + 20|0);
     $$sink = $65 ? $63 : $66;
     HEAP32[$$sink>>2] = $$3;
     $67 = ($$3|0)==(0|0);
     if ($67) {
      $$1 = $14;$$1345 = $15;$88 = $14;
      break;
     }
    }
    $68 = ((($$3)) + 24|0);
    HEAP32[$68>>2] = $33;
    $69 = ((($14)) + 16|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($70|0)==(0|0);
    if (!($71)) {
     $72 = ((($$3)) + 16|0);
     HEAP32[$72>>2] = $70;
     $73 = ((($70)) + 24|0);
     HEAP32[$73>>2] = $$3;
    }
    $74 = ((($69)) + 4|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = ($75|0)==(0|0);
    if ($76) {
     $$1 = $14;$$1345 = $15;$88 = $14;
    } else {
     $77 = ((($$3)) + 20|0);
     HEAP32[$77>>2] = $75;
     $78 = ((($75)) + 24|0);
     HEAP32[$78>>2] = $$3;
     $$1 = $14;$$1345 = $15;$88 = $14;
    }
   }
  } else {
   $$1 = $2;$$1345 = $6;$88 = $2;
  }
 } while(0);
 $87 = ($88>>>0)<($7>>>0);
 if (!($87)) {
  return;
 }
 $89 = ((($7)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $90 & 1;
 $92 = ($91|0)==(0);
 if ($92) {
  return;
 }
 $93 = $90 & 2;
 $94 = ($93|0)==(0);
 if ($94) {
  $95 = HEAP32[(49380)>>2]|0;
  $96 = ($95|0)==($7|0);
  if ($96) {
   $97 = HEAP32[(49368)>>2]|0;
   $98 = (($97) + ($$1345))|0;
   HEAP32[(49368)>>2] = $98;
   HEAP32[(49380)>>2] = $$1;
   $99 = $98 | 1;
   $100 = ((($$1)) + 4|0);
   HEAP32[$100>>2] = $99;
   $101 = HEAP32[(49376)>>2]|0;
   $102 = ($$1|0)==($101|0);
   if (!($102)) {
    return;
   }
   HEAP32[(49376)>>2] = 0;
   HEAP32[(49364)>>2] = 0;
   return;
  }
  $103 = HEAP32[(49376)>>2]|0;
  $104 = ($103|0)==($7|0);
  if ($104) {
   $105 = HEAP32[(49364)>>2]|0;
   $106 = (($105) + ($$1345))|0;
   HEAP32[(49364)>>2] = $106;
   HEAP32[(49376)>>2] = $88;
   $107 = $106 | 1;
   $108 = ((($$1)) + 4|0);
   HEAP32[$108>>2] = $107;
   $109 = (($88) + ($106)|0);
   HEAP32[$109>>2] = $106;
   return;
  }
  $110 = $90 & -8;
  $111 = (($110) + ($$1345))|0;
  $112 = $90 >>> 3;
  $113 = ($90>>>0)<(256);
  do {
   if ($113) {
    $114 = ((($7)) + 8|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ((($7)) + 12|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = ($117|0)==($115|0);
    if ($118) {
     $119 = 1 << $112;
     $120 = $119 ^ -1;
     $121 = HEAP32[12339]|0;
     $122 = $121 & $120;
     HEAP32[12339] = $122;
     break;
    } else {
     $123 = ((($115)) + 12|0);
     HEAP32[$123>>2] = $117;
     $124 = ((($117)) + 8|0);
     HEAP32[$124>>2] = $115;
     break;
    }
   } else {
    $125 = ((($7)) + 24|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ((($7)) + 12|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = ($128|0)==($7|0);
    do {
     if ($129) {
      $134 = ((($7)) + 16|0);
      $135 = ((($134)) + 4|0);
      $136 = HEAP32[$135>>2]|0;
      $137 = ($136|0)==(0|0);
      if ($137) {
       $138 = HEAP32[$134>>2]|0;
       $139 = ($138|0)==(0|0);
       if ($139) {
        $$3363 = 0;
        break;
       } else {
        $$1361$ph = $138;$$1365$ph = $134;
       }
      } else {
       $$1361$ph = $136;$$1365$ph = $135;
      }
      $$1361 = $$1361$ph;$$1365 = $$1365$ph;
      while(1) {
       $140 = ((($$1361)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $143 = ((($$1361)) + 16|0);
        $144 = HEAP32[$143>>2]|0;
        $145 = ($144|0)==(0|0);
        if ($145) {
         break;
        } else {
         $$1361$be = $144;$$1365$be = $143;
        }
       } else {
        $$1361$be = $141;$$1365$be = $140;
       }
       $$1361 = $$1361$be;$$1365 = $$1365$be;
      }
      HEAP32[$$1365>>2] = 0;
      $$3363 = $$1361;
     } else {
      $130 = ((($7)) + 8|0);
      $131 = HEAP32[$130>>2]|0;
      $132 = ((($131)) + 12|0);
      HEAP32[$132>>2] = $128;
      $133 = ((($128)) + 8|0);
      HEAP32[$133>>2] = $131;
      $$3363 = $128;
     }
    } while(0);
    $146 = ($126|0)==(0|0);
    if (!($146)) {
     $147 = ((($7)) + 28|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = (49660 + ($148<<2)|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($7|0);
     if ($151) {
      HEAP32[$149>>2] = $$3363;
      $cond372 = ($$3363|0)==(0|0);
      if ($cond372) {
       $152 = 1 << $148;
       $153 = $152 ^ -1;
       $154 = HEAP32[(49360)>>2]|0;
       $155 = $154 & $153;
       HEAP32[(49360)>>2] = $155;
       break;
      }
     } else {
      $156 = ((($126)) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($157|0)==($7|0);
      $159 = ((($126)) + 20|0);
      $$sink395 = $158 ? $156 : $159;
      HEAP32[$$sink395>>2] = $$3363;
      $160 = ($$3363|0)==(0|0);
      if ($160) {
       break;
      }
     }
     $161 = ((($$3363)) + 24|0);
     HEAP32[$161>>2] = $126;
     $162 = ((($7)) + 16|0);
     $163 = HEAP32[$162>>2]|0;
     $164 = ($163|0)==(0|0);
     if (!($164)) {
      $165 = ((($$3363)) + 16|0);
      HEAP32[$165>>2] = $163;
      $166 = ((($163)) + 24|0);
      HEAP32[$166>>2] = $$3363;
     }
     $167 = ((($162)) + 4|0);
     $168 = HEAP32[$167>>2]|0;
     $169 = ($168|0)==(0|0);
     if (!($169)) {
      $170 = ((($$3363)) + 20|0);
      HEAP32[$170>>2] = $168;
      $171 = ((($168)) + 24|0);
      HEAP32[$171>>2] = $$3363;
     }
    }
   }
  } while(0);
  $172 = $111 | 1;
  $173 = ((($$1)) + 4|0);
  HEAP32[$173>>2] = $172;
  $174 = (($88) + ($111)|0);
  HEAP32[$174>>2] = $111;
  $175 = HEAP32[(49376)>>2]|0;
  $176 = ($$1|0)==($175|0);
  if ($176) {
   HEAP32[(49364)>>2] = $111;
   return;
  } else {
   $$2 = $111;
  }
 } else {
  $177 = $90 & -2;
  HEAP32[$89>>2] = $177;
  $178 = $$1345 | 1;
  $179 = ((($$1)) + 4|0);
  HEAP32[$179>>2] = $178;
  $180 = (($88) + ($$1345)|0);
  HEAP32[$180>>2] = $$1345;
  $$2 = $$1345;
 }
 $181 = $$2 >>> 3;
 $182 = ($$2>>>0)<(256);
 if ($182) {
  $183 = $181 << 1;
  $184 = (49396 + ($183<<2)|0);
  $185 = HEAP32[12339]|0;
  $186 = 1 << $181;
  $187 = $185 & $186;
  $188 = ($187|0)==(0);
  if ($188) {
   $189 = $185 | $186;
   HEAP32[12339] = $189;
   $$pre = ((($184)) + 8|0);
   $$0366 = $184;$$pre$phiZ2D = $$pre;
  } else {
   $190 = ((($184)) + 8|0);
   $191 = HEAP32[$190>>2]|0;
   $$0366 = $191;$$pre$phiZ2D = $190;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $192 = ((($$0366)) + 12|0);
  HEAP32[$192>>2] = $$1;
  $193 = ((($$1)) + 8|0);
  HEAP32[$193>>2] = $$0366;
  $194 = ((($$1)) + 12|0);
  HEAP32[$194>>2] = $184;
  return;
 }
 $195 = $$2 >>> 8;
 $196 = ($195|0)==(0);
 if ($196) {
  $$0359 = 0;
 } else {
  $197 = ($$2>>>0)>(16777215);
  if ($197) {
   $$0359 = 31;
  } else {
   $198 = (($195) + 1048320)|0;
   $199 = $198 >>> 16;
   $200 = $199 & 8;
   $201 = $195 << $200;
   $202 = (($201) + 520192)|0;
   $203 = $202 >>> 16;
   $204 = $203 & 4;
   $205 = $204 | $200;
   $206 = $201 << $204;
   $207 = (($206) + 245760)|0;
   $208 = $207 >>> 16;
   $209 = $208 & 2;
   $210 = $205 | $209;
   $211 = (14 - ($210))|0;
   $212 = $206 << $209;
   $213 = $212 >>> 15;
   $214 = (($211) + ($213))|0;
   $215 = $214 << 1;
   $216 = (($214) + 7)|0;
   $217 = $$2 >>> $216;
   $218 = $217 & 1;
   $219 = $218 | $215;
   $$0359 = $219;
  }
 }
 $220 = (49660 + ($$0359<<2)|0);
 $221 = ((($$1)) + 28|0);
 HEAP32[$221>>2] = $$0359;
 $222 = ((($$1)) + 16|0);
 $223 = ((($$1)) + 20|0);
 HEAP32[$223>>2] = 0;
 HEAP32[$222>>2] = 0;
 $224 = HEAP32[(49360)>>2]|0;
 $225 = 1 << $$0359;
 $226 = $224 & $225;
 $227 = ($226|0)==(0);
 L112: do {
  if ($227) {
   $228 = $224 | $225;
   HEAP32[(49360)>>2] = $228;
   HEAP32[$220>>2] = $$1;
   $229 = ((($$1)) + 24|0);
   HEAP32[$229>>2] = $220;
   $230 = ((($$1)) + 12|0);
   HEAP32[$230>>2] = $$1;
   $231 = ((($$1)) + 8|0);
   HEAP32[$231>>2] = $$1;
  } else {
   $232 = HEAP32[$220>>2]|0;
   $233 = ((($232)) + 4|0);
   $234 = HEAP32[$233>>2]|0;
   $235 = $234 & -8;
   $236 = ($235|0)==($$2|0);
   L115: do {
    if ($236) {
     $$0347$lcssa = $232;
    } else {
     $237 = ($$0359|0)==(31);
     $238 = $$0359 >>> 1;
     $239 = (25 - ($238))|0;
     $240 = $237 ? 0 : $239;
     $241 = $$2 << $240;
     $$0346381 = $241;$$0347380 = $232;
     while(1) {
      $248 = $$0346381 >>> 31;
      $249 = (((($$0347380)) + 16|0) + ($248<<2)|0);
      $244 = HEAP32[$249>>2]|0;
      $250 = ($244|0)==(0|0);
      if ($250) {
       break;
      }
      $242 = $$0346381 << 1;
      $243 = ((($244)) + 4|0);
      $245 = HEAP32[$243>>2]|0;
      $246 = $245 & -8;
      $247 = ($246|0)==($$2|0);
      if ($247) {
       $$0347$lcssa = $244;
       break L115;
      } else {
       $$0346381 = $242;$$0347380 = $244;
      }
     }
     HEAP32[$249>>2] = $$1;
     $251 = ((($$1)) + 24|0);
     HEAP32[$251>>2] = $$0347380;
     $252 = ((($$1)) + 12|0);
     HEAP32[$252>>2] = $$1;
     $253 = ((($$1)) + 8|0);
     HEAP32[$253>>2] = $$1;
     break L112;
    }
   } while(0);
   $254 = ((($$0347$lcssa)) + 8|0);
   $255 = HEAP32[$254>>2]|0;
   $256 = ((($255)) + 12|0);
   HEAP32[$256>>2] = $$1;
   HEAP32[$254>>2] = $$1;
   $257 = ((($$1)) + 8|0);
   HEAP32[$257>>2] = $255;
   $258 = ((($$1)) + 12|0);
   HEAP32[$258>>2] = $$0347$lcssa;
   $259 = ((($$1)) + 24|0);
   HEAP32[$259>>2] = 0;
  }
 } while(0);
 $260 = HEAP32[(49388)>>2]|0;
 $261 = (($260) + -1)|0;
 HEAP32[(49388)>>2] = $261;
 $262 = ($261|0)==(0);
 if (!($262)) {
  return;
 }
 $$0194$in$i = (49812);
 while(1) {
  $$0194$i = HEAP32[$$0194$in$i>>2]|0;
  $263 = ($$0194$i|0)==(0|0);
  $264 = ((($$0194$i)) + 8|0);
  if ($263) {
   break;
  } else {
   $$0194$in$i = $264;
  }
 }
 HEAP32[(49388)>>2] = -1;
 return;
}
function _calloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = Math_imul($1, $0)|0;
  $4 = $1 | $0;
  $5 = ($4>>>0)>(65535);
  if ($5) {
   $6 = (($3>>>0) / ($0>>>0))&-1;
   $7 = ($6|0)==($1|0);
   $spec$select = $7 ? $3 : -1;
   $$0 = $spec$select;
  } else {
   $$0 = $3;
  }
 }
 $8 = (_malloc($$0)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  return ($8|0);
 }
 $10 = ((($8)) + -4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 & 3;
 $13 = ($12|0)==(0);
 if ($13) {
  return ($8|0);
 }
 (_memset(($8|0),0,($$0|0))|0);
 return ($8|0);
}
function _realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = (_malloc($1)|0);
  $$1 = $3;
  return ($$1|0);
 }
 $4 = ($1>>>0)>(4294967231);
 if ($4) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 12;
  $$1 = 0;
  return ($$1|0);
 }
 $6 = ($1>>>0)<(11);
 $7 = (($1) + 11)|0;
 $8 = $7 & -8;
 $9 = $6 ? 16 : $8;
 $10 = ((($0)) + -8|0);
 $11 = (_try_realloc_chunk($10,$9)|0);
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = ((($11)) + 8|0);
  $$1 = $13;
  return ($$1|0);
 }
 $14 = (_malloc($1)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$1 = 0;
  return ($$1|0);
 }
 $16 = ((($0)) + -4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $17 & -8;
 $19 = $17 & 3;
 $20 = ($19|0)==(0);
 $21 = $20 ? 8 : 4;
 $22 = (($18) - ($21))|0;
 $23 = ($22>>>0)<($1>>>0);
 $24 = $23 ? $22 : $1;
 (_memcpy(($14|0),($0|0),($24|0))|0);
 _free($0);
 $$1 = $14;
 return ($$1|0);
}
function _try_realloc_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1245 = 0, $$1245$be = 0, $$1245$ph = 0, $$1248 = 0, $$1248$be = 0, $$1248$ph = 0, $$2 = 0, $$3 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $storemerge = 0, $storemerge1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & -8;
 $5 = (($0) + ($4)|0);
 $6 = $3 & 3;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ($1>>>0)<(256);
  if ($8) {
   $$2 = 0;
   return ($$2|0);
  }
  $9 = (($1) + 4)|0;
  $10 = ($4>>>0)<($9>>>0);
  if (!($10)) {
   $11 = (($4) - ($1))|0;
   $12 = HEAP32[(49836)>>2]|0;
   $13 = $12 << 1;
   $14 = ($11>>>0)>($13>>>0);
   if (!($14)) {
    $$2 = $0;
    return ($$2|0);
   }
  }
  $$2 = 0;
  return ($$2|0);
 }
 $15 = ($4>>>0)<($1>>>0);
 if (!($15)) {
  $16 = (($4) - ($1))|0;
  $17 = ($16>>>0)>(15);
  if (!($17)) {
   $$2 = $0;
   return ($$2|0);
  }
  $18 = (($0) + ($1)|0);
  $19 = $3 & 1;
  $20 = $19 | $1;
  $21 = $20 | 2;
  HEAP32[$2>>2] = $21;
  $22 = ((($18)) + 4|0);
  $23 = $16 | 3;
  HEAP32[$22>>2] = $23;
  $24 = ((($5)) + 4|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = $25 | 1;
  HEAP32[$24>>2] = $26;
  _dispose_chunk($18,$16);
  $$2 = $0;
  return ($$2|0);
 }
 $27 = HEAP32[(49380)>>2]|0;
 $28 = ($27|0)==($5|0);
 if ($28) {
  $29 = HEAP32[(49368)>>2]|0;
  $30 = (($29) + ($4))|0;
  $31 = ($30>>>0)>($1>>>0);
  $32 = (($30) - ($1))|0;
  $33 = (($0) + ($1)|0);
  if (!($31)) {
   $$2 = 0;
   return ($$2|0);
  }
  $34 = $32 | 1;
  $35 = ((($33)) + 4|0);
  $36 = $3 & 1;
  $37 = $36 | $1;
  $38 = $37 | 2;
  HEAP32[$2>>2] = $38;
  HEAP32[$35>>2] = $34;
  HEAP32[(49380)>>2] = $33;
  HEAP32[(49368)>>2] = $32;
  $$2 = $0;
  return ($$2|0);
 }
 $39 = HEAP32[(49376)>>2]|0;
 $40 = ($39|0)==($5|0);
 if ($40) {
  $41 = HEAP32[(49364)>>2]|0;
  $42 = (($41) + ($4))|0;
  $43 = ($42>>>0)<($1>>>0);
  if ($43) {
   $$2 = 0;
   return ($$2|0);
  }
  $44 = (($42) - ($1))|0;
  $45 = ($44>>>0)>(15);
  if ($45) {
   $46 = (($0) + ($1)|0);
   $47 = (($0) + ($42)|0);
   $48 = $3 & 1;
   $49 = $48 | $1;
   $50 = $49 | 2;
   HEAP32[$2>>2] = $50;
   $51 = ((($46)) + 4|0);
   $52 = $44 | 1;
   HEAP32[$51>>2] = $52;
   HEAP32[$47>>2] = $44;
   $53 = ((($47)) + 4|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = $54 & -2;
   HEAP32[$53>>2] = $55;
   $storemerge = $46;$storemerge1 = $44;
  } else {
   $56 = $3 & 1;
   $57 = $56 | $42;
   $58 = $57 | 2;
   HEAP32[$2>>2] = $58;
   $59 = (($0) + ($42)|0);
   $60 = ((($59)) + 4|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 | 1;
   HEAP32[$60>>2] = $62;
   $storemerge = 0;$storemerge1 = 0;
  }
  HEAP32[(49364)>>2] = $storemerge1;
  HEAP32[(49376)>>2] = $storemerge;
  $$2 = $0;
  return ($$2|0);
 }
 $63 = ((($5)) + 4|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = $64 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $$2 = 0;
  return ($$2|0);
 }
 $67 = $64 & -8;
 $68 = (($67) + ($4))|0;
 $69 = ($68>>>0)<($1>>>0);
 if ($69) {
  $$2 = 0;
  return ($$2|0);
 }
 $70 = (($68) - ($1))|0;
 $71 = $64 >>> 3;
 $72 = ($64>>>0)<(256);
 do {
  if ($72) {
   $73 = ((($5)) + 8|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ((($5)) + 12|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = ($76|0)==($74|0);
   if ($77) {
    $78 = 1 << $71;
    $79 = $78 ^ -1;
    $80 = HEAP32[12339]|0;
    $81 = $80 & $79;
    HEAP32[12339] = $81;
    break;
   } else {
    $82 = ((($74)) + 12|0);
    HEAP32[$82>>2] = $76;
    $83 = ((($76)) + 8|0);
    HEAP32[$83>>2] = $74;
    break;
   }
  } else {
   $84 = ((($5)) + 24|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = ((($5)) + 12|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = ($87|0)==($5|0);
   do {
    if ($88) {
     $93 = ((($5)) + 16|0);
     $94 = ((($93)) + 4|0);
     $95 = HEAP32[$94>>2]|0;
     $96 = ($95|0)==(0|0);
     if ($96) {
      $97 = HEAP32[$93>>2]|0;
      $98 = ($97|0)==(0|0);
      if ($98) {
       $$3 = 0;
       break;
      } else {
       $$1245$ph = $97;$$1248$ph = $93;
      }
     } else {
      $$1245$ph = $95;$$1248$ph = $94;
     }
     $$1245 = $$1245$ph;$$1248 = $$1248$ph;
     while(1) {
      $99 = ((($$1245)) + 20|0);
      $100 = HEAP32[$99>>2]|0;
      $101 = ($100|0)==(0|0);
      if ($101) {
       $102 = ((($$1245)) + 16|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ($103|0)==(0|0);
       if ($104) {
        break;
       } else {
        $$1245$be = $103;$$1248$be = $102;
       }
      } else {
       $$1245$be = $100;$$1248$be = $99;
      }
      $$1245 = $$1245$be;$$1248 = $$1248$be;
     }
     HEAP32[$$1248>>2] = 0;
     $$3 = $$1245;
    } else {
     $89 = ((($5)) + 8|0);
     $90 = HEAP32[$89>>2]|0;
     $91 = ((($90)) + 12|0);
     HEAP32[$91>>2] = $87;
     $92 = ((($87)) + 8|0);
     HEAP32[$92>>2] = $90;
     $$3 = $87;
    }
   } while(0);
   $105 = ($85|0)==(0|0);
   if (!($105)) {
    $106 = ((($5)) + 28|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = (49660 + ($107<<2)|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = ($109|0)==($5|0);
    if ($110) {
     HEAP32[$108>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $111 = 1 << $107;
      $112 = $111 ^ -1;
      $113 = HEAP32[(49360)>>2]|0;
      $114 = $113 & $112;
      HEAP32[(49360)>>2] = $114;
      break;
     }
    } else {
     $115 = ((($85)) + 16|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ($116|0)==($5|0);
     $118 = ((($85)) + 20|0);
     $$sink = $117 ? $115 : $118;
     HEAP32[$$sink>>2] = $$3;
     $119 = ($$3|0)==(0|0);
     if ($119) {
      break;
     }
    }
    $120 = ((($$3)) + 24|0);
    HEAP32[$120>>2] = $85;
    $121 = ((($5)) + 16|0);
    $122 = HEAP32[$121>>2]|0;
    $123 = ($122|0)==(0|0);
    if (!($123)) {
     $124 = ((($$3)) + 16|0);
     HEAP32[$124>>2] = $122;
     $125 = ((($122)) + 24|0);
     HEAP32[$125>>2] = $$3;
    }
    $126 = ((($121)) + 4|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = ($127|0)==(0|0);
    if (!($128)) {
     $129 = ((($$3)) + 20|0);
     HEAP32[$129>>2] = $127;
     $130 = ((($127)) + 24|0);
     HEAP32[$130>>2] = $$3;
    }
   }
  }
 } while(0);
 $131 = ($70>>>0)<(16);
 if ($131) {
  $132 = $3 & 1;
  $133 = $132 | $68;
  $134 = $133 | 2;
  HEAP32[$2>>2] = $134;
  $135 = (($0) + ($68)|0);
  $136 = ((($135)) + 4|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = $137 | 1;
  HEAP32[$136>>2] = $138;
  $$2 = $0;
  return ($$2|0);
 } else {
  $139 = (($0) + ($1)|0);
  $140 = $3 & 1;
  $141 = $140 | $1;
  $142 = $141 | 2;
  HEAP32[$2>>2] = $142;
  $143 = ((($139)) + 4|0);
  $144 = $70 | 3;
  HEAP32[$143>>2] = $144;
  $145 = (($0) + ($68)|0);
  $146 = ((($145)) + 4|0);
  $147 = HEAP32[$146>>2]|0;
  $148 = $147 | 1;
  HEAP32[$146>>2] = $148;
  _dispose_chunk($139,$70);
  $$2 = $0;
  return ($$2|0);
 }
 return (0)|0;
}
function _dispose_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$03649 = 0, $$0365$lcssa = 0, $$03658 = 0, $$0376 = 0, $$0383 = 0, $$1 = 0, $$1363 = 0, $$1371 = 0, $$1371$be = 0, $$1371$ph = 0, $$1374 = 0, $$1374$be = 0, $$1374$ph = 0, $$1378 = 0, $$1378$be = 0, $$1378$ph = 0, $$1382 = 0, $$1382$be = 0, $$1382$ph = 0, $$2 = 0;
 var $$3 = 0, $$3380 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink24 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($0) + ($1)|0);
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 do {
  if ($6) {
   $7 = HEAP32[$0>>2]|0;
   $8 = $4 & 3;
   $9 = ($8|0)==(0);
   if ($9) {
    return;
   }
   $10 = (0 - ($7))|0;
   $11 = (($0) + ($10)|0);
   $12 = (($7) + ($1))|0;
   $13 = HEAP32[(49376)>>2]|0;
   $14 = ($13|0)==($11|0);
   if ($14) {
    $75 = ((($2)) + 4|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = $76 & 3;
    $78 = ($77|0)==(3);
    if (!($78)) {
     $$1 = $11;$$1363 = $12;
     break;
    }
    $79 = ((($11)) + 4|0);
    $80 = $12 | 1;
    $81 = $76 & -2;
    HEAP32[(49364)>>2] = $12;
    HEAP32[$75>>2] = $81;
    HEAP32[$79>>2] = $80;
    HEAP32[$2>>2] = $12;
    return;
   }
   $15 = $7 >>> 3;
   $16 = ($7>>>0)<(256);
   if ($16) {
    $17 = ((($11)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($11)) + 12|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($18|0);
    if ($21) {
     $22 = 1 << $15;
     $23 = $22 ^ -1;
     $24 = HEAP32[12339]|0;
     $25 = $24 & $23;
     HEAP32[12339] = $25;
     $$1 = $11;$$1363 = $12;
     break;
    } else {
     $26 = ((($18)) + 12|0);
     HEAP32[$26>>2] = $20;
     $27 = ((($20)) + 8|0);
     HEAP32[$27>>2] = $18;
     $$1 = $11;$$1363 = $12;
     break;
    }
   }
   $28 = ((($11)) + 24|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ((($11)) + 12|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ($31|0)==($11|0);
   do {
    if ($32) {
     $37 = ((($11)) + 16|0);
     $38 = ((($37)) + 4|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ($39|0)==(0|0);
     if ($40) {
      $41 = HEAP32[$37>>2]|0;
      $42 = ($41|0)==(0|0);
      if ($42) {
       $$3 = 0;
       break;
      } else {
       $$1371$ph = $41;$$1374$ph = $37;
      }
     } else {
      $$1371$ph = $39;$$1374$ph = $38;
     }
     $$1371 = $$1371$ph;$$1374 = $$1374$ph;
     while(1) {
      $43 = ((($$1371)) + 20|0);
      $44 = HEAP32[$43>>2]|0;
      $45 = ($44|0)==(0|0);
      if ($45) {
       $46 = ((($$1371)) + 16|0);
       $47 = HEAP32[$46>>2]|0;
       $48 = ($47|0)==(0|0);
       if ($48) {
        break;
       } else {
        $$1371$be = $47;$$1374$be = $46;
       }
      } else {
       $$1371$be = $44;$$1374$be = $43;
      }
      $$1371 = $$1371$be;$$1374 = $$1374$be;
     }
     HEAP32[$$1374>>2] = 0;
     $$3 = $$1371;
    } else {
     $33 = ((($11)) + 8|0);
     $34 = HEAP32[$33>>2]|0;
     $35 = ((($34)) + 12|0);
     HEAP32[$35>>2] = $31;
     $36 = ((($31)) + 8|0);
     HEAP32[$36>>2] = $34;
     $$3 = $31;
    }
   } while(0);
   $49 = ($29|0)==(0|0);
   if ($49) {
    $$1 = $11;$$1363 = $12;
   } else {
    $50 = ((($11)) + 28|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (49660 + ($51<<2)|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($53|0)==($11|0);
    if ($54) {
     HEAP32[$52>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $55 = 1 << $51;
      $56 = $55 ^ -1;
      $57 = HEAP32[(49360)>>2]|0;
      $58 = $57 & $56;
      HEAP32[(49360)>>2] = $58;
      $$1 = $11;$$1363 = $12;
      break;
     }
    } else {
     $59 = ((($29)) + 16|0);
     $60 = HEAP32[$59>>2]|0;
     $61 = ($60|0)==($11|0);
     $62 = ((($29)) + 20|0);
     $$sink = $61 ? $59 : $62;
     HEAP32[$$sink>>2] = $$3;
     $63 = ($$3|0)==(0|0);
     if ($63) {
      $$1 = $11;$$1363 = $12;
      break;
     }
    }
    $64 = ((($$3)) + 24|0);
    HEAP32[$64>>2] = $29;
    $65 = ((($11)) + 16|0);
    $66 = HEAP32[$65>>2]|0;
    $67 = ($66|0)==(0|0);
    if (!($67)) {
     $68 = ((($$3)) + 16|0);
     HEAP32[$68>>2] = $66;
     $69 = ((($66)) + 24|0);
     HEAP32[$69>>2] = $$3;
    }
    $70 = ((($65)) + 4|0);
    $71 = HEAP32[$70>>2]|0;
    $72 = ($71|0)==(0|0);
    if ($72) {
     $$1 = $11;$$1363 = $12;
    } else {
     $73 = ((($$3)) + 20|0);
     HEAP32[$73>>2] = $71;
     $74 = ((($71)) + 24|0);
     HEAP32[$74>>2] = $$3;
     $$1 = $11;$$1363 = $12;
    }
   }
  } else {
   $$1 = $0;$$1363 = $1;
  }
 } while(0);
 $82 = ((($2)) + 4|0);
 $83 = HEAP32[$82>>2]|0;
 $84 = $83 & 2;
 $85 = ($84|0)==(0);
 if ($85) {
  $86 = HEAP32[(49380)>>2]|0;
  $87 = ($86|0)==($2|0);
  if ($87) {
   $88 = HEAP32[(49368)>>2]|0;
   $89 = (($88) + ($$1363))|0;
   HEAP32[(49368)>>2] = $89;
   HEAP32[(49380)>>2] = $$1;
   $90 = $89 | 1;
   $91 = ((($$1)) + 4|0);
   HEAP32[$91>>2] = $90;
   $92 = HEAP32[(49376)>>2]|0;
   $93 = ($$1|0)==($92|0);
   if (!($93)) {
    return;
   }
   HEAP32[(49376)>>2] = 0;
   HEAP32[(49364)>>2] = 0;
   return;
  }
  $94 = HEAP32[(49376)>>2]|0;
  $95 = ($94|0)==($2|0);
  if ($95) {
   $96 = HEAP32[(49364)>>2]|0;
   $97 = (($96) + ($$1363))|0;
   HEAP32[(49364)>>2] = $97;
   HEAP32[(49376)>>2] = $$1;
   $98 = $97 | 1;
   $99 = ((($$1)) + 4|0);
   HEAP32[$99>>2] = $98;
   $100 = (($$1) + ($97)|0);
   HEAP32[$100>>2] = $97;
   return;
  }
  $101 = $83 & -8;
  $102 = (($101) + ($$1363))|0;
  $103 = $83 >>> 3;
  $104 = ($83>>>0)<(256);
  do {
   if ($104) {
    $105 = ((($2)) + 8|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = ((($2)) + 12|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = ($108|0)==($106|0);
    if ($109) {
     $110 = 1 << $103;
     $111 = $110 ^ -1;
     $112 = HEAP32[12339]|0;
     $113 = $112 & $111;
     HEAP32[12339] = $113;
     break;
    } else {
     $114 = ((($106)) + 12|0);
     HEAP32[$114>>2] = $108;
     $115 = ((($108)) + 8|0);
     HEAP32[$115>>2] = $106;
     break;
    }
   } else {
    $116 = ((($2)) + 24|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = ((($2)) + 12|0);
    $119 = HEAP32[$118>>2]|0;
    $120 = ($119|0)==($2|0);
    do {
     if ($120) {
      $125 = ((($2)) + 16|0);
      $126 = ((($125)) + 4|0);
      $127 = HEAP32[$126>>2]|0;
      $128 = ($127|0)==(0|0);
      if ($128) {
       $129 = HEAP32[$125>>2]|0;
       $130 = ($129|0)==(0|0);
       if ($130) {
        $$3380 = 0;
        break;
       } else {
        $$1378$ph = $129;$$1382$ph = $125;
       }
      } else {
       $$1378$ph = $127;$$1382$ph = $126;
      }
      $$1378 = $$1378$ph;$$1382 = $$1382$ph;
      while(1) {
       $131 = ((($$1378)) + 20|0);
       $132 = HEAP32[$131>>2]|0;
       $133 = ($132|0)==(0|0);
       if ($133) {
        $134 = ((($$1378)) + 16|0);
        $135 = HEAP32[$134>>2]|0;
        $136 = ($135|0)==(0|0);
        if ($136) {
         break;
        } else {
         $$1378$be = $135;$$1382$be = $134;
        }
       } else {
        $$1378$be = $132;$$1382$be = $131;
       }
       $$1378 = $$1378$be;$$1382 = $$1382$be;
      }
      HEAP32[$$1382>>2] = 0;
      $$3380 = $$1378;
     } else {
      $121 = ((($2)) + 8|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = ((($122)) + 12|0);
      HEAP32[$123>>2] = $119;
      $124 = ((($119)) + 8|0);
      HEAP32[$124>>2] = $122;
      $$3380 = $119;
     }
    } while(0);
    $137 = ($117|0)==(0|0);
    if (!($137)) {
     $138 = ((($2)) + 28|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = (49660 + ($139<<2)|0);
     $141 = HEAP32[$140>>2]|0;
     $142 = ($141|0)==($2|0);
     if ($142) {
      HEAP32[$140>>2] = $$3380;
      $cond4 = ($$3380|0)==(0|0);
      if ($cond4) {
       $143 = 1 << $139;
       $144 = $143 ^ -1;
       $145 = HEAP32[(49360)>>2]|0;
       $146 = $145 & $144;
       HEAP32[(49360)>>2] = $146;
       break;
      }
     } else {
      $147 = ((($117)) + 16|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = ($148|0)==($2|0);
      $150 = ((($117)) + 20|0);
      $$sink24 = $149 ? $147 : $150;
      HEAP32[$$sink24>>2] = $$3380;
      $151 = ($$3380|0)==(0|0);
      if ($151) {
       break;
      }
     }
     $152 = ((($$3380)) + 24|0);
     HEAP32[$152>>2] = $117;
     $153 = ((($2)) + 16|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ($154|0)==(0|0);
     if (!($155)) {
      $156 = ((($$3380)) + 16|0);
      HEAP32[$156>>2] = $154;
      $157 = ((($154)) + 24|0);
      HEAP32[$157>>2] = $$3380;
     }
     $158 = ((($153)) + 4|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ($159|0)==(0|0);
     if (!($160)) {
      $161 = ((($$3380)) + 20|0);
      HEAP32[$161>>2] = $159;
      $162 = ((($159)) + 24|0);
      HEAP32[$162>>2] = $$3380;
     }
    }
   }
  } while(0);
  $163 = $102 | 1;
  $164 = ((($$1)) + 4|0);
  HEAP32[$164>>2] = $163;
  $165 = (($$1) + ($102)|0);
  HEAP32[$165>>2] = $102;
  $166 = HEAP32[(49376)>>2]|0;
  $167 = ($$1|0)==($166|0);
  if ($167) {
   HEAP32[(49364)>>2] = $102;
   return;
  } else {
   $$2 = $102;
  }
 } else {
  $168 = $83 & -2;
  HEAP32[$82>>2] = $168;
  $169 = $$1363 | 1;
  $170 = ((($$1)) + 4|0);
  HEAP32[$170>>2] = $169;
  $171 = (($$1) + ($$1363)|0);
  HEAP32[$171>>2] = $$1363;
  $$2 = $$1363;
 }
 $172 = $$2 >>> 3;
 $173 = ($$2>>>0)<(256);
 if ($173) {
  $174 = $172 << 1;
  $175 = (49396 + ($174<<2)|0);
  $176 = HEAP32[12339]|0;
  $177 = 1 << $172;
  $178 = $176 & $177;
  $179 = ($178|0)==(0);
  if ($179) {
   $180 = $176 | $177;
   HEAP32[12339] = $180;
   $$pre = ((($175)) + 8|0);
   $$0383 = $175;$$pre$phiZ2D = $$pre;
  } else {
   $181 = ((($175)) + 8|0);
   $182 = HEAP32[$181>>2]|0;
   $$0383 = $182;$$pre$phiZ2D = $181;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $183 = ((($$0383)) + 12|0);
  HEAP32[$183>>2] = $$1;
  $184 = ((($$1)) + 8|0);
  HEAP32[$184>>2] = $$0383;
  $185 = ((($$1)) + 12|0);
  HEAP32[$185>>2] = $175;
  return;
 }
 $186 = $$2 >>> 8;
 $187 = ($186|0)==(0);
 if ($187) {
  $$0376 = 0;
 } else {
  $188 = ($$2>>>0)>(16777215);
  if ($188) {
   $$0376 = 31;
  } else {
   $189 = (($186) + 1048320)|0;
   $190 = $189 >>> 16;
   $191 = $190 & 8;
   $192 = $186 << $191;
   $193 = (($192) + 520192)|0;
   $194 = $193 >>> 16;
   $195 = $194 & 4;
   $196 = $195 | $191;
   $197 = $192 << $195;
   $198 = (($197) + 245760)|0;
   $199 = $198 >>> 16;
   $200 = $199 & 2;
   $201 = $196 | $200;
   $202 = (14 - ($201))|0;
   $203 = $197 << $200;
   $204 = $203 >>> 15;
   $205 = (($202) + ($204))|0;
   $206 = $205 << 1;
   $207 = (($205) + 7)|0;
   $208 = $$2 >>> $207;
   $209 = $208 & 1;
   $210 = $209 | $206;
   $$0376 = $210;
  }
 }
 $211 = (49660 + ($$0376<<2)|0);
 $212 = ((($$1)) + 28|0);
 HEAP32[$212>>2] = $$0376;
 $213 = ((($$1)) + 16|0);
 $214 = ((($$1)) + 20|0);
 HEAP32[$214>>2] = 0;
 HEAP32[$213>>2] = 0;
 $215 = HEAP32[(49360)>>2]|0;
 $216 = 1 << $$0376;
 $217 = $215 & $216;
 $218 = ($217|0)==(0);
 if ($218) {
  $219 = $215 | $216;
  HEAP32[(49360)>>2] = $219;
  HEAP32[$211>>2] = $$1;
  $220 = ((($$1)) + 24|0);
  HEAP32[$220>>2] = $211;
  $221 = ((($$1)) + 12|0);
  HEAP32[$221>>2] = $$1;
  $222 = ((($$1)) + 8|0);
  HEAP32[$222>>2] = $$1;
  return;
 }
 $223 = HEAP32[$211>>2]|0;
 $224 = ((($223)) + 4|0);
 $225 = HEAP32[$224>>2]|0;
 $226 = $225 & -8;
 $227 = ($226|0)==($$2|0);
 L104: do {
  if ($227) {
   $$0365$lcssa = $223;
  } else {
   $228 = ($$0376|0)==(31);
   $229 = $$0376 >>> 1;
   $230 = (25 - ($229))|0;
   $231 = $228 ? 0 : $230;
   $232 = $$2 << $231;
   $$03649 = $232;$$03658 = $223;
   while(1) {
    $239 = $$03649 >>> 31;
    $240 = (((($$03658)) + 16|0) + ($239<<2)|0);
    $235 = HEAP32[$240>>2]|0;
    $241 = ($235|0)==(0|0);
    if ($241) {
     break;
    }
    $233 = $$03649 << 1;
    $234 = ((($235)) + 4|0);
    $236 = HEAP32[$234>>2]|0;
    $237 = $236 & -8;
    $238 = ($237|0)==($$2|0);
    if ($238) {
     $$0365$lcssa = $235;
     break L104;
    } else {
     $$03649 = $233;$$03658 = $235;
    }
   }
   HEAP32[$240>>2] = $$1;
   $242 = ((($$1)) + 24|0);
   HEAP32[$242>>2] = $$03658;
   $243 = ((($$1)) + 12|0);
   HEAP32[$243>>2] = $$1;
   $244 = ((($$1)) + 8|0);
   HEAP32[$244>>2] = $$1;
   return;
  }
 } while(0);
 $245 = ((($$0365$lcssa)) + 8|0);
 $246 = HEAP32[$245>>2]|0;
 $247 = ((($246)) + 12|0);
 HEAP32[$247>>2] = $$1;
 HEAP32[$245>>2] = $$1;
 $248 = ((($$1)) + 8|0);
 HEAP32[$248>>2] = $246;
 $249 = ((($$1)) + 12|0);
 HEAP32[$249>>2] = $$0365$lcssa;
 $250 = ((($$1)) + 24|0);
 HEAP32[$250>>2] = 0;
 return;
}
function ___stdio_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $1 = ((($0)) + 60|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (_dummy($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 $4 = (___syscall6(6,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function ___stdio_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer3 = sp + 32|0;
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) - ($5))|0;
 HEAP32[$6>>2] = $9;
 $10 = ((($3)) + 8|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($3)) + 12|0);
 HEAP32[$11>>2] = $2;
 $12 = (($9) + ($2))|0;
 $13 = ((($0)) + 60|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 HEAP32[$vararg_buffer>>2] = $14;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $15;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $16 = (___syscall146(146,($vararg_buffer|0))|0);
 $17 = (___syscall_ret($16)|0);
 $18 = ($12|0)==($17|0);
 L1: do {
  if ($18) {
   label = 3;
  } else {
   $$04756 = 2;$$04855 = $12;$$04954 = $3;$27 = $17;
   while(1) {
    $26 = ($27|0)<(0);
    if ($26) {
     break;
    }
    $35 = (($$04855) - ($27))|0;
    $36 = ((($$04954)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($27>>>0)>($37>>>0);
    $39 = ((($$04954)) + 8|0);
    $$150 = $38 ? $39 : $$04954;
    $40 = $38 << 31 >> 31;
    $$1 = (($$04756) + ($40))|0;
    $41 = $38 ? $37 : 0;
    $$0 = (($27) - ($41))|0;
    $42 = HEAP32[$$150>>2]|0;
    $43 = (($42) + ($$0)|0);
    HEAP32[$$150>>2] = $43;
    $44 = ((($$150)) + 4|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (($45) - ($$0))|0;
    HEAP32[$44>>2] = $46;
    $47 = HEAP32[$13>>2]|0;
    $48 = $$150;
    HEAP32[$vararg_buffer3>>2] = $47;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $48;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $$1;
    $49 = (___syscall146(146,($vararg_buffer3|0))|0);
    $50 = (___syscall_ret($49)|0);
    $51 = ($35|0)==($50|0);
    if ($51) {
     label = 3;
     break L1;
    } else {
     $$04756 = $$1;$$04855 = $35;$$04954 = $$150;$27 = $50;
    }
   }
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = 0;
   HEAP32[$4>>2] = 0;
   HEAP32[$7>>2] = 0;
   $29 = HEAP32[$0>>2]|0;
   $30 = $29 | 32;
   HEAP32[$0>>2] = $30;
   $31 = ($$04756|0)==(2);
   if ($31) {
    $$051 = 0;
   } else {
    $32 = ((($$04954)) + 4|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (($2) - ($33))|0;
    $$051 = $34;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 16|0);
  HEAP32[$24>>2] = $23;
  $25 = $20;
  HEAP32[$4>>2] = $25;
  HEAP32[$7>>2] = $25;
  $$051 = $2;
 }
 STACKTOP = sp;return ($$051|0);
}
function ___stdio_seek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $4 = ((($0)) + 60|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 HEAP32[$vararg_buffer>>2] = $5;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $1;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $6;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $2;
 $7 = (___syscall140(140,($vararg_buffer|0))|0);
 $8 = (___syscall_ret($7)|0);
 $9 = ($8|0)<(0);
 if ($9) {
  HEAP32[$3>>2] = -1;
  $10 = -1;
 } else {
  $$pre = HEAP32[$3>>2]|0;
  $10 = $$pre;
 }
 STACKTOP = sp;return ($10|0);
}
function ___syscall_ret($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(4294963200);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = $2;
  $$0 = -1;
 } else {
  $$0 = $0;
 }
 return ($$0|0);
}
function ___errno_location() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (49916|0);
}
function _dummy($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function ___stdout_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 2;
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 64;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($0)) + 60|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $3;
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21523;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $10;
  $11 = (___syscall54(54,($vararg_buffer|0))|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($0)) + 75|0);
   HEAP8[$13>>0] = -1;
  }
 }
 $14 = (___stdio_write($0,$1,$2)|0);
 STACKTOP = sp;return ($14|0);
}
function _isdigit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -48)|0;
 $2 = ($1>>>0)<(10);
 $3 = $2&1;
 return ($3|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (37112|0);
}
function _strcmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($2<<24>>24)!=($3<<24>>24);
 $5 = ($2<<24>>24)==(0);
 $or$cond9 = $5 | $4;
 if ($or$cond9) {
  $$lcssa = $3;$$lcssa8 = $2;
 } else {
  $$011 = $1;$$0710 = $0;
  while(1) {
   $6 = ((($$0710)) + 1|0);
   $7 = ((($$011)) + 1|0);
   $8 = HEAP8[$6>>0]|0;
   $9 = HEAP8[$7>>0]|0;
   $10 = ($8<<24>>24)!=($9<<24>>24);
   $11 = ($8<<24>>24)==(0);
   $or$cond = $11 | $10;
   if ($or$cond) {
    $$lcssa = $9;$$lcssa8 = $8;
    break;
   } else {
    $$011 = $7;$$0710 = $6;
   }
  }
 }
 $12 = $$lcssa8&255;
 $13 = $$lcssa&255;
 $14 = (($12) - ($13))|0;
 return ($14|0);
}
function _fwrite($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $5 = ($1|0)==(0);
 $spec$select = $5 ? 0 : $2;
 $6 = ((($3)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)>(-1);
 if ($8) {
  $10 = (___lockfile($3)|0);
  $phitmp = ($10|0)==(0);
  $11 = (___fwritex($0,$4,$3)|0);
  if ($phitmp) {
   $13 = $11;
  } else {
   ___unlockfile($3);
   $13 = $11;
  }
 } else {
  $9 = (___fwritex($0,$4,$3)|0);
  $13 = $9;
 }
 $12 = ($13|0)==($4|0);
 if ($12) {
  $15 = $spec$select;
 } else {
  $14 = (($13>>>0) / ($1>>>0))&-1;
  $15 = $14;
 }
 return ($15|0);
}
function ___unlockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___lockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___towrite($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)==(0);
 if ($9) {
  $11 = ((($0)) + 8|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($0)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = ((($0)) + 44|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($0)) + 28|0);
  HEAP32[$15>>2] = $14;
  $16 = ((($0)) + 20|0);
  HEAP32[$16>>2] = $14;
  $17 = $14;
  $18 = ((($0)) + 48|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($17) + ($19)|0);
  $21 = ((($0)) + 16|0);
  HEAP32[$21>>2] = $20;
  $$0 = 0;
 } else {
  $10 = $7 | 32;
  HEAP32[$0>>2] = $10;
  $$0 = -1;
 }
 return ($$0|0);
}
function ___fwritex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$03846 = 0, $$042 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $$pre = 0, $$pre48 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = (___towrite($2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$3>>2]|0;
   $12 = $$pre;
   label = 5;
  } else {
   $$1 = 0;
  }
 } else {
  $6 = $4;
  $12 = $6;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = ((($2)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($12) - ($10))|0;
   $13 = ($11>>>0)<($1>>>0);
   $14 = $10;
   if ($13) {
    $15 = ((($2)) + 36|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (ftCall_iiii($16|0,$2,$0,$1)|0);
    $$1 = $17;
    break;
   }
   $18 = ((($2)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)<(0);
   $21 = ($1|0)==(0);
   $or$cond = $20 | $21;
   L10: do {
    if ($or$cond) {
     $$139 = 0;$$141 = $0;$$143 = $1;$32 = $14;
    } else {
     $$03846 = $1;
     while(1) {
      $23 = (($$03846) + -1)|0;
      $24 = (($0) + ($23)|0);
      $25 = HEAP8[$24>>0]|0;
      $26 = ($25<<24>>24)==(10);
      if ($26) {
       break;
      }
      $22 = ($23|0)==(0);
      if ($22) {
       $$139 = 0;$$141 = $0;$$143 = $1;$32 = $14;
       break L10;
      } else {
       $$03846 = $23;
      }
     }
     $27 = ((($2)) + 36|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = (ftCall_iiii($28|0,$2,$0,$$03846)|0);
     $30 = ($29>>>0)<($$03846>>>0);
     if ($30) {
      $$1 = $29;
      break L5;
     }
     $31 = (($0) + ($$03846)|0);
     $$042 = (($1) - ($$03846))|0;
     $$pre48 = HEAP32[$9>>2]|0;
     $$139 = $$03846;$$141 = $31;$$143 = $$042;$32 = $$pre48;
    }
   } while(0);
   (_memcpy(($32|0),($$141|0),($$143|0))|0);
   $33 = HEAP32[$9>>2]|0;
   $34 = (($33) + ($$143)|0);
   HEAP32[$9>>2] = $34;
   $35 = (($$139) + ($$143))|0;
   $$1 = $35;
  }
 } while(0);
 return ($$1|0);
}
function ___lctrans_impl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = HEAP32[$1>>2]|0;
  $4 = ((($1)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (___mo_lookup($3,$5,$0)|0);
  $$0 = $6;
 }
 $7 = ($$0|0)==(0|0);
 $8 = $7 ? $0 : $$0;
 return ($8|0);
}
function ___mo_lookup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$090 = 0, $$094 = 0, $$191 = 0, $$195 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond102 = 0, $or$cond104 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($3) + 1794895138)|0;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_swapc($6,$4)|0);
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_swapc($9,$4)|0);
 $11 = ((($0)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (_swapc($12,$4)|0);
 $14 = $1 >>> 2;
 $15 = ($7>>>0)<($14>>>0);
 L1: do {
  if ($15) {
   $16 = $7 << 2;
   $17 = (($1) - ($16))|0;
   $18 = ($10>>>0)<($17>>>0);
   $19 = ($13>>>0)<($17>>>0);
   $or$cond = $18 & $19;
   if ($or$cond) {
    $20 = $13 | $10;
    $21 = $20 & 3;
    $22 = ($21|0)==(0);
    if ($22) {
     $23 = $10 >>> 2;
     $24 = $13 >>> 2;
     $$090 = 0;$$094 = $7;
     while(1) {
      $25 = $$094 >>> 1;
      $26 = (($$090) + ($25))|0;
      $27 = $26 << 1;
      $28 = (($27) + ($23))|0;
      $29 = (($0) + ($28<<2)|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = (_swapc($30,$4)|0);
      $32 = (($28) + 1)|0;
      $33 = (($0) + ($32<<2)|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = (_swapc($34,$4)|0);
      $36 = ($35>>>0)<($1>>>0);
      $37 = (($1) - ($35))|0;
      $38 = ($31>>>0)<($37>>>0);
      $or$cond102 = $36 & $38;
      if (!($or$cond102)) {
       $$4 = 0;
       break L1;
      }
      $39 = (($35) + ($31))|0;
      $40 = (($0) + ($39)|0);
      $41 = HEAP8[$40>>0]|0;
      $42 = ($41<<24>>24)==(0);
      if (!($42)) {
       $$4 = 0;
       break L1;
      }
      $43 = (($0) + ($35)|0);
      $44 = (_strcmp($2,$43)|0);
      $45 = ($44|0)==(0);
      if ($45) {
       break;
      }
      $62 = ($$094|0)==(1);
      $63 = ($44|0)<(0);
      if ($62) {
       $$4 = 0;
       break L1;
      }
      $$191 = $63 ? $$090 : $26;
      $64 = (($$094) - ($25))|0;
      $$195 = $63 ? $25 : $64;
      $$090 = $$191;$$094 = $$195;
     }
     $46 = (($27) + ($24))|0;
     $47 = (($0) + ($46<<2)|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = (_swapc($48,$4)|0);
     $50 = (($46) + 1)|0;
     $51 = (($0) + ($50<<2)|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (_swapc($52,$4)|0);
     $54 = ($53>>>0)<($1>>>0);
     $55 = (($1) - ($53))|0;
     $56 = ($49>>>0)<($55>>>0);
     $or$cond104 = $54 & $56;
     if ($or$cond104) {
      $57 = (($0) + ($53)|0);
      $58 = (($53) + ($49))|0;
      $59 = (($0) + ($58)|0);
      $60 = HEAP8[$59>>0]|0;
      $61 = ($60<<24>>24)==(0);
      $spec$select = $61 ? $57 : 0;
      $$4 = $spec$select;
     } else {
      $$4 = 0;
     }
    } else {
     $$4 = 0;
    }
   } else {
    $$4 = 0;
   }
  } else {
   $$4 = 0;
  }
 } while(0);
 return ($$4|0);
}
function _swapc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 $3 = (_llvm_bswap_i32(($0|0))|0);
 $spec$select = $2 ? $0 : $3;
 return ($spec$select|0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((49920|0));
 return (49928|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((49920|0));
 return;
}
function _fflush($0) {
 $0 = $0|0;
 var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $8 = HEAP32[9277]|0;
   $9 = ($8|0)==(0|0);
   if ($9) {
    $29 = 0;
   } else {
    $10 = HEAP32[9277]|0;
    $11 = (_fflush($10)|0);
    $29 = $11;
   }
   $12 = (___ofl_lock()|0);
   $$02325 = HEAP32[$12>>2]|0;
   $13 = ($$02325|0)==(0|0);
   if ($13) {
    $$024$lcssa = $29;
   } else {
    $$02327 = $$02325;$$02426 = $29;
    while(1) {
     $14 = ((($$02327)) + 76|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)>(-1);
     if ($16) {
      $17 = (___lockfile($$02327)|0);
      $26 = $17;
     } else {
      $26 = 0;
     }
     $18 = ((($$02327)) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ((($$02327)) + 28|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($19>>>0)>($21>>>0);
     if ($22) {
      $23 = (___fflush_unlocked($$02327)|0);
      $24 = $23 | $$02426;
      $$1 = $24;
     } else {
      $$1 = $$02426;
     }
     $25 = ($26|0)==(0);
     if (!($25)) {
      ___unlockfile($$02327);
     }
     $27 = ((($$02327)) + 56|0);
     $$023 = HEAP32[$27>>2]|0;
     $28 = ($$023|0)==(0|0);
     if ($28) {
      $$024$lcssa = $$1;
      break;
     } else {
      $$02327 = $$023;$$02426 = $$1;
     }
    }
   }
   ___ofl_unlock();
   $$0 = $$024$lcssa;
  } else {
   $2 = ((($0)) + 76|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)>(-1);
   if (!($4)) {
    $5 = (___fflush_unlocked($0)|0);
    $$0 = $5;
    break;
   }
   $6 = (___lockfile($0)|0);
   $phitmp = ($6|0)==(0);
   $7 = (___fflush_unlocked($0)|0);
   if ($phitmp) {
    $$0 = $7;
   } else {
    ___unlockfile($0);
    $$0 = $7;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___fflush_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)>($4>>>0);
 if ($5) {
  $6 = ((($0)) + 36|0);
  $7 = HEAP32[$6>>2]|0;
  (ftCall_iiii($7|0,$0,0,0)|0);
  $8 = HEAP32[$1>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($11>>>0)<($13>>>0);
  if ($14) {
   $15 = $11;
   $16 = $13;
   $17 = (($15) - ($16))|0;
   $18 = ((($0)) + 40|0);
   $19 = HEAP32[$18>>2]|0;
   (ftCall_iiii($19|0,$0,$17,1)|0);
  }
  $20 = ((($0)) + 16|0);
  HEAP32[$20>>2] = 0;
  HEAP32[$3>>2] = 0;
  HEAP32[$1>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _scalbn($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$020 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0;
 var $9 = 0, $spec$select = 0, $spec$select21 = 0.0, $spec$select22 = 0, $spec$select23 = 0.0, $spec$store$select = 0, $spec$store$select1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(1023);
 if ($2) {
  $3 = $0 * 8.9884656743115795E+307;
  $4 = (($1) + -1023)|0;
  $5 = ($1|0)>(2046);
  $6 = $3 * 8.9884656743115795E+307;
  $7 = (($1) + -2046)|0;
  $8 = ($7|0)<(1023);
  $spec$store$select = $8 ? $7 : 1023;
  $spec$select = $5 ? $spec$store$select : $4;
  $spec$select21 = $5 ? $6 : $3;
  $$0 = $spec$select21;$$020 = $spec$select;
 } else {
  $9 = ($1|0)<(-1022);
  if ($9) {
   $10 = $0 * 2.2250738585072014E-308;
   $11 = (($1) + 1022)|0;
   $12 = ($1|0)<(-2044);
   $13 = $10 * 2.2250738585072014E-308;
   $14 = (($1) + 2044)|0;
   $15 = ($14|0)>(-1022);
   $spec$store$select1 = $15 ? $14 : -1022;
   $spec$select22 = $12 ? $spec$store$select1 : $11;
   $spec$select23 = $12 ? $13 : $10;
   $$0 = $spec$select23;$$020 = $spec$select22;
  } else {
   $$0 = $0;$$020 = $1;
  }
 }
 $16 = (($$020) + 1023)|0;
 $17 = (_bitshift64Shl(($16|0),0,52)|0);
 $18 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $17;HEAP32[tempDoublePtr+4>>2] = $18;$19 = +HEAPF64[tempDoublePtr>>3];
 $20 = $$0 * $19;
 return (+$20);
}
function _memchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$137$lcssa66 = 0, $$13745 = 0, $$140 = 0, $$23839 = 0, $$in = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 & 255;
 $4 = $0;
 $5 = $4 & 3;
 $6 = ($5|0)!=(0);
 $7 = ($2|0)!=(0);
 $or$cond53 = $7 & $6;
 L1: do {
  if ($or$cond53) {
   $8 = $1&255;
   $$03555 = $0;$$03654 = $2;
   while(1) {
    $9 = HEAP8[$$03555>>0]|0;
    $10 = ($9<<24>>24)==($8<<24>>24);
    if ($10) {
     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;
     label = 6;
     break L1;
    }
    $11 = ((($$03555)) + 1|0);
    $12 = (($$03654) + -1)|0;
    $13 = $11;
    $14 = $13 & 3;
    $15 = ($14|0)!=(0);
    $16 = ($12|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$03555 = $11;$$03654 = $12;
    } else {
     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;
   label = 6;
  } else {
   label = 16;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $17 = HEAP8[$$035$lcssa65>>0]|0;
   $18 = $1&255;
   $19 = ($17<<24>>24)==($18<<24>>24);
   if ($19) {
    $38 = ($$036$lcssa64|0)==(0);
    if ($38) {
     label = 16;
     break;
    } else {
     $39 = $$035$lcssa65;
     break;
    }
   }
   $20 = Math_imul($3, 16843009)|0;
   $21 = ($$036$lcssa64>>>0)>(3);
   L13: do {
    if ($21) {
     $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;
     while(1) {
      $22 = HEAP32[$$046>>2]|0;
      $23 = $22 ^ $20;
      $24 = (($23) + -16843009)|0;
      $25 = $23 & -2139062144;
      $26 = $25 ^ -2139062144;
      $27 = $26 & $24;
      $28 = ($27|0)==(0);
      if (!($28)) {
       $$137$lcssa66 = $$13745;$$in = $$046;
       break L13;
      }
      $29 = ((($$046)) + 4|0);
      $30 = (($$13745) + -4)|0;
      $31 = ($30>>>0)>(3);
      if ($31) {
       $$046 = $29;$$13745 = $30;
      } else {
       $$0$lcssa = $29;$$137$lcssa = $30;
       label = 11;
       break;
      }
     }
    } else {
     $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;
     label = 11;
    }
   } while(0);
   if ((label|0) == 11) {
    $32 = ($$137$lcssa|0)==(0);
    if ($32) {
     label = 16;
     break;
    } else {
     $$137$lcssa66 = $$137$lcssa;$$in = $$0$lcssa;
    }
   }
   $$140 = $$in;$$23839 = $$137$lcssa66;
   while(1) {
    $33 = HEAP8[$$140>>0]|0;
    $34 = ($33<<24>>24)==($18<<24>>24);
    if ($34) {
     $39 = $$140;
     break L8;
    }
    $35 = ((($$140)) + 1|0);
    $36 = (($$23839) + -1)|0;
    $37 = ($36|0)==(0);
    if ($37) {
     label = 16;
     break;
    } else {
     $$140 = $35;$$23839 = $36;
    }
   }
  }
 } while(0);
 if ((label|0) == 16) {
  $39 = 0;
 }
 return ($39|0);
}
function _vfprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $spec$select = 0, $spec$select41 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $3 = sp + 208|0;
 $4 = sp + 160|0;
 $5 = sp + 80|0;
 $6 = sp;
 dest=$4; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $7 = (_printf_core(0,$1,$3,$5,$4)|0);
 $8 = ($7|0)<(0);
 if ($8) {
  $$0 = -1;
 } else {
  $9 = ((($0)) + 76|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)>(-1);
  if ($11) {
   $12 = (___lockfile($0)|0);
   $40 = $12;
  } else {
   $40 = 0;
  }
  $13 = HEAP32[$0>>2]|0;
  $14 = $13 & 32;
  $15 = ((($0)) + 74|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = ($16<<24>>24)<(1);
  if ($17) {
   $18 = $13 & -33;
   HEAP32[$0>>2] = $18;
  }
  $19 = ((($0)) + 48|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(0);
  if ($21) {
   $23 = ((($0)) + 44|0);
   $24 = HEAP32[$23>>2]|0;
   HEAP32[$23>>2] = $6;
   $25 = ((($0)) + 28|0);
   HEAP32[$25>>2] = $6;
   $26 = ((($0)) + 20|0);
   HEAP32[$26>>2] = $6;
   HEAP32[$19>>2] = 80;
   $27 = ((($6)) + 80|0);
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = $27;
   $29 = (_printf_core($0,$1,$3,$5,$4)|0);
   $30 = ($24|0)==(0|0);
   if ($30) {
    $$1 = $29;
   } else {
    $31 = ((($0)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    (ftCall_iiii($32|0,$0,0,0)|0);
    $33 = HEAP32[$26>>2]|0;
    $34 = ($33|0)==(0|0);
    $spec$select = $34 ? -1 : $29;
    HEAP32[$23>>2] = $24;
    HEAP32[$19>>2] = 0;
    HEAP32[$28>>2] = 0;
    HEAP32[$25>>2] = 0;
    HEAP32[$26>>2] = 0;
    $$1 = $spec$select;
   }
  } else {
   $22 = (_printf_core($0,$1,$3,$5,$4)|0);
   $$1 = $22;
  }
  $35 = HEAP32[$0>>2]|0;
  $36 = $35 & 32;
  $37 = ($36|0)==(0);
  $spec$select41 = $37 ? $$1 : -1;
  $38 = $35 | $14;
  HEAP32[$0>>2] = $38;
  $39 = ($40|0)==(0);
  if (!($39)) {
   ___unlockfile($0);
  }
  $$0 = $spec$select41;
 }
 STACKTOP = sp;return ($$0|0);
}
function _printf_core($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$0 = 0, $$0228 = 0, $$0229334 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0, $$0240313 = 0, $$0240313371 = 0, $$0240333 = 0, $$0243 = 0, $$0243$ph = 0, $$0243$ph$be = 0, $$0247 = 0, $$0247$ph = 0, $$0249$lcssa = 0, $$0249321 = 0, $$0252 = 0, $$0253 = 0, $$0254 = 0;
 var $$0259 = 0, $$0262$lcssa = 0, $$0262328 = 0, $$0269$ph = 0, $$1 = 0, $$1230340 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241339 = 0, $$1248 = 0, $$1250 = 0, $$1255 = 0, $$1260 = 0, $$1263 = 0, $$1270 = 0, $$2 = 0, $$2234 = 0, $$2239 = 0, $$2242320 = 0;
 var $$2256 = 0, $$2256$ = 0, $$2261 = 0, $$2271 = 0, $$3257 = 0, $$3265 = 0, $$3272 = 0, $$3317 = 0, $$4258370 = 0, $$4266 = 0, $$5 = 0, $$6268 = 0, $$lcssa308 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre360 = 0, $$pre362 = 0, $$pre363 = 0, $$pre363$pre = 0, $$pre364 = 0;
 var $$pre368 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0.0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0;
 var $arglist_next3 = 0, $brmerge = 0, $brmerge326 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $or$cond = 0, $or$cond276 = 0, $or$cond278 = 0, $or$cond283 = 0, $spec$select = 0, $spec$select281 = 0, $spec$select284 = 0;
 var $spec$select291 = 0, $spec$select292 = 0, $spec$select293 = 0, $spec$select294 = 0, $spec$select295 = 0, $spec$select296 = 0, $spec$select297 = 0, $spec$select298 = 0, $spec$select299 = 0, $storemerge273$lcssa = 0, $storemerge273327 = 0, $storemerge274 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $5 = sp + 56|0;
 $6 = sp + 40|0;
 $7 = sp;
 $8 = sp + 48|0;
 $9 = sp + 60|0;
 HEAP32[$5>>2] = $1;
 $10 = ($0|0)!=(0|0);
 $11 = ((($7)) + 40|0);
 $12 = $11;
 $13 = ((($7)) + 39|0);
 $14 = ((($8)) + 4|0);
 $$0243$ph = 0;$$0247$ph = 0;$$0269$ph = 0;
 L1: while(1) {
  $$0243 = $$0243$ph;$$0247 = $$0247$ph;
  while(1) {
   $15 = ($$0247|0)>(-1);
   do {
    if ($15) {
     $16 = (2147483647 - ($$0247))|0;
     $17 = ($$0243|0)>($16|0);
     if ($17) {
      $18 = (___errno_location()|0);
      HEAP32[$18>>2] = 75;
      $$1248 = -1;
      break;
     } else {
      $19 = (($$0243) + ($$0247))|0;
      $$1248 = $19;
      break;
     }
    } else {
     $$1248 = $$0247;
    }
   } while(0);
   $20 = HEAP32[$5>>2]|0;
   $21 = HEAP8[$20>>0]|0;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    label = 94;
    break L1;
   }
   $23 = $21;$25 = $20;
   L12: while(1) {
    switch ($23<<24>>24) {
    case 37:  {
     label = 10;
     break L12;
     break;
    }
    case 0:  {
     $$0249$lcssa = $25;
     break L12;
     break;
    }
    default: {
    }
    }
    $24 = ((($25)) + 1|0);
    HEAP32[$5>>2] = $24;
    $$pre = HEAP8[$24>>0]|0;
    $23 = $$pre;$25 = $24;
   }
   L15: do {
    if ((label|0) == 10) {
     label = 0;
     $$0249321 = $25;$27 = $25;
     while(1) {
      $26 = ((($27)) + 1|0);
      $28 = HEAP8[$26>>0]|0;
      $29 = ($28<<24>>24)==(37);
      if (!($29)) {
       $$0249$lcssa = $$0249321;
       break L15;
      }
      $30 = ((($$0249321)) + 1|0);
      $31 = ((($27)) + 2|0);
      HEAP32[$5>>2] = $31;
      $32 = HEAP8[$31>>0]|0;
      $33 = ($32<<24>>24)==(37);
      if ($33) {
       $$0249321 = $30;$27 = $31;
      } else {
       $$0249$lcssa = $30;
       break;
      }
     }
    }
   } while(0);
   $34 = $$0249$lcssa;
   $35 = $20;
   $36 = (($34) - ($35))|0;
   if ($10) {
    _out_670($0,$20,$36);
   }
   $37 = ($36|0)==(0);
   if ($37) {
    break;
   } else {
    $$0243 = $36;$$0247 = $$1248;
   }
  }
  $38 = HEAP32[$5>>2]|0;
  $39 = ((($38)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $42 = (_isdigit($41)|0);
  $43 = ($42|0)==(0);
  $$pre360 = HEAP32[$5>>2]|0;
  if ($43) {
   $$0253 = -1;$$1270 = $$0269$ph;$$sink = 1;
  } else {
   $44 = ((($$pre360)) + 2|0);
   $45 = HEAP8[$44>>0]|0;
   $46 = ($45<<24>>24)==(36);
   if ($46) {
    $47 = ((($$pre360)) + 1|0);
    $48 = HEAP8[$47>>0]|0;
    $49 = $48 << 24 >> 24;
    $50 = (($49) + -48)|0;
    $$0253 = $50;$$1270 = 1;$$sink = 3;
   } else {
    $$0253 = -1;$$1270 = $$0269$ph;$$sink = 1;
   }
  }
  $51 = (($$pre360) + ($$sink)|0);
  HEAP32[$5>>2] = $51;
  $52 = HEAP8[$51>>0]|0;
  $53 = $52 << 24 >> 24;
  $54 = (($53) + -32)|0;
  $55 = ($54>>>0)>(31);
  $56 = 1 << $54;
  $57 = $56 & 75913;
  $58 = ($57|0)==(0);
  $brmerge326 = $55 | $58;
  if ($brmerge326) {
   $$0262$lcssa = 0;$$lcssa308 = $52;$storemerge273$lcssa = $51;
  } else {
   $$0262328 = 0;$60 = $54;$storemerge273327 = $51;
   while(1) {
    $59 = 1 << $60;
    $61 = $59 | $$0262328;
    $62 = ((($storemerge273327)) + 1|0);
    HEAP32[$5>>2] = $62;
    $63 = HEAP8[$62>>0]|0;
    $64 = $63 << 24 >> 24;
    $65 = (($64) + -32)|0;
    $66 = ($65>>>0)>(31);
    $67 = 1 << $65;
    $68 = $67 & 75913;
    $69 = ($68|0)==(0);
    $brmerge = $66 | $69;
    if ($brmerge) {
     $$0262$lcssa = $61;$$lcssa308 = $63;$storemerge273$lcssa = $62;
     break;
    } else {
     $$0262328 = $61;$60 = $65;$storemerge273327 = $62;
    }
   }
  }
  $70 = ($$lcssa308<<24>>24)==(42);
  if ($70) {
   $71 = ((($storemerge273$lcssa)) + 1|0);
   $72 = HEAP8[$71>>0]|0;
   $73 = $72 << 24 >> 24;
   $74 = (_isdigit($73)|0);
   $75 = ($74|0)==(0);
   if ($75) {
    label = 27;
   } else {
    $76 = HEAP32[$5>>2]|0;
    $77 = ((($76)) + 2|0);
    $78 = HEAP8[$77>>0]|0;
    $79 = ($78<<24>>24)==(36);
    if ($79) {
     $80 = ((($76)) + 1|0);
     $81 = HEAP8[$80>>0]|0;
     $82 = $81 << 24 >> 24;
     $83 = (($82) + -48)|0;
     $84 = (($4) + ($83<<2)|0);
     HEAP32[$84>>2] = 10;
     $85 = HEAP8[$80>>0]|0;
     $86 = $85 << 24 >> 24;
     $87 = (($86) + -48)|0;
     $88 = (($3) + ($87<<3)|0);
     $89 = $88;
     $90 = $89;
     $91 = HEAP32[$90>>2]|0;
     $92 = (($89) + 4)|0;
     $93 = $92;
     $94 = HEAP32[$93>>2]|0;
     $95 = ((($76)) + 3|0);
     $$0259 = $91;$$2271 = 1;$storemerge274 = $95;
    } else {
     label = 27;
    }
   }
   if ((label|0) == 27) {
    label = 0;
    $96 = ($$1270|0)==(0);
    if (!($96)) {
     $$0 = -1;
     break;
    }
    if ($10) {
     $arglist_current = HEAP32[$2>>2]|0;
     $97 = $arglist_current;
     $98 = ((0) + 4|0);
     $expanded4 = $98;
     $expanded = (($expanded4) - 1)|0;
     $99 = (($97) + ($expanded))|0;
     $100 = ((0) + 4|0);
     $expanded8 = $100;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $101 = $99 & $expanded6;
     $102 = $101;
     $103 = HEAP32[$102>>2]|0;
     $arglist_next = ((($102)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     $358 = $103;
    } else {
     $358 = 0;
    }
    $104 = HEAP32[$5>>2]|0;
    $105 = ((($104)) + 1|0);
    $$0259 = $358;$$2271 = 0;$storemerge274 = $105;
   }
   HEAP32[$5>>2] = $storemerge274;
   $106 = ($$0259|0)<(0);
   $107 = $$0262$lcssa | 8192;
   $108 = (0 - ($$0259))|0;
   $spec$select291 = $106 ? $107 : $$0262$lcssa;
   $spec$select292 = $106 ? $108 : $$0259;
   $$1260 = $spec$select292;$$1263 = $spec$select291;$$3272 = $$2271;$112 = $storemerge274;
  } else {
   $109 = (_getint_671($5)|0);
   $110 = ($109|0)<(0);
   if ($110) {
    $$0 = -1;
    break;
   }
   $$pre362 = HEAP32[$5>>2]|0;
   $$1260 = $109;$$1263 = $$0262$lcssa;$$3272 = $$1270;$112 = $$pre362;
  }
  $111 = HEAP8[$112>>0]|0;
  $113 = ($111<<24>>24)==(46);
  do {
   if ($113) {
    $114 = ((($112)) + 1|0);
    $115 = HEAP8[$114>>0]|0;
    $116 = ($115<<24>>24)==(42);
    if (!($116)) {
     HEAP32[$5>>2] = $114;
     $152 = (_getint_671($5)|0);
     $$pre363$pre = HEAP32[$5>>2]|0;
     $$0254 = $152;$$pre363 = $$pre363$pre;
     break;
    }
    $117 = ((($112)) + 2|0);
    $118 = HEAP8[$117>>0]|0;
    $119 = $118 << 24 >> 24;
    $120 = (_isdigit($119)|0);
    $121 = ($120|0)==(0);
    if (!($121)) {
     $122 = HEAP32[$5>>2]|0;
     $123 = ((($122)) + 3|0);
     $124 = HEAP8[$123>>0]|0;
     $125 = ($124<<24>>24)==(36);
     if ($125) {
      $126 = ((($122)) + 2|0);
      $127 = HEAP8[$126>>0]|0;
      $128 = $127 << 24 >> 24;
      $129 = (($128) + -48)|0;
      $130 = (($4) + ($129<<2)|0);
      HEAP32[$130>>2] = 10;
      $131 = HEAP8[$126>>0]|0;
      $132 = $131 << 24 >> 24;
      $133 = (($132) + -48)|0;
      $134 = (($3) + ($133<<3)|0);
      $135 = $134;
      $136 = $135;
      $137 = HEAP32[$136>>2]|0;
      $138 = (($135) + 4)|0;
      $139 = $138;
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($122)) + 4|0);
      HEAP32[$5>>2] = $141;
      $$0254 = $137;$$pre363 = $141;
      break;
     }
    }
    $142 = ($$3272|0)==(0);
    if (!($142)) {
     $$0 = -1;
     break L1;
    }
    if ($10) {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $143 = $arglist_current2;
     $144 = ((0) + 4|0);
     $expanded11 = $144;
     $expanded10 = (($expanded11) - 1)|0;
     $145 = (($143) + ($expanded10))|0;
     $146 = ((0) + 4|0);
     $expanded15 = $146;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $147 = $145 & $expanded13;
     $148 = $147;
     $149 = HEAP32[$148>>2]|0;
     $arglist_next3 = ((($148)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $359 = $149;
    } else {
     $359 = 0;
    }
    $150 = HEAP32[$5>>2]|0;
    $151 = ((($150)) + 2|0);
    HEAP32[$5>>2] = $151;
    $$0254 = $359;$$pre363 = $151;
   } else {
    $$0254 = -1;$$pre363 = $112;
   }
  } while(0);
  $$0252 = 0;$154 = $$pre363;
  while(1) {
   $153 = HEAP8[$154>>0]|0;
   $155 = $153 << 24 >> 24;
   $156 = (($155) + -65)|0;
   $157 = ($156>>>0)>(57);
   if ($157) {
    $$0 = -1;
    break L1;
   }
   $158 = ((($154)) + 1|0);
   HEAP32[$5>>2] = $158;
   $159 = HEAP8[$154>>0]|0;
   $160 = $159 << 24 >> 24;
   $161 = (($160) + -65)|0;
   $162 = ((33536 + (($$0252*58)|0)|0) + ($161)|0);
   $163 = HEAP8[$162>>0]|0;
   $164 = $163&255;
   $165 = (($164) + -1)|0;
   $166 = ($165>>>0)<(8);
   if ($166) {
    $$0252 = $164;$154 = $158;
   } else {
    break;
   }
  }
  $167 = ($163<<24>>24)==(0);
  if ($167) {
   $$0 = -1;
   break;
  }
  $168 = ($163<<24>>24)==(19);
  $169 = ($$0253|0)>(-1);
  do {
   if ($168) {
    if ($169) {
     $$0 = -1;
     break L1;
    } else {
     label = 54;
    }
   } else {
    if ($169) {
     $170 = (($4) + ($$0253<<2)|0);
     HEAP32[$170>>2] = $164;
     $171 = (($3) + ($$0253<<3)|0);
     $172 = $171;
     $173 = $172;
     $174 = HEAP32[$173>>2]|0;
     $175 = (($172) + 4)|0;
     $176 = $175;
     $177 = HEAP32[$176>>2]|0;
     $178 = $6;
     $179 = $178;
     HEAP32[$179>>2] = $174;
     $180 = (($178) + 4)|0;
     $181 = $180;
     HEAP32[$181>>2] = $177;
     label = 54;
     break;
    }
    if (!($10)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg_673($6,$164,$2);
    $$pre364 = HEAP32[$5>>2]|0;
    $183 = $$pre364;
    label = 55;
   }
  } while(0);
  if ((label|0) == 54) {
   label = 0;
   if ($10) {
    $183 = $158;
    label = 55;
   } else {
    $$0243$ph$be = 0;
   }
  }
  L77: do {
   if ((label|0) == 55) {
    label = 0;
    $182 = ((($183)) + -1|0);
    $184 = HEAP8[$182>>0]|0;
    $185 = $184 << 24 >> 24;
    $186 = ($$0252|0)!=(0);
    $187 = $185 & 15;
    $188 = ($187|0)==(3);
    $or$cond276 = $186 & $188;
    $189 = $185 & -33;
    $$0235 = $or$cond276 ? $189 : $185;
    $190 = $$1263 & 8192;
    $191 = ($190|0)==(0);
    $192 = $$1263 & -65537;
    $spec$select = $191 ? $$1263 : $192;
    L79: do {
     switch ($$0235|0) {
     case 110:  {
      $trunc = $$0252&255;
      switch ($trunc<<24>>24) {
      case 0:  {
       $199 = HEAP32[$6>>2]|0;
       HEAP32[$199>>2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 1:  {
       $200 = HEAP32[$6>>2]|0;
       HEAP32[$200>>2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 2:  {
       $201 = ($$1248|0)<(0);
       $202 = $201 << 31 >> 31;
       $203 = HEAP32[$6>>2]|0;
       $204 = $203;
       $205 = $204;
       HEAP32[$205>>2] = $$1248;
       $206 = (($204) + 4)|0;
       $207 = $206;
       HEAP32[$207>>2] = $202;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 3:  {
       $208 = $$1248&65535;
       $209 = HEAP32[$6>>2]|0;
       HEAP16[$209>>1] = $208;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 4:  {
       $210 = $$1248&255;
       $211 = HEAP32[$6>>2]|0;
       HEAP8[$211>>0] = $210;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 6:  {
       $212 = HEAP32[$6>>2]|0;
       HEAP32[$212>>2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 7:  {
       $213 = ($$1248|0)<(0);
       $214 = $213 << 31 >> 31;
       $215 = HEAP32[$6>>2]|0;
       $216 = $215;
       $217 = $216;
       HEAP32[$217>>2] = $$1248;
       $218 = (($216) + 4)|0;
       $219 = $218;
       HEAP32[$219>>2] = $214;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      default: {
       $$0243$ph$be = 0;
       break L77;
      }
      }
      break;
     }
     case 112:  {
      $220 = ($$0254>>>0)>(8);
      $221 = $220 ? $$0254 : 8;
      $222 = $spec$select | 8;
      $$1236 = 120;$$1255 = $221;$$3265 = $222;
      label = 67;
      break;
     }
     case 88: case 120:  {
      $$1236 = $$0235;$$1255 = $$0254;$$3265 = $spec$select;
      label = 67;
      break;
     }
     case 111:  {
      $238 = $6;
      $239 = $238;
      $240 = HEAP32[$239>>2]|0;
      $241 = (($238) + 4)|0;
      $242 = $241;
      $243 = HEAP32[$242>>2]|0;
      $244 = (_fmt_o($240,$243,$11)|0);
      $245 = $spec$select & 8;
      $246 = ($245|0)==(0);
      $247 = $244;
      $248 = (($12) - ($247))|0;
      $249 = ($$0254|0)>($248|0);
      $250 = (($248) + 1)|0;
      $251 = $246 | $249;
      $spec$select295 = $251 ? $$0254 : $250;
      $$0228 = $244;$$1233 = 0;$$1238 = 38004;$$2256 = $spec$select295;$$4266 = $spec$select;$277 = $240;$279 = $243;
      label = 73;
      break;
     }
     case 105: case 100:  {
      $252 = $6;
      $253 = $252;
      $254 = HEAP32[$253>>2]|0;
      $255 = (($252) + 4)|0;
      $256 = $255;
      $257 = HEAP32[$256>>2]|0;
      $258 = ($257|0)<(0);
      if ($258) {
       $259 = (_i64Subtract(0,0,($254|0),($257|0))|0);
       $260 = tempRet0;
       $261 = $6;
       $262 = $261;
       HEAP32[$262>>2] = $259;
       $263 = (($261) + 4)|0;
       $264 = $263;
       HEAP32[$264>>2] = $260;
       $$0232 = 1;$$0237 = 38004;$271 = $259;$272 = $260;
       label = 72;
       break L79;
      } else {
       $265 = $spec$select & 2048;
       $266 = ($265|0)==(0);
       $267 = $spec$select & 1;
       $268 = ($267|0)==(0);
       $$ = $268 ? 38004 : (38006);
       $spec$select296 = $266 ? $$ : (38005);
       $269 = $spec$select & 2049;
       $270 = ($269|0)!=(0);
       $spec$select297 = $270&1;
       $$0232 = $spec$select297;$$0237 = $spec$select296;$271 = $254;$272 = $257;
       label = 72;
       break L79;
      }
      break;
     }
     case 117:  {
      $193 = $6;
      $194 = $193;
      $195 = HEAP32[$194>>2]|0;
      $196 = (($193) + 4)|0;
      $197 = $196;
      $198 = HEAP32[$197>>2]|0;
      $$0232 = 0;$$0237 = 38004;$271 = $195;$272 = $198;
      label = 72;
      break;
     }
     case 99:  {
      $288 = $6;
      $289 = $288;
      $290 = HEAP32[$289>>2]|0;
      $291 = (($288) + 4)|0;
      $292 = $291;
      $293 = HEAP32[$292>>2]|0;
      $294 = $290&255;
      HEAP8[$13>>0] = $294;
      $$2 = $13;$$2234 = 0;$$2239 = 38004;$$5 = 1;$$6268 = $192;$$pre$phiZ2D = $12;
      break;
     }
     case 109:  {
      $295 = (___errno_location()|0);
      $296 = HEAP32[$295>>2]|0;
      $297 = (_strerror($296)|0);
      $$1 = $297;
      label = 77;
      break;
     }
     case 115:  {
      $298 = HEAP32[$6>>2]|0;
      $299 = ($298|0)==(0|0);
      $300 = $299 ? 38014 : $298;
      $$1 = $300;
      label = 77;
      break;
     }
     case 67:  {
      $307 = $6;
      $308 = $307;
      $309 = HEAP32[$308>>2]|0;
      $310 = (($307) + 4)|0;
      $311 = $310;
      $312 = HEAP32[$311>>2]|0;
      HEAP32[$8>>2] = $309;
      HEAP32[$14>>2] = 0;
      HEAP32[$6>>2] = $8;
      $$4258370 = -1;
      label = 81;
      break;
     }
     case 83:  {
      $313 = ($$0254|0)==(0);
      if ($313) {
       _pad_676($0,32,$$1260,0,$spec$select);
       $$0240313371 = 0;
       label = 91;
      } else {
       $$4258370 = $$0254;
       label = 81;
      }
      break;
     }
     case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
      $336 = +HEAPF64[$6>>3];
      $337 = (_fmt_fp($0,$336,$$1260,$$0254,$spec$select,$$0235)|0);
      $$0243$ph$be = $337;
      break L77;
      break;
     }
     default: {
      $$2 = $20;$$2234 = 0;$$2239 = 38004;$$5 = $$0254;$$6268 = $spec$select;$$pre$phiZ2D = $12;
     }
     }
    } while(0);
    L103: do {
     if ((label|0) == 67) {
      label = 0;
      $223 = $6;
      $224 = $223;
      $225 = HEAP32[$224>>2]|0;
      $226 = (($223) + 4)|0;
      $227 = $226;
      $228 = HEAP32[$227>>2]|0;
      $229 = $$1236 & 32;
      $230 = (_fmt_x($225,$228,$11,$229)|0);
      $231 = ($225|0)==(0);
      $232 = ($228|0)==(0);
      $233 = $231 & $232;
      $234 = $$3265 & 8;
      $235 = ($234|0)==(0);
      $or$cond278 = $235 | $233;
      $236 = $$1236 >>> 4;
      $237 = (38004 + ($236)|0);
      $spec$select293 = $or$cond278 ? 38004 : $237;
      $spec$select294 = $or$cond278 ? 0 : 2;
      $$0228 = $230;$$1233 = $spec$select294;$$1238 = $spec$select293;$$2256 = $$1255;$$4266 = $$3265;$277 = $225;$279 = $228;
      label = 73;
     }
     else if ((label|0) == 72) {
      label = 0;
      $273 = (_fmt_u($271,$272,$11)|0);
      $$0228 = $273;$$1233 = $$0232;$$1238 = $$0237;$$2256 = $$0254;$$4266 = $spec$select;$277 = $271;$279 = $272;
      label = 73;
     }
     else if ((label|0) == 77) {
      label = 0;
      $301 = (_memchr($$1,0,$$0254)|0);
      $302 = ($301|0)==(0|0);
      $303 = $301;
      $304 = $$1;
      $305 = (($303) - ($304))|0;
      $306 = (($$1) + ($$0254)|0);
      $$3257 = $302 ? $$0254 : $305;
      $$1250 = $302 ? $306 : $301;
      $$pre368 = $$1250;
      $$2 = $$1;$$2234 = 0;$$2239 = 38004;$$5 = $$3257;$$6268 = $192;$$pre$phiZ2D = $$pre368;
     }
     else if ((label|0) == 81) {
      label = 0;
      $314 = HEAP32[$6>>2]|0;
      $$0229334 = $314;$$0240333 = 0;
      while(1) {
       $315 = HEAP32[$$0229334>>2]|0;
       $316 = ($315|0)==(0);
       if ($316) {
        $$0240313 = $$0240333;
        break;
       }
       $317 = (_wctomb($9,$315)|0);
       $318 = ($317|0)<(0);
       $319 = (($$4258370) - ($$0240333))|0;
       $320 = ($317>>>0)>($319>>>0);
       $or$cond283 = $318 | $320;
       if ($or$cond283) {
        label = 85;
        break;
       }
       $321 = ((($$0229334)) + 4|0);
       $322 = (($317) + ($$0240333))|0;
       $323 = ($$4258370>>>0)>($322>>>0);
       if ($323) {
        $$0229334 = $321;$$0240333 = $322;
       } else {
        $$0240313 = $322;
        break;
       }
      }
      if ((label|0) == 85) {
       label = 0;
       if ($318) {
        $$0 = -1;
        break L1;
       } else {
        $$0240313 = $$0240333;
       }
      }
      _pad_676($0,32,$$1260,$$0240313,$spec$select);
      $324 = ($$0240313|0)==(0);
      if ($324) {
       $$0240313371 = 0;
       label = 91;
      } else {
       $325 = HEAP32[$6>>2]|0;
       $$1230340 = $325;$$1241339 = 0;
       while(1) {
        $326 = HEAP32[$$1230340>>2]|0;
        $327 = ($326|0)==(0);
        if ($327) {
         $$0240313371 = $$0240313;
         label = 91;
         break L103;
        }
        $328 = (_wctomb($9,$326)|0);
        $329 = (($328) + ($$1241339))|0;
        $330 = ($329|0)>($$0240313|0);
        if ($330) {
         $$0240313371 = $$0240313;
         label = 91;
         break L103;
        }
        $331 = ((($$1230340)) + 4|0);
        _out_670($0,$9,$328);
        $332 = ($329>>>0)<($$0240313>>>0);
        if ($332) {
         $$1230340 = $331;$$1241339 = $329;
        } else {
         $$0240313371 = $$0240313;
         label = 91;
         break;
        }
       }
      }
     }
    } while(0);
    if ((label|0) == 73) {
     label = 0;
     $274 = ($$2256|0)>(-1);
     $275 = $$4266 & -65537;
     $spec$select281 = $274 ? $275 : $$4266;
     $276 = ($277|0)!=(0);
     $278 = ($279|0)!=(0);
     $280 = $276 | $278;
     $281 = ($$2256|0)!=(0);
     $or$cond = $281 | $280;
     $282 = $$0228;
     $283 = (($12) - ($282))|0;
     $284 = $280 ^ 1;
     $285 = $284&1;
     $286 = (($283) + ($285))|0;
     $287 = ($$2256|0)>($286|0);
     $$2256$ = $287 ? $$2256 : $286;
     $spec$select298 = $or$cond ? $$2256$ : 0;
     $spec$select299 = $or$cond ? $$0228 : $11;
     $$2 = $spec$select299;$$2234 = $$1233;$$2239 = $$1238;$$5 = $spec$select298;$$6268 = $spec$select281;$$pre$phiZ2D = $12;
    }
    else if ((label|0) == 91) {
     label = 0;
     $333 = $spec$select ^ 8192;
     _pad_676($0,32,$$1260,$$0240313371,$333);
     $334 = ($$1260|0)>($$0240313371|0);
     $335 = $334 ? $$1260 : $$0240313371;
     $$0243$ph$be = $335;
     break;
    }
    $338 = $$2;
    $339 = (($$pre$phiZ2D) - ($338))|0;
    $340 = ($$5|0)<($339|0);
    $spec$select284 = $340 ? $339 : $$5;
    $341 = (($spec$select284) + ($$2234))|0;
    $342 = ($$1260|0)<($341|0);
    $$2261 = $342 ? $341 : $$1260;
    _pad_676($0,32,$$2261,$341,$$6268);
    _out_670($0,$$2239,$$2234);
    $343 = $$6268 ^ 65536;
    _pad_676($0,48,$$2261,$341,$343);
    _pad_676($0,48,$spec$select284,$339,0);
    _out_670($0,$$2,$339);
    $344 = $$6268 ^ 8192;
    _pad_676($0,32,$$2261,$341,$344);
    $$0243$ph$be = $$2261;
   }
  } while(0);
  $$0243$ph = $$0243$ph$be;$$0247$ph = $$1248;$$0269$ph = $$3272;
 }
 L125: do {
  if ((label|0) == 94) {
   $345 = ($0|0)==(0|0);
   if ($345) {
    $346 = ($$0269$ph|0)==(0);
    if ($346) {
     $$0 = 0;
    } else {
     $$2242320 = 1;
     while(1) {
      $347 = (($4) + ($$2242320<<2)|0);
      $348 = HEAP32[$347>>2]|0;
      $349 = ($348|0)==(0);
      if ($349) {
       break;
      }
      $350 = (($3) + ($$2242320<<3)|0);
      _pop_arg_673($350,$348,$2);
      $351 = (($$2242320) + 1)|0;
      $352 = ($351>>>0)<(10);
      if ($352) {
       $$2242320 = $351;
      } else {
       $$0 = 1;
       break L125;
      }
     }
     $$3317 = $$2242320;
     while(1) {
      $355 = (($4) + ($$3317<<2)|0);
      $356 = HEAP32[$355>>2]|0;
      $357 = ($356|0)==(0);
      $354 = (($$3317) + 1)|0;
      if (!($357)) {
       $$0 = -1;
       break L125;
      }
      $353 = ($354>>>0)<(10);
      if ($353) {
       $$3317 = $354;
      } else {
       $$0 = 1;
       break;
      }
     }
    }
   } else {
    $$0 = $$1248;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _out_670($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 & 32;
 $5 = ($4|0)==(0);
 if ($5) {
  (___fwritex($1,$2,$0)|0);
 }
 return;
}
function _getint_671($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$04 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (_isdigit($3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $$0$lcssa = 0;
 } else {
  $$04 = 0;
  while(1) {
   $6 = ($$04*10)|0;
   $7 = HEAP32[$0>>2]|0;
   $8 = HEAP8[$7>>0]|0;
   $9 = $8 << 24 >> 24;
   $10 = (($6) + -48)|0;
   $11 = (($10) + ($9))|0;
   $12 = ((($7)) + 1|0);
   HEAP32[$0>>2] = $12;
   $13 = HEAP8[$12>>0]|0;
   $14 = $13 << 24 >> 24;
   $15 = (_isdigit($14)|0);
   $16 = ($15|0)==(0);
   if ($16) {
    $$0$lcssa = $11;
    break;
   } else {
    $$04 = $11;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _pop_arg_673($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$mask = 0, $$mask31 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(20);
 L1: do {
  if (!($3)) {
   do {
    switch ($1|0) {
    case 9:  {
     $arglist_current = HEAP32[$2>>2]|0;
     $4 = $arglist_current;
     $5 = ((0) + 4|0);
     $expanded28 = $5;
     $expanded = (($expanded28) - 1)|0;
     $6 = (($4) + ($expanded))|0;
     $7 = ((0) + 4|0);
     $expanded32 = $7;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $8 = $6 & $expanded30;
     $9 = $8;
     $10 = HEAP32[$9>>2]|0;
     $arglist_next = ((($9)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     HEAP32[$0>>2] = $10;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $11 = $arglist_current2;
     $12 = ((0) + 4|0);
     $expanded35 = $12;
     $expanded34 = (($expanded35) - 1)|0;
     $13 = (($11) + ($expanded34))|0;
     $14 = ((0) + 4|0);
     $expanded39 = $14;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $15 = $13 & $expanded37;
     $16 = $15;
     $17 = HEAP32[$16>>2]|0;
     $arglist_next3 = ((($16)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $18 = ($17|0)<(0);
     $19 = $18 << 31 >> 31;
     $20 = $0;
     $21 = $20;
     HEAP32[$21>>2] = $17;
     $22 = (($20) + 4)|0;
     $23 = $22;
     HEAP32[$23>>2] = $19;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$2>>2]|0;
     $24 = $arglist_current5;
     $25 = ((0) + 4|0);
     $expanded42 = $25;
     $expanded41 = (($expanded42) - 1)|0;
     $26 = (($24) + ($expanded41))|0;
     $27 = ((0) + 4|0);
     $expanded46 = $27;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $28 = $26 & $expanded44;
     $29 = $28;
     $30 = HEAP32[$29>>2]|0;
     $arglist_next6 = ((($29)) + 4|0);
     HEAP32[$2>>2] = $arglist_next6;
     $31 = $0;
     $32 = $31;
     HEAP32[$32>>2] = $30;
     $33 = (($31) + 4)|0;
     $34 = $33;
     HEAP32[$34>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$2>>2]|0;
     $35 = $arglist_current8;
     $36 = ((0) + 8|0);
     $expanded49 = $36;
     $expanded48 = (($expanded49) - 1)|0;
     $37 = (($35) + ($expanded48))|0;
     $38 = ((0) + 8|0);
     $expanded53 = $38;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $39 = $37 & $expanded51;
     $40 = $39;
     $41 = $40;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $44 = (($41) + 4)|0;
     $45 = $44;
     $46 = HEAP32[$45>>2]|0;
     $arglist_next9 = ((($40)) + 8|0);
     HEAP32[$2>>2] = $arglist_next9;
     $47 = $0;
     $48 = $47;
     HEAP32[$48>>2] = $43;
     $49 = (($47) + 4)|0;
     $50 = $49;
     HEAP32[$50>>2] = $46;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$2>>2]|0;
     $51 = $arglist_current11;
     $52 = ((0) + 4|0);
     $expanded56 = $52;
     $expanded55 = (($expanded56) - 1)|0;
     $53 = (($51) + ($expanded55))|0;
     $54 = ((0) + 4|0);
     $expanded60 = $54;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $55 = $53 & $expanded58;
     $56 = $55;
     $57 = HEAP32[$56>>2]|0;
     $arglist_next12 = ((($56)) + 4|0);
     HEAP32[$2>>2] = $arglist_next12;
     $58 = $57&65535;
     $59 = $58 << 16 >> 16;
     $60 = ($59|0)<(0);
     $61 = $60 << 31 >> 31;
     $62 = $0;
     $63 = $62;
     HEAP32[$63>>2] = $59;
     $64 = (($62) + 4)|0;
     $65 = $64;
     HEAP32[$65>>2] = $61;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$2>>2]|0;
     $66 = $arglist_current14;
     $67 = ((0) + 4|0);
     $expanded63 = $67;
     $expanded62 = (($expanded63) - 1)|0;
     $68 = (($66) + ($expanded62))|0;
     $69 = ((0) + 4|0);
     $expanded67 = $69;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $70 = $68 & $expanded65;
     $71 = $70;
     $72 = HEAP32[$71>>2]|0;
     $arglist_next15 = ((($71)) + 4|0);
     HEAP32[$2>>2] = $arglist_next15;
     $$mask31 = $72 & 65535;
     $73 = $0;
     $74 = $73;
     HEAP32[$74>>2] = $$mask31;
     $75 = (($73) + 4)|0;
     $76 = $75;
     HEAP32[$76>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$2>>2]|0;
     $77 = $arglist_current17;
     $78 = ((0) + 4|0);
     $expanded70 = $78;
     $expanded69 = (($expanded70) - 1)|0;
     $79 = (($77) + ($expanded69))|0;
     $80 = ((0) + 4|0);
     $expanded74 = $80;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $81 = $79 & $expanded72;
     $82 = $81;
     $83 = HEAP32[$82>>2]|0;
     $arglist_next18 = ((($82)) + 4|0);
     HEAP32[$2>>2] = $arglist_next18;
     $84 = $83&255;
     $85 = $84 << 24 >> 24;
     $86 = ($85|0)<(0);
     $87 = $86 << 31 >> 31;
     $88 = $0;
     $89 = $88;
     HEAP32[$89>>2] = $85;
     $90 = (($88) + 4)|0;
     $91 = $90;
     HEAP32[$91>>2] = $87;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$2>>2]|0;
     $92 = $arglist_current20;
     $93 = ((0) + 4|0);
     $expanded77 = $93;
     $expanded76 = (($expanded77) - 1)|0;
     $94 = (($92) + ($expanded76))|0;
     $95 = ((0) + 4|0);
     $expanded81 = $95;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $96 = $94 & $expanded79;
     $97 = $96;
     $98 = HEAP32[$97>>2]|0;
     $arglist_next21 = ((($97)) + 4|0);
     HEAP32[$2>>2] = $arglist_next21;
     $$mask = $98 & 255;
     $99 = $0;
     $100 = $99;
     HEAP32[$100>>2] = $$mask;
     $101 = (($99) + 4)|0;
     $102 = $101;
     HEAP32[$102>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$2>>2]|0;
     $103 = $arglist_current23;
     $104 = ((0) + 8|0);
     $expanded84 = $104;
     $expanded83 = (($expanded84) - 1)|0;
     $105 = (($103) + ($expanded83))|0;
     $106 = ((0) + 8|0);
     $expanded88 = $106;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $107 = $105 & $expanded86;
     $108 = $107;
     $109 = +HEAPF64[$108>>3];
     $arglist_next24 = ((($108)) + 8|0);
     HEAP32[$2>>2] = $arglist_next24;
     HEAPF64[$0>>3] = $109;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$2>>2]|0;
     $110 = $arglist_current26;
     $111 = ((0) + 8|0);
     $expanded91 = $111;
     $expanded90 = (($expanded91) - 1)|0;
     $112 = (($110) + ($expanded90))|0;
     $113 = ((0) + 8|0);
     $expanded95 = $113;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $114 = $112 & $expanded93;
     $115 = $114;
     $116 = +HEAPF64[$115>>3];
     $arglist_next27 = ((($115)) + 8|0);
     HEAP32[$2>>2] = $arglist_next27;
     HEAPF64[$0>>3] = $116;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$05$lcssa = 0, $$056 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0);
 $5 = ($1|0)==(0);
 $6 = $4 & $5;
 if ($6) {
  $$05$lcssa = $2;
 } else {
  $$056 = $2;$15 = $1;$8 = $0;
  while(1) {
   $7 = $8 & 15;
   $9 = (34000 + ($7)|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10&255;
   $12 = $11 | $3;
   $13 = $12&255;
   $14 = ((($$056)) + -1|0);
   HEAP8[$14>>0] = $13;
   $16 = (_bitshift64Lshr(($8|0),($15|0),4)|0);
   $17 = tempRet0;
   $18 = ($16|0)==(0);
   $19 = ($17|0)==(0);
   $20 = $18 & $19;
   if ($20) {
    $$05$lcssa = $14;
    break;
   } else {
    $$056 = $14;$15 = $17;$8 = $16;
   }
  }
 }
 return ($$05$lcssa|0);
}
function _fmt_o($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$06 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0);
 $4 = ($1|0)==(0);
 $5 = $3 & $4;
 if ($5) {
  $$0$lcssa = $2;
 } else {
  $$06 = $2;$11 = $1;$7 = $0;
  while(1) {
   $6 = $7&255;
   $8 = $6 & 7;
   $9 = $8 | 48;
   $10 = ((($$06)) + -1|0);
   HEAP8[$10>>0] = $9;
   $12 = (_bitshift64Lshr(($7|0),($11|0),3)|0);
   $13 = tempRet0;
   $14 = ($12|0)==(0);
   $15 = ($13|0)==(0);
   $16 = $14 & $15;
   if ($16) {
    $$0$lcssa = $10;
    break;
   } else {
    $$06 = $10;$11 = $13;$7 = $12;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _fmt_u($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(0);
 $4 = ($0>>>0)>(4294967295);
 $5 = ($1|0)==(0);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if ($7) {
  $$0914 = $2;$8 = $0;$9 = $1;
  while(1) {
   $10 = (___udivdi3(($8|0),($9|0),10,0)|0);
   $11 = tempRet0;
   $12 = (___muldi3(($10|0),($11|0),10,0)|0);
   $13 = tempRet0;
   $14 = (_i64Subtract(($8|0),($9|0),($12|0),($13|0))|0);
   $15 = tempRet0;
   $16 = $14&255;
   $17 = $16 | 48;
   $18 = ((($$0914)) + -1|0);
   HEAP8[$18>>0] = $17;
   $19 = ($9>>>0)>(9);
   $20 = ($8>>>0)>(4294967295);
   $21 = ($9|0)==(9);
   $22 = $21 & $20;
   $23 = $19 | $22;
   if ($23) {
    $$0914 = $18;$8 = $10;$9 = $11;
   } else {
    break;
   }
  }
  $$010$lcssa$off0 = $10;$$09$lcssa = $18;
 } else {
  $$010$lcssa$off0 = $0;$$09$lcssa = $2;
 }
 $24 = ($$010$lcssa$off0|0)==(0);
 if ($24) {
  $$1$lcssa = $$09$lcssa;
 } else {
  $$012 = $$010$lcssa$off0;$$111 = $$09$lcssa;
  while(1) {
   $25 = (($$012>>>0) / 10)&-1;
   $26 = ($25*10)|0;
   $27 = (($$012) - ($26))|0;
   $28 = $27 | 48;
   $29 = $28&255;
   $30 = ((($$111)) + -1|0);
   HEAP8[$30>>0] = $29;
   $31 = ($$012>>>0)<(10);
   if ($31) {
    $$1$lcssa = $30;
    break;
   } else {
    $$012 = $25;$$111 = $30;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _strerror($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___pthread_self_85()|0);
 $2 = ((($1)) + 188|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (___strerror_l($0,$3)|0);
 return ($4|0);
}
function _pad_676($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $5 = sp;
 $6 = $4 & 73728;
 $7 = ($6|0)==(0);
 $8 = ($2|0)>($3|0);
 $or$cond = $8 & $7;
 if ($or$cond) {
  $9 = (($2) - ($3))|0;
  $10 = $1 << 24 >> 24;
  $11 = ($9>>>0)<(256);
  $12 = $11 ? $9 : 256;
  (_memset(($5|0),($10|0),($12|0))|0);
  $13 = ($9>>>0)>(255);
  if ($13) {
   $14 = (($2) - ($3))|0;
   $$011 = $9;
   while(1) {
    _out_670($0,$5,256);
    $15 = (($$011) + -256)|0;
    $16 = ($15>>>0)>(255);
    if ($16) {
     $$011 = $15;
    } else {
     break;
    }
   }
   $17 = $14 & 255;
   $$0$lcssa = $17;
  } else {
   $$0$lcssa = $9;
  }
  _out_670($0,$5,$$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (_wcrtomb($0,$1,0)|0);
  $$0 = $3;
 }
 return ($$0|0);
}
function _fmt_fp($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$0 = 0, $$0463$lcssa = 0, $$0463588 = 0, $$0464599 = 0, $$0471 = 0.0, $$0479 = 0, $$0487657 = 0, $$0488 = 0, $$0488669 = 0, $$0488671 = 0, $$0497670 = 0, $$0498 = 0, $$0511586 = 0.0, $$0512 = 0, $$0513 = 0, $$0516652 = 0, $$0522 = 0, $$0523 = 0, $$0525 = 0;
 var $$0527 = 0, $$0529 = 0, $$0529$in646 = 0, $$0532651 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0, $$1480 = 0, $$1482$lcssa = 0, $$1482683 = 0, $$1489656 = 0, $$1499 = 0, $$1510587 = 0, $$1514$lcssa = 0, $$1514614 = 0, $$1517 = 0, $$1526 = 0, $$1528 = 0, $$1530621 = 0;
 var $$1533$lcssa = 0, $$1533645 = 0, $$1604 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2483 = 0, $$2490$lcssa = 0, $$2490638 = 0, $$2500$lcssa = 0, $$2500682 = 0, $$2515 = 0, $$2518634 = 0, $$2531 = 0, $$2534633 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484663 = 0, $$3501$lcssa = 0;
 var $$3501676 = 0, $$3535620 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478594 = 0, $$4492 = 0, $$4502$lcssa = 0, $$4502662 = 0, $$4520 = 0, $$5$lcssa = 0, $$5486$lcssa = 0, $$5486639 = 0, $$5493603 = 0, $$5503 = 0, $$5521 = 0, $$560 = 0, $$5609 = 0, $$6 = 0, $$6494593 = 0, $$7495608 = 0;
 var $$8 = 0, $$8506 = 0, $$9 = 0, $$9507$lcssa = 0, $$9507625 = 0, $$lcssa583 = 0, $$lobit = 0, $$neg = 0, $$neg571 = 0, $$not = 0, $$pn = 0, $$pr = 0, $$pr564 = 0, $$pre = 0, $$pre$phi717Z2D = 0, $$pre$phi718Z2D = 0, $$pre720 = 0, $$sink757 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0.0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0;
 var $247 = 0.0, $248 = 0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0.0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0.0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0;
 var $410 = 0, $411 = 0, $412 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0;
 var $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$ = 0, $or$cond = 0, $or$cond3$not = 0, $or$cond543 = 0, $or$cond546 = 0, $or$cond556 = 0, $or$cond559 = 0, $or$cond6 = 0, $scevgep711 = 0, $scevgep711712 = 0, $spec$select = 0, $spec$select539 = 0, $spec$select540 = 0, $spec$select540722 = 0, $spec$select540723 = 0;
 var $spec$select541 = 0, $spec$select544 = 0.0, $spec$select547 = 0, $spec$select548 = 0, $spec$select549 = 0, $spec$select551 = 0, $spec$select554 = 0, $spec$select557 = 0, $spec$select561 = 0.0, $spec$select562 = 0, $spec$select563 = 0, $spec$select565 = 0, $spec$select566 = 0, $spec$select567 = 0.0, $spec$select568 = 0.0, $spec$select569 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(560|0);
 $6 = sp + 32|0;
 $7 = sp + 536|0;
 $8 = sp;
 $9 = $8;
 $10 = sp + 540|0;
 HEAP32[$7>>2] = 0;
 $11 = ((($10)) + 12|0);
 $12 = (___DOUBLE_BITS_677($1)|0);
 $13 = tempRet0;
 $14 = ($13|0)<(0);
 if ($14) {
  $15 = - $1;
  $16 = (___DOUBLE_BITS_677($15)|0);
  $17 = tempRet0;
  $$0471 = $15;$$0522 = 1;$$0523 = 38021;$25 = $17;$412 = $16;
 } else {
  $18 = $4 & 2048;
  $19 = ($18|0)==(0);
  $20 = $4 & 1;
  $21 = ($20|0)==(0);
  $$ = $21 ? (38022) : (38027);
  $spec$select565 = $19 ? $$ : (38024);
  $22 = $4 & 2049;
  $23 = ($22|0)!=(0);
  $spec$select566 = $23&1;
  $$0471 = $1;$$0522 = $spec$select566;$$0523 = $spec$select565;$25 = $13;$412 = $12;
 }
 $24 = $25 & 2146435072;
 $26 = (0)==(0);
 $27 = ($24|0)==(2146435072);
 $28 = $26 & $27;
 do {
  if ($28) {
   $29 = $5 & 32;
   $30 = ($29|0)!=(0);
   $31 = $30 ? 38040 : 38044;
   $32 = ($$0471 != $$0471) | (0.0 != 0.0);
   $33 = $30 ? 38048 : 38052;
   $$0512 = $32 ? $33 : $31;
   $34 = (($$0522) + 3)|0;
   $35 = $4 & -65537;
   _pad_676($0,32,$2,$34,$35);
   _out_670($0,$$0523,$$0522);
   _out_670($0,$$0512,3);
   $36 = $4 ^ 8192;
   _pad_676($0,32,$2,$34,$36);
   $$sink757 = $34;
  } else {
   $37 = (+_frexpl($$0471,$7));
   $38 = $37 * 2.0;
   $39 = $38 != 0.0;
   if ($39) {
    $40 = HEAP32[$7>>2]|0;
    $41 = (($40) + -1)|0;
    HEAP32[$7>>2] = $41;
   }
   $42 = $5 | 32;
   $43 = ($42|0)==(97);
   if ($43) {
    $44 = $5 & 32;
    $45 = ($44|0)==(0);
    $46 = ((($$0523)) + 9|0);
    $spec$select = $45 ? $$0523 : $46;
    $47 = $$0522 | 2;
    $48 = ($3>>>0)>(11);
    $49 = (12 - ($3))|0;
    $50 = ($49|0)==(0);
    $51 = $48 | $50;
    do {
     if ($51) {
      $$1472 = $38;
     } else {
      $$0511586 = 8.0;$$1510587 = $49;
      while(1) {
       $52 = (($$1510587) + -1)|0;
       $53 = $$0511586 * 16.0;
       $54 = ($52|0)==(0);
       if ($54) {
        break;
       } else {
        $$0511586 = $53;$$1510587 = $52;
       }
      }
      $55 = HEAP8[$spec$select>>0]|0;
      $56 = ($55<<24>>24)==(45);
      if ($56) {
       $57 = - $38;
       $58 = $57 - $53;
       $59 = $53 + $58;
       $60 = - $59;
       $$1472 = $60;
       break;
      } else {
       $61 = $38 + $53;
       $62 = $61 - $53;
       $$1472 = $62;
       break;
      }
     }
    } while(0);
    $63 = HEAP32[$7>>2]|0;
    $64 = ($63|0)<(0);
    $65 = (0 - ($63))|0;
    $66 = $64 ? $65 : $63;
    $67 = ($66|0)<(0);
    $68 = $67 << 31 >> 31;
    $69 = (_fmt_u($66,$68,$11)|0);
    $70 = ($69|0)==($11|0);
    if ($70) {
     $71 = ((($10)) + 11|0);
     HEAP8[$71>>0] = 48;
     $$0513 = $71;
    } else {
     $$0513 = $69;
    }
    $72 = $63 >> 31;
    $73 = $72 & 2;
    $74 = (($73) + 43)|0;
    $75 = $74&255;
    $76 = ((($$0513)) + -1|0);
    HEAP8[$76>>0] = $75;
    $77 = (($5) + 15)|0;
    $78 = $77&255;
    $79 = ((($$0513)) + -2|0);
    HEAP8[$79>>0] = $78;
    $80 = ($3|0)<(1);
    $81 = $4 & 8;
    $82 = ($81|0)==(0);
    $$0525 = $8;$$2473 = $$1472;
    while(1) {
     $83 = (~~(($$2473)));
     $84 = (34000 + ($83)|0);
     $85 = HEAP8[$84>>0]|0;
     $86 = $85&255;
     $87 = $44 | $86;
     $88 = $87&255;
     $89 = ((($$0525)) + 1|0);
     HEAP8[$$0525>>0] = $88;
     $90 = (+($83|0));
     $91 = $$2473 - $90;
     $92 = $91 * 16.0;
     $93 = $89;
     $94 = (($93) - ($9))|0;
     $95 = ($94|0)==(1);
     if ($95) {
      $96 = $92 == 0.0;
      $or$cond3$not = $80 & $96;
      $or$cond = $82 & $or$cond3$not;
      if ($or$cond) {
       $$1526 = $89;
      } else {
       $97 = ((($$0525)) + 2|0);
       HEAP8[$89>>0] = 46;
       $$1526 = $97;
      }
     } else {
      $$1526 = $89;
     }
     $98 = $92 != 0.0;
     if ($98) {
      $$0525 = $$1526;$$2473 = $92;
     } else {
      break;
     }
    }
    $99 = ($3|0)==(0);
    $$pre720 = $$1526;
    if ($99) {
     label = 25;
    } else {
     $100 = (-2 - ($9))|0;
     $101 = (($100) + ($$pre720))|0;
     $102 = ($101|0)<($3|0);
     if ($102) {
      $103 = $11;
      $104 = $79;
      $105 = (($3) + 2)|0;
      $106 = (($105) + ($103))|0;
      $107 = (($106) - ($104))|0;
      $$0527 = $107;$$pre$phi717Z2D = $103;$$pre$phi718Z2D = $104;
     } else {
      label = 25;
     }
    }
    if ((label|0) == 25) {
     $108 = $11;
     $109 = $79;
     $110 = (($108) - ($9))|0;
     $111 = (($110) - ($109))|0;
     $112 = (($111) + ($$pre720))|0;
     $$0527 = $112;$$pre$phi717Z2D = $108;$$pre$phi718Z2D = $109;
    }
    $113 = (($$0527) + ($47))|0;
    _pad_676($0,32,$2,$113,$4);
    _out_670($0,$spec$select,$47);
    $114 = $4 ^ 65536;
    _pad_676($0,48,$2,$113,$114);
    $115 = (($$pre720) - ($9))|0;
    _out_670($0,$8,$115);
    $116 = (($$pre$phi717Z2D) - ($$pre$phi718Z2D))|0;
    $117 = (($115) + ($116))|0;
    $118 = (($$0527) - ($117))|0;
    _pad_676($0,48,$118,0,0);
    _out_670($0,$79,$116);
    $119 = $4 ^ 8192;
    _pad_676($0,32,$2,$113,$119);
    $$sink757 = $113;
    break;
   }
   $120 = ($3|0)<(0);
   $spec$select539 = $120 ? 6 : $3;
   if ($39) {
    $121 = $38 * 268435456.0;
    $122 = HEAP32[$7>>2]|0;
    $123 = (($122) + -28)|0;
    HEAP32[$7>>2] = $123;
    $$3 = $121;$$pr = $123;
   } else {
    $$pre = HEAP32[$7>>2]|0;
    $$3 = $38;$$pr = $$pre;
   }
   $124 = ($$pr|0)<(0);
   $125 = ((($6)) + 288|0);
   $$0498 = $124 ? $6 : $125;
   $$1499 = $$0498;$$4 = $$3;
   while(1) {
    $126 = (~~(($$4))>>>0);
    HEAP32[$$1499>>2] = $126;
    $127 = ((($$1499)) + 4|0);
    $128 = (+($126>>>0));
    $129 = $$4 - $128;
    $130 = $129 * 1.0E+9;
    $131 = $130 != 0.0;
    if ($131) {
     $$1499 = $127;$$4 = $130;
    } else {
     break;
    }
   }
   $132 = $$0498;
   $133 = ($$pr|0)>(0);
   if ($133) {
    $$1482683 = $$0498;$$2500682 = $127;$135 = $$pr;
    while(1) {
     $134 = ($135|0)<(29);
     $136 = $134 ? $135 : 29;
     $$0488669 = ((($$2500682)) + -4|0);
     $137 = ($$0488669>>>0)<($$1482683>>>0);
     if ($137) {
      $$2483 = $$1482683;
     } else {
      $$0488671 = $$0488669;$$0497670 = 0;
      while(1) {
       $138 = HEAP32[$$0488671>>2]|0;
       $139 = (_bitshift64Shl(($138|0),0,($136|0))|0);
       $140 = tempRet0;
       $141 = (_i64Add(($139|0),($140|0),($$0497670|0),0)|0);
       $142 = tempRet0;
       $143 = (___udivdi3(($141|0),($142|0),1000000000,0)|0);
       $144 = tempRet0;
       $145 = (___muldi3(($143|0),($144|0),1000000000,0)|0);
       $146 = tempRet0;
       $147 = (_i64Subtract(($141|0),($142|0),($145|0),($146|0))|0);
       $148 = tempRet0;
       HEAP32[$$0488671>>2] = $147;
       $$0488 = ((($$0488671)) + -4|0);
       $149 = ($$0488>>>0)<($$1482683>>>0);
       if ($149) {
        break;
       } else {
        $$0488671 = $$0488;$$0497670 = $143;
       }
      }
      $150 = ($143|0)==(0);
      if ($150) {
       $$2483 = $$1482683;
      } else {
       $151 = ((($$1482683)) + -4|0);
       HEAP32[$151>>2] = $143;
       $$2483 = $151;
      }
     }
     $152 = ($$2500682>>>0)>($$2483>>>0);
     L57: do {
      if ($152) {
       $$3501676 = $$2500682;
       while(1) {
        $154 = ((($$3501676)) + -4|0);
        $155 = HEAP32[$154>>2]|0;
        $156 = ($155|0)==(0);
        if (!($156)) {
         $$3501$lcssa = $$3501676;
         break L57;
        }
        $153 = ($154>>>0)>($$2483>>>0);
        if ($153) {
         $$3501676 = $154;
        } else {
         $$3501$lcssa = $154;
         break;
        }
       }
      } else {
       $$3501$lcssa = $$2500682;
      }
     } while(0);
     $157 = HEAP32[$7>>2]|0;
     $158 = (($157) - ($136))|0;
     HEAP32[$7>>2] = $158;
     $159 = ($158|0)>(0);
     if ($159) {
      $$1482683 = $$2483;$$2500682 = $$3501$lcssa;$135 = $158;
     } else {
      $$1482$lcssa = $$2483;$$2500$lcssa = $$3501$lcssa;$$pr564 = $158;
      break;
     }
    }
   } else {
    $$1482$lcssa = $$0498;$$2500$lcssa = $127;$$pr564 = $$pr;
   }
   $160 = ($$pr564|0)<(0);
   if ($160) {
    $161 = (($spec$select539) + 25)|0;
    $162 = (($161|0) / 9)&-1;
    $163 = (($162) + 1)|0;
    $164 = ($42|0)==(102);
    $$3484663 = $$1482$lcssa;$$4502662 = $$2500$lcssa;$166 = $$pr564;
    while(1) {
     $165 = (0 - ($166))|0;
     $167 = ($165|0)<(9);
     $168 = $167 ? $165 : 9;
     $169 = ($$3484663>>>0)<($$4502662>>>0);
     if ($169) {
      $173 = 1 << $168;
      $174 = (($173) + -1)|0;
      $175 = 1000000000 >>> $168;
      $$0487657 = 0;$$1489656 = $$3484663;
      while(1) {
       $176 = HEAP32[$$1489656>>2]|0;
       $177 = $176 & $174;
       $178 = $176 >>> $168;
       $179 = (($178) + ($$0487657))|0;
       HEAP32[$$1489656>>2] = $179;
       $180 = Math_imul($177, $175)|0;
       $181 = ((($$1489656)) + 4|0);
       $182 = ($181>>>0)<($$4502662>>>0);
       if ($182) {
        $$0487657 = $180;$$1489656 = $181;
       } else {
        break;
       }
      }
      $183 = HEAP32[$$3484663>>2]|0;
      $184 = ($183|0)==(0);
      $185 = ((($$3484663)) + 4|0);
      $spec$select540 = $184 ? $185 : $$3484663;
      $186 = ($180|0)==(0);
      if ($186) {
       $$5503 = $$4502662;$spec$select540723 = $spec$select540;
      } else {
       $187 = ((($$4502662)) + 4|0);
       HEAP32[$$4502662>>2] = $180;
       $$5503 = $187;$spec$select540723 = $spec$select540;
      }
     } else {
      $170 = HEAP32[$$3484663>>2]|0;
      $171 = ($170|0)==(0);
      $172 = ((($$3484663)) + 4|0);
      $spec$select540722 = $171 ? $172 : $$3484663;
      $$5503 = $$4502662;$spec$select540723 = $spec$select540722;
     }
     $188 = $164 ? $$0498 : $spec$select540723;
     $189 = $$5503;
     $190 = $188;
     $191 = (($189) - ($190))|0;
     $192 = $191 >> 2;
     $193 = ($192|0)>($163|0);
     $194 = (($188) + ($163<<2)|0);
     $spec$select541 = $193 ? $194 : $$5503;
     $195 = HEAP32[$7>>2]|0;
     $196 = (($195) + ($168))|0;
     HEAP32[$7>>2] = $196;
     $197 = ($196|0)<(0);
     if ($197) {
      $$3484663 = $spec$select540723;$$4502662 = $spec$select541;$166 = $196;
     } else {
      $$3484$lcssa = $spec$select540723;$$4502$lcssa = $spec$select541;
      break;
     }
    }
   } else {
    $$3484$lcssa = $$1482$lcssa;$$4502$lcssa = $$2500$lcssa;
   }
   $198 = ($$3484$lcssa>>>0)<($$4502$lcssa>>>0);
   if ($198) {
    $199 = $$3484$lcssa;
    $200 = (($132) - ($199))|0;
    $201 = $200 >> 2;
    $202 = ($201*9)|0;
    $203 = HEAP32[$$3484$lcssa>>2]|0;
    $204 = ($203>>>0)<(10);
    if ($204) {
     $$1517 = $202;
    } else {
     $$0516652 = $202;$$0532651 = 10;
     while(1) {
      $205 = ($$0532651*10)|0;
      $206 = (($$0516652) + 1)|0;
      $207 = ($203>>>0)<($205>>>0);
      if ($207) {
       $$1517 = $206;
       break;
      } else {
       $$0516652 = $206;$$0532651 = $205;
      }
     }
    }
   } else {
    $$1517 = 0;
   }
   $208 = ($42|0)==(102);
   $209 = $208 ? 0 : $$1517;
   $210 = (($spec$select539) - ($209))|0;
   $211 = ($42|0)==(103);
   $212 = ($spec$select539|0)!=(0);
   $213 = $212 & $211;
   $$neg = $213 << 31 >> 31;
   $214 = (($210) + ($$neg))|0;
   $215 = $$4502$lcssa;
   $216 = (($215) - ($132))|0;
   $217 = $216 >> 2;
   $218 = ($217*9)|0;
   $219 = (($218) + -9)|0;
   $220 = ($214|0)<($219|0);
   if ($220) {
    $221 = ((($$0498)) + 4|0);
    $222 = (($214) + 9216)|0;
    $223 = (($222|0) / 9)&-1;
    $224 = (($223) + -1024)|0;
    $225 = (($221) + ($224<<2)|0);
    $226 = ($223*9)|0;
    $227 = (($222) - ($226))|0;
    $228 = ($227|0)<(8);
    if ($228) {
     $$0529$in646 = $227;$$1533645 = 10;
     while(1) {
      $$0529 = (($$0529$in646) + 1)|0;
      $229 = ($$1533645*10)|0;
      $230 = ($$0529$in646|0)<(7);
      if ($230) {
       $$0529$in646 = $$0529;$$1533645 = $229;
      } else {
       $$1533$lcssa = $229;
       break;
      }
     }
    } else {
     $$1533$lcssa = 10;
    }
    $231 = HEAP32[$225>>2]|0;
    $232 = (($231>>>0) / ($$1533$lcssa>>>0))&-1;
    $233 = Math_imul($232, $$1533$lcssa)|0;
    $234 = (($231) - ($233))|0;
    $235 = ($234|0)==(0);
    $236 = ((($225)) + 4|0);
    $237 = ($236|0)==($$4502$lcssa|0);
    $or$cond543 = $237 & $235;
    if ($or$cond543) {
     $$4492 = $225;$$4520 = $$1517;$$8 = $$3484$lcssa;
    } else {
     $238 = $232 & 1;
     $239 = ($238|0)==(0);
     $spec$select544 = $239 ? 9007199254740992.0 : 9007199254740994.0;
     $240 = $$1533$lcssa >>> 1;
     $241 = ($234>>>0)<($240>>>0);
     $242 = ($234|0)==($240|0);
     $or$cond546 = $237 & $242;
     $spec$select561 = $or$cond546 ? 1.0 : 1.5;
     $spec$select567 = $241 ? 0.5 : $spec$select561;
     $243 = ($$0522|0)==(0);
     if ($243) {
      $$1467 = $spec$select567;$$1469 = $spec$select544;
     } else {
      $244 = HEAP8[$$0523>>0]|0;
      $245 = ($244<<24>>24)==(45);
      $246 = - $spec$select544;
      $247 = - $spec$select567;
      $spec$select568 = $245 ? $246 : $spec$select544;
      $spec$select569 = $245 ? $247 : $spec$select567;
      $$1467 = $spec$select569;$$1469 = $spec$select568;
     }
     $248 = (($231) - ($234))|0;
     HEAP32[$225>>2] = $248;
     $249 = $$1469 + $$1467;
     $250 = $249 != $$1469;
     if ($250) {
      $251 = (($248) + ($$1533$lcssa))|0;
      HEAP32[$225>>2] = $251;
      $252 = ($251>>>0)>(999999999);
      if ($252) {
       $$2490638 = $225;$$5486639 = $$3484$lcssa;
       while(1) {
        $253 = ((($$2490638)) + -4|0);
        HEAP32[$$2490638>>2] = 0;
        $254 = ($253>>>0)<($$5486639>>>0);
        if ($254) {
         $255 = ((($$5486639)) + -4|0);
         HEAP32[$255>>2] = 0;
         $$6 = $255;
        } else {
         $$6 = $$5486639;
        }
        $256 = HEAP32[$253>>2]|0;
        $257 = (($256) + 1)|0;
        HEAP32[$253>>2] = $257;
        $258 = ($257>>>0)>(999999999);
        if ($258) {
         $$2490638 = $253;$$5486639 = $$6;
        } else {
         $$2490$lcssa = $253;$$5486$lcssa = $$6;
         break;
        }
       }
      } else {
       $$2490$lcssa = $225;$$5486$lcssa = $$3484$lcssa;
      }
      $259 = $$5486$lcssa;
      $260 = (($132) - ($259))|0;
      $261 = $260 >> 2;
      $262 = ($261*9)|0;
      $263 = HEAP32[$$5486$lcssa>>2]|0;
      $264 = ($263>>>0)<(10);
      if ($264) {
       $$4492 = $$2490$lcssa;$$4520 = $262;$$8 = $$5486$lcssa;
      } else {
       $$2518634 = $262;$$2534633 = 10;
       while(1) {
        $265 = ($$2534633*10)|0;
        $266 = (($$2518634) + 1)|0;
        $267 = ($263>>>0)<($265>>>0);
        if ($267) {
         $$4492 = $$2490$lcssa;$$4520 = $266;$$8 = $$5486$lcssa;
         break;
        } else {
         $$2518634 = $266;$$2534633 = $265;
        }
       }
      }
     } else {
      $$4492 = $225;$$4520 = $$1517;$$8 = $$3484$lcssa;
     }
    }
    $268 = ((($$4492)) + 4|0);
    $269 = ($$4502$lcssa>>>0)>($268>>>0);
    $spec$select547 = $269 ? $268 : $$4502$lcssa;
    $$5521 = $$4520;$$8506 = $spec$select547;$$9 = $$8;
   } else {
    $$5521 = $$1517;$$8506 = $$4502$lcssa;$$9 = $$3484$lcssa;
   }
   $270 = (0 - ($$5521))|0;
   $271 = ($$8506>>>0)>($$9>>>0);
   L109: do {
    if ($271) {
     $$9507625 = $$8506;
     while(1) {
      $273 = ((($$9507625)) + -4|0);
      $274 = HEAP32[$273>>2]|0;
      $275 = ($274|0)==(0);
      if (!($275)) {
       $$9507$lcssa = $$9507625;$$lcssa583 = 1;
       break L109;
      }
      $272 = ($273>>>0)>($$9>>>0);
      if ($272) {
       $$9507625 = $273;
      } else {
       $$9507$lcssa = $273;$$lcssa583 = 0;
       break;
      }
     }
    } else {
     $$9507$lcssa = $$8506;$$lcssa583 = 0;
    }
   } while(0);
   do {
    if ($211) {
     $not$ = $212 ^ 1;
     $276 = $not$&1;
     $spec$select548 = (($spec$select539) + ($276))|0;
     $277 = ($spec$select548|0)>($$5521|0);
     $278 = ($$5521|0)>(-5);
     $or$cond6 = $277 & $278;
     if ($or$cond6) {
      $279 = (($5) + -1)|0;
      $$neg571 = (($spec$select548) + -1)|0;
      $280 = (($$neg571) - ($$5521))|0;
      $$0479 = $279;$$2476 = $280;
     } else {
      $281 = (($5) + -2)|0;
      $282 = (($spec$select548) + -1)|0;
      $$0479 = $281;$$2476 = $282;
     }
     $283 = $4 & 8;
     $284 = ($283|0)==(0);
     if ($284) {
      if ($$lcssa583) {
       $285 = ((($$9507$lcssa)) + -4|0);
       $286 = HEAP32[$285>>2]|0;
       $287 = ($286|0)==(0);
       if ($287) {
        $$2531 = 9;
       } else {
        $288 = (($286>>>0) % 10)&-1;
        $289 = ($288|0)==(0);
        if ($289) {
         $$1530621 = 0;$$3535620 = 10;
         while(1) {
          $290 = ($$3535620*10)|0;
          $291 = (($$1530621) + 1)|0;
          $292 = (($286>>>0) % ($290>>>0))&-1;
          $293 = ($292|0)==(0);
          if ($293) {
           $$1530621 = $291;$$3535620 = $290;
          } else {
           $$2531 = $291;
           break;
          }
         }
        } else {
         $$2531 = 0;
        }
       }
      } else {
       $$2531 = 9;
      }
      $294 = $$0479 | 32;
      $295 = ($294|0)==(102);
      $296 = $$9507$lcssa;
      $297 = (($296) - ($132))|0;
      $298 = $297 >> 2;
      $299 = ($298*9)|0;
      $300 = (($299) + -9)|0;
      if ($295) {
       $301 = (($300) - ($$2531))|0;
       $302 = ($301|0)>(0);
       $spec$select549 = $302 ? $301 : 0;
       $303 = ($$2476|0)<($spec$select549|0);
       $spec$select562 = $303 ? $$2476 : $spec$select549;
       $$1480 = $$0479;$$3477 = $spec$select562;
       break;
      } else {
       $304 = (($300) + ($$5521))|0;
       $305 = (($304) - ($$2531))|0;
       $306 = ($305|0)>(0);
       $spec$select551 = $306 ? $305 : 0;
       $307 = ($$2476|0)<($spec$select551|0);
       $spec$select563 = $307 ? $$2476 : $spec$select551;
       $$1480 = $$0479;$$3477 = $spec$select563;
       break;
      }
     } else {
      $$1480 = $$0479;$$3477 = $$2476;
     }
    } else {
     $$1480 = $5;$$3477 = $spec$select539;
    }
   } while(0);
   $308 = ($$3477|0)!=(0);
   $309 = $4 >>> 3;
   $$lobit = $309 & 1;
   $310 = $308 ? 1 : $$lobit;
   $311 = $$1480 | 32;
   $312 = ($311|0)==(102);
   if ($312) {
    $313 = ($$5521|0)>(0);
    $314 = $313 ? $$5521 : 0;
    $$2515 = 0;$$pn = $314;
   } else {
    $315 = ($$5521|0)<(0);
    $316 = $315 ? $270 : $$5521;
    $317 = ($316|0)<(0);
    $318 = $317 << 31 >> 31;
    $319 = (_fmt_u($316,$318,$11)|0);
    $320 = $11;
    $321 = $319;
    $322 = (($320) - ($321))|0;
    $323 = ($322|0)<(2);
    if ($323) {
     $$1514614 = $319;
     while(1) {
      $324 = ((($$1514614)) + -1|0);
      HEAP8[$324>>0] = 48;
      $325 = $324;
      $326 = (($320) - ($325))|0;
      $327 = ($326|0)<(2);
      if ($327) {
       $$1514614 = $324;
      } else {
       $$1514$lcssa = $324;
       break;
      }
     }
    } else {
     $$1514$lcssa = $319;
    }
    $328 = $$5521 >> 31;
    $329 = $328 & 2;
    $330 = (($329) + 43)|0;
    $331 = $330&255;
    $332 = ((($$1514$lcssa)) + -1|0);
    HEAP8[$332>>0] = $331;
    $333 = $$1480&255;
    $334 = ((($$1514$lcssa)) + -2|0);
    HEAP8[$334>>0] = $333;
    $335 = $334;
    $336 = (($320) - ($335))|0;
    $$2515 = $334;$$pn = $336;
   }
   $337 = (($$0522) + 1)|0;
   $338 = (($337) + ($$3477))|0;
   $$1528 = (($338) + ($310))|0;
   $339 = (($$1528) + ($$pn))|0;
   _pad_676($0,32,$2,$339,$4);
   _out_670($0,$$0523,$$0522);
   $340 = $4 ^ 65536;
   _pad_676($0,48,$2,$339,$340);
   if ($312) {
    $341 = ($$9>>>0)>($$0498>>>0);
    $spec$select554 = $341 ? $$0498 : $$9;
    $342 = ((($8)) + 9|0);
    $343 = $342;
    $344 = ((($8)) + 8|0);
    $$5493603 = $spec$select554;
    while(1) {
     $345 = HEAP32[$$5493603>>2]|0;
     $346 = (_fmt_u($345,0,$342)|0);
     $347 = ($$5493603|0)==($spec$select554|0);
     if ($347) {
      $353 = ($346|0)==($342|0);
      if ($353) {
       HEAP8[$344>>0] = 48;
       $$1465 = $344;
      } else {
       $$1465 = $346;
      }
     } else {
      $348 = ($346>>>0)>($8>>>0);
      if ($348) {
       $349 = $346;
       $350 = (($349) - ($9))|0;
       _memset(($8|0),48,($350|0))|0;
       $$0464599 = $346;
       while(1) {
        $351 = ((($$0464599)) + -1|0);
        $352 = ($351>>>0)>($8>>>0);
        if ($352) {
         $$0464599 = $351;
        } else {
         $$1465 = $351;
         break;
        }
       }
      } else {
       $$1465 = $346;
      }
     }
     $354 = $$1465;
     $355 = (($343) - ($354))|0;
     _out_670($0,$$1465,$355);
     $356 = ((($$5493603)) + 4|0);
     $357 = ($356>>>0)>($$0498>>>0);
     if ($357) {
      break;
     } else {
      $$5493603 = $356;
     }
    }
    $$not = $308 ^ 1;
    $358 = $4 & 8;
    $359 = ($358|0)==(0);
    $or$cond556 = $359 & $$not;
    if (!($or$cond556)) {
     _out_670($0,38056,1);
    }
    $360 = ($356>>>0)<($$9507$lcssa>>>0);
    $361 = ($$3477|0)>(0);
    $362 = $360 & $361;
    if ($362) {
     $$4478594 = $$3477;$$6494593 = $356;
     while(1) {
      $363 = HEAP32[$$6494593>>2]|0;
      $364 = (_fmt_u($363,0,$342)|0);
      $365 = ($364>>>0)>($8>>>0);
      if ($365) {
       $366 = $364;
       $367 = (($366) - ($9))|0;
       _memset(($8|0),48,($367|0))|0;
       $$0463588 = $364;
       while(1) {
        $368 = ((($$0463588)) + -1|0);
        $369 = ($368>>>0)>($8>>>0);
        if ($369) {
         $$0463588 = $368;
        } else {
         $$0463$lcssa = $368;
         break;
        }
       }
      } else {
       $$0463$lcssa = $364;
      }
      $370 = ($$4478594|0)<(9);
      $371 = $370 ? $$4478594 : 9;
      _out_670($0,$$0463$lcssa,$371);
      $372 = ((($$6494593)) + 4|0);
      $373 = (($$4478594) + -9)|0;
      $374 = ($372>>>0)<($$9507$lcssa>>>0);
      $375 = ($$4478594|0)>(9);
      $376 = $374 & $375;
      if ($376) {
       $$4478594 = $373;$$6494593 = $372;
      } else {
       $$4478$lcssa = $373;
       break;
      }
     }
    } else {
     $$4478$lcssa = $$3477;
    }
    $377 = (($$4478$lcssa) + 9)|0;
    _pad_676($0,48,$377,9,0);
   } else {
    $378 = ((($$9)) + 4|0);
    $spec$select557 = $$lcssa583 ? $$9507$lcssa : $378;
    $379 = ($$9>>>0)<($spec$select557>>>0);
    $380 = ($$3477|0)>(-1);
    $381 = $379 & $380;
    if ($381) {
     $382 = ((($8)) + 9|0);
     $383 = $4 & 8;
     $384 = ($383|0)==(0);
     $385 = $382;
     $386 = (0 - ($9))|0;
     $387 = ((($8)) + 8|0);
     $$5609 = $$3477;$$7495608 = $$9;
     while(1) {
      $388 = HEAP32[$$7495608>>2]|0;
      $389 = (_fmt_u($388,0,$382)|0);
      $390 = ($389|0)==($382|0);
      if ($390) {
       HEAP8[$387>>0] = 48;
       $$0 = $387;
      } else {
       $$0 = $389;
      }
      $391 = ($$7495608|0)==($$9|0);
      do {
       if ($391) {
        $395 = ((($$0)) + 1|0);
        _out_670($0,$$0,1);
        $396 = ($$5609|0)<(1);
        $or$cond559 = $384 & $396;
        if ($or$cond559) {
         $$2 = $395;
         break;
        }
        _out_670($0,38056,1);
        $$2 = $395;
       } else {
        $392 = ($$0>>>0)>($8>>>0);
        if (!($392)) {
         $$2 = $$0;
         break;
        }
        $scevgep711 = (($$0) + ($386)|0);
        $scevgep711712 = $scevgep711;
        _memset(($8|0),48,($scevgep711712|0))|0;
        $$1604 = $$0;
        while(1) {
         $393 = ((($$1604)) + -1|0);
         $394 = ($393>>>0)>($8>>>0);
         if ($394) {
          $$1604 = $393;
         } else {
          $$2 = $393;
          break;
         }
        }
       }
      } while(0);
      $397 = $$2;
      $398 = (($385) - ($397))|0;
      $399 = ($$5609|0)>($398|0);
      $400 = $399 ? $398 : $$5609;
      _out_670($0,$$2,$400);
      $401 = (($$5609) - ($398))|0;
      $402 = ((($$7495608)) + 4|0);
      $403 = ($402>>>0)<($spec$select557>>>0);
      $404 = ($401|0)>(-1);
      $405 = $403 & $404;
      if ($405) {
       $$5609 = $401;$$7495608 = $402;
      } else {
       $$5$lcssa = $401;
       break;
      }
     }
    } else {
     $$5$lcssa = $$3477;
    }
    $406 = (($$5$lcssa) + 18)|0;
    _pad_676($0,48,$406,18,0);
    $407 = $11;
    $408 = $$2515;
    $409 = (($407) - ($408))|0;
    _out_670($0,$$2515,$409);
   }
   $410 = $4 ^ 8192;
   _pad_676($0,32,$2,$339,$410);
   $$sink757 = $339;
  }
 } while(0);
 $411 = ($$sink757|0)<($2|0);
 $$560 = $411 ? $2 : $$sink757;
 STACKTOP = sp;return ($$560|0);
}
function ___DOUBLE_BITS_677($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($2);
 return ($1|0);
}
function _frexpl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_frexp($0,$1));
 return (+$2);
}
function _frexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$016 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $storemerge = 0, $trunc$clear = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $5 = tempRet0;
 $6 = $4&65535;
 $trunc$clear = $6 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $7 = $0 != 0.0;
  if ($7) {
   $8 = $0 * 1.8446744073709552E+19;
   $9 = (+_frexp($8,$1));
   $10 = HEAP32[$1>>2]|0;
   $11 = (($10) + -64)|0;
   $$016 = $9;$storemerge = $11;
  } else {
   $$016 = $0;$storemerge = 0;
  }
  HEAP32[$1>>2] = $storemerge;
  $$0 = $$016;
  break;
 }
 case 2047:  {
  $$0 = $0;
  break;
 }
 default: {
  $12 = $4 & 2047;
  $13 = (($12) + -1022)|0;
  HEAP32[$1>>2] = $13;
  $14 = $3 & -2146435073;
  $15 = $14 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $15;$16 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $16;
 }
 }
 return (+$$0);
}
function _wcrtomb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 do {
  if ($3) {
   $$0 = 1;
  } else {
   $4 = ($1>>>0)<(128);
   if ($4) {
    $5 = $1&255;
    HEAP8[$0>>0] = $5;
    $$0 = 1;
    break;
   }
   $6 = (___pthread_self_907()|0);
   $7 = ((($6)) + 188|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $11 = $1 & -128;
    $12 = ($11|0)==(57216);
    if ($12) {
     $14 = $1&255;
     HEAP8[$0>>0] = $14;
     $$0 = 1;
     break;
    } else {
     $13 = (___errno_location()|0);
     HEAP32[$13>>2] = 84;
     $$0 = -1;
     break;
    }
   }
   $15 = ($1>>>0)<(2048);
   if ($15) {
    $16 = $1 >>> 6;
    $17 = $16 | 192;
    $18 = $17&255;
    $19 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $18;
    $20 = $1 & 63;
    $21 = $20 | 128;
    $22 = $21&255;
    HEAP8[$19>>0] = $22;
    $$0 = 2;
    break;
   }
   $23 = ($1>>>0)<(55296);
   $24 = $1 & -8192;
   $25 = ($24|0)==(57344);
   $or$cond = $23 | $25;
   if ($or$cond) {
    $26 = $1 >>> 12;
    $27 = $26 | 224;
    $28 = $27&255;
    $29 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $28;
    $30 = $1 >>> 6;
    $31 = $30 & 63;
    $32 = $31 | 128;
    $33 = $32&255;
    $34 = ((($0)) + 2|0);
    HEAP8[$29>>0] = $33;
    $35 = $1 & 63;
    $36 = $35 | 128;
    $37 = $36&255;
    HEAP8[$34>>0] = $37;
    $$0 = 3;
    break;
   }
   $38 = (($1) + -65536)|0;
   $39 = ($38>>>0)<(1048576);
   if ($39) {
    $40 = $1 >>> 18;
    $41 = $40 | 240;
    $42 = $41&255;
    $43 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $42;
    $44 = $1 >>> 12;
    $45 = $44 & 63;
    $46 = $45 | 128;
    $47 = $46&255;
    $48 = ((($0)) + 2|0);
    HEAP8[$43>>0] = $47;
    $49 = $1 >>> 6;
    $50 = $49 & 63;
    $51 = $50 | 128;
    $52 = $51&255;
    $53 = ((($0)) + 3|0);
    HEAP8[$48>>0] = $52;
    $54 = $1 & 63;
    $55 = $54 | 128;
    $56 = $55&255;
    HEAP8[$53>>0] = $56;
    $$0 = 4;
    break;
   } else {
    $57 = (___errno_location()|0);
    HEAP32[$57>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___pthread_self_907() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___pthread_self_85() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___strerror_l($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$012$lcssa = 0, $$01214 = 0, $$016 = 0, $$113 = 0, $$115 = 0, $$115$ph = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$016 = 0;
 while(1) {
  $2 = (34016 + ($$016)|0);
  $3 = HEAP8[$2>>0]|0;
  $4 = $3&255;
  $5 = ($4|0)==($0|0);
  if ($5) {
   label = 4;
   break;
  }
  $6 = (($$016) + 1)|0;
  $7 = ($6|0)==(87);
  if ($7) {
   $$115$ph = 87;
   label = 5;
   break;
  } else {
   $$016 = $6;
  }
 }
 if ((label|0) == 4) {
  $8 = ($$016|0)==(0);
  if ($8) {
   $$012$lcssa = 34112;
  } else {
   $$115$ph = $$016;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $$01214 = 34112;$$115 = $$115$ph;
  while(1) {
   $$113 = $$01214;
   while(1) {
    $9 = HEAP8[$$113>>0]|0;
    $10 = ($9<<24>>24)==(0);
    $11 = ((($$113)) + 1|0);
    if ($10) {
     break;
    } else {
     $$113 = $11;
    }
   }
   $12 = (($$115) + -1)|0;
   $13 = ($12|0)==(0);
   if ($13) {
    $$012$lcssa = $11;
    break;
   } else {
    $$01214 = $11;$$115 = $12;
   }
  }
 }
 $14 = ((($1)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (___lctrans($$012$lcssa,$15)|0);
 return ($16|0);
}
function ___lctrans($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___lctrans_impl($0,$1)|0);
 return ($2|0);
}
function ___sin($0,$1,$2) {
 $0 = +$0;
 $1 = +$1;
 $2 = $2|0;
 var $$0 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $3 = 0.0;
 var $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $0 * $0;
 $4 = $3 * $3;
 $5 = $3 * 2.7557313707070068E-6;
 $6 = $5 + -1.9841269829857949E-4;
 $7 = $3 * $6;
 $8 = $7 + 0.0083333333333224895;
 $9 = $3 * $4;
 $10 = $3 * 1.5896909952115501E-10;
 $11 = $10 + -2.5050760253406863E-8;
 $12 = $9 * $11;
 $13 = $12 + $8;
 $14 = $3 * $0;
 $15 = ($2|0)==(0);
 if ($15) {
  $16 = $3 * $13;
  $17 = $16 + -0.16666666666666632;
  $18 = $14 * $17;
  $19 = $18 + $0;
  $$0 = $19;
 } else {
  $20 = $1 * 0.5;
  $21 = $14 * $13;
  $22 = $20 - $21;
  $23 = $3 * $22;
  $24 = $23 - $1;
  $25 = $14 * 0.16666666666666632;
  $26 = $25 + $24;
  $27 = $0 - $26;
  $$0 = $27;
 }
 return (+$$0);
}
function ___cos($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0;
 var $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $0 * $0;
 $3 = $2 * $2;
 $4 = $2 * 2.4801587289476729E-5;
 $5 = $4 + -0.001388888888887411;
 $6 = $2 * $5;
 $7 = $6 + 0.041666666666666602;
 $8 = $2 * $7;
 $9 = $3 * $3;
 $10 = $2 * 1.1359647557788195E-11;
 $11 = 2.0875723212981748E-9 - $10;
 $12 = $2 * $11;
 $13 = $12 + -2.7557314351390663E-7;
 $14 = $9 * $13;
 $15 = $8 + $14;
 $16 = $2 * 0.5;
 $17 = 1.0 - $16;
 $18 = 1.0 - $17;
 $19 = $18 - $16;
 $20 = $2 * $15;
 $21 = $0 * $1;
 $22 = $20 - $21;
 $23 = $19 + $22;
 $24 = $17 + $23;
 return (+$24);
}
function ___rem_pio2($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0144 = 0, $$0145148 = 0.0, $$0146 = 0.0, $$0147 = 0.0, $$0149 = 0, $$1$lcssa = 0, $$phi$trans$insert = 0, $$pre = 0.0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0.0, $11 = 0;
 var $110 = 0, $111 = 0.0, $112 = 0.0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0.0, $125 = 0.0, $126 = 0, $127 = 0.0, $128 = 0.0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0.0, $133 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0.0;
 var $27 = 0.0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0, $44 = 0.0;
 var $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0.0, $62 = 0.0;
 var $63 = 0.0, $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0;
 var $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0;
 var $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 16|0;
 $3 = sp;
 HEAPF64[tempDoublePtr>>3] = $0;$4 = HEAP32[tempDoublePtr>>2]|0;
 $5 = HEAP32[tempDoublePtr+4>>2]|0;
 $6 = (_bitshift64Lshr(($4|0),($5|0),63)|0);
 $7 = tempRet0;
 $8 = $5 & 2147483647;
 $9 = ($8>>>0)<(1074752123);
 do {
  if ($9) {
   $10 = $5 & 1048575;
   $11 = ($10|0)==(598523);
   if ($11) {
    label = 21;
   } else {
    $12 = ($8>>>0)<(1073928573);
    $13 = ($6|0)!=(0);
    if ($12) {
     if ($13) {
      $19 = $0 + 1.5707963267341256;
      $20 = $19 + 6.0771005065061922E-11;
      HEAPF64[$1>>3] = $20;
      $21 = $19 - $20;
      $22 = $21 + 6.0771005065061922E-11;
      $23 = ((($1)) + 8|0);
      HEAPF64[$23>>3] = $22;
      $$0144 = -1;
      break;
     } else {
      $14 = $0 + -1.5707963267341256;
      $15 = $14 + -6.0771005065061922E-11;
      HEAPF64[$1>>3] = $15;
      $16 = $14 - $15;
      $17 = $16 + -6.0771005065061922E-11;
      $18 = ((($1)) + 8|0);
      HEAPF64[$18>>3] = $17;
      $$0144 = 1;
      break;
     }
    } else {
     if ($13) {
      $29 = $0 + 3.1415926534682512;
      $30 = $29 + 1.2154201013012384E-10;
      HEAPF64[$1>>3] = $30;
      $31 = $29 - $30;
      $32 = $31 + 1.2154201013012384E-10;
      $33 = ((($1)) + 8|0);
      HEAPF64[$33>>3] = $32;
      $$0144 = -2;
      break;
     } else {
      $24 = $0 + -3.1415926534682512;
      $25 = $24 + -1.2154201013012384E-10;
      HEAPF64[$1>>3] = $25;
      $26 = $24 - $25;
      $27 = $26 + -1.2154201013012384E-10;
      $28 = ((($1)) + 8|0);
      HEAPF64[$28>>3] = $27;
      $$0144 = 2;
      break;
     }
    }
   }
  } else {
   $34 = ($8>>>0)<(1075594812);
   if ($34) {
    $35 = ($8>>>0)<(1075183037);
    if ($35) {
     $36 = ($8|0)==(1074977148);
     if ($36) {
      label = 21;
      break;
     }
     $37 = ($6|0)==(0);
     if ($37) {
      $38 = $0 + -4.7123889802023768;
      $39 = $38 + -1.8231301519518578E-10;
      HEAPF64[$1>>3] = $39;
      $40 = $38 - $39;
      $41 = $40 + -1.8231301519518578E-10;
      $42 = ((($1)) + 8|0);
      HEAPF64[$42>>3] = $41;
      $$0144 = 3;
      break;
     } else {
      $43 = $0 + 4.7123889802023768;
      $44 = $43 + 1.8231301519518578E-10;
      HEAPF64[$1>>3] = $44;
      $45 = $43 - $44;
      $46 = $45 + 1.8231301519518578E-10;
      $47 = ((($1)) + 8|0);
      HEAPF64[$47>>3] = $46;
      $$0144 = -3;
      break;
     }
    } else {
     $48 = ($8|0)==(1075388923);
     if ($48) {
      label = 21;
      break;
     }
     $49 = ($6|0)==(0);
     if ($49) {
      $50 = $0 + -6.2831853069365025;
      $51 = $50 + -2.4308402026024769E-10;
      HEAPF64[$1>>3] = $51;
      $52 = $50 - $51;
      $53 = $52 + -2.4308402026024769E-10;
      $54 = ((($1)) + 8|0);
      HEAPF64[$54>>3] = $53;
      $$0144 = 4;
      break;
     } else {
      $55 = $0 + 6.2831853069365025;
      $56 = $55 + 2.4308402026024769E-10;
      HEAPF64[$1>>3] = $56;
      $57 = $55 - $56;
      $58 = $57 + 2.4308402026024769E-10;
      $59 = ((($1)) + 8|0);
      HEAPF64[$59>>3] = $58;
      $$0144 = -4;
      break;
     }
    }
   }
   $60 = ($8>>>0)<(1094263291);
   if ($60) {
    label = 21;
   } else {
    $102 = ($8>>>0)>(2146435071);
    if ($102) {
     $103 = $0 - $0;
     $104 = ((($1)) + 8|0);
     HEAPF64[$104>>3] = $103;
     HEAPF64[$1>>3] = $103;
     $$0144 = 0;
     break;
    }
    $105 = $5 & 1048575;
    $106 = $105 | 1096810496;
    HEAP32[tempDoublePtr>>2] = $4;HEAP32[tempDoublePtr+4>>2] = $106;$107 = +HEAPF64[tempDoublePtr>>3];
    $$0145148 = $107;$$0149 = 0;
    while(1) {
     $108 = (~~(($$0145148)));
     $109 = (+($108|0));
     $110 = (($2) + ($$0149<<3)|0);
     HEAPF64[$110>>3] = $109;
     $111 = $$0145148 - $109;
     $112 = $111 * 16777216.0;
     $113 = (($$0149) + 1)|0;
     $exitcond = ($113|0)==(2);
     if ($exitcond) {
      break;
     } else {
      $$0145148 = $112;$$0149 = $113;
     }
    }
    $114 = ((($2)) + 16|0);
    HEAPF64[$114>>3] = $112;
    $115 = $112 == 0.0;
    if ($115) {
     $116 = 1;
     while(1) {
      $$phi$trans$insert = (($2) + ($116<<3)|0);
      $$pre = +HEAPF64[$$phi$trans$insert>>3];
      $117 = $$pre == 0.0;
      $118 = (($116) + -1)|0;
      if ($117) {
       $116 = $118;
      } else {
       $$1$lcssa = $116;
       break;
      }
     }
    } else {
     $$1$lcssa = 2;
    }
    $119 = $8 >>> 20;
    $120 = (($119) + -1046)|0;
    $121 = (($$1$lcssa) + 1)|0;
    $122 = (___rem_pio2_large($2,$3,$120,$121,1)|0);
    $123 = ($6|0)==(0);
    $124 = +HEAPF64[$3>>3];
    if ($123) {
     HEAPF64[$1>>3] = $124;
     $131 = ((($3)) + 8|0);
     $132 = +HEAPF64[$131>>3];
     $133 = ((($1)) + 8|0);
     HEAPF64[$133>>3] = $132;
     $$0144 = $122;
     break;
    } else {
     $125 = - $124;
     HEAPF64[$1>>3] = $125;
     $126 = ((($3)) + 8|0);
     $127 = +HEAPF64[$126>>3];
     $128 = - $127;
     $129 = ((($1)) + 8|0);
     HEAPF64[$129>>3] = $128;
     $130 = (0 - ($122))|0;
     $$0144 = $130;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 21) {
  $61 = $0 * 0.63661977236758138;
  $62 = $61 + 6755399441055744.0;
  $63 = $62 + -6755399441055744.0;
  $64 = (~~(($63)));
  $65 = $63 * 1.5707963267341256;
  $66 = $0 - $65;
  $67 = $63 * 6.0771005065061922E-11;
  $68 = $66 - $67;
  HEAPF64[$1>>3] = $68;
  HEAPF64[tempDoublePtr>>3] = $68;$69 = HEAP32[tempDoublePtr>>2]|0;
  $70 = HEAP32[tempDoublePtr+4>>2]|0;
  $71 = (_bitshift64Lshr(($69|0),($70|0),52)|0);
  $72 = tempRet0;
  $73 = $71 & 2047;
  $74 = $8 >>> 20;
  $75 = (($74) - ($73))|0;
  $76 = ($75|0)>(16);
  if ($76) {
   $77 = $63 * 6.077100506303966E-11;
   $78 = $66 - $77;
   $79 = $63 * 2.0222662487959506E-21;
   $80 = $66 - $78;
   $81 = $80 - $77;
   $82 = $79 - $81;
   $83 = $78 - $82;
   HEAPF64[$1>>3] = $83;
   HEAPF64[tempDoublePtr>>3] = $83;$84 = HEAP32[tempDoublePtr>>2]|0;
   $85 = HEAP32[tempDoublePtr+4>>2]|0;
   $86 = (_bitshift64Lshr(($84|0),($85|0),52)|0);
   $87 = tempRet0;
   $88 = $86 & 2047;
   $89 = (($74) - ($88))|0;
   $90 = ($89|0)>(49);
   $91 = $63 * 2.0222662487111665E-21;
   $92 = $78 - $91;
   $93 = $63 * 8.4784276603688995E-32;
   $94 = $78 - $92;
   $95 = $94 - $91;
   $96 = $93 - $95;
   if ($90) {
    $97 = $92 - $96;
    HEAPF64[$1>>3] = $97;
    $$0146 = $96;$$0147 = $92;$99 = $97;
   } else {
    $$0146 = $82;$$0147 = $78;$99 = $83;
   }
  } else {
   $$0146 = $67;$$0147 = $66;$99 = $68;
  }
  $98 = $$0147 - $99;
  $100 = $98 - $$0146;
  $101 = ((($1)) + 8|0);
  HEAPF64[$101>>3] = $100;
  $$0144 = $64;
 }
 STACKTOP = sp;return ($$0144|0);
}
function ___rem_pio2_large($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0.0, $$0248$lcssa = 0.0, $$0248336 = 0.0, $$0250 = 0, $$0250278 = 0, $$0250279 = 0, $$0251 = 0, $$0251$in = 0, $$0253 = 0, $$0256 = 0, $$0258373 = 0, $$0263372 = 0, $$0271 = 0, $$0271277 = 0, $$0273$lcssa = 0, $$0273341 = 0, $$0363 = 0.0, $$1$lcssa = 0.0, $$10291 = 0, $$11313 = 0;
 var $$12309 = 0, $$1249 = 0.0, $$1252 = 0, $$1252$ph = 0, $$1254 = 0, $$1254$in = 0, $$1257318 = 0, $$1259362 = 0, $$1264368 = 0, $$1272 = 0, $$1274 = 0, $$1274$ph = 0, $$13303 = 0, $$1354 = 0.0, $$2255 = 0, $$2260335 = 0, $$2265334 = 0, $$2330 = 0.0, $$3261347 = 0, $$3266342 = 0;
 var $$3319 = 0.0, $$4$lcssa = 0.0, $$4262353 = 0, $$4267348 = 0, $$4267348$in = 0, $$4290 = 0.0, $$5$lcssa = 0.0, $$5268361 = 0, $$5268361$in = 0, $$5298 = 0.0, $$6$lcssa = 0.0, $$6269329 = 0, $$6292 = 0.0, $$7$lcssa = 0.0, $$7270324 = 0, $$7304 = 0.0, $$8289 = 0, $$9297 = 0, $$neg = 0, $$neg281 = 0;
 var $$phi$trans$insert = 0, $$phi$trans$insert395 = 0, $$pre = 0.0, $$pre396 = 0.0, $$sink = 0, $$sink425 = 0, $$sink427 = 0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0, $123 = 0, $124 = 0.0, $125 = 0, $126 = 0, $127 = 0.0, $128 = 0.0, $129 = 0.0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0.0, $156 = 0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0.0, $163 = 0, $164 = 0, $165 = 0.0;
 var $166 = 0.0, $167 = 0.0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0, $183 = 0.0;
 var $184 = 0.0, $185 = 0, $186 = 0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0, $193 = 0, $194 = 0.0, $195 = 0.0, $196 = 0, $197 = 0.0, $198 = 0.0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0.0, $204 = 0, $205 = 0.0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0.0, $222 = 0.0, $223 = 0, $224 = 0, $225 = 0, $226 = 0.0, $227 = 0, $228 = 0.0, $229 = 0, $23 = 0.0, $230 = 0, $231 = 0.0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0.0, $237 = 0, $238 = 0;
 var $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond = 0, $exitcond391 = 0, $exitcond392 = 0, $exitcond393 = 0, $exitcond394 = 0, $or$cond = 0, $spec$store$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(560|0);
 $5 = sp + 480|0;
 $6 = sp + 320|0;
 $7 = sp + 160|0;
 $8 = sp;
 $9 = (35920 + ($4<<2)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($3) + -1)|0;
 $12 = (($2) + -3)|0;
 $13 = (($12|0) / 24)&-1;
 $14 = ($13|0)>(0);
 $spec$store$select = $14 ? $13 : 0;
 $$neg = Math_imul($spec$store$select, -24)|0;
 $$neg281 = (($2) + -24)|0;
 $15 = (($$neg281) + ($$neg))|0;
 $16 = (($10) + ($11))|0;
 $17 = ($16|0)<(0);
 if (!($17)) {
  $18 = (($spec$store$select) - ($11))|0;
  $19 = (($10) + ($3))|0;
  $$0258373 = $18;$$0263372 = 0;
  while(1) {
   $20 = ($$0258373|0)<(0);
   if ($20) {
    $25 = 0.0;
   } else {
    $21 = (35936 + ($$0258373<<2)|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (+($22|0));
    $25 = $23;
   }
   $24 = (($6) + ($$0263372<<3)|0);
   HEAPF64[$24>>3] = $25;
   $26 = (($$0263372) + 1)|0;
   $27 = (($$0258373) + 1)|0;
   $exitcond394 = ($26|0)==($19|0);
   if ($exitcond394) {
    break;
   } else {
    $$0258373 = $27;$$0263372 = $26;
   }
  }
 }
 $28 = ($3|0)>(0);
 $$1264368 = 0;
 while(1) {
  if ($28) {
   $29 = (($$1264368) + ($11))|0;
   $$0363 = 0.0;$$1259362 = 0;
   while(1) {
    $30 = (($0) + ($$1259362<<3)|0);
    $31 = +HEAPF64[$30>>3];
    $32 = (($29) - ($$1259362))|0;
    $33 = (($6) + ($32<<3)|0);
    $34 = +HEAPF64[$33>>3];
    $35 = $31 * $34;
    $36 = $$0363 + $35;
    $37 = (($$1259362) + 1)|0;
    $exitcond393 = ($37|0)==($3|0);
    if ($exitcond393) {
     $$0$lcssa = $36;
     break;
    } else {
     $$0363 = $36;$$1259362 = $37;
    }
   }
  } else {
   $$0$lcssa = 0.0;
  }
  $38 = (($8) + ($$1264368<<3)|0);
  HEAPF64[$38>>3] = $$0$lcssa;
  $39 = (($$1264368) + 1)|0;
  $40 = ($$1264368|0)<($10|0);
  if ($40) {
   $$1264368 = $39;
  } else {
   break;
  }
 }
 $41 = ($15|0)>(0);
 $42 = (24 - ($15))|0;
 $43 = (23 - ($15))|0;
 $44 = ($15|0)==(0);
 $45 = ($3|0)>(0);
 $$0253 = $10;
 while(1) {
  $46 = (($8) + ($$0253<<3)|0);
  $47 = +HEAPF64[$46>>3];
  $48 = ($$0253|0)>(0);
  if ($48) {
   $$0248336 = $47;$$2260335 = $$0253;$$2265334 = 0;
   while(1) {
    $49 = $$0248336 * 5.9604644775390625E-8;
    $50 = (~~(($49)));
    $51 = (+($50|0));
    $52 = $51 * 16777216.0;
    $53 = $$0248336 - $52;
    $54 = (~~(($53)));
    $55 = (($5) + ($$2265334<<2)|0);
    HEAP32[$55>>2] = $54;
    $56 = (($$2260335) + -1)|0;
    $57 = (($8) + ($56<<3)|0);
    $58 = +HEAPF64[$57>>3];
    $59 = $58 + $51;
    $60 = (($$2265334) + 1)|0;
    $61 = ($$2260335|0)>(1);
    if ($61) {
     $$0248336 = $59;$$2260335 = $56;$$2265334 = $60;
    } else {
     $$0248$lcssa = $59;
     break;
    }
   }
  } else {
   $$0248$lcssa = $47;
  }
  $62 = (+_scalbn($$0248$lcssa,$15));
  $63 = $62 * 0.125;
  $64 = (+Math_floor((+$63)));
  $65 = $64 * 8.0;
  $66 = $62 - $65;
  $67 = (~~(($66)));
  $68 = (+($67|0));
  $69 = $66 - $68;
  do {
   if ($41) {
    $70 = (($$0253) + -1)|0;
    $71 = (($5) + ($70<<2)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = $72 >> $42;
    $74 = (($73) + ($67))|0;
    $75 = $73 << $42;
    $76 = (($72) - ($75))|0;
    HEAP32[$71>>2] = $76;
    $77 = $76 >> $43;
    $$0250 = $77;$$0271 = $74;
    label = 21;
   } else {
    if ($44) {
     $78 = (($$0253) + -1)|0;
     $79 = (($5) + ($78<<2)|0);
     $80 = HEAP32[$79>>2]|0;
     $81 = $80 >> 23;
     $$0250 = $81;$$0271 = $67;
     label = 21;
     break;
    } else {
     $82 = !($69 >= 0.5);
     if ($82) {
      $$0250279 = 0;$$1249 = $69;$$1272 = $67;
      break;
     } else {
      $$0250278 = 2;$$0271277 = $67;
      label = 22;
      break;
     }
    }
   }
  } while(0);
  if ((label|0) == 21) {
   label = 0;
   $83 = ($$0250|0)>(0);
   if ($83) {
    $$0250278 = $$0250;$$0271277 = $$0271;
    label = 22;
   } else {
    $$0250279 = $$0250;$$1249 = $69;$$1272 = $$0271;
   }
  }
  if ((label|0) == 22) {
   label = 0;
   $84 = (($$0271277) + 1)|0;
   if ($48) {
    $$0273341 = 0;$$3266342 = 0;
    while(1) {
     $85 = (($5) + ($$3266342<<2)|0);
     $86 = HEAP32[$85>>2]|0;
     $87 = ($$0273341|0)==(0);
     if ($87) {
      $88 = ($86|0)==(0);
      if ($88) {
       $$1274 = 0;
      } else {
       $$1274$ph = 1;$$sink425 = 16777216;
       label = 26;
      }
     } else {
      $$1274$ph = $$0273341;$$sink425 = 16777215;
      label = 26;
     }
     if ((label|0) == 26) {
      label = 0;
      $89 = (($$sink425) - ($86))|0;
      HEAP32[$85>>2] = $89;
      $$1274 = $$1274$ph;
     }
     $90 = (($$3266342) + 1)|0;
     $exitcond391 = ($90|0)==($$0253|0);
     if ($exitcond391) {
      $$0273$lcssa = $$1274;
      break;
     } else {
      $$0273341 = $$1274;$$3266342 = $90;
     }
    }
   } else {
    $$0273$lcssa = 0;
   }
   L44: do {
    if ($41) {
     switch ($15|0) {
     case 1:  {
      $91 = (($$0253) + -1)|0;
      $92 = (($5) + ($91<<2)|0);
      $93 = HEAP32[$92>>2]|0;
      $94 = $93 & 8388607;
      HEAP32[$92>>2] = $94;
      break L44;
      break;
     }
     case 2:  {
      $95 = (($$0253) + -1)|0;
      $96 = (($5) + ($95<<2)|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = $97 & 4194303;
      HEAP32[$96>>2] = $98;
      break L44;
      break;
     }
     default: {
      break L44;
     }
     }
    }
   } while(0);
   $99 = ($$0250278|0)==(2);
   if ($99) {
    $100 = 1.0 - $69;
    $101 = ($$0273$lcssa|0)==(0);
    if ($101) {
     $$0250279 = 2;$$1249 = $100;$$1272 = $84;
    } else {
     $102 = (+_scalbn(1.0,$15));
     $103 = $100 - $102;
     $$0250279 = 2;$$1249 = $103;$$1272 = $84;
    }
   } else {
    $$0250279 = $$0250278;$$1249 = $69;$$1272 = $84;
   }
  }
  $104 = $$1249 == 0.0;
  if (!($104)) {
   label = 49;
   break;
  }
  $105 = ($$0253|0)>($10|0);
  if ($105) {
   $$3261347 = 0;$$4267348$in = $$0253;
   while(1) {
    $$4267348 = (($$4267348$in) + -1)|0;
    $106 = (($5) + ($$4267348<<2)|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = $107 | $$3261347;
    $109 = ($$4267348|0)>($10|0);
    if ($109) {
     $$3261347 = $108;$$4267348$in = $$4267348;
    } else {
     break;
    }
   }
   $110 = ($108|0)==(0);
   if (!($110)) {
    label = 41;
    break;
   }
  }
  $$0256 = 1;
  while(1) {
   $111 = (($10) - ($$0256))|0;
   $112 = (($5) + ($111<<2)|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = ($113|0)==(0);
   $115 = (($$0256) + 1)|0;
   if ($114) {
    $$0256 = $115;
   } else {
    break;
   }
  }
  $116 = (($$0256) + ($$0253))|0;
  $$5268361$in = $$0253;
  while(1) {
   $$5268361 = (($$5268361$in) + 1)|0;
   $117 = (($$5268361) + ($spec$store$select))|0;
   $118 = (35936 + ($117<<2)|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = (+($119|0));
   $121 = (($$5268361$in) + ($3))|0;
   $122 = (($6) + ($121<<3)|0);
   HEAPF64[$122>>3] = $120;
   if ($45) {
    $$1354 = 0.0;$$4262353 = 0;
    while(1) {
     $123 = (($0) + ($$4262353<<3)|0);
     $124 = +HEAPF64[$123>>3];
     $125 = (($121) - ($$4262353))|0;
     $126 = (($6) + ($125<<3)|0);
     $127 = +HEAPF64[$126>>3];
     $128 = $124 * $127;
     $129 = $$1354 + $128;
     $130 = (($$4262353) + 1)|0;
     $exitcond392 = ($130|0)==($3|0);
     if ($exitcond392) {
      $$1$lcssa = $129;
      break;
     } else {
      $$1354 = $129;$$4262353 = $130;
     }
    }
   } else {
    $$1$lcssa = 0.0;
   }
   $131 = (($8) + ($$5268361<<3)|0);
   HEAPF64[$131>>3] = $$1$lcssa;
   $132 = ($$5268361|0)<($116|0);
   if ($132) {
    $$5268361$in = $$5268361;
   } else {
    break;
   }
  }
  $$0253 = $116;
 }
 if ((label|0) == 41) {
  $$0251$in = $15;$$1254$in = $$0253;
  while(1) {
   $$0251 = (($$0251$in) + -24)|0;
   $$1254 = (($$1254$in) + -1)|0;
   $133 = (($5) + ($$1254<<2)|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = ($134|0)==(0);
   if ($135) {
    $$0251$in = $$0251;$$1254$in = $$1254;
   } else {
    $$1252 = $$0251;$$2255 = $$1254;
    break;
   }
  }
 }
 else if ((label|0) == 49) {
  $136 = (0 - ($15))|0;
  $137 = (+_scalbn($$1249,$136));
  $138 = !($137 >= 16777216.0);
  if ($138) {
   $148 = (~~(($137)));
   $$1252$ph = $15;$$sink = $148;$$sink427 = $$0253;
  } else {
   $139 = $137 * 5.9604644775390625E-8;
   $140 = (~~(($139)));
   $141 = (+($140|0));
   $142 = $141 * 16777216.0;
   $143 = $137 - $142;
   $144 = (~~(($143)));
   $145 = (($5) + ($$0253<<2)|0);
   HEAP32[$145>>2] = $144;
   $146 = (($$0253) + 1)|0;
   $147 = (($$neg) + ($2))|0;
   $$1252$ph = $147;$$sink = $140;$$sink427 = $146;
  }
  $149 = (($5) + ($$sink427<<2)|0);
  HEAP32[$149>>2] = $$sink;
  $$1252 = $$1252$ph;$$2255 = $$sink427;
 }
 $150 = (+_scalbn(1.0,$$1252));
 $151 = ($$2255|0)>(-1);
 if ($151) {
  $$2330 = $150;$$6269329 = $$2255;
  while(1) {
   $152 = (($5) + ($$6269329<<2)|0);
   $153 = HEAP32[$152>>2]|0;
   $154 = (+($153|0));
   $155 = $$2330 * $154;
   $156 = (($8) + ($$6269329<<3)|0);
   HEAPF64[$156>>3] = $155;
   $157 = $$2330 * 5.9604644775390625E-8;
   $158 = (($$6269329) + -1)|0;
   $159 = ($$6269329|0)>(0);
   if ($159) {
    $$2330 = $157;$$6269329 = $158;
   } else {
    break;
   }
  }
  if ($151) {
   $$7270324 = $$2255;
   while(1) {
    $160 = (($$2255) - ($$7270324))|0;
    $$1257318 = 0;$$3319 = 0.0;
    while(1) {
     $161 = (36208 + ($$1257318<<3)|0);
     $162 = +HEAPF64[$161>>3];
     $163 = (($$1257318) + ($$7270324))|0;
     $164 = (($8) + ($163<<3)|0);
     $165 = +HEAPF64[$164>>3];
     $166 = $162 * $165;
     $167 = $$3319 + $166;
     $168 = (($$1257318) + 1)|0;
     $169 = ($$1257318|0)>=($10|0);
     $170 = ($$1257318>>>0)>=($160>>>0);
     $or$cond = $169 | $170;
     if ($or$cond) {
      break;
     } else {
      $$1257318 = $168;$$3319 = $167;
     }
    }
    $171 = (($7) + ($160<<3)|0);
    HEAPF64[$171>>3] = $167;
    $172 = (($$7270324) + -1)|0;
    $173 = ($$7270324|0)>(0);
    if ($173) {
     $$7270324 = $172;
    } else {
     break;
    }
   }
  }
 }
 L93: do {
  switch ($4|0) {
  case 0:  {
   if ($151) {
    $$4290 = 0.0;$$8289 = $$2255;
    while(1) {
     $174 = (($7) + ($$8289<<3)|0);
     $175 = +HEAPF64[$174>>3];
     $176 = $$4290 + $175;
     $177 = (($$8289) + -1)|0;
     $178 = ($$8289|0)>(0);
     if ($178) {
      $$4290 = $176;$$8289 = $177;
     } else {
      $$4$lcssa = $176;
      break;
     }
    }
   } else {
    $$4$lcssa = 0.0;
   }
   $179 = ($$0250279|0)==(0);
   $180 = - $$4$lcssa;
   $181 = $179 ? $$4$lcssa : $180;
   HEAPF64[$1>>3] = $181;
   break;
  }
  case 2: case 1:  {
   if ($151) {
    $$5298 = 0.0;$$9297 = $$2255;
    while(1) {
     $182 = (($7) + ($$9297<<3)|0);
     $183 = +HEAPF64[$182>>3];
     $184 = $$5298 + $183;
     $185 = (($$9297) + -1)|0;
     $186 = ($$9297|0)>(0);
     if ($186) {
      $$5298 = $184;$$9297 = $185;
     } else {
      $$5$lcssa = $184;
      break;
     }
    }
   } else {
    $$5$lcssa = 0.0;
   }
   $187 = ($$0250279|0)==(0);
   $188 = - $$5$lcssa;
   $189 = $187 ? $$5$lcssa : $188;
   HEAPF64[$1>>3] = $189;
   $190 = +HEAPF64[$7>>3];
   $191 = $190 - $$5$lcssa;
   $192 = ($$2255|0)<(1);
   if ($192) {
    $$6$lcssa = $191;
   } else {
    $$10291 = 1;$$6292 = $191;
    while(1) {
     $193 = (($7) + ($$10291<<3)|0);
     $194 = +HEAPF64[$193>>3];
     $195 = $$6292 + $194;
     $196 = (($$10291) + 1)|0;
     $exitcond = ($$10291|0)==($$2255|0);
     if ($exitcond) {
      $$6$lcssa = $195;
      break;
     } else {
      $$10291 = $196;$$6292 = $195;
     }
    }
   }
   $197 = - $$6$lcssa;
   $198 = $187 ? $$6$lcssa : $197;
   $199 = ((($1)) + 8|0);
   HEAPF64[$199>>3] = $198;
   break;
  }
  case 3:  {
   $200 = ($$2255|0)>(0);
   if ($200) {
    $$phi$trans$insert = (($7) + ($$2255<<3)|0);
    $$pre = +HEAPF64[$$phi$trans$insert>>3];
    $$11313 = $$2255;$206 = $$pre;
    while(1) {
     $201 = (($$11313) + -1)|0;
     $202 = (($7) + ($201<<3)|0);
     $203 = +HEAPF64[$202>>3];
     $204 = (($7) + ($$11313<<3)|0);
     $205 = $203 + $206;
     $207 = $203 - $205;
     $208 = $206 + $207;
     HEAPF64[$204>>3] = $208;
     HEAPF64[$202>>3] = $205;
     $209 = ($$11313|0)>(1);
     if ($209) {
      $$11313 = $201;$206 = $205;
     } else {
      break;
     }
    }
    $210 = ($$2255|0)>(1);
    if ($210) {
     $$phi$trans$insert395 = (($7) + ($$2255<<3)|0);
     $$pre396 = +HEAPF64[$$phi$trans$insert395>>3];
     $$12309 = $$2255;$216 = $$pre396;
     while(1) {
      $211 = (($$12309) + -1)|0;
      $212 = (($7) + ($211<<3)|0);
      $213 = +HEAPF64[$212>>3];
      $214 = (($7) + ($$12309<<3)|0);
      $215 = $213 + $216;
      $217 = $213 - $215;
      $218 = $216 + $217;
      HEAPF64[$214>>3] = $218;
      HEAPF64[$212>>3] = $215;
      $219 = ($$12309|0)>(2);
      if ($219) {
       $$12309 = $211;$216 = $215;
      } else {
       break;
      }
     }
     if ($210) {
      $$13303 = $$2255;$$7304 = 0.0;
      while(1) {
       $220 = (($7) + ($$13303<<3)|0);
       $221 = +HEAPF64[$220>>3];
       $222 = $$7304 + $221;
       $223 = (($$13303) + -1)|0;
       $224 = ($$13303|0)>(2);
       if ($224) {
        $$13303 = $223;$$7304 = $222;
       } else {
        $$7$lcssa = $222;
        break;
       }
      }
     } else {
      $$7$lcssa = 0.0;
     }
    } else {
     $$7$lcssa = 0.0;
    }
   } else {
    $$7$lcssa = 0.0;
   }
   $225 = ($$0250279|0)==(0);
   $226 = +HEAPF64[$7>>3];
   if ($225) {
    HEAPF64[$1>>3] = $226;
    $227 = ((($7)) + 8|0);
    $228 = +HEAPF64[$227>>3];
    $229 = ((($1)) + 8|0);
    HEAPF64[$229>>3] = $228;
    $230 = ((($1)) + 16|0);
    HEAPF64[$230>>3] = $$7$lcssa;
    break L93;
   } else {
    $231 = - $226;
    HEAPF64[$1>>3] = $231;
    $232 = ((($7)) + 8|0);
    $233 = +HEAPF64[$232>>3];
    $234 = - $233;
    $235 = ((($1)) + 8|0);
    HEAPF64[$235>>3] = $234;
    $236 = - $$7$lcssa;
    $237 = ((($1)) + 16|0);
    HEAPF64[$237>>3] = $236;
    break L93;
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $238 = $$1272 & 7;
 STACKTOP = sp;return ($238|0);
}
function _lrintf($0) {
 $0 = Math_fround($0);
 var $1 = Math_fround(0), $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (Math_fround(+(_rintf((+$0)))));
 $2 = (~~(($1)));
 return ($2|0);
}
function _printf($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 HEAP32[$1>>2] = $varargs;
 $2 = HEAP32[9245]|0;
 $3 = (_vfprintf($2,$0,$1)|0);
 STACKTOP = sp;return ($3|0);
}
function _cos($0) {
 $0 = +$0;
 var $$0 = 0.0, $1 = 0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0;
 var $27 = 0.0, $28 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $3 & 2147483647;
 $5 = ($4>>>0)<(1072243196);
 L1: do {
  if ($5) {
   $6 = ($4>>>0)<(1044816030);
   if ($6) {
    $$0 = 1.0;
   } else {
    $7 = (+___cos($0,0.0));
    $$0 = $7;
   }
  } else {
   $8 = ($4>>>0)>(2146435071);
   if ($8) {
    $9 = $0 - $0;
    $$0 = $9;
    break;
   }
   $10 = (___rem_pio2($0,$1)|0);
   $trunc = $10&255;
   $trunc$clear = $trunc & 3;
   switch ($trunc$clear<<24>>24) {
   case 0:  {
    $11 = +HEAPF64[$1>>3];
    $12 = ((($1)) + 8|0);
    $13 = +HEAPF64[$12>>3];
    $14 = (+___cos($11,$13));
    $$0 = $14;
    break L1;
    break;
   }
   case 1:  {
    $15 = +HEAPF64[$1>>3];
    $16 = ((($1)) + 8|0);
    $17 = +HEAPF64[$16>>3];
    $18 = (+___sin($15,$17,1));
    $19 = - $18;
    $$0 = $19;
    break L1;
    break;
   }
   case 2:  {
    $20 = +HEAPF64[$1>>3];
    $21 = ((($1)) + 8|0);
    $22 = +HEAPF64[$21>>3];
    $23 = (+___cos($20,$22));
    $24 = - $23;
    $$0 = $24;
    break L1;
    break;
   }
   default: {
    $25 = +HEAPF64[$1>>3];
    $26 = ((($1)) + 8|0);
    $27 = +HEAPF64[$26>>3];
    $28 = (+___sin($25,$27,1));
    $$0 = $28;
    break L1;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function _exp($0) {
 $0 = +$0;
 var $$0 = 0.0, $$055 = 0.0, $$056 = 0, $$057 = 0.0, $$058 = 0.0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0.0;
 var $22 = 0.0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0;
 var $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 $3 = (_bitshift64Lshr(($1|0),($2|0),63)|0);
 $4 = tempRet0;
 $5 = $2 & 2147483647;
 $6 = ($5>>>0)>(1082532650);
 do {
  if ($6) {
   $7 = $2 & 2147483647;
   $8 = ($7>>>0)>(2146435072);
   $9 = ($1>>>0)>(0);
   $10 = ($7|0)==(2146435072);
   $11 = $10 & $9;
   $12 = $8 | $11;
   if ($12) {
    $$0 = $0;
    return (+$$0);
   }
   $13 = $0 > 709.78271289338397;
   if ($13) {
    $14 = $0 * 8.9884656743115795E+307;
    $$0 = $14;
    return (+$$0);
   } else {
    $15 = $0 < -708.39641853226408;
    $16 = $0 < -745.13321910194111;
    $or$cond = $15 & $16;
    if ($or$cond) {
     $$0 = 0.0;
    } else {
     label = 8;
     break;
    }
    return (+$$0);
   }
  } else {
   $17 = ($5>>>0)>(1071001154);
   if ($17) {
    $18 = ($5>>>0)>(1072734897);
    if ($18) {
     label = 8;
     break;
    }
    $24 = $3 ^ 1;
    $25 = (($24) - ($3))|0;
    $$056 = $25;
    label = 10;
    break;
   }
   $31 = ($5>>>0)>(1043333120);
   if ($31) {
    $$055 = $0;$$057 = $0;$$058 = 0.0;$$1 = 0;
   } else {
    $32 = $0 + 1.0;
    $$0 = $32;
    return (+$$0);
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $19 = $0 * 1.4426950408889634;
  $20 = (36272 + ($3<<3)|0);
  $21 = +HEAPF64[$20>>3];
  $22 = $19 + $21;
  $23 = (~~(($22)));
  $$056 = $23;
  label = 10;
 }
 if ((label|0) == 10) {
  $26 = (+($$056|0));
  $27 = $26 * 0.69314718036912382;
  $28 = $0 - $27;
  $29 = $26 * 1.9082149292705877E-10;
  $30 = $28 - $29;
  $$055 = $30;$$057 = $28;$$058 = $29;$$1 = $$056;
 }
 $33 = $$055 * $$055;
 $34 = $33 * 4.1381367970572385E-8;
 $35 = $34 + -1.6533902205465252E-6;
 $36 = $33 * $35;
 $37 = $36 + 6.6137563214379344E-5;
 $38 = $33 * $37;
 $39 = $38 + -0.0027777777777015593;
 $40 = $33 * $39;
 $41 = $40 + 0.16666666666666602;
 $42 = $33 * $41;
 $43 = $$055 - $42;
 $44 = $$055 * $43;
 $45 = 2.0 - $43;
 $46 = $44 / $45;
 $47 = $46 - $$058;
 $48 = $$057 + $47;
 $49 = $48 + 1.0;
 $50 = ($$1|0)==(0);
 if ($50) {
  $$0 = $49;
  return (+$$0);
 }
 $51 = (+_scalbn($49,$$1));
 $$0 = $51;
 return (+$$0);
}
function _log($0) {
 $0 = +$0;
 var $$0 = 0, $$071 = 0, $$072 = 0.0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0;
 var $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0.0, $or$cond = 0, $or$cond76 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 $3 = ($2>>>0)<(1048576);
 $4 = ($2|0)<(0);
 $or$cond = $4 | $3;
 do {
  if ($or$cond) {
   $5 = $2 & 2147483647;
   $6 = ($1|0)==(0);
   $7 = ($5|0)==(0);
   $8 = $6 & $7;
   if ($8) {
    $9 = $0 * $0;
    $10 = -1.0 / $9;
    $$072 = $10;
    return (+$$072);
   }
   if (!($4)) {
    $13 = $0 * 18014398509481984.0;
    HEAPF64[tempDoublePtr>>3] = $13;$14 = HEAP32[tempDoublePtr>>2]|0;
    $15 = HEAP32[tempDoublePtr+4>>2]|0;
    $$0 = -1077;$$071 = $15;$27 = 0;$28 = $14;
    break;
   }
   $11 = $0 - $0;
   $12 = $11 / 0.0;
   $$072 = $12;
   return (+$$072);
  } else {
   $16 = ($2>>>0)>(2146435071);
   if ($16) {
    $$072 = $0;
    return (+$$072);
   }
   $17 = ($2|0)==(1072693248);
   $18 = ($1|0)==(0);
   $19 = (0)==(0);
   $20 = $18 & $19;
   $or$cond76 = $20 & $17;
   if ($or$cond76) {
    $$072 = 0.0;
    return (+$$072);
   } else {
    $$0 = -1023;$$071 = $2;$27 = 0;$28 = $1;
   }
  }
 } while(0);
 $21 = (($$071) + 614242)|0;
 $22 = $21 >>> 20;
 $23 = (($$0) + ($22))|0;
 $24 = $21 & 1048575;
 $25 = (($24) + 1072079006)|0;
 $26 = $25 | $27;
 HEAP32[tempDoublePtr>>2] = $28;HEAP32[tempDoublePtr+4>>2] = $26;$29 = +HEAPF64[tempDoublePtr>>3];
 $30 = $29 + -1.0;
 $31 = $30 * 0.5;
 $32 = $30 * $31;
 $33 = $30 + 2.0;
 $34 = $30 / $33;
 $35 = $34 * $34;
 $36 = $35 * $35;
 $37 = $36 * 0.15313837699209373;
 $38 = $37 + 0.22222198432149784;
 $39 = $36 * $38;
 $40 = $39 + 0.39999999999409419;
 $41 = $36 * $40;
 $42 = $36 * 0.14798198605116586;
 $43 = $42 + 0.1818357216161805;
 $44 = $36 * $43;
 $45 = $44 + 0.28571428743662391;
 $46 = $36 * $45;
 $47 = $46 + 0.66666666666667351;
 $48 = $35 * $47;
 $49 = $41 + $48;
 $50 = (+($23|0));
 $51 = $32 + $49;
 $52 = $34 * $51;
 $53 = $50 * 1.9082149292705877E-10;
 $54 = $53 + $52;
 $55 = $54 - $32;
 $56 = $30 + $55;
 $57 = $50 * 0.69314718036912382;
 $58 = $57 + $56;
 $$072 = $58;
 return (+$$072);
}
function _pow($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$ = 0.0, $$0 = 0.0, $$0385 = 0.0, $$0386 = 0.0, $$0387 = 0.0, $$0388 = 0.0, $$0390 = 0.0, $$0391 = 0, $$0392 = 0, $$0392399 = 0, $$0392400 = 0, $$0396 = 0, $$12 = 0.0, $$1394 = 0, $$1397 = 0, $$2 = 0.0, $$3 = 0, $$pre = 0.0, $$sink = 0.0, $$sink410 = 0.0;
 var $10 = 0, $100 = 0.0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0.0;
 var $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0.0;
 var $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0, $163 = 0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0;
 var $172 = 0.0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0.0, $180 = 0.0, $181 = 0.0, $182 = 0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0;
 var $190 = 0.0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0.0, $199 = 0.0, $2 = 0, $20 = 0, $200 = 0.0, $201 = 0.0, $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0, $216 = 0.0, $217 = 0.0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0.0, $224 = 0.0, $225 = 0.0;
 var $226 = 0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0.0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0.0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0.0, $252 = 0.0, $253 = 0.0, $254 = 0.0, $255 = 0.0, $256 = 0.0, $257 = 0.0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0.0, $261 = 0.0;
 var $262 = 0.0, $263 = 0.0, $264 = 0.0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0.0, $269 = 0.0, $27 = 0, $270 = 0.0, $271 = 0.0, $272 = 0.0, $273 = 0.0, $274 = 0.0, $275 = 0.0, $276 = 0.0, $277 = 0.0, $278 = 0.0, $279 = 0.0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0.0, $286 = 0.0, $287 = 0.0, $288 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0.0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0;
 var $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $not$ = 0, $or$cond = 0, $or$cond14 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $spec$select = 0.0, $spec$select398 = 0, $spec$select402 = 0, $spec$select403 = 0, $spec$select404 = 0.0, $spec$select405 = 0, $spec$select406 = 0;
 var $spec$select407 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $1;$4 = HEAP32[tempDoublePtr>>2]|0;
 $5 = HEAP32[tempDoublePtr+4>>2]|0;
 $6 = $3 & 2147483647;
 $7 = $5 & 2147483647;
 $8 = $7 | $4;
 $9 = ($8|0)==(0);
 if ($9) {
  $$0 = 1.0;
  return (+$$0);
 }
 $10 = ($3|0)==(1072693248);
 $11 = ($2|0)==(0);
 $or$cond = $11 & $10;
 if ($or$cond) {
  $$0 = 1.0;
  return (+$$0);
 }
 $12 = ($6>>>0)>(2146435072);
 if (!($12)) {
  $13 = ($6|0)==(2146435072);
  $14 = ($2|0)!=(0);
  $or$cond3 = $14 & $13;
  $15 = ($7>>>0)>(2146435072);
  $or$cond5 = $or$cond3 | $15;
  if (!($or$cond5)) {
   $16 = ($7|0)==(2146435072);
   $17 = ($4|0)!=(0);
   $or$cond7 = $17 & $16;
   if (!($or$cond7)) {
    $19 = ($3|0)<(0);
    do {
     if ($19) {
      $20 = ($7>>>0)>(1128267775);
      if ($20) {
       $$0392 = 2;
       label = 14;
      } else {
       $21 = ($7>>>0)>(1072693247);
       if ($21) {
        $22 = $7 >>> 20;
        $23 = ($7>>>0)>(1094713343);
        if ($23) {
         $24 = (1075 - ($22))|0;
         $25 = $4 >>> $24;
         $26 = $25 << $24;
         $27 = ($26|0)==($4|0);
         $28 = $25 & 1;
         $29 = (2 - ($28))|0;
         $spec$select402 = $27 ? $29 : 0;
         $$0392 = $spec$select402;
         label = 14;
         break;
        }
        $30 = ($4|0)==(0);
        if ($30) {
         $31 = (1043 - ($22))|0;
         $32 = $7 >>> $31;
         $33 = $32 << $31;
         $34 = ($33|0)==($7|0);
         $35 = $32 & 1;
         $36 = (2 - ($35))|0;
         $spec$select403 = $34 ? $36 : 0;
         $$0392400 = $spec$select403;
         label = 15;
        } else {
         $$0392399 = 0;
        }
       } else {
        $$0392 = 0;
        label = 14;
       }
      }
     } else {
      $$0392 = 0;
      label = 14;
     }
    } while(0);
    if ((label|0) == 14) {
     $37 = ($4|0)==(0);
     if ($37) {
      $$0392400 = $$0392;
      label = 15;
     } else {
      $$0392399 = $$0392;
     }
    }
    if ((label|0) == 15) {
     if ($16) {
      $38 = (($6) + -1072693248)|0;
      $39 = $38 | $2;
      $40 = ($39|0)==(0);
      if ($40) {
       $$0 = 1.0;
       return (+$$0);
      }
      $41 = ($6>>>0)>(1072693247);
      $42 = ($5|0)>(-1);
      if ($41) {
       $43 = $42 ? $1 : 0.0;
       $$0 = $43;
       return (+$$0);
      } else {
       $44 = - $1;
       $45 = $42 ? 0.0 : $44;
       $$0 = $45;
       return (+$$0);
      }
     }
     $46 = ($7|0)==(1072693248);
     if ($46) {
      $47 = ($5|0)>(-1);
      $48 = 1.0 / $0;
      $spec$select404 = $47 ? $0 : $48;
      return (+$spec$select404);
     }
     $49 = ($5|0)==(1073741824);
     if ($49) {
      $50 = $0 * $0;
      $$0 = $50;
      return (+$$0);
     }
     $51 = ($5|0)==(1071644672);
     $52 = ($3|0)>(-1);
     $or$cond14 = $52 & $51;
     if ($or$cond14) {
      $53 = (+Math_sqrt((+$0)));
      $$0 = $53;
      return (+$$0);
     } else {
      $$0392399 = $$0392400;
     }
    }
    $54 = (+Math_abs((+$0)));
    if ($11) {
     $55 = ($6|0)==(0);
     $56 = $6 | 1073741824;
     $57 = ($56|0)==(2146435072);
     $58 = $55 | $57;
     if ($58) {
      $59 = ($5|0)<(0);
      $60 = 1.0 / $54;
      $$0385 = $59 ? $60 : $54;
      if (!($19)) {
       $$0 = $$0385;
       return (+$$0);
      }
      $61 = (($6) + -1072693248)|0;
      $62 = $$0392399 | $61;
      $63 = ($62|0)==(0);
      if (!($63)) {
       $66 = ($$0392399|0)==(1);
       $67 = - $$0385;
       $spec$select = $66 ? $67 : $$0385;
       return (+$spec$select);
      }
      $64 = $$0385 - $$0385;
      $65 = $64 / $64;
      $$0 = $65;
      return (+$$0);
     }
    }
    L55: do {
     if ($19) {
      switch ($$0392399|0) {
      case 0:  {
       break;
      }
      case 1:  {
       $$0390 = -1.0;
       break L55;
       break;
      }
      default: {
       $$0390 = 1.0;
       break L55;
      }
      }
      $68 = $0 - $0;
      $69 = $68 / $68;
      $$0 = $69;
      return (+$$0);
     } else {
      $$0390 = 1.0;
     }
    } while(0);
    $70 = ($7>>>0)>(1105199104);
    do {
     if ($70) {
      $71 = ($7>>>0)>(1139802112);
      if ($71) {
       $72 = ($6>>>0)<(1072693248);
       if ($72) {
        $73 = ($5|0)<(0);
        $$ = $73 ? inf : 0.0;
        $$0 = $$;
        return (+$$0);
       } else {
        $74 = ($5|0)>(0);
        $$12 = $74 ? inf : 0.0;
        $$0 = $$12;
        return (+$$0);
       }
      }
      $75 = ($6>>>0)<(1072693247);
      if ($75) {
       $76 = ($5|0)<(0);
       $77 = $$0390 * 1.0000000000000001E+300;
       $78 = $77 * 1.0000000000000001E+300;
       $79 = $$0390 * 1.0E-300;
       $80 = $79 * 1.0E-300;
       $81 = $76 ? $78 : $80;
       $$0 = $81;
       return (+$$0);
      }
      $82 = ($6>>>0)>(1072693248);
      if (!($82)) {
       $89 = $54 + -1.0;
       $90 = $89 * $89;
       $91 = $89 * 0.25;
       $92 = 0.33333333333333331 - $91;
       $93 = $89 * $92;
       $94 = 0.5 - $93;
       $95 = $90 * $94;
       $96 = $89 * 1.4426950216293335;
       $97 = $89 * 1.9259629911266175E-8;
       $98 = $95 * 1.4426950408889634;
       $99 = $97 - $98;
       $100 = $96 + $99;
       HEAPF64[tempDoublePtr>>3] = $100;$101 = HEAP32[tempDoublePtr>>2]|0;
       $102 = HEAP32[tempDoublePtr+4>>2]|0;
       HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $102;$103 = +HEAPF64[tempDoublePtr>>3];
       $104 = $103 - $96;
       $$0388 = $103;$$sink = $99;$$sink410 = $104;
       break;
      }
      $83 = ($5|0)>(0);
      $84 = $$0390 * 1.0000000000000001E+300;
      $85 = $84 * 1.0000000000000001E+300;
      $86 = $$0390 * 1.0E-300;
      $87 = $86 * 1.0E-300;
      $88 = $83 ? $85 : $87;
      $$0 = $88;
      return (+$$0);
     } else {
      $105 = ($6>>>0)<(1048576);
      $106 = $54 * 9007199254740992.0;
      HEAPF64[tempDoublePtr>>3] = $106;$107 = HEAP32[tempDoublePtr>>2]|0;
      $108 = HEAP32[tempDoublePtr+4>>2]|0;
      $$0396 = $105 ? $108 : $6;
      $$0386 = $105 ? $106 : $54;
      $109 = $$0396 >> 20;
      $110 = $105 ? -1076 : -1023;
      $111 = (($110) + ($109))|0;
      $112 = $$0396 & 1048575;
      $113 = $112 | 1072693248;
      $114 = ($112>>>0)<(235663);
      if ($114) {
       $$0391 = 0;$$1394 = $111;$$1397 = $113;
      } else {
       $115 = ($112>>>0)<(767610);
       $116 = (($113) + -1048576)|0;
       $spec$select405 = $115 ? $113 : $116;
       $not$ = $115 ^ 1;
       $117 = $not$&1;
       $spec$select406 = (($111) + ($117))|0;
       $spec$select407 = $115&1;
       $$0391 = $spec$select407;$$1394 = $spec$select406;$$1397 = $spec$select405;
      }
      HEAPF64[tempDoublePtr>>3] = $$0386;$118 = HEAP32[tempDoublePtr>>2]|0;
      $119 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = $118;HEAP32[tempDoublePtr+4>>2] = $$1397;$120 = +HEAPF64[tempDoublePtr>>3];
      $121 = (36288 + ($$0391<<3)|0);
      $122 = +HEAPF64[$121>>3];
      $123 = $120 - $122;
      $124 = $122 + $120;
      $125 = 1.0 / $124;
      $126 = $123 * $125;
      HEAPF64[tempDoublePtr>>3] = $126;$127 = HEAP32[tempDoublePtr>>2]|0;
      $128 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $128;$129 = +HEAPF64[tempDoublePtr>>3];
      $130 = $$1397 >> 1;
      $131 = $130 | 536870912;
      $132 = (($131) + 524288)|0;
      $133 = $$0391 << 18;
      $134 = (($132) + ($133))|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $134;$135 = +HEAPF64[tempDoublePtr>>3];
      $136 = $135 - $122;
      $137 = $120 - $136;
      $138 = $135 * $129;
      $139 = $123 - $138;
      $140 = $137 * $129;
      $141 = $139 - $140;
      $142 = $125 * $141;
      $143 = $126 * $126;
      $144 = $143 * $143;
      $145 = $143 * 0.20697501780033842;
      $146 = $145 + 0.23066074577556175;
      $147 = $143 * $146;
      $148 = $147 + 0.27272812380853401;
      $149 = $143 * $148;
      $150 = $149 + 0.33333332981837743;
      $151 = $143 * $150;
      $152 = $151 + 0.42857142857855018;
      $153 = $143 * $152;
      $154 = $153 + 0.59999999999999465;
      $155 = $144 * $154;
      $156 = $126 + $129;
      $157 = $156 * $142;
      $158 = $157 + $155;
      $159 = $129 * $129;
      $160 = $159 + 3.0;
      $161 = $160 + $158;
      HEAPF64[tempDoublePtr>>3] = $161;$162 = HEAP32[tempDoublePtr>>2]|0;
      $163 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $163;$164 = +HEAPF64[tempDoublePtr>>3];
      $165 = $164 + -3.0;
      $166 = $165 - $159;
      $167 = $158 - $166;
      $168 = $129 * $164;
      $169 = $142 * $164;
      $170 = $126 * $167;
      $171 = $169 + $170;
      $172 = $168 + $171;
      HEAPF64[tempDoublePtr>>3] = $172;$173 = HEAP32[tempDoublePtr>>2]|0;
      $174 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $174;$175 = +HEAPF64[tempDoublePtr>>3];
      $176 = $175 - $168;
      $177 = $171 - $176;
      $178 = $175 * 0.96179670095443726;
      $179 = $175 * 7.0284616509527583E-9;
      $180 = $177 * 0.96179669392597555;
      $181 = $180 - $179;
      $182 = (36304 + ($$0391<<3)|0);
      $183 = +HEAPF64[$182>>3];
      $184 = $183 + $181;
      $185 = (+($$1394|0));
      $186 = $178 + $184;
      $187 = (36320 + ($$0391<<3)|0);
      $188 = +HEAPF64[$187>>3];
      $189 = $188 + $186;
      $190 = $189 + $185;
      HEAPF64[tempDoublePtr>>3] = $190;$191 = HEAP32[tempDoublePtr>>2]|0;
      $192 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $192;$193 = +HEAPF64[tempDoublePtr>>3];
      $194 = $193 - $185;
      $195 = $194 - $188;
      $196 = $195 - $178;
      $$0388 = $193;$$sink = $184;$$sink410 = $196;
     }
    } while(0);
    $197 = $$sink - $$sink410;
    HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $5;$198 = +HEAPF64[tempDoublePtr>>3];
    $199 = $1 - $198;
    $200 = $199 * $$0388;
    $201 = $197 * $1;
    $202 = $201 + $200;
    $203 = $$0388 * $198;
    $204 = $203 + $202;
    HEAPF64[tempDoublePtr>>3] = $204;$205 = HEAP32[tempDoublePtr>>2]|0;
    $206 = HEAP32[tempDoublePtr+4>>2]|0;
    $207 = ($206|0)>(1083179007);
    if ($207) {
     $208 = (($206) + -1083179008)|0;
     $209 = $208 | $205;
     $210 = ($209|0)==(0);
     if (!($210)) {
      $211 = $$0390 * 1.0000000000000001E+300;
      $212 = $211 * 1.0000000000000001E+300;
      $$0 = $212;
      return (+$$0);
     }
     $213 = $202 + 8.0085662595372941E-17;
     $214 = $204 - $203;
     $215 = $213 > $214;
     if ($215) {
      $216 = $$0390 * 1.0000000000000001E+300;
      $217 = $216 * 1.0000000000000001E+300;
      $$0 = $217;
      return (+$$0);
     }
    } else {
     $218 = $206 & 2147482624;
     $219 = ($218>>>0)>(1083231231);
     if ($219) {
      $220 = (($206) + 1064252416)|0;
      $221 = $220 | $205;
      $222 = ($221|0)==(0);
      if (!($222)) {
       $223 = $$0390 * 1.0E-300;
       $224 = $223 * 1.0E-300;
       $$0 = $224;
       return (+$$0);
      }
      $225 = $204 - $203;
      $226 = !($202 <= $225);
      if (!($226)) {
       $227 = $$0390 * 1.0E-300;
       $228 = $227 * 1.0E-300;
       $$0 = $228;
       return (+$$0);
      }
     }
    }
    $229 = $206 & 2147483647;
    $230 = ($229>>>0)>(1071644672);
    if ($230) {
     $231 = $229 >>> 20;
     $232 = (($231) + -1022)|0;
     $233 = 1048576 >>> $232;
     $234 = (($233) + ($206))|0;
     $235 = $234 >>> 20;
     $236 = $235 & 2047;
     $237 = (($236) + -1023)|0;
     $238 = -1048576 >> $237;
     $239 = $238 & $234;
     HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $239;$240 = +HEAPF64[tempDoublePtr>>3];
     $241 = $234 & 1048575;
     $242 = $241 | 1048576;
     $243 = (1043 - ($236))|0;
     $244 = $242 >>> $243;
     $245 = ($206|0)<(0);
     $246 = (0 - ($244))|0;
     $spec$select398 = $245 ? $246 : $244;
     $247 = $203 - $240;
     $$pre = $202 + $247;
     HEAPF64[tempDoublePtr>>3] = $$pre;$248 = HEAP32[tempDoublePtr>>2]|0;
     $249 = HEAP32[tempDoublePtr+4>>2]|0;
     $$0387 = $247;$$3 = $spec$select398;$250 = $249;$288 = $248;
    } else {
     $$0387 = $203;$$3 = 0;$250 = $206;$288 = $205;
    }
    HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $250;$251 = +HEAPF64[tempDoublePtr>>3];
    $252 = $251 * 0.69314718246459961;
    $253 = $251 - $$0387;
    $254 = $202 - $253;
    $255 = $254 * 0.69314718055994529;
    $256 = $251 * 1.904654299957768E-9;
    $257 = $255 - $256;
    $258 = $252 + $257;
    $259 = $258 - $252;
    $260 = $257 - $259;
    $261 = $258 * $258;
    $262 = $261 * 4.1381367970572385E-8;
    $263 = $262 + -1.6533902205465252E-6;
    $264 = $261 * $263;
    $265 = $264 + 6.6137563214379344E-5;
    $266 = $261 * $265;
    $267 = $266 + -0.0027777777777015593;
    $268 = $261 * $267;
    $269 = $268 + 0.16666666666666602;
    $270 = $261 * $269;
    $271 = $258 - $270;
    $272 = $258 * $271;
    $273 = $271 + -2.0;
    $274 = $272 / $273;
    $275 = $258 * $260;
    $276 = $260 + $275;
    $277 = $274 - $276;
    $278 = $277 - $258;
    $279 = 1.0 - $278;
    HEAPF64[tempDoublePtr>>3] = $279;$280 = HEAP32[tempDoublePtr>>2]|0;
    $281 = HEAP32[tempDoublePtr+4>>2]|0;
    $282 = $$3 << 20;
    $283 = (($282) + ($281))|0;
    $284 = ($283|0)<(1048576);
    if ($284) {
     $285 = (+_scalbn($279,$$3));
     $$2 = $285;
    } else {
     HEAP32[tempDoublePtr>>2] = $280;HEAP32[tempDoublePtr+4>>2] = $283;$286 = +HEAPF64[tempDoublePtr>>3];
     $$2 = $286;
    }
    $287 = $$0390 * $$2;
    $$0 = $287;
    return (+$$0);
   }
  }
 }
 $18 = $0 + $1;
 $$0 = $18;
 return (+$$0);
}
function runPostSets() {
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = tempRet0;
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _round(d) {
    d = +d;
    return d >= +0 ? +Math_floor(d + +0.5) : +Math_ceil(d - +0.5);
}
function _rintf(f) {
    f = +f;
    return (f - +Math_floor(f) != .5) ? +_round(f) : +_round(f / +2) * +2;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        ___setErrNo(12);
        return -1;
      }
    }
    return oldDynamicTop|0;
}

  
//X = ftCall_X;


//ii = ftCall_ii;


//iiii = ftCall_iiii;


//viiiiiii = ftCall_viiiiiii;

function b1() {
 ; nullFunc_X(0);return +0;
}
function b2() {
 ; nullFunc_X(6);return +0;
}
function b3() {
 ; nullFunc_X(7);return +0;
}




// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_X = [b1,___stdio_close,___stdio_write,___stdio_seek,___stdout_write,_downmix_int,b2,b3];




  return { _MakePcmStream: _MakePcmStream, _OpusInitEncoder: _OpusInitEncoder, _PCMEncoderData: _PCMEncoderData, ___errno_location: ___errno_location, ___muldi3: ___muldi3, ___udivdi3: ___udivdi3, _bitshift64Ashr: _bitshift64Ashr, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _emscripten_replace_memory: _emscripten_replace_memory, _fflush: _fflush, _free: _free, _i64Add: _i64Add, _i64Subtract: _i64Subtract, _init: _init, _llvm_bswap_i32: _llvm_bswap_i32, _malloc: _malloc, _memcpy: _memcpy, _memmove: _memmove, _memset: _memset, _rintf: _rintf, _sbrk: _sbrk, _setSpeed: _setSpeed, establishStackSpace: establishStackSpace, getTempRet0: getTempRet0, runPostSets: runPostSets, setTempRet0: setTempRet0, setThrew: setThrew, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
;